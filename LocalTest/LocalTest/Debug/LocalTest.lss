
LocalTest.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000008  00800100  00000afc  00000b90  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000afc  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000004  00800108  00800108  00000b98  2**0
                  ALLOC
  3 .stab         00003540  00000000  00000000  00000b98  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00001008  00000000  00000000  000040d8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      0000002f  00000000  00000000  000050e0  2**0
                  CONTENTS, READONLY
  6 .debug_aranges 000001e0  00000000  00000000  0000510f  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00001e18  00000000  00000000  000052ef  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000007d0  00000000  00000000  00007107  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00000c83  00000000  00000000  000078d7  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  000005f0  00000000  00000000  0000855c  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    000006e1  00000000  00000000  00008b4c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    0000254c  00000000  00000000  0000922d  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 000001f8  00000000  00000000  0000b779  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
	y[2] = blobs[7];
	y[3] = blobs[10];
	return 1;
} 

unsigned char determine_blobs() {
   0:	0c 94 b0 00 	jmp	0x160	; 0x160 <__ctors_end>
   4:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>
   8:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>
   c:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>
  10:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>
  14:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>
  18:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>
  1c:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>
  20:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>
  24:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>
  28:	0c 94 fa 01 	jmp	0x3f4	; 0x3f4 <__vector_10>
  2c:	0c 94 38 02 	jmp	0x470	; 0x470 <__vector_11>
  30:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>
	int exit = 0;
	while (exit == 0) {
		getData(x, y);
		if (x[0] < 1023 && x[1] < 1023 && x[2] < 1023 && x[3] < 1023) {
  34:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>
  38:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>
  3c:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>
  40:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>
  44:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>
  48:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>
  4c:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>
} 

unsigned char determine_blobs() {
	int exit = 0;
	while (exit == 0) {
		getData(x, y);
  50:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>
  54:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>
  58:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>
		if (x[0] < 1023 && x[1] < 1023 && x[2] < 1023 && x[3] < 1023) {
  5c:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>
  60:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>
  64:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>
  68:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>
  6c:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>
  70:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>
  74:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>
  78:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>
  7c:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>
  80:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>
  84:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>
  88:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>
  8c:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>
  90:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>
  94:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>
  98:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>
  9c:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>
  a0:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>
  a4:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>
  a8:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>

000000ac <descriptor_list>:
  ac:	00 01 00 00 e0 00 12 00 02 00 00 f2 00 43 00 03     .............C..
  bc:	00 00 35 01 04 01 03 09 04 39 01 12 02 03 09 04     ..5......9......
  cc:	4d 01 06 03 03 09 04 55 01 08                       M......U..

000000d6 <endpoint_config_table>:
  d6:	00 01 c1 12 01 80 36 01 81 36                       ......6..6

000000e0 <device_descriptor>:
  e0:	12 01 00 02 02 00 00 10 c0 16 7a 04 00 01 01 02     ..........z.....
  f0:	03 01                                               ..

000000f2 <config1_descriptor>:
  f2:	09 02 43 00 02 01 00 c0 32 09 04 00 00 01 02 02     ..C.....2.......
 102:	01 00 05 24 00 10 01 05 24 01 01 01 04 24 02 06     ...$....$....$..
			exit = 1;
			for (int i = 0; i < 4; i++) {
				for (int j = i; j < 4; j++) {
					dist = sqrt((x[i]-x[j])*(x[i]-x[j])+(y[i]-y[j])*(y[i]-y[j]));
 112:	05 24 06 00 01 07 05 82 03 10 00 40 09 04 01 00     .$.........@....
 122:	02 0a 00 00 00 07 05 03 02 40 00 00 07 05 84 02     .........@......
 132:	40 00 00                                            @..

00000135 <string0>:
 135:	04 03 09 04                                         ....

00000139 <string1>:
 139:	12 03 4a 00 2e 00 20 00 46 00 69 00 65 00 6e 00     ..J... .F.i.e.n.
 149:	65 00 00 00                                         e...

0000014d <string2>:
 14d:	06 03 4d 00 32 00 00 00                             ..M.2...

00000155 <string3>:
 155:	08 03 34 00 31 00 30 00 00 00 00                    ..4.1.0....

00000160 <__ctors_end>:
 160:	11 24       	eor	r1, r1
 162:	1f be       	out	0x3f, r1	; 63
 164:	cf ef       	ldi	r28, 0xFF	; 255
					if (dist > distmax) {
 166:	da e0       	ldi	r29, 0x0A	; 10
 168:	de bf       	out	0x3e, r29	; 62
 16a:	cd bf       	out	0x3d, r28	; 61

0000016c <__do_copy_data>:
 16c:	11 e0       	ldi	r17, 0x01	; 1
 16e:	a0 e0       	ldi	r26, 0x00	; 0
 170:	b1 e0       	ldi	r27, 0x01	; 1
 172:	ec ef       	ldi	r30, 0xFC	; 252
 174:	fa e0       	ldi	r31, 0x0A	; 10
 176:	02 c0       	rjmp	.+4      	; 0x17c <__do_copy_data+0x10>
 178:	05 90       	lpm	r0, Z+
 17a:	0d 92       	st	X+, r0
 17c:	a8 30       	cpi	r26, 0x08	; 8
						distmax = dist;
						far1 = i;
						far2 = j;
						dcenter = dist / 2.0;
 17e:	b1 07       	cpc	r27, r17
 180:	d9 f7       	brne	.-10     	; 0x178 <__do_copy_data+0xc>

00000182 <__do_clear_bss>:
 182:	21 e0       	ldi	r18, 0x01	; 1
 184:	a8 e0       	ldi	r26, 0x08	; 8
 186:	b1 e0       	ldi	r27, 0x01	; 1
 188:	01 c0       	rjmp	.+2      	; 0x18c <.do_clear_bss_start>

0000018a <.do_clear_bss_loop>:
 18a:	1d 92       	st	X+, r1

0000018c <.do_clear_bss_start>:
 18c:	ac 30       	cpi	r26, 0x0C	; 12
 18e:	b2 07       	cpc	r27, r18
 190:	e1 f7       	brne	.-8      	; 0x18a <.do_clear_bss_loop>
 192:	0e 94 cf 00 	call	0x19e	; 0x19e <main>
 196:	0c 94 7c 05 	jmp	0xaf8	; 0xaf8 <_exit>

0000019a <__bad_interrupt>:
				for (int j = i; j < 4; j++) {
					dist = sqrt((x[i]-x[j])*(x[i]-x[j])+(y[i]-y[j])*(y[i]-y[j]));
					if (dist > distmax) {
						distmax = dist;
						far1 = i;
						far2 = j;
 19a:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000019e <main>:
 19e:	cf 93       	push	r28
 1a0:	df 93       	push	r29
			for (int i = 0; i < 4; i++) {
				for (int j = i; j < 4; j++) {
					dist = sqrt((x[i]-x[j])*(x[i]-x[j])+(y[i]-y[j])*(y[i]-y[j]));
					if (dist > distmax) {
						distmax = dist;
						far1 = i;
 1a2:	cd b7       	in	r28, 0x3d	; 61
 1a4:	de b7       	in	r29, 0x3e	; 62
			exit = 1;
			for (int i = 0; i < 4; i++) {
				for (int j = i; j < 4; j++) {
					dist = sqrt((x[i]-x[j])*(x[i]-x[j])+(y[i]-y[j])*(y[i]-y[j]));
					if (dist > distmax) {
						distmax = dist;
 1a6:	68 97       	sbiw	r28, 0x18	; 24
 1a8:	0f b6       	in	r0, 0x3f	; 63
 1aa:	f8 94       	cli
 1ac:	de bf       	out	0x3e, r29	; 62
						far1 = i;
						far2 = j;
						dcenter = dist / 2.0;
					}
					if (dist < distmin) {
 1ae:	0f be       	out	0x3f, r0	; 63
 1b0:	cd bf       	out	0x3d, r28	; 61
 1b2:	fe 01       	movw	r30, r28
 1b4:	31 96       	adiw	r30, 0x01	; 1
 1b6:	88 e1       	ldi	r24, 0x18	; 24
 1b8:	df 01       	movw	r26, r30
 1ba:	1d 92       	st	X+, r1
 1bc:	8a 95       	dec	r24
 1be:	e9 f7       	brne	.-6      	; 0x1ba <main+0x1c>
 1c0:	6e 9a       	sbi	0x0d, 6	; 13
 1c2:	76 98       	cbi	0x0e, 6	; 14
 1c4:	6a 9a       	sbi	0x0d, 2	; 13
						distmin = dist;
						close1 = i;
						close2 = j;
 1c6:	72 98       	cbi	0x0e, 2	; 14
 1c8:	0e 94 2e 01 	call	0x25c	; 0x25c <m_bus_init>
 1cc:	0e 94 34 04 	call	0x868	; 0x868 <m_wii_open>
						far2 = j;
						dcenter = dist / 2.0;
					}
					if (dist < distmin) {
						distmin = dist;
						close1 = i;
 1d0:	0e 94 3f 01 	call	0x27e	; 0x27e <m_usb_init>
						far1 = i;
						far2 = j;
						dcenter = dist / 2.0;
					}
					if (dist < distmin) {
						distmin = dist;
 1d4:	0e 94 58 01 	call	0x2b0	; 0x2b0 <m_usb_isconnected>
 1d8:	88 23       	and	r24, r24
	while (exit == 0) {
		getData(x, y);
		if (x[0] < 1023 && x[1] < 1023 && x[2] < 1023 && x[3] < 1023) {
			exit = 1;
			for (int i = 0; i < 4; i++) {
				for (int j = i; j < 4; j++) {
 1da:	e1 f3       	breq	.-8      	; 0x1d4 <main+0x36>
 1dc:	6e 9a       	sbi	0x0d, 6	; 13
 1de:	76 9a       	sbi	0x0e, 6	; 14
 1e0:	6a 9a       	sbi	0x0d, 2	; 13
 1e2:	72 9a       	sbi	0x0e, 2	; 14
 1e4:	9e 01       	movw	r18, r28
 1e6:	2f 5f       	subi	r18, 0xFF	; 255
 1e8:	3f 4f       	sbci	r19, 0xFF	; 255
 1ea:	f9 01       	movw	r30, r18
 1ec:	80 e0       	ldi	r24, 0x00	; 0
	int exit = 0;
	while (exit == 0) {
		getData(x, y);
		if (x[0] < 1023 && x[1] < 1023 && x[2] < 1023 && x[3] < 1023) {
			exit = 1;
			for (int i = 0; i < 4; i++) {
 1ee:	90 e0       	ldi	r25, 0x00	; 0
 1f0:	01 96       	adiw	r24, 0x01	; 1
 1f2:	81 93       	st	Z+, r24
 1f4:	91 93       	st	Z+, r25
 1f6:	8c 30       	cpi	r24, 0x0C	; 12
 1f8:	91 05       	cpc	r25, r1
 1fa:	d1 f7       	brne	.-12     	; 0x1f0 <main+0x52>
 1fc:	7e 01       	movw	r14, r28
				for (int j = i; j < 4; j++) {
 1fe:	b9 e1       	ldi	r27, 0x19	; 25
 200:	eb 0e       	add	r14, r27
 202:	f1 1c       	adc	r15, r1
					dist = sqrt((x[i]-x[j])*(x[i]-x[j])+(y[i]-y[j])*(y[i]-y[j]));
 204:	c2 2e       	mov	r12, r18
 206:	d3 2e       	mov	r13, r19
 208:	6e 9a       	sbi	0x0d, 6	; 13
 20a:	76 98       	cbi	0x0e, 6	; 14
 20c:	6a 9a       	sbi	0x0d, 2	; 13
 20e:	72 9a       	sbi	0x0e, 2	; 14
 210:	6e 9a       	sbi	0x0d, 6	; 13
 212:	76 9a       	sbi	0x0e, 6	; 14
 214:	6a 9a       	sbi	0x0d, 2	; 13
 216:	72 98       	cbi	0x0e, 2	; 14
 218:	0e 94 79 01 	call	0x2f2	; 0x2f2 <m_usb_rx_available>
 21c:	88 23       	and	r24, r24
 21e:	e1 f3       	breq	.-8      	; 0x218 <main+0x7a>
 220:	0e 94 5b 01 	call	0x2b6	; 0x2b6 <m_usb_rx_char>
 224:	18 2f       	mov	r17, r24
 226:	0e 94 88 01 	call	0x310	; 0x310 <m_usb_rx_flush>
	y[2] = blobs[7];
	y[3] = blobs[10];
	return 1;
} 

unsigned char determine_blobs() {
 22a:	11 30       	cpi	r17, 0x01	; 1
			for (int i = 0; i < 4; i++) {
				for (int j = i; j < 4; j++) {
					dist = sqrt((x[i]-x[j])*(x[i]-x[j])+(y[i]-y[j])*(y[i]-y[j]));
					if (dist > distmax) {
						distmax = dist;
						far1 = i;
 22c:	69 f7       	brne	.-38     	; 0x208 <main+0x6a>
 22e:	0c 2d       	mov	r16, r12
 230:	1d 2d       	mov	r17, r13
 232:	f8 01       	movw	r30, r16
 234:	80 81       	ld	r24, Z
 236:	91 81       	ldd	r25, Z+1	; 0x01
 238:	88 0f       	add	r24, r24
 23a:	99 1f       	adc	r25, r25
 23c:	d8 01       	movw	r26, r16
 23e:	8d 93       	st	X+, r24
 240:	9d 93       	st	X+, r25
 242:	8d 01       	movw	r16, r26
 244:	0e 94 c0 03 	call	0x780	; 0x780 <m_usb_tx_int>
 248:	89 e0       	ldi	r24, 0x09	; 9
 24a:	0e 94 9e 01 	call	0x33c	; 0x33c <m_usb_tx_char>
 24e:	0e 15       	cp	r16, r14
 250:	1f 05       	cpc	r17, r15
 252:	79 f7       	brne	.-34     	; 0x232 <main+0x94>
 254:	8a e0       	ldi	r24, 0x0A	; 10
 256:	0e 94 9e 01 	call	0x33c	; 0x33c <m_usb_tx_char>
 25a:	d6 cf       	rjmp	.-84     	; 0x208 <main+0x6a>

0000025c <m_bus_init>:
 25c:	58 9a       	sbi	0x0b, 0	; 11
 25e:	59 9a       	sbi	0x0b, 1	; 11
 260:	5a 9a       	sbi	0x0b, 2	; 11
 262:	8c e0       	ldi	r24, 0x0C	; 12
 264:	80 93 b8 00 	sts	0x00B8, r24
 268:	e9 e6       	ldi	r30, 0x69	; 105
 26a:	f0 e0       	ldi	r31, 0x00	; 0
 26c:	80 81       	ld	r24, Z
 26e:	80 62       	ori	r24, 0x20	; 32
 270:	80 83       	st	Z, r24
 272:	80 81       	ld	r24, Z
 274:	8f 7e       	andi	r24, 0xEF	; 239
 276:	80 83       	st	Z, r24
 278:	ea 9a       	sbi	0x1d, 2	; 29
 27a:	78 94       	sei
 27c:	08 95       	ret

0000027e <m_usb_init>:
 27e:	81 e0       	ldi	r24, 0x01	; 1
 280:	80 93 d7 00 	sts	0x00D7, r24
 284:	80 ea       	ldi	r24, 0xA0	; 160
 286:	80 93 d8 00 	sts	0x00D8, r24
 28a:	82 e1       	ldi	r24, 0x12	; 18
 28c:	89 bd       	out	0x29, r24	; 41
 28e:	09 b4       	in	r0, 0x29	; 41
 290:	00 fe       	sbrs	r0, 0
 292:	fd cf       	rjmp	.-6      	; 0x28e <m_usb_init+0x10>
 294:	80 e9       	ldi	r24, 0x90	; 144
 296:	80 93 d8 00 	sts	0x00D8, r24
 29a:	10 92 e0 00 	sts	0x00E0, r1
 29e:	10 92 09 01 	sts	0x0109, r1
 2a2:	10 92 0a 01 	sts	0x010A, r1
 2a6:	8c e0       	ldi	r24, 0x0C	; 12
 2a8:	80 93 e2 00 	sts	0x00E2, r24
 2ac:	78 94       	sei
 2ae:	08 95       	ret

000002b0 <m_usb_isconnected>:
 2b0:	80 91 09 01 	lds	r24, 0x0109
 2b4:	08 95       	ret

000002b6 <m_usb_rx_char>:
 2b6:	9f b7       	in	r25, 0x3f	; 63
 2b8:	f8 94       	cli
 2ba:	80 91 09 01 	lds	r24, 0x0109
 2be:	81 11       	cpse	r24, r1
 2c0:	03 c0       	rjmp	.+6      	; 0x2c8 <m_usb_rx_char+0x12>
 2c2:	9f bf       	out	0x3f, r25	; 63
 2c4:	8f ef       	ldi	r24, 0xFF	; 255
 2c6:	08 95       	ret
 2c8:	83 e0       	ldi	r24, 0x03	; 3
 2ca:	80 93 e9 00 	sts	0x00E9, r24
						close1 = i;
						close2 = j;
					}
				}
			}
			if (far1 == close1) {
 2ce:	80 91 e8 00 	lds	r24, 0x00E8
 2d2:	85 fd       	sbrc	r24, 5
 2d4:	03 c0       	rjmp	.+6      	; 0x2dc <m_usb_rx_char+0x26>
 2d6:	9f bf       	out	0x3f, r25	; 63
 2d8:	8f ef       	ldi	r24, 0xFF	; 255
 2da:	08 95       	ret
 2dc:	80 91 f1 00 	lds	r24, 0x00F1
 2e0:	20 91 e8 00 	lds	r18, 0x00E8
				top = far1;
 2e4:	25 fd       	sbrc	r18, 5
 2e6:	03 c0       	rjmp	.+6      	; 0x2ee <m_usb_rx_char+0x38>
 2e8:	2b e6       	ldi	r18, 0x6B	; 107
 2ea:	20 93 e8 00 	sts	0x00E8, r18
				bottom = far2;
 2ee:	9f bf       	out	0x3f, r25	; 63
 2f0:	08 95       	ret

000002f2 <m_usb_rx_available>:
 2f2:	9f b7       	in	r25, 0x3f	; 63
 2f4:	f8 94       	cli
 2f6:	80 91 09 01 	lds	r24, 0x0109
 2fa:	88 23       	and	r24, r24
				right = close2;
 2fc:	31 f0       	breq	.+12     	; 0x30a <m_usb_rx_available+0x18>
 2fe:	83 e0       	ldi	r24, 0x03	; 3
 300:	80 93 e9 00 	sts	0x00E9, r24
 304:	80 91 f2 00 	lds	r24, 0x00F2
 308:	01 c0       	rjmp	.+2      	; 0x30c <m_usb_rx_available+0x1a>
 30a:	80 e0       	ldi	r24, 0x00	; 0
				//left + top + bottom + right = 1 + 2 + 3 + 4 = 10
				left = 10 - top - bottom - right;
 30c:	9f bf       	out	0x3f, r25	; 63
 30e:	08 95       	ret

00000310 <m_usb_rx_flush>:
 310:	80 91 09 01 	lds	r24, 0x0109
 314:	88 23       	and	r24, r24
 316:	89 f0       	breq	.+34     	; 0x33a <m_usb_rx_flush+0x2a>
 318:	2f b7       	in	r18, 0x3f	; 63
 31a:	f8 94       	cli
 31c:	83 e0       	ldi	r24, 0x03	; 3
 31e:	80 93 e9 00 	sts	0x00E9, r24
 322:	80 91 e8 00 	lds	r24, 0x00E8
 326:	85 ff       	sbrs	r24, 5
 328:	07 c0       	rjmp	.+14     	; 0x338 <m_usb_rx_flush+0x28>
			}
			else if (far1 == close2) {
 32a:	e8 ee       	ldi	r30, 0xE8	; 232
 32c:	f0 e0       	ldi	r31, 0x00	; 0
 32e:	9b e6       	ldi	r25, 0x6B	; 107
 330:	90 83       	st	Z, r25
 332:	80 81       	ld	r24, Z
				top = far1;
 334:	85 fd       	sbrc	r24, 5
 336:	fc cf       	rjmp	.-8      	; 0x330 <m_usb_rx_flush+0x20>
 338:	2f bf       	out	0x3f, r18	; 63
 33a:	08 95       	ret

0000033c <m_usb_tx_char>:
				bottom = far2;
 33c:	cf 93       	push	r28
 33e:	df 93       	push	r29
 340:	90 91 09 01 	lds	r25, 0x0109
 344:	99 23       	and	r25, r25
 346:	09 f4       	brne	.+2      	; 0x34a <m_usb_tx_char+0xe>
 348:	4d c0       	rjmp	.+154    	; 0x3e4 <m_usb_tx_char+0xa8>
 34a:	9f b7       	in	r25, 0x3f	; 63
				right = close1;
 34c:	f8 94       	cli
 34e:	24 e0       	ldi	r18, 0x04	; 4
 350:	20 93 e9 00 	sts	0x00E9, r18
				left = 10 - top - bottom - right;
 354:	20 91 0b 01 	lds	r18, 0x010B
 358:	22 23       	and	r18, r18
 35a:	49 f0       	breq	.+18     	; 0x36e <m_usb_tx_char+0x32>
 35c:	20 91 e8 00 	lds	r18, 0x00E8
 360:	25 fd       	sbrc	r18, 5
 362:	03 c0       	rjmp	.+6      	; 0x36a <m_usb_tx_char+0x2e>
 364:	9f bf       	out	0x3f, r25	; 63
 366:	8f ef       	ldi	r24, 0xFF	; 255
 368:	42 c0       	rjmp	.+132    	; 0x3ee <m_usb_tx_char+0xb2>
 36a:	10 92 0b 01 	sts	0x010B, r1
 36e:	30 91 e4 00 	lds	r19, 0x00E4
			}
			else if (far2 == close1) {
 372:	37 5e       	subi	r19, 0xE7	; 231
 374:	20 91 e8 00 	lds	r18, 0x00E8
 378:	25 fd       	sbrc	r18, 5
 37a:	25 c0       	rjmp	.+74     	; 0x3c6 <m_usb_tx_char+0x8a>
 37c:	9f bf       	out	0x3f, r25	; 63
 37e:	90 91 e4 00 	lds	r25, 0x00E4
				top = far2;
 382:	93 17       	cp	r25, r19
 384:	49 f0       	breq	.+18     	; 0x398 <m_usb_tx_char+0x5c>
 386:	90 91 09 01 	lds	r25, 0x0109
				bottom = far1;
 38a:	91 11       	cpse	r25, r1
 38c:	0f c0       	rjmp	.+30     	; 0x3ac <m_usb_tx_char+0x70>
 38e:	2c c0       	rjmp	.+88     	; 0x3e8 <m_usb_tx_char+0xac>
				right = close2;
 390:	9f bf       	out	0x3f, r25	; 63
 392:	98 81       	ld	r25, Y
 394:	93 13       	cpse	r25, r19
 396:	05 c0       	rjmp	.+10     	; 0x3a2 <m_usb_tx_char+0x66>
 398:	81 e0       	ldi	r24, 0x01	; 1
 39a:	80 93 0b 01 	sts	0x010B, r24
				left = 10 - top - bottom - right;
 39e:	8f ef       	ldi	r24, 0xFF	; 255
 3a0:	26 c0       	rjmp	.+76     	; 0x3ee <m_usb_tx_char+0xb2>
 3a2:	90 91 09 01 	lds	r25, 0x0109
 3a6:	91 11       	cpse	r25, r1
 3a8:	08 c0       	rjmp	.+16     	; 0x3ba <m_usb_tx_char+0x7e>
 3aa:	20 c0       	rjmp	.+64     	; 0x3ec <m_usb_tx_char+0xb0>
 3ac:	a9 ee       	ldi	r26, 0xE9	; 233
 3ae:	b0 e0       	ldi	r27, 0x00	; 0
 3b0:	44 e0       	ldi	r20, 0x04	; 4
 3b2:	e8 ee       	ldi	r30, 0xE8	; 232
 3b4:	f0 e0       	ldi	r31, 0x00	; 0
 3b6:	c4 ee       	ldi	r28, 0xE4	; 228
 3b8:	d0 e0       	ldi	r29, 0x00	; 0
 3ba:	9f b7       	in	r25, 0x3f	; 63
			}
			else {
				top = far2;
 3bc:	f8 94       	cli
 3be:	4c 93       	st	X, r20
 3c0:	20 81       	ld	r18, Z
 3c2:	25 ff       	sbrs	r18, 5
				bottom = far1;
 3c4:	e5 cf       	rjmp	.-54     	; 0x390 <m_usb_tx_char+0x54>
 3c6:	80 93 f1 00 	sts	0x00F1, r24
 3ca:	80 91 e8 00 	lds	r24, 0x00E8
				right = close1;
 3ce:	85 fd       	sbrc	r24, 5
 3d0:	03 c0       	rjmp	.+6      	; 0x3d8 <m_usb_tx_char+0x9c>
 3d2:	8a e3       	ldi	r24, 0x3A	; 58
				left = 10 - top - bottom - right;
 3d4:	80 93 e8 00 	sts	0x00E8, r24
 3d8:	85 e0       	ldi	r24, 0x05	; 5
 3da:	80 93 08 01 	sts	0x0108, r24
 3de:	9f bf       	out	0x3f, r25	; 63
 3e0:	80 e0       	ldi	r24, 0x00	; 0
 3e2:	05 c0       	rjmp	.+10     	; 0x3ee <m_usb_tx_char+0xb2>
 3e4:	8f ef       	ldi	r24, 0xFF	; 255
 3e6:	03 c0       	rjmp	.+6      	; 0x3ee <m_usb_tx_char+0xb2>
 3e8:	8f ef       	ldi	r24, 0xFF	; 255
 3ea:	01 c0       	rjmp	.+2      	; 0x3ee <m_usb_tx_char+0xb2>
 3ec:	8f ef       	ldi	r24, 0xFF	; 255
 3ee:	df 91       	pop	r29
 3f0:	cf 91       	pop	r28
			}
		}
	}
	return 1;
}
 3f2:	08 95       	ret

000003f4 <__vector_10>:
 3f4:	1f 92       	push	r1
 3f6:	0f 92       	push	r0
 3f8:	0f b6       	in	r0, 0x3f	; 63
 3fa:	0f 92       	push	r0
 3fc:	11 24       	eor	r1, r1
 3fe:	8f 93       	push	r24
 400:	9f 93       	push	r25
 402:	ef 93       	push	r30
 404:	ff 93       	push	r31
 406:	e1 ee       	ldi	r30, 0xE1	; 225
 408:	f0 e0       	ldi	r31, 0x00	; 0
 40a:	80 81       	ld	r24, Z
 40c:	10 82       	st	Z, r1
 40e:	83 ff       	sbrs	r24, 3
 410:	11 c0       	rjmp	.+34     	; 0x434 <__vector_10+0x40>
 412:	10 92 e9 00 	sts	0x00E9, r1
 416:	91 e0       	ldi	r25, 0x01	; 1
 418:	90 93 eb 00 	sts	0x00EB, r25
 41c:	10 92 ec 00 	sts	0x00EC, r1
 420:	92 e1       	ldi	r25, 0x12	; 18
 422:	90 93 ed 00 	sts	0x00ED, r25
 426:	98 e0       	ldi	r25, 0x08	; 8
 428:	90 93 f0 00 	sts	0x00F0, r25
 42c:	10 92 09 01 	sts	0x0109, r1
 430:	10 92 0a 01 	sts	0x010A, r1
 434:	82 ff       	sbrs	r24, 2
 436:	13 c0       	rjmp	.+38     	; 0x45e <__vector_10+0x6a>
 438:	80 91 09 01 	lds	r24, 0x0109
 43c:	88 23       	and	r24, r24
 43e:	79 f0       	breq	.+30     	; 0x45e <__vector_10+0x6a>
 440:	80 91 08 01 	lds	r24, 0x0108
 444:	88 23       	and	r24, r24
 446:	59 f0       	breq	.+22     	; 0x45e <__vector_10+0x6a>
 448:	81 50       	subi	r24, 0x01	; 1
 44a:	80 93 08 01 	sts	0x0108, r24
 44e:	81 11       	cpse	r24, r1
 450:	06 c0       	rjmp	.+12     	; 0x45e <__vector_10+0x6a>
 452:	84 e0       	ldi	r24, 0x04	; 4
 454:	80 93 e9 00 	sts	0x00E9, r24
 458:	8a e3       	ldi	r24, 0x3A	; 58
 45a:	80 93 e8 00 	sts	0x00E8, r24
 45e:	ff 91       	pop	r31
 460:	ef 91       	pop	r30
 462:	9f 91       	pop	r25
 464:	8f 91       	pop	r24
 466:	0f 90       	pop	r0
 468:	0f be       	out	0x3f, r0	; 63
 46a:	0f 90       	pop	r0
 46c:	1f 90       	pop	r1
 46e:	18 95       	reti

00000470 <__vector_11>:
 470:	1f 92       	push	r1
 472:	0f 92       	push	r0
 474:	0f b6       	in	r0, 0x3f	; 63
 476:	0f 92       	push	r0
 478:	11 24       	eor	r1, r1
 47a:	0f 93       	push	r16
 47c:	1f 93       	push	r17
 47e:	2f 93       	push	r18
 480:	3f 93       	push	r19
 482:	4f 93       	push	r20
 484:	5f 93       	push	r21
 486:	6f 93       	push	r22
 488:	7f 93       	push	r23
 48a:	8f 93       	push	r24
 48c:	9f 93       	push	r25
 48e:	af 93       	push	r26
 490:	bf 93       	push	r27
 492:	cf 93       	push	r28
 494:	df 93       	push	r29
 496:	ef 93       	push	r30
 498:	ff 93       	push	r31
 49a:	10 92 e9 00 	sts	0x00E9, r1
 49e:	80 91 e8 00 	lds	r24, 0x00E8
 4a2:	83 ff       	sbrs	r24, 3
 4a4:	51 c1       	rjmp	.+674    	; 0x748 <__vector_11+0x2d8>
 4a6:	e1 ef       	ldi	r30, 0xF1	; 241
 4a8:	f0 e0       	ldi	r31, 0x00	; 0
 4aa:	70 81       	ld	r23, Z
 4ac:	40 81       	ld	r20, Z
 4ae:	20 81       	ld	r18, Z
 4b0:	30 81       	ld	r19, Z
 4b2:	93 2f       	mov	r25, r19
 4b4:	80 e0       	ldi	r24, 0x00	; 0
 4b6:	dc 01       	movw	r26, r24
 4b8:	a2 2b       	or	r26, r18
 4ba:	9d 01       	movw	r18, r26
 4bc:	50 81       	ld	r21, Z
 4be:	60 81       	ld	r22, Z
 4c0:	96 2f       	mov	r25, r22
 4c2:	80 e0       	ldi	r24, 0x00	; 0
 4c4:	85 2b       	or	r24, r21
 4c6:	a0 81       	ld	r26, Z
 4c8:	b0 81       	ld	r27, Z
 4ca:	52 ef       	ldi	r21, 0xF2	; 242
 4cc:	50 93 e8 00 	sts	0x00E8, r21
 4d0:	46 30       	cpi	r20, 0x06	; 6
 4d2:	09 f0       	breq	.+2      	; 0x4d6 <__vector_11+0x66>
 4d4:	5c c0       	rjmp	.+184    	; 0x58e <__vector_11+0x11e>
 4d6:	04 c0       	rjmp	.+8      	; 0x4e0 <__vector_11+0x70>
 4d8:	81 e2       	ldi	r24, 0x21	; 33
 4da:	80 93 eb 00 	sts	0x00EB, r24
 4de:	3b c1       	rjmp	.+630    	; 0x756 <__vector_11+0x2e6>
 4e0:	c6 e0       	ldi	r28, 0x06	; 6
 4e2:	4c ea       	ldi	r20, 0xAC	; 172
 4e4:	50 e0       	ldi	r21, 0x00	; 0
 4e6:	fa 01       	movw	r30, r20
 4e8:	65 91       	lpm	r22, Z+
 4ea:	74 91       	lpm	r23, Z
 4ec:	26 17       	cp	r18, r22
 4ee:	37 07       	cpc	r19, r23
 4f0:	19 f0       	breq	.+6      	; 0x4f8 <__vector_11+0x88>
 4f2:	49 5f       	subi	r20, 0xF9	; 249
 4f4:	5f 4f       	sbci	r21, 0xFF	; 255
 4f6:	20 c0       	rjmp	.+64     	; 0x538 <__vector_11+0xc8>
 4f8:	fa 01       	movw	r30, r20
 4fa:	32 96       	adiw	r30, 0x02	; 2
 4fc:	65 91       	lpm	r22, Z+
 4fe:	74 91       	lpm	r23, Z
 500:	86 17       	cp	r24, r22
 502:	97 07       	cpc	r25, r23
 504:	19 f0       	breq	.+6      	; 0x50c <__vector_11+0x9c>
 506:	49 5f       	subi	r20, 0xF9	; 249
 508:	5f 4f       	sbci	r21, 0xFF	; 255
 50a:	16 c0       	rjmp	.+44     	; 0x538 <__vector_11+0xc8>
 50c:	fa 01       	movw	r30, r20
 50e:	34 96       	adiw	r30, 0x04	; 4
 510:	85 91       	lpm	r24, Z+
 512:	94 91       	lpm	r25, Z
 514:	28 2f       	mov	r18, r24
 516:	39 2f       	mov	r19, r25
 518:	fa 01       	movw	r30, r20
 51a:	36 96       	adiw	r30, 0x06	; 6
 51c:	44 91       	lpm	r20, Z
 51e:	9b 2f       	mov	r25, r27
 520:	80 e0       	ldi	r24, 0x00	; 0
 522:	8a 2b       	or	r24, r26
 524:	8f 3f       	cpi	r24, 0xFF	; 255
 526:	91 05       	cpc	r25, r1
 528:	19 f0       	breq	.+6      	; 0x530 <__vector_11+0xc0>
 52a:	10 f0       	brcs	.+4      	; 0x530 <__vector_11+0xc0>
 52c:	8f ef       	ldi	r24, 0xFF	; 255
 52e:	90 e0       	ldi	r25, 0x00	; 0
 530:	84 17       	cp	r24, r20
 532:	28 f4       	brcc	.+10     	; 0x53e <__vector_11+0xce>
 534:	48 2f       	mov	r20, r24
 536:	03 c0       	rjmp	.+6      	; 0x53e <__vector_11+0xce>
 538:	c1 50       	subi	r28, 0x01	; 1
 53a:	a9 f6       	brne	.-86     	; 0x4e6 <__vector_11+0x76>
 53c:	cd cf       	rjmp	.-102    	; 0x4d8 <__vector_11+0x68>
 53e:	c8 ee       	ldi	r28, 0xE8	; 232
 540:	d0 e0       	ldi	r29, 0x00	; 0
 542:	7e ef       	ldi	r23, 0xFE	; 254
 544:	a1 ef       	ldi	r26, 0xF1	; 241
 546:	b0 e0       	ldi	r27, 0x00	; 0
 548:	10 e1       	ldi	r17, 0x10	; 16
 54a:	88 81       	ld	r24, Y
 54c:	98 2f       	mov	r25, r24
 54e:	95 70       	andi	r25, 0x05	; 5
 550:	e1 f3       	breq	.-8      	; 0x54a <__vector_11+0xda>
 552:	82 fd       	sbrc	r24, 2
 554:	00 c1       	rjmp	.+512    	; 0x756 <__vector_11+0x2e6>
 556:	64 2f       	mov	r22, r20
 558:	41 31       	cpi	r20, 0x11	; 17
 55a:	08 f0       	brcs	.+2      	; 0x55e <__vector_11+0xee>
 55c:	61 2f       	mov	r22, r17
 55e:	66 23       	and	r22, r22
 560:	09 f4       	brne	.+2      	; 0x564 <__vector_11+0xf4>
 562:	f6 c0       	rjmp	.+492    	; 0x750 <__vector_11+0x2e0>
 564:	c9 01       	movw	r24, r18
 566:	56 2f       	mov	r21, r22
 568:	fc 01       	movw	r30, r24
 56a:	01 96       	adiw	r24, 0x01	; 1
 56c:	e4 91       	lpm	r30, Z
 56e:	ec 93       	st	X, r30
 570:	51 50       	subi	r21, 0x01	; 1
 572:	d1 f7       	brne	.-12     	; 0x568 <__vector_11+0xf8>
 574:	86 2f       	mov	r24, r22
 576:	81 50       	subi	r24, 0x01	; 1
 578:	90 e0       	ldi	r25, 0x00	; 0
 57a:	01 96       	adiw	r24, 0x01	; 1
 57c:	28 0f       	add	r18, r24
 57e:	39 1f       	adc	r19, r25
 580:	46 1b       	sub	r20, r22
 582:	78 83       	st	Y, r23
 584:	41 11       	cpse	r20, r1
 586:	e1 cf       	rjmp	.-62     	; 0x54a <__vector_11+0xda>
 588:	60 31       	cpi	r22, 0x10	; 16
 58a:	f9 f2       	breq	.-66     	; 0x54a <__vector_11+0xda>
 58c:	e4 c0       	rjmp	.+456    	; 0x756 <__vector_11+0x2e6>
 58e:	45 30       	cpi	r20, 0x05	; 5
 590:	61 f4       	brne	.+24     	; 0x5aa <__vector_11+0x13a>
 592:	8e ef       	ldi	r24, 0xFE	; 254
 594:	80 93 e8 00 	sts	0x00E8, r24
 598:	e8 ee       	ldi	r30, 0xE8	; 232
 59a:	f0 e0       	ldi	r31, 0x00	; 0
 59c:	80 81       	ld	r24, Z
 59e:	80 ff       	sbrs	r24, 0
 5a0:	fd cf       	rjmp	.-6      	; 0x59c <__vector_11+0x12c>
 5a2:	20 68       	ori	r18, 0x80	; 128
 5a4:	20 93 e3 00 	sts	0x00E3, r18
 5a8:	d6 c0       	rjmp	.+428    	; 0x756 <__vector_11+0x2e6>
 5aa:	49 30       	cpi	r20, 0x09	; 9
 5ac:	a1 f5       	brne	.+104    	; 0x616 <__vector_11+0x1a6>
 5ae:	71 11       	cpse	r23, r1
 5b0:	5b c0       	rjmp	.+182    	; 0x668 <__vector_11+0x1f8>
 5b2:	20 93 09 01 	sts	0x0109, r18
 5b6:	10 92 0a 01 	sts	0x010A, r1
 5ba:	10 92 08 01 	sts	0x0108, r1
 5be:	8e ef       	ldi	r24, 0xFE	; 254
 5c0:	80 93 e8 00 	sts	0x00E8, r24
 5c4:	11 e0       	ldi	r17, 0x01	; 1
 5c6:	86 ed       	ldi	r24, 0xD6	; 214
 5c8:	90 e0       	ldi	r25, 0x00	; 0
 5ca:	c9 ee       	ldi	r28, 0xE9	; 233
 5cc:	d0 e0       	ldi	r29, 0x00	; 0
 5ce:	ab ee       	ldi	r26, 0xEB	; 235
 5d0:	b0 e0       	ldi	r27, 0x00	; 0
 5d2:	6c ee       	ldi	r22, 0xEC	; 236
 5d4:	70 e0       	ldi	r23, 0x00	; 0
 5d6:	4d ee       	ldi	r20, 0xED	; 237
 5d8:	50 e0       	ldi	r21, 0x00	; 0
 5da:	18 83       	st	Y, r17
 5dc:	9c 01       	movw	r18, r24
 5de:	2f 5f       	subi	r18, 0xFF	; 255
 5e0:	3f 4f       	sbci	r19, 0xFF	; 255
 5e2:	fc 01       	movw	r30, r24
 5e4:	04 91       	lpm	r16, Z
 5e6:	0c 93       	st	X, r16
 5e8:	00 23       	and	r16, r16
 5ea:	59 f0       	breq	.+22     	; 0x602 <__vector_11+0x192>
 5ec:	f9 01       	movw	r30, r18
 5ee:	24 91       	lpm	r18, Z
 5f0:	fb 01       	movw	r30, r22
 5f2:	20 83       	st	Z, r18
 5f4:	fc 01       	movw	r30, r24
 5f6:	32 96       	adiw	r30, 0x02	; 2
 5f8:	03 96       	adiw	r24, 0x03	; 3
 5fa:	24 91       	lpm	r18, Z
 5fc:	fa 01       	movw	r30, r20
 5fe:	20 83       	st	Z, r18
 600:	01 c0       	rjmp	.+2      	; 0x604 <__vector_11+0x194>
 602:	c9 01       	movw	r24, r18
 604:	1f 5f       	subi	r17, 0xFF	; 255
 606:	15 30       	cpi	r17, 0x05	; 5
 608:	41 f7       	brne	.-48     	; 0x5da <__vector_11+0x16a>
 60a:	ea ee       	ldi	r30, 0xEA	; 234
 60c:	f0 e0       	ldi	r31, 0x00	; 0
 60e:	8e e1       	ldi	r24, 0x1E	; 30
 610:	80 83       	st	Z, r24
 612:	10 82       	st	Z, r1
 614:	a0 c0       	rjmp	.+320    	; 0x756 <__vector_11+0x2e6>
 616:	48 30       	cpi	r20, 0x08	; 8
 618:	81 f4       	brne	.+32     	; 0x63a <__vector_11+0x1ca>
 61a:	70 38       	cpi	r23, 0x80	; 128
 61c:	09 f0       	breq	.+2      	; 0x620 <__vector_11+0x1b0>
 61e:	3f c0       	rjmp	.+126    	; 0x69e <__vector_11+0x22e>
 620:	e8 ee       	ldi	r30, 0xE8	; 232
 622:	f0 e0       	ldi	r31, 0x00	; 0
 624:	80 81       	ld	r24, Z
 626:	80 ff       	sbrs	r24, 0
 628:	fd cf       	rjmp	.-6      	; 0x624 <__vector_11+0x1b4>
 62a:	80 91 09 01 	lds	r24, 0x0109
 62e:	80 93 f1 00 	sts	0x00F1, r24
 632:	8e ef       	ldi	r24, 0xFE	; 254
 634:	80 93 e8 00 	sts	0x00E8, r24
 638:	8e c0       	rjmp	.+284    	; 0x756 <__vector_11+0x2e6>
 63a:	41 32       	cpi	r20, 0x21	; 33
 63c:	a9 f4       	brne	.+42     	; 0x668 <__vector_11+0x1f8>
 63e:	71 3a       	cpi	r23, 0xA1	; 161
 640:	f1 f5       	brne	.+124    	; 0x6be <__vector_11+0x24e>
 642:	e8 ee       	ldi	r30, 0xE8	; 232
 644:	f0 e0       	ldi	r31, 0x00	; 0
 646:	80 81       	ld	r24, Z
 648:	80 ff       	sbrs	r24, 0
 64a:	fd cf       	rjmp	.-6      	; 0x646 <__vector_11+0x1d6>
 64c:	e0 e0       	ldi	r30, 0x00	; 0
 64e:	f1 e0       	ldi	r31, 0x01	; 1
 650:	a1 ef       	ldi	r26, 0xF1	; 241
 652:	b0 e0       	ldi	r27, 0x00	; 0
 654:	81 91       	ld	r24, Z+
 656:	8c 93       	st	X, r24
 658:	41 e0       	ldi	r20, 0x01	; 1
 65a:	e7 30       	cpi	r30, 0x07	; 7
 65c:	f4 07       	cpc	r31, r20
 65e:	d1 f7       	brne	.-12     	; 0x654 <__vector_11+0x1e4>
 660:	8e ef       	ldi	r24, 0xFE	; 254
 662:	80 93 e8 00 	sts	0x00E8, r24
 666:	77 c0       	rjmp	.+238    	; 0x756 <__vector_11+0x2e6>
 668:	40 32       	cpi	r20, 0x20	; 32
 66a:	c9 f4       	brne	.+50     	; 0x69e <__vector_11+0x22e>
 66c:	71 32       	cpi	r23, 0x21	; 33
 66e:	09 f0       	breq	.+2      	; 0x672 <__vector_11+0x202>
 670:	6b c0       	rjmp	.+214    	; 0x748 <__vector_11+0x2d8>
 672:	e8 ee       	ldi	r30, 0xE8	; 232
 674:	f0 e0       	ldi	r31, 0x00	; 0
 676:	80 81       	ld	r24, Z
 678:	82 ff       	sbrs	r24, 2
 67a:	fd cf       	rjmp	.-6      	; 0x676 <__vector_11+0x206>
 67c:	e0 e0       	ldi	r30, 0x00	; 0
 67e:	f1 e0       	ldi	r31, 0x01	; 1
 680:	a1 ef       	ldi	r26, 0xF1	; 241
 682:	b0 e0       	ldi	r27, 0x00	; 0
 684:	8c 91       	ld	r24, X
 686:	81 93       	st	Z+, r24
 688:	51 e0       	ldi	r21, 0x01	; 1
 68a:	e7 30       	cpi	r30, 0x07	; 7
 68c:	f5 07       	cpc	r31, r21
 68e:	d1 f7       	brne	.-12     	; 0x684 <__vector_11+0x214>
 690:	e8 ee       	ldi	r30, 0xE8	; 232
 692:	f0 e0       	ldi	r31, 0x00	; 0
 694:	8b ef       	ldi	r24, 0xFB	; 251
 696:	80 83       	st	Z, r24
 698:	8e ef       	ldi	r24, 0xFE	; 254
 69a:	80 83       	st	Z, r24
 69c:	5c c0       	rjmp	.+184    	; 0x756 <__vector_11+0x2e6>
 69e:	42 32       	cpi	r20, 0x22	; 34
 6a0:	71 f4       	brne	.+28     	; 0x6be <__vector_11+0x24e>
 6a2:	71 32       	cpi	r23, 0x21	; 33
 6a4:	09 f0       	breq	.+2      	; 0x6a8 <__vector_11+0x238>
 6a6:	50 c0       	rjmp	.+160    	; 0x748 <__vector_11+0x2d8>
 6a8:	20 93 0a 01 	sts	0x010A, r18
 6ac:	e8 ee       	ldi	r30, 0xE8	; 232
 6ae:	f0 e0       	ldi	r31, 0x00	; 0
 6b0:	80 81       	ld	r24, Z
 6b2:	80 ff       	sbrs	r24, 0
 6b4:	fd cf       	rjmp	.-6      	; 0x6b0 <__vector_11+0x240>
 6b6:	8e ef       	ldi	r24, 0xFE	; 254
 6b8:	80 93 e8 00 	sts	0x00E8, r24
 6bc:	4c c0       	rjmp	.+152    	; 0x756 <__vector_11+0x2e6>
 6be:	41 11       	cpse	r20, r1
 6c0:	1a c0       	rjmp	.+52     	; 0x6f6 <__vector_11+0x286>
 6c2:	e8 ee       	ldi	r30, 0xE8	; 232
 6c4:	f0 e0       	ldi	r31, 0x00	; 0
 6c6:	20 81       	ld	r18, Z
 6c8:	20 ff       	sbrs	r18, 0
 6ca:	fd cf       	rjmp	.-6      	; 0x6c6 <__vector_11+0x256>
 6cc:	72 38       	cpi	r23, 0x82	; 130
 6ce:	51 f4       	brne	.+20     	; 0x6e4 <__vector_11+0x274>
 6d0:	e9 ee       	ldi	r30, 0xE9	; 233
 6d2:	f0 e0       	ldi	r31, 0x00	; 0
 6d4:	80 83       	st	Z, r24
 6d6:	80 91 eb 00 	lds	r24, 0x00EB
 6da:	85 fb       	bst	r24, 5
 6dc:	88 27       	eor	r24, r24
 6de:	80 f9       	bld	r24, 0
 6e0:	10 82       	st	Z, r1
 6e2:	01 c0       	rjmp	.+2      	; 0x6e6 <__vector_11+0x276>
 6e4:	80 e0       	ldi	r24, 0x00	; 0
 6e6:	e1 ef       	ldi	r30, 0xF1	; 241
 6e8:	f0 e0       	ldi	r31, 0x00	; 0
 6ea:	80 83       	st	Z, r24
 6ec:	10 82       	st	Z, r1
 6ee:	8e ef       	ldi	r24, 0xFE	; 254
 6f0:	80 93 e8 00 	sts	0x00E8, r24
 6f4:	30 c0       	rjmp	.+96     	; 0x756 <__vector_11+0x2e6>
 6f6:	41 30       	cpi	r20, 0x01	; 1
 6f8:	11 f0       	breq	.+4      	; 0x6fe <__vector_11+0x28e>
 6fa:	43 30       	cpi	r20, 0x03	; 3
 6fc:	29 f5       	brne	.+74     	; 0x748 <__vector_11+0x2d8>
 6fe:	72 30       	cpi	r23, 0x02	; 2
 700:	19 f5       	brne	.+70     	; 0x748 <__vector_11+0x2d8>
 702:	23 2b       	or	r18, r19
 704:	09 f5       	brne	.+66     	; 0x748 <__vector_11+0x2d8>
 706:	8f 77       	andi	r24, 0x7F	; 127
 708:	99 27       	eor	r25, r25
 70a:	38 2f       	mov	r19, r24
 70c:	31 50       	subi	r19, 0x01	; 1
 70e:	34 30       	cpi	r19, 0x04	; 4
 710:	d8 f4       	brcc	.+54     	; 0x748 <__vector_11+0x2d8>
 712:	3e ef       	ldi	r19, 0xFE	; 254
 714:	30 93 e8 00 	sts	0x00E8, r19
 718:	80 93 e9 00 	sts	0x00E9, r24
 71c:	43 30       	cpi	r20, 0x03	; 3
 71e:	21 f4       	brne	.+8      	; 0x728 <__vector_11+0x2b8>
 720:	81 e2       	ldi	r24, 0x21	; 33
 722:	80 93 eb 00 	sts	0x00EB, r24
 726:	17 c0       	rjmp	.+46     	; 0x756 <__vector_11+0x2e6>
 728:	99 e1       	ldi	r25, 0x19	; 25
 72a:	90 93 eb 00 	sts	0x00EB, r25
 72e:	21 e0       	ldi	r18, 0x01	; 1
 730:	30 e0       	ldi	r19, 0x00	; 0
 732:	d9 01       	movw	r26, r18
 734:	02 c0       	rjmp	.+4      	; 0x73a <__vector_11+0x2ca>
 736:	aa 0f       	add	r26, r26
 738:	bb 1f       	adc	r27, r27
 73a:	8a 95       	dec	r24
 73c:	e2 f7       	brpl	.-8      	; 0x736 <__vector_11+0x2c6>
 73e:	ea ee       	ldi	r30, 0xEA	; 234
 740:	f0 e0       	ldi	r31, 0x00	; 0
 742:	a0 83       	st	Z, r26
 744:	10 82       	st	Z, r1
 746:	07 c0       	rjmp	.+14     	; 0x756 <__vector_11+0x2e6>
 748:	81 e2       	ldi	r24, 0x21	; 33
 74a:	80 93 eb 00 	sts	0x00EB, r24
 74e:	03 c0       	rjmp	.+6      	; 0x756 <__vector_11+0x2e6>
 750:	78 83       	st	Y, r23
 752:	41 11       	cpse	r20, r1
 754:	fa ce       	rjmp	.-524    	; 0x54a <__vector_11+0xda>
 756:	ff 91       	pop	r31
 758:	ef 91       	pop	r30
 75a:	df 91       	pop	r29
 75c:	cf 91       	pop	r28
 75e:	bf 91       	pop	r27
 760:	af 91       	pop	r26
 762:	9f 91       	pop	r25
 764:	8f 91       	pop	r24
 766:	7f 91       	pop	r23
 768:	6f 91       	pop	r22
 76a:	5f 91       	pop	r21
 76c:	4f 91       	pop	r20
 76e:	3f 91       	pop	r19
 770:	2f 91       	pop	r18
 772:	1f 91       	pop	r17
 774:	0f 91       	pop	r16
 776:	0f 90       	pop	r0
 778:	0f be       	out	0x3f, r0	; 63
 77a:	0f 90       	pop	r0
 77c:	1f 90       	pop	r1
 77e:	18 95       	reti

00000780 <m_usb_tx_int>:
 780:	ef 92       	push	r14
 782:	ff 92       	push	r15
 784:	0f 93       	push	r16
 786:	1f 93       	push	r17
 788:	cf 93       	push	r28
 78a:	df 93       	push	r29
 78c:	cd b7       	in	r28, 0x3d	; 61
 78e:	de b7       	in	r29, 0x3e	; 62
 790:	27 97       	sbiw	r28, 0x07	; 7
 792:	0f b6       	in	r0, 0x3f	; 63
 794:	f8 94       	cli
 796:	de bf       	out	0x3e, r29	; 62
 798:	0f be       	out	0x3f, r0	; 63
 79a:	cd bf       	out	0x3d, r28	; 61
 79c:	8e 01       	movw	r16, r28
 79e:	0f 5f       	subi	r16, 0xFF	; 255
 7a0:	1f 4f       	sbci	r17, 0xFF	; 255
 7a2:	27 e0       	ldi	r18, 0x07	; 7
 7a4:	f8 01       	movw	r30, r16
 7a6:	11 92       	st	Z+, r1
 7a8:	2a 95       	dec	r18
 7aa:	e9 f7       	brne	.-6      	; 0x7a6 <m_usb_tx_int+0x26>
 7ac:	4a e0       	ldi	r20, 0x0A	; 10
 7ae:	50 e0       	ldi	r21, 0x00	; 0
 7b0:	b8 01       	movw	r22, r16
 7b2:	0e 94 37 05 	call	0xa6e	; 0xa6e <itoa>
 7b6:	7e 01       	movw	r14, r28
 7b8:	f8 e0       	ldi	r31, 0x08	; 8
 7ba:	ef 0e       	add	r14, r31
 7bc:	f1 1c       	adc	r15, r1
 7be:	f8 01       	movw	r30, r16
 7c0:	81 91       	ld	r24, Z+
 7c2:	8f 01       	movw	r16, r30
 7c4:	81 11       	cpse	r24, r1
 7c6:	0e 94 9e 01 	call	0x33c	; 0x33c <m_usb_tx_char>
 7ca:	0e 15       	cp	r16, r14
 7cc:	1f 05       	cpc	r17, r15
 7ce:	b9 f7       	brne	.-18     	; 0x7be <m_usb_tx_int+0x3e>
 7d0:	27 96       	adiw	r28, 0x07	; 7
 7d2:	0f b6       	in	r0, 0x3f	; 63
 7d4:	f8 94       	cli
 7d6:	de bf       	out	0x3e, r29	; 62
 7d8:	0f be       	out	0x3f, r0	; 63
 7da:	cd bf       	out	0x3d, r28	; 61
 7dc:	df 91       	pop	r29
 7de:	cf 91       	pop	r28
 7e0:	1f 91       	pop	r17
 7e2:	0f 91       	pop	r16
 7e4:	ff 90       	pop	r15
 7e6:	ef 90       	pop	r14
 7e8:	08 95       	ret

000007ea <twi_wait>:
 7ea:	20 e0       	ldi	r18, 0x00	; 0
 7ec:	30 e0       	ldi	r19, 0x00	; 0
 7ee:	ec eb       	ldi	r30, 0xBC	; 188
 7f0:	f0 e0       	ldi	r31, 0x00	; 0
 7f2:	80 81       	ld	r24, Z
 7f4:	88 23       	and	r24, r24
 7f6:	34 f0       	brlt	.+12     	; 0x804 <twi_wait+0x1a>
 7f8:	2f 5f       	subi	r18, 0xFF	; 255
 7fa:	3f 4f       	sbci	r19, 0xFF	; 255
 7fc:	29 3e       	cpi	r18, 0xE9	; 233
 7fe:	83 e0       	ldi	r24, 0x03	; 3
 800:	38 07       	cpc	r19, r24
 802:	b9 f7       	brne	.-18     	; 0x7f2 <twi_wait+0x8>
 804:	81 e0       	ldi	r24, 0x01	; 1
 806:	28 3e       	cpi	r18, 0xE8	; 232
 808:	33 40       	sbci	r19, 0x03	; 3
 80a:	09 f4       	brne	.+2      	; 0x80e <twi_wait+0x24>
 80c:	80 e0       	ldi	r24, 0x00	; 0
 80e:	08 95       	ret

00000810 <send_byte>:
 810:	80 93 bb 00 	sts	0x00BB, r24
 814:	84 e8       	ldi	r24, 0x84	; 132
 816:	80 93 bc 00 	sts	0x00BC, r24
 81a:	0e 94 f5 03 	call	0x7ea	; 0x7ea <twi_wait>
 81e:	88 23       	and	r24, r24
 820:	21 f0       	breq	.+8      	; 0x82a <send_byte+0x1a>
 822:	80 91 b9 00 	lds	r24, 0x00B9
 826:	88 7f       	andi	r24, 0xF8	; 248
 828:	08 95       	ret
 82a:	80 e0       	ldi	r24, 0x00	; 0
 82c:	08 95       	ret

0000082e <start_write>:
 82e:	cf 93       	push	r28
 830:	c8 2f       	mov	r28, r24
 832:	94 ea       	ldi	r25, 0xA4	; 164
 834:	90 93 bc 00 	sts	0x00BC, r25
 838:	0e 94 f5 03 	call	0x7ea	; 0x7ea <twi_wait>
 83c:	88 23       	and	r24, r24
 83e:	59 f0       	breq	.+22     	; 0x856 <start_write+0x28>
 840:	8c 2f       	mov	r24, r28
 842:	88 0f       	add	r24, r24
 844:	0e 94 08 04 	call	0x810	; 0x810 <send_byte>
 848:	80 32       	cpi	r24, 0x20	; 32
 84a:	39 f4       	brne	.+14     	; 0x85a <start_write+0x2c>
 84c:	84 e9       	ldi	r24, 0x94	; 148
 84e:	80 93 bc 00 	sts	0x00BC, r24
 852:	80 e0       	ldi	r24, 0x00	; 0
 854:	03 c0       	rjmp	.+6      	; 0x85c <start_write+0x2e>
 856:	80 e0       	ldi	r24, 0x00	; 0
 858:	01 c0       	rjmp	.+2      	; 0x85c <start_write+0x2e>
 85a:	81 e0       	ldi	r24, 0x01	; 1
 85c:	cf 91       	pop	r28
 85e:	08 95       	ret

00000860 <end>:
 860:	84 e9       	ldi	r24, 0x94	; 148
 862:	80 93 bc 00 	sts	0x00BC, r24
 866:	08 95       	ret

00000868 <m_wii_open>:
 868:	0e 94 2e 01 	call	0x25c	; 0x25c <m_bus_init>
 86c:	88 e5       	ldi	r24, 0x58	; 88
 86e:	0e 94 17 04 	call	0x82e	; 0x82e <start_write>
 872:	88 23       	and	r24, r24
 874:	09 f4       	brne	.+2      	; 0x878 <m_wii_open+0x10>
 876:	c7 c0       	rjmp	.+398    	; 0xa06 <m_wii_open+0x19e>
 878:	80 e3       	ldi	r24, 0x30	; 48
 87a:	0e 94 08 04 	call	0x810	; 0x810 <send_byte>
 87e:	88 23       	and	r24, r24
 880:	09 f4       	brne	.+2      	; 0x884 <m_wii_open+0x1c>
 882:	c3 c0       	rjmp	.+390    	; 0xa0a <m_wii_open+0x1a2>
 884:	81 e0       	ldi	r24, 0x01	; 1
 886:	0e 94 08 04 	call	0x810	; 0x810 <send_byte>
 88a:	88 23       	and	r24, r24
 88c:	09 f4       	brne	.+2      	; 0x890 <m_wii_open+0x28>
 88e:	bf c0       	rjmp	.+382    	; 0xa0e <m_wii_open+0x1a6>
 890:	0e 94 30 04 	call	0x860	; 0x860 <end>
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

 894:	83 ec       	ldi	r24, 0xC3	; 195
 896:	99 e0       	ldi	r25, 0x09	; 9
 898:	01 97       	sbiw	r24, 0x01	; 1
 89a:	f1 f7       	brne	.-4      	; 0x898 <m_wii_open+0x30>
 89c:	00 c0       	rjmp	.+0      	; 0x89e <m_wii_open+0x36>
 89e:	00 00       	nop
 8a0:	88 e5       	ldi	r24, 0x58	; 88
 8a2:	0e 94 17 04 	call	0x82e	; 0x82e <start_write>
 8a6:	88 23       	and	r24, r24
 8a8:	09 f4       	brne	.+2      	; 0x8ac <m_wii_open+0x44>
 8aa:	b3 c0       	rjmp	.+358    	; 0xa12 <m_wii_open+0x1aa>
 8ac:	80 e0       	ldi	r24, 0x00	; 0
 8ae:	0e 94 08 04 	call	0x810	; 0x810 <send_byte>
 8b2:	88 23       	and	r24, r24
 8b4:	09 f4       	brne	.+2      	; 0x8b8 <m_wii_open+0x50>
 8b6:	af c0       	rjmp	.+350    	; 0xa16 <m_wii_open+0x1ae>
 8b8:	80 e0       	ldi	r24, 0x00	; 0
 8ba:	0e 94 08 04 	call	0x810	; 0x810 <send_byte>
 8be:	88 23       	and	r24, r24
 8c0:	09 f4       	brne	.+2      	; 0x8c4 <m_wii_open+0x5c>
 8c2:	ab c0       	rjmp	.+342    	; 0xa1a <m_wii_open+0x1b2>
 8c4:	80 e0       	ldi	r24, 0x00	; 0
 8c6:	0e 94 08 04 	call	0x810	; 0x810 <send_byte>
 8ca:	88 23       	and	r24, r24
 8cc:	09 f4       	brne	.+2      	; 0x8d0 <m_wii_open+0x68>
 8ce:	a7 c0       	rjmp	.+334    	; 0xa1e <m_wii_open+0x1b6>
 8d0:	80 e0       	ldi	r24, 0x00	; 0
 8d2:	0e 94 08 04 	call	0x810	; 0x810 <send_byte>
 8d6:	88 23       	and	r24, r24
 8d8:	09 f4       	brne	.+2      	; 0x8dc <m_wii_open+0x74>
 8da:	a3 c0       	rjmp	.+326    	; 0xa22 <m_wii_open+0x1ba>
 8dc:	80 e0       	ldi	r24, 0x00	; 0
 8de:	0e 94 08 04 	call	0x810	; 0x810 <send_byte>
 8e2:	88 23       	and	r24, r24
 8e4:	09 f4       	brne	.+2      	; 0x8e8 <m_wii_open+0x80>
 8e6:	9f c0       	rjmp	.+318    	; 0xa26 <m_wii_open+0x1be>
 8e8:	80 e0       	ldi	r24, 0x00	; 0
 8ea:	0e 94 08 04 	call	0x810	; 0x810 <send_byte>
 8ee:	88 23       	and	r24, r24
 8f0:	09 f4       	brne	.+2      	; 0x8f4 <m_wii_open+0x8c>
 8f2:	9b c0       	rjmp	.+310    	; 0xa2a <m_wii_open+0x1c2>
 8f4:	80 e0       	ldi	r24, 0x00	; 0
 8f6:	0e 94 08 04 	call	0x810	; 0x810 <send_byte>
 8fa:	88 23       	and	r24, r24
 8fc:	09 f4       	brne	.+2      	; 0x900 <m_wii_open+0x98>
 8fe:	97 c0       	rjmp	.+302    	; 0xa2e <m_wii_open+0x1c6>
 900:	80 e9       	ldi	r24, 0x90	; 144
 902:	0e 94 08 04 	call	0x810	; 0x810 <send_byte>
 906:	88 23       	and	r24, r24
 908:	09 f4       	brne	.+2      	; 0x90c <m_wii_open+0xa4>
 90a:	93 c0       	rjmp	.+294    	; 0xa32 <m_wii_open+0x1ca>
 90c:	0e 94 30 04 	call	0x860	; 0x860 <end>
 910:	83 ec       	ldi	r24, 0xC3	; 195
 912:	99 e0       	ldi	r25, 0x09	; 9
 914:	01 97       	sbiw	r24, 0x01	; 1
 916:	f1 f7       	brne	.-4      	; 0x914 <m_wii_open+0xac>
 918:	00 c0       	rjmp	.+0      	; 0x91a <m_wii_open+0xb2>
 91a:	00 00       	nop
 91c:	88 e5       	ldi	r24, 0x58	; 88
 91e:	0e 94 17 04 	call	0x82e	; 0x82e <start_write>
 922:	88 23       	and	r24, r24
 924:	09 f4       	brne	.+2      	; 0x928 <m_wii_open+0xc0>
 926:	87 c0       	rjmp	.+270    	; 0xa36 <m_wii_open+0x1ce>
 928:	87 e0       	ldi	r24, 0x07	; 7
 92a:	0e 94 08 04 	call	0x810	; 0x810 <send_byte>
 92e:	88 23       	and	r24, r24
 930:	09 f4       	brne	.+2      	; 0x934 <m_wii_open+0xcc>
 932:	83 c0       	rjmp	.+262    	; 0xa3a <m_wii_open+0x1d2>
 934:	80 e0       	ldi	r24, 0x00	; 0
 936:	0e 94 08 04 	call	0x810	; 0x810 <send_byte>
 93a:	88 23       	and	r24, r24
 93c:	09 f4       	brne	.+2      	; 0x940 <m_wii_open+0xd8>
 93e:	7f c0       	rjmp	.+254    	; 0xa3e <m_wii_open+0x1d6>
 940:	81 e4       	ldi	r24, 0x41	; 65
 942:	0e 94 08 04 	call	0x810	; 0x810 <send_byte>
 946:	88 23       	and	r24, r24
 948:	09 f4       	brne	.+2      	; 0x94c <m_wii_open+0xe4>
 94a:	7b c0       	rjmp	.+246    	; 0xa42 <m_wii_open+0x1da>
 94c:	0e 94 30 04 	call	0x860	; 0x860 <end>
 950:	83 ec       	ldi	r24, 0xC3	; 195
 952:	99 e0       	ldi	r25, 0x09	; 9
 954:	01 97       	sbiw	r24, 0x01	; 1
 956:	f1 f7       	brne	.-4      	; 0x954 <m_wii_open+0xec>
 958:	00 c0       	rjmp	.+0      	; 0x95a <m_wii_open+0xf2>
 95a:	00 00       	nop
 95c:	88 e5       	ldi	r24, 0x58	; 88
 95e:	0e 94 17 04 	call	0x82e	; 0x82e <start_write>
 962:	88 23       	and	r24, r24
 964:	09 f4       	brne	.+2      	; 0x968 <m_wii_open+0x100>
 966:	6f c0       	rjmp	.+222    	; 0xa46 <m_wii_open+0x1de>
 968:	8a e1       	ldi	r24, 0x1A	; 26
 96a:	0e 94 08 04 	call	0x810	; 0x810 <send_byte>
 96e:	88 23       	and	r24, r24
 970:	09 f4       	brne	.+2      	; 0x974 <m_wii_open+0x10c>
 972:	6b c0       	rjmp	.+214    	; 0xa4a <m_wii_open+0x1e2>
 974:	80 e4       	ldi	r24, 0x40	; 64
 976:	0e 94 08 04 	call	0x810	; 0x810 <send_byte>
 97a:	88 23       	and	r24, r24
 97c:	09 f4       	brne	.+2      	; 0x980 <m_wii_open+0x118>
 97e:	67 c0       	rjmp	.+206    	; 0xa4e <m_wii_open+0x1e6>
 980:	80 e0       	ldi	r24, 0x00	; 0
 982:	0e 94 08 04 	call	0x810	; 0x810 <send_byte>
 986:	88 23       	and	r24, r24
 988:	09 f4       	brne	.+2      	; 0x98c <m_wii_open+0x124>
 98a:	63 c0       	rjmp	.+198    	; 0xa52 <m_wii_open+0x1ea>
 98c:	0e 94 30 04 	call	0x860	; 0x860 <end>
 990:	83 ec       	ldi	r24, 0xC3	; 195
 992:	99 e0       	ldi	r25, 0x09	; 9
 994:	01 97       	sbiw	r24, 0x01	; 1
 996:	f1 f7       	brne	.-4      	; 0x994 <m_wii_open+0x12c>
 998:	00 c0       	rjmp	.+0      	; 0x99a <m_wii_open+0x132>
 99a:	00 00       	nop
 99c:	88 e5       	ldi	r24, 0x58	; 88
 99e:	0e 94 17 04 	call	0x82e	; 0x82e <start_write>
 9a2:	88 23       	and	r24, r24
 9a4:	09 f4       	brne	.+2      	; 0x9a8 <m_wii_open+0x140>
 9a6:	57 c0       	rjmp	.+174    	; 0xa56 <m_wii_open+0x1ee>
 9a8:	83 e3       	ldi	r24, 0x33	; 51
 9aa:	0e 94 08 04 	call	0x810	; 0x810 <send_byte>
 9ae:	88 23       	and	r24, r24
 9b0:	09 f4       	brne	.+2      	; 0x9b4 <m_wii_open+0x14c>
 9b2:	53 c0       	rjmp	.+166    	; 0xa5a <m_wii_open+0x1f2>
 9b4:	83 e0       	ldi	r24, 0x03	; 3
 9b6:	0e 94 08 04 	call	0x810	; 0x810 <send_byte>
 9ba:	88 23       	and	r24, r24
 9bc:	09 f4       	brne	.+2      	; 0x9c0 <m_wii_open+0x158>
 9be:	4f c0       	rjmp	.+158    	; 0xa5e <m_wii_open+0x1f6>
 9c0:	0e 94 30 04 	call	0x860	; 0x860 <end>
 9c4:	83 ec       	ldi	r24, 0xC3	; 195
 9c6:	99 e0       	ldi	r25, 0x09	; 9
 9c8:	01 97       	sbiw	r24, 0x01	; 1
 9ca:	f1 f7       	brne	.-4      	; 0x9c8 <m_wii_open+0x160>
 9cc:	00 c0       	rjmp	.+0      	; 0x9ce <m_wii_open+0x166>
 9ce:	00 00       	nop
 9d0:	88 e5       	ldi	r24, 0x58	; 88
 9d2:	0e 94 17 04 	call	0x82e	; 0x82e <start_write>
 9d6:	88 23       	and	r24, r24
 9d8:	09 f4       	brne	.+2      	; 0x9dc <m_wii_open+0x174>
 9da:	43 c0       	rjmp	.+134    	; 0xa62 <m_wii_open+0x1fa>
 9dc:	80 e3       	ldi	r24, 0x30	; 48
 9de:	0e 94 08 04 	call	0x810	; 0x810 <send_byte>
 9e2:	88 23       	and	r24, r24
 9e4:	09 f4       	brne	.+2      	; 0x9e8 <m_wii_open+0x180>
 9e6:	3f c0       	rjmp	.+126    	; 0xa66 <m_wii_open+0x1fe>
 9e8:	88 e0       	ldi	r24, 0x08	; 8
 9ea:	0e 94 08 04 	call	0x810	; 0x810 <send_byte>
 9ee:	88 23       	and	r24, r24
 9f0:	e1 f1       	breq	.+120    	; 0xa6a <m_wii_open+0x202>
 9f2:	0e 94 30 04 	call	0x860	; 0x860 <end>
 9f6:	83 ec       	ldi	r24, 0xC3	; 195
 9f8:	99 e0       	ldi	r25, 0x09	; 9
 9fa:	01 97       	sbiw	r24, 0x01	; 1
 9fc:	f1 f7       	brne	.-4      	; 0x9fa <m_wii_open+0x192>
 9fe:	00 c0       	rjmp	.+0      	; 0xa00 <m_wii_open+0x198>
 a00:	00 00       	nop
 a02:	81 e0       	ldi	r24, 0x01	; 1
 a04:	08 95       	ret
 a06:	80 e0       	ldi	r24, 0x00	; 0
 a08:	08 95       	ret
 a0a:	80 e0       	ldi	r24, 0x00	; 0
 a0c:	08 95       	ret
 a0e:	80 e0       	ldi	r24, 0x00	; 0
 a10:	08 95       	ret
 a12:	80 e0       	ldi	r24, 0x00	; 0
 a14:	08 95       	ret
 a16:	80 e0       	ldi	r24, 0x00	; 0
 a18:	08 95       	ret
 a1a:	80 e0       	ldi	r24, 0x00	; 0
 a1c:	08 95       	ret
 a1e:	80 e0       	ldi	r24, 0x00	; 0
 a20:	08 95       	ret
 a22:	80 e0       	ldi	r24, 0x00	; 0
 a24:	08 95       	ret
 a26:	80 e0       	ldi	r24, 0x00	; 0
 a28:	08 95       	ret
 a2a:	80 e0       	ldi	r24, 0x00	; 0
 a2c:	08 95       	ret
 a2e:	80 e0       	ldi	r24, 0x00	; 0
 a30:	08 95       	ret
 a32:	80 e0       	ldi	r24, 0x00	; 0
 a34:	08 95       	ret
 a36:	80 e0       	ldi	r24, 0x00	; 0
 a38:	08 95       	ret
 a3a:	80 e0       	ldi	r24, 0x00	; 0
 a3c:	08 95       	ret
 a3e:	80 e0       	ldi	r24, 0x00	; 0
 a40:	08 95       	ret
 a42:	80 e0       	ldi	r24, 0x00	; 0
 a44:	08 95       	ret
 a46:	80 e0       	ldi	r24, 0x00	; 0
 a48:	08 95       	ret
 a4a:	80 e0       	ldi	r24, 0x00	; 0
 a4c:	08 95       	ret
 a4e:	80 e0       	ldi	r24, 0x00	; 0
 a50:	08 95       	ret
 a52:	80 e0       	ldi	r24, 0x00	; 0
 a54:	08 95       	ret
 a56:	80 e0       	ldi	r24, 0x00	; 0
 a58:	08 95       	ret
 a5a:	80 e0       	ldi	r24, 0x00	; 0
 a5c:	08 95       	ret
 a5e:	80 e0       	ldi	r24, 0x00	; 0
 a60:	08 95       	ret
 a62:	80 e0       	ldi	r24, 0x00	; 0
 a64:	08 95       	ret
 a66:	80 e0       	ldi	r24, 0x00	; 0
 a68:	08 95       	ret
 a6a:	80 e0       	ldi	r24, 0x00	; 0
 a6c:	08 95       	ret

00000a6e <itoa>:
 a6e:	fb 01       	movw	r30, r22
 a70:	9f 01       	movw	r18, r30
 a72:	e8 94       	clt
 a74:	42 30       	cpi	r20, 0x02	; 2
 a76:	c4 f0       	brlt	.+48     	; 0xaa8 <itoa+0x3a>
 a78:	45 32       	cpi	r20, 0x25	; 37
 a7a:	b4 f4       	brge	.+44     	; 0xaa8 <itoa+0x3a>
 a7c:	4a 30       	cpi	r20, 0x0A	; 10
 a7e:	29 f4       	brne	.+10     	; 0xa8a <itoa+0x1c>
 a80:	97 fb       	bst	r25, 7
 a82:	1e f4       	brtc	.+6      	; 0xa8a <itoa+0x1c>
 a84:	90 95       	com	r25
 a86:	81 95       	neg	r24
 a88:	9f 4f       	sbci	r25, 0xFF	; 255
 a8a:	64 2f       	mov	r22, r20
 a8c:	77 27       	eor	r23, r23
 a8e:	0e 94 68 05 	call	0xad0	; 0xad0 <__udivmodhi4>
 a92:	80 5d       	subi	r24, 0xD0	; 208
 a94:	8a 33       	cpi	r24, 0x3A	; 58
 a96:	0c f0       	brlt	.+2      	; 0xa9a <itoa+0x2c>
 a98:	89 5d       	subi	r24, 0xD9	; 217
 a9a:	81 93       	st	Z+, r24
 a9c:	cb 01       	movw	r24, r22
 a9e:	00 97       	sbiw	r24, 0x00	; 0
 aa0:	a1 f7       	brne	.-24     	; 0xa8a <itoa+0x1c>
 aa2:	16 f4       	brtc	.+4      	; 0xaa8 <itoa+0x3a>
 aa4:	5d e2       	ldi	r21, 0x2D	; 45
 aa6:	51 93       	st	Z+, r21
 aa8:	10 82       	st	Z, r1
 aaa:	c9 01       	movw	r24, r18
 aac:	0c 94 58 05 	jmp	0xab0	; 0xab0 <strrev>

00000ab0 <strrev>:
 ab0:	dc 01       	movw	r26, r24
 ab2:	fc 01       	movw	r30, r24
 ab4:	67 2f       	mov	r22, r23
 ab6:	71 91       	ld	r23, Z+
 ab8:	77 23       	and	r23, r23
 aba:	e1 f7       	brne	.-8      	; 0xab4 <strrev+0x4>
 abc:	32 97       	sbiw	r30, 0x02	; 2
 abe:	04 c0       	rjmp	.+8      	; 0xac8 <strrev+0x18>
 ac0:	7c 91       	ld	r23, X
 ac2:	6d 93       	st	X+, r22
 ac4:	70 83       	st	Z, r23
 ac6:	62 91       	ld	r22, -Z
 ac8:	ae 17       	cp	r26, r30
 aca:	bf 07       	cpc	r27, r31
 acc:	c8 f3       	brcs	.-14     	; 0xac0 <strrev+0x10>
 ace:	08 95       	ret

00000ad0 <__udivmodhi4>:
 ad0:	aa 1b       	sub	r26, r26
 ad2:	bb 1b       	sub	r27, r27
 ad4:	51 e1       	ldi	r21, 0x11	; 17
 ad6:	07 c0       	rjmp	.+14     	; 0xae6 <__udivmodhi4_ep>

00000ad8 <__udivmodhi4_loop>:
 ad8:	aa 1f       	adc	r26, r26
 ada:	bb 1f       	adc	r27, r27
 adc:	a6 17       	cp	r26, r22
 ade:	b7 07       	cpc	r27, r23
 ae0:	10 f0       	brcs	.+4      	; 0xae6 <__udivmodhi4_ep>
 ae2:	a6 1b       	sub	r26, r22
 ae4:	b7 0b       	sbc	r27, r23

00000ae6 <__udivmodhi4_ep>:
 ae6:	88 1f       	adc	r24, r24
 ae8:	99 1f       	adc	r25, r25
 aea:	5a 95       	dec	r21
 aec:	a9 f7       	brne	.-22     	; 0xad8 <__udivmodhi4_loop>
 aee:	80 95       	com	r24
 af0:	90 95       	com	r25
 af2:	bc 01       	movw	r22, r24
 af4:	cd 01       	movw	r24, r26
 af6:	08 95       	ret

00000af8 <_exit>:
 af8:	f8 94       	cli

00000afa <__stop_program>:
 afa:	ff cf       	rjmp	.-2      	; 0xafa <__stop_program>
