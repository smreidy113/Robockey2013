
LocalTest.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000014  00800100  00002e24  00002eb8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00002e24  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000000b7  00800114  00800114  00002ecc  2**0
                  ALLOC
  3 .stab         00004068  00000000  00000000  00002ecc  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      000012b9  00000000  00000000  00006f34  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      0000002f  00000000  00000000  000081ed  2**0
                  CONTENTS, READONLY
  6 .debug_aranges 000002c0  00000000  00000000  0000821c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00002c0d  00000000  00000000  000084dc  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00000b18  00000000  00000000  0000b0e9  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   000012cc  00000000  00000000  0000bc01  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000954  00000000  00000000  0000ced0  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    000008d5  00000000  00000000  0000d824  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    00003256  00000000  00000000  0000e0f9  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 000002c8  00000000  00000000  0001134f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__ctors_end>
       4:	0c 94 06 01 	jmp	0x20c	; 0x20c <__bad_interrupt>
       8:	0c 94 06 01 	jmp	0x20c	; 0x20c <__bad_interrupt>
       c:	0c 94 17 07 	jmp	0xe2e	; 0xe2e <__vector_3>
      10:	0c 94 06 01 	jmp	0x20c	; 0x20c <__bad_interrupt>
      14:	0c 94 06 01 	jmp	0x20c	; 0x20c <__bad_interrupt>
      18:	0c 94 06 01 	jmp	0x20c	; 0x20c <__bad_interrupt>
      1c:	0c 94 06 01 	jmp	0x20c	; 0x20c <__bad_interrupt>
      20:	0c 94 06 01 	jmp	0x20c	; 0x20c <__bad_interrupt>
      24:	0c 94 06 01 	jmp	0x20c	; 0x20c <__bad_interrupt>
      28:	0c 94 db 0e 	jmp	0x1db6	; 0x1db6 <__vector_10>
      2c:	0c 94 19 0f 	jmp	0x1e32	; 0x1e32 <__vector_11>
      30:	0c 94 06 01 	jmp	0x20c	; 0x20c <__bad_interrupt>
      34:	0c 94 06 01 	jmp	0x20c	; 0x20c <__bad_interrupt>
      38:	0c 94 06 01 	jmp	0x20c	; 0x20c <__bad_interrupt>
      3c:	0c 94 06 01 	jmp	0x20c	; 0x20c <__bad_interrupt>
      40:	0c 94 06 01 	jmp	0x20c	; 0x20c <__bad_interrupt>
      44:	0c 94 06 01 	jmp	0x20c	; 0x20c <__bad_interrupt>
      48:	0c 94 06 01 	jmp	0x20c	; 0x20c <__bad_interrupt>
      4c:	0c 94 06 01 	jmp	0x20c	; 0x20c <__bad_interrupt>
      50:	0c 94 06 01 	jmp	0x20c	; 0x20c <__bad_interrupt>
      54:	0c 94 06 01 	jmp	0x20c	; 0x20c <__bad_interrupt>
      58:	0c 94 06 01 	jmp	0x20c	; 0x20c <__bad_interrupt>
      5c:	0c 94 06 01 	jmp	0x20c	; 0x20c <__bad_interrupt>
      60:	0c 94 06 01 	jmp	0x20c	; 0x20c <__bad_interrupt>
      64:	0c 94 06 01 	jmp	0x20c	; 0x20c <__bad_interrupt>
      68:	0c 94 06 01 	jmp	0x20c	; 0x20c <__bad_interrupt>
      6c:	0c 94 06 01 	jmp	0x20c	; 0x20c <__bad_interrupt>
      70:	0c 94 06 01 	jmp	0x20c	; 0x20c <__bad_interrupt>
      74:	0c 94 49 07 	jmp	0xe92	; 0xe92 <__vector_29>
      78:	0c 94 06 01 	jmp	0x20c	; 0x20c <__bad_interrupt>
      7c:	0c 94 06 01 	jmp	0x20c	; 0x20c <__bad_interrupt>
      80:	0c 94 06 01 	jmp	0x20c	; 0x20c <__bad_interrupt>
      84:	0c 94 06 01 	jmp	0x20c	; 0x20c <__bad_interrupt>
      88:	0c 94 06 01 	jmp	0x20c	; 0x20c <__bad_interrupt>
      8c:	0c 94 06 01 	jmp	0x20c	; 0x20c <__bad_interrupt>
      90:	0c 94 06 01 	jmp	0x20c	; 0x20c <__bad_interrupt>
      94:	0c 94 06 01 	jmp	0x20c	; 0x20c <__bad_interrupt>
      98:	0c 94 06 01 	jmp	0x20c	; 0x20c <__bad_interrupt>
      9c:	0c 94 06 01 	jmp	0x20c	; 0x20c <__bad_interrupt>
      a0:	0c 94 06 01 	jmp	0x20c	; 0x20c <__bad_interrupt>
      a4:	0c 94 06 01 	jmp	0x20c	; 0x20c <__bad_interrupt>
      a8:	0c 94 06 01 	jmp	0x20c	; 0x20c <__bad_interrupt>
      ac:	08 4a       	sbci	r16, 0xA8	; 168
      ae:	d7 3b       	cpi	r29, 0xB7	; 183
      b0:	3b ce       	rjmp	.-906    	; 0xfffffd28 <__eeprom_end+0xff7efd28>
      b2:	01 6e       	ori	r16, 0xE1	; 225
      b4:	84 bc       	out	0x24, r8	; 36
      b6:	bf fd       	.word	0xfdbf	; ????
      b8:	c1 2f       	mov	r28, r17
      ba:	3d 6c       	ori	r19, 0xCD	; 205
      bc:	74 31       	cpi	r23, 0x14	; 20
      be:	9a bd       	out	0x2a, r25	; 42
      c0:	56 83       	std	Z+6, r21	; 0x06
      c2:	3d da       	rcall	.-2950   	; 0xfffff53e <__eeprom_end+0xff7ef53e>
      c4:	3d 00       	.word	0x003d	; ????
      c6:	c7 7f       	andi	r28, 0xF7	; 247
      c8:	11 be       	out	0x31, r1	; 49
      ca:	d9 e4       	ldi	r29, 0x49	; 73
      cc:	bb 4c       	sbci	r27, 0xCB	; 203
      ce:	3e 91       	ld	r19, -X
      d0:	6b aa       	std	Y+51, r6	; 0x33
      d2:	aa be       	out	0x3a, r10	; 58
      d4:	00 00       	nop
      d6:	00 80       	ld	r0, Z
      d8:	3f 07       	cpc	r19, r31
      da:	63 42       	sbci	r22, 0x23	; 35
      dc:	36 b7       	in	r19, 0x36	; 54
      de:	9b d8       	rcall	.-3786   	; 0xfffff216 <__eeprom_end+0xff7ef216>
      e0:	a7 1a       	sub	r10, r23
      e2:	39 68       	ori	r19, 0x89	; 137
      e4:	56 18       	sub	r5, r6
      e6:	ae ba       	out	0x1e, r10	; 30
      e8:	ab 55       	subi	r26, 0x5B	; 91
      ea:	8c 1d       	adc	r24, r12
      ec:	3c b7       	in	r19, 0x3c	; 60
      ee:	cc 57       	subi	r28, 0x7C	; 124
      f0:	63 bd       	out	0x23, r22	; 35
      f2:	6d ed       	ldi	r22, 0xDD	; 221
      f4:	fd 75       	andi	r31, 0x5D	; 93
      f6:	3e f6       	brtc	.-114    	; 0x86 <__SREG__+0x47>
      f8:	17 72       	andi	r17, 0x27	; 39
      fa:	31 bf       	out	0x31, r19	; 49
      fc:	00 00       	nop
      fe:	00 80       	ld	r0, Z
     100:	3f 05       	cpc	r19, r15
     102:	a8 4c       	sbci	r26, 0xC8	; 200
     104:	cd b2       	in	r12, 0x1d	; 29
     106:	d4 4e       	sbci	r29, 0xE4	; 228
     108:	b9 38       	cpi	r27, 0x89	; 137
     10a:	36 a9       	ldd	r19, Z+54	; 0x36
     10c:	02 0c       	add	r0, r2
     10e:	50 b9       	out	0x00, r21	; 0
     110:	91 86       	std	Z+9, r9	; 0x09
     112:	88 08       	sbc	r8, r8
     114:	3c a6       	std	Y+44, r3	; 0x2c
     116:	aa aa       	std	Y+50, r10	; 0x32
     118:	2a be       	out	0x3a, r2	; 58
     11a:	00 00       	nop
     11c:	00 80       	ld	r0, Z
     11e:	3f 00       	.word	0x003f	; ????

0000011f <descriptor_list>:
     11f:	00 01 00 00 53 01 12 00 02 00 00 65 01 43 00 03     ....S......e.C..
     12f:	00 00 a8 01 04 01 03 09 04 ac 01 12 02 03 09 04     ................
     13f:	c0 01 06 03 03 09 04 c8 01 08                       ..........

00000149 <endpoint_config_table>:
     149:	00 01 c1 12 01 80 36 01 81 36                       ......6..6

00000153 <device_descriptor>:
     153:	12 01 00 02 02 00 00 10 c0 16 7a 04 00 01 01 02     ..........z.....
     163:	03 01                                               ..

00000165 <config1_descriptor>:
     165:	09 02 43 00 02 01 00 c0 32 09 04 00 00 01 02 02     ..C.....2.......
     175:	01 00 05 24 00 10 01 05 24 01 01 01 04 24 02 06     ...$....$....$..
     185:	05 24 06 00 01 07 05 82 03 10 00 40 09 04 01 00     .$.........@....
     195:	02 0a 00 00 00 07 05 03 02 40 00 00 07 05 84 02     .........@......
     1a5:	40 00 00                                            @..

000001a8 <string0>:
     1a8:	04 03 09 04                                         ....

000001ac <string1>:
     1ac:	12 03 4a 00 2e 00 20 00 46 00 69 00 65 00 6e 00     ..J... .F.i.e.n.
     1bc:	65 00 00 00                                         e...

000001c0 <string2>:
     1c0:	06 03 4d 00 32 00 00 00                             ..M.2...

000001c8 <string3>:
     1c8:	08 03 34 00 31 00 30 00 00 00                       ..4.1.0...

000001d2 <__ctors_end>:
     1d2:	11 24       	eor	r1, r1
     1d4:	1f be       	out	0x3f, r1	; 63
     1d6:	cf ef       	ldi	r28, 0xFF	; 255
     1d8:	da e0       	ldi	r29, 0x0A	; 10
     1da:	de bf       	out	0x3e, r29	; 62
     1dc:	cd bf       	out	0x3d, r28	; 61

000001de <__do_copy_data>:
     1de:	11 e0       	ldi	r17, 0x01	; 1
     1e0:	a0 e0       	ldi	r26, 0x00	; 0
     1e2:	b1 e0       	ldi	r27, 0x01	; 1
     1e4:	e4 e2       	ldi	r30, 0x24	; 36
     1e6:	fe e2       	ldi	r31, 0x2E	; 46
     1e8:	02 c0       	rjmp	.+4      	; 0x1ee <__do_copy_data+0x10>
     1ea:	05 90       	lpm	r0, Z+
     1ec:	0d 92       	st	X+, r0
     1ee:	a4 31       	cpi	r26, 0x14	; 20
     1f0:	b1 07       	cpc	r27, r17
     1f2:	d9 f7       	brne	.-10     	; 0x1ea <__do_copy_data+0xc>

000001f4 <__do_clear_bss>:
     1f4:	21 e0       	ldi	r18, 0x01	; 1
     1f6:	a4 e1       	ldi	r26, 0x14	; 20
     1f8:	b1 e0       	ldi	r27, 0x01	; 1
     1fa:	01 c0       	rjmp	.+2      	; 0x1fe <.do_clear_bss_start>

000001fc <.do_clear_bss_loop>:
     1fc:	1d 92       	st	X+, r1

000001fe <.do_clear_bss_start>:
     1fe:	ab 3c       	cpi	r26, 0xCB	; 203
     200:	b2 07       	cpc	r27, r18
     202:	e1 f7       	brne	.-8      	; 0x1fc <.do_clear_bss_loop>
     204:	0e 94 c9 05 	call	0xb92	; 0xb92 <main>
     208:	0c 94 10 17 	jmp	0x2e20	; 0x2e20 <_exit>

0000020c <__bad_interrupt>:
     20c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000210 <chooseInput>:
		}
		if (changedState) return;
	}
	m_red(OFF);
	game_pause();
}
     210:	83 30       	cpi	r24, 0x03	; 3
     212:	91 05       	cpc	r25, r1
     214:	09 f4       	brne	.+2      	; 0x218 <chooseInput+0x8>
     216:	45 c0       	rjmp	.+138    	; 0x2a2 <chooseInput+0x92>
     218:	3c f4       	brge	.+14     	; 0x228 <chooseInput+0x18>
     21a:	81 30       	cpi	r24, 0x01	; 1
     21c:	91 05       	cpc	r25, r1
     21e:	f9 f0       	breq	.+62     	; 0x25e <chooseInput+0x4e>
     220:	7c f5       	brge	.+94     	; 0x280 <chooseInput+0x70>
     222:	89 2b       	or	r24, r25
     224:	59 f0       	breq	.+22     	; 0x23c <chooseInput+0x2c>
     226:	08 95       	ret
     228:	85 30       	cpi	r24, 0x05	; 5
     22a:	91 05       	cpc	r25, r1
     22c:	09 f4       	brne	.+2      	; 0x230 <chooseInput+0x20>
     22e:	5b c0       	rjmp	.+182    	; 0x2e6 <chooseInput+0xd6>
     230:	0c f4       	brge	.+2      	; 0x234 <chooseInput+0x24>
     232:	48 c0       	rjmp	.+144    	; 0x2c4 <chooseInput+0xb4>
     234:	06 97       	sbiw	r24, 0x06	; 6

int i = 0;
int ADCarr[7] = {0, 0, 0, 0, 0, 0, 0};

void chooseInput(int i) {
	switch (i) {
     236:	09 f0       	breq	.+2      	; 0x23a <chooseInput+0x2a>
     238:	77 c0       	rjmp	.+238    	; 0x328 <chooseInput+0x118>
     23a:	66 c0       	rjmp	.+204    	; 0x308 <chooseInput+0xf8>
		case 0:
		clear(ADCSRB, MUX5);//Set analog input (F0)
     23c:	eb e7       	ldi	r30, 0x7B	; 123
     23e:	f0 e0       	ldi	r31, 0x00	; 0
     240:	80 81       	ld	r24, Z
     242:	8f 7d       	andi	r24, 0xDF	; 223
     244:	80 83       	st	Z, r24
		clear(ADMUX, MUX2);	//^
     246:	ec e7       	ldi	r30, 0x7C	; 124
     248:	f0 e0       	ldi	r31, 0x00	; 0
     24a:	80 81       	ld	r24, Z
     24c:	8b 7f       	andi	r24, 0xFB	; 251
     24e:	80 83       	st	Z, r24
		clear(ADMUX, MUX1);	//^
     250:	80 81       	ld	r24, Z
     252:	8d 7f       	andi	r24, 0xFD	; 253
     254:	80 83       	st	Z, r24
		clear(ADMUX, MUX0);	//^
     256:	80 81       	ld	r24, Z
     258:	8e 7f       	andi	r24, 0xFE	; 254
     25a:	80 83       	st	Z, r24

		break;
     25c:	08 95       	ret
		case 1:
		clear(ADCSRB, MUX5);//Set analog input (F1)
     25e:	eb e7       	ldi	r30, 0x7B	; 123
     260:	f0 e0       	ldi	r31, 0x00	; 0
     262:	80 81       	ld	r24, Z
     264:	8f 7d       	andi	r24, 0xDF	; 223
     266:	80 83       	st	Z, r24
		clear(ADMUX, MUX2);	//^
     268:	ec e7       	ldi	r30, 0x7C	; 124
     26a:	f0 e0       	ldi	r31, 0x00	; 0
     26c:	80 81       	ld	r24, Z
     26e:	8b 7f       	andi	r24, 0xFB	; 251
     270:	80 83       	st	Z, r24
		clear(ADMUX, MUX1);	//^
     272:	80 81       	ld	r24, Z
     274:	8d 7f       	andi	r24, 0xFD	; 253
     276:	80 83       	st	Z, r24
		set(ADMUX, MUX0);	//^
     278:	80 81       	ld	r24, Z
     27a:	81 60       	ori	r24, 0x01	; 1
     27c:	80 83       	st	Z, r24

		break;
     27e:	08 95       	ret
		case 2:
		clear(ADCSRB, MUX5);//Set analog input (F4)
     280:	eb e7       	ldi	r30, 0x7B	; 123
     282:	f0 e0       	ldi	r31, 0x00	; 0
     284:	80 81       	ld	r24, Z
     286:	8f 7d       	andi	r24, 0xDF	; 223
     288:	80 83       	st	Z, r24
		set(ADMUX, MUX2);	//^
     28a:	ec e7       	ldi	r30, 0x7C	; 124
     28c:	f0 e0       	ldi	r31, 0x00	; 0
     28e:	80 81       	ld	r24, Z
     290:	84 60       	ori	r24, 0x04	; 4
     292:	80 83       	st	Z, r24
		clear(ADMUX, MUX1);	//^
     294:	80 81       	ld	r24, Z
     296:	8d 7f       	andi	r24, 0xFD	; 253
     298:	80 83       	st	Z, r24
		clear(ADMUX, MUX0);	//^
     29a:	80 81       	ld	r24, Z
     29c:	8e 7f       	andi	r24, 0xFE	; 254
     29e:	80 83       	st	Z, r24

		break;
     2a0:	08 95       	ret
		case 3:

		clear(ADCSRB, MUX5);//Set analog input (F5)
     2a2:	eb e7       	ldi	r30, 0x7B	; 123
     2a4:	f0 e0       	ldi	r31, 0x00	; 0
     2a6:	80 81       	ld	r24, Z
     2a8:	8f 7d       	andi	r24, 0xDF	; 223
     2aa:	80 83       	st	Z, r24
		set(ADMUX, MUX2);	//^
     2ac:	ec e7       	ldi	r30, 0x7C	; 124
     2ae:	f0 e0       	ldi	r31, 0x00	; 0
     2b0:	80 81       	ld	r24, Z
     2b2:	84 60       	ori	r24, 0x04	; 4
     2b4:	80 83       	st	Z, r24
		clear(ADMUX, MUX1);	//^
     2b6:	80 81       	ld	r24, Z
     2b8:	8d 7f       	andi	r24, 0xFD	; 253
     2ba:	80 83       	st	Z, r24
		set(ADMUX, MUX0);	//^
     2bc:	80 81       	ld	r24, Z
     2be:	81 60       	ori	r24, 0x01	; 1
     2c0:	80 83       	st	Z, r24
		break;
     2c2:	08 95       	ret
		case 4:
		clear(ADCSRB, MUX5);//Set analog input (F6)
     2c4:	eb e7       	ldi	r30, 0x7B	; 123
     2c6:	f0 e0       	ldi	r31, 0x00	; 0
     2c8:	80 81       	ld	r24, Z
     2ca:	8f 7d       	andi	r24, 0xDF	; 223
     2cc:	80 83       	st	Z, r24
		set(ADMUX, MUX2);	//^
     2ce:	ec e7       	ldi	r30, 0x7C	; 124
     2d0:	f0 e0       	ldi	r31, 0x00	; 0
     2d2:	80 81       	ld	r24, Z
     2d4:	84 60       	ori	r24, 0x04	; 4
     2d6:	80 83       	st	Z, r24
		set(ADMUX, MUX1);	//^
     2d8:	80 81       	ld	r24, Z
     2da:	82 60       	ori	r24, 0x02	; 2
     2dc:	80 83       	st	Z, r24
		clear(ADMUX, MUX0);	//^
     2de:	80 81       	ld	r24, Z
     2e0:	8e 7f       	andi	r24, 0xFE	; 254
     2e2:	80 83       	st	Z, r24
		break;
     2e4:	08 95       	ret
		case 5:
		set(ADCSRB, MUX5);//Set analog input (D4)
     2e6:	eb e7       	ldi	r30, 0x7B	; 123
     2e8:	f0 e0       	ldi	r31, 0x00	; 0
     2ea:	80 81       	ld	r24, Z
     2ec:	80 62       	ori	r24, 0x20	; 32
     2ee:	80 83       	st	Z, r24
		clear(ADMUX, MUX2);	//^
     2f0:	ec e7       	ldi	r30, 0x7C	; 124
     2f2:	f0 e0       	ldi	r31, 0x00	; 0
     2f4:	80 81       	ld	r24, Z
     2f6:	8b 7f       	andi	r24, 0xFB	; 251
     2f8:	80 83       	st	Z, r24
		clear(ADMUX, MUX1);	//^
     2fa:	80 81       	ld	r24, Z
     2fc:	8d 7f       	andi	r24, 0xFD	; 253
     2fe:	80 83       	st	Z, r24
		clear(ADMUX, MUX0);	//^
     300:	80 81       	ld	r24, Z
     302:	8e 7f       	andi	r24, 0xFE	; 254
     304:	80 83       	st	Z, r24
		break;
     306:	08 95       	ret
		case 6:
		set(ADCSRB, MUX5);//Set analog input (D6)
     308:	eb e7       	ldi	r30, 0x7B	; 123
     30a:	f0 e0       	ldi	r31, 0x00	; 0
     30c:	80 81       	ld	r24, Z
     30e:	80 62       	ori	r24, 0x20	; 32
     310:	80 83       	st	Z, r24
		clear(ADMUX, MUX2);	//^
     312:	ec e7       	ldi	r30, 0x7C	; 124
     314:	f0 e0       	ldi	r31, 0x00	; 0
     316:	80 81       	ld	r24, Z
     318:	8b 7f       	andi	r24, 0xFB	; 251
     31a:	80 83       	st	Z, r24
		clear(ADMUX, MUX1);	//^
     31c:	80 81       	ld	r24, Z
     31e:	8d 7f       	andi	r24, 0xFD	; 253
     320:	80 83       	st	Z, r24
		set(ADMUX, MUX0);	//^
     322:	80 81       	ld	r24, Z
     324:	81 60       	ori	r24, 0x01	; 1
     326:	80 83       	st	Z, r24
     328:	08 95       	ret

0000032a <getADC>:
int ADC5 = 0;
int ADC6 = 0;
int conversion = 0;

void getADC() {
	if (conversion) {
     32a:	80 91 14 01 	lds	r24, 0x0114
     32e:	90 91 15 01 	lds	r25, 0x0115
     332:	89 2b       	or	r24, r25
     334:	09 f4       	brne	.+2      	; 0x338 <getADC+0xe>
     336:	55 c0       	rjmp	.+170    	; 0x3e2 <getADC+0xb8>
		switch (flag) {
     338:	80 91 32 01 	lds	r24, 0x0132
     33c:	90 91 33 01 	lds	r25, 0x0133
     340:	83 30       	cpi	r24, 0x03	; 3
     342:	91 05       	cpc	r25, r1
     344:	59 f1       	breq	.+86     	; 0x39c <getADC+0x72>
     346:	3c f4       	brge	.+14     	; 0x356 <getADC+0x2c>
     348:	81 30       	cpi	r24, 0x01	; 1
     34a:	91 05       	cpc	r25, r1
     34c:	a9 f0       	breq	.+42     	; 0x378 <getADC+0x4e>
     34e:	ec f4       	brge	.+58     	; 0x38a <getADC+0x60>
     350:	89 2b       	or	r24, r25
     352:	49 f0       	breq	.+18     	; 0x366 <getADC+0x3c>
     354:	46 c0       	rjmp	.+140    	; 0x3e2 <getADC+0xb8>
     356:	85 30       	cpi	r24, 0x05	; 5
     358:	91 05       	cpc	r25, r1
     35a:	91 f1       	breq	.+100    	; 0x3c0 <getADC+0x96>
     35c:	44 f1       	brlt	.+80     	; 0x3ae <getADC+0x84>
     35e:	06 97       	sbiw	r24, 0x06	; 6
     360:	09 f0       	breq	.+2      	; 0x364 <getADC+0x3a>
     362:	3f c0       	rjmp	.+126    	; 0x3e2 <getADC+0xb8>
     364:	36 c0       	rjmp	.+108    	; 0x3d2 <getADC+0xa8>
			case 0:
			ADC0 = ADC;
     366:	80 91 78 00 	lds	r24, 0x0078
     36a:	90 91 79 00 	lds	r25, 0x0079
     36e:	90 93 23 01 	sts	0x0123, r25
     372:	80 93 22 01 	sts	0x0122, r24
			break;
     376:	35 c0       	rjmp	.+106    	; 0x3e2 <getADC+0xb8>
			case 1:
			ADC1 = ADC;
     378:	80 91 78 00 	lds	r24, 0x0078
     37c:	90 91 79 00 	lds	r25, 0x0079
     380:	90 93 21 01 	sts	0x0121, r25
     384:	80 93 20 01 	sts	0x0120, r24
			break;
     388:	2c c0       	rjmp	.+88     	; 0x3e2 <getADC+0xb8>
			case 2:
			ADC2 = ADC;
     38a:	80 91 78 00 	lds	r24, 0x0078
     38e:	90 91 79 00 	lds	r25, 0x0079
     392:	90 93 1f 01 	sts	0x011F, r25
     396:	80 93 1e 01 	sts	0x011E, r24
			break;
     39a:	23 c0       	rjmp	.+70     	; 0x3e2 <getADC+0xb8>
			case 3:
			ADC3 = ADC;
     39c:	80 91 78 00 	lds	r24, 0x0078
     3a0:	90 91 79 00 	lds	r25, 0x0079
     3a4:	90 93 1d 01 	sts	0x011D, r25
     3a8:	80 93 1c 01 	sts	0x011C, r24
			break;
     3ac:	1a c0       	rjmp	.+52     	; 0x3e2 <getADC+0xb8>
			case 4:
			ADC4 = ADC;
     3ae:	80 91 78 00 	lds	r24, 0x0078
     3b2:	90 91 79 00 	lds	r25, 0x0079
     3b6:	90 93 1b 01 	sts	0x011B, r25
     3ba:	80 93 1a 01 	sts	0x011A, r24
			break;
     3be:	11 c0       	rjmp	.+34     	; 0x3e2 <getADC+0xb8>
			case 5:
			ADC5 = ADC;
     3c0:	80 91 78 00 	lds	r24, 0x0078
     3c4:	90 91 79 00 	lds	r25, 0x0079
     3c8:	90 93 19 01 	sts	0x0119, r25
     3cc:	80 93 18 01 	sts	0x0118, r24
			break;
     3d0:	08 c0       	rjmp	.+16     	; 0x3e2 <getADC+0xb8>
			case 6:
			ADC6 = ADC;
     3d2:	80 91 78 00 	lds	r24, 0x0078
     3d6:	90 91 79 00 	lds	r25, 0x0079
     3da:	90 93 17 01 	sts	0x0117, r25
     3de:	80 93 16 01 	sts	0x0116, r24
			break;
		}
	}
	clear(ADCSRA, ADEN);	//Enable/Start conversion
     3e2:	ea e7       	ldi	r30, 0x7A	; 122
     3e4:	f0 e0       	ldi	r31, 0x00	; 0
     3e6:	80 81       	ld	r24, Z
     3e8:	8f 77       	andi	r24, 0x7F	; 127
     3ea:	80 83       	st	Z, r24
	clear(ADCSRA, ADSC);	//^
     3ec:	80 81       	ld	r24, Z
     3ee:	8f 7b       	andi	r24, 0xBF	; 191
     3f0:	80 83       	st	Z, r24
	clear(ADCSRA, ADATE);
     3f2:	80 81       	ld	r24, Z
     3f4:	8f 7d       	andi	r24, 0xDF	; 223
     3f6:	80 83       	st	Z, r24
	clear(ADCSRA, ADIF);
     3f8:	80 81       	ld	r24, Z
     3fa:	8f 7e       	andi	r24, 0xEF	; 239
     3fc:	80 83       	st	Z, r24
	if (flag >= 0 && flag < 7) {
     3fe:	80 91 32 01 	lds	r24, 0x0132
     402:	90 91 33 01 	lds	r25, 0x0133
     406:	87 30       	cpi	r24, 0x07	; 7
     408:	91 05       	cpc	r25, r1
     40a:	58 f4       	brcc	.+22     	; 0x422 <getADC+0xf8>
		flag = (flag + 1) % 7;
     40c:	01 96       	adiw	r24, 0x01	; 1
     40e:	67 e0       	ldi	r22, 0x07	; 7
     410:	70 e0       	ldi	r23, 0x00	; 0
     412:	0e 94 b7 16 	call	0x2d6e	; 0x2d6e <__divmodhi4>
     416:	80 93 32 01 	sts	0x0132, r24
     41a:	90 93 33 01 	sts	0x0133, r25
		chooseInput(flag);
     41e:	0e 94 08 01 	call	0x210	; 0x210 <chooseInput>
	}
	set(ADCSRA, ADATE);	//Set trigger to free-running mode
     422:	ea e7       	ldi	r30, 0x7A	; 122
     424:	f0 e0       	ldi	r31, 0x00	; 0
     426:	80 81       	ld	r24, Z
     428:	80 62       	ori	r24, 0x20	; 32
     42a:	80 83       	st	Z, r24
	set(ADCSRA, ADEN);	//Enable/Start conversion
     42c:	80 81       	ld	r24, Z
     42e:	80 68       	ori	r24, 0x80	; 128
     430:	80 83       	st	Z, r24
	set(ADCSRA, ADSC);	//^
     432:	80 81       	ld	r24, Z
     434:	80 64       	ori	r24, 0x40	; 64
     436:	80 83       	st	Z, r24
	
	set(ADCSRA, ADIF);	//Enable reading results
     438:	80 81       	ld	r24, Z
     43a:	80 61       	ori	r24, 0x10	; 16
     43c:	80 83       	st	Z, r24
	conversion = 0;
     43e:	10 92 15 01 	sts	0x0115, r1
     442:	10 92 14 01 	sts	0x0114, r1
	ADCarr[0] = ADC0;
     446:	80 91 22 01 	lds	r24, 0x0122
     44a:	90 91 23 01 	lds	r25, 0x0123
     44e:	90 93 25 01 	sts	0x0125, r25
     452:	80 93 24 01 	sts	0x0124, r24
	ADCarr[1] = ADC1;
     456:	80 91 20 01 	lds	r24, 0x0120
     45a:	90 91 21 01 	lds	r25, 0x0121
     45e:	90 93 27 01 	sts	0x0127, r25
     462:	80 93 26 01 	sts	0x0126, r24
	ADCarr[2] = ADC2;
     466:	80 91 1e 01 	lds	r24, 0x011E
     46a:	90 91 1f 01 	lds	r25, 0x011F
     46e:	90 93 29 01 	sts	0x0129, r25
     472:	80 93 28 01 	sts	0x0128, r24
	ADCarr[3] = ADC3;
     476:	80 91 1c 01 	lds	r24, 0x011C
     47a:	90 91 1d 01 	lds	r25, 0x011D
     47e:	90 93 2b 01 	sts	0x012B, r25
     482:	80 93 2a 01 	sts	0x012A, r24
	ADCarr[4] = ADC4;
     486:	80 91 1a 01 	lds	r24, 0x011A
     48a:	90 91 1b 01 	lds	r25, 0x011B
     48e:	90 93 2d 01 	sts	0x012D, r25
     492:	80 93 2c 01 	sts	0x012C, r24
	ADCarr[5] = ADC5;
     496:	80 91 18 01 	lds	r24, 0x0118
     49a:	90 91 19 01 	lds	r25, 0x0119
     49e:	90 93 2f 01 	sts	0x012F, r25
     4a2:	80 93 2e 01 	sts	0x012E, r24
	ADCarr[6] = ADC6;
     4a6:	80 91 16 01 	lds	r24, 0x0116
     4aa:	90 91 17 01 	lds	r25, 0x0117
     4ae:	90 93 31 01 	sts	0x0131, r25
     4b2:	80 93 30 01 	sts	0x0130, r24
     4b6:	08 95       	ret

000004b8 <reportADC>:
	
}

void reportADC() {
	
	m_red(ON);
     4b8:	6e 9a       	sbi	0x0d, 6	; 13
     4ba:	76 98       	cbi	0x0e, 6	; 14
	m_green(ON);
     4bc:	6a 9a       	sbi	0x0d, 2	; 13
     4be:	72 98       	cbi	0x0e, 2	; 14

	m_usb_init(); // connect usb
     4c0:	0e 94 20 0e 	call	0x1c40	; 0x1c40 <m_usb_init>
	while(!m_usb_isconnected());  //wait for connection
     4c4:	0e 94 39 0e 	call	0x1c72	; 0x1c72 <m_usb_isconnected>
     4c8:	88 23       	and	r24, r24
     4ca:	e1 f3       	breq	.-8      	; 0x4c4 <reportADC+0xc>

	m_red(OFF);
     4cc:	6e 9a       	sbi	0x0d, 6	; 13
     4ce:	76 9a       	sbi	0x0e, 6	; 14
	m_green(OFF);
     4d0:	6a 9a       	sbi	0x0d, 2	; 13
     4d2:	72 9a       	sbi	0x0e, 2	; 14
		}
		counter++;*/
		
		if(rx_buffer == 1) {  			//computer wants ir buffer
			//write ir buffer as concatenated hex:  i.e. f0f1f4f5
			m_usb_tx_int(ADCarr[0]);
     4d4:	0f 2e       	mov	r0, r31
     4d6:	f4 e2       	ldi	r31, 0x24	; 36
     4d8:	af 2e       	mov	r10, r31
     4da:	f1 e0       	ldi	r31, 0x01	; 1
     4dc:	bf 2e       	mov	r11, r31
     4de:	f0 2d       	mov	r31, r0
			m_usb_tx_char('\t');
			m_usb_tx_int(ADCarr[1]);
     4e0:	0f 2e       	mov	r0, r31
     4e2:	f6 e2       	ldi	r31, 0x26	; 38
     4e4:	cf 2e       	mov	r12, r31
     4e6:	f1 e0       	ldi	r31, 0x01	; 1
     4e8:	df 2e       	mov	r13, r31
     4ea:	f0 2d       	mov	r31, r0
			m_usb_tx_char('\t');
			m_usb_tx_int(ADCarr[2]);
     4ec:	0f 2e       	mov	r0, r31
     4ee:	f8 e2       	ldi	r31, 0x28	; 40
     4f0:	ef 2e       	mov	r14, r31
     4f2:	f1 e0       	ldi	r31, 0x01	; 1
     4f4:	ff 2e       	mov	r15, r31
     4f6:	f0 2d       	mov	r31, r0
			m_usb_tx_char('\t');
			m_usb_tx_int(ADCarr[3]);
     4f8:	0f 2e       	mov	r0, r31
     4fa:	fa e2       	ldi	r31, 0x2A	; 42
     4fc:	4f 2e       	mov	r4, r31
     4fe:	f1 e0       	ldi	r31, 0x01	; 1
     500:	5f 2e       	mov	r5, r31
     502:	f0 2d       	mov	r31, r0
			m_usb_tx_char('\t');
			m_usb_tx_int(ADCarr[4]);
     504:	cc e2       	ldi	r28, 0x2C	; 44
     506:	d1 e0       	ldi	r29, 0x01	; 1
			m_usb_tx_char('\t');
			m_usb_tx_int(ADCarr[5]);
     508:	0f 2e       	mov	r0, r31
     50a:	fe e2       	ldi	r31, 0x2E	; 46
     50c:	8f 2e       	mov	r8, r31
     50e:	f1 e0       	ldi	r31, 0x01	; 1
     510:	9f 2e       	mov	r9, r31
     512:	f0 2d       	mov	r31, r0
			m_usb_tx_char('\t');
			m_usb_tx_int(ADCarr[6]);
     514:	0f 2e       	mov	r0, r31
     516:	f0 e3       	ldi	r31, 0x30	; 48
     518:	6f 2e       	mov	r6, r31
     51a:	f1 e0       	ldi	r31, 0x01	; 1
     51c:	7f 2e       	mov	r7, r31
     51e:	f0 2d       	mov	r31, r0
	char rx_buffer; //computer interactions
	
	
	
while(1) {
	getADC();
     520:	0e 94 95 01 	call	0x32a	; 0x32a <getADC>
	while(!m_usb_rx_available());  	//wait for an indication from the computer
     524:	0e 94 5a 0e 	call	0x1cb4	; 0x1cb4 <m_usb_rx_available>
     528:	88 23       	and	r24, r24
     52a:	e1 f3       	breq	.-8      	; 0x524 <reportADC+0x6c>
		rx_buffer = m_usb_rx_char();  	//grab the computer packet
     52c:	0e 94 3c 0e 	call	0x1c78	; 0x1c78 <m_usb_rx_char>
     530:	18 2f       	mov	r17, r24

		m_usb_rx_flush();  				//clear buffer
     532:	0e 94 69 0e 	call	0x1cd2	; 0x1cd2 <m_usb_rx_flush>
		counter = 0;
		
		}
		counter++;*/
		
		if(rx_buffer == 1) {  			//computer wants ir buffer
     536:	11 30       	cpi	r17, 0x01	; 1
     538:	a1 f5       	brne	.+104    	; 0x5a2 <reportADC+0xea>
			//write ir buffer as concatenated hex:  i.e. f0f1f4f5
			m_usb_tx_int(ADCarr[0]);
     53a:	f5 01       	movw	r30, r10
     53c:	80 81       	ld	r24, Z
     53e:	91 81       	ldd	r25, Z+1	; 0x01
     540:	0e 94 a1 10 	call	0x2142	; 0x2142 <m_usb_tx_int>
			m_usb_tx_char('\t');
     544:	89 e0       	ldi	r24, 0x09	; 9
     546:	0e 94 7f 0e 	call	0x1cfe	; 0x1cfe <m_usb_tx_char>
			m_usb_tx_int(ADCarr[1]);
     54a:	f6 01       	movw	r30, r12
     54c:	80 81       	ld	r24, Z
     54e:	91 81       	ldd	r25, Z+1	; 0x01
     550:	0e 94 a1 10 	call	0x2142	; 0x2142 <m_usb_tx_int>
			m_usb_tx_char('\t');
     554:	89 e0       	ldi	r24, 0x09	; 9
     556:	0e 94 7f 0e 	call	0x1cfe	; 0x1cfe <m_usb_tx_char>
			m_usb_tx_int(ADCarr[2]);
     55a:	f7 01       	movw	r30, r14
     55c:	80 81       	ld	r24, Z
     55e:	91 81       	ldd	r25, Z+1	; 0x01
     560:	0e 94 a1 10 	call	0x2142	; 0x2142 <m_usb_tx_int>
			m_usb_tx_char('\t');
     564:	89 e0       	ldi	r24, 0x09	; 9
     566:	0e 94 7f 0e 	call	0x1cfe	; 0x1cfe <m_usb_tx_char>
			m_usb_tx_int(ADCarr[3]);
     56a:	f2 01       	movw	r30, r4
     56c:	80 81       	ld	r24, Z
     56e:	91 81       	ldd	r25, Z+1	; 0x01
     570:	0e 94 a1 10 	call	0x2142	; 0x2142 <m_usb_tx_int>
			m_usb_tx_char('\t');
     574:	89 e0       	ldi	r24, 0x09	; 9
     576:	0e 94 7f 0e 	call	0x1cfe	; 0x1cfe <m_usb_tx_char>
			m_usb_tx_int(ADCarr[4]);
     57a:	88 81       	ld	r24, Y
     57c:	99 81       	ldd	r25, Y+1	; 0x01
     57e:	0e 94 a1 10 	call	0x2142	; 0x2142 <m_usb_tx_int>
			m_usb_tx_char('\t');
     582:	89 e0       	ldi	r24, 0x09	; 9
     584:	0e 94 7f 0e 	call	0x1cfe	; 0x1cfe <m_usb_tx_char>
			m_usb_tx_int(ADCarr[5]);
     588:	f4 01       	movw	r30, r8
     58a:	80 81       	ld	r24, Z
     58c:	91 81       	ldd	r25, Z+1	; 0x01
     58e:	0e 94 a1 10 	call	0x2142	; 0x2142 <m_usb_tx_int>
			m_usb_tx_char('\t');
     592:	89 e0       	ldi	r24, 0x09	; 9
     594:	0e 94 7f 0e 	call	0x1cfe	; 0x1cfe <m_usb_tx_char>
			m_usb_tx_int(ADCarr[6]);
     598:	f3 01       	movw	r30, r6
     59a:	80 81       	ld	r24, Z
     59c:	91 81       	ldd	r25, Z+1	; 0x01
     59e:	0e 94 a1 10 	call	0x2142	; 0x2142 <m_usb_tx_int>
			/*for (int j = 0 ; j < 7 ; j++){
			m_usb_tx_int(ADCarr[j]);
			m_usb_tx_char('\t');
			}*/
		}
		m_usb_tx_char('\n');  //MATLAB serial command reads 1 line at a time
     5a2:	8a e0       	ldi	r24, 0x0A	; 10
     5a4:	0e 94 7f 0e 	call	0x1cfe	; 0x1cfe <m_usb_tx_char>
		}
     5a8:	bb cf       	rjmp	.-138    	; 0x520 <reportADC+0x68>

000005aa <turn>:
		clear(PORTB,2);
		set(PORTB,3);
	}
}

void turn(int dir,float speed, float degree) {
     5aa:	8f 92       	push	r8
     5ac:	9f 92       	push	r9
     5ae:	af 92       	push	r10
     5b0:	bf 92       	push	r11
     5b2:	cf 92       	push	r12
     5b4:	df 92       	push	r13
     5b6:	ef 92       	push	r14
     5b8:	ff 92       	push	r15
     5ba:	0f 93       	push	r16
     5bc:	1f 93       	push	r17
     5be:	cf 93       	push	r28
     5c0:	df 93       	push	r29
     5c2:	6a 01       	movw	r12, r20
     5c4:	7b 01       	movw	r14, r22
     5c6:	48 01       	movw	r8, r16
     5c8:	59 01       	movw	r10, r18
	set(PORTB,2);
     5ca:	2a 9a       	sbi	0x05, 2	; 5
	set(PORTB,3);
     5cc:	2b 9a       	sbi	0x05, 3	; 5
	if (dir == LEFT) {
     5ce:	81 30       	cpi	r24, 0x01	; 1
     5d0:	91 05       	cpc	r25, r1
     5d2:	81 f5       	brne	.+96     	; 0x634 <turn+0x8a>
		OCR3A = (unsigned int) ((float)ICR3 * speed);
     5d4:	60 91 96 00 	lds	r22, 0x0096
     5d8:	70 91 97 00 	lds	r23, 0x0097
     5dc:	80 e0       	ldi	r24, 0x00	; 0
     5de:	90 e0       	ldi	r25, 0x00	; 0
     5e0:	0e 94 5f 14 	call	0x28be	; 0x28be <__floatunsisf>
     5e4:	a7 01       	movw	r20, r14
     5e6:	96 01       	movw	r18, r12
     5e8:	0e 94 e3 15 	call	0x2bc6	; 0x2bc6 <__mulsf3>
     5ec:	0e 94 33 14 	call	0x2866	; 0x2866 <__fixunssfsi>
     5f0:	70 93 99 00 	sts	0x0099, r23
     5f4:	60 93 98 00 	sts	0x0098, r22
		OCR1B = (unsigned int) (degree * speed * OCR1A);
     5f8:	c0 91 88 00 	lds	r28, 0x0088
     5fc:	d0 91 89 00 	lds	r29, 0x0089
     600:	a7 01       	movw	r20, r14
     602:	96 01       	movw	r18, r12
     604:	c5 01       	movw	r24, r10
     606:	b4 01       	movw	r22, r8
     608:	0e 94 e3 15 	call	0x2bc6	; 0x2bc6 <__mulsf3>
     60c:	6b 01       	movw	r12, r22
     60e:	7c 01       	movw	r14, r24
     610:	be 01       	movw	r22, r28
     612:	80 e0       	ldi	r24, 0x00	; 0
     614:	90 e0       	ldi	r25, 0x00	; 0
     616:	0e 94 5f 14 	call	0x28be	; 0x28be <__floatunsisf>
     61a:	9b 01       	movw	r18, r22
     61c:	ac 01       	movw	r20, r24
     61e:	c7 01       	movw	r24, r14
     620:	b6 01       	movw	r22, r12
     622:	0e 94 e3 15 	call	0x2bc6	; 0x2bc6 <__mulsf3>
     626:	0e 94 33 14 	call	0x2866	; 0x2866 <__fixunssfsi>
     62a:	70 93 8b 00 	sts	0x008B, r23
     62e:	60 93 8a 00 	sts	0x008A, r22
     632:	31 c0       	rjmp	.+98     	; 0x696 <turn+0xec>
	}
	
		if (dir == RIGHT) {
     634:	89 2b       	or	r24, r25
     636:	79 f5       	brne	.+94     	; 0x696 <turn+0xec>
			OCR3A = (unsigned int) (degree * speed * ICR3);
     638:	c0 91 96 00 	lds	r28, 0x0096
     63c:	d0 91 97 00 	lds	r29, 0x0097
     640:	9a 01       	movw	r18, r20
     642:	ab 01       	movw	r20, r22
     644:	c5 01       	movw	r24, r10
     646:	b4 01       	movw	r22, r8
     648:	0e 94 e3 15 	call	0x2bc6	; 0x2bc6 <__mulsf3>
     64c:	4b 01       	movw	r8, r22
     64e:	5c 01       	movw	r10, r24
     650:	be 01       	movw	r22, r28
     652:	80 e0       	ldi	r24, 0x00	; 0
     654:	90 e0       	ldi	r25, 0x00	; 0
     656:	0e 94 5f 14 	call	0x28be	; 0x28be <__floatunsisf>
     65a:	9b 01       	movw	r18, r22
     65c:	ac 01       	movw	r20, r24
     65e:	c5 01       	movw	r24, r10
     660:	b4 01       	movw	r22, r8
     662:	0e 94 e3 15 	call	0x2bc6	; 0x2bc6 <__mulsf3>
     666:	0e 94 33 14 	call	0x2866	; 0x2866 <__fixunssfsi>
     66a:	70 93 99 00 	sts	0x0099, r23
     66e:	60 93 98 00 	sts	0x0098, r22
			OCR1B = (unsigned int) ((float) OCR1A * speed);
     672:	60 91 88 00 	lds	r22, 0x0088
     676:	70 91 89 00 	lds	r23, 0x0089
     67a:	80 e0       	ldi	r24, 0x00	; 0
     67c:	90 e0       	ldi	r25, 0x00	; 0
     67e:	0e 94 5f 14 	call	0x28be	; 0x28be <__floatunsisf>
     682:	a7 01       	movw	r20, r14
     684:	96 01       	movw	r18, r12
     686:	0e 94 e3 15 	call	0x2bc6	; 0x2bc6 <__mulsf3>
     68a:	0e 94 33 14 	call	0x2866	; 0x2866 <__fixunssfsi>
     68e:	70 93 8b 00 	sts	0x008B, r23
     692:	60 93 8a 00 	sts	0x008A, r22
		}
}
     696:	df 91       	pop	r29
     698:	cf 91       	pop	r28
     69a:	1f 91       	pop	r17
     69c:	0f 91       	pop	r16
     69e:	ff 90       	pop	r15
     6a0:	ef 90       	pop	r14
     6a2:	df 90       	pop	r13
     6a4:	cf 90       	pop	r12
     6a6:	bf 90       	pop	r11
     6a8:	af 90       	pop	r10
     6aa:	9f 90       	pop	r9
     6ac:	8f 90       	pop	r8
     6ae:	08 95       	ret

000006b0 <reverse>:

void reverse(){
	OCR1B = OCR1A;
     6b0:	80 91 88 00 	lds	r24, 0x0088
     6b4:	90 91 89 00 	lds	r25, 0x0089
     6b8:	90 93 8b 00 	sts	0x008B, r25
     6bc:	80 93 8a 00 	sts	0x008A, r24
	OCR3A = ICR3;
     6c0:	80 91 96 00 	lds	r24, 0x0096
     6c4:	90 91 97 00 	lds	r25, 0x0097
     6c8:	90 93 99 00 	sts	0x0099, r25
     6cc:	80 93 98 00 	sts	0x0098, r24
	clear(PORTB,2);
     6d0:	2a 98       	cbi	0x05, 2	; 5
	clear(PORTB,3);
     6d2:	2b 98       	cbi	0x05, 3	; 5
     6d4:	08 95       	ret

000006d6 <drive_to_puck>:
void findPuck() {
	//TODO: Implement code
}

void drive_to_puck() {
	OCR1B = 0;
     6d6:	10 92 8b 00 	sts	0x008B, r1
     6da:	10 92 8a 00 	sts	0x008A, r1
	OCR3A = 0;
     6de:	10 92 99 00 	sts	0x0099, r1
     6e2:	10 92 98 00 	sts	0x0098, r1
	m_red(ON);
     6e6:	6e 9a       	sbi	0x0d, 6	; 13
     6e8:	76 98       	cbi	0x0e, 6	; 14
	float deg;
	while(1) {
		getADC();
		index = 0;
		maxval = 0;
		m_green(TOGGLE);
     6ea:	68 94       	set
     6ec:	bb 24       	eor	r11, r11
     6ee:	b2 f8       	bld	r11, 2
     6f0:	0f 2e       	mov	r0, r31
     6f2:	f4 e2       	ldi	r31, 0x24	; 36
     6f4:	ef 2e       	mov	r14, r31
     6f6:	f1 e0       	ldi	r31, 0x01	; 1
     6f8:	ff 2e       	mov	r15, r31
     6fa:	f0 2d       	mov	r31, r0
		for(int i = 0; i < 7; i++) {
     6fc:	c0 e0       	ldi	r28, 0x00	; 0
     6fe:	d0 e0       	ldi	r29, 0x00	; 0
				maxval = ADCarr[i];
			}
		}
		switch (index) {
			case 0: 
				diff = ADCarr[0] - ADCarr[6];
     700:	0f 2e       	mov	r0, r31
     702:	f0 e3       	ldi	r31, 0x30	; 48
     704:	cf 2e       	mov	r12, r31
     706:	f1 e0       	ldi	r31, 0x01	; 1
     708:	df 2e       	mov	r13, r31
     70a:	f0 2d       	mov	r31, r0
	int index = 0;
	int maxval = 0;
	int diff;
	float deg;
	while(1) {
		getADC();
     70c:	0e 94 95 01 	call	0x32a	; 0x32a <getADC>
		index = 0;
		maxval = 0;
		m_green(TOGGLE);
     710:	6a 9a       	sbi	0x0d, 2	; 13
     712:	8e b1       	in	r24, 0x0e	; 14
     714:	8b 25       	eor	r24, r11
     716:	8e b9       	out	0x0e, r24	; 14
     718:	f7 01       	movw	r30, r14
		for(int i = 0; i < 7; i++) {
     71a:	ce 01       	movw	r24, r28
	int diff;
	float deg;
	while(1) {
		getADC();
		index = 0;
		maxval = 0;
     71c:	ae 01       	movw	r20, r28
	int maxval = 0;
	int diff;
	float deg;
	while(1) {
		getADC();
		index = 0;
     71e:	be 01       	movw	r22, r28
		maxval = 0;
		m_green(TOGGLE);
		for(int i = 0; i < 7; i++) {
			if (ADCarr[i] > maxval) {
     720:	21 91       	ld	r18, Z+
     722:	31 91       	ld	r19, Z+
     724:	42 17       	cp	r20, r18
     726:	53 07       	cpc	r21, r19
     728:	14 f4       	brge	.+4      	; 0x72e <drive_to_puck+0x58>
				index = i;
				maxval = ADCarr[i];
     72a:	a9 01       	movw	r20, r18
		getADC();
		index = 0;
		maxval = 0;
		m_green(TOGGLE);
		for(int i = 0; i < 7; i++) {
			if (ADCarr[i] > maxval) {
     72c:	bc 01       	movw	r22, r24
	while(1) {
		getADC();
		index = 0;
		maxval = 0;
		m_green(TOGGLE);
		for(int i = 0; i < 7; i++) {
     72e:	01 96       	adiw	r24, 0x01	; 1
     730:	87 30       	cpi	r24, 0x07	; 7
     732:	91 05       	cpc	r25, r1
     734:	a9 f7       	brne	.-22     	; 0x720 <drive_to_puck+0x4a>
			if (ADCarr[i] > maxval) {
				index = i;
				maxval = ADCarr[i];
			}
		}
		switch (index) {
     736:	61 15       	cp	r22, r1
     738:	71 05       	cpc	r23, r1
     73a:	21 f0       	breq	.+8      	; 0x744 <drive_to_puck+0x6e>
     73c:	66 30       	cpi	r22, 0x06	; 6
     73e:	71 05       	cpc	r23, r1
     740:	29 f7       	brne	.-54     	; 0x70c <drive_to_puck+0x36>
     742:	22 c0       	rjmp	.+68     	; 0x788 <drive_to_puck+0xb2>
			case 0: 
				diff = ADCarr[0] - ADCarr[6];
     744:	f7 01       	movw	r30, r14
     746:	60 81       	ld	r22, Z
     748:	71 81       	ldd	r23, Z+1	; 0x01
     74a:	f6 01       	movw	r30, r12
     74c:	80 81       	ld	r24, Z
     74e:	91 81       	ldd	r25, Z+1	; 0x01
     750:	68 1b       	sub	r22, r24
     752:	79 0b       	sbc	r23, r25
				deg = exp(-1.0*(float)diff/100.0);
     754:	88 27       	eor	r24, r24
     756:	77 fd       	sbrc	r23, 7
     758:	80 95       	com	r24
     75a:	98 2f       	mov	r25, r24
     75c:	0e 94 61 14 	call	0x28c2	; 0x28c2 <__floatsisf>
     760:	90 58       	subi	r25, 0x80	; 128
     762:	20 e0       	ldi	r18, 0x00	; 0
     764:	30 e0       	ldi	r19, 0x00	; 0
     766:	48 ec       	ldi	r20, 0xC8	; 200
     768:	52 e4       	ldi	r21, 0x42	; 66
     76a:	0e 94 95 13 	call	0x272a	; 0x272a <__divsf3>
     76e:	0e 94 02 14 	call	0x2804	; 0x2804 <exp>
     772:	8b 01       	movw	r16, r22
     774:	9c 01       	movw	r18, r24
				turn(LEFT,0.2,deg);
     776:	4d ec       	ldi	r20, 0xCD	; 205
     778:	5c ec       	ldi	r21, 0xCC	; 204
     77a:	6c e4       	ldi	r22, 0x4C	; 76
     77c:	7e e3       	ldi	r23, 0x3E	; 62
     77e:	81 e0       	ldi	r24, 0x01	; 1
     780:	90 e0       	ldi	r25, 0x00	; 0
     782:	0e 94 d5 02 	call	0x5aa	; 0x5aa <turn>
				break;
     786:	c2 cf       	rjmp	.-124    	; 0x70c <drive_to_puck+0x36>
			case 6:
				diff = ADCarr[6] - ADCarr[0];
     788:	f6 01       	movw	r30, r12
     78a:	60 81       	ld	r22, Z
     78c:	71 81       	ldd	r23, Z+1	; 0x01
     78e:	f7 01       	movw	r30, r14
     790:	80 81       	ld	r24, Z
     792:	91 81       	ldd	r25, Z+1	; 0x01
     794:	68 1b       	sub	r22, r24
     796:	79 0b       	sbc	r23, r25
				deg = exp(-1.0*(float)diff/100.0);
     798:	88 27       	eor	r24, r24
     79a:	77 fd       	sbrc	r23, 7
     79c:	80 95       	com	r24
     79e:	98 2f       	mov	r25, r24
     7a0:	0e 94 61 14 	call	0x28c2	; 0x28c2 <__floatsisf>
     7a4:	90 58       	subi	r25, 0x80	; 128
     7a6:	20 e0       	ldi	r18, 0x00	; 0
     7a8:	30 e0       	ldi	r19, 0x00	; 0
     7aa:	48 ec       	ldi	r20, 0xC8	; 200
     7ac:	52 e4       	ldi	r21, 0x42	; 66
     7ae:	0e 94 95 13 	call	0x272a	; 0x272a <__divsf3>
     7b2:	0e 94 02 14 	call	0x2804	; 0x2804 <exp>
     7b6:	8b 01       	movw	r16, r22
     7b8:	9c 01       	movw	r18, r24
				turn(RIGHT,0.2,deg);
     7ba:	4d ec       	ldi	r20, 0xCD	; 205
     7bc:	5c ec       	ldi	r21, 0xCC	; 204
     7be:	6c e4       	ldi	r22, 0x4C	; 76
     7c0:	7e e3       	ldi	r23, 0x3E	; 62
     7c2:	ce 01       	movw	r24, r28
     7c4:	0e 94 d5 02 	call	0x5aa	; 0x5aa <turn>
				break;
     7c8:	a1 cf       	rjmp	.-190    	; 0x70c <drive_to_puck+0x36>

000007ca <drive_to_point2>:
		}
		
	}
}

void drive_to_point2(int x, int y) {
     7ca:	2f 92       	push	r2
     7cc:	3f 92       	push	r3
     7ce:	4f 92       	push	r4
     7d0:	5f 92       	push	r5
     7d2:	6f 92       	push	r6
     7d4:	7f 92       	push	r7
     7d6:	8f 92       	push	r8
     7d8:	9f 92       	push	r9
     7da:	af 92       	push	r10
     7dc:	bf 92       	push	r11
     7de:	cf 92       	push	r12
     7e0:	df 92       	push	r13
     7e2:	ef 92       	push	r14
     7e4:	ff 92       	push	r15
     7e6:	0f 93       	push	r16
     7e8:	1f 93       	push	r17
     7ea:	cf 93       	push	r28
     7ec:	df 93       	push	r29
     7ee:	cd b7       	in	r28, 0x3d	; 61
     7f0:	de b7       	in	r29, 0x3e	; 62
     7f2:	2d 97       	sbiw	r28, 0x0d	; 13
     7f4:	0f b6       	in	r0, 0x3f	; 63
     7f6:	f8 94       	cli
     7f8:	de bf       	out	0x3e, r29	; 62
     7fa:	0f be       	out	0x3f, r0	; 63
     7fc:	cd bf       	out	0x3d, r28	; 61
     7fe:	2c 01       	movw	r4, r24
     800:	4b 01       	movw	r8, r22
	m_green(ON);
     802:	6a 9a       	sbi	0x0d, 2	; 13
     804:	72 98       	cbi	0x0e, 2	; 14
	//m_wait(500);
	float speed_cap = 0.5;
	localize(data);
     806:	85 ea       	ldi	r24, 0xA5	; 165
     808:	91 e0       	ldi	r25, 0x01	; 1
     80a:	0e 94 33 0a 	call	0x1466	; 0x1466 <localize>
	int dir = 0;
	while(1) {
		localize(data);
		
		//Set angle difference to be between -180 and 180
		angle_dif = (((int) (((data[2] + 90.0) * -1.0) - (float)(atan2((double)y-data[1],(double)x-data[0]))*180.0/3.14)) + 900) % 360 - 180;
     80e:	c2 01       	movw	r24, r4
     810:	aa 27       	eor	r26, r26
     812:	97 fd       	sbrc	r25, 7
     814:	a0 95       	com	r26
     816:	ba 2f       	mov	r27, r26
     818:	8e 83       	std	Y+6, r24	; 0x06
     81a:	9f 83       	std	Y+7, r25	; 0x07
     81c:	a8 87       	std	Y+8, r26	; 0x08
     81e:	b9 87       	std	Y+9, r27	; 0x09
     820:	c4 01       	movw	r24, r8
     822:	aa 27       	eor	r26, r26
     824:	97 fd       	sbrc	r25, 7
     826:	a0 95       	com	r26
     828:	ba 2f       	mov	r27, r26
     82a:	8a 87       	std	Y+10, r24	; 0x0a
     82c:	9b 87       	std	Y+11, r25	; 0x0b
     82e:	ac 87       	std	Y+12, r26	; 0x0c
     830:	bd 87       	std	Y+13, r27	; 0x0d
	float dist = 0.0;
	float spd = 0.0;
	float deg = 0.0;
	int dir = 0;
	while(1) {
		localize(data);
     832:	85 ea       	ldi	r24, 0xA5	; 165
     834:	91 e0       	ldi	r25, 0x01	; 1
     836:	0e 94 33 0a 	call	0x1466	; 0x1466 <localize>
		
		//Set angle difference to be between -180 and 180
		angle_dif = (((int) (((data[2] + 90.0) * -1.0) - (float)(atan2((double)y-data[1],(double)x-data[0]))*180.0/3.14)) + 900) % 360 - 180;
     83a:	6e 81       	ldd	r22, Y+6	; 0x06
     83c:	7f 81       	ldd	r23, Y+7	; 0x07
     83e:	88 85       	ldd	r24, Y+8	; 0x08
     840:	99 85       	ldd	r25, Y+9	; 0x09
     842:	0e 94 61 14 	call	0x28c2	; 0x28c2 <__floatsisf>
     846:	20 91 a5 01 	lds	r18, 0x01A5
     84a:	30 91 a6 01 	lds	r19, 0x01A6
     84e:	40 91 a7 01 	lds	r20, 0x01A7
     852:	50 91 a8 01 	lds	r21, 0x01A8
     856:	0e 94 c7 12 	call	0x258e	; 0x258e <__subsf3>
     85a:	06 2f       	mov	r16, r22
     85c:	17 2f       	mov	r17, r23
     85e:	28 2e       	mov	r2, r24
     860:	39 2e       	mov	r3, r25
     862:	6a 85       	ldd	r22, Y+10	; 0x0a
     864:	7b 85       	ldd	r23, Y+11	; 0x0b
     866:	8c 85       	ldd	r24, Y+12	; 0x0c
     868:	9d 85       	ldd	r25, Y+13	; 0x0d
     86a:	0e 94 61 14 	call	0x28c2	; 0x28c2 <__floatsisf>
     86e:	a9 ea       	ldi	r26, 0xA9	; 169
     870:	b1 e0       	ldi	r27, 0x01	; 1
     872:	2d 91       	ld	r18, X+
     874:	3d 91       	ld	r19, X+
     876:	4d 91       	ld	r20, X+
     878:	5c 91       	ld	r21, X
     87a:	0e 94 c7 12 	call	0x258e	; 0x258e <__subsf3>
     87e:	46 2e       	mov	r4, r22
     880:	57 2e       	mov	r5, r23
     882:	68 2e       	mov	r6, r24
     884:	79 2e       	mov	r7, r25
     886:	20 2f       	mov	r18, r16
     888:	31 2f       	mov	r19, r17
     88a:	42 2d       	mov	r20, r2
     88c:	53 2d       	mov	r21, r3
     88e:	64 2d       	mov	r22, r4
     890:	75 2d       	mov	r23, r5
     892:	86 2d       	mov	r24, r6
     894:	97 2d       	mov	r25, r7
     896:	0e 94 3b 13 	call	0x2676	; 0x2676 <atan2>
     89a:	4b 01       	movw	r8, r22
     89c:	5c 01       	movw	r10, r24
     89e:	20 e0       	ldi	r18, 0x00	; 0
     8a0:	30 e0       	ldi	r19, 0x00	; 0
     8a2:	44 eb       	ldi	r20, 0xB4	; 180
     8a4:	52 e4       	ldi	r21, 0x42	; 66
     8a6:	ed ea       	ldi	r30, 0xAD	; 173
     8a8:	f1 e0       	ldi	r31, 0x01	; 1
     8aa:	60 81       	ld	r22, Z
     8ac:	71 81       	ldd	r23, Z+1	; 0x01
     8ae:	82 81       	ldd	r24, Z+2	; 0x02
     8b0:	93 81       	ldd	r25, Z+3	; 0x03
     8b2:	0e 94 c8 12 	call	0x2590	; 0x2590 <__addsf3>
     8b6:	6b 01       	movw	r12, r22
     8b8:	7c 01       	movw	r14, r24
     8ba:	f7 fa       	bst	r15, 7
     8bc:	f0 94       	com	r15
     8be:	f7 f8       	bld	r15, 7
     8c0:	f0 94       	com	r15
     8c2:	20 e0       	ldi	r18, 0x00	; 0
     8c4:	30 e0       	ldi	r19, 0x00	; 0
     8c6:	44 e3       	ldi	r20, 0x34	; 52
     8c8:	53 e4       	ldi	r21, 0x43	; 67
     8ca:	c5 01       	movw	r24, r10
     8cc:	b4 01       	movw	r22, r8
     8ce:	0e 94 e3 15 	call	0x2bc6	; 0x2bc6 <__mulsf3>
     8d2:	23 ec       	ldi	r18, 0xC3	; 195
     8d4:	35 ef       	ldi	r19, 0xF5	; 245
     8d6:	48 e4       	ldi	r20, 0x48	; 72
     8d8:	50 e4       	ldi	r21, 0x40	; 64
     8da:	0e 94 95 13 	call	0x272a	; 0x272a <__divsf3>
     8de:	9b 01       	movw	r18, r22
     8e0:	ac 01       	movw	r20, r24
     8e2:	c7 01       	movw	r24, r14
     8e4:	b6 01       	movw	r22, r12
     8e6:	0e 94 c7 12 	call	0x258e	; 0x258e <__subsf3>
     8ea:	0e 94 2e 14 	call	0x285c	; 0x285c <__fixsfsi>
     8ee:	cb 01       	movw	r24, r22
     8f0:	8c 57       	subi	r24, 0x7C	; 124
     8f2:	9c 4f       	sbci	r25, 0xFC	; 252
     8f4:	68 e6       	ldi	r22, 0x68	; 104
     8f6:	71 e0       	ldi	r23, 0x01	; 1
     8f8:	0e 94 b7 16 	call	0x2d6e	; 0x2d6e <__divmodhi4>
     8fc:	bc 01       	movw	r22, r24
     8fe:	64 5b       	subi	r22, 0xB4	; 180
     900:	71 09       	sbc	r23, r1
     902:	88 27       	eor	r24, r24
     904:	77 fd       	sbrc	r23, 7
     906:	80 95       	com	r24
     908:	98 2f       	mov	r25, r24
     90a:	0e 94 61 14 	call	0x28c2	; 0x28c2 <__floatsisf>
     90e:	86 2e       	mov	r8, r22
     910:	97 2e       	mov	r9, r23
     912:	a8 2e       	mov	r10, r24
     914:	b9 2e       	mov	r11, r25
		if (angle_dif > 0) {
     916:	ff 24       	eor	r15, r15
     918:	f3 94       	inc	r15
     91a:	20 e0       	ldi	r18, 0x00	; 0
     91c:	30 e0       	ldi	r19, 0x00	; 0
     91e:	a9 01       	movw	r20, r18
     920:	0e 94 6f 15 	call	0x2ade	; 0x2ade <__gesf2>
     924:	18 16       	cp	r1, r24
     926:	0c f0       	brlt	.+2      	; 0x92a <drive_to_point2+0x160>
     928:	f1 2c       	mov	r15, r1
     92a:	f1 e0       	ldi	r31, 0x01	; 1
     92c:	ff 25       	eor	r31, r15
     92e:	fd 83       	std	Y+5, r31	; 0x05
		else {
			dir = LEFT;
		}
		
		//Angle of 180 corresponds to deg of 0; angle of 0 corresponds to deg of 1
		deg = exp(-1.0* ((double)fabs(angle_dif))/30.0);
     930:	d5 01       	movw	r26, r10
     932:	c4 01       	movw	r24, r8
     934:	bf 77       	andi	r27, 0x7F	; 127
     936:	bc 01       	movw	r22, r24
     938:	cd 01       	movw	r24, r26
     93a:	90 58       	subi	r25, 0x80	; 128
     93c:	20 e0       	ldi	r18, 0x00	; 0
     93e:	30 e0       	ldi	r19, 0x00	; 0
     940:	40 ef       	ldi	r20, 0xF0	; 240
     942:	51 e4       	ldi	r21, 0x41	; 65
     944:	0e 94 95 13 	call	0x272a	; 0x272a <__divsf3>
     948:	0e 94 02 14 	call	0x2804	; 0x2804 <exp>
     94c:	6b 01       	movw	r12, r22
     94e:	7c 01       	movw	r14, r24
		//Set distance
		dist = (int) sqrt(((double)y - data[1])*((double)y - data[1])+((double)x - data[0])*((double)x - data[0]));
     950:	24 2d       	mov	r18, r4
     952:	35 2d       	mov	r19, r5
     954:	46 2d       	mov	r20, r6
     956:	57 2d       	mov	r21, r7
     958:	64 2d       	mov	r22, r4
     95a:	75 2d       	mov	r23, r5
     95c:	86 2d       	mov	r24, r6
     95e:	97 2d       	mov	r25, r7
     960:	0e 94 e3 15 	call	0x2bc6	; 0x2bc6 <__mulsf3>
     964:	2b 01       	movw	r4, r22
     966:	3c 01       	movw	r6, r24
     968:	20 2f       	mov	r18, r16
     96a:	31 2f       	mov	r19, r17
     96c:	42 2d       	mov	r20, r2
     96e:	53 2d       	mov	r21, r3
     970:	60 2f       	mov	r22, r16
     972:	71 2f       	mov	r23, r17
     974:	82 2d       	mov	r24, r2
     976:	93 2d       	mov	r25, r3
     978:	0e 94 e3 15 	call	0x2bc6	; 0x2bc6 <__mulsf3>
     97c:	9b 01       	movw	r18, r22
     97e:	ac 01       	movw	r20, r24
     980:	c3 01       	movw	r24, r6
     982:	b2 01       	movw	r22, r4
     984:	0e 94 c8 12 	call	0x2590	; 0x2590 <__addsf3>
     988:	0e 94 50 16 	call	0x2ca0	; 0x2ca0 <sqrt>
     98c:	0e 94 2e 14 	call	0x285c	; 0x285c <__fixsfsi>
     990:	88 27       	eor	r24, r24
     992:	77 fd       	sbrc	r23, 7
     994:	80 95       	com	r24
     996:	98 2f       	mov	r25, r24
     998:	0e 94 61 14 	call	0x28c2	; 0x28c2 <__floatsisf>
     99c:	66 2e       	mov	r6, r22
     99e:	77 2e       	mov	r7, r23
     9a0:	08 2f       	mov	r16, r24
     9a2:	19 2f       	mov	r17, r25
		spd = ((float)dist)/70.0;
     9a4:	20 e0       	ldi	r18, 0x00	; 0
     9a6:	30 e0       	ldi	r19, 0x00	; 0
     9a8:	4c e8       	ldi	r20, 0x8C	; 140
     9aa:	52 e4       	ldi	r21, 0x42	; 66
     9ac:	0e 94 95 13 	call	0x272a	; 0x272a <__divsf3>
     9b0:	26 2e       	mov	r2, r22
     9b2:	37 2e       	mov	r3, r23
     9b4:	48 2e       	mov	r4, r24
     9b6:	59 2e       	mov	r5, r25
     9b8:	69 83       	std	Y+1, r22	; 0x01
     9ba:	7a 83       	std	Y+2, r23	; 0x02
     9bc:	8b 83       	std	Y+3, r24	; 0x03
     9be:	9c 83       	std	Y+4, r25	; 0x04
		//*****************************************************************************
			rx_buffer = m_usb_rx_char();  	//grab the computer packet
     9c0:	0e 94 3c 0e 	call	0x1c78	; 0x1c78 <m_usb_rx_char>
     9c4:	80 93 9a 01 	sts	0x019A, r24

			m_usb_rx_flush();  				//clear buffer
     9c8:	0e 94 69 0e 	call	0x1cd2	; 0x1cd2 <m_usb_rx_flush>

			if(rx_buffer == 1) {  			//computer wants ir buffer
     9cc:	80 91 9a 01 	lds	r24, 0x019A
     9d0:	81 30       	cpi	r24, 0x01	; 1
     9d2:	09 f0       	breq	.+2      	; 0x9d6 <drive_to_point2+0x20c>
     9d4:	4c c0       	rjmp	.+152    	; 0xa6e <drive_to_point2+0x2a4>
				//write ir buffer as concatenated hex:  i.e. f0f1f4f5
				data[3] = angle_dif;
     9d6:	a1 eb       	ldi	r26, 0xB1	; 177
     9d8:	b1 e0       	ldi	r27, 0x01	; 1
     9da:	8d 92       	st	X+, r8
     9dc:	9d 92       	st	X+, r9
     9de:	ad 92       	st	X+, r10
     9e0:	bc 92       	st	X, r11
     9e2:	13 97       	sbiw	r26, 0x03	; 3
				data[4] = deg*100.0;
     9e4:	20 e0       	ldi	r18, 0x00	; 0
     9e6:	30 e0       	ldi	r19, 0x00	; 0
     9e8:	48 ec       	ldi	r20, 0xC8	; 200
     9ea:	52 e4       	ldi	r21, 0x42	; 66
     9ec:	c7 01       	movw	r24, r14
     9ee:	b6 01       	movw	r22, r12
     9f0:	0e 94 e3 15 	call	0x2bc6	; 0x2bc6 <__mulsf3>
     9f4:	e5 eb       	ldi	r30, 0xB5	; 181
     9f6:	f1 e0       	ldi	r31, 0x01	; 1
     9f8:	60 83       	st	Z, r22
     9fa:	71 83       	std	Z+1, r23	; 0x01
     9fc:	82 83       	std	Z+2, r24	; 0x02
     9fe:	93 83       	std	Z+3, r25	; 0x03
				data[5] = dist;
     a00:	86 2d       	mov	r24, r6
     a02:	97 2d       	mov	r25, r7
     a04:	a0 2f       	mov	r26, r16
     a06:	b1 2f       	mov	r27, r17
     a08:	e9 eb       	ldi	r30, 0xB9	; 185
     a0a:	f1 e0       	ldi	r31, 0x01	; 1
     a0c:	80 83       	st	Z, r24
     a0e:	91 83       	std	Z+1, r25	; 0x01
     a10:	a2 83       	std	Z+2, r26	; 0x02
     a12:	b3 83       	std	Z+3, r27	; 0x03
				data[6] = spd*100.0;
     a14:	20 e0       	ldi	r18, 0x00	; 0
     a16:	30 e0       	ldi	r19, 0x00	; 0
     a18:	48 ec       	ldi	r20, 0xC8	; 200
     a1a:	52 e4       	ldi	r21, 0x42	; 66
     a1c:	62 2d       	mov	r22, r2
     a1e:	73 2d       	mov	r23, r3
     a20:	84 2d       	mov	r24, r4
     a22:	95 2d       	mov	r25, r5
     a24:	0e 94 e3 15 	call	0x2bc6	; 0x2bc6 <__mulsf3>
     a28:	ad eb       	ldi	r26, 0xBD	; 189
     a2a:	b1 e0       	ldi	r27, 0x01	; 1
     a2c:	6d 93       	st	X+, r22
     a2e:	7d 93       	st	X+, r23
     a30:	8d 93       	st	X+, r24
     a32:	9c 93       	st	X, r25
     a34:	13 97       	sbiw	r26, 0x03	; 3
     a36:	0f 2e       	mov	r0, r31
     a38:	f5 ea       	ldi	r31, 0xA5	; 165
     a3a:	af 2e       	mov	r10, r31
     a3c:	f1 e0       	ldi	r31, 0x01	; 1
     a3e:	bf 2e       	mov	r11, r31
     a40:	f0 2d       	mov	r31, r0
				for (int i = 0 ; i < 7 ; i++){
					m_usb_tx_int((int)data[i]);
     a42:	f5 01       	movw	r30, r10
     a44:	61 91       	ld	r22, Z+
     a46:	71 91       	ld	r23, Z+
     a48:	81 91       	ld	r24, Z+
     a4a:	91 91       	ld	r25, Z+
     a4c:	5f 01       	movw	r10, r30
     a4e:	0e 94 2e 14 	call	0x285c	; 0x285c <__fixsfsi>
     a52:	cb 01       	movw	r24, r22
     a54:	0e 94 a1 10 	call	0x2142	; 0x2142 <m_usb_tx_int>
					m_usb_tx_char('\t');
     a58:	89 e0       	ldi	r24, 0x09	; 9
     a5a:	0e 94 7f 0e 	call	0x1cfe	; 0x1cfe <m_usb_tx_char>
				//write ir buffer as concatenated hex:  i.e. f0f1f4f5
				data[3] = angle_dif;
				data[4] = deg*100.0;
				data[5] = dist;
				data[6] = spd*100.0;
				for (int i = 0 ; i < 7 ; i++){
     a5e:	f1 ec       	ldi	r31, 0xC1	; 193
     a60:	af 16       	cp	r10, r31
     a62:	f1 e0       	ldi	r31, 0x01	; 1
     a64:	bf 06       	cpc	r11, r31
     a66:	69 f7       	brne	.-38     	; 0xa42 <drive_to_point2+0x278>
					m_usb_tx_int((int)data[i]);
					m_usb_tx_char('\t');

				}

				m_usb_tx_char('\n');  //MATLAB serial command reads 1 line at a time
     a68:	8a e0       	ldi	r24, 0x0A	; 10
     a6a:	0e 94 7f 0e 	call	0x1cfe	; 0x1cfe <m_usb_tx_char>
			}
			
		//*********************************************************************************
		
		if (spd > speed_cap) spd = speed_cap;
     a6e:	20 e0       	ldi	r18, 0x00	; 0
     a70:	30 e0       	ldi	r19, 0x00	; 0
     a72:	40 e0       	ldi	r20, 0x00	; 0
     a74:	5f e3       	ldi	r21, 0x3F	; 63
     a76:	62 2d       	mov	r22, r2
     a78:	73 2d       	mov	r23, r3
     a7a:	84 2d       	mov	r24, r4
     a7c:	95 2d       	mov	r25, r5
     a7e:	0e 94 6f 15 	call	0x2ade	; 0x2ade <__gesf2>
     a82:	18 16       	cp	r1, r24
     a84:	2c f4       	brge	.+10     	; 0xa90 <drive_to_point2+0x2c6>
     a86:	19 82       	std	Y+1, r1	; 0x01
     a88:	1a 82       	std	Y+2, r1	; 0x02
     a8a:	1b 82       	std	Y+3, r1	; 0x03
     a8c:	8f e3       	ldi	r24, 0x3F	; 63
     a8e:	8c 83       	std	Y+4, r24	; 0x04
		if (dist < 10) break;
     a90:	20 e0       	ldi	r18, 0x00	; 0
     a92:	30 e0       	ldi	r19, 0x00	; 0
     a94:	40 e2       	ldi	r20, 0x20	; 32
     a96:	51 e4       	ldi	r21, 0x41	; 65
     a98:	66 2d       	mov	r22, r6
     a9a:	77 2d       	mov	r23, r7
     a9c:	80 2f       	mov	r24, r16
     a9e:	91 2f       	mov	r25, r17
     aa0:	0e 94 8e 13 	call	0x271c	; 0x271c <__cmpsf2>
     aa4:	88 23       	and	r24, r24
     aa6:	9c f0       	brlt	.+38     	; 0xace <drive_to_point2+0x304>
		if (changedState) return;
     aa8:	80 91 36 01 	lds	r24, 0x0136
     aac:	81 11       	cpse	r24, r1
     aae:	1c c0       	rjmp	.+56     	; 0xae8 <drive_to_point2+0x31e>
		turn(dir, spd, deg);
     ab0:	97 01       	movw	r18, r14
     ab2:	86 01       	movw	r16, r12
     ab4:	f9 81       	ldd	r31, Y+1	; 0x01
     ab6:	ea 81       	ldd	r30, Y+2	; 0x02
     ab8:	9b 81       	ldd	r25, Y+3	; 0x03
     aba:	8c 81       	ldd	r24, Y+4	; 0x04
     abc:	4f 2f       	mov	r20, r31
     abe:	5e 2f       	mov	r21, r30
     ac0:	69 2f       	mov	r22, r25
     ac2:	78 2f       	mov	r23, r24
     ac4:	8d 81       	ldd	r24, Y+5	; 0x05
     ac6:	90 e0       	ldi	r25, 0x00	; 0
     ac8:	0e 94 d5 02 	call	0x5aa	; 0x5aa <turn>
		
	}
     acc:	b2 ce       	rjmp	.-668    	; 0x832 <drive_to_point2+0x68>
	m_red(ON);
     ace:	6e 9a       	sbi	0x0d, 6	; 13
     ad0:	76 98       	cbi	0x0e, 6	; 14
	reverse();
     ad2:	0e 94 58 03 	call	0x6b0	; 0x6b0 <reverse>
	OCR1B = 0;
     ad6:	10 92 8b 00 	sts	0x008B, r1
     ada:	10 92 8a 00 	sts	0x008A, r1
	OCR3A = 0;
     ade:	10 92 99 00 	sts	0x0099, r1
     ae2:	10 92 98 00 	sts	0x0098, r1
     ae6:	ff cf       	rjmp	.-2      	; 0xae6 <drive_to_point2+0x31c>
	while(1);
}
     ae8:	2d 96       	adiw	r28, 0x0d	; 13
     aea:	0f b6       	in	r0, 0x3f	; 63
     aec:	f8 94       	cli
     aee:	de bf       	out	0x3e, r29	; 62
     af0:	0f be       	out	0x3f, r0	; 63
     af2:	cd bf       	out	0x3d, r28	; 61
     af4:	df 91       	pop	r29
     af6:	cf 91       	pop	r28
     af8:	1f 91       	pop	r17
     afa:	0f 91       	pop	r16
     afc:	ff 90       	pop	r15
     afe:	ef 90       	pop	r14
     b00:	df 90       	pop	r13
     b02:	cf 90       	pop	r12
     b04:	bf 90       	pop	r11
     b06:	af 90       	pop	r10
     b08:	9f 90       	pop	r9
     b0a:	8f 90       	pop	r8
     b0c:	7f 90       	pop	r7
     b0e:	6f 90       	pop	r6
     b10:	5f 90       	pop	r5
     b12:	4f 90       	pop	r4
     b14:	3f 90       	pop	r3
     b16:	2f 90       	pop	r2
     b18:	08 95       	ret

00000b1a <drive_to_goalA>:
	m_red(OFF);
	game_pause();
}

void drive_to_goalA() {
	drive_to_point2(GOALBX,GOALBY);
     b1a:	60 e0       	ldi	r22, 0x00	; 0
     b1c:	70 e0       	ldi	r23, 0x00	; 0
     b1e:	83 e7       	ldi	r24, 0x73	; 115
     b20:	90 e0       	ldi	r25, 0x00	; 0
     b22:	0e 94 e5 03 	call	0x7ca	; 0x7ca <drive_to_point2>
     b26:	08 95       	ret

00000b28 <drive_to_goalB>:
}

void drive_to_goalB() {
	drive_to_point2(GOALAX,GOALAY);
     b28:	60 e0       	ldi	r22, 0x00	; 0
     b2a:	70 e0       	ldi	r23, 0x00	; 0
     b2c:	8d e8       	ldi	r24, 0x8D	; 141
     b2e:	9f ef       	ldi	r25, 0xFF	; 255
     b30:	0e 94 e5 03 	call	0x7ca	; 0x7ca <drive_to_point2>
     b34:	08 95       	ret

00000b36 <shoot>:
}

void shoot() {
		set(PORTB,7);
     b36:	2f 9a       	sbi	0x05, 7	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     b38:	2f ef       	ldi	r18, 0xFF	; 255
     b3a:	81 ee       	ldi	r24, 0xE1	; 225
     b3c:	94 e0       	ldi	r25, 0x04	; 4
     b3e:	21 50       	subi	r18, 0x01	; 1
     b40:	80 40       	sbci	r24, 0x00	; 0
     b42:	90 40       	sbci	r25, 0x00	; 0
     b44:	e1 f7       	brne	.-8      	; 0xb3e <shoot+0x8>
     b46:	00 c0       	rjmp	.+0      	; 0xb48 <shoot+0x12>
     b48:	00 00       	nop
		m_wait(100);
		clear(PORTB,7);
     b4a:	2f 98       	cbi	0x05, 7	; 5
     b4c:	08 95       	ret

00000b4e <game_pause>:
}

void game_pause() {
	OCR1B = 0;
     b4e:	10 92 8b 00 	sts	0x008B, r1
     b52:	10 92 8a 00 	sts	0x008A, r1
	OCR3A = 0;
     b56:	10 92 99 00 	sts	0x0099, r1
     b5a:	10 92 98 00 	sts	0x0098, r1
     b5e:	08 95       	ret

00000b60 <comm_test>:
	//set(PORTB,2);
	//set(PORTB,3);
}

void comm_test() {
	set(PORTD,5);
     b60:	5d 9a       	sbi	0x0b, 5	; 11
     b62:	2f ef       	ldi	r18, 0xFF	; 255
     b64:	89 e6       	ldi	r24, 0x69	; 105
     b66:	98 e1       	ldi	r25, 0x18	; 24
     b68:	21 50       	subi	r18, 0x01	; 1
     b6a:	80 40       	sbci	r24, 0x00	; 0
     b6c:	90 40       	sbci	r25, 0x00	; 0
     b6e:	e1 f7       	brne	.-8      	; 0xb68 <comm_test+0x8>
     b70:	00 c0       	rjmp	.+0      	; 0xb72 <comm_test+0x12>
     b72:	00 00       	nop
	m_wait(500);
	clear(PORTD,5);
     b74:	5d 98       	cbi	0x0b, 5	; 11
     b76:	2f ef       	ldi	r18, 0xFF	; 255
     b78:	89 e6       	ldi	r24, 0x69	; 105
     b7a:	98 e1       	ldi	r25, 0x18	; 24
     b7c:	21 50       	subi	r18, 0x01	; 1
     b7e:	80 40       	sbci	r24, 0x00	; 0
     b80:	90 40       	sbci	r25, 0x00	; 0
     b82:	e1 f7       	brne	.-8      	; 0xb7c <comm_test+0x1c>
     b84:	00 c0       	rjmp	.+0      	; 0xb86 <comm_test+0x26>
     b86:	00 00       	nop
	m_wait(500);
	state = 0;
     b88:	10 92 35 01 	sts	0x0135, r1
     b8c:	10 92 34 01 	sts	0x0134, r1
     b90:	08 95       	ret

00000b92 <main>:
		*/
}

int main(void)
{
	set(DDRD,5);
     b92:	55 9a       	sbi	0x0a, 5	; 10
	//wireless stuffs
	m_bus_init();
     b94:	0e 94 5f 07 	call	0xebe	; 0xebe <m_bus_init>
	
	m_rf_open(CHANNEL, RXADDRESS, PACKET_LENGTH);
     b98:	4a e0       	ldi	r20, 0x0A	; 10
     b9a:	68 e0       	ldi	r22, 0x08	; 8
     b9c:	81 e0       	ldi	r24, 0x01	; 1
     b9e:	0e 94 69 0d 	call	0x1ad2	; 0x1ad2 <m_rf_open>
	//
	
	//m_num_init();
	int flag;
	
	m_clockdivide(0);
     ba2:	e1 e6       	ldi	r30, 0x61	; 97
     ba4:	f0 e0       	ldi	r31, 0x00	; 0
     ba6:	80 e8       	ldi	r24, 0x80	; 128
     ba8:	80 83       	st	Z, r24
     baa:	10 82       	st	Z, r1
	
	m_disableJTAG();
     bac:	85 bf       	out	0x35, r24	; 53
     bae:	85 bf       	out	0x35, r24	; 53
	
	//TIMER 0: For Controlling the solenoid
	
	set(TCCR0B, WGM02);
     bb0:	85 b5       	in	r24, 0x25	; 37
     bb2:	88 60       	ori	r24, 0x08	; 8
     bb4:	85 bd       	out	0x25, r24	; 37
	set(TCCR0A, WGM01);
     bb6:	84 b5       	in	r24, 0x24	; 36
     bb8:	82 60       	ori	r24, 0x02	; 2
     bba:	84 bd       	out	0x24, r24	; 36
	set(TCCR0A, WGM01);
     bbc:	84 b5       	in	r24, 0x24	; 36
     bbe:	82 60       	ori	r24, 0x02	; 2
     bc0:	84 bd       	out	0x24, r24	; 36
	
	set(TCCR0A, COM0B1);
     bc2:	84 b5       	in	r24, 0x24	; 36
     bc4:	80 62       	ori	r24, 0x20	; 32
     bc6:	84 bd       	out	0x24, r24	; 36
	clear(TCCR0A, COM0B0);
     bc8:	84 b5       	in	r24, 0x24	; 36
     bca:	8f 7e       	andi	r24, 0xEF	; 239
     bcc:	84 bd       	out	0x24, r24	; 36
	
	set(TCCR0B, CS02);
     bce:	85 b5       	in	r24, 0x25	; 37
     bd0:	84 60       	ori	r24, 0x04	; 4
     bd2:	85 bd       	out	0x25, r24	; 37
	set(TCCR0B, CS01);
     bd4:	85 b5       	in	r24, 0x25	; 37
     bd6:	82 60       	ori	r24, 0x02	; 2
     bd8:	85 bd       	out	0x25, r24	; 37
	set(TCCR0B, CS00);
     bda:	85 b5       	in	r24, 0x25	; 37
     bdc:	81 60       	ori	r24, 0x01	; 1
     bde:	85 bd       	out	0x25, r24	; 37
	
	set(DDRB,7);
     be0:	27 9a       	sbi	0x04, 7	; 4
	
	OCR0A = 0xFF;
     be2:	8f ef       	ldi	r24, 0xFF	; 255
     be4:	87 bd       	out	0x27, r24	; 39
	OCR0B = 0;
     be6:	18 bc       	out	0x28, r1	; 40
	
	//TIMER 1: For Controlling the left wheel
	
	set(TCCR1B, WGM13);
     be8:	e1 e8       	ldi	r30, 0x81	; 129
     bea:	f0 e0       	ldi	r31, 0x00	; 0
     bec:	80 81       	ld	r24, Z
     bee:	80 61       	ori	r24, 0x10	; 16
     bf0:	80 83       	st	Z, r24
	set(TCCR1B, WGM12);
     bf2:	80 81       	ld	r24, Z
     bf4:	88 60       	ori	r24, 0x08	; 8
     bf6:	80 83       	st	Z, r24
	set(TCCR1A, WGM11);
     bf8:	a0 e8       	ldi	r26, 0x80	; 128
     bfa:	b0 e0       	ldi	r27, 0x00	; 0
     bfc:	8c 91       	ld	r24, X
     bfe:	82 60       	ori	r24, 0x02	; 2
     c00:	8c 93       	st	X, r24
	set(TCCR1A, WGM10);
     c02:	8c 91       	ld	r24, X
     c04:	81 60       	ori	r24, 0x01	; 1
     c06:	8c 93       	st	X, r24
	
	set(TCCR1A, COM1B1);
     c08:	8c 91       	ld	r24, X
     c0a:	80 62       	ori	r24, 0x20	; 32
     c0c:	8c 93       	st	X, r24
	clear(TCCR1A, COM1B0);
     c0e:	8c 91       	ld	r24, X
     c10:	8f 7e       	andi	r24, 0xEF	; 239
     c12:	8c 93       	st	X, r24
	
	clear(TCCR1B, CS12);
     c14:	80 81       	ld	r24, Z
     c16:	8b 7f       	andi	r24, 0xFB	; 251
     c18:	80 83       	st	Z, r24
	clear(TCCR1B, CS11);
     c1a:	80 81       	ld	r24, Z
     c1c:	8d 7f       	andi	r24, 0xFD	; 253
     c1e:	80 83       	st	Z, r24
	set(TCCR1B, CS10);
     c20:	80 81       	ld	r24, Z
     c22:	81 60       	ori	r24, 0x01	; 1
     c24:	80 83       	st	Z, r24
	
	set(DDRB,6);
     c26:	26 9a       	sbi	0x04, 6	; 4
	
	OCR1A = 0xFFFF;
     c28:	8f ef       	ldi	r24, 0xFF	; 255
     c2a:	9f ef       	ldi	r25, 0xFF	; 255
     c2c:	90 93 89 00 	sts	0x0089, r25
     c30:	80 93 88 00 	sts	0x0088, r24
	OCR1B = 0;
     c34:	10 92 8b 00 	sts	0x008B, r1
     c38:	10 92 8a 00 	sts	0x008A, r1
	
	//TIMER 3: For Controlling the right wheel
	//up to ICR3, clear at OCR3A & set at rollover
	
	set(TCCR3B, WGM33);
     c3c:	e1 e9       	ldi	r30, 0x91	; 145
     c3e:	f0 e0       	ldi	r31, 0x00	; 0
     c40:	20 81       	ld	r18, Z
     c42:	20 61       	ori	r18, 0x10	; 16
     c44:	20 83       	st	Z, r18
	set(TCCR3B, WGM32);
     c46:	20 81       	ld	r18, Z
     c48:	28 60       	ori	r18, 0x08	; 8
     c4a:	20 83       	st	Z, r18
	set(TCCR3A, WGM31);
     c4c:	a0 e9       	ldi	r26, 0x90	; 144
     c4e:	b0 e0       	ldi	r27, 0x00	; 0
     c50:	2c 91       	ld	r18, X
     c52:	22 60       	ori	r18, 0x02	; 2
     c54:	2c 93       	st	X, r18
	clear(TCCR3A, WGM30);
     c56:	2c 91       	ld	r18, X
     c58:	2e 7f       	andi	r18, 0xFE	; 254
     c5a:	2c 93       	st	X, r18
	
	set(TCCR3A, COM3A1); 
     c5c:	2c 91       	ld	r18, X
     c5e:	20 68       	ori	r18, 0x80	; 128
     c60:	2c 93       	st	X, r18
	clear(TCCR3A, COM3A0); 
     c62:	2c 91       	ld	r18, X
     c64:	2f 7b       	andi	r18, 0xBF	; 191
     c66:	2c 93       	st	X, r18
	
	clear(TCCR3B, CS32);
     c68:	20 81       	ld	r18, Z
     c6a:	2b 7f       	andi	r18, 0xFB	; 251
     c6c:	20 83       	st	Z, r18
	clear(TCCR3B, CS31);
     c6e:	20 81       	ld	r18, Z
     c70:	2d 7f       	andi	r18, 0xFD	; 253
     c72:	20 83       	st	Z, r18
	set(TCCR3B, CS30);
     c74:	20 81       	ld	r18, Z
     c76:	21 60       	ori	r18, 0x01	; 1
     c78:	20 83       	st	Z, r18
	
	ICR3 = 0xFFFF;
     c7a:	90 93 97 00 	sts	0x0097, r25
     c7e:	80 93 96 00 	sts	0x0096, r24
	OCR3A = 0;
     c82:	10 92 99 00 	sts	0x0099, r1
     c86:	10 92 98 00 	sts	0x0098, r1
	
	//Pin for controlling solenoid pulse
	set(DDRB,7);
     c8a:	27 9a       	sbi	0x04, 7	; 4
	
	//Pins for controlling speed of left and right wheel
	set(DDRB,6);
     c8c:	26 9a       	sbi	0x04, 6	; 4
	set(DDRC,6);
     c8e:	3e 9a       	sbi	0x07, 6	; 7
	
	//Pins for determining direction of wheels
	set(DDRB,2);
     c90:	22 9a       	sbi	0x04, 2	; 4
	set(DDRB,3);
     c92:	23 9a       	sbi	0x04, 3	; 4
	
	//Blue LED for Comm Test
	//set(DDRB,5);
	
	//ADC's
	sei();					//Set up interrupts
     c94:	78 94       	sei
	set(ADCSRA, ADIE);
     c96:	ca e7       	ldi	r28, 0x7A	; 122
     c98:	d0 e0       	ldi	r29, 0x00	; 0
     c9a:	88 81       	ld	r24, Y
     c9c:	88 60       	ori	r24, 0x08	; 8
     c9e:	88 83       	st	Y, r24
	
	clear(ADMUX, REFS1);	//Voltage reference is AR pin (5V)
     ca0:	ec e7       	ldi	r30, 0x7C	; 124
     ca2:	f0 e0       	ldi	r31, 0x00	; 0
     ca4:	80 81       	ld	r24, Z
     ca6:	8f 77       	andi	r24, 0x7F	; 127
     ca8:	80 83       	st	Z, r24
	clear(ADMUX, REFS0);	//^
     caa:	80 81       	ld	r24, Z
     cac:	8f 7b       	andi	r24, 0xBF	; 191
     cae:	80 83       	st	Z, r24
	
	set(ADCSRA, ADPS2);	//Set scale to /128
     cb0:	88 81       	ld	r24, Y
     cb2:	84 60       	ori	r24, 0x04	; 4
     cb4:	88 83       	st	Y, r24
	set(ADCSRA, ADPS1);	//^
     cb6:	88 81       	ld	r24, Y
     cb8:	82 60       	ori	r24, 0x02	; 2
     cba:	88 83       	st	Y, r24
	set(ADCSRA, ADPS0);	//^
     cbc:	88 81       	ld	r24, Y
     cbe:	81 60       	ori	r24, 0x01	; 1
     cc0:	88 83       	st	Y, r24
	
	set(DIDR0, ADC0D);	//Disable digital input for F0
     cc2:	ee e7       	ldi	r30, 0x7E	; 126
     cc4:	f0 e0       	ldi	r31, 0x00	; 0
     cc6:	80 81       	ld	r24, Z
     cc8:	81 60       	ori	r24, 0x01	; 1
     cca:	80 83       	st	Z, r24
	set(DIDR0, ADC1D),
     ccc:	80 81       	ld	r24, Z
     cce:	82 60       	ori	r24, 0x02	; 2
     cd0:	80 83       	st	Z, r24
	set(DIDR0, ADC4D);
     cd2:	80 81       	ld	r24, Z
     cd4:	80 61       	ori	r24, 0x10	; 16
     cd6:	80 83       	st	Z, r24
	set(DIDR0, ADC5D);
     cd8:	80 81       	ld	r24, Z
     cda:	80 62       	ori	r24, 0x20	; 32
     cdc:	80 83       	st	Z, r24
	set(DIDR0, ADC6D);
     cde:	80 81       	ld	r24, Z
     ce0:	80 64       	ori	r24, 0x40	; 64
     ce2:	80 83       	st	Z, r24
	set(DIDR2, ADC8D);
     ce4:	ed e7       	ldi	r30, 0x7D	; 125
     ce6:	f0 e0       	ldi	r31, 0x00	; 0
     ce8:	80 81       	ld	r24, Z
     cea:	81 60       	ori	r24, 0x01	; 1
     cec:	80 83       	st	Z, r24
	set(DIDR2, ADC9D);
     cee:	80 81       	ld	r24, Z
     cf0:	82 60       	ori	r24, 0x02	; 2
     cf2:	80 83       	st	Z, r24
	
	set(ADCSRA, ADATE);	//Set trigger to free-running mode
     cf4:	88 81       	ld	r24, Y
     cf6:	80 62       	ori	r24, 0x20	; 32
     cf8:	88 83       	st	Y, r24
	
	chooseInput(0);
     cfa:	80 e0       	ldi	r24, 0x00	; 0
     cfc:	90 e0       	ldi	r25, 0x00	; 0
     cfe:	0e 94 08 01 	call	0x210	; 0x210 <chooseInput>
	
	set(ADCSRA, ADEN);	//Enable/Start conversion
     d02:	88 81       	ld	r24, Y
     d04:	80 68       	ori	r24, 0x80	; 128
     d06:	88 83       	st	Y, r24
	set(ADCSRA, ADSC);	//^
     d08:	88 81       	ld	r24, Y
     d0a:	80 64       	ori	r24, 0x40	; 64
     d0c:	88 83       	st	Y, r24
	
	set(ADCSRA, ADIF);	//Enable reading results
     d0e:	88 81       	ld	r24, Y
     d10:	80 61       	ori	r24, 0x10	; 16
     d12:	88 83       	st	Y, r24
	
	
	//Limit Switch stuffs
	clear(DDRB,0); //set to input, RIGHT LIMIT SWITCH
     d14:	20 98       	cbi	0x04, 0	; 4
	clear(DDRB,1); //set to input, LEFT LIMIT SWITCH
     d16:	21 98       	cbi	0x04, 1	; 4
	
	clear(PORTB,0); //disable internal pull up resistor
     d18:	28 98       	cbi	0x05, 0	; 5
	clear(PORTB,1); //disable internal pull up resistor
     d1a:	29 98       	cbi	0x05, 1	; 5
	
	 
	//int state; // state variable
	state = 70; //set state
     d1c:	86 e4       	ldi	r24, 0x46	; 70
     d1e:	90 e0       	ldi	r25, 0x00	; 0
     d20:	90 93 35 01 	sts	0x0135, r25
     d24:	80 93 34 01 	sts	0x0134, r24
	long count = 0;
	

	//m_bus_init();
	m_wii_open();
     d28:	0e 94 c4 11 	call	0x2388	; 0x2388 <m_wii_open>
	m_usb_init();
     d2c:	0e 94 20 0e 	call	0x1c40	; 0x1c40 <m_usb_init>
			break;
			
			case 69:
				set(PORTB,2);
				set(PORTB,3);
				OCR1B = OCR1A;
     d30:	0f 2e       	mov	r0, r31
     d32:	f8 e8       	ldi	r31, 0x88	; 136
     d34:	cf 2e       	mov	r12, r31
     d36:	d1 2c       	mov	r13, r1
     d38:	f0 2d       	mov	r31, r0
     d3a:	0f 2e       	mov	r0, r31
     d3c:	fa e8       	ldi	r31, 0x8A	; 138
     d3e:	ef 2e       	mov	r14, r31
     d40:	f1 2c       	mov	r15, r1
     d42:	f0 2d       	mov	r31, r0
				OCR3A = ICR3;
     d44:	06 e9       	ldi	r16, 0x96	; 150
     d46:	10 e0       	ldi	r17, 0x00	; 0
     d48:	c8 e9       	ldi	r28, 0x98	; 152
     d4a:	d0 e0       	ldi	r29, 0x00	; 0
	m_usb_init();
	//local_init();

    while(1)
    {
		changedState = 0;
     d4c:	10 92 36 01 	sts	0x0136, r1
		getADC();
     d50:	0e 94 95 01 	call	0x32a	; 0x32a <getADC>
		//localize(data);

	

		//switch states
        switch (state) {
     d54:	80 91 34 01 	lds	r24, 0x0134
     d58:	90 91 35 01 	lds	r25, 0x0135
     d5c:	85 34       	cpi	r24, 0x45	; 69
     d5e:	91 05       	cpc	r25, r1
     d60:	09 f4       	brne	.+2      	; 0xd64 <main+0x1d2>
     d62:	52 c0       	rjmp	.+164    	; 0xe08 <main+0x276>
     d64:	9c f4       	brge	.+38     	; 0xd8c <main+0x1fa>
     d66:	81 30       	cpi	r24, 0x01	; 1
     d68:	91 05       	cpc	r25, r1
     d6a:	81 f3       	breq	.-32     	; 0xd4c <main+0x1ba>
     d6c:	3c f4       	brge	.+14     	; 0xd7c <main+0x1ea>
     d6e:	8d 3f       	cpi	r24, 0xFD	; 253
     d70:	2f ef       	ldi	r18, 0xFF	; 255
     d72:	92 07       	cpc	r25, r18
     d74:	01 f1       	breq	.+64     	; 0xdb6 <main+0x224>
     d76:	89 2b       	or	r24, r25
     d78:	69 f1       	breq	.+90     	; 0xdd4 <main+0x242>
     d7a:	56 c0       	rjmp	.+172    	; 0xe28 <main+0x296>
     d7c:	83 30       	cpi	r24, 0x03	; 3
     d7e:	91 05       	cpc	r25, r1
     d80:	71 f1       	breq	.+92     	; 0xdde <main+0x24c>
     d82:	5c f1       	brlt	.+86     	; 0xdda <main+0x248>
     d84:	04 97       	sbiw	r24, 0x04	; 4
     d86:	09 f0       	breq	.+2      	; 0xd8a <main+0x1f8>
     d88:	4f c0       	rjmp	.+158    	; 0xe28 <main+0x296>
     d8a:	2c c0       	rjmp	.+88     	; 0xde4 <main+0x252>
     d8c:	81 3a       	cpi	r24, 0xA1	; 161
     d8e:	91 05       	cpc	r25, r1
     d90:	91 f1       	breq	.+100    	; 0xdf6 <main+0x264>
     d92:	4c f4       	brge	.+18     	; 0xda6 <main+0x214>
     d94:	86 34       	cpi	r24, 0x46	; 70
     d96:	91 05       	cpc	r25, r1
     d98:	09 f4       	brne	.+2      	; 0xd9c <main+0x20a>
     d9a:	44 c0       	rjmp	.+136    	; 0xe24 <main+0x292>
     d9c:	80 3a       	cpi	r24, 0xA0	; 160
     d9e:	91 05       	cpc	r25, r1
     da0:	09 f0       	breq	.+2      	; 0xda4 <main+0x212>
     da2:	42 c0       	rjmp	.+132    	; 0xe28 <main+0x296>
     da4:	25 c0       	rjmp	.+74     	; 0xdf0 <main+0x25e>
     da6:	83 3a       	cpi	r24, 0xA3	; 163
     da8:	91 05       	cpc	r25, r1
     daa:	59 f1       	breq	.+86     	; 0xe02 <main+0x270>
     dac:	3c f1       	brlt	.+78     	; 0xdfc <main+0x26a>
     dae:	84 3a       	cpi	r24, 0xA4	; 164
     db0:	91 05       	cpc	r25, r1
     db2:	d1 f5       	brne	.+116    	; 0xe28 <main+0x296>
     db4:	1a c0       	rjmp	.+52     	; 0xdea <main+0x258>
			
			case -3: //test Limit switches
				//m_green(ON);
				if (check(PINB,1)) {
     db6:	19 9b       	sbis	0x03, 1	; 3
     db8:	03 c0       	rjmp	.+6      	; 0xdc0 <main+0x22e>
					
					m_green(ON);
     dba:	6a 9a       	sbi	0x0d, 2	; 13
     dbc:	72 98       	cbi	0x0e, 2	; 14
     dbe:	c6 cf       	rjmp	.-116    	; 0xd4c <main+0x1ba>
				}
				
				else if (check(PINB,0)) {
     dc0:	18 9b       	sbis	0x03, 0	; 3
     dc2:	03 c0       	rjmp	.+6      	; 0xdca <main+0x238>
					
					m_red(ON);
     dc4:	6e 9a       	sbi	0x0d, 6	; 13
     dc6:	76 98       	cbi	0x0e, 6	; 14
     dc8:	c1 cf       	rjmp	.-126    	; 0xd4c <main+0x1ba>
				}
				
				else {
					m_red(OFF);
     dca:	6e 9a       	sbi	0x0d, 6	; 13
     dcc:	76 9a       	sbi	0x0e, 6	; 14
					m_green(OFF);
     dce:	6a 9a       	sbi	0x0d, 2	; 13
     dd0:	72 9a       	sbi	0x0e, 2	; 14
     dd2:	bc cf       	rjmp	.-136    	; 0xd4c <main+0x1ba>
				
			break;

			case 0:
			//drive_to_point2(-100,0);
			game_pause();
     dd4:	0e 94 a7 05 	call	0xb4e	; 0xb4e <game_pause>
			break;
     dd8:	b9 cf       	rjmp	.-142    	; 0xd4c <main+0x1ba>
			case 1:
			findPuck();
			break;
			
			case 2:
			drive_to_puck();
     dda:	0e 94 6b 03 	call	0x6d6	; 0x6d6 <drive_to_puck>
			break;
			
			case 3:
			drive_to_goalA();
     dde:	0e 94 8d 05 	call	0xb1a	; 0xb1a <drive_to_goalA>
			break;
     de2:	b4 cf       	rjmp	.-152    	; 0xd4c <main+0x1ba>
			
			case 4:
			shoot();
     de4:	0e 94 9b 05 	call	0xb36	; 0xb36 <shoot>
			break;	
     de8:	b1 cf       	rjmp	.-158    	; 0xd4c <main+0x1ba>
			
			case 0xA4:
			game_pause();
     dea:	0e 94 a7 05 	call	0xb4e	; 0xb4e <game_pause>
			break;
     dee:	ae cf       	rjmp	.-164    	; 0xd4c <main+0x1ba>
			
			case 0xA0:
			comm_test();
     df0:	0e 94 b0 05 	call	0xb60	; 0xb60 <comm_test>
			break;
     df4:	ab cf       	rjmp	.-170    	; 0xd4c <main+0x1ba>
			
			case 0xA1:
			drive_to_goalA();
     df6:	0e 94 8d 05 	call	0xb1a	; 0xb1a <drive_to_goalA>
			break;
     dfa:	a8 cf       	rjmp	.-176    	; 0xd4c <main+0x1ba>
			
			case 0xA2:
			drive_to_goalA();
     dfc:	0e 94 8d 05 	call	0xb1a	; 0xb1a <drive_to_goalA>
			break;
     e00:	a5 cf       	rjmp	.-182    	; 0xd4c <main+0x1ba>
			
			case 0xA3:
			drive_to_goalB();
     e02:	0e 94 94 05 	call	0xb28	; 0xb28 <drive_to_goalB>
			break;
     e06:	a2 cf       	rjmp	.-188    	; 0xd4c <main+0x1ba>
			
			case 69:
				set(PORTB,2);
     e08:	2a 9a       	sbi	0x05, 2	; 5
				set(PORTB,3);
     e0a:	2b 9a       	sbi	0x05, 3	; 5
				OCR1B = OCR1A;
     e0c:	f6 01       	movw	r30, r12
     e0e:	80 81       	ld	r24, Z
     e10:	91 81       	ldd	r25, Z+1	; 0x01
     e12:	f7 01       	movw	r30, r14
     e14:	91 83       	std	Z+1, r25	; 0x01
     e16:	80 83       	st	Z, r24
				OCR3A = ICR3;
     e18:	f8 01       	movw	r30, r16
     e1a:	80 81       	ld	r24, Z
     e1c:	91 81       	ldd	r25, Z+1	; 0x01
     e1e:	99 83       	std	Y+1, r25	; 0x01
     e20:	88 83       	st	Y, r24
				break;
     e22:	94 cf       	rjmp	.-216    	; 0xd4c <main+0x1ba>
				
			case 70:
				reportADC();
     e24:	0e 94 5c 02 	call	0x4b8	; 0x4b8 <reportADC>
				break;
			
			default:
			game_pause();
     e28:	0e 94 a7 05 	call	0xb4e	; 0xb4e <game_pause>
			break;
     e2c:	8f cf       	rjmp	.-226    	; 0xd4c <main+0x1ba>

00000e2e <__vector_3>:
        
    }
}


ISR(INT2_vect)  {
     e2e:	1f 92       	push	r1
     e30:	0f 92       	push	r0
     e32:	0f b6       	in	r0, 0x3f	; 63
     e34:	0f 92       	push	r0
     e36:	11 24       	eor	r1, r1
     e38:	2f 93       	push	r18
     e3a:	3f 93       	push	r19
     e3c:	4f 93       	push	r20
     e3e:	5f 93       	push	r21
     e40:	6f 93       	push	r22
     e42:	7f 93       	push	r23
     e44:	8f 93       	push	r24
     e46:	9f 93       	push	r25
     e48:	af 93       	push	r26
     e4a:	bf 93       	push	r27
     e4c:	ef 93       	push	r30
     e4e:	ff 93       	push	r31
	cli();
     e50:	f8 94       	cli
	m_rf_read(buffer,PACKET_LENGTH);
     e52:	6a e0       	ldi	r22, 0x0A	; 10
     e54:	8b e9       	ldi	r24, 0x9B	; 155
     e56:	91 e0       	ldi	r25, 0x01	; 1
     e58:	0e 94 bf 0d 	call	0x1b7e	; 0x1b7e <m_rf_read>
	sei();
     e5c:	78 94       	sei
	state=buffer[0];
     e5e:	80 91 9b 01 	lds	r24, 0x019B
     e62:	80 93 34 01 	sts	0x0134, r24
     e66:	10 92 35 01 	sts	0x0135, r1
	changedState = 1;
     e6a:	81 e0       	ldi	r24, 0x01	; 1
     e6c:	80 93 36 01 	sts	0x0136, r24
}
     e70:	ff 91       	pop	r31
     e72:	ef 91       	pop	r30
     e74:	bf 91       	pop	r27
     e76:	af 91       	pop	r26
     e78:	9f 91       	pop	r25
     e7a:	8f 91       	pop	r24
     e7c:	7f 91       	pop	r23
     e7e:	6f 91       	pop	r22
     e80:	5f 91       	pop	r21
     e82:	4f 91       	pop	r20
     e84:	3f 91       	pop	r19
     e86:	2f 91       	pop	r18
     e88:	0f 90       	pop	r0
     e8a:	0f be       	out	0x3f, r0	; 63
     e8c:	0f 90       	pop	r0
     e8e:	1f 90       	pop	r1
     e90:	18 95       	reti

00000e92 <__vector_29>:

ISR(ADC_vect) {
     e92:	1f 92       	push	r1
     e94:	0f 92       	push	r0
     e96:	0f b6       	in	r0, 0x3f	; 63
     e98:	0f 92       	push	r0
     e9a:	11 24       	eor	r1, r1
     e9c:	8f 93       	push	r24
     e9e:	9f 93       	push	r25
	cli();
     ea0:	f8 94       	cli
	conversion = 1;
     ea2:	81 e0       	ldi	r24, 0x01	; 1
     ea4:	90 e0       	ldi	r25, 0x00	; 0
     ea6:	90 93 15 01 	sts	0x0115, r25
     eaa:	80 93 14 01 	sts	0x0114, r24
	sei();
     eae:	78 94       	sei
	
	set(ADCSRA, ADIF);	//Enable reading results
	//m_wait(500);
	m_red(TOGGLE);
	flag = 1;*/
     eb0:	9f 91       	pop	r25
     eb2:	8f 91       	pop	r24
     eb4:	0f 90       	pop	r0
     eb6:	0f be       	out	0x3f, r0	; 63
     eb8:	0f 90       	pop	r0
     eba:	1f 90       	pop	r1
     ebc:	18 95       	reti

00000ebe <m_bus_init>:
     ebe:	58 9a       	sbi	0x0b, 0	; 11
     ec0:	59 9a       	sbi	0x0b, 1	; 11
     ec2:	5a 9a       	sbi	0x0b, 2	; 11
     ec4:	8c e0       	ldi	r24, 0x0C	; 12
     ec6:	80 93 b8 00 	sts	0x00B8, r24
     eca:	e9 e6       	ldi	r30, 0x69	; 105
     ecc:	f0 e0       	ldi	r31, 0x00	; 0
     ece:	80 81       	ld	r24, Z
     ed0:	80 62       	ori	r24, 0x20	; 32
     ed2:	80 83       	st	Z, r24
     ed4:	80 81       	ld	r24, Z
     ed6:	8f 7e       	andi	r24, 0xEF	; 239
     ed8:	80 83       	st	Z, r24
     eda:	ea 9a       	sbi	0x1d, 2	; 29
     edc:	78 94       	sei
     ede:	08 95       	ret

00000ee0 <getData>:
     ee0:	0f 93       	push	r16
     ee2:	1f 93       	push	r17
     ee4:	cf 93       	push	r28
     ee6:	df 93       	push	r29
     ee8:	8c 01       	movw	r16, r24
     eea:	eb 01       	movw	r28, r22
     eec:	8d e7       	ldi	r24, 0x7D	; 125
     eee:	91 e0       	ldi	r25, 0x01	; 1
     ef0:	0e 94 2f 11 	call	0x225e	; 0x225e <m_wii_read>
     ef4:	80 91 7d 01 	lds	r24, 0x017D
     ef8:	90 91 7e 01 	lds	r25, 0x017E
     efc:	f8 01       	movw	r30, r16
     efe:	91 83       	std	Z+1, r25	; 0x01
     f00:	80 83       	st	Z, r24
     f02:	80 91 83 01 	lds	r24, 0x0183
     f06:	90 91 84 01 	lds	r25, 0x0184
     f0a:	93 83       	std	Z+3, r25	; 0x03
     f0c:	82 83       	std	Z+2, r24	; 0x02
     f0e:	80 91 89 01 	lds	r24, 0x0189
     f12:	90 91 8a 01 	lds	r25, 0x018A
     f16:	95 83       	std	Z+5, r25	; 0x05
     f18:	84 83       	std	Z+4, r24	; 0x04
     f1a:	80 91 8f 01 	lds	r24, 0x018F
     f1e:	90 91 90 01 	lds	r25, 0x0190
     f22:	97 83       	std	Z+7, r25	; 0x07
     f24:	86 83       	std	Z+6, r24	; 0x06
     f26:	80 91 7f 01 	lds	r24, 0x017F
     f2a:	90 91 80 01 	lds	r25, 0x0180
     f2e:	99 83       	std	Y+1, r25	; 0x01
     f30:	88 83       	st	Y, r24
     f32:	80 91 85 01 	lds	r24, 0x0185
     f36:	90 91 86 01 	lds	r25, 0x0186
     f3a:	9b 83       	std	Y+3, r25	; 0x03
     f3c:	8a 83       	std	Y+2, r24	; 0x02
     f3e:	80 91 8b 01 	lds	r24, 0x018B
     f42:	90 91 8c 01 	lds	r25, 0x018C
     f46:	9d 83       	std	Y+5, r25	; 0x05
     f48:	8c 83       	std	Y+4, r24	; 0x04
     f4a:	80 91 91 01 	lds	r24, 0x0191
     f4e:	90 91 92 01 	lds	r25, 0x0192
     f52:	9f 83       	std	Y+7, r25	; 0x07
     f54:	8e 83       	std	Y+6, r24	; 0x06
     f56:	81 e0       	ldi	r24, 0x01	; 1
     f58:	df 91       	pop	r29
     f5a:	cf 91       	pop	r28
     f5c:	1f 91       	pop	r17
     f5e:	0f 91       	pop	r16
     f60:	08 95       	ret

00000f62 <determine_blobs>:
     f62:	2f 92       	push	r2
     f64:	3f 92       	push	r3
     f66:	4f 92       	push	r4
     f68:	5f 92       	push	r5
     f6a:	6f 92       	push	r6
     f6c:	7f 92       	push	r7
     f6e:	8f 92       	push	r8
     f70:	9f 92       	push	r9
     f72:	af 92       	push	r10
     f74:	bf 92       	push	r11
     f76:	cf 92       	push	r12
     f78:	df 92       	push	r13
     f7a:	ef 92       	push	r14
     f7c:	ff 92       	push	r15
     f7e:	0f 93       	push	r16
     f80:	1f 93       	push	r17
     f82:	cf 93       	push	r28
     f84:	df 93       	push	r29
     f86:	cd b7       	in	r28, 0x3d	; 61
     f88:	de b7       	in	r29, 0x3e	; 62
     f8a:	6c 97       	sbiw	r28, 0x1c	; 28
     f8c:	0f b6       	in	r0, 0x3f	; 63
     f8e:	f8 94       	cli
     f90:	de bf       	out	0x3e, r29	; 62
     f92:	0f be       	out	0x3f, r0	; 63
     f94:	cd bf       	out	0x3d, r28	; 61
     f96:	10 92 45 01 	sts	0x0145, r1
     f9a:	10 92 46 01 	sts	0x0146, r1
     f9e:	10 92 47 01 	sts	0x0147, r1
     fa2:	10 92 48 01 	sts	0x0148, r1
     fa6:	80 e0       	ldi	r24, 0x00	; 0
     fa8:	90 e6       	ldi	r25, 0x60	; 96
     faa:	aa ee       	ldi	r26, 0xEA	; 234
     fac:	b6 e4       	ldi	r27, 0x46	; 70
     fae:	80 93 00 01 	sts	0x0100, r24
     fb2:	90 93 01 01 	sts	0x0101, r25
     fb6:	a0 93 02 01 	sts	0x0102, r26
     fba:	b0 93 03 01 	sts	0x0103, r27
     fbe:	0f 2e       	mov	r0, r31
     fc0:	f7 e5       	ldi	r31, 0x57	; 87
     fc2:	cf 2e       	mov	r12, r31
     fc4:	f1 e0       	ldi	r31, 0x01	; 1
     fc6:	df 2e       	mov	r13, r31
     fc8:	f0 2d       	mov	r31, r0
     fca:	09 e5       	ldi	r16, 0x59	; 89
     fcc:	11 e0       	ldi	r17, 0x01	; 1
     fce:	0f 2e       	mov	r0, r31
     fd0:	fb e5       	ldi	r31, 0x5B	; 91
     fd2:	ef 2e       	mov	r14, r31
     fd4:	f1 e0       	ldi	r31, 0x01	; 1
     fd6:	ff 2e       	mov	r15, r31
     fd8:	f0 2d       	mov	r31, r0
     fda:	6d e4       	ldi	r22, 0x4D	; 77
     fdc:	71 e0       	ldi	r23, 0x01	; 1
     fde:	85 e5       	ldi	r24, 0x55	; 85
     fe0:	91 e0       	ldi	r25, 0x01	; 1
     fe2:	0e 94 70 07 	call	0xee0	; 0xee0 <getData>
     fe6:	80 91 55 01 	lds	r24, 0x0155
     fea:	90 91 56 01 	lds	r25, 0x0156
     fee:	8f 3f       	cpi	r24, 0xFF	; 255
     ff0:	93 40       	sbci	r25, 0x03	; 3
     ff2:	98 f7       	brcc	.-26     	; 0xfda <determine_blobs+0x78>
     ff4:	f6 01       	movw	r30, r12
     ff6:	80 81       	ld	r24, Z
     ff8:	91 81       	ldd	r25, Z+1	; 0x01
     ffa:	8f 3f       	cpi	r24, 0xFF	; 255
     ffc:	93 40       	sbci	r25, 0x03	; 3
     ffe:	68 f7       	brcc	.-38     	; 0xfda <determine_blobs+0x78>
    1000:	f8 01       	movw	r30, r16
    1002:	80 81       	ld	r24, Z
    1004:	91 81       	ldd	r25, Z+1	; 0x01
    1006:	8f 3f       	cpi	r24, 0xFF	; 255
    1008:	93 40       	sbci	r25, 0x03	; 3
    100a:	38 f7       	brcc	.-50     	; 0xfda <determine_blobs+0x78>
    100c:	f7 01       	movw	r30, r14
    100e:	80 81       	ld	r24, Z
    1010:	91 81       	ldd	r25, Z+1	; 0x01
    1012:	8f 3f       	cpi	r24, 0xFF	; 255
    1014:	93 40       	sbci	r25, 0x03	; 3
    1016:	08 f7       	brcc	.-62     	; 0xfda <determine_blobs+0x78>
    1018:	80 90 49 01 	lds	r8, 0x0149
    101c:	90 90 4a 01 	lds	r9, 0x014A
    1020:	a0 90 4b 01 	lds	r10, 0x014B
    1024:	b0 90 4c 01 	lds	r11, 0x014C
    1028:	20 91 45 01 	lds	r18, 0x0145
    102c:	29 83       	std	Y+1, r18	; 0x01
    102e:	30 91 46 01 	lds	r19, 0x0146
    1032:	3a 83       	std	Y+2, r19	; 0x02
    1034:	40 91 47 01 	lds	r20, 0x0147
    1038:	4b 83       	std	Y+3, r20	; 0x03
    103a:	50 91 48 01 	lds	r21, 0x0148
    103e:	5c 83       	std	Y+4, r21	; 0x04
    1040:	60 91 3f 01 	lds	r22, 0x013F
    1044:	6b 8b       	std	Y+19, r22	; 0x13
    1046:	70 91 40 01 	lds	r23, 0x0140
    104a:	7c 8b       	std	Y+20, r23	; 0x14
    104c:	80 91 3d 01 	lds	r24, 0x013D
    1050:	89 8b       	std	Y+17, r24	; 0x11
    1052:	90 91 3e 01 	lds	r25, 0x013E
    1056:	9a 8b       	std	Y+18, r25	; 0x12
    1058:	e0 91 41 01 	lds	r30, 0x0141
    105c:	ed 8b       	std	Y+21, r30	; 0x15
    105e:	f0 91 42 01 	lds	r31, 0x0142
    1062:	fe 8b       	std	Y+22, r31	; 0x16
    1064:	20 91 43 01 	lds	r18, 0x0143
    1068:	2f 8b       	std	Y+23, r18	; 0x17
    106a:	30 91 44 01 	lds	r19, 0x0144
    106e:	38 8f       	std	Y+24, r19	; 0x18
    1070:	40 91 00 01 	lds	r20, 0x0100
    1074:	4d 83       	std	Y+5, r20	; 0x05
    1076:	50 91 01 01 	lds	r21, 0x0101
    107a:	5e 83       	std	Y+6, r21	; 0x06
    107c:	20 90 02 01 	lds	r2, 0x0102
    1080:	30 90 03 01 	lds	r3, 0x0103
    1084:	60 91 3b 01 	lds	r22, 0x013B
    1088:	69 8f       	std	Y+25, r22	; 0x19
    108a:	70 91 3c 01 	lds	r23, 0x013C
    108e:	7a 8f       	std	Y+26, r23	; 0x1a
    1090:	80 91 39 01 	lds	r24, 0x0139
    1094:	90 91 3a 01 	lds	r25, 0x013A
    1098:	98 8b       	std	Y+16, r25	; 0x10
    109a:	8f 87       	std	Y+15, r24	; 0x0f
    109c:	18 86       	std	Y+8, r1	; 0x08
    109e:	1f 82       	std	Y+7, r1	; 0x07
    10a0:	c1 2c       	mov	r12, r1
    10a2:	d1 2c       	mov	r13, r1
    10a4:	b9 c0       	rjmp	.+370    	; 0x1218 <determine_blobs+0x2b6>
    10a6:	eb 8d       	ldd	r30, Y+27	; 0x1b
    10a8:	fc 8d       	ldd	r31, Y+28	; 0x1c
    10aa:	e4 15       	cp	r30, r4
    10ac:	f5 05       	cpc	r31, r5
    10ae:	09 f4       	brne	.+2      	; 0x10b2 <determine_blobs+0x150>
    10b0:	9c c0       	rjmp	.+312    	; 0x11ea <determine_blobs+0x288>
    10b2:	e9 85       	ldd	r30, Y+9	; 0x09
    10b4:	fa 85       	ldd	r31, Y+10	; 0x0a
    10b6:	60 81       	ld	r22, Z
    10b8:	71 81       	ldd	r23, Z+1	; 0x01
    10ba:	80 e0       	ldi	r24, 0x00	; 0
    10bc:	90 e0       	ldi	r25, 0x00	; 0
    10be:	0e 94 5f 14 	call	0x28be	; 0x28be <__floatunsisf>
    10c2:	6b 01       	movw	r12, r22
    10c4:	7c 01       	movw	r14, r24
    10c6:	f3 01       	movw	r30, r6
    10c8:	60 81       	ld	r22, Z
    10ca:	71 81       	ldd	r23, Z+1	; 0x01
    10cc:	80 e0       	ldi	r24, 0x00	; 0
    10ce:	90 e0       	ldi	r25, 0x00	; 0
    10d0:	0e 94 5f 14 	call	0x28be	; 0x28be <__floatunsisf>
    10d4:	9b 01       	movw	r18, r22
    10d6:	ac 01       	movw	r20, r24
    10d8:	c7 01       	movw	r24, r14
    10da:	b6 01       	movw	r22, r12
    10dc:	0e 94 c7 12 	call	0x258e	; 0x258e <__subsf3>
    10e0:	c6 2e       	mov	r12, r22
    10e2:	d7 2e       	mov	r13, r23
    10e4:	e8 2e       	mov	r14, r24
    10e6:	f9 2e       	mov	r15, r25
    10e8:	eb 85       	ldd	r30, Y+11	; 0x0b
    10ea:	fc 85       	ldd	r31, Y+12	; 0x0c
    10ec:	60 81       	ld	r22, Z
    10ee:	71 81       	ldd	r23, Z+1	; 0x01
    10f0:	80 e0       	ldi	r24, 0x00	; 0
    10f2:	90 e0       	ldi	r25, 0x00	; 0
    10f4:	0e 94 5f 14 	call	0x28be	; 0x28be <__floatunsisf>
    10f8:	4b 01       	movw	r8, r22
    10fa:	5c 01       	movw	r10, r24
    10fc:	f8 01       	movw	r30, r16
    10fe:	60 81       	ld	r22, Z
    1100:	71 81       	ldd	r23, Z+1	; 0x01
    1102:	80 e0       	ldi	r24, 0x00	; 0
    1104:	90 e0       	ldi	r25, 0x00	; 0
    1106:	0e 94 5f 14 	call	0x28be	; 0x28be <__floatunsisf>
    110a:	9b 01       	movw	r18, r22
    110c:	ac 01       	movw	r20, r24
    110e:	c5 01       	movw	r24, r10
    1110:	b4 01       	movw	r22, r8
    1112:	0e 94 c7 12 	call	0x258e	; 0x258e <__subsf3>
    1116:	86 2e       	mov	r8, r22
    1118:	97 2e       	mov	r9, r23
    111a:	a8 2e       	mov	r10, r24
    111c:	b9 2e       	mov	r11, r25
    111e:	2c 2d       	mov	r18, r12
    1120:	3d 2d       	mov	r19, r13
    1122:	4e 2d       	mov	r20, r14
    1124:	5f 2d       	mov	r21, r15
    1126:	6c 2d       	mov	r22, r12
    1128:	7d 2d       	mov	r23, r13
    112a:	8e 2d       	mov	r24, r14
    112c:	9f 2d       	mov	r25, r15
    112e:	0e 94 e3 15 	call	0x2bc6	; 0x2bc6 <__mulsf3>
    1132:	6b 01       	movw	r12, r22
    1134:	7c 01       	movw	r14, r24
    1136:	28 2d       	mov	r18, r8
    1138:	39 2d       	mov	r19, r9
    113a:	4a 2d       	mov	r20, r10
    113c:	5b 2d       	mov	r21, r11
    113e:	68 2d       	mov	r22, r8
    1140:	79 2d       	mov	r23, r9
    1142:	8a 2d       	mov	r24, r10
    1144:	9b 2d       	mov	r25, r11
    1146:	0e 94 e3 15 	call	0x2bc6	; 0x2bc6 <__mulsf3>
    114a:	9b 01       	movw	r18, r22
    114c:	ac 01       	movw	r20, r24
    114e:	c7 01       	movw	r24, r14
    1150:	b6 01       	movw	r22, r12
    1152:	0e 94 c8 12 	call	0x2590	; 0x2590 <__addsf3>
    1156:	0e 94 50 16 	call	0x2ca0	; 0x2ca0 <sqrt>
    115a:	86 2e       	mov	r8, r22
    115c:	97 2e       	mov	r9, r23
    115e:	a8 2e       	mov	r10, r24
    1160:	b9 2e       	mov	r11, r25
    1162:	79 81       	ldd	r23, Y+1	; 0x01
    1164:	6a 81       	ldd	r22, Y+2	; 0x02
    1166:	9b 81       	ldd	r25, Y+3	; 0x03
    1168:	8c 81       	ldd	r24, Y+4	; 0x04
    116a:	27 2f       	mov	r18, r23
    116c:	36 2f       	mov	r19, r22
    116e:	49 2f       	mov	r20, r25
    1170:	58 2f       	mov	r21, r24
    1172:	68 2d       	mov	r22, r8
    1174:	79 2d       	mov	r23, r9
    1176:	8a 2d       	mov	r24, r10
    1178:	9b 2d       	mov	r25, r11
    117a:	0e 94 6f 15 	call	0x2ade	; 0x2ade <__gesf2>
    117e:	18 16       	cp	r1, r24
    1180:	d4 f4       	brge	.+52     	; 0x11b6 <determine_blobs+0x254>
    1182:	20 e0       	ldi	r18, 0x00	; 0
    1184:	30 e0       	ldi	r19, 0x00	; 0
    1186:	40 e0       	ldi	r20, 0x00	; 0
    1188:	5f e3       	ldi	r21, 0x3F	; 63
    118a:	68 2d       	mov	r22, r8
    118c:	79 2d       	mov	r23, r9
    118e:	8a 2d       	mov	r24, r10
    1190:	9b 2d       	mov	r25, r11
    1192:	0e 94 e3 15 	call	0x2bc6	; 0x2bc6 <__mulsf3>
    1196:	6d 8b       	std	Y+21, r22	; 0x15
    1198:	7e 8b       	std	Y+22, r23	; 0x16
    119a:	8f 8b       	std	Y+23, r24	; 0x17
    119c:	98 8f       	std	Y+24, r25	; 0x18
    119e:	fb 8d       	ldd	r31, Y+27	; 0x1b
    11a0:	f9 8b       	std	Y+17, r31	; 0x11
    11a2:	2c 8d       	ldd	r18, Y+28	; 0x1c
    11a4:	2a 8b       	std	Y+18, r18	; 0x12
    11a6:	3d 85       	ldd	r19, Y+13	; 0x0d
    11a8:	3b 8b       	std	Y+19, r19	; 0x13
    11aa:	4e 85       	ldd	r20, Y+14	; 0x0e
    11ac:	4c 8b       	std	Y+20, r20	; 0x14
    11ae:	89 82       	std	Y+1, r8	; 0x01
    11b0:	9a 82       	std	Y+2, r9	; 0x02
    11b2:	ab 82       	std	Y+3, r10	; 0x03
    11b4:	bc 82       	std	Y+4, r11	; 0x04
    11b6:	7d 81       	ldd	r23, Y+5	; 0x05
    11b8:	6e 81       	ldd	r22, Y+6	; 0x06
    11ba:	27 2f       	mov	r18, r23
    11bc:	36 2f       	mov	r19, r22
    11be:	42 2d       	mov	r20, r2
    11c0:	53 2d       	mov	r21, r3
    11c2:	68 2d       	mov	r22, r8
    11c4:	79 2d       	mov	r23, r9
    11c6:	8a 2d       	mov	r24, r10
    11c8:	9b 2d       	mov	r25, r11
    11ca:	0e 94 8e 13 	call	0x271c	; 0x271c <__cmpsf2>
    11ce:	88 23       	and	r24, r24
    11d0:	64 f4       	brge	.+24     	; 0x11ea <determine_blobs+0x288>
    11d2:	6b 8d       	ldd	r22, Y+27	; 0x1b
    11d4:	7c 8d       	ldd	r23, Y+28	; 0x1c
    11d6:	78 8b       	std	Y+16, r23	; 0x10
    11d8:	6f 87       	std	Y+15, r22	; 0x0f
    11da:	7d 85       	ldd	r23, Y+13	; 0x0d
    11dc:	79 8f       	std	Y+25, r23	; 0x19
    11de:	8e 85       	ldd	r24, Y+14	; 0x0e
    11e0:	8a 8f       	std	Y+26, r24	; 0x1a
    11e2:	8d 82       	std	Y+5, r8	; 0x05
    11e4:	9e 82       	std	Y+6, r9	; 0x06
    11e6:	2a 2c       	mov	r2, r10
    11e8:	3b 2c       	mov	r3, r11
    11ea:	92 e0       	ldi	r25, 0x02	; 2
    11ec:	69 0e       	add	r6, r25
    11ee:	71 1c       	adc	r7, r1
    11f0:	0e 5f       	subi	r16, 0xFE	; 254
    11f2:	1f 4f       	sbci	r17, 0xFF	; 255
    11f4:	eb 8d       	ldd	r30, Y+27	; 0x1b
    11f6:	fc 8d       	ldd	r31, Y+28	; 0x1c
    11f8:	31 96       	adiw	r30, 0x01	; 1
    11fa:	fc 8f       	std	Y+28, r31	; 0x1c
    11fc:	eb 8f       	std	Y+27, r30	; 0x1b
    11fe:	34 97       	sbiw	r30, 0x04	; 4
    1200:	09 f0       	breq	.+2      	; 0x1204 <determine_blobs+0x2a2>
    1202:	51 cf       	rjmp	.-350    	; 0x10a6 <determine_blobs+0x144>
    1204:	2f 81       	ldd	r18, Y+7	; 0x07
    1206:	38 85       	ldd	r19, Y+8	; 0x08
    1208:	2f 5f       	subi	r18, 0xFF	; 255
    120a:	3f 4f       	sbci	r19, 0xFF	; 255
    120c:	38 87       	std	Y+8, r19	; 0x08
    120e:	2f 83       	std	Y+7, r18	; 0x07
    1210:	69 01       	movw	r12, r18
    1212:	24 30       	cpi	r18, 0x04	; 4
    1214:	31 05       	cpc	r19, r1
    1216:	39 f1       	breq	.+78     	; 0x1266 <determine_blobs+0x304>
    1218:	34 e0       	ldi	r19, 0x04	; 4
    121a:	c3 16       	cp	r12, r19
    121c:	d1 04       	cpc	r13, r1
    121e:	94 f7       	brge	.-28     	; 0x1204 <determine_blobs+0x2a2>
    1220:	86 01       	movw	r16, r12
    1222:	0f 5f       	subi	r16, 0xFF	; 255
    1224:	1f 4f       	sbci	r17, 0xFF	; 255
    1226:	00 0f       	add	r16, r16
    1228:	11 1f       	adc	r17, r17
    122a:	0f 2e       	mov	r0, r31
    122c:	f5 e5       	ldi	r31, 0x55	; 85
    122e:	ef 2e       	mov	r14, r31
    1230:	f1 e0       	ldi	r31, 0x01	; 1
    1232:	ff 2e       	mov	r15, r31
    1234:	f0 2d       	mov	r31, r0
    1236:	e0 0e       	add	r14, r16
    1238:	f1 1e       	adc	r15, r17
    123a:	03 5b       	subi	r16, 0xB3	; 179
    123c:	1e 4f       	sbci	r17, 0xFE	; 254
    123e:	c6 01       	movw	r24, r12
    1240:	88 0f       	add	r24, r24
    1242:	99 1f       	adc	r25, r25
    1244:	ac 01       	movw	r20, r24
    1246:	4b 5a       	subi	r20, 0xAB	; 171
    1248:	5e 4f       	sbci	r21, 0xFE	; 254
    124a:	5a 87       	std	Y+10, r21	; 0x0a
    124c:	49 87       	std	Y+9, r20	; 0x09
    124e:	bc 01       	movw	r22, r24
    1250:	63 5b       	subi	r22, 0xB3	; 179
    1252:	7e 4f       	sbci	r23, 0xFE	; 254
    1254:	7c 87       	std	Y+12, r23	; 0x0c
    1256:	6b 87       	std	Y+11, r22	; 0x0b
    1258:	cd 86       	std	Y+13, r12	; 0x0d
    125a:	de 86       	std	Y+14, r13	; 0x0e
    125c:	dc 8e       	std	Y+28, r13	; 0x1c
    125e:	cb 8e       	std	Y+27, r12	; 0x1b
    1260:	26 01       	movw	r4, r12
    1262:	37 01       	movw	r6, r14
    1264:	c7 cf       	rjmp	.-114    	; 0x11f4 <determine_blobs+0x292>
    1266:	88 2d       	mov	r24, r8
    1268:	99 2d       	mov	r25, r9
    126a:	aa 2d       	mov	r26, r10
    126c:	bb 2d       	mov	r27, r11
    126e:	80 93 49 01 	sts	0x0149, r24
    1272:	90 93 4a 01 	sts	0x014A, r25
    1276:	a0 93 4b 01 	sts	0x014B, r26
    127a:	b0 93 4c 01 	sts	0x014C, r27
    127e:	59 81       	ldd	r21, Y+1	; 0x01
    1280:	4a 81       	ldd	r20, Y+2	; 0x02
    1282:	3b 81       	ldd	r19, Y+3	; 0x03
    1284:	2c 81       	ldd	r18, Y+4	; 0x04
    1286:	85 2f       	mov	r24, r21
    1288:	94 2f       	mov	r25, r20
    128a:	a3 2f       	mov	r26, r19
    128c:	b2 2f       	mov	r27, r18
    128e:	80 93 45 01 	sts	0x0145, r24
    1292:	90 93 46 01 	sts	0x0146, r25
    1296:	a0 93 47 01 	sts	0x0147, r26
    129a:	b0 93 48 01 	sts	0x0148, r27
    129e:	7b 89       	ldd	r23, Y+19	; 0x13
    12a0:	70 93 3f 01 	sts	0x013F, r23
    12a4:	8c 89       	ldd	r24, Y+20	; 0x14
    12a6:	80 93 40 01 	sts	0x0140, r24
    12aa:	99 89       	ldd	r25, Y+17	; 0x11
    12ac:	90 93 3d 01 	sts	0x013D, r25
    12b0:	ea 89       	ldd	r30, Y+18	; 0x12
    12b2:	e0 93 3e 01 	sts	0x013E, r30
    12b6:	5d 89       	ldd	r21, Y+21	; 0x15
    12b8:	4e 89       	ldd	r20, Y+22	; 0x16
    12ba:	3f 89       	ldd	r19, Y+23	; 0x17
    12bc:	28 8d       	ldd	r18, Y+24	; 0x18
    12be:	85 2f       	mov	r24, r21
    12c0:	94 2f       	mov	r25, r20
    12c2:	a3 2f       	mov	r26, r19
    12c4:	b2 2f       	mov	r27, r18
    12c6:	80 93 41 01 	sts	0x0141, r24
    12ca:	90 93 42 01 	sts	0x0142, r25
    12ce:	a0 93 43 01 	sts	0x0143, r26
    12d2:	b0 93 44 01 	sts	0x0144, r27
    12d6:	5d 81       	ldd	r21, Y+5	; 0x05
    12d8:	4e 81       	ldd	r20, Y+6	; 0x06
    12da:	85 2f       	mov	r24, r21
    12dc:	94 2f       	mov	r25, r20
    12de:	a2 2d       	mov	r26, r2
    12e0:	b3 2d       	mov	r27, r3
    12e2:	80 93 00 01 	sts	0x0100, r24
    12e6:	90 93 01 01 	sts	0x0101, r25
    12ea:	a0 93 02 01 	sts	0x0102, r26
    12ee:	b0 93 03 01 	sts	0x0103, r27
    12f2:	f9 8d       	ldd	r31, Y+25	; 0x19
    12f4:	f0 93 3b 01 	sts	0x013B, r31
    12f8:	2a 8d       	ldd	r18, Y+26	; 0x1a
    12fa:	20 93 3c 01 	sts	0x013C, r18
    12fe:	3f 85       	ldd	r19, Y+15	; 0x0f
    1300:	30 93 39 01 	sts	0x0139, r19
    1304:	48 89       	ldd	r20, Y+16	; 0x10
    1306:	40 93 3a 01 	sts	0x013A, r20
    130a:	80 91 3f 01 	lds	r24, 0x013F
    130e:	90 91 40 01 	lds	r25, 0x0140
    1312:	20 91 3b 01 	lds	r18, 0x013B
    1316:	30 91 3c 01 	lds	r19, 0x013C
    131a:	82 17       	cp	r24, r18
    131c:	93 07       	cpc	r25, r19
    131e:	19 f5       	brne	.+70     	; 0x1366 <determine_blobs+0x404>
    1320:	90 93 7c 01 	sts	0x017C, r25
    1324:	80 93 7b 01 	sts	0x017B, r24
    1328:	40 91 3d 01 	lds	r20, 0x013D
    132c:	50 91 3e 01 	lds	r21, 0x013E
    1330:	50 93 7a 01 	sts	0x017A, r21
    1334:	40 93 79 01 	sts	0x0179, r20
    1338:	20 91 39 01 	lds	r18, 0x0139
    133c:	30 91 3a 01 	lds	r19, 0x013A
    1340:	30 93 76 01 	sts	0x0176, r19
    1344:	20 93 75 01 	sts	0x0175, r18
    1348:	69 e0       	ldi	r22, 0x09	; 9
    134a:	70 e0       	ldi	r23, 0x00	; 0
    134c:	fb 01       	movw	r30, r22
    134e:	e8 1b       	sub	r30, r24
    1350:	f9 0b       	sbc	r31, r25
    1352:	cf 01       	movw	r24, r30
    1354:	84 1b       	sub	r24, r20
    1356:	95 0b       	sbc	r25, r21
    1358:	82 1b       	sub	r24, r18
    135a:	93 0b       	sbc	r25, r19
    135c:	90 93 78 01 	sts	0x0178, r25
    1360:	80 93 77 01 	sts	0x0177, r24
    1364:	66 c0       	rjmp	.+204    	; 0x1432 <determine_blobs+0x4d0>
    1366:	4f 85       	ldd	r20, Y+15	; 0x0f
    1368:	58 89       	ldd	r21, Y+16	; 0x10
    136a:	84 17       	cp	r24, r20
    136c:	95 07       	cpc	r25, r21
    136e:	f9 f4       	brne	.+62     	; 0x13ae <determine_blobs+0x44c>
    1370:	90 93 7c 01 	sts	0x017C, r25
    1374:	80 93 7b 01 	sts	0x017B, r24
    1378:	40 91 3d 01 	lds	r20, 0x013D
    137c:	50 91 3e 01 	lds	r21, 0x013E
    1380:	50 93 7a 01 	sts	0x017A, r21
    1384:	40 93 79 01 	sts	0x0179, r20
    1388:	30 93 76 01 	sts	0x0176, r19
    138c:	20 93 75 01 	sts	0x0175, r18
    1390:	69 e0       	ldi	r22, 0x09	; 9
    1392:	70 e0       	ldi	r23, 0x00	; 0
    1394:	fb 01       	movw	r30, r22
    1396:	e8 1b       	sub	r30, r24
    1398:	f9 0b       	sbc	r31, r25
    139a:	cf 01       	movw	r24, r30
    139c:	84 1b       	sub	r24, r20
    139e:	95 0b       	sbc	r25, r21
    13a0:	82 1b       	sub	r24, r18
    13a2:	93 0b       	sbc	r25, r19
    13a4:	90 93 78 01 	sts	0x0178, r25
    13a8:	80 93 77 01 	sts	0x0177, r24
    13ac:	42 c0       	rjmp	.+132    	; 0x1432 <determine_blobs+0x4d0>
    13ae:	40 91 3d 01 	lds	r20, 0x013D
    13b2:	50 91 3e 01 	lds	r21, 0x013E
    13b6:	24 17       	cp	r18, r20
    13b8:	35 07       	cpc	r19, r21
    13ba:	01 f5       	brne	.+64     	; 0x13fc <determine_blobs+0x49a>
    13bc:	30 93 7c 01 	sts	0x017C, r19
    13c0:	20 93 7b 01 	sts	0x017B, r18
    13c4:	90 93 7a 01 	sts	0x017A, r25
    13c8:	80 93 79 01 	sts	0x0179, r24
    13cc:	4f 85       	ldd	r20, Y+15	; 0x0f
    13ce:	58 89       	ldd	r21, Y+16	; 0x10
    13d0:	50 93 76 01 	sts	0x0176, r21
    13d4:	40 93 75 01 	sts	0x0175, r20
    13d8:	49 e0       	ldi	r20, 0x09	; 9
    13da:	50 e0       	ldi	r21, 0x00	; 0
    13dc:	ba 01       	movw	r22, r20
    13de:	62 1b       	sub	r22, r18
    13e0:	73 0b       	sbc	r23, r19
    13e2:	fb 01       	movw	r30, r22
    13e4:	e8 1b       	sub	r30, r24
    13e6:	f9 0b       	sbc	r31, r25
    13e8:	cf 01       	movw	r24, r30
    13ea:	2f 85       	ldd	r18, Y+15	; 0x0f
    13ec:	38 89       	ldd	r19, Y+16	; 0x10
    13ee:	82 1b       	sub	r24, r18
    13f0:	93 0b       	sbc	r25, r19
    13f2:	90 93 78 01 	sts	0x0178, r25
    13f6:	80 93 77 01 	sts	0x0177, r24
    13fa:	1b c0       	rjmp	.+54     	; 0x1432 <determine_blobs+0x4d0>
    13fc:	50 93 7c 01 	sts	0x017C, r21
    1400:	40 93 7b 01 	sts	0x017B, r20
    1404:	90 93 7a 01 	sts	0x017A, r25
    1408:	80 93 79 01 	sts	0x0179, r24
    140c:	30 93 76 01 	sts	0x0176, r19
    1410:	20 93 75 01 	sts	0x0175, r18
    1414:	69 e0       	ldi	r22, 0x09	; 9
    1416:	70 e0       	ldi	r23, 0x00	; 0
    1418:	fb 01       	movw	r30, r22
    141a:	e4 1b       	sub	r30, r20
    141c:	f5 0b       	sbc	r31, r21
    141e:	bf 01       	movw	r22, r30
    1420:	68 1b       	sub	r22, r24
    1422:	79 0b       	sbc	r23, r25
    1424:	cb 01       	movw	r24, r22
    1426:	82 1b       	sub	r24, r18
    1428:	93 0b       	sbc	r25, r19
    142a:	90 93 78 01 	sts	0x0178, r25
    142e:	80 93 77 01 	sts	0x0177, r24
    1432:	81 e0       	ldi	r24, 0x01	; 1
    1434:	6c 96       	adiw	r28, 0x1c	; 28
    1436:	0f b6       	in	r0, 0x3f	; 63
    1438:	f8 94       	cli
    143a:	de bf       	out	0x3e, r29	; 62
    143c:	0f be       	out	0x3f, r0	; 63
    143e:	cd bf       	out	0x3d, r28	; 61
    1440:	df 91       	pop	r29
    1442:	cf 91       	pop	r28
    1444:	1f 91       	pop	r17
    1446:	0f 91       	pop	r16
    1448:	ff 90       	pop	r15
    144a:	ef 90       	pop	r14
    144c:	df 90       	pop	r13
    144e:	cf 90       	pop	r12
    1450:	bf 90       	pop	r11
    1452:	af 90       	pop	r10
    1454:	9f 90       	pop	r9
    1456:	8f 90       	pop	r8
    1458:	7f 90       	pop	r7
    145a:	6f 90       	pop	r6
    145c:	5f 90       	pop	r5
    145e:	4f 90       	pop	r4
    1460:	3f 90       	pop	r3
    1462:	2f 90       	pop	r2
    1464:	08 95       	ret

00001466 <localize>:
    1466:	2f 92       	push	r2
    1468:	3f 92       	push	r3
    146a:	4f 92       	push	r4
    146c:	5f 92       	push	r5
    146e:	6f 92       	push	r6
    1470:	7f 92       	push	r7
    1472:	8f 92       	push	r8
    1474:	9f 92       	push	r9
    1476:	af 92       	push	r10
    1478:	bf 92       	push	r11
    147a:	cf 92       	push	r12
    147c:	df 92       	push	r13
    147e:	ef 92       	push	r14
    1480:	ff 92       	push	r15
    1482:	0f 93       	push	r16
    1484:	1f 93       	push	r17
    1486:	cf 93       	push	r28
    1488:	df 93       	push	r29
    148a:	cd b7       	in	r28, 0x3d	; 61
    148c:	de b7       	in	r29, 0x3e	; 62
    148e:	2d 97       	sbiw	r28, 0x0d	; 13
    1490:	0f b6       	in	r0, 0x3f	; 63
    1492:	f8 94       	cli
    1494:	de bf       	out	0x3e, r29	; 62
    1496:	0f be       	out	0x3f, r0	; 63
    1498:	cd bf       	out	0x3d, r28	; 61
    149a:	8c 01       	movw	r16, r24
    149c:	10 92 38 01 	sts	0x0138, r1
    14a0:	10 92 37 01 	sts	0x0137, r1
    14a4:	0e 94 b1 07 	call	0xf62	; 0xf62 <determine_blobs>
    14a8:	e0 90 7b 01 	lds	r14, 0x017B
    14ac:	f0 90 7c 01 	lds	r15, 0x017C
    14b0:	f7 01       	movw	r30, r14
    14b2:	ee 0f       	add	r30, r30
    14b4:	ff 1f       	adc	r31, r31
    14b6:	eb 5a       	subi	r30, 0xAB	; 171
    14b8:	fe 4f       	sbci	r31, 0xFE	; 254
    14ba:	20 81       	ld	r18, Z
    14bc:	31 81       	ldd	r19, Z+1	; 0x01
    14be:	3a 83       	std	Y+2, r19	; 0x02
    14c0:	29 83       	std	Y+1, r18	; 0x01
    14c2:	2f 3f       	cpi	r18, 0xFF	; 255
    14c4:	83 e0       	ldi	r24, 0x03	; 3
    14c6:	38 07       	cpc	r19, r24
    14c8:	08 f0       	brcs	.+2      	; 0x14cc <localize+0x66>
    14ca:	ea c2       	rjmp	.+1492   	; 0x1aa0 <localize+0x63a>
    14cc:	a0 90 79 01 	lds	r10, 0x0179
    14d0:	b0 90 7a 01 	lds	r11, 0x017A
    14d4:	f5 01       	movw	r30, r10
    14d6:	ee 0f       	add	r30, r30
    14d8:	ff 1f       	adc	r31, r31
    14da:	eb 5a       	subi	r30, 0xAB	; 171
    14dc:	fe 4f       	sbci	r31, 0xFE	; 254
    14de:	c0 80       	ld	r12, Z
    14e0:	d1 80       	ldd	r13, Z+1	; 0x01
    14e2:	9f ef       	ldi	r25, 0xFF	; 255
    14e4:	c9 16       	cp	r12, r25
    14e6:	93 e0       	ldi	r25, 0x03	; 3
    14e8:	d9 06       	cpc	r13, r25
    14ea:	08 f0       	brcs	.+2      	; 0x14ee <localize+0x88>
    14ec:	d9 c2       	rjmp	.+1458   	; 0x1aa0 <localize+0x63a>
    14ee:	b9 01       	movw	r22, r18
    14f0:	6c 0d       	add	r22, r12
    14f2:	7d 1d       	adc	r23, r13
    14f4:	80 e0       	ldi	r24, 0x00	; 0
    14f6:	90 e0       	ldi	r25, 0x00	; 0
    14f8:	0e 94 5f 14 	call	0x28be	; 0x28be <__floatunsisf>
    14fc:	20 e0       	ldi	r18, 0x00	; 0
    14fe:	30 e0       	ldi	r19, 0x00	; 0
    1500:	40 e0       	ldi	r20, 0x00	; 0
    1502:	5f e3       	ldi	r21, 0x3F	; 63
    1504:	0e 94 e3 15 	call	0x2bc6	; 0x2bc6 <__mulsf3>
    1508:	20 91 08 01 	lds	r18, 0x0108
    150c:	30 91 09 01 	lds	r19, 0x0109
    1510:	40 91 0a 01 	lds	r20, 0x010A
    1514:	50 91 0b 01 	lds	r21, 0x010B
    1518:	0e 94 c7 12 	call	0x258e	; 0x258e <__subsf3>
    151c:	6d 83       	std	Y+5, r22	; 0x05
    151e:	7e 83       	std	Y+6, r23	; 0x06
    1520:	8f 83       	std	Y+7, r24	; 0x07
    1522:	98 87       	std	Y+8, r25	; 0x08
    1524:	f7 01       	movw	r30, r14
    1526:	ee 0f       	add	r30, r30
    1528:	ff 1f       	adc	r31, r31
    152a:	e3 5b       	subi	r30, 0xB3	; 179
    152c:	fe 4f       	sbci	r31, 0xFE	; 254
    152e:	e0 80       	ld	r14, Z
    1530:	f1 80       	ldd	r15, Z+1	; 0x01
    1532:	f5 01       	movw	r30, r10
    1534:	ee 0f       	add	r30, r30
    1536:	ff 1f       	adc	r31, r31
    1538:	e3 5b       	subi	r30, 0xB3	; 179
    153a:	fe 4f       	sbci	r31, 0xFE	; 254
    153c:	a0 80       	ld	r10, Z
    153e:	b1 80       	ldd	r11, Z+1	; 0x01
    1540:	b5 01       	movw	r22, r10
    1542:	6e 0d       	add	r22, r14
    1544:	7f 1d       	adc	r23, r15
    1546:	80 e0       	ldi	r24, 0x00	; 0
    1548:	90 e0       	ldi	r25, 0x00	; 0
    154a:	0e 94 5f 14 	call	0x28be	; 0x28be <__floatunsisf>
    154e:	20 e0       	ldi	r18, 0x00	; 0
    1550:	30 e0       	ldi	r19, 0x00	; 0
    1552:	40 e0       	ldi	r20, 0x00	; 0
    1554:	5f e3       	ldi	r21, 0x3F	; 63
    1556:	0e 94 e3 15 	call	0x2bc6	; 0x2bc6 <__mulsf3>
    155a:	20 91 04 01 	lds	r18, 0x0104
    155e:	30 91 05 01 	lds	r19, 0x0105
    1562:	40 91 06 01 	lds	r20, 0x0106
    1566:	50 91 07 01 	lds	r21, 0x0107
    156a:	0e 94 c7 12 	call	0x258e	; 0x258e <__subsf3>
    156e:	69 87       	std	Y+9, r22	; 0x09
    1570:	7a 87       	std	Y+10, r23	; 0x0a
    1572:	28 2e       	mov	r2, r24
    1574:	39 2e       	mov	r3, r25
    1576:	b7 01       	movw	r22, r14
    1578:	80 e0       	ldi	r24, 0x00	; 0
    157a:	90 e0       	ldi	r25, 0x00	; 0
    157c:	0e 94 5f 14 	call	0x28be	; 0x28be <__floatunsisf>
    1580:	2b 01       	movw	r4, r22
    1582:	3c 01       	movw	r6, r24
    1584:	b5 01       	movw	r22, r10
    1586:	80 e0       	ldi	r24, 0x00	; 0
    1588:	90 e0       	ldi	r25, 0x00	; 0
    158a:	0e 94 5f 14 	call	0x28be	; 0x28be <__floatunsisf>
    158e:	9b 01       	movw	r18, r22
    1590:	ac 01       	movw	r20, r24
    1592:	c3 01       	movw	r24, r6
    1594:	b2 01       	movw	r22, r4
    1596:	0e 94 c7 12 	call	0x258e	; 0x258e <__subsf3>
    159a:	4b 01       	movw	r8, r22
    159c:	5c 01       	movw	r10, r24
    159e:	e9 81       	ldd	r30, Y+1	; 0x01
    15a0:	fa 81       	ldd	r31, Y+2	; 0x02
    15a2:	bf 01       	movw	r22, r30
    15a4:	80 e0       	ldi	r24, 0x00	; 0
    15a6:	90 e0       	ldi	r25, 0x00	; 0
    15a8:	0e 94 5f 14 	call	0x28be	; 0x28be <__floatunsisf>
    15ac:	2b 01       	movw	r4, r22
    15ae:	3c 01       	movw	r6, r24
    15b0:	b6 01       	movw	r22, r12
    15b2:	80 e0       	ldi	r24, 0x00	; 0
    15b4:	90 e0       	ldi	r25, 0x00	; 0
    15b6:	0e 94 5f 14 	call	0x28be	; 0x28be <__floatunsisf>
    15ba:	9b 01       	movw	r18, r22
    15bc:	ac 01       	movw	r20, r24
    15be:	c3 01       	movw	r24, r6
    15c0:	b2 01       	movw	r22, r4
    15c2:	0e 94 c7 12 	call	0x258e	; 0x258e <__subsf3>
    15c6:	a5 01       	movw	r20, r10
    15c8:	94 01       	movw	r18, r8
    15ca:	0e 94 3b 13 	call	0x2676	; 0x2676 <atan2>
    15ce:	4b 01       	movw	r8, r22
    15d0:	5c 01       	movw	r10, r24
    15d2:	7d 81       	ldd	r23, Y+5	; 0x05
    15d4:	6e 81       	ldd	r22, Y+6	; 0x06
    15d6:	9f 81       	ldd	r25, Y+7	; 0x07
    15d8:	88 85       	ldd	r24, Y+8	; 0x08
    15da:	27 2f       	mov	r18, r23
    15dc:	36 2f       	mov	r19, r22
    15de:	49 2f       	mov	r20, r25
    15e0:	58 2f       	mov	r21, r24
    15e2:	b9 85       	ldd	r27, Y+9	; 0x09
    15e4:	aa 85       	ldd	r26, Y+10	; 0x0a
    15e6:	6b 2f       	mov	r22, r27
    15e8:	7a 2f       	mov	r23, r26
    15ea:	82 2d       	mov	r24, r2
    15ec:	93 2d       	mov	r25, r3
    15ee:	0e 94 3b 13 	call	0x2676	; 0x2676 <atan2>
    15f2:	2b 01       	movw	r4, r22
    15f4:	3c 01       	movw	r6, r24
    15f6:	7d 81       	ldd	r23, Y+5	; 0x05
    15f8:	6e 81       	ldd	r22, Y+6	; 0x06
    15fa:	9f 81       	ldd	r25, Y+7	; 0x07
    15fc:	88 85       	ldd	r24, Y+8	; 0x08
    15fe:	27 2f       	mov	r18, r23
    1600:	36 2f       	mov	r19, r22
    1602:	49 2f       	mov	r20, r25
    1604:	58 2f       	mov	r21, r24
    1606:	67 2f       	mov	r22, r23
    1608:	73 2f       	mov	r23, r19
    160a:	89 2f       	mov	r24, r25
    160c:	95 2f       	mov	r25, r21
    160e:	0e 94 e3 15 	call	0x2bc6	; 0x2bc6 <__mulsf3>
    1612:	6b 01       	movw	r12, r22
    1614:	7c 01       	movw	r14, r24
    1616:	79 85       	ldd	r23, Y+9	; 0x09
    1618:	6a 85       	ldd	r22, Y+10	; 0x0a
    161a:	27 2f       	mov	r18, r23
    161c:	36 2f       	mov	r19, r22
    161e:	42 2d       	mov	r20, r2
    1620:	53 2d       	mov	r21, r3
    1622:	67 2f       	mov	r22, r23
    1624:	73 2f       	mov	r23, r19
    1626:	82 2d       	mov	r24, r2
    1628:	93 2d       	mov	r25, r3
    162a:	0e 94 e3 15 	call	0x2bc6	; 0x2bc6 <__mulsf3>
    162e:	9b 01       	movw	r18, r22
    1630:	ac 01       	movw	r20, r24
    1632:	c7 01       	movw	r24, r14
    1634:	b6 01       	movw	r22, r12
    1636:	0e 94 c8 12 	call	0x2590	; 0x2590 <__addsf3>
    163a:	0e 94 50 16 	call	0x2ca0	; 0x2ca0 <sqrt>
    163e:	6b 01       	movw	r12, r22
    1640:	7c 01       	movw	r14, r24
    1642:	20 e0       	ldi	r18, 0x00	; 0
    1644:	30 e0       	ldi	r19, 0x00	; 0
    1646:	a9 01       	movw	r20, r18
    1648:	60 91 5d 01 	lds	r22, 0x015D
    164c:	70 91 5e 01 	lds	r23, 0x015E
    1650:	80 91 5f 01 	lds	r24, 0x015F
    1654:	90 91 60 01 	lds	r25, 0x0160
    1658:	0e 94 8e 13 	call	0x271c	; 0x271c <__cmpsf2>
    165c:	81 11       	cpse	r24, r1
    165e:	08 c0       	rjmp	.+16     	; 0x1670 <localize+0x20a>
    1660:	80 92 5d 01 	sts	0x015D, r8
    1664:	90 92 5e 01 	sts	0x015E, r9
    1668:	a0 92 5f 01 	sts	0x015F, r10
    166c:	b0 92 60 01 	sts	0x0160, r11
    1670:	23 e3       	ldi	r18, 0x33	; 51
    1672:	33 e3       	ldi	r19, 0x33	; 51
    1674:	43 e7       	ldi	r20, 0x73	; 115
    1676:	5f e3       	ldi	r21, 0x3F	; 63
    1678:	60 91 5d 01 	lds	r22, 0x015D
    167c:	70 91 5e 01 	lds	r23, 0x015E
    1680:	80 91 5f 01 	lds	r24, 0x015F
    1684:	90 91 60 01 	lds	r25, 0x0160
    1688:	0e 94 e3 15 	call	0x2bc6	; 0x2bc6 <__mulsf3>
    168c:	4b 01       	movw	r8, r22
    168e:	5c 01       	movw	r10, r24
    1690:	20 ed       	ldi	r18, 0xD0	; 208
    1692:	3c ec       	ldi	r19, 0xCC	; 204
    1694:	4c e4       	ldi	r20, 0x4C	; 76
    1696:	5d e3       	ldi	r21, 0x3D	; 61
    1698:	60 91 69 01 	lds	r22, 0x0169
    169c:	70 91 6a 01 	lds	r23, 0x016A
    16a0:	80 91 6b 01 	lds	r24, 0x016B
    16a4:	90 91 6c 01 	lds	r25, 0x016C
    16a8:	0e 94 e3 15 	call	0x2bc6	; 0x2bc6 <__mulsf3>
    16ac:	9b 01       	movw	r18, r22
    16ae:	ac 01       	movw	r20, r24
    16b0:	c5 01       	movw	r24, r10
    16b2:	b4 01       	movw	r22, r8
    16b4:	0e 94 c8 12 	call	0x2590	; 0x2590 <__addsf3>
    16b8:	20 e0       	ldi	r18, 0x00	; 0
    16ba:	30 e0       	ldi	r19, 0x00	; 0
    16bc:	44 e3       	ldi	r20, 0x34	; 52
    16be:	53 e4       	ldi	r21, 0x43	; 67
    16c0:	0e 94 e3 15 	call	0x2bc6	; 0x2bc6 <__mulsf3>
    16c4:	23 ec       	ldi	r18, 0xC3	; 195
    16c6:	35 ef       	ldi	r19, 0xF5	; 245
    16c8:	48 e4       	ldi	r20, 0x48	; 72
    16ca:	50 e4       	ldi	r21, 0x40	; 64
    16cc:	0e 94 95 13 	call	0x272a	; 0x272a <__divsf3>
    16d0:	86 2e       	mov	r8, r22
    16d2:	97 2e       	mov	r9, r23
    16d4:	a8 2e       	mov	r10, r24
    16d6:	b9 2e       	mov	r11, r25
    16d8:	f8 01       	movw	r30, r16
    16da:	80 86       	std	Z+8, r8	; 0x08
    16dc:	91 86       	std	Z+9, r9	; 0x09
    16de:	a2 86       	std	Z+10, r10	; 0x0a
    16e0:	b3 86       	std	Z+11, r11	; 0x0b
    16e2:	23 ec       	ldi	r18, 0xC3	; 195
    16e4:	35 ef       	ldi	r19, 0xF5	; 245
    16e6:	48 e4       	ldi	r20, 0x48	; 72
    16e8:	50 e4       	ldi	r21, 0x40	; 64
    16ea:	0e 94 e3 15 	call	0x2bc6	; 0x2bc6 <__mulsf3>
    16ee:	20 e0       	ldi	r18, 0x00	; 0
    16f0:	30 e0       	ldi	r19, 0x00	; 0
    16f2:	44 e3       	ldi	r20, 0x34	; 52
    16f4:	53 e4       	ldi	r21, 0x43	; 67
    16f6:	0e 94 95 13 	call	0x272a	; 0x272a <__divsf3>
    16fa:	9b 01       	movw	r18, r22
    16fc:	ac 01       	movw	r20, r24
    16fe:	62 e5       	ldi	r22, 0x52	; 82
    1700:	78 eb       	ldi	r23, 0xB8	; 184
    1702:	86 e9       	ldi	r24, 0x96	; 150
    1704:	90 e4       	ldi	r25, 0x40	; 64
    1706:	0e 94 c7 12 	call	0x258e	; 0x258e <__subsf3>
    170a:	a3 01       	movw	r20, r6
    170c:	92 01       	movw	r18, r4
    170e:	0e 94 c7 12 	call	0x258e	; 0x258e <__subsf3>
    1712:	86 2e       	mov	r8, r22
    1714:	97 2e       	mov	r9, r23
    1716:	a8 2e       	mov	r10, r24
    1718:	b9 2e       	mov	r11, r25
    171a:	0e 94 46 16 	call	0x2c8c	; 0x2c8c <sin>
    171e:	9b 01       	movw	r18, r22
    1720:	ac 01       	movw	r20, r24
    1722:	c7 01       	movw	r24, r14
    1724:	b6 01       	movw	r22, r12
    1726:	90 58       	subi	r25, 0x80	; 128
    1728:	0e 94 e3 15 	call	0x2bc6	; 0x2bc6 <__mulsf3>
    172c:	29 e3       	ldi	r18, 0x39	; 57
    172e:	3e e8       	ldi	r19, 0x8E	; 142
    1730:	43 ea       	ldi	r20, 0xA3	; 163
    1732:	5e e3       	ldi	r21, 0x3E	; 62
    1734:	0e 94 e3 15 	call	0x2bc6	; 0x2bc6 <__mulsf3>
    1738:	69 83       	std	Y+1, r22	; 0x01
    173a:	7b 87       	std	Y+11, r23	; 0x0b
    173c:	8d 87       	std	Y+13, r24	; 0x0d
    173e:	9c 87       	std	Y+12, r25	; 0x0c
    1740:	47 2f       	mov	r20, r23
    1742:	38 2f       	mov	r19, r24
    1744:	29 2f       	mov	r18, r25
    1746:	86 2f       	mov	r24, r22
    1748:	94 2f       	mov	r25, r20
    174a:	a3 2f       	mov	r26, r19
    174c:	b2 2f       	mov	r27, r18
    174e:	80 93 71 01 	sts	0x0171, r24
    1752:	90 93 72 01 	sts	0x0172, r25
    1756:	a0 93 73 01 	sts	0x0173, r26
    175a:	b0 93 74 01 	sts	0x0174, r27
    175e:	68 2d       	mov	r22, r8
    1760:	79 2d       	mov	r23, r9
    1762:	8a 2d       	mov	r24, r10
    1764:	9b 2d       	mov	r25, r11
    1766:	0e 94 92 13 	call	0x2724	; 0x2724 <cos>
    176a:	a7 01       	movw	r20, r14
    176c:	96 01       	movw	r18, r12
    176e:	0e 94 e3 15 	call	0x2bc6	; 0x2bc6 <__mulsf3>
    1772:	29 e8       	ldi	r18, 0x89	; 137
    1774:	3a ed       	ldi	r19, 0xDA	; 218
    1776:	45 e9       	ldi	r20, 0x95	; 149
    1778:	5e e3       	ldi	r21, 0x3E	; 62
    177a:	0e 94 e3 15 	call	0x2bc6	; 0x2bc6 <__mulsf3>
    177e:	86 2e       	mov	r8, r22
    1780:	97 2e       	mov	r9, r23
    1782:	a8 2e       	mov	r10, r24
    1784:	b9 2e       	mov	r11, r25
    1786:	86 2f       	mov	r24, r22
    1788:	99 2d       	mov	r25, r9
    178a:	aa 2d       	mov	r26, r10
    178c:	bb 2d       	mov	r27, r11
    178e:	80 93 6d 01 	sts	0x016D, r24
    1792:	90 93 6e 01 	sts	0x016E, r25
    1796:	a0 93 6f 01 	sts	0x016F, r26
    179a:	b0 93 70 01 	sts	0x0170, r27
    179e:	20 e0       	ldi	r18, 0x00	; 0
    17a0:	30 e0       	ldi	r19, 0x00	; 0
    17a2:	a9 01       	movw	r20, r18
    17a4:	60 91 65 01 	lds	r22, 0x0165
    17a8:	70 91 66 01 	lds	r23, 0x0166
    17ac:	80 91 67 01 	lds	r24, 0x0167
    17b0:	90 91 68 01 	lds	r25, 0x0168
    17b4:	0e 94 8e 13 	call	0x271c	; 0x271c <__cmpsf2>
    17b8:	81 11       	cpse	r24, r1
    17ba:	2b c0       	rjmp	.+86     	; 0x1812 <localize+0x3ac>
    17bc:	20 e0       	ldi	r18, 0x00	; 0
    17be:	30 e0       	ldi	r19, 0x00	; 0
    17c0:	a9 01       	movw	r20, r18
    17c2:	60 91 61 01 	lds	r22, 0x0161
    17c6:	70 91 62 01 	lds	r23, 0x0162
    17ca:	80 91 63 01 	lds	r24, 0x0163
    17ce:	90 91 64 01 	lds	r25, 0x0164
    17d2:	0e 94 8e 13 	call	0x271c	; 0x271c <__cmpsf2>
    17d6:	81 11       	cpse	r24, r1
    17d8:	1c c0       	rjmp	.+56     	; 0x1812 <localize+0x3ac>
    17da:	59 81       	ldd	r21, Y+1	; 0x01
    17dc:	4b 85       	ldd	r20, Y+11	; 0x0b
    17de:	3d 85       	ldd	r19, Y+13	; 0x0d
    17e0:	2c 85       	ldd	r18, Y+12	; 0x0c
    17e2:	85 2f       	mov	r24, r21
    17e4:	94 2f       	mov	r25, r20
    17e6:	a3 2f       	mov	r26, r19
    17e8:	b2 2f       	mov	r27, r18
    17ea:	80 93 65 01 	sts	0x0165, r24
    17ee:	90 93 66 01 	sts	0x0166, r25
    17f2:	a0 93 67 01 	sts	0x0167, r26
    17f6:	b0 93 68 01 	sts	0x0168, r27
    17fa:	88 2d       	mov	r24, r8
    17fc:	99 2d       	mov	r25, r9
    17fe:	aa 2d       	mov	r26, r10
    1800:	bb 2d       	mov	r27, r11
    1802:	80 93 61 01 	sts	0x0161, r24
    1806:	90 93 62 01 	sts	0x0162, r25
    180a:	a0 93 63 01 	sts	0x0163, r26
    180e:	b0 93 64 01 	sts	0x0164, r27
    1812:	23 e3       	ldi	r18, 0x33	; 51
    1814:	33 e3       	ldi	r19, 0x33	; 51
    1816:	43 e7       	ldi	r20, 0x73	; 115
    1818:	5f e3       	ldi	r21, 0x3F	; 63
    181a:	60 91 65 01 	lds	r22, 0x0165
    181e:	70 91 66 01 	lds	r23, 0x0166
    1822:	80 91 67 01 	lds	r24, 0x0167
    1826:	90 91 68 01 	lds	r25, 0x0168
    182a:	0e 94 e3 15 	call	0x2bc6	; 0x2bc6 <__mulsf3>
    182e:	4b 01       	movw	r8, r22
    1830:	5c 01       	movw	r10, r24
    1832:	20 ed       	ldi	r18, 0xD0	; 208
    1834:	3c ec       	ldi	r19, 0xCC	; 204
    1836:	4c e4       	ldi	r20, 0x4C	; 76
    1838:	5d e3       	ldi	r21, 0x3D	; 61
    183a:	b9 81       	ldd	r27, Y+1	; 0x01
    183c:	ab 85       	ldd	r26, Y+11	; 0x0b
    183e:	fd 85       	ldd	r31, Y+13	; 0x0d
    1840:	ec 85       	ldd	r30, Y+12	; 0x0c
    1842:	6b 2f       	mov	r22, r27
    1844:	7a 2f       	mov	r23, r26
    1846:	8f 2f       	mov	r24, r31
    1848:	9e 2f       	mov	r25, r30
    184a:	0e 94 e3 15 	call	0x2bc6	; 0x2bc6 <__mulsf3>
    184e:	9b 01       	movw	r18, r22
    1850:	ac 01       	movw	r20, r24
    1852:	c5 01       	movw	r24, r10
    1854:	b4 01       	movw	r22, r8
    1856:	0e 94 c8 12 	call	0x2590	; 0x2590 <__addsf3>
    185a:	f8 01       	movw	r30, r16
    185c:	60 83       	st	Z, r22
    185e:	71 83       	std	Z+1, r23	; 0x01
    1860:	82 83       	std	Z+2, r24	; 0x02
    1862:	93 83       	std	Z+3, r25	; 0x03
    1864:	80 90 6d 01 	lds	r8, 0x016D
    1868:	90 90 6e 01 	lds	r9, 0x016E
    186c:	a0 90 6f 01 	lds	r10, 0x016F
    1870:	b0 90 70 01 	lds	r11, 0x0170
    1874:	23 e3       	ldi	r18, 0x33	; 51
    1876:	33 e3       	ldi	r19, 0x33	; 51
    1878:	43 e7       	ldi	r20, 0x73	; 115
    187a:	5f e3       	ldi	r21, 0x3F	; 63
    187c:	60 91 61 01 	lds	r22, 0x0161
    1880:	70 91 62 01 	lds	r23, 0x0162
    1884:	80 91 63 01 	lds	r24, 0x0163
    1888:	90 91 64 01 	lds	r25, 0x0164
    188c:	0e 94 e3 15 	call	0x2bc6	; 0x2bc6 <__mulsf3>
    1890:	69 83       	std	Y+1, r22	; 0x01
    1892:	7a 83       	std	Y+2, r23	; 0x02
    1894:	8b 83       	std	Y+3, r24	; 0x03
    1896:	9c 83       	std	Y+4, r25	; 0x04
    1898:	20 ed       	ldi	r18, 0xD0	; 208
    189a:	3c ec       	ldi	r19, 0xCC	; 204
    189c:	4c e4       	ldi	r20, 0x4C	; 76
    189e:	5d e3       	ldi	r21, 0x3D	; 61
    18a0:	c5 01       	movw	r24, r10
    18a2:	b4 01       	movw	r22, r8
    18a4:	0e 94 e3 15 	call	0x2bc6	; 0x2bc6 <__mulsf3>
    18a8:	9b 01       	movw	r18, r22
    18aa:	ac 01       	movw	r20, r24
    18ac:	69 81       	ldd	r22, Y+1	; 0x01
    18ae:	7a 81       	ldd	r23, Y+2	; 0x02
    18b0:	8b 81       	ldd	r24, Y+3	; 0x03
    18b2:	9c 81       	ldd	r25, Y+4	; 0x04
    18b4:	0e 94 c8 12 	call	0x2590	; 0x2590 <__addsf3>
    18b8:	f8 01       	movw	r30, r16
    18ba:	64 83       	std	Z+4, r22	; 0x04
    18bc:	75 83       	std	Z+5, r23	; 0x05
    18be:	86 83       	std	Z+6, r24	; 0x06
    18c0:	97 83       	std	Z+7, r25	; 0x07
    18c2:	80 91 7b 01 	lds	r24, 0x017B
    18c6:	90 91 7c 01 	lds	r25, 0x017C
    18ca:	9c 01       	movw	r18, r24
    18cc:	22 0f       	add	r18, r18
    18ce:	33 1f       	adc	r19, r19
    18d0:	3a 83       	std	Y+2, r19	; 0x02
    18d2:	29 83       	std	Y+1, r18	; 0x01
    18d4:	f9 01       	movw	r30, r18
    18d6:	eb 5a       	subi	r30, 0xAB	; 171
    18d8:	fe 4f       	sbci	r31, 0xFE	; 254
    18da:	60 81       	ld	r22, Z
    18dc:	71 81       	ldd	r23, Z+1	; 0x01
    18de:	80 e0       	ldi	r24, 0x00	; 0
    18e0:	90 e0       	ldi	r25, 0x00	; 0
    18e2:	0e 94 5f 14 	call	0x28be	; 0x28be <__floatunsisf>
    18e6:	f8 01       	movw	r30, r16
    18e8:	64 87       	std	Z+12, r22	; 0x0c
    18ea:	75 87       	std	Z+13, r23	; 0x0d
    18ec:	86 87       	std	Z+14, r24	; 0x0e
    18ee:	97 87       	std	Z+15, r25	; 0x0f
    18f0:	e9 81       	ldd	r30, Y+1	; 0x01
    18f2:	fa 81       	ldd	r31, Y+2	; 0x02
    18f4:	e3 5b       	subi	r30, 0xB3	; 179
    18f6:	fe 4f       	sbci	r31, 0xFE	; 254
    18f8:	60 81       	ld	r22, Z
    18fa:	71 81       	ldd	r23, Z+1	; 0x01
    18fc:	80 e0       	ldi	r24, 0x00	; 0
    18fe:	90 e0       	ldi	r25, 0x00	; 0
    1900:	0e 94 5f 14 	call	0x28be	; 0x28be <__floatunsisf>
    1904:	f8 01       	movw	r30, r16
    1906:	60 8b       	std	Z+16, r22	; 0x10
    1908:	71 8b       	std	Z+17, r23	; 0x11
    190a:	82 8b       	std	Z+18, r24	; 0x12
    190c:	93 8b       	std	Z+19, r25	; 0x13
    190e:	80 91 79 01 	lds	r24, 0x0179
    1912:	90 91 7a 01 	lds	r25, 0x017A
    1916:	9c 01       	movw	r18, r24
    1918:	22 0f       	add	r18, r18
    191a:	33 1f       	adc	r19, r19
    191c:	3a 83       	std	Y+2, r19	; 0x02
    191e:	29 83       	std	Y+1, r18	; 0x01
    1920:	f9 01       	movw	r30, r18
    1922:	eb 5a       	subi	r30, 0xAB	; 171
    1924:	fe 4f       	sbci	r31, 0xFE	; 254
    1926:	60 81       	ld	r22, Z
    1928:	71 81       	ldd	r23, Z+1	; 0x01
    192a:	80 e0       	ldi	r24, 0x00	; 0
    192c:	90 e0       	ldi	r25, 0x00	; 0
    192e:	0e 94 5f 14 	call	0x28be	; 0x28be <__floatunsisf>
    1932:	f8 01       	movw	r30, r16
    1934:	64 8b       	std	Z+20, r22	; 0x14
    1936:	75 8b       	std	Z+21, r23	; 0x15
    1938:	86 8b       	std	Z+22, r24	; 0x16
    193a:	97 8b       	std	Z+23, r25	; 0x17
    193c:	e9 81       	ldd	r30, Y+1	; 0x01
    193e:	fa 81       	ldd	r31, Y+2	; 0x02
    1940:	e3 5b       	subi	r30, 0xB3	; 179
    1942:	fe 4f       	sbci	r31, 0xFE	; 254
    1944:	60 81       	ld	r22, Z
    1946:	71 81       	ldd	r23, Z+1	; 0x01
    1948:	80 e0       	ldi	r24, 0x00	; 0
    194a:	90 e0       	ldi	r25, 0x00	; 0
    194c:	0e 94 5f 14 	call	0x28be	; 0x28be <__floatunsisf>
    1950:	f8 01       	movw	r30, r16
    1952:	60 8f       	std	Z+24, r22	; 0x18
    1954:	71 8f       	std	Z+25, r23	; 0x19
    1956:	82 8f       	std	Z+26, r24	; 0x1a
    1958:	93 8f       	std	Z+27, r25	; 0x1b
    195a:	80 91 75 01 	lds	r24, 0x0175
    195e:	90 91 76 01 	lds	r25, 0x0176
    1962:	9c 01       	movw	r18, r24
    1964:	22 0f       	add	r18, r18
    1966:	33 1f       	adc	r19, r19
    1968:	3a 83       	std	Y+2, r19	; 0x02
    196a:	29 83       	std	Y+1, r18	; 0x01
    196c:	f9 01       	movw	r30, r18
    196e:	eb 5a       	subi	r30, 0xAB	; 171
    1970:	fe 4f       	sbci	r31, 0xFE	; 254
    1972:	60 81       	ld	r22, Z
    1974:	71 81       	ldd	r23, Z+1	; 0x01
    1976:	80 e0       	ldi	r24, 0x00	; 0
    1978:	90 e0       	ldi	r25, 0x00	; 0
    197a:	0e 94 5f 14 	call	0x28be	; 0x28be <__floatunsisf>
    197e:	f8 01       	movw	r30, r16
    1980:	64 8f       	std	Z+28, r22	; 0x1c
    1982:	75 8f       	std	Z+29, r23	; 0x1d
    1984:	86 8f       	std	Z+30, r24	; 0x1e
    1986:	97 8f       	std	Z+31, r25	; 0x1f
    1988:	e9 81       	ldd	r30, Y+1	; 0x01
    198a:	fa 81       	ldd	r31, Y+2	; 0x02
    198c:	e3 5b       	subi	r30, 0xB3	; 179
    198e:	fe 4f       	sbci	r31, 0xFE	; 254
    1990:	60 81       	ld	r22, Z
    1992:	71 81       	ldd	r23, Z+1	; 0x01
    1994:	80 e0       	ldi	r24, 0x00	; 0
    1996:	90 e0       	ldi	r25, 0x00	; 0
    1998:	0e 94 5f 14 	call	0x28be	; 0x28be <__floatunsisf>
    199c:	f8 01       	movw	r30, r16
    199e:	60 a3       	std	Z+32, r22	; 0x20
    19a0:	71 a3       	std	Z+33, r23	; 0x21
    19a2:	82 a3       	std	Z+34, r24	; 0x22
    19a4:	93 a3       	std	Z+35, r25	; 0x23
    19a6:	80 91 77 01 	lds	r24, 0x0177
    19aa:	90 91 78 01 	lds	r25, 0x0178
    19ae:	9c 01       	movw	r18, r24
    19b0:	22 0f       	add	r18, r18
    19b2:	33 1f       	adc	r19, r19
    19b4:	3a 83       	std	Y+2, r19	; 0x02
    19b6:	29 83       	std	Y+1, r18	; 0x01
    19b8:	f9 01       	movw	r30, r18
    19ba:	eb 5a       	subi	r30, 0xAB	; 171
    19bc:	fe 4f       	sbci	r31, 0xFE	; 254
    19be:	60 81       	ld	r22, Z
    19c0:	71 81       	ldd	r23, Z+1	; 0x01
    19c2:	80 e0       	ldi	r24, 0x00	; 0
    19c4:	90 e0       	ldi	r25, 0x00	; 0
    19c6:	0e 94 5f 14 	call	0x28be	; 0x28be <__floatunsisf>
    19ca:	f8 01       	movw	r30, r16
    19cc:	64 a3       	std	Z+36, r22	; 0x24
    19ce:	75 a3       	std	Z+37, r23	; 0x25
    19d0:	86 a3       	std	Z+38, r24	; 0x26
    19d2:	97 a3       	std	Z+39, r25	; 0x27
    19d4:	e9 81       	ldd	r30, Y+1	; 0x01
    19d6:	fa 81       	ldd	r31, Y+2	; 0x02
    19d8:	e3 5b       	subi	r30, 0xB3	; 179
    19da:	fe 4f       	sbci	r31, 0xFE	; 254
    19dc:	60 81       	ld	r22, Z
    19de:	71 81       	ldd	r23, Z+1	; 0x01
    19e0:	80 e0       	ldi	r24, 0x00	; 0
    19e2:	90 e0       	ldi	r25, 0x00	; 0
    19e4:	0e 94 5f 14 	call	0x28be	; 0x28be <__floatunsisf>
    19e8:	f8 01       	movw	r30, r16
    19ea:	60 a7       	std	Z+40, r22	; 0x28
    19ec:	71 a7       	std	Z+41, r23	; 0x29
    19ee:	82 a7       	std	Z+42, r24	; 0x2a
    19f0:	93 a7       	std	Z+43, r25	; 0x2b
    19f2:	20 e0       	ldi	r18, 0x00	; 0
    19f4:	30 e0       	ldi	r19, 0x00	; 0
    19f6:	44 e3       	ldi	r20, 0x34	; 52
    19f8:	53 e4       	ldi	r21, 0x43	; 67
    19fa:	c3 01       	movw	r24, r6
    19fc:	b2 01       	movw	r22, r4
    19fe:	0e 94 e3 15 	call	0x2bc6	; 0x2bc6 <__mulsf3>
    1a02:	23 ec       	ldi	r18, 0xC3	; 195
    1a04:	35 ef       	ldi	r19, 0xF5	; 245
    1a06:	48 e4       	ldi	r20, 0x48	; 72
    1a08:	50 e4       	ldi	r21, 0x40	; 64
    1a0a:	0e 94 95 13 	call	0x272a	; 0x272a <__divsf3>
    1a0e:	f8 01       	movw	r30, r16
    1a10:	64 a7       	std	Z+44, r22	; 0x2c
    1a12:	75 a7       	std	Z+45, r23	; 0x2d
    1a14:	86 a7       	std	Z+46, r24	; 0x2e
    1a16:	97 a7       	std	Z+47, r25	; 0x2f
    1a18:	5d 81       	ldd	r21, Y+5	; 0x05
    1a1a:	4e 81       	ldd	r20, Y+6	; 0x06
    1a1c:	3f 81       	ldd	r19, Y+7	; 0x07
    1a1e:	28 85       	ldd	r18, Y+8	; 0x08
    1a20:	85 2f       	mov	r24, r21
    1a22:	94 2f       	mov	r25, r20
    1a24:	a3 2f       	mov	r26, r19
    1a26:	b2 2f       	mov	r27, r18
    1a28:	80 ab       	std	Z+48, r24	; 0x30
    1a2a:	91 ab       	std	Z+49, r25	; 0x31
    1a2c:	a2 ab       	std	Z+50, r26	; 0x32
    1a2e:	b3 ab       	std	Z+51, r27	; 0x33
    1a30:	59 85       	ldd	r21, Y+9	; 0x09
    1a32:	4a 85       	ldd	r20, Y+10	; 0x0a
    1a34:	85 2f       	mov	r24, r21
    1a36:	94 2f       	mov	r25, r20
    1a38:	a2 2d       	mov	r26, r2
    1a3a:	b3 2d       	mov	r27, r3
    1a3c:	84 ab       	std	Z+52, r24	; 0x34
    1a3e:	95 ab       	std	Z+53, r25	; 0x35
    1a40:	a6 ab       	std	Z+54, r26	; 0x36
    1a42:	b7 ab       	std	Z+55, r27	; 0x37
    1a44:	c0 ae       	std	Z+56, r12	; 0x38
    1a46:	d1 ae       	std	Z+57, r13	; 0x39
    1a48:	e2 ae       	std	Z+58, r14	; 0x3a
    1a4a:	f3 ae       	std	Z+59, r15	; 0x3b
    1a4c:	80 91 71 01 	lds	r24, 0x0171
    1a50:	90 91 72 01 	lds	r25, 0x0172
    1a54:	a0 91 73 01 	lds	r26, 0x0173
    1a58:	b0 91 74 01 	lds	r27, 0x0174
    1a5c:	80 93 65 01 	sts	0x0165, r24
    1a60:	90 93 66 01 	sts	0x0166, r25
    1a64:	a0 93 67 01 	sts	0x0167, r26
    1a68:	b0 93 68 01 	sts	0x0168, r27
    1a6c:	80 92 61 01 	sts	0x0161, r8
    1a70:	90 92 62 01 	sts	0x0162, r9
    1a74:	a0 92 63 01 	sts	0x0163, r10
    1a78:	b0 92 64 01 	sts	0x0164, r11
    1a7c:	80 91 69 01 	lds	r24, 0x0169
    1a80:	90 91 6a 01 	lds	r25, 0x016A
    1a84:	a0 91 6b 01 	lds	r26, 0x016B
    1a88:	b0 91 6c 01 	lds	r27, 0x016C
    1a8c:	80 93 5d 01 	sts	0x015D, r24
    1a90:	90 93 5e 01 	sts	0x015E, r25
    1a94:	a0 93 5f 01 	sts	0x015F, r26
    1a98:	b0 93 60 01 	sts	0x0160, r27
    1a9c:	81 e0       	ldi	r24, 0x01	; 1
    1a9e:	00 c0       	rjmp	.+0      	; 0x1aa0 <localize+0x63a>
    1aa0:	2d 96       	adiw	r28, 0x0d	; 13
    1aa2:	0f b6       	in	r0, 0x3f	; 63
    1aa4:	f8 94       	cli
    1aa6:	de bf       	out	0x3e, r29	; 62
    1aa8:	0f be       	out	0x3f, r0	; 63
    1aaa:	cd bf       	out	0x3d, r28	; 61
    1aac:	df 91       	pop	r29
    1aae:	cf 91       	pop	r28
    1ab0:	1f 91       	pop	r17
    1ab2:	0f 91       	pop	r16
    1ab4:	ff 90       	pop	r15
    1ab6:	ef 90       	pop	r14
    1ab8:	df 90       	pop	r13
    1aba:	cf 90       	pop	r12
    1abc:	bf 90       	pop	r11
    1abe:	af 90       	pop	r10
    1ac0:	9f 90       	pop	r9
    1ac2:	8f 90       	pop	r8
    1ac4:	7f 90       	pop	r7
    1ac6:	6f 90       	pop	r6
    1ac8:	5f 90       	pop	r5
    1aca:	4f 90       	pop	r4
    1acc:	3f 90       	pop	r3
    1ace:	2f 90       	pop	r2
    1ad0:	08 95       	ret

00001ad2 <m_rf_open>:
    1ad2:	1f 93       	push	r17
    1ad4:	cf 93       	push	r28
    1ad6:	df 93       	push	r29
    1ad8:	18 2f       	mov	r17, r24
    1ada:	d6 2f       	mov	r29, r22
    1adc:	c4 2f       	mov	r28, r20
    1ade:	0e 94 5f 07 	call	0xebe	; 0xebe <m_bus_init>
    1ae2:	94 ea       	ldi	r25, 0xA4	; 164
    1ae4:	90 93 bc 00 	sts	0x00BC, r25
    1ae8:	ec eb       	ldi	r30, 0xBC	; 188
    1aea:	f0 e0       	ldi	r31, 0x00	; 0
    1aec:	90 81       	ld	r25, Z
    1aee:	99 23       	and	r25, r25
    1af0:	ec f7       	brge	.-6      	; 0x1aec <m_rf_open+0x1a>
    1af2:	90 e5       	ldi	r25, 0x50	; 80
    1af4:	90 93 bb 00 	sts	0x00BB, r25
    1af8:	94 e8       	ldi	r25, 0x84	; 132
    1afa:	90 93 bc 00 	sts	0x00BC, r25
    1afe:	ec eb       	ldi	r30, 0xBC	; 188
    1b00:	f0 e0       	ldi	r31, 0x00	; 0
    1b02:	90 81       	ld	r25, Z
    1b04:	99 23       	and	r25, r25
    1b06:	ec f7       	brge	.-6      	; 0x1b02 <m_rf_open+0x30>
    1b08:	90 91 b9 00 	lds	r25, 0x00B9
    1b0c:	98 7f       	andi	r25, 0xF8	; 248
    1b0e:	90 32       	cpi	r25, 0x20	; 32
    1b10:	29 f4       	brne	.+10     	; 0x1b1c <m_rf_open+0x4a>
    1b12:	84 e9       	ldi	r24, 0x94	; 148
    1b14:	80 93 bc 00 	sts	0x00BC, r24
    1b18:	80 e0       	ldi	r24, 0x00	; 0
    1b1a:	2d c0       	rjmp	.+90     	; 0x1b76 <m_rf_open+0xa4>
    1b1c:	81 e0       	ldi	r24, 0x01	; 1
    1b1e:	80 93 bb 00 	sts	0x00BB, r24
    1b22:	84 e8       	ldi	r24, 0x84	; 132
    1b24:	80 93 bc 00 	sts	0x00BC, r24
    1b28:	ec eb       	ldi	r30, 0xBC	; 188
    1b2a:	f0 e0       	ldi	r31, 0x00	; 0
    1b2c:	90 81       	ld	r25, Z
    1b2e:	99 23       	and	r25, r25
    1b30:	ec f7       	brge	.-6      	; 0x1b2c <m_rf_open+0x5a>
    1b32:	10 93 bb 00 	sts	0x00BB, r17
    1b36:	84 e8       	ldi	r24, 0x84	; 132
    1b38:	80 93 bc 00 	sts	0x00BC, r24
    1b3c:	ec eb       	ldi	r30, 0xBC	; 188
    1b3e:	f0 e0       	ldi	r31, 0x00	; 0
    1b40:	80 81       	ld	r24, Z
    1b42:	88 23       	and	r24, r24
    1b44:	ec f7       	brge	.-6      	; 0x1b40 <m_rf_open+0x6e>
    1b46:	d0 93 bb 00 	sts	0x00BB, r29
    1b4a:	84 e8       	ldi	r24, 0x84	; 132
    1b4c:	80 93 bc 00 	sts	0x00BC, r24
    1b50:	ec eb       	ldi	r30, 0xBC	; 188
    1b52:	f0 e0       	ldi	r31, 0x00	; 0
    1b54:	80 81       	ld	r24, Z
    1b56:	88 23       	and	r24, r24
    1b58:	ec f7       	brge	.-6      	; 0x1b54 <m_rf_open+0x82>
    1b5a:	c0 93 bb 00 	sts	0x00BB, r28
    1b5e:	84 e8       	ldi	r24, 0x84	; 132
    1b60:	80 93 bc 00 	sts	0x00BC, r24
    1b64:	ec eb       	ldi	r30, 0xBC	; 188
    1b66:	f0 e0       	ldi	r31, 0x00	; 0
    1b68:	80 81       	ld	r24, Z
    1b6a:	88 23       	and	r24, r24
    1b6c:	ec f7       	brge	.-6      	; 0x1b68 <m_rf_open+0x96>
    1b6e:	84 e9       	ldi	r24, 0x94	; 148
    1b70:	80 93 bc 00 	sts	0x00BC, r24
    1b74:	81 e0       	ldi	r24, 0x01	; 1
    1b76:	df 91       	pop	r29
    1b78:	cf 91       	pop	r28
    1b7a:	1f 91       	pop	r17
    1b7c:	08 95       	ret

00001b7e <m_rf_read>:
    1b7e:	cf 93       	push	r28
    1b80:	df 93       	push	r29
    1b82:	24 ea       	ldi	r18, 0xA4	; 164
    1b84:	20 93 bc 00 	sts	0x00BC, r18
    1b88:	ec eb       	ldi	r30, 0xBC	; 188
    1b8a:	f0 e0       	ldi	r31, 0x00	; 0
    1b8c:	20 81       	ld	r18, Z
    1b8e:	22 23       	and	r18, r18
    1b90:	ec f7       	brge	.-6      	; 0x1b8c <m_rf_read+0xe>
    1b92:	21 e5       	ldi	r18, 0x51	; 81
    1b94:	20 93 bb 00 	sts	0x00BB, r18
    1b98:	24 e8       	ldi	r18, 0x84	; 132
    1b9a:	20 93 bc 00 	sts	0x00BC, r18
    1b9e:	ec eb       	ldi	r30, 0xBC	; 188
    1ba0:	f0 e0       	ldi	r31, 0x00	; 0
    1ba2:	20 81       	ld	r18, Z
    1ba4:	22 23       	and	r18, r18
    1ba6:	ec f7       	brge	.-6      	; 0x1ba2 <m_rf_read+0x24>
    1ba8:	20 91 b9 00 	lds	r18, 0x00B9
    1bac:	28 7f       	andi	r18, 0xF8	; 248
    1bae:	28 34       	cpi	r18, 0x48	; 72
    1bb0:	29 f4       	brne	.+10     	; 0x1bbc <m_rf_read+0x3e>
    1bb2:	84 e9       	ldi	r24, 0x94	; 148
    1bb4:	80 93 bc 00 	sts	0x00BC, r24
    1bb8:	80 e0       	ldi	r24, 0x00	; 0
    1bba:	3f c0       	rjmp	.+126    	; 0x1c3a <m_rf_read+0xbc>
    1bbc:	24 ec       	ldi	r18, 0xC4	; 196
    1bbe:	20 93 bc 00 	sts	0x00BC, r18
    1bc2:	ec eb       	ldi	r30, 0xBC	; 188
    1bc4:	f0 e0       	ldi	r31, 0x00	; 0
    1bc6:	20 81       	ld	r18, Z
    1bc8:	22 23       	and	r18, r18
    1bca:	ec f7       	brge	.-6      	; 0x1bc6 <m_rf_read+0x48>
    1bcc:	40 91 bb 00 	lds	r20, 0x00BB
    1bd0:	46 13       	cpse	r20, r22
    1bd2:	09 c0       	rjmp	.+18     	; 0x1be6 <m_rf_read+0x68>
    1bd4:	50 e0       	ldi	r21, 0x00	; 0
    1bd6:	41 50       	subi	r20, 0x01	; 1
    1bd8:	51 09       	sbc	r21, r1
    1bda:	14 16       	cp	r1, r20
    1bdc:	15 06       	cpc	r1, r21
    1bde:	44 f0       	brlt	.+16     	; 0x1bf0 <m_rf_read+0x72>
    1be0:	40 e0       	ldi	r20, 0x00	; 0
    1be2:	50 e0       	ldi	r21, 0x00	; 0
    1be4:	18 c0       	rjmp	.+48     	; 0x1c16 <m_rf_read+0x98>
    1be6:	84 e9       	ldi	r24, 0x94	; 148
    1be8:	80 93 bc 00 	sts	0x00BC, r24
    1bec:	80 e0       	ldi	r24, 0x00	; 0
    1bee:	25 c0       	rjmp	.+74     	; 0x1c3a <m_rf_read+0xbc>
    1bf0:	dc 01       	movw	r26, r24
    1bf2:	20 e0       	ldi	r18, 0x00	; 0
    1bf4:	30 e0       	ldi	r19, 0x00	; 0
    1bf6:	ec eb       	ldi	r30, 0xBC	; 188
    1bf8:	f0 e0       	ldi	r31, 0x00	; 0
    1bfa:	74 ec       	ldi	r23, 0xC4	; 196
    1bfc:	cb eb       	ldi	r28, 0xBB	; 187
    1bfe:	d0 e0       	ldi	r29, 0x00	; 0
    1c00:	70 83       	st	Z, r23
    1c02:	60 81       	ld	r22, Z
    1c04:	66 23       	and	r22, r22
    1c06:	ec f7       	brge	.-6      	; 0x1c02 <m_rf_read+0x84>
    1c08:	68 81       	ld	r22, Y
    1c0a:	6d 93       	st	X+, r22
    1c0c:	2f 5f       	subi	r18, 0xFF	; 255
    1c0e:	3f 4f       	sbci	r19, 0xFF	; 255
    1c10:	24 17       	cp	r18, r20
    1c12:	35 07       	cpc	r19, r21
    1c14:	ac f3       	brlt	.-22     	; 0x1c00 <m_rf_read+0x82>
    1c16:	24 e8       	ldi	r18, 0x84	; 132
    1c18:	20 93 bc 00 	sts	0x00BC, r18
    1c1c:	ec eb       	ldi	r30, 0xBC	; 188
    1c1e:	f0 e0       	ldi	r31, 0x00	; 0
    1c20:	20 81       	ld	r18, Z
    1c22:	22 23       	and	r18, r18
    1c24:	ec f7       	brge	.-6      	; 0x1c20 <m_rf_read+0xa2>
    1c26:	20 91 bb 00 	lds	r18, 0x00BB
    1c2a:	fc 01       	movw	r30, r24
    1c2c:	e4 0f       	add	r30, r20
    1c2e:	f5 1f       	adc	r31, r21
    1c30:	20 83       	st	Z, r18
    1c32:	84 e9       	ldi	r24, 0x94	; 148
    1c34:	80 93 bc 00 	sts	0x00BC, r24
    1c38:	81 e0       	ldi	r24, 0x01	; 1
    1c3a:	df 91       	pop	r29
    1c3c:	cf 91       	pop	r28
    1c3e:	08 95       	ret

00001c40 <m_usb_init>:
    1c40:	81 e0       	ldi	r24, 0x01	; 1
    1c42:	80 93 d7 00 	sts	0x00D7, r24
    1c46:	80 ea       	ldi	r24, 0xA0	; 160
    1c48:	80 93 d8 00 	sts	0x00D8, r24
    1c4c:	82 e1       	ldi	r24, 0x12	; 18
    1c4e:	89 bd       	out	0x29, r24	; 41
    1c50:	09 b4       	in	r0, 0x29	; 41
    1c52:	00 fe       	sbrs	r0, 0
    1c54:	fd cf       	rjmp	.-6      	; 0x1c50 <m_usb_init+0x10>
    1c56:	80 e9       	ldi	r24, 0x90	; 144
    1c58:	80 93 d8 00 	sts	0x00D8, r24
    1c5c:	10 92 e0 00 	sts	0x00E0, r1
    1c60:	10 92 96 01 	sts	0x0196, r1
    1c64:	10 92 97 01 	sts	0x0197, r1
    1c68:	8c e0       	ldi	r24, 0x0C	; 12
    1c6a:	80 93 e2 00 	sts	0x00E2, r24
    1c6e:	78 94       	sei
    1c70:	08 95       	ret

00001c72 <m_usb_isconnected>:
    1c72:	80 91 96 01 	lds	r24, 0x0196
    1c76:	08 95       	ret

00001c78 <m_usb_rx_char>:
    1c78:	9f b7       	in	r25, 0x3f	; 63
    1c7a:	f8 94       	cli
    1c7c:	80 91 96 01 	lds	r24, 0x0196
    1c80:	81 11       	cpse	r24, r1
    1c82:	03 c0       	rjmp	.+6      	; 0x1c8a <m_usb_rx_char+0x12>
    1c84:	9f bf       	out	0x3f, r25	; 63
    1c86:	8f ef       	ldi	r24, 0xFF	; 255
    1c88:	08 95       	ret
    1c8a:	83 e0       	ldi	r24, 0x03	; 3
    1c8c:	80 93 e9 00 	sts	0x00E9, r24
    1c90:	80 91 e8 00 	lds	r24, 0x00E8
    1c94:	85 fd       	sbrc	r24, 5
    1c96:	03 c0       	rjmp	.+6      	; 0x1c9e <m_usb_rx_char+0x26>
    1c98:	9f bf       	out	0x3f, r25	; 63
    1c9a:	8f ef       	ldi	r24, 0xFF	; 255
    1c9c:	08 95       	ret
    1c9e:	80 91 f1 00 	lds	r24, 0x00F1
    1ca2:	20 91 e8 00 	lds	r18, 0x00E8
    1ca6:	25 fd       	sbrc	r18, 5
    1ca8:	03 c0       	rjmp	.+6      	; 0x1cb0 <m_usb_rx_char+0x38>
    1caa:	2b e6       	ldi	r18, 0x6B	; 107
    1cac:	20 93 e8 00 	sts	0x00E8, r18
    1cb0:	9f bf       	out	0x3f, r25	; 63
    1cb2:	08 95       	ret

00001cb4 <m_usb_rx_available>:
    1cb4:	9f b7       	in	r25, 0x3f	; 63
    1cb6:	f8 94       	cli
    1cb8:	80 91 96 01 	lds	r24, 0x0196
    1cbc:	88 23       	and	r24, r24
    1cbe:	31 f0       	breq	.+12     	; 0x1ccc <m_usb_rx_available+0x18>
    1cc0:	83 e0       	ldi	r24, 0x03	; 3
    1cc2:	80 93 e9 00 	sts	0x00E9, r24
    1cc6:	80 91 f2 00 	lds	r24, 0x00F2
    1cca:	01 c0       	rjmp	.+2      	; 0x1cce <m_usb_rx_available+0x1a>
    1ccc:	80 e0       	ldi	r24, 0x00	; 0
    1cce:	9f bf       	out	0x3f, r25	; 63
    1cd0:	08 95       	ret

00001cd2 <m_usb_rx_flush>:
    1cd2:	80 91 96 01 	lds	r24, 0x0196
    1cd6:	88 23       	and	r24, r24
    1cd8:	89 f0       	breq	.+34     	; 0x1cfc <m_usb_rx_flush+0x2a>
    1cda:	2f b7       	in	r18, 0x3f	; 63
    1cdc:	f8 94       	cli
    1cde:	83 e0       	ldi	r24, 0x03	; 3
    1ce0:	80 93 e9 00 	sts	0x00E9, r24
    1ce4:	80 91 e8 00 	lds	r24, 0x00E8
    1ce8:	85 ff       	sbrs	r24, 5
    1cea:	07 c0       	rjmp	.+14     	; 0x1cfa <m_usb_rx_flush+0x28>
    1cec:	e8 ee       	ldi	r30, 0xE8	; 232
    1cee:	f0 e0       	ldi	r31, 0x00	; 0
    1cf0:	9b e6       	ldi	r25, 0x6B	; 107
    1cf2:	90 83       	st	Z, r25
    1cf4:	80 81       	ld	r24, Z
    1cf6:	85 fd       	sbrc	r24, 5
    1cf8:	fc cf       	rjmp	.-8      	; 0x1cf2 <m_usb_rx_flush+0x20>
    1cfa:	2f bf       	out	0x3f, r18	; 63
    1cfc:	08 95       	ret

00001cfe <m_usb_tx_char>:
    1cfe:	cf 93       	push	r28
    1d00:	df 93       	push	r29
    1d02:	90 91 96 01 	lds	r25, 0x0196
    1d06:	99 23       	and	r25, r25
    1d08:	09 f4       	brne	.+2      	; 0x1d0c <m_usb_tx_char+0xe>
    1d0a:	4d c0       	rjmp	.+154    	; 0x1da6 <m_usb_tx_char+0xa8>
    1d0c:	9f b7       	in	r25, 0x3f	; 63
    1d0e:	f8 94       	cli
    1d10:	24 e0       	ldi	r18, 0x04	; 4
    1d12:	20 93 e9 00 	sts	0x00E9, r18
    1d16:	20 91 98 01 	lds	r18, 0x0198
    1d1a:	22 23       	and	r18, r18
    1d1c:	49 f0       	breq	.+18     	; 0x1d30 <m_usb_tx_char+0x32>
    1d1e:	20 91 e8 00 	lds	r18, 0x00E8
    1d22:	25 fd       	sbrc	r18, 5
    1d24:	03 c0       	rjmp	.+6      	; 0x1d2c <m_usb_tx_char+0x2e>
    1d26:	9f bf       	out	0x3f, r25	; 63
    1d28:	8f ef       	ldi	r24, 0xFF	; 255
    1d2a:	42 c0       	rjmp	.+132    	; 0x1db0 <m_usb_tx_char+0xb2>
    1d2c:	10 92 98 01 	sts	0x0198, r1
    1d30:	30 91 e4 00 	lds	r19, 0x00E4
    1d34:	37 5e       	subi	r19, 0xE7	; 231
    1d36:	20 91 e8 00 	lds	r18, 0x00E8
    1d3a:	25 fd       	sbrc	r18, 5
    1d3c:	25 c0       	rjmp	.+74     	; 0x1d88 <m_usb_tx_char+0x8a>
    1d3e:	9f bf       	out	0x3f, r25	; 63
    1d40:	90 91 e4 00 	lds	r25, 0x00E4
    1d44:	93 17       	cp	r25, r19
    1d46:	49 f0       	breq	.+18     	; 0x1d5a <m_usb_tx_char+0x5c>
    1d48:	90 91 96 01 	lds	r25, 0x0196
    1d4c:	91 11       	cpse	r25, r1
    1d4e:	0f c0       	rjmp	.+30     	; 0x1d6e <m_usb_tx_char+0x70>
    1d50:	2c c0       	rjmp	.+88     	; 0x1daa <m_usb_tx_char+0xac>
    1d52:	9f bf       	out	0x3f, r25	; 63
    1d54:	98 81       	ld	r25, Y
    1d56:	93 13       	cpse	r25, r19
    1d58:	05 c0       	rjmp	.+10     	; 0x1d64 <m_usb_tx_char+0x66>
    1d5a:	81 e0       	ldi	r24, 0x01	; 1
    1d5c:	80 93 98 01 	sts	0x0198, r24
    1d60:	8f ef       	ldi	r24, 0xFF	; 255
    1d62:	26 c0       	rjmp	.+76     	; 0x1db0 <m_usb_tx_char+0xb2>
    1d64:	90 91 96 01 	lds	r25, 0x0196
    1d68:	91 11       	cpse	r25, r1
    1d6a:	08 c0       	rjmp	.+16     	; 0x1d7c <m_usb_tx_char+0x7e>
    1d6c:	20 c0       	rjmp	.+64     	; 0x1dae <m_usb_tx_char+0xb0>
    1d6e:	a9 ee       	ldi	r26, 0xE9	; 233
    1d70:	b0 e0       	ldi	r27, 0x00	; 0
    1d72:	44 e0       	ldi	r20, 0x04	; 4
    1d74:	e8 ee       	ldi	r30, 0xE8	; 232
    1d76:	f0 e0       	ldi	r31, 0x00	; 0
    1d78:	c4 ee       	ldi	r28, 0xE4	; 228
    1d7a:	d0 e0       	ldi	r29, 0x00	; 0
    1d7c:	9f b7       	in	r25, 0x3f	; 63
    1d7e:	f8 94       	cli
    1d80:	4c 93       	st	X, r20
    1d82:	20 81       	ld	r18, Z
    1d84:	25 ff       	sbrs	r18, 5
    1d86:	e5 cf       	rjmp	.-54     	; 0x1d52 <m_usb_tx_char+0x54>
    1d88:	80 93 f1 00 	sts	0x00F1, r24
    1d8c:	80 91 e8 00 	lds	r24, 0x00E8
    1d90:	85 fd       	sbrc	r24, 5
    1d92:	03 c0       	rjmp	.+6      	; 0x1d9a <m_usb_tx_char+0x9c>
    1d94:	8a e3       	ldi	r24, 0x3A	; 58
    1d96:	80 93 e8 00 	sts	0x00E8, r24
    1d9a:	85 e0       	ldi	r24, 0x05	; 5
    1d9c:	80 93 95 01 	sts	0x0195, r24
    1da0:	9f bf       	out	0x3f, r25	; 63
    1da2:	80 e0       	ldi	r24, 0x00	; 0
    1da4:	05 c0       	rjmp	.+10     	; 0x1db0 <m_usb_tx_char+0xb2>
    1da6:	8f ef       	ldi	r24, 0xFF	; 255
    1da8:	03 c0       	rjmp	.+6      	; 0x1db0 <m_usb_tx_char+0xb2>
    1daa:	8f ef       	ldi	r24, 0xFF	; 255
    1dac:	01 c0       	rjmp	.+2      	; 0x1db0 <m_usb_tx_char+0xb2>
    1dae:	8f ef       	ldi	r24, 0xFF	; 255
    1db0:	df 91       	pop	r29
    1db2:	cf 91       	pop	r28
    1db4:	08 95       	ret

00001db6 <__vector_10>:
    1db6:	1f 92       	push	r1
    1db8:	0f 92       	push	r0
    1dba:	0f b6       	in	r0, 0x3f	; 63
    1dbc:	0f 92       	push	r0
    1dbe:	11 24       	eor	r1, r1
    1dc0:	8f 93       	push	r24
    1dc2:	9f 93       	push	r25
    1dc4:	ef 93       	push	r30
    1dc6:	ff 93       	push	r31
    1dc8:	e1 ee       	ldi	r30, 0xE1	; 225
    1dca:	f0 e0       	ldi	r31, 0x00	; 0
    1dcc:	80 81       	ld	r24, Z
    1dce:	10 82       	st	Z, r1
    1dd0:	83 ff       	sbrs	r24, 3
    1dd2:	11 c0       	rjmp	.+34     	; 0x1df6 <__vector_10+0x40>
    1dd4:	10 92 e9 00 	sts	0x00E9, r1
    1dd8:	91 e0       	ldi	r25, 0x01	; 1
    1dda:	90 93 eb 00 	sts	0x00EB, r25
    1dde:	10 92 ec 00 	sts	0x00EC, r1
    1de2:	92 e1       	ldi	r25, 0x12	; 18
    1de4:	90 93 ed 00 	sts	0x00ED, r25
    1de8:	98 e0       	ldi	r25, 0x08	; 8
    1dea:	90 93 f0 00 	sts	0x00F0, r25
    1dee:	10 92 96 01 	sts	0x0196, r1
    1df2:	10 92 97 01 	sts	0x0197, r1
    1df6:	82 ff       	sbrs	r24, 2
    1df8:	13 c0       	rjmp	.+38     	; 0x1e20 <__vector_10+0x6a>
    1dfa:	80 91 96 01 	lds	r24, 0x0196
    1dfe:	88 23       	and	r24, r24
    1e00:	79 f0       	breq	.+30     	; 0x1e20 <__vector_10+0x6a>
    1e02:	80 91 95 01 	lds	r24, 0x0195
    1e06:	88 23       	and	r24, r24
    1e08:	59 f0       	breq	.+22     	; 0x1e20 <__vector_10+0x6a>
    1e0a:	81 50       	subi	r24, 0x01	; 1
    1e0c:	80 93 95 01 	sts	0x0195, r24
    1e10:	81 11       	cpse	r24, r1
    1e12:	06 c0       	rjmp	.+12     	; 0x1e20 <__vector_10+0x6a>
    1e14:	84 e0       	ldi	r24, 0x04	; 4
    1e16:	80 93 e9 00 	sts	0x00E9, r24
    1e1a:	8a e3       	ldi	r24, 0x3A	; 58
    1e1c:	80 93 e8 00 	sts	0x00E8, r24
    1e20:	ff 91       	pop	r31
    1e22:	ef 91       	pop	r30
    1e24:	9f 91       	pop	r25
    1e26:	8f 91       	pop	r24
    1e28:	0f 90       	pop	r0
    1e2a:	0f be       	out	0x3f, r0	; 63
    1e2c:	0f 90       	pop	r0
    1e2e:	1f 90       	pop	r1
    1e30:	18 95       	reti

00001e32 <__vector_11>:
    1e32:	1f 92       	push	r1
    1e34:	0f 92       	push	r0
    1e36:	0f b6       	in	r0, 0x3f	; 63
    1e38:	0f 92       	push	r0
    1e3a:	11 24       	eor	r1, r1
    1e3c:	0f 93       	push	r16
    1e3e:	1f 93       	push	r17
    1e40:	2f 93       	push	r18
    1e42:	3f 93       	push	r19
    1e44:	4f 93       	push	r20
    1e46:	5f 93       	push	r21
    1e48:	6f 93       	push	r22
    1e4a:	7f 93       	push	r23
    1e4c:	8f 93       	push	r24
    1e4e:	9f 93       	push	r25
    1e50:	af 93       	push	r26
    1e52:	bf 93       	push	r27
    1e54:	cf 93       	push	r28
    1e56:	df 93       	push	r29
    1e58:	ef 93       	push	r30
    1e5a:	ff 93       	push	r31
    1e5c:	10 92 e9 00 	sts	0x00E9, r1
    1e60:	80 91 e8 00 	lds	r24, 0x00E8
    1e64:	83 ff       	sbrs	r24, 3
    1e66:	51 c1       	rjmp	.+674    	; 0x210a <__vector_11+0x2d8>
    1e68:	e1 ef       	ldi	r30, 0xF1	; 241
    1e6a:	f0 e0       	ldi	r31, 0x00	; 0
    1e6c:	70 81       	ld	r23, Z
    1e6e:	40 81       	ld	r20, Z
    1e70:	20 81       	ld	r18, Z
    1e72:	30 81       	ld	r19, Z
    1e74:	93 2f       	mov	r25, r19
    1e76:	80 e0       	ldi	r24, 0x00	; 0
    1e78:	dc 01       	movw	r26, r24
    1e7a:	a2 2b       	or	r26, r18
    1e7c:	9d 01       	movw	r18, r26
    1e7e:	50 81       	ld	r21, Z
    1e80:	60 81       	ld	r22, Z
    1e82:	96 2f       	mov	r25, r22
    1e84:	80 e0       	ldi	r24, 0x00	; 0
    1e86:	85 2b       	or	r24, r21
    1e88:	a0 81       	ld	r26, Z
    1e8a:	b0 81       	ld	r27, Z
    1e8c:	52 ef       	ldi	r21, 0xF2	; 242
    1e8e:	50 93 e8 00 	sts	0x00E8, r21
    1e92:	46 30       	cpi	r20, 0x06	; 6
    1e94:	09 f0       	breq	.+2      	; 0x1e98 <__vector_11+0x66>
    1e96:	5c c0       	rjmp	.+184    	; 0x1f50 <__vector_11+0x11e>
    1e98:	04 c0       	rjmp	.+8      	; 0x1ea2 <__vector_11+0x70>
    1e9a:	81 e2       	ldi	r24, 0x21	; 33
    1e9c:	80 93 eb 00 	sts	0x00EB, r24
    1ea0:	3b c1       	rjmp	.+630    	; 0x2118 <__vector_11+0x2e6>
    1ea2:	c6 e0       	ldi	r28, 0x06	; 6
    1ea4:	4f e1       	ldi	r20, 0x1F	; 31
    1ea6:	51 e0       	ldi	r21, 0x01	; 1
    1ea8:	fa 01       	movw	r30, r20
    1eaa:	65 91       	lpm	r22, Z+
    1eac:	74 91       	lpm	r23, Z
    1eae:	26 17       	cp	r18, r22
    1eb0:	37 07       	cpc	r19, r23
    1eb2:	19 f0       	breq	.+6      	; 0x1eba <__vector_11+0x88>
    1eb4:	49 5f       	subi	r20, 0xF9	; 249
    1eb6:	5f 4f       	sbci	r21, 0xFF	; 255
    1eb8:	20 c0       	rjmp	.+64     	; 0x1efa <__vector_11+0xc8>
    1eba:	fa 01       	movw	r30, r20
    1ebc:	32 96       	adiw	r30, 0x02	; 2
    1ebe:	65 91       	lpm	r22, Z+
    1ec0:	74 91       	lpm	r23, Z
    1ec2:	86 17       	cp	r24, r22
    1ec4:	97 07       	cpc	r25, r23
    1ec6:	19 f0       	breq	.+6      	; 0x1ece <__vector_11+0x9c>
    1ec8:	49 5f       	subi	r20, 0xF9	; 249
    1eca:	5f 4f       	sbci	r21, 0xFF	; 255
    1ecc:	16 c0       	rjmp	.+44     	; 0x1efa <__vector_11+0xc8>
    1ece:	fa 01       	movw	r30, r20
    1ed0:	34 96       	adiw	r30, 0x04	; 4
    1ed2:	85 91       	lpm	r24, Z+
    1ed4:	94 91       	lpm	r25, Z
    1ed6:	28 2f       	mov	r18, r24
    1ed8:	39 2f       	mov	r19, r25
    1eda:	fa 01       	movw	r30, r20
    1edc:	36 96       	adiw	r30, 0x06	; 6
    1ede:	44 91       	lpm	r20, Z
    1ee0:	9b 2f       	mov	r25, r27
    1ee2:	80 e0       	ldi	r24, 0x00	; 0
    1ee4:	8a 2b       	or	r24, r26
    1ee6:	8f 3f       	cpi	r24, 0xFF	; 255
    1ee8:	91 05       	cpc	r25, r1
    1eea:	19 f0       	breq	.+6      	; 0x1ef2 <__vector_11+0xc0>
    1eec:	10 f0       	brcs	.+4      	; 0x1ef2 <__vector_11+0xc0>
    1eee:	8f ef       	ldi	r24, 0xFF	; 255
    1ef0:	90 e0       	ldi	r25, 0x00	; 0
    1ef2:	84 17       	cp	r24, r20
    1ef4:	28 f4       	brcc	.+10     	; 0x1f00 <__vector_11+0xce>
    1ef6:	48 2f       	mov	r20, r24
    1ef8:	03 c0       	rjmp	.+6      	; 0x1f00 <__vector_11+0xce>
    1efa:	c1 50       	subi	r28, 0x01	; 1
    1efc:	a9 f6       	brne	.-86     	; 0x1ea8 <__vector_11+0x76>
    1efe:	cd cf       	rjmp	.-102    	; 0x1e9a <__vector_11+0x68>
    1f00:	c8 ee       	ldi	r28, 0xE8	; 232
    1f02:	d0 e0       	ldi	r29, 0x00	; 0
    1f04:	7e ef       	ldi	r23, 0xFE	; 254
    1f06:	a1 ef       	ldi	r26, 0xF1	; 241
    1f08:	b0 e0       	ldi	r27, 0x00	; 0
    1f0a:	10 e1       	ldi	r17, 0x10	; 16
    1f0c:	88 81       	ld	r24, Y
    1f0e:	98 2f       	mov	r25, r24
    1f10:	95 70       	andi	r25, 0x05	; 5
    1f12:	e1 f3       	breq	.-8      	; 0x1f0c <__vector_11+0xda>
    1f14:	82 fd       	sbrc	r24, 2
    1f16:	00 c1       	rjmp	.+512    	; 0x2118 <__vector_11+0x2e6>
    1f18:	64 2f       	mov	r22, r20
    1f1a:	41 31       	cpi	r20, 0x11	; 17
    1f1c:	08 f0       	brcs	.+2      	; 0x1f20 <__vector_11+0xee>
    1f1e:	61 2f       	mov	r22, r17
    1f20:	66 23       	and	r22, r22
    1f22:	09 f4       	brne	.+2      	; 0x1f26 <__vector_11+0xf4>
    1f24:	f6 c0       	rjmp	.+492    	; 0x2112 <__vector_11+0x2e0>
    1f26:	c9 01       	movw	r24, r18
    1f28:	56 2f       	mov	r21, r22
    1f2a:	fc 01       	movw	r30, r24
    1f2c:	01 96       	adiw	r24, 0x01	; 1
    1f2e:	e4 91       	lpm	r30, Z
    1f30:	ec 93       	st	X, r30
    1f32:	51 50       	subi	r21, 0x01	; 1
    1f34:	d1 f7       	brne	.-12     	; 0x1f2a <__vector_11+0xf8>
    1f36:	86 2f       	mov	r24, r22
    1f38:	81 50       	subi	r24, 0x01	; 1
    1f3a:	90 e0       	ldi	r25, 0x00	; 0
    1f3c:	01 96       	adiw	r24, 0x01	; 1
    1f3e:	28 0f       	add	r18, r24
    1f40:	39 1f       	adc	r19, r25
    1f42:	46 1b       	sub	r20, r22
    1f44:	78 83       	st	Y, r23
    1f46:	41 11       	cpse	r20, r1
    1f48:	e1 cf       	rjmp	.-62     	; 0x1f0c <__vector_11+0xda>
    1f4a:	60 31       	cpi	r22, 0x10	; 16
    1f4c:	f9 f2       	breq	.-66     	; 0x1f0c <__vector_11+0xda>
    1f4e:	e4 c0       	rjmp	.+456    	; 0x2118 <__vector_11+0x2e6>
    1f50:	45 30       	cpi	r20, 0x05	; 5
    1f52:	61 f4       	brne	.+24     	; 0x1f6c <__vector_11+0x13a>
    1f54:	8e ef       	ldi	r24, 0xFE	; 254
    1f56:	80 93 e8 00 	sts	0x00E8, r24
    1f5a:	e8 ee       	ldi	r30, 0xE8	; 232
    1f5c:	f0 e0       	ldi	r31, 0x00	; 0
    1f5e:	80 81       	ld	r24, Z
    1f60:	80 ff       	sbrs	r24, 0
    1f62:	fd cf       	rjmp	.-6      	; 0x1f5e <__vector_11+0x12c>
    1f64:	20 68       	ori	r18, 0x80	; 128
    1f66:	20 93 e3 00 	sts	0x00E3, r18
    1f6a:	d6 c0       	rjmp	.+428    	; 0x2118 <__vector_11+0x2e6>
    1f6c:	49 30       	cpi	r20, 0x09	; 9
    1f6e:	a1 f5       	brne	.+104    	; 0x1fd8 <__vector_11+0x1a6>
    1f70:	71 11       	cpse	r23, r1
    1f72:	5b c0       	rjmp	.+182    	; 0x202a <__vector_11+0x1f8>
    1f74:	20 93 96 01 	sts	0x0196, r18
    1f78:	10 92 97 01 	sts	0x0197, r1
    1f7c:	10 92 95 01 	sts	0x0195, r1
    1f80:	8e ef       	ldi	r24, 0xFE	; 254
    1f82:	80 93 e8 00 	sts	0x00E8, r24
    1f86:	11 e0       	ldi	r17, 0x01	; 1
    1f88:	89 e4       	ldi	r24, 0x49	; 73
    1f8a:	91 e0       	ldi	r25, 0x01	; 1
    1f8c:	c9 ee       	ldi	r28, 0xE9	; 233
    1f8e:	d0 e0       	ldi	r29, 0x00	; 0
    1f90:	ab ee       	ldi	r26, 0xEB	; 235
    1f92:	b0 e0       	ldi	r27, 0x00	; 0
    1f94:	6c ee       	ldi	r22, 0xEC	; 236
    1f96:	70 e0       	ldi	r23, 0x00	; 0
    1f98:	4d ee       	ldi	r20, 0xED	; 237
    1f9a:	50 e0       	ldi	r21, 0x00	; 0
    1f9c:	18 83       	st	Y, r17
    1f9e:	9c 01       	movw	r18, r24
    1fa0:	2f 5f       	subi	r18, 0xFF	; 255
    1fa2:	3f 4f       	sbci	r19, 0xFF	; 255
    1fa4:	fc 01       	movw	r30, r24
    1fa6:	04 91       	lpm	r16, Z
    1fa8:	0c 93       	st	X, r16
    1faa:	00 23       	and	r16, r16
    1fac:	59 f0       	breq	.+22     	; 0x1fc4 <__vector_11+0x192>
    1fae:	f9 01       	movw	r30, r18
    1fb0:	24 91       	lpm	r18, Z
    1fb2:	fb 01       	movw	r30, r22
    1fb4:	20 83       	st	Z, r18
    1fb6:	fc 01       	movw	r30, r24
    1fb8:	32 96       	adiw	r30, 0x02	; 2
    1fba:	03 96       	adiw	r24, 0x03	; 3
    1fbc:	24 91       	lpm	r18, Z
    1fbe:	fa 01       	movw	r30, r20
    1fc0:	20 83       	st	Z, r18
    1fc2:	01 c0       	rjmp	.+2      	; 0x1fc6 <__vector_11+0x194>
    1fc4:	c9 01       	movw	r24, r18
    1fc6:	1f 5f       	subi	r17, 0xFF	; 255
    1fc8:	15 30       	cpi	r17, 0x05	; 5
    1fca:	41 f7       	brne	.-48     	; 0x1f9c <__vector_11+0x16a>
    1fcc:	ea ee       	ldi	r30, 0xEA	; 234
    1fce:	f0 e0       	ldi	r31, 0x00	; 0
    1fd0:	8e e1       	ldi	r24, 0x1E	; 30
    1fd2:	80 83       	st	Z, r24
    1fd4:	10 82       	st	Z, r1
    1fd6:	a0 c0       	rjmp	.+320    	; 0x2118 <__vector_11+0x2e6>
    1fd8:	48 30       	cpi	r20, 0x08	; 8
    1fda:	81 f4       	brne	.+32     	; 0x1ffc <__vector_11+0x1ca>
    1fdc:	70 38       	cpi	r23, 0x80	; 128
    1fde:	09 f0       	breq	.+2      	; 0x1fe2 <__vector_11+0x1b0>
    1fe0:	3f c0       	rjmp	.+126    	; 0x2060 <__vector_11+0x22e>
    1fe2:	e8 ee       	ldi	r30, 0xE8	; 232
    1fe4:	f0 e0       	ldi	r31, 0x00	; 0
    1fe6:	80 81       	ld	r24, Z
    1fe8:	80 ff       	sbrs	r24, 0
    1fea:	fd cf       	rjmp	.-6      	; 0x1fe6 <__vector_11+0x1b4>
    1fec:	80 91 96 01 	lds	r24, 0x0196
    1ff0:	80 93 f1 00 	sts	0x00F1, r24
    1ff4:	8e ef       	ldi	r24, 0xFE	; 254
    1ff6:	80 93 e8 00 	sts	0x00E8, r24
    1ffa:	8e c0       	rjmp	.+284    	; 0x2118 <__vector_11+0x2e6>
    1ffc:	41 32       	cpi	r20, 0x21	; 33
    1ffe:	a9 f4       	brne	.+42     	; 0x202a <__vector_11+0x1f8>
    2000:	71 3a       	cpi	r23, 0xA1	; 161
    2002:	f1 f5       	brne	.+124    	; 0x2080 <__vector_11+0x24e>
    2004:	e8 ee       	ldi	r30, 0xE8	; 232
    2006:	f0 e0       	ldi	r31, 0x00	; 0
    2008:	80 81       	ld	r24, Z
    200a:	80 ff       	sbrs	r24, 0
    200c:	fd cf       	rjmp	.-6      	; 0x2008 <__vector_11+0x1d6>
    200e:	ec e0       	ldi	r30, 0x0C	; 12
    2010:	f1 e0       	ldi	r31, 0x01	; 1
    2012:	a1 ef       	ldi	r26, 0xF1	; 241
    2014:	b0 e0       	ldi	r27, 0x00	; 0
    2016:	81 91       	ld	r24, Z+
    2018:	8c 93       	st	X, r24
    201a:	41 e0       	ldi	r20, 0x01	; 1
    201c:	e3 31       	cpi	r30, 0x13	; 19
    201e:	f4 07       	cpc	r31, r20
    2020:	d1 f7       	brne	.-12     	; 0x2016 <__vector_11+0x1e4>
    2022:	8e ef       	ldi	r24, 0xFE	; 254
    2024:	80 93 e8 00 	sts	0x00E8, r24
    2028:	77 c0       	rjmp	.+238    	; 0x2118 <__vector_11+0x2e6>
    202a:	40 32       	cpi	r20, 0x20	; 32
    202c:	c9 f4       	brne	.+50     	; 0x2060 <__vector_11+0x22e>
    202e:	71 32       	cpi	r23, 0x21	; 33
    2030:	09 f0       	breq	.+2      	; 0x2034 <__vector_11+0x202>
    2032:	6b c0       	rjmp	.+214    	; 0x210a <__vector_11+0x2d8>
    2034:	e8 ee       	ldi	r30, 0xE8	; 232
    2036:	f0 e0       	ldi	r31, 0x00	; 0
    2038:	80 81       	ld	r24, Z
    203a:	82 ff       	sbrs	r24, 2
    203c:	fd cf       	rjmp	.-6      	; 0x2038 <__vector_11+0x206>
    203e:	ec e0       	ldi	r30, 0x0C	; 12
    2040:	f1 e0       	ldi	r31, 0x01	; 1
    2042:	a1 ef       	ldi	r26, 0xF1	; 241
    2044:	b0 e0       	ldi	r27, 0x00	; 0
    2046:	8c 91       	ld	r24, X
    2048:	81 93       	st	Z+, r24
    204a:	51 e0       	ldi	r21, 0x01	; 1
    204c:	e3 31       	cpi	r30, 0x13	; 19
    204e:	f5 07       	cpc	r31, r21
    2050:	d1 f7       	brne	.-12     	; 0x2046 <__vector_11+0x214>
    2052:	e8 ee       	ldi	r30, 0xE8	; 232
    2054:	f0 e0       	ldi	r31, 0x00	; 0
    2056:	8b ef       	ldi	r24, 0xFB	; 251
    2058:	80 83       	st	Z, r24
    205a:	8e ef       	ldi	r24, 0xFE	; 254
    205c:	80 83       	st	Z, r24
    205e:	5c c0       	rjmp	.+184    	; 0x2118 <__vector_11+0x2e6>
    2060:	42 32       	cpi	r20, 0x22	; 34
    2062:	71 f4       	brne	.+28     	; 0x2080 <__vector_11+0x24e>
    2064:	71 32       	cpi	r23, 0x21	; 33
    2066:	09 f0       	breq	.+2      	; 0x206a <__vector_11+0x238>
    2068:	50 c0       	rjmp	.+160    	; 0x210a <__vector_11+0x2d8>
    206a:	20 93 97 01 	sts	0x0197, r18
    206e:	e8 ee       	ldi	r30, 0xE8	; 232
    2070:	f0 e0       	ldi	r31, 0x00	; 0
    2072:	80 81       	ld	r24, Z
    2074:	80 ff       	sbrs	r24, 0
    2076:	fd cf       	rjmp	.-6      	; 0x2072 <__vector_11+0x240>
    2078:	8e ef       	ldi	r24, 0xFE	; 254
    207a:	80 93 e8 00 	sts	0x00E8, r24
    207e:	4c c0       	rjmp	.+152    	; 0x2118 <__vector_11+0x2e6>
    2080:	41 11       	cpse	r20, r1
    2082:	1a c0       	rjmp	.+52     	; 0x20b8 <__vector_11+0x286>
    2084:	e8 ee       	ldi	r30, 0xE8	; 232
    2086:	f0 e0       	ldi	r31, 0x00	; 0
    2088:	20 81       	ld	r18, Z
    208a:	20 ff       	sbrs	r18, 0
    208c:	fd cf       	rjmp	.-6      	; 0x2088 <__vector_11+0x256>
    208e:	72 38       	cpi	r23, 0x82	; 130
    2090:	51 f4       	brne	.+20     	; 0x20a6 <__vector_11+0x274>
    2092:	e9 ee       	ldi	r30, 0xE9	; 233
    2094:	f0 e0       	ldi	r31, 0x00	; 0
    2096:	80 83       	st	Z, r24
    2098:	80 91 eb 00 	lds	r24, 0x00EB
    209c:	85 fb       	bst	r24, 5
    209e:	88 27       	eor	r24, r24
    20a0:	80 f9       	bld	r24, 0
    20a2:	10 82       	st	Z, r1
    20a4:	01 c0       	rjmp	.+2      	; 0x20a8 <__vector_11+0x276>
    20a6:	80 e0       	ldi	r24, 0x00	; 0
    20a8:	e1 ef       	ldi	r30, 0xF1	; 241
    20aa:	f0 e0       	ldi	r31, 0x00	; 0
    20ac:	80 83       	st	Z, r24
    20ae:	10 82       	st	Z, r1
    20b0:	8e ef       	ldi	r24, 0xFE	; 254
    20b2:	80 93 e8 00 	sts	0x00E8, r24
    20b6:	30 c0       	rjmp	.+96     	; 0x2118 <__vector_11+0x2e6>
    20b8:	41 30       	cpi	r20, 0x01	; 1
    20ba:	11 f0       	breq	.+4      	; 0x20c0 <__vector_11+0x28e>
    20bc:	43 30       	cpi	r20, 0x03	; 3
    20be:	29 f5       	brne	.+74     	; 0x210a <__vector_11+0x2d8>
    20c0:	72 30       	cpi	r23, 0x02	; 2
    20c2:	19 f5       	brne	.+70     	; 0x210a <__vector_11+0x2d8>
    20c4:	23 2b       	or	r18, r19
    20c6:	09 f5       	brne	.+66     	; 0x210a <__vector_11+0x2d8>
    20c8:	8f 77       	andi	r24, 0x7F	; 127
    20ca:	99 27       	eor	r25, r25
    20cc:	38 2f       	mov	r19, r24
    20ce:	31 50       	subi	r19, 0x01	; 1
    20d0:	34 30       	cpi	r19, 0x04	; 4
    20d2:	d8 f4       	brcc	.+54     	; 0x210a <__vector_11+0x2d8>
    20d4:	3e ef       	ldi	r19, 0xFE	; 254
    20d6:	30 93 e8 00 	sts	0x00E8, r19
    20da:	80 93 e9 00 	sts	0x00E9, r24
    20de:	43 30       	cpi	r20, 0x03	; 3
    20e0:	21 f4       	brne	.+8      	; 0x20ea <__vector_11+0x2b8>
    20e2:	81 e2       	ldi	r24, 0x21	; 33
    20e4:	80 93 eb 00 	sts	0x00EB, r24
    20e8:	17 c0       	rjmp	.+46     	; 0x2118 <__vector_11+0x2e6>
    20ea:	99 e1       	ldi	r25, 0x19	; 25
    20ec:	90 93 eb 00 	sts	0x00EB, r25
    20f0:	21 e0       	ldi	r18, 0x01	; 1
    20f2:	30 e0       	ldi	r19, 0x00	; 0
    20f4:	d9 01       	movw	r26, r18
    20f6:	02 c0       	rjmp	.+4      	; 0x20fc <__vector_11+0x2ca>
    20f8:	aa 0f       	add	r26, r26
    20fa:	bb 1f       	adc	r27, r27
    20fc:	8a 95       	dec	r24
    20fe:	e2 f7       	brpl	.-8      	; 0x20f8 <__vector_11+0x2c6>
    2100:	ea ee       	ldi	r30, 0xEA	; 234
    2102:	f0 e0       	ldi	r31, 0x00	; 0
    2104:	a0 83       	st	Z, r26
    2106:	10 82       	st	Z, r1
    2108:	07 c0       	rjmp	.+14     	; 0x2118 <__vector_11+0x2e6>
    210a:	81 e2       	ldi	r24, 0x21	; 33
    210c:	80 93 eb 00 	sts	0x00EB, r24
    2110:	03 c0       	rjmp	.+6      	; 0x2118 <__vector_11+0x2e6>
    2112:	78 83       	st	Y, r23
    2114:	41 11       	cpse	r20, r1
    2116:	fa ce       	rjmp	.-524    	; 0x1f0c <__vector_11+0xda>
    2118:	ff 91       	pop	r31
    211a:	ef 91       	pop	r30
    211c:	df 91       	pop	r29
    211e:	cf 91       	pop	r28
    2120:	bf 91       	pop	r27
    2122:	af 91       	pop	r26
    2124:	9f 91       	pop	r25
    2126:	8f 91       	pop	r24
    2128:	7f 91       	pop	r23
    212a:	6f 91       	pop	r22
    212c:	5f 91       	pop	r21
    212e:	4f 91       	pop	r20
    2130:	3f 91       	pop	r19
    2132:	2f 91       	pop	r18
    2134:	1f 91       	pop	r17
    2136:	0f 91       	pop	r16
    2138:	0f 90       	pop	r0
    213a:	0f be       	out	0x3f, r0	; 63
    213c:	0f 90       	pop	r0
    213e:	1f 90       	pop	r1
    2140:	18 95       	reti

00002142 <m_usb_tx_int>:
    2142:	ef 92       	push	r14
    2144:	ff 92       	push	r15
    2146:	0f 93       	push	r16
    2148:	1f 93       	push	r17
    214a:	cf 93       	push	r28
    214c:	df 93       	push	r29
    214e:	cd b7       	in	r28, 0x3d	; 61
    2150:	de b7       	in	r29, 0x3e	; 62
    2152:	27 97       	sbiw	r28, 0x07	; 7
    2154:	0f b6       	in	r0, 0x3f	; 63
    2156:	f8 94       	cli
    2158:	de bf       	out	0x3e, r29	; 62
    215a:	0f be       	out	0x3f, r0	; 63
    215c:	cd bf       	out	0x3d, r28	; 61
    215e:	8e 01       	movw	r16, r28
    2160:	0f 5f       	subi	r16, 0xFF	; 255
    2162:	1f 4f       	sbci	r17, 0xFF	; 255
    2164:	27 e0       	ldi	r18, 0x07	; 7
    2166:	f8 01       	movw	r30, r16
    2168:	11 92       	st	Z+, r1
    216a:	2a 95       	dec	r18
    216c:	e9 f7       	brne	.-6      	; 0x2168 <m_usb_tx_int+0x26>
    216e:	4a e0       	ldi	r20, 0x0A	; 10
    2170:	50 e0       	ldi	r21, 0x00	; 0
    2172:	b8 01       	movw	r22, r16
    2174:	0e 94 df 16 	call	0x2dbe	; 0x2dbe <itoa>
    2178:	7e 01       	movw	r14, r28
    217a:	f8 e0       	ldi	r31, 0x08	; 8
    217c:	ef 0e       	add	r14, r31
    217e:	f1 1c       	adc	r15, r1
    2180:	f8 01       	movw	r30, r16
    2182:	81 91       	ld	r24, Z+
    2184:	8f 01       	movw	r16, r30
    2186:	81 11       	cpse	r24, r1
    2188:	0e 94 7f 0e 	call	0x1cfe	; 0x1cfe <m_usb_tx_char>
    218c:	0e 15       	cp	r16, r14
    218e:	1f 05       	cpc	r17, r15
    2190:	b9 f7       	brne	.-18     	; 0x2180 <m_usb_tx_int+0x3e>
    2192:	27 96       	adiw	r28, 0x07	; 7
    2194:	0f b6       	in	r0, 0x3f	; 63
    2196:	f8 94       	cli
    2198:	de bf       	out	0x3e, r29	; 62
    219a:	0f be       	out	0x3f, r0	; 63
    219c:	cd bf       	out	0x3d, r28	; 61
    219e:	df 91       	pop	r29
    21a0:	cf 91       	pop	r28
    21a2:	1f 91       	pop	r17
    21a4:	0f 91       	pop	r16
    21a6:	ff 90       	pop	r15
    21a8:	ef 90       	pop	r14
    21aa:	08 95       	ret

000021ac <twi_wait>:
    21ac:	20 e0       	ldi	r18, 0x00	; 0
    21ae:	30 e0       	ldi	r19, 0x00	; 0
    21b0:	ec eb       	ldi	r30, 0xBC	; 188
    21b2:	f0 e0       	ldi	r31, 0x00	; 0
    21b4:	80 81       	ld	r24, Z
    21b6:	88 23       	and	r24, r24
    21b8:	34 f0       	brlt	.+12     	; 0x21c6 <twi_wait+0x1a>
    21ba:	2f 5f       	subi	r18, 0xFF	; 255
    21bc:	3f 4f       	sbci	r19, 0xFF	; 255
    21be:	29 3e       	cpi	r18, 0xE9	; 233
    21c0:	83 e0       	ldi	r24, 0x03	; 3
    21c2:	38 07       	cpc	r19, r24
    21c4:	b9 f7       	brne	.-18     	; 0x21b4 <twi_wait+0x8>
    21c6:	81 e0       	ldi	r24, 0x01	; 1
    21c8:	28 3e       	cpi	r18, 0xE8	; 232
    21ca:	33 40       	sbci	r19, 0x03	; 3
    21cc:	09 f4       	brne	.+2      	; 0x21d0 <twi_wait+0x24>
    21ce:	80 e0       	ldi	r24, 0x00	; 0
    21d0:	08 95       	ret

000021d2 <send_byte>:
    21d2:	80 93 bb 00 	sts	0x00BB, r24
    21d6:	84 e8       	ldi	r24, 0x84	; 132
    21d8:	80 93 bc 00 	sts	0x00BC, r24
    21dc:	0e 94 d6 10 	call	0x21ac	; 0x21ac <twi_wait>
    21e0:	88 23       	and	r24, r24
    21e2:	21 f0       	breq	.+8      	; 0x21ec <send_byte+0x1a>
    21e4:	80 91 b9 00 	lds	r24, 0x00B9
    21e8:	88 7f       	andi	r24, 0xF8	; 248
    21ea:	08 95       	ret
    21ec:	80 e0       	ldi	r24, 0x00	; 0
    21ee:	08 95       	ret

000021f0 <start_read>:
    21f0:	cf 93       	push	r28
    21f2:	c8 2f       	mov	r28, r24
    21f4:	94 ea       	ldi	r25, 0xA4	; 164
    21f6:	90 93 bc 00 	sts	0x00BC, r25
    21fa:	0e 94 d6 10 	call	0x21ac	; 0x21ac <twi_wait>
    21fe:	88 23       	and	r24, r24
    2200:	61 f0       	breq	.+24     	; 0x221a <start_read+0x2a>
    2202:	8c 2f       	mov	r24, r28
    2204:	88 0f       	add	r24, r24
    2206:	8f 5f       	subi	r24, 0xFF	; 255
    2208:	0e 94 e9 10 	call	0x21d2	; 0x21d2 <send_byte>
    220c:	88 34       	cpi	r24, 0x48	; 72
    220e:	39 f4       	brne	.+14     	; 0x221e <start_read+0x2e>
    2210:	84 e9       	ldi	r24, 0x94	; 148
    2212:	80 93 bc 00 	sts	0x00BC, r24
    2216:	80 e0       	ldi	r24, 0x00	; 0
    2218:	03 c0       	rjmp	.+6      	; 0x2220 <start_read+0x30>
    221a:	80 e0       	ldi	r24, 0x00	; 0
    221c:	01 c0       	rjmp	.+2      	; 0x2220 <start_read+0x30>
    221e:	81 e0       	ldi	r24, 0x01	; 1
    2220:	cf 91       	pop	r28
    2222:	08 95       	ret

00002224 <start_write>:
    2224:	cf 93       	push	r28
    2226:	c8 2f       	mov	r28, r24
    2228:	94 ea       	ldi	r25, 0xA4	; 164
    222a:	90 93 bc 00 	sts	0x00BC, r25
    222e:	0e 94 d6 10 	call	0x21ac	; 0x21ac <twi_wait>
    2232:	88 23       	and	r24, r24
    2234:	59 f0       	breq	.+22     	; 0x224c <start_write+0x28>
    2236:	8c 2f       	mov	r24, r28
    2238:	88 0f       	add	r24, r24
    223a:	0e 94 e9 10 	call	0x21d2	; 0x21d2 <send_byte>
    223e:	80 32       	cpi	r24, 0x20	; 32
    2240:	39 f4       	brne	.+14     	; 0x2250 <start_write+0x2c>
    2242:	84 e9       	ldi	r24, 0x94	; 148
    2244:	80 93 bc 00 	sts	0x00BC, r24
    2248:	80 e0       	ldi	r24, 0x00	; 0
    224a:	03 c0       	rjmp	.+6      	; 0x2252 <start_write+0x2e>
    224c:	80 e0       	ldi	r24, 0x00	; 0
    224e:	01 c0       	rjmp	.+2      	; 0x2252 <start_write+0x2e>
    2250:	81 e0       	ldi	r24, 0x01	; 1
    2252:	cf 91       	pop	r28
    2254:	08 95       	ret

00002256 <end>:
    2256:	84 e9       	ldi	r24, 0x94	; 148
    2258:	80 93 bc 00 	sts	0x00BC, r24
    225c:	08 95       	ret

0000225e <m_wii_read>:
    225e:	ef 92       	push	r14
    2260:	ff 92       	push	r15
    2262:	0f 93       	push	r16
    2264:	1f 93       	push	r17
    2266:	cf 93       	push	r28
    2268:	df 93       	push	r29
    226a:	cd b7       	in	r28, 0x3d	; 61
    226c:	de b7       	in	r29, 0x3e	; 62
    226e:	60 97       	sbiw	r28, 0x10	; 16
    2270:	0f b6       	in	r0, 0x3f	; 63
    2272:	f8 94       	cli
    2274:	de bf       	out	0x3e, r29	; 62
    2276:	0f be       	out	0x3f, r0	; 63
    2278:	cd bf       	out	0x3d, r28	; 61
    227a:	e8 2e       	mov	r14, r24
    227c:	f9 2e       	mov	r15, r25
    227e:	fe 01       	movw	r30, r28
    2280:	31 96       	adiw	r30, 0x01	; 1
    2282:	80 e1       	ldi	r24, 0x10	; 16
    2284:	df 01       	movw	r26, r30
    2286:	1d 92       	st	X+, r1
    2288:	8a 95       	dec	r24
    228a:	e9 f7       	brne	.-6      	; 0x2286 <m_wii_read+0x28>
    228c:	88 e5       	ldi	r24, 0x58	; 88
    228e:	0e 94 12 11 	call	0x2224	; 0x2224 <start_write>
    2292:	88 23       	and	r24, r24
    2294:	09 f4       	brne	.+2      	; 0x2298 <m_wii_read+0x3a>
    2296:	66 c0       	rjmp	.+204    	; 0x2364 <m_wii_read+0x106>
    2298:	86 e3       	ldi	r24, 0x36	; 54
    229a:	0e 94 e9 10 	call	0x21d2	; 0x21d2 <send_byte>
    229e:	88 23       	and	r24, r24
    22a0:	09 f4       	brne	.+2      	; 0x22a4 <m_wii_read+0x46>
    22a2:	62 c0       	rjmp	.+196    	; 0x2368 <m_wii_read+0x10a>
    22a4:	0e 94 2b 11 	call	0x2256	; 0x2256 <end>
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

    22a8:	b8 e0       	ldi	r27, 0x08	; 8
    22aa:	ba 95       	dec	r27
    22ac:	f1 f7       	brne	.-4      	; 0x22aa <m_wii_read+0x4c>
    22ae:	00 00       	nop
    22b0:	88 e5       	ldi	r24, 0x58	; 88
    22b2:	0e 94 f8 10 	call	0x21f0	; 0x21f0 <start_read>
    22b6:	88 23       	and	r24, r24
    22b8:	09 f4       	brne	.+2      	; 0x22bc <m_wii_read+0x5e>
    22ba:	58 c0       	rjmp	.+176    	; 0x236c <m_wii_read+0x10e>
    22bc:	ae 01       	movw	r20, r28
    22be:	4f 5f       	subi	r20, 0xFF	; 255
    22c0:	5f 4f       	sbci	r21, 0xFF	; 255
    22c2:	8e 01       	movw	r16, r28
    22c4:	00 5f       	subi	r16, 0xF0	; 240
    22c6:	1f 4f       	sbci	r17, 0xFF	; 255
    22c8:	ec eb       	ldi	r30, 0xBC	; 188
    22ca:	f0 e0       	ldi	r31, 0x00	; 0
    22cc:	94 ec       	ldi	r25, 0xC4	; 196
    22ce:	2b eb       	ldi	r18, 0xBB	; 187
    22d0:	30 e0       	ldi	r19, 0x00	; 0
    22d2:	90 83       	st	Z, r25
    22d4:	80 81       	ld	r24, Z
    22d6:	88 23       	and	r24, r24
    22d8:	ec f7       	brge	.-6      	; 0x22d4 <m_wii_read+0x76>
    22da:	d9 01       	movw	r26, r18
    22dc:	8c 91       	ld	r24, X
    22de:	da 01       	movw	r26, r20
    22e0:	8d 93       	st	X+, r24
    22e2:	ad 01       	movw	r20, r26
    22e4:	a0 17       	cp	r26, r16
    22e6:	b1 07       	cpc	r27, r17
    22e8:	a1 f7       	brne	.-24     	; 0x22d2 <m_wii_read+0x74>
    22ea:	84 e8       	ldi	r24, 0x84	; 132
    22ec:	80 93 bc 00 	sts	0x00BC, r24
    22f0:	ec eb       	ldi	r30, 0xBC	; 188
    22f2:	f0 e0       	ldi	r31, 0x00	; 0
    22f4:	80 81       	ld	r24, Z
    22f6:	88 23       	and	r24, r24
    22f8:	ec f7       	brge	.-6      	; 0x22f4 <m_wii_read+0x96>
    22fa:	80 91 bb 00 	lds	r24, 0x00BB
    22fe:	88 8b       	std	Y+16, r24	; 0x10
    2300:	0e 94 2b 11 	call	0x2256	; 0x2256 <end>
    2304:	de 01       	movw	r26, r28
    2306:	14 96       	adiw	r26, 0x04	; 4
    2308:	6e 2d       	mov	r22, r14
    230a:	7f 2d       	mov	r23, r15
    230c:	4c 91       	ld	r20, X
    230e:	24 2f       	mov	r18, r20
    2310:	20 73       	andi	r18, 0x30	; 48
    2312:	cd 01       	movw	r24, r26
    2314:	02 97       	sbiw	r24, 0x02	; 2
    2316:	fc 01       	movw	r30, r24
    2318:	80 81       	ld	r24, Z
    231a:	90 e0       	ldi	r25, 0x00	; 0
    231c:	f0 e1       	ldi	r31, 0x10	; 16
    231e:	2f 9f       	mul	r18, r31
    2320:	80 0d       	add	r24, r0
    2322:	91 1d       	adc	r25, r1
    2324:	11 24       	eor	r1, r1
    2326:	fb 01       	movw	r30, r22
    2328:	91 83       	std	Z+1, r25	; 0x01
    232a:	80 83       	st	Z, r24
    232c:	84 2f       	mov	r24, r20
    232e:	80 7c       	andi	r24, 0xC0	; 192
    2330:	90 e0       	ldi	r25, 0x00	; 0
    2332:	88 0f       	add	r24, r24
    2334:	99 1f       	adc	r25, r25
    2336:	88 0f       	add	r24, r24
    2338:	99 1f       	adc	r25, r25
    233a:	9d 01       	movw	r18, r26
    233c:	21 50       	subi	r18, 0x01	; 1
    233e:	31 09       	sbc	r19, r1
    2340:	f9 01       	movw	r30, r18
    2342:	20 81       	ld	r18, Z
    2344:	82 0f       	add	r24, r18
    2346:	91 1d       	adc	r25, r1
    2348:	fb 01       	movw	r30, r22
    234a:	93 83       	std	Z+3, r25	; 0x03
    234c:	82 83       	std	Z+2, r24	; 0x02
    234e:	4f 70       	andi	r20, 0x0F	; 15
    2350:	44 83       	std	Z+4, r20	; 0x04
    2352:	15 82       	std	Z+5, r1	; 0x05
    2354:	13 96       	adiw	r26, 0x03	; 3
    2356:	6a 5f       	subi	r22, 0xFA	; 250
    2358:	7f 4f       	sbci	r23, 0xFF	; 255
    235a:	0a 17       	cp	r16, r26
    235c:	1b 07       	cpc	r17, r27
    235e:	b1 f6       	brne	.-84     	; 0x230c <m_wii_read+0xae>
    2360:	81 e0       	ldi	r24, 0x01	; 1
    2362:	05 c0       	rjmp	.+10     	; 0x236e <m_wii_read+0x110>
    2364:	80 e0       	ldi	r24, 0x00	; 0
    2366:	03 c0       	rjmp	.+6      	; 0x236e <m_wii_read+0x110>
    2368:	80 e0       	ldi	r24, 0x00	; 0
    236a:	01 c0       	rjmp	.+2      	; 0x236e <m_wii_read+0x110>
    236c:	80 e0       	ldi	r24, 0x00	; 0
    236e:	60 96       	adiw	r28, 0x10	; 16
    2370:	0f b6       	in	r0, 0x3f	; 63
    2372:	f8 94       	cli
    2374:	de bf       	out	0x3e, r29	; 62
    2376:	0f be       	out	0x3f, r0	; 63
    2378:	cd bf       	out	0x3d, r28	; 61
    237a:	df 91       	pop	r29
    237c:	cf 91       	pop	r28
    237e:	1f 91       	pop	r17
    2380:	0f 91       	pop	r16
    2382:	ff 90       	pop	r15
    2384:	ef 90       	pop	r14
    2386:	08 95       	ret

00002388 <m_wii_open>:
    2388:	0e 94 5f 07 	call	0xebe	; 0xebe <m_bus_init>
    238c:	88 e5       	ldi	r24, 0x58	; 88
    238e:	0e 94 12 11 	call	0x2224	; 0x2224 <start_write>
    2392:	88 23       	and	r24, r24
    2394:	09 f4       	brne	.+2      	; 0x2398 <m_wii_open+0x10>
    2396:	c7 c0       	rjmp	.+398    	; 0x2526 <m_wii_open+0x19e>
    2398:	80 e3       	ldi	r24, 0x30	; 48
    239a:	0e 94 e9 10 	call	0x21d2	; 0x21d2 <send_byte>
    239e:	88 23       	and	r24, r24
    23a0:	09 f4       	brne	.+2      	; 0x23a4 <m_wii_open+0x1c>
    23a2:	c3 c0       	rjmp	.+390    	; 0x252a <m_wii_open+0x1a2>
    23a4:	81 e0       	ldi	r24, 0x01	; 1
    23a6:	0e 94 e9 10 	call	0x21d2	; 0x21d2 <send_byte>
    23aa:	88 23       	and	r24, r24
    23ac:	09 f4       	brne	.+2      	; 0x23b0 <m_wii_open+0x28>
    23ae:	bf c0       	rjmp	.+382    	; 0x252e <m_wii_open+0x1a6>
    23b0:	0e 94 2b 11 	call	0x2256	; 0x2256 <end>
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

    23b4:	83 ec       	ldi	r24, 0xC3	; 195
    23b6:	99 e0       	ldi	r25, 0x09	; 9
    23b8:	01 97       	sbiw	r24, 0x01	; 1
    23ba:	f1 f7       	brne	.-4      	; 0x23b8 <m_wii_open+0x30>
    23bc:	00 c0       	rjmp	.+0      	; 0x23be <m_wii_open+0x36>
    23be:	00 00       	nop
    23c0:	88 e5       	ldi	r24, 0x58	; 88
    23c2:	0e 94 12 11 	call	0x2224	; 0x2224 <start_write>
    23c6:	88 23       	and	r24, r24
    23c8:	09 f4       	brne	.+2      	; 0x23cc <m_wii_open+0x44>
    23ca:	b3 c0       	rjmp	.+358    	; 0x2532 <m_wii_open+0x1aa>
    23cc:	80 e0       	ldi	r24, 0x00	; 0
    23ce:	0e 94 e9 10 	call	0x21d2	; 0x21d2 <send_byte>
    23d2:	88 23       	and	r24, r24
    23d4:	09 f4       	brne	.+2      	; 0x23d8 <m_wii_open+0x50>
    23d6:	af c0       	rjmp	.+350    	; 0x2536 <m_wii_open+0x1ae>
    23d8:	80 e0       	ldi	r24, 0x00	; 0
    23da:	0e 94 e9 10 	call	0x21d2	; 0x21d2 <send_byte>
    23de:	88 23       	and	r24, r24
    23e0:	09 f4       	brne	.+2      	; 0x23e4 <m_wii_open+0x5c>
    23e2:	ab c0       	rjmp	.+342    	; 0x253a <m_wii_open+0x1b2>
    23e4:	80 e0       	ldi	r24, 0x00	; 0
    23e6:	0e 94 e9 10 	call	0x21d2	; 0x21d2 <send_byte>
    23ea:	88 23       	and	r24, r24
    23ec:	09 f4       	brne	.+2      	; 0x23f0 <m_wii_open+0x68>
    23ee:	a7 c0       	rjmp	.+334    	; 0x253e <m_wii_open+0x1b6>
    23f0:	80 e0       	ldi	r24, 0x00	; 0
    23f2:	0e 94 e9 10 	call	0x21d2	; 0x21d2 <send_byte>
    23f6:	88 23       	and	r24, r24
    23f8:	09 f4       	brne	.+2      	; 0x23fc <m_wii_open+0x74>
    23fa:	a3 c0       	rjmp	.+326    	; 0x2542 <m_wii_open+0x1ba>
    23fc:	80 e0       	ldi	r24, 0x00	; 0
    23fe:	0e 94 e9 10 	call	0x21d2	; 0x21d2 <send_byte>
    2402:	88 23       	and	r24, r24
    2404:	09 f4       	brne	.+2      	; 0x2408 <m_wii_open+0x80>
    2406:	9f c0       	rjmp	.+318    	; 0x2546 <m_wii_open+0x1be>
    2408:	80 e0       	ldi	r24, 0x00	; 0
    240a:	0e 94 e9 10 	call	0x21d2	; 0x21d2 <send_byte>
    240e:	88 23       	and	r24, r24
    2410:	09 f4       	brne	.+2      	; 0x2414 <m_wii_open+0x8c>
    2412:	9b c0       	rjmp	.+310    	; 0x254a <m_wii_open+0x1c2>
    2414:	80 e0       	ldi	r24, 0x00	; 0
    2416:	0e 94 e9 10 	call	0x21d2	; 0x21d2 <send_byte>
    241a:	88 23       	and	r24, r24
    241c:	09 f4       	brne	.+2      	; 0x2420 <m_wii_open+0x98>
    241e:	97 c0       	rjmp	.+302    	; 0x254e <m_wii_open+0x1c6>
    2420:	80 e9       	ldi	r24, 0x90	; 144
    2422:	0e 94 e9 10 	call	0x21d2	; 0x21d2 <send_byte>
    2426:	88 23       	and	r24, r24
    2428:	09 f4       	brne	.+2      	; 0x242c <m_wii_open+0xa4>
    242a:	93 c0       	rjmp	.+294    	; 0x2552 <m_wii_open+0x1ca>
    242c:	0e 94 2b 11 	call	0x2256	; 0x2256 <end>
    2430:	83 ec       	ldi	r24, 0xC3	; 195
    2432:	99 e0       	ldi	r25, 0x09	; 9
    2434:	01 97       	sbiw	r24, 0x01	; 1
    2436:	f1 f7       	brne	.-4      	; 0x2434 <m_wii_open+0xac>
    2438:	00 c0       	rjmp	.+0      	; 0x243a <m_wii_open+0xb2>
    243a:	00 00       	nop
    243c:	88 e5       	ldi	r24, 0x58	; 88
    243e:	0e 94 12 11 	call	0x2224	; 0x2224 <start_write>
    2442:	88 23       	and	r24, r24
    2444:	09 f4       	brne	.+2      	; 0x2448 <m_wii_open+0xc0>
    2446:	87 c0       	rjmp	.+270    	; 0x2556 <m_wii_open+0x1ce>
    2448:	87 e0       	ldi	r24, 0x07	; 7
    244a:	0e 94 e9 10 	call	0x21d2	; 0x21d2 <send_byte>
    244e:	88 23       	and	r24, r24
    2450:	09 f4       	brne	.+2      	; 0x2454 <m_wii_open+0xcc>
    2452:	83 c0       	rjmp	.+262    	; 0x255a <m_wii_open+0x1d2>
    2454:	80 e0       	ldi	r24, 0x00	; 0
    2456:	0e 94 e9 10 	call	0x21d2	; 0x21d2 <send_byte>
    245a:	88 23       	and	r24, r24
    245c:	09 f4       	brne	.+2      	; 0x2460 <m_wii_open+0xd8>
    245e:	7f c0       	rjmp	.+254    	; 0x255e <m_wii_open+0x1d6>
    2460:	81 e4       	ldi	r24, 0x41	; 65
    2462:	0e 94 e9 10 	call	0x21d2	; 0x21d2 <send_byte>
    2466:	88 23       	and	r24, r24
    2468:	09 f4       	brne	.+2      	; 0x246c <m_wii_open+0xe4>
    246a:	7b c0       	rjmp	.+246    	; 0x2562 <m_wii_open+0x1da>
    246c:	0e 94 2b 11 	call	0x2256	; 0x2256 <end>
    2470:	83 ec       	ldi	r24, 0xC3	; 195
    2472:	99 e0       	ldi	r25, 0x09	; 9
    2474:	01 97       	sbiw	r24, 0x01	; 1
    2476:	f1 f7       	brne	.-4      	; 0x2474 <m_wii_open+0xec>
    2478:	00 c0       	rjmp	.+0      	; 0x247a <m_wii_open+0xf2>
    247a:	00 00       	nop
    247c:	88 e5       	ldi	r24, 0x58	; 88
    247e:	0e 94 12 11 	call	0x2224	; 0x2224 <start_write>
    2482:	88 23       	and	r24, r24
    2484:	09 f4       	brne	.+2      	; 0x2488 <m_wii_open+0x100>
    2486:	6f c0       	rjmp	.+222    	; 0x2566 <m_wii_open+0x1de>
    2488:	8a e1       	ldi	r24, 0x1A	; 26
    248a:	0e 94 e9 10 	call	0x21d2	; 0x21d2 <send_byte>
    248e:	88 23       	and	r24, r24
    2490:	09 f4       	brne	.+2      	; 0x2494 <m_wii_open+0x10c>
    2492:	6b c0       	rjmp	.+214    	; 0x256a <m_wii_open+0x1e2>
    2494:	80 e4       	ldi	r24, 0x40	; 64
    2496:	0e 94 e9 10 	call	0x21d2	; 0x21d2 <send_byte>
    249a:	88 23       	and	r24, r24
    249c:	09 f4       	brne	.+2      	; 0x24a0 <m_wii_open+0x118>
    249e:	67 c0       	rjmp	.+206    	; 0x256e <m_wii_open+0x1e6>
    24a0:	80 e0       	ldi	r24, 0x00	; 0
    24a2:	0e 94 e9 10 	call	0x21d2	; 0x21d2 <send_byte>
    24a6:	88 23       	and	r24, r24
    24a8:	09 f4       	brne	.+2      	; 0x24ac <m_wii_open+0x124>
    24aa:	63 c0       	rjmp	.+198    	; 0x2572 <m_wii_open+0x1ea>
    24ac:	0e 94 2b 11 	call	0x2256	; 0x2256 <end>
    24b0:	83 ec       	ldi	r24, 0xC3	; 195
    24b2:	99 e0       	ldi	r25, 0x09	; 9
    24b4:	01 97       	sbiw	r24, 0x01	; 1
    24b6:	f1 f7       	brne	.-4      	; 0x24b4 <m_wii_open+0x12c>
    24b8:	00 c0       	rjmp	.+0      	; 0x24ba <m_wii_open+0x132>
    24ba:	00 00       	nop
    24bc:	88 e5       	ldi	r24, 0x58	; 88
    24be:	0e 94 12 11 	call	0x2224	; 0x2224 <start_write>
    24c2:	88 23       	and	r24, r24
    24c4:	09 f4       	brne	.+2      	; 0x24c8 <m_wii_open+0x140>
    24c6:	57 c0       	rjmp	.+174    	; 0x2576 <m_wii_open+0x1ee>
    24c8:	83 e3       	ldi	r24, 0x33	; 51
    24ca:	0e 94 e9 10 	call	0x21d2	; 0x21d2 <send_byte>
    24ce:	88 23       	and	r24, r24
    24d0:	09 f4       	brne	.+2      	; 0x24d4 <m_wii_open+0x14c>
    24d2:	53 c0       	rjmp	.+166    	; 0x257a <m_wii_open+0x1f2>
    24d4:	83 e0       	ldi	r24, 0x03	; 3
    24d6:	0e 94 e9 10 	call	0x21d2	; 0x21d2 <send_byte>
    24da:	88 23       	and	r24, r24
    24dc:	09 f4       	brne	.+2      	; 0x24e0 <m_wii_open+0x158>
    24de:	4f c0       	rjmp	.+158    	; 0x257e <m_wii_open+0x1f6>
    24e0:	0e 94 2b 11 	call	0x2256	; 0x2256 <end>
    24e4:	83 ec       	ldi	r24, 0xC3	; 195
    24e6:	99 e0       	ldi	r25, 0x09	; 9
    24e8:	01 97       	sbiw	r24, 0x01	; 1
    24ea:	f1 f7       	brne	.-4      	; 0x24e8 <m_wii_open+0x160>
    24ec:	00 c0       	rjmp	.+0      	; 0x24ee <m_wii_open+0x166>
    24ee:	00 00       	nop
    24f0:	88 e5       	ldi	r24, 0x58	; 88
    24f2:	0e 94 12 11 	call	0x2224	; 0x2224 <start_write>
    24f6:	88 23       	and	r24, r24
    24f8:	09 f4       	brne	.+2      	; 0x24fc <m_wii_open+0x174>
    24fa:	43 c0       	rjmp	.+134    	; 0x2582 <m_wii_open+0x1fa>
    24fc:	80 e3       	ldi	r24, 0x30	; 48
    24fe:	0e 94 e9 10 	call	0x21d2	; 0x21d2 <send_byte>
    2502:	88 23       	and	r24, r24
    2504:	09 f4       	brne	.+2      	; 0x2508 <m_wii_open+0x180>
    2506:	3f c0       	rjmp	.+126    	; 0x2586 <m_wii_open+0x1fe>
    2508:	88 e0       	ldi	r24, 0x08	; 8
    250a:	0e 94 e9 10 	call	0x21d2	; 0x21d2 <send_byte>
    250e:	88 23       	and	r24, r24
    2510:	e1 f1       	breq	.+120    	; 0x258a <m_wii_open+0x202>
    2512:	0e 94 2b 11 	call	0x2256	; 0x2256 <end>
    2516:	83 ec       	ldi	r24, 0xC3	; 195
    2518:	99 e0       	ldi	r25, 0x09	; 9
    251a:	01 97       	sbiw	r24, 0x01	; 1
    251c:	f1 f7       	brne	.-4      	; 0x251a <m_wii_open+0x192>
    251e:	00 c0       	rjmp	.+0      	; 0x2520 <m_wii_open+0x198>
    2520:	00 00       	nop
    2522:	81 e0       	ldi	r24, 0x01	; 1
    2524:	08 95       	ret
    2526:	80 e0       	ldi	r24, 0x00	; 0
    2528:	08 95       	ret
    252a:	80 e0       	ldi	r24, 0x00	; 0
    252c:	08 95       	ret
    252e:	80 e0       	ldi	r24, 0x00	; 0
    2530:	08 95       	ret
    2532:	80 e0       	ldi	r24, 0x00	; 0
    2534:	08 95       	ret
    2536:	80 e0       	ldi	r24, 0x00	; 0
    2538:	08 95       	ret
    253a:	80 e0       	ldi	r24, 0x00	; 0
    253c:	08 95       	ret
    253e:	80 e0       	ldi	r24, 0x00	; 0
    2540:	08 95       	ret
    2542:	80 e0       	ldi	r24, 0x00	; 0
    2544:	08 95       	ret
    2546:	80 e0       	ldi	r24, 0x00	; 0
    2548:	08 95       	ret
    254a:	80 e0       	ldi	r24, 0x00	; 0
    254c:	08 95       	ret
    254e:	80 e0       	ldi	r24, 0x00	; 0
    2550:	08 95       	ret
    2552:	80 e0       	ldi	r24, 0x00	; 0
    2554:	08 95       	ret
    2556:	80 e0       	ldi	r24, 0x00	; 0
    2558:	08 95       	ret
    255a:	80 e0       	ldi	r24, 0x00	; 0
    255c:	08 95       	ret
    255e:	80 e0       	ldi	r24, 0x00	; 0
    2560:	08 95       	ret
    2562:	80 e0       	ldi	r24, 0x00	; 0
    2564:	08 95       	ret
    2566:	80 e0       	ldi	r24, 0x00	; 0
    2568:	08 95       	ret
    256a:	80 e0       	ldi	r24, 0x00	; 0
    256c:	08 95       	ret
    256e:	80 e0       	ldi	r24, 0x00	; 0
    2570:	08 95       	ret
    2572:	80 e0       	ldi	r24, 0x00	; 0
    2574:	08 95       	ret
    2576:	80 e0       	ldi	r24, 0x00	; 0
    2578:	08 95       	ret
    257a:	80 e0       	ldi	r24, 0x00	; 0
    257c:	08 95       	ret
    257e:	80 e0       	ldi	r24, 0x00	; 0
    2580:	08 95       	ret
    2582:	80 e0       	ldi	r24, 0x00	; 0
    2584:	08 95       	ret
    2586:	80 e0       	ldi	r24, 0x00	; 0
    2588:	08 95       	ret
    258a:	80 e0       	ldi	r24, 0x00	; 0
    258c:	08 95       	ret

0000258e <__subsf3>:
    258e:	50 58       	subi	r21, 0x80	; 128

00002590 <__addsf3>:
    2590:	bb 27       	eor	r27, r27
    2592:	aa 27       	eor	r26, r26
    2594:	0e d0       	rcall	.+28     	; 0x25b2 <__addsf3x>
    2596:	58 c2       	rjmp	.+1200   	; 0x2a48 <__fp_round>
    2598:	21 d2       	rcall	.+1090   	; 0x29dc <__fp_pscA>
    259a:	30 f0       	brcs	.+12     	; 0x25a8 <__addsf3+0x18>
    259c:	26 d2       	rcall	.+1100   	; 0x29ea <__fp_pscB>
    259e:	20 f0       	brcs	.+8      	; 0x25a8 <__addsf3+0x18>
    25a0:	31 f4       	brne	.+12     	; 0x25ae <__addsf3+0x1e>
    25a2:	9f 3f       	cpi	r25, 0xFF	; 255
    25a4:	11 f4       	brne	.+4      	; 0x25aa <__addsf3+0x1a>
    25a6:	1e f4       	brtc	.+6      	; 0x25ae <__addsf3+0x1e>
    25a8:	f1 c1       	rjmp	.+994    	; 0x298c <__fp_nan>
    25aa:	0e f4       	brtc	.+2      	; 0x25ae <__addsf3+0x1e>
    25ac:	e0 95       	com	r30
    25ae:	e7 fb       	bst	r30, 7
    25b0:	e7 c1       	rjmp	.+974    	; 0x2980 <__fp_inf>

000025b2 <__addsf3x>:
    25b2:	e9 2f       	mov	r30, r25
    25b4:	6b d2       	rcall	.+1238   	; 0x2a8c <__fp_split3>
    25b6:	80 f3       	brcs	.-32     	; 0x2598 <__addsf3+0x8>
    25b8:	ba 17       	cp	r27, r26
    25ba:	62 07       	cpc	r22, r18
    25bc:	73 07       	cpc	r23, r19
    25be:	84 07       	cpc	r24, r20
    25c0:	95 07       	cpc	r25, r21
    25c2:	18 f0       	brcs	.+6      	; 0x25ca <__addsf3x+0x18>
    25c4:	71 f4       	brne	.+28     	; 0x25e2 <__addsf3x+0x30>
    25c6:	9e f5       	brtc	.+102    	; 0x262e <__addsf3x+0x7c>
    25c8:	83 c2       	rjmp	.+1286   	; 0x2ad0 <__fp_zero>
    25ca:	0e f4       	brtc	.+2      	; 0x25ce <__addsf3x+0x1c>
    25cc:	e0 95       	com	r30
    25ce:	0b 2e       	mov	r0, r27
    25d0:	ba 2f       	mov	r27, r26
    25d2:	a0 2d       	mov	r26, r0
    25d4:	0b 01       	movw	r0, r22
    25d6:	b9 01       	movw	r22, r18
    25d8:	90 01       	movw	r18, r0
    25da:	0c 01       	movw	r0, r24
    25dc:	ca 01       	movw	r24, r20
    25de:	a0 01       	movw	r20, r0
    25e0:	11 24       	eor	r1, r1
    25e2:	ff 27       	eor	r31, r31
    25e4:	59 1b       	sub	r21, r25
    25e6:	99 f0       	breq	.+38     	; 0x260e <__addsf3x+0x5c>
    25e8:	59 3f       	cpi	r21, 0xF9	; 249
    25ea:	50 f4       	brcc	.+20     	; 0x2600 <__addsf3x+0x4e>
    25ec:	50 3e       	cpi	r21, 0xE0	; 224
    25ee:	68 f1       	brcs	.+90     	; 0x264a <__addsf3x+0x98>
    25f0:	1a 16       	cp	r1, r26
    25f2:	f0 40       	sbci	r31, 0x00	; 0
    25f4:	a2 2f       	mov	r26, r18
    25f6:	23 2f       	mov	r18, r19
    25f8:	34 2f       	mov	r19, r20
    25fa:	44 27       	eor	r20, r20
    25fc:	58 5f       	subi	r21, 0xF8	; 248
    25fe:	f3 cf       	rjmp	.-26     	; 0x25e6 <__addsf3x+0x34>
    2600:	46 95       	lsr	r20
    2602:	37 95       	ror	r19
    2604:	27 95       	ror	r18
    2606:	a7 95       	ror	r26
    2608:	f0 40       	sbci	r31, 0x00	; 0
    260a:	53 95       	inc	r21
    260c:	c9 f7       	brne	.-14     	; 0x2600 <__addsf3x+0x4e>
    260e:	7e f4       	brtc	.+30     	; 0x262e <__addsf3x+0x7c>
    2610:	1f 16       	cp	r1, r31
    2612:	ba 0b       	sbc	r27, r26
    2614:	62 0b       	sbc	r22, r18
    2616:	73 0b       	sbc	r23, r19
    2618:	84 0b       	sbc	r24, r20
    261a:	ba f0       	brmi	.+46     	; 0x264a <__addsf3x+0x98>
    261c:	91 50       	subi	r25, 0x01	; 1
    261e:	a1 f0       	breq	.+40     	; 0x2648 <__addsf3x+0x96>
    2620:	ff 0f       	add	r31, r31
    2622:	bb 1f       	adc	r27, r27
    2624:	66 1f       	adc	r22, r22
    2626:	77 1f       	adc	r23, r23
    2628:	88 1f       	adc	r24, r24
    262a:	c2 f7       	brpl	.-16     	; 0x261c <__addsf3x+0x6a>
    262c:	0e c0       	rjmp	.+28     	; 0x264a <__addsf3x+0x98>
    262e:	ba 0f       	add	r27, r26
    2630:	62 1f       	adc	r22, r18
    2632:	73 1f       	adc	r23, r19
    2634:	84 1f       	adc	r24, r20
    2636:	48 f4       	brcc	.+18     	; 0x264a <__addsf3x+0x98>
    2638:	87 95       	ror	r24
    263a:	77 95       	ror	r23
    263c:	67 95       	ror	r22
    263e:	b7 95       	ror	r27
    2640:	f7 95       	ror	r31
    2642:	9e 3f       	cpi	r25, 0xFE	; 254
    2644:	08 f0       	brcs	.+2      	; 0x2648 <__addsf3x+0x96>
    2646:	b3 cf       	rjmp	.-154    	; 0x25ae <__addsf3+0x1e>
    2648:	93 95       	inc	r25
    264a:	88 0f       	add	r24, r24
    264c:	08 f0       	brcs	.+2      	; 0x2650 <__addsf3x+0x9e>
    264e:	99 27       	eor	r25, r25
    2650:	ee 0f       	add	r30, r30
    2652:	97 95       	ror	r25
    2654:	87 95       	ror	r24
    2656:	08 95       	ret
    2658:	c1 d1       	rcall	.+898    	; 0x29dc <__fp_pscA>
    265a:	58 f0       	brcs	.+22     	; 0x2672 <__addsf3x+0xc0>
    265c:	80 e8       	ldi	r24, 0x80	; 128
    265e:	91 e0       	ldi	r25, 0x01	; 1
    2660:	09 f4       	brne	.+2      	; 0x2664 <__addsf3x+0xb2>
    2662:	9e ef       	ldi	r25, 0xFE	; 254
    2664:	c2 d1       	rcall	.+900    	; 0x29ea <__fp_pscB>
    2666:	28 f0       	brcs	.+10     	; 0x2672 <__addsf3x+0xc0>
    2668:	40 e8       	ldi	r20, 0x80	; 128
    266a:	51 e0       	ldi	r21, 0x01	; 1
    266c:	59 f4       	brne	.+22     	; 0x2684 <atan2+0xe>
    266e:	5e ef       	ldi	r21, 0xFE	; 254
    2670:	09 c0       	rjmp	.+18     	; 0x2684 <atan2+0xe>
    2672:	8c c1       	rjmp	.+792    	; 0x298c <__fp_nan>
    2674:	2d c2       	rjmp	.+1114   	; 0x2ad0 <__fp_zero>

00002676 <atan2>:
    2676:	e9 2f       	mov	r30, r25
    2678:	e0 78       	andi	r30, 0x80	; 128
    267a:	08 d2       	rcall	.+1040   	; 0x2a8c <__fp_split3>
    267c:	68 f3       	brcs	.-38     	; 0x2658 <__addsf3x+0xa6>
    267e:	09 2e       	mov	r0, r25
    2680:	05 2a       	or	r0, r21
    2682:	c1 f3       	breq	.-16     	; 0x2674 <__addsf3x+0xc2>
    2684:	26 17       	cp	r18, r22
    2686:	37 07       	cpc	r19, r23
    2688:	48 07       	cpc	r20, r24
    268a:	59 07       	cpc	r21, r25
    268c:	38 f0       	brcs	.+14     	; 0x269c <atan2+0x26>
    268e:	0e 2e       	mov	r0, r30
    2690:	07 f8       	bld	r0, 7
    2692:	e0 25       	eor	r30, r0
    2694:	69 f0       	breq	.+26     	; 0x26b0 <atan2+0x3a>
    2696:	e0 25       	eor	r30, r0
    2698:	e0 64       	ori	r30, 0x40	; 64
    269a:	0a c0       	rjmp	.+20     	; 0x26b0 <atan2+0x3a>
    269c:	ef 63       	ori	r30, 0x3F	; 63
    269e:	07 f8       	bld	r0, 7
    26a0:	00 94       	com	r0
    26a2:	07 fa       	bst	r0, 7
    26a4:	db 01       	movw	r26, r22
    26a6:	b9 01       	movw	r22, r18
    26a8:	9d 01       	movw	r18, r26
    26aa:	dc 01       	movw	r26, r24
    26ac:	ca 01       	movw	r24, r20
    26ae:	ad 01       	movw	r20, r26
    26b0:	ef 93       	push	r30
    26b2:	4a d0       	rcall	.+148    	; 0x2748 <__divsf3_pse>
    26b4:	c9 d1       	rcall	.+914    	; 0x2a48 <__fp_round>
    26b6:	0a d0       	rcall	.+20     	; 0x26cc <atan>
    26b8:	5f 91       	pop	r21
    26ba:	55 23       	and	r21, r21
    26bc:	31 f0       	breq	.+12     	; 0x26ca <atan2+0x54>
    26be:	2b ed       	ldi	r18, 0xDB	; 219
    26c0:	3f e0       	ldi	r19, 0x0F	; 15
    26c2:	49 e4       	ldi	r20, 0x49	; 73
    26c4:	50 fd       	sbrc	r21, 0
    26c6:	49 ec       	ldi	r20, 0xC9	; 201
    26c8:	63 cf       	rjmp	.-314    	; 0x2590 <__addsf3>
    26ca:	08 95       	ret

000026cc <atan>:
    26cc:	df 93       	push	r29
    26ce:	dd 27       	eor	r29, r29
    26d0:	b9 2f       	mov	r27, r25
    26d2:	bf 77       	andi	r27, 0x7F	; 127
    26d4:	40 e8       	ldi	r20, 0x80	; 128
    26d6:	5f e3       	ldi	r21, 0x3F	; 63
    26d8:	16 16       	cp	r1, r22
    26da:	17 06       	cpc	r1, r23
    26dc:	48 07       	cpc	r20, r24
    26de:	5b 07       	cpc	r21, r27
    26e0:	10 f4       	brcc	.+4      	; 0x26e6 <atan+0x1a>
    26e2:	d9 2f       	mov	r29, r25
    26e4:	00 d2       	rcall	.+1024   	; 0x2ae6 <inverse>
    26e6:	9f 93       	push	r25
    26e8:	8f 93       	push	r24
    26ea:	7f 93       	push	r23
    26ec:	6f 93       	push	r22
    26ee:	16 d3       	rcall	.+1580   	; 0x2d1c <square>
    26f0:	ec ea       	ldi	r30, 0xAC	; 172
    26f2:	f0 e0       	ldi	r31, 0x00	; 0
    26f4:	4e d1       	rcall	.+668    	; 0x2992 <__fp_powser>
    26f6:	a8 d1       	rcall	.+848    	; 0x2a48 <__fp_round>
    26f8:	2f 91       	pop	r18
    26fa:	3f 91       	pop	r19
    26fc:	4f 91       	pop	r20
    26fe:	5f 91       	pop	r21
    2700:	6e d2       	rcall	.+1244   	; 0x2bde <__mulsf3x>
    2702:	dd 23       	and	r29, r29
    2704:	49 f0       	breq	.+18     	; 0x2718 <atan+0x4c>
    2706:	90 58       	subi	r25, 0x80	; 128
    2708:	a2 ea       	ldi	r26, 0xA2	; 162
    270a:	2a ed       	ldi	r18, 0xDA	; 218
    270c:	3f e0       	ldi	r19, 0x0F	; 15
    270e:	49 ec       	ldi	r20, 0xC9	; 201
    2710:	5f e3       	ldi	r21, 0x3F	; 63
    2712:	d0 78       	andi	r29, 0x80	; 128
    2714:	5d 27       	eor	r21, r29
    2716:	4d df       	rcall	.-358    	; 0x25b2 <__addsf3x>
    2718:	df 91       	pop	r29
    271a:	96 c1       	rjmp	.+812    	; 0x2a48 <__fp_round>

0000271c <__cmpsf2>:
    271c:	0d d1       	rcall	.+538    	; 0x2938 <__fp_cmp>
    271e:	08 f4       	brcc	.+2      	; 0x2722 <__cmpsf2+0x6>
    2720:	81 e0       	ldi	r24, 0x01	; 1
    2722:	08 95       	ret

00002724 <cos>:
    2724:	6a d1       	rcall	.+724    	; 0x29fa <__fp_rempio2>
    2726:	e3 95       	inc	r30
    2728:	a0 c1       	rjmp	.+832    	; 0x2a6a <__fp_sinus>

0000272a <__divsf3>:
    272a:	0c d0       	rcall	.+24     	; 0x2744 <__divsf3x>
    272c:	8d c1       	rjmp	.+794    	; 0x2a48 <__fp_round>
    272e:	5d d1       	rcall	.+698    	; 0x29ea <__fp_pscB>
    2730:	40 f0       	brcs	.+16     	; 0x2742 <__divsf3+0x18>
    2732:	54 d1       	rcall	.+680    	; 0x29dc <__fp_pscA>
    2734:	30 f0       	brcs	.+12     	; 0x2742 <__divsf3+0x18>
    2736:	21 f4       	brne	.+8      	; 0x2740 <__divsf3+0x16>
    2738:	5f 3f       	cpi	r21, 0xFF	; 255
    273a:	19 f0       	breq	.+6      	; 0x2742 <__divsf3+0x18>
    273c:	21 c1       	rjmp	.+578    	; 0x2980 <__fp_inf>
    273e:	51 11       	cpse	r21, r1
    2740:	c8 c1       	rjmp	.+912    	; 0x2ad2 <__fp_szero>
    2742:	24 c1       	rjmp	.+584    	; 0x298c <__fp_nan>

00002744 <__divsf3x>:
    2744:	a3 d1       	rcall	.+838    	; 0x2a8c <__fp_split3>
    2746:	98 f3       	brcs	.-26     	; 0x272e <__divsf3+0x4>

00002748 <__divsf3_pse>:
    2748:	99 23       	and	r25, r25
    274a:	c9 f3       	breq	.-14     	; 0x273e <__divsf3+0x14>
    274c:	55 23       	and	r21, r21
    274e:	b1 f3       	breq	.-20     	; 0x273c <__divsf3+0x12>
    2750:	95 1b       	sub	r25, r21
    2752:	55 0b       	sbc	r21, r21
    2754:	bb 27       	eor	r27, r27
    2756:	aa 27       	eor	r26, r26
    2758:	62 17       	cp	r22, r18
    275a:	73 07       	cpc	r23, r19
    275c:	84 07       	cpc	r24, r20
    275e:	38 f0       	brcs	.+14     	; 0x276e <__divsf3_pse+0x26>
    2760:	9f 5f       	subi	r25, 0xFF	; 255
    2762:	5f 4f       	sbci	r21, 0xFF	; 255
    2764:	22 0f       	add	r18, r18
    2766:	33 1f       	adc	r19, r19
    2768:	44 1f       	adc	r20, r20
    276a:	aa 1f       	adc	r26, r26
    276c:	a9 f3       	breq	.-22     	; 0x2758 <__divsf3_pse+0x10>
    276e:	33 d0       	rcall	.+102    	; 0x27d6 <__divsf3_pse+0x8e>
    2770:	0e 2e       	mov	r0, r30
    2772:	3a f0       	brmi	.+14     	; 0x2782 <__divsf3_pse+0x3a>
    2774:	e0 e8       	ldi	r30, 0x80	; 128
    2776:	30 d0       	rcall	.+96     	; 0x27d8 <__divsf3_pse+0x90>
    2778:	91 50       	subi	r25, 0x01	; 1
    277a:	50 40       	sbci	r21, 0x00	; 0
    277c:	e6 95       	lsr	r30
    277e:	00 1c       	adc	r0, r0
    2780:	ca f7       	brpl	.-14     	; 0x2774 <__divsf3_pse+0x2c>
    2782:	29 d0       	rcall	.+82     	; 0x27d6 <__divsf3_pse+0x8e>
    2784:	fe 2f       	mov	r31, r30
    2786:	27 d0       	rcall	.+78     	; 0x27d6 <__divsf3_pse+0x8e>
    2788:	66 0f       	add	r22, r22
    278a:	77 1f       	adc	r23, r23
    278c:	88 1f       	adc	r24, r24
    278e:	bb 1f       	adc	r27, r27
    2790:	26 17       	cp	r18, r22
    2792:	37 07       	cpc	r19, r23
    2794:	48 07       	cpc	r20, r24
    2796:	ab 07       	cpc	r26, r27
    2798:	b0 e8       	ldi	r27, 0x80	; 128
    279a:	09 f0       	breq	.+2      	; 0x279e <__divsf3_pse+0x56>
    279c:	bb 0b       	sbc	r27, r27
    279e:	80 2d       	mov	r24, r0
    27a0:	bf 01       	movw	r22, r30
    27a2:	ff 27       	eor	r31, r31
    27a4:	93 58       	subi	r25, 0x83	; 131
    27a6:	5f 4f       	sbci	r21, 0xFF	; 255
    27a8:	2a f0       	brmi	.+10     	; 0x27b4 <__divsf3_pse+0x6c>
    27aa:	9e 3f       	cpi	r25, 0xFE	; 254
    27ac:	51 05       	cpc	r21, r1
    27ae:	68 f0       	brcs	.+26     	; 0x27ca <__divsf3_pse+0x82>
    27b0:	e7 c0       	rjmp	.+462    	; 0x2980 <__fp_inf>
    27b2:	8f c1       	rjmp	.+798    	; 0x2ad2 <__fp_szero>
    27b4:	5f 3f       	cpi	r21, 0xFF	; 255
    27b6:	ec f3       	brlt	.-6      	; 0x27b2 <__divsf3_pse+0x6a>
    27b8:	98 3e       	cpi	r25, 0xE8	; 232
    27ba:	dc f3       	brlt	.-10     	; 0x27b2 <__divsf3_pse+0x6a>
    27bc:	86 95       	lsr	r24
    27be:	77 95       	ror	r23
    27c0:	67 95       	ror	r22
    27c2:	b7 95       	ror	r27
    27c4:	f7 95       	ror	r31
    27c6:	9f 5f       	subi	r25, 0xFF	; 255
    27c8:	c9 f7       	brne	.-14     	; 0x27bc <__divsf3_pse+0x74>
    27ca:	88 0f       	add	r24, r24
    27cc:	91 1d       	adc	r25, r1
    27ce:	96 95       	lsr	r25
    27d0:	87 95       	ror	r24
    27d2:	97 f9       	bld	r25, 7
    27d4:	08 95       	ret
    27d6:	e1 e0       	ldi	r30, 0x01	; 1
    27d8:	66 0f       	add	r22, r22
    27da:	77 1f       	adc	r23, r23
    27dc:	88 1f       	adc	r24, r24
    27de:	bb 1f       	adc	r27, r27
    27e0:	62 17       	cp	r22, r18
    27e2:	73 07       	cpc	r23, r19
    27e4:	84 07       	cpc	r24, r20
    27e6:	ba 07       	cpc	r27, r26
    27e8:	20 f0       	brcs	.+8      	; 0x27f2 <__divsf3_pse+0xaa>
    27ea:	62 1b       	sub	r22, r18
    27ec:	73 0b       	sbc	r23, r19
    27ee:	84 0b       	sbc	r24, r20
    27f0:	ba 0b       	sbc	r27, r26
    27f2:	ee 1f       	adc	r30, r30
    27f4:	88 f7       	brcc	.-30     	; 0x27d8 <__divsf3_pse+0x90>
    27f6:	e0 95       	com	r30
    27f8:	08 95       	ret
    27fa:	19 f4       	brne	.+6      	; 0x2802 <__divsf3_pse+0xba>
    27fc:	0e f0       	brts	.+2      	; 0x2800 <__divsf3_pse+0xb8>
    27fe:	c0 c0       	rjmp	.+384    	; 0x2980 <__fp_inf>
    2800:	67 c1       	rjmp	.+718    	; 0x2ad0 <__fp_zero>
    2802:	c4 c0       	rjmp	.+392    	; 0x298c <__fp_nan>

00002804 <exp>:
    2804:	4b d1       	rcall	.+662    	; 0x2a9c <__fp_splitA>
    2806:	c8 f3       	brcs	.-14     	; 0x27fa <__divsf3_pse+0xb2>
    2808:	96 38       	cpi	r25, 0x86	; 134
    280a:	c0 f7       	brcc	.-16     	; 0x27fc <__divsf3_pse+0xb4>
    280c:	07 f8       	bld	r0, 7
    280e:	0f 92       	push	r0
    2810:	e8 94       	clt
    2812:	2b e3       	ldi	r18, 0x3B	; 59
    2814:	3a ea       	ldi	r19, 0xAA	; 170
    2816:	48 eb       	ldi	r20, 0xB8	; 184
    2818:	5f e7       	ldi	r21, 0x7F	; 127
    281a:	e3 d1       	rcall	.+966    	; 0x2be2 <__mulsf3_pse>
    281c:	0f 92       	push	r0
    281e:	0f 92       	push	r0
    2820:	0f 92       	push	r0
    2822:	4d b7       	in	r20, 0x3d	; 61
    2824:	5e b7       	in	r21, 0x3e	; 62
    2826:	0f 92       	push	r0
    2828:	9b d1       	rcall	.+822    	; 0x2b60 <modf>
    282a:	e9 ed       	ldi	r30, 0xD9	; 217
    282c:	f0 e0       	ldi	r31, 0x00	; 0
    282e:	b1 d0       	rcall	.+354    	; 0x2992 <__fp_powser>
    2830:	4f 91       	pop	r20
    2832:	5f 91       	pop	r21
    2834:	ef 91       	pop	r30
    2836:	ff 91       	pop	r31
    2838:	e5 95       	asr	r30
    283a:	ee 1f       	adc	r30, r30
    283c:	ff 1f       	adc	r31, r31
    283e:	49 f0       	breq	.+18     	; 0x2852 <exp+0x4e>
    2840:	fe 57       	subi	r31, 0x7E	; 126
    2842:	e0 68       	ori	r30, 0x80	; 128
    2844:	44 27       	eor	r20, r20
    2846:	ee 0f       	add	r30, r30
    2848:	44 1f       	adc	r20, r20
    284a:	fa 95       	dec	r31
    284c:	e1 f7       	brne	.-8      	; 0x2846 <exp+0x42>
    284e:	41 95       	neg	r20
    2850:	55 0b       	sbc	r21, r21
    2852:	52 d1       	rcall	.+676    	; 0x2af8 <ldexp>
    2854:	0f 90       	pop	r0
    2856:	07 fe       	sbrs	r0, 7
    2858:	46 c1       	rjmp	.+652    	; 0x2ae6 <inverse>
    285a:	08 95       	ret

0000285c <__fixsfsi>:
    285c:	04 d0       	rcall	.+8      	; 0x2866 <__fixunssfsi>
    285e:	68 94       	set
    2860:	b1 11       	cpse	r27, r1
    2862:	37 c1       	rjmp	.+622    	; 0x2ad2 <__fp_szero>
    2864:	08 95       	ret

00002866 <__fixunssfsi>:
    2866:	1a d1       	rcall	.+564    	; 0x2a9c <__fp_splitA>
    2868:	88 f0       	brcs	.+34     	; 0x288c <__fixunssfsi+0x26>
    286a:	9f 57       	subi	r25, 0x7F	; 127
    286c:	90 f0       	brcs	.+36     	; 0x2892 <__fixunssfsi+0x2c>
    286e:	b9 2f       	mov	r27, r25
    2870:	99 27       	eor	r25, r25
    2872:	b7 51       	subi	r27, 0x17	; 23
    2874:	a0 f0       	brcs	.+40     	; 0x289e <__fixunssfsi+0x38>
    2876:	d1 f0       	breq	.+52     	; 0x28ac <__fixunssfsi+0x46>
    2878:	66 0f       	add	r22, r22
    287a:	77 1f       	adc	r23, r23
    287c:	88 1f       	adc	r24, r24
    287e:	99 1f       	adc	r25, r25
    2880:	1a f0       	brmi	.+6      	; 0x2888 <__fixunssfsi+0x22>
    2882:	ba 95       	dec	r27
    2884:	c9 f7       	brne	.-14     	; 0x2878 <__fixunssfsi+0x12>
    2886:	12 c0       	rjmp	.+36     	; 0x28ac <__fixunssfsi+0x46>
    2888:	b1 30       	cpi	r27, 0x01	; 1
    288a:	81 f0       	breq	.+32     	; 0x28ac <__fixunssfsi+0x46>
    288c:	21 d1       	rcall	.+578    	; 0x2ad0 <__fp_zero>
    288e:	b1 e0       	ldi	r27, 0x01	; 1
    2890:	08 95       	ret
    2892:	1e c1       	rjmp	.+572    	; 0x2ad0 <__fp_zero>
    2894:	67 2f       	mov	r22, r23
    2896:	78 2f       	mov	r23, r24
    2898:	88 27       	eor	r24, r24
    289a:	b8 5f       	subi	r27, 0xF8	; 248
    289c:	39 f0       	breq	.+14     	; 0x28ac <__fixunssfsi+0x46>
    289e:	b9 3f       	cpi	r27, 0xF9	; 249
    28a0:	cc f3       	brlt	.-14     	; 0x2894 <__fixunssfsi+0x2e>
    28a2:	86 95       	lsr	r24
    28a4:	77 95       	ror	r23
    28a6:	67 95       	ror	r22
    28a8:	b3 95       	inc	r27
    28aa:	d9 f7       	brne	.-10     	; 0x28a2 <__fixunssfsi+0x3c>
    28ac:	3e f4       	brtc	.+14     	; 0x28bc <__fixunssfsi+0x56>
    28ae:	90 95       	com	r25
    28b0:	80 95       	com	r24
    28b2:	70 95       	com	r23
    28b4:	61 95       	neg	r22
    28b6:	7f 4f       	sbci	r23, 0xFF	; 255
    28b8:	8f 4f       	sbci	r24, 0xFF	; 255
    28ba:	9f 4f       	sbci	r25, 0xFF	; 255
    28bc:	08 95       	ret

000028be <__floatunsisf>:
    28be:	e8 94       	clt
    28c0:	09 c0       	rjmp	.+18     	; 0x28d4 <__floatsisf+0x12>

000028c2 <__floatsisf>:
    28c2:	97 fb       	bst	r25, 7
    28c4:	3e f4       	brtc	.+14     	; 0x28d4 <__floatsisf+0x12>
    28c6:	90 95       	com	r25
    28c8:	80 95       	com	r24
    28ca:	70 95       	com	r23
    28cc:	61 95       	neg	r22
    28ce:	7f 4f       	sbci	r23, 0xFF	; 255
    28d0:	8f 4f       	sbci	r24, 0xFF	; 255
    28d2:	9f 4f       	sbci	r25, 0xFF	; 255
    28d4:	99 23       	and	r25, r25
    28d6:	a9 f0       	breq	.+42     	; 0x2902 <__floatsisf+0x40>
    28d8:	f9 2f       	mov	r31, r25
    28da:	96 e9       	ldi	r25, 0x96	; 150
    28dc:	bb 27       	eor	r27, r27
    28de:	93 95       	inc	r25
    28e0:	f6 95       	lsr	r31
    28e2:	87 95       	ror	r24
    28e4:	77 95       	ror	r23
    28e6:	67 95       	ror	r22
    28e8:	b7 95       	ror	r27
    28ea:	f1 11       	cpse	r31, r1
    28ec:	f8 cf       	rjmp	.-16     	; 0x28de <__floatsisf+0x1c>
    28ee:	fa f4       	brpl	.+62     	; 0x292e <__floatsisf+0x6c>
    28f0:	bb 0f       	add	r27, r27
    28f2:	11 f4       	brne	.+4      	; 0x28f8 <__floatsisf+0x36>
    28f4:	60 ff       	sbrs	r22, 0
    28f6:	1b c0       	rjmp	.+54     	; 0x292e <__floatsisf+0x6c>
    28f8:	6f 5f       	subi	r22, 0xFF	; 255
    28fa:	7f 4f       	sbci	r23, 0xFF	; 255
    28fc:	8f 4f       	sbci	r24, 0xFF	; 255
    28fe:	9f 4f       	sbci	r25, 0xFF	; 255
    2900:	16 c0       	rjmp	.+44     	; 0x292e <__floatsisf+0x6c>
    2902:	88 23       	and	r24, r24
    2904:	11 f0       	breq	.+4      	; 0x290a <__floatsisf+0x48>
    2906:	96 e9       	ldi	r25, 0x96	; 150
    2908:	11 c0       	rjmp	.+34     	; 0x292c <__floatsisf+0x6a>
    290a:	77 23       	and	r23, r23
    290c:	21 f0       	breq	.+8      	; 0x2916 <__floatsisf+0x54>
    290e:	9e e8       	ldi	r25, 0x8E	; 142
    2910:	87 2f       	mov	r24, r23
    2912:	76 2f       	mov	r23, r22
    2914:	05 c0       	rjmp	.+10     	; 0x2920 <__floatsisf+0x5e>
    2916:	66 23       	and	r22, r22
    2918:	71 f0       	breq	.+28     	; 0x2936 <__floatsisf+0x74>
    291a:	96 e8       	ldi	r25, 0x86	; 134
    291c:	86 2f       	mov	r24, r22
    291e:	70 e0       	ldi	r23, 0x00	; 0
    2920:	60 e0       	ldi	r22, 0x00	; 0
    2922:	2a f0       	brmi	.+10     	; 0x292e <__floatsisf+0x6c>
    2924:	9a 95       	dec	r25
    2926:	66 0f       	add	r22, r22
    2928:	77 1f       	adc	r23, r23
    292a:	88 1f       	adc	r24, r24
    292c:	da f7       	brpl	.-10     	; 0x2924 <__floatsisf+0x62>
    292e:	88 0f       	add	r24, r24
    2930:	96 95       	lsr	r25
    2932:	87 95       	ror	r24
    2934:	97 f9       	bld	r25, 7
    2936:	08 95       	ret

00002938 <__fp_cmp>:
    2938:	99 0f       	add	r25, r25
    293a:	00 08       	sbc	r0, r0
    293c:	55 0f       	add	r21, r21
    293e:	aa 0b       	sbc	r26, r26
    2940:	e0 e8       	ldi	r30, 0x80	; 128
    2942:	fe ef       	ldi	r31, 0xFE	; 254
    2944:	16 16       	cp	r1, r22
    2946:	17 06       	cpc	r1, r23
    2948:	e8 07       	cpc	r30, r24
    294a:	f9 07       	cpc	r31, r25
    294c:	c0 f0       	brcs	.+48     	; 0x297e <__fp_cmp+0x46>
    294e:	12 16       	cp	r1, r18
    2950:	13 06       	cpc	r1, r19
    2952:	e4 07       	cpc	r30, r20
    2954:	f5 07       	cpc	r31, r21
    2956:	98 f0       	brcs	.+38     	; 0x297e <__fp_cmp+0x46>
    2958:	62 1b       	sub	r22, r18
    295a:	73 0b       	sbc	r23, r19
    295c:	84 0b       	sbc	r24, r20
    295e:	95 0b       	sbc	r25, r21
    2960:	39 f4       	brne	.+14     	; 0x2970 <__fp_cmp+0x38>
    2962:	0a 26       	eor	r0, r26
    2964:	61 f0       	breq	.+24     	; 0x297e <__fp_cmp+0x46>
    2966:	23 2b       	or	r18, r19
    2968:	24 2b       	or	r18, r20
    296a:	25 2b       	or	r18, r21
    296c:	21 f4       	brne	.+8      	; 0x2976 <__fp_cmp+0x3e>
    296e:	08 95       	ret
    2970:	0a 26       	eor	r0, r26
    2972:	09 f4       	brne	.+2      	; 0x2976 <__fp_cmp+0x3e>
    2974:	a1 40       	sbci	r26, 0x01	; 1
    2976:	a6 95       	lsr	r26
    2978:	8f ef       	ldi	r24, 0xFF	; 255
    297a:	81 1d       	adc	r24, r1
    297c:	81 1d       	adc	r24, r1
    297e:	08 95       	ret

00002980 <__fp_inf>:
    2980:	97 f9       	bld	r25, 7
    2982:	9f 67       	ori	r25, 0x7F	; 127
    2984:	80 e8       	ldi	r24, 0x80	; 128
    2986:	70 e0       	ldi	r23, 0x00	; 0
    2988:	60 e0       	ldi	r22, 0x00	; 0
    298a:	08 95       	ret

0000298c <__fp_nan>:
    298c:	9f ef       	ldi	r25, 0xFF	; 255
    298e:	80 ec       	ldi	r24, 0xC0	; 192
    2990:	08 95       	ret

00002992 <__fp_powser>:
    2992:	df 93       	push	r29
    2994:	cf 93       	push	r28
    2996:	1f 93       	push	r17
    2998:	0f 93       	push	r16
    299a:	ff 92       	push	r15
    299c:	ef 92       	push	r14
    299e:	df 92       	push	r13
    29a0:	7b 01       	movw	r14, r22
    29a2:	8c 01       	movw	r16, r24
    29a4:	68 94       	set
    29a6:	05 c0       	rjmp	.+10     	; 0x29b2 <__fp_powser+0x20>
    29a8:	da 2e       	mov	r13, r26
    29aa:	ef 01       	movw	r28, r30
    29ac:	18 d1       	rcall	.+560    	; 0x2bde <__mulsf3x>
    29ae:	fe 01       	movw	r30, r28
    29b0:	e8 94       	clt
    29b2:	a5 91       	lpm	r26, Z+
    29b4:	25 91       	lpm	r18, Z+
    29b6:	35 91       	lpm	r19, Z+
    29b8:	45 91       	lpm	r20, Z+
    29ba:	55 91       	lpm	r21, Z+
    29bc:	ae f3       	brts	.-22     	; 0x29a8 <__fp_powser+0x16>
    29be:	ef 01       	movw	r28, r30
    29c0:	f8 dd       	rcall	.-1040   	; 0x25b2 <__addsf3x>
    29c2:	fe 01       	movw	r30, r28
    29c4:	97 01       	movw	r18, r14
    29c6:	a8 01       	movw	r20, r16
    29c8:	da 94       	dec	r13
    29ca:	79 f7       	brne	.-34     	; 0x29aa <__fp_powser+0x18>
    29cc:	df 90       	pop	r13
    29ce:	ef 90       	pop	r14
    29d0:	ff 90       	pop	r15
    29d2:	0f 91       	pop	r16
    29d4:	1f 91       	pop	r17
    29d6:	cf 91       	pop	r28
    29d8:	df 91       	pop	r29
    29da:	08 95       	ret

000029dc <__fp_pscA>:
    29dc:	00 24       	eor	r0, r0
    29de:	0a 94       	dec	r0
    29e0:	16 16       	cp	r1, r22
    29e2:	17 06       	cpc	r1, r23
    29e4:	18 06       	cpc	r1, r24
    29e6:	09 06       	cpc	r0, r25
    29e8:	08 95       	ret

000029ea <__fp_pscB>:
    29ea:	00 24       	eor	r0, r0
    29ec:	0a 94       	dec	r0
    29ee:	12 16       	cp	r1, r18
    29f0:	13 06       	cpc	r1, r19
    29f2:	14 06       	cpc	r1, r20
    29f4:	05 06       	cpc	r0, r21
    29f6:	08 95       	ret
    29f8:	c9 cf       	rjmp	.-110    	; 0x298c <__fp_nan>

000029fa <__fp_rempio2>:
    29fa:	50 d0       	rcall	.+160    	; 0x2a9c <__fp_splitA>
    29fc:	e8 f3       	brcs	.-6      	; 0x29f8 <__fp_pscB+0xe>
    29fe:	e8 94       	clt
    2a00:	e0 e0       	ldi	r30, 0x00	; 0
    2a02:	bb 27       	eor	r27, r27
    2a04:	9f 57       	subi	r25, 0x7F	; 127
    2a06:	f0 f0       	brcs	.+60     	; 0x2a44 <__fp_rempio2+0x4a>
    2a08:	2a ed       	ldi	r18, 0xDA	; 218
    2a0a:	3f e0       	ldi	r19, 0x0F	; 15
    2a0c:	49 ec       	ldi	r20, 0xC9	; 201
    2a0e:	06 c0       	rjmp	.+12     	; 0x2a1c <__fp_rempio2+0x22>
    2a10:	ee 0f       	add	r30, r30
    2a12:	bb 0f       	add	r27, r27
    2a14:	66 1f       	adc	r22, r22
    2a16:	77 1f       	adc	r23, r23
    2a18:	88 1f       	adc	r24, r24
    2a1a:	28 f0       	brcs	.+10     	; 0x2a26 <__fp_rempio2+0x2c>
    2a1c:	b2 3a       	cpi	r27, 0xA2	; 162
    2a1e:	62 07       	cpc	r22, r18
    2a20:	73 07       	cpc	r23, r19
    2a22:	84 07       	cpc	r24, r20
    2a24:	28 f0       	brcs	.+10     	; 0x2a30 <__fp_rempio2+0x36>
    2a26:	b2 5a       	subi	r27, 0xA2	; 162
    2a28:	62 0b       	sbc	r22, r18
    2a2a:	73 0b       	sbc	r23, r19
    2a2c:	84 0b       	sbc	r24, r20
    2a2e:	e3 95       	inc	r30
    2a30:	9a 95       	dec	r25
    2a32:	72 f7       	brpl	.-36     	; 0x2a10 <__fp_rempio2+0x16>
    2a34:	80 38       	cpi	r24, 0x80	; 128
    2a36:	30 f4       	brcc	.+12     	; 0x2a44 <__fp_rempio2+0x4a>
    2a38:	9a 95       	dec	r25
    2a3a:	bb 0f       	add	r27, r27
    2a3c:	66 1f       	adc	r22, r22
    2a3e:	77 1f       	adc	r23, r23
    2a40:	88 1f       	adc	r24, r24
    2a42:	d2 f7       	brpl	.-12     	; 0x2a38 <__fp_rempio2+0x3e>
    2a44:	90 48       	sbci	r25, 0x80	; 128
    2a46:	6f c1       	rjmp	.+734    	; 0x2d26 <__fp_mpack_finite>

00002a48 <__fp_round>:
    2a48:	09 2e       	mov	r0, r25
    2a4a:	03 94       	inc	r0
    2a4c:	00 0c       	add	r0, r0
    2a4e:	11 f4       	brne	.+4      	; 0x2a54 <__fp_round+0xc>
    2a50:	88 23       	and	r24, r24
    2a52:	52 f0       	brmi	.+20     	; 0x2a68 <__fp_round+0x20>
    2a54:	bb 0f       	add	r27, r27
    2a56:	40 f4       	brcc	.+16     	; 0x2a68 <__fp_round+0x20>
    2a58:	bf 2b       	or	r27, r31
    2a5a:	11 f4       	brne	.+4      	; 0x2a60 <__fp_round+0x18>
    2a5c:	60 ff       	sbrs	r22, 0
    2a5e:	04 c0       	rjmp	.+8      	; 0x2a68 <__fp_round+0x20>
    2a60:	6f 5f       	subi	r22, 0xFF	; 255
    2a62:	7f 4f       	sbci	r23, 0xFF	; 255
    2a64:	8f 4f       	sbci	r24, 0xFF	; 255
    2a66:	9f 4f       	sbci	r25, 0xFF	; 255
    2a68:	08 95       	ret

00002a6a <__fp_sinus>:
    2a6a:	ef 93       	push	r30
    2a6c:	e0 ff       	sbrs	r30, 0
    2a6e:	06 c0       	rjmp	.+12     	; 0x2a7c <__fp_sinus+0x12>
    2a70:	a2 ea       	ldi	r26, 0xA2	; 162
    2a72:	2a ed       	ldi	r18, 0xDA	; 218
    2a74:	3f e0       	ldi	r19, 0x0F	; 15
    2a76:	49 ec       	ldi	r20, 0xC9	; 201
    2a78:	5f eb       	ldi	r21, 0xBF	; 191
    2a7a:	9b dd       	rcall	.-1226   	; 0x25b2 <__addsf3x>
    2a7c:	e5 df       	rcall	.-54     	; 0x2a48 <__fp_round>
    2a7e:	0f 90       	pop	r0
    2a80:	03 94       	inc	r0
    2a82:	01 fc       	sbrc	r0, 1
    2a84:	90 58       	subi	r25, 0x80	; 128
    2a86:	e1 e0       	ldi	r30, 0x01	; 1
    2a88:	f1 e0       	ldi	r31, 0x01	; 1
    2a8a:	60 c1       	rjmp	.+704    	; 0x2d4c <__fp_powsodd>

00002a8c <__fp_split3>:
    2a8c:	57 fd       	sbrc	r21, 7
    2a8e:	90 58       	subi	r25, 0x80	; 128
    2a90:	44 0f       	add	r20, r20
    2a92:	55 1f       	adc	r21, r21
    2a94:	59 f0       	breq	.+22     	; 0x2aac <__fp_splitA+0x10>
    2a96:	5f 3f       	cpi	r21, 0xFF	; 255
    2a98:	71 f0       	breq	.+28     	; 0x2ab6 <__fp_splitA+0x1a>
    2a9a:	47 95       	ror	r20

00002a9c <__fp_splitA>:
    2a9c:	88 0f       	add	r24, r24
    2a9e:	97 fb       	bst	r25, 7
    2aa0:	99 1f       	adc	r25, r25
    2aa2:	61 f0       	breq	.+24     	; 0x2abc <__fp_splitA+0x20>
    2aa4:	9f 3f       	cpi	r25, 0xFF	; 255
    2aa6:	79 f0       	breq	.+30     	; 0x2ac6 <__fp_splitA+0x2a>
    2aa8:	87 95       	ror	r24
    2aaa:	08 95       	ret
    2aac:	12 16       	cp	r1, r18
    2aae:	13 06       	cpc	r1, r19
    2ab0:	14 06       	cpc	r1, r20
    2ab2:	55 1f       	adc	r21, r21
    2ab4:	f2 cf       	rjmp	.-28     	; 0x2a9a <__fp_split3+0xe>
    2ab6:	46 95       	lsr	r20
    2ab8:	f1 df       	rcall	.-30     	; 0x2a9c <__fp_splitA>
    2aba:	08 c0       	rjmp	.+16     	; 0x2acc <__fp_splitA+0x30>
    2abc:	16 16       	cp	r1, r22
    2abe:	17 06       	cpc	r1, r23
    2ac0:	18 06       	cpc	r1, r24
    2ac2:	99 1f       	adc	r25, r25
    2ac4:	f1 cf       	rjmp	.-30     	; 0x2aa8 <__fp_splitA+0xc>
    2ac6:	86 95       	lsr	r24
    2ac8:	71 05       	cpc	r23, r1
    2aca:	61 05       	cpc	r22, r1
    2acc:	08 94       	sec
    2ace:	08 95       	ret

00002ad0 <__fp_zero>:
    2ad0:	e8 94       	clt

00002ad2 <__fp_szero>:
    2ad2:	bb 27       	eor	r27, r27
    2ad4:	66 27       	eor	r22, r22
    2ad6:	77 27       	eor	r23, r23
    2ad8:	cb 01       	movw	r24, r22
    2ada:	97 f9       	bld	r25, 7
    2adc:	08 95       	ret

00002ade <__gesf2>:
    2ade:	2c df       	rcall	.-424    	; 0x2938 <__fp_cmp>
    2ae0:	08 f4       	brcc	.+2      	; 0x2ae4 <__gesf2+0x6>
    2ae2:	8f ef       	ldi	r24, 0xFF	; 255
    2ae4:	08 95       	ret

00002ae6 <inverse>:
    2ae6:	9b 01       	movw	r18, r22
    2ae8:	ac 01       	movw	r20, r24
    2aea:	60 e0       	ldi	r22, 0x00	; 0
    2aec:	70 e0       	ldi	r23, 0x00	; 0
    2aee:	80 e8       	ldi	r24, 0x80	; 128
    2af0:	9f e3       	ldi	r25, 0x3F	; 63
    2af2:	1b ce       	rjmp	.-970    	; 0x272a <__divsf3>
    2af4:	45 cf       	rjmp	.-374    	; 0x2980 <__fp_inf>
    2af6:	15 c1       	rjmp	.+554    	; 0x2d22 <__fp_mpack>

00002af8 <ldexp>:
    2af8:	d1 df       	rcall	.-94     	; 0x2a9c <__fp_splitA>
    2afa:	e8 f3       	brcs	.-6      	; 0x2af6 <inverse+0x10>
    2afc:	99 23       	and	r25, r25
    2afe:	d9 f3       	breq	.-10     	; 0x2af6 <inverse+0x10>
    2b00:	94 0f       	add	r25, r20
    2b02:	51 1d       	adc	r21, r1
    2b04:	bb f3       	brvs	.-18     	; 0x2af4 <inverse+0xe>
    2b06:	91 50       	subi	r25, 0x01	; 1
    2b08:	50 40       	sbci	r21, 0x00	; 0
    2b0a:	94 f0       	brlt	.+36     	; 0x2b30 <ldexp+0x38>
    2b0c:	59 f0       	breq	.+22     	; 0x2b24 <ldexp+0x2c>
    2b0e:	88 23       	and	r24, r24
    2b10:	32 f0       	brmi	.+12     	; 0x2b1e <ldexp+0x26>
    2b12:	66 0f       	add	r22, r22
    2b14:	77 1f       	adc	r23, r23
    2b16:	88 1f       	adc	r24, r24
    2b18:	91 50       	subi	r25, 0x01	; 1
    2b1a:	50 40       	sbci	r21, 0x00	; 0
    2b1c:	c1 f7       	brne	.-16     	; 0x2b0e <ldexp+0x16>
    2b1e:	9e 3f       	cpi	r25, 0xFE	; 254
    2b20:	51 05       	cpc	r21, r1
    2b22:	44 f7       	brge	.-48     	; 0x2af4 <inverse+0xe>
    2b24:	88 0f       	add	r24, r24
    2b26:	91 1d       	adc	r25, r1
    2b28:	96 95       	lsr	r25
    2b2a:	87 95       	ror	r24
    2b2c:	97 f9       	bld	r25, 7
    2b2e:	08 95       	ret
    2b30:	5f 3f       	cpi	r21, 0xFF	; 255
    2b32:	ac f0       	brlt	.+42     	; 0x2b5e <ldexp+0x66>
    2b34:	98 3e       	cpi	r25, 0xE8	; 232
    2b36:	9c f0       	brlt	.+38     	; 0x2b5e <ldexp+0x66>
    2b38:	bb 27       	eor	r27, r27
    2b3a:	86 95       	lsr	r24
    2b3c:	77 95       	ror	r23
    2b3e:	67 95       	ror	r22
    2b40:	b7 95       	ror	r27
    2b42:	08 f4       	brcc	.+2      	; 0x2b46 <ldexp+0x4e>
    2b44:	b1 60       	ori	r27, 0x01	; 1
    2b46:	93 95       	inc	r25
    2b48:	c1 f7       	brne	.-16     	; 0x2b3a <ldexp+0x42>
    2b4a:	bb 0f       	add	r27, r27
    2b4c:	58 f7       	brcc	.-42     	; 0x2b24 <ldexp+0x2c>
    2b4e:	11 f4       	brne	.+4      	; 0x2b54 <ldexp+0x5c>
    2b50:	60 ff       	sbrs	r22, 0
    2b52:	e8 cf       	rjmp	.-48     	; 0x2b24 <ldexp+0x2c>
    2b54:	6f 5f       	subi	r22, 0xFF	; 255
    2b56:	7f 4f       	sbci	r23, 0xFF	; 255
    2b58:	8f 4f       	sbci	r24, 0xFF	; 255
    2b5a:	9f 4f       	sbci	r25, 0xFF	; 255
    2b5c:	e3 cf       	rjmp	.-58     	; 0x2b24 <ldexp+0x2c>
    2b5e:	b9 cf       	rjmp	.-142    	; 0x2ad2 <__fp_szero>

00002b60 <modf>:
    2b60:	fa 01       	movw	r30, r20
    2b62:	dc 01       	movw	r26, r24
    2b64:	aa 0f       	add	r26, r26
    2b66:	bb 1f       	adc	r27, r27
    2b68:	9b 01       	movw	r18, r22
    2b6a:	ac 01       	movw	r20, r24
    2b6c:	bf 57       	subi	r27, 0x7F	; 127
    2b6e:	28 f4       	brcc	.+10     	; 0x2b7a <modf+0x1a>
    2b70:	22 27       	eor	r18, r18
    2b72:	33 27       	eor	r19, r19
    2b74:	44 27       	eor	r20, r20
    2b76:	50 78       	andi	r21, 0x80	; 128
    2b78:	1f c0       	rjmp	.+62     	; 0x2bb8 <modf+0x58>
    2b7a:	b7 51       	subi	r27, 0x17	; 23
    2b7c:	88 f4       	brcc	.+34     	; 0x2ba0 <modf+0x40>
    2b7e:	ab 2f       	mov	r26, r27
    2b80:	00 24       	eor	r0, r0
    2b82:	46 95       	lsr	r20
    2b84:	37 95       	ror	r19
    2b86:	27 95       	ror	r18
    2b88:	01 1c       	adc	r0, r1
    2b8a:	a3 95       	inc	r26
    2b8c:	d2 f3       	brmi	.-12     	; 0x2b82 <modf+0x22>
    2b8e:	00 20       	and	r0, r0
    2b90:	69 f0       	breq	.+26     	; 0x2bac <modf+0x4c>
    2b92:	22 0f       	add	r18, r18
    2b94:	33 1f       	adc	r19, r19
    2b96:	44 1f       	adc	r20, r20
    2b98:	b3 95       	inc	r27
    2b9a:	da f3       	brmi	.-10     	; 0x2b92 <modf+0x32>
    2b9c:	0d d0       	rcall	.+26     	; 0x2bb8 <modf+0x58>
    2b9e:	f7 cc       	rjmp	.-1554   	; 0x258e <__subsf3>
    2ba0:	61 30       	cpi	r22, 0x01	; 1
    2ba2:	71 05       	cpc	r23, r1
    2ba4:	a0 e8       	ldi	r26, 0x80	; 128
    2ba6:	8a 07       	cpc	r24, r26
    2ba8:	b9 46       	sbci	r27, 0x69	; 105
    2baa:	30 f4       	brcc	.+12     	; 0x2bb8 <modf+0x58>
    2bac:	9b 01       	movw	r18, r22
    2bae:	ac 01       	movw	r20, r24
    2bb0:	66 27       	eor	r22, r22
    2bb2:	77 27       	eor	r23, r23
    2bb4:	88 27       	eor	r24, r24
    2bb6:	90 78       	andi	r25, 0x80	; 128
    2bb8:	30 96       	adiw	r30, 0x00	; 0
    2bba:	21 f0       	breq	.+8      	; 0x2bc4 <modf+0x64>
    2bbc:	20 83       	st	Z, r18
    2bbe:	31 83       	std	Z+1, r19	; 0x01
    2bc0:	42 83       	std	Z+2, r20	; 0x02
    2bc2:	53 83       	std	Z+3, r21	; 0x03
    2bc4:	08 95       	ret

00002bc6 <__mulsf3>:
    2bc6:	0b d0       	rcall	.+22     	; 0x2bde <__mulsf3x>
    2bc8:	3f cf       	rjmp	.-386    	; 0x2a48 <__fp_round>
    2bca:	08 df       	rcall	.-496    	; 0x29dc <__fp_pscA>
    2bcc:	28 f0       	brcs	.+10     	; 0x2bd8 <__mulsf3+0x12>
    2bce:	0d df       	rcall	.-486    	; 0x29ea <__fp_pscB>
    2bd0:	18 f0       	brcs	.+6      	; 0x2bd8 <__mulsf3+0x12>
    2bd2:	95 23       	and	r25, r21
    2bd4:	09 f0       	breq	.+2      	; 0x2bd8 <__mulsf3+0x12>
    2bd6:	d4 ce       	rjmp	.-600    	; 0x2980 <__fp_inf>
    2bd8:	d9 ce       	rjmp	.-590    	; 0x298c <__fp_nan>
    2bda:	11 24       	eor	r1, r1
    2bdc:	7a cf       	rjmp	.-268    	; 0x2ad2 <__fp_szero>

00002bde <__mulsf3x>:
    2bde:	56 df       	rcall	.-340    	; 0x2a8c <__fp_split3>
    2be0:	a0 f3       	brcs	.-24     	; 0x2bca <__mulsf3+0x4>

00002be2 <__mulsf3_pse>:
    2be2:	95 9f       	mul	r25, r21
    2be4:	d1 f3       	breq	.-12     	; 0x2bda <__mulsf3+0x14>
    2be6:	95 0f       	add	r25, r21
    2be8:	50 e0       	ldi	r21, 0x00	; 0
    2bea:	55 1f       	adc	r21, r21
    2bec:	62 9f       	mul	r22, r18
    2bee:	f0 01       	movw	r30, r0
    2bf0:	72 9f       	mul	r23, r18
    2bf2:	bb 27       	eor	r27, r27
    2bf4:	f0 0d       	add	r31, r0
    2bf6:	b1 1d       	adc	r27, r1
    2bf8:	63 9f       	mul	r22, r19
    2bfa:	aa 27       	eor	r26, r26
    2bfc:	f0 0d       	add	r31, r0
    2bfe:	b1 1d       	adc	r27, r1
    2c00:	aa 1f       	adc	r26, r26
    2c02:	64 9f       	mul	r22, r20
    2c04:	66 27       	eor	r22, r22
    2c06:	b0 0d       	add	r27, r0
    2c08:	a1 1d       	adc	r26, r1
    2c0a:	66 1f       	adc	r22, r22
    2c0c:	82 9f       	mul	r24, r18
    2c0e:	22 27       	eor	r18, r18
    2c10:	b0 0d       	add	r27, r0
    2c12:	a1 1d       	adc	r26, r1
    2c14:	62 1f       	adc	r22, r18
    2c16:	73 9f       	mul	r23, r19
    2c18:	b0 0d       	add	r27, r0
    2c1a:	a1 1d       	adc	r26, r1
    2c1c:	62 1f       	adc	r22, r18
    2c1e:	83 9f       	mul	r24, r19
    2c20:	a0 0d       	add	r26, r0
    2c22:	61 1d       	adc	r22, r1
    2c24:	22 1f       	adc	r18, r18
    2c26:	74 9f       	mul	r23, r20
    2c28:	33 27       	eor	r19, r19
    2c2a:	a0 0d       	add	r26, r0
    2c2c:	61 1d       	adc	r22, r1
    2c2e:	23 1f       	adc	r18, r19
    2c30:	84 9f       	mul	r24, r20
    2c32:	60 0d       	add	r22, r0
    2c34:	21 1d       	adc	r18, r1
    2c36:	82 2f       	mov	r24, r18
    2c38:	76 2f       	mov	r23, r22
    2c3a:	6a 2f       	mov	r22, r26
    2c3c:	11 24       	eor	r1, r1
    2c3e:	9f 57       	subi	r25, 0x7F	; 127
    2c40:	50 40       	sbci	r21, 0x00	; 0
    2c42:	8a f0       	brmi	.+34     	; 0x2c66 <__mulsf3_pse+0x84>
    2c44:	e1 f0       	breq	.+56     	; 0x2c7e <__mulsf3_pse+0x9c>
    2c46:	88 23       	and	r24, r24
    2c48:	4a f0       	brmi	.+18     	; 0x2c5c <__mulsf3_pse+0x7a>
    2c4a:	ee 0f       	add	r30, r30
    2c4c:	ff 1f       	adc	r31, r31
    2c4e:	bb 1f       	adc	r27, r27
    2c50:	66 1f       	adc	r22, r22
    2c52:	77 1f       	adc	r23, r23
    2c54:	88 1f       	adc	r24, r24
    2c56:	91 50       	subi	r25, 0x01	; 1
    2c58:	50 40       	sbci	r21, 0x00	; 0
    2c5a:	a9 f7       	brne	.-22     	; 0x2c46 <__mulsf3_pse+0x64>
    2c5c:	9e 3f       	cpi	r25, 0xFE	; 254
    2c5e:	51 05       	cpc	r21, r1
    2c60:	70 f0       	brcs	.+28     	; 0x2c7e <__mulsf3_pse+0x9c>
    2c62:	8e ce       	rjmp	.-740    	; 0x2980 <__fp_inf>
    2c64:	36 cf       	rjmp	.-404    	; 0x2ad2 <__fp_szero>
    2c66:	5f 3f       	cpi	r21, 0xFF	; 255
    2c68:	ec f3       	brlt	.-6      	; 0x2c64 <__mulsf3_pse+0x82>
    2c6a:	98 3e       	cpi	r25, 0xE8	; 232
    2c6c:	dc f3       	brlt	.-10     	; 0x2c64 <__mulsf3_pse+0x82>
    2c6e:	86 95       	lsr	r24
    2c70:	77 95       	ror	r23
    2c72:	67 95       	ror	r22
    2c74:	b7 95       	ror	r27
    2c76:	f7 95       	ror	r31
    2c78:	e7 95       	ror	r30
    2c7a:	9f 5f       	subi	r25, 0xFF	; 255
    2c7c:	c1 f7       	brne	.-16     	; 0x2c6e <__mulsf3_pse+0x8c>
    2c7e:	fe 2b       	or	r31, r30
    2c80:	88 0f       	add	r24, r24
    2c82:	91 1d       	adc	r25, r1
    2c84:	96 95       	lsr	r25
    2c86:	87 95       	ror	r24
    2c88:	97 f9       	bld	r25, 7
    2c8a:	08 95       	ret

00002c8c <sin>:
    2c8c:	9f 93       	push	r25
    2c8e:	b5 de       	rcall	.-662    	; 0x29fa <__fp_rempio2>
    2c90:	0f 90       	pop	r0
    2c92:	07 fc       	sbrc	r0, 7
    2c94:	ee 5f       	subi	r30, 0xFE	; 254
    2c96:	e9 ce       	rjmp	.-558    	; 0x2a6a <__fp_sinus>
    2c98:	11 f4       	brne	.+4      	; 0x2c9e <sin+0x12>
    2c9a:	0e f4       	brtc	.+2      	; 0x2c9e <sin+0x12>
    2c9c:	77 ce       	rjmp	.-786    	; 0x298c <__fp_nan>
    2c9e:	41 c0       	rjmp	.+130    	; 0x2d22 <__fp_mpack>

00002ca0 <sqrt>:
    2ca0:	fd de       	rcall	.-518    	; 0x2a9c <__fp_splitA>
    2ca2:	d0 f3       	brcs	.-12     	; 0x2c98 <sin+0xc>
    2ca4:	99 23       	and	r25, r25
    2ca6:	d9 f3       	breq	.-10     	; 0x2c9e <sin+0x12>
    2ca8:	ce f3       	brts	.-14     	; 0x2c9c <sin+0x10>
    2caa:	9f 57       	subi	r25, 0x7F	; 127
    2cac:	55 0b       	sbc	r21, r21
    2cae:	87 ff       	sbrs	r24, 7
    2cb0:	46 d0       	rcall	.+140    	; 0x2d3e <__fp_norm2>
    2cb2:	00 24       	eor	r0, r0
    2cb4:	a0 e6       	ldi	r26, 0x60	; 96
    2cb6:	40 ea       	ldi	r20, 0xA0	; 160
    2cb8:	90 01       	movw	r18, r0
    2cba:	80 58       	subi	r24, 0x80	; 128
    2cbc:	56 95       	lsr	r21
    2cbe:	97 95       	ror	r25
    2cc0:	28 f4       	brcc	.+10     	; 0x2ccc <sqrt+0x2c>
    2cc2:	80 5c       	subi	r24, 0xC0	; 192
    2cc4:	66 0f       	add	r22, r22
    2cc6:	77 1f       	adc	r23, r23
    2cc8:	88 1f       	adc	r24, r24
    2cca:	20 f0       	brcs	.+8      	; 0x2cd4 <sqrt+0x34>
    2ccc:	26 17       	cp	r18, r22
    2cce:	37 07       	cpc	r19, r23
    2cd0:	48 07       	cpc	r20, r24
    2cd2:	30 f4       	brcc	.+12     	; 0x2ce0 <sqrt+0x40>
    2cd4:	62 1b       	sub	r22, r18
    2cd6:	73 0b       	sbc	r23, r19
    2cd8:	84 0b       	sbc	r24, r20
    2cda:	20 29       	or	r18, r0
    2cdc:	31 29       	or	r19, r1
    2cde:	4a 2b       	or	r20, r26
    2ce0:	a6 95       	lsr	r26
    2ce2:	17 94       	ror	r1
    2ce4:	07 94       	ror	r0
    2ce6:	20 25       	eor	r18, r0
    2ce8:	31 25       	eor	r19, r1
    2cea:	4a 27       	eor	r20, r26
    2cec:	58 f7       	brcc	.-42     	; 0x2cc4 <sqrt+0x24>
    2cee:	66 0f       	add	r22, r22
    2cf0:	77 1f       	adc	r23, r23
    2cf2:	88 1f       	adc	r24, r24
    2cf4:	20 f0       	brcs	.+8      	; 0x2cfe <sqrt+0x5e>
    2cf6:	26 17       	cp	r18, r22
    2cf8:	37 07       	cpc	r19, r23
    2cfa:	48 07       	cpc	r20, r24
    2cfc:	30 f4       	brcc	.+12     	; 0x2d0a <sqrt+0x6a>
    2cfe:	62 0b       	sbc	r22, r18
    2d00:	73 0b       	sbc	r23, r19
    2d02:	84 0b       	sbc	r24, r20
    2d04:	20 0d       	add	r18, r0
    2d06:	31 1d       	adc	r19, r1
    2d08:	41 1d       	adc	r20, r1
    2d0a:	a0 95       	com	r26
    2d0c:	81 f7       	brne	.-32     	; 0x2cee <sqrt+0x4e>
    2d0e:	b9 01       	movw	r22, r18
    2d10:	84 2f       	mov	r24, r20
    2d12:	91 58       	subi	r25, 0x81	; 129
    2d14:	88 0f       	add	r24, r24
    2d16:	96 95       	lsr	r25
    2d18:	87 95       	ror	r24
    2d1a:	08 95       	ret

00002d1c <square>:
    2d1c:	9b 01       	movw	r18, r22
    2d1e:	ac 01       	movw	r20, r24
    2d20:	52 cf       	rjmp	.-348    	; 0x2bc6 <__mulsf3>

00002d22 <__fp_mpack>:
    2d22:	9f 3f       	cpi	r25, 0xFF	; 255
    2d24:	31 f0       	breq	.+12     	; 0x2d32 <__fp_mpack_finite+0xc>

00002d26 <__fp_mpack_finite>:
    2d26:	91 50       	subi	r25, 0x01	; 1
    2d28:	20 f4       	brcc	.+8      	; 0x2d32 <__fp_mpack_finite+0xc>
    2d2a:	87 95       	ror	r24
    2d2c:	77 95       	ror	r23
    2d2e:	67 95       	ror	r22
    2d30:	b7 95       	ror	r27
    2d32:	88 0f       	add	r24, r24
    2d34:	91 1d       	adc	r25, r1
    2d36:	96 95       	lsr	r25
    2d38:	87 95       	ror	r24
    2d3a:	97 f9       	bld	r25, 7
    2d3c:	08 95       	ret

00002d3e <__fp_norm2>:
    2d3e:	91 50       	subi	r25, 0x01	; 1
    2d40:	50 40       	sbci	r21, 0x00	; 0
    2d42:	66 0f       	add	r22, r22
    2d44:	77 1f       	adc	r23, r23
    2d46:	88 1f       	adc	r24, r24
    2d48:	d2 f7       	brpl	.-12     	; 0x2d3e <__fp_norm2>
    2d4a:	08 95       	ret

00002d4c <__fp_powsodd>:
    2d4c:	9f 93       	push	r25
    2d4e:	8f 93       	push	r24
    2d50:	7f 93       	push	r23
    2d52:	6f 93       	push	r22
    2d54:	ff 93       	push	r31
    2d56:	ef 93       	push	r30
    2d58:	9b 01       	movw	r18, r22
    2d5a:	ac 01       	movw	r20, r24
    2d5c:	34 df       	rcall	.-408    	; 0x2bc6 <__mulsf3>
    2d5e:	ef 91       	pop	r30
    2d60:	ff 91       	pop	r31
    2d62:	17 de       	rcall	.-978    	; 0x2992 <__fp_powser>
    2d64:	2f 91       	pop	r18
    2d66:	3f 91       	pop	r19
    2d68:	4f 91       	pop	r20
    2d6a:	5f 91       	pop	r21
    2d6c:	2c cf       	rjmp	.-424    	; 0x2bc6 <__mulsf3>

00002d6e <__divmodhi4>:
    2d6e:	97 fb       	bst	r25, 7
    2d70:	07 2e       	mov	r0, r23
    2d72:	16 f4       	brtc	.+4      	; 0x2d78 <__divmodhi4+0xa>
    2d74:	00 94       	com	r0
    2d76:	07 d0       	rcall	.+14     	; 0x2d86 <__divmodhi4_neg1>
    2d78:	77 fd       	sbrc	r23, 7
    2d7a:	09 d0       	rcall	.+18     	; 0x2d8e <__divmodhi4_neg2>
    2d7c:	0e 94 cb 16 	call	0x2d96	; 0x2d96 <__udivmodhi4>
    2d80:	07 fc       	sbrc	r0, 7
    2d82:	05 d0       	rcall	.+10     	; 0x2d8e <__divmodhi4_neg2>
    2d84:	3e f4       	brtc	.+14     	; 0x2d94 <__divmodhi4_exit>

00002d86 <__divmodhi4_neg1>:
    2d86:	90 95       	com	r25
    2d88:	81 95       	neg	r24
    2d8a:	9f 4f       	sbci	r25, 0xFF	; 255
    2d8c:	08 95       	ret

00002d8e <__divmodhi4_neg2>:
    2d8e:	70 95       	com	r23
    2d90:	61 95       	neg	r22
    2d92:	7f 4f       	sbci	r23, 0xFF	; 255

00002d94 <__divmodhi4_exit>:
    2d94:	08 95       	ret

00002d96 <__udivmodhi4>:
    2d96:	aa 1b       	sub	r26, r26
    2d98:	bb 1b       	sub	r27, r27
    2d9a:	51 e1       	ldi	r21, 0x11	; 17
    2d9c:	07 c0       	rjmp	.+14     	; 0x2dac <__udivmodhi4_ep>

00002d9e <__udivmodhi4_loop>:
    2d9e:	aa 1f       	adc	r26, r26
    2da0:	bb 1f       	adc	r27, r27
    2da2:	a6 17       	cp	r26, r22
    2da4:	b7 07       	cpc	r27, r23
    2da6:	10 f0       	brcs	.+4      	; 0x2dac <__udivmodhi4_ep>
    2da8:	a6 1b       	sub	r26, r22
    2daa:	b7 0b       	sbc	r27, r23

00002dac <__udivmodhi4_ep>:
    2dac:	88 1f       	adc	r24, r24
    2dae:	99 1f       	adc	r25, r25
    2db0:	5a 95       	dec	r21
    2db2:	a9 f7       	brne	.-22     	; 0x2d9e <__udivmodhi4_loop>
    2db4:	80 95       	com	r24
    2db6:	90 95       	com	r25
    2db8:	bc 01       	movw	r22, r24
    2dba:	cd 01       	movw	r24, r26
    2dbc:	08 95       	ret

00002dbe <itoa>:
    2dbe:	fb 01       	movw	r30, r22
    2dc0:	9f 01       	movw	r18, r30
    2dc2:	e8 94       	clt
    2dc4:	42 30       	cpi	r20, 0x02	; 2
    2dc6:	c4 f0       	brlt	.+48     	; 0x2df8 <itoa+0x3a>
    2dc8:	45 32       	cpi	r20, 0x25	; 37
    2dca:	b4 f4       	brge	.+44     	; 0x2df8 <itoa+0x3a>
    2dcc:	4a 30       	cpi	r20, 0x0A	; 10
    2dce:	29 f4       	brne	.+10     	; 0x2dda <itoa+0x1c>
    2dd0:	97 fb       	bst	r25, 7
    2dd2:	1e f4       	brtc	.+6      	; 0x2dda <itoa+0x1c>
    2dd4:	90 95       	com	r25
    2dd6:	81 95       	neg	r24
    2dd8:	9f 4f       	sbci	r25, 0xFF	; 255
    2dda:	64 2f       	mov	r22, r20
    2ddc:	77 27       	eor	r23, r23
    2dde:	0e 94 cb 16 	call	0x2d96	; 0x2d96 <__udivmodhi4>
    2de2:	80 5d       	subi	r24, 0xD0	; 208
    2de4:	8a 33       	cpi	r24, 0x3A	; 58
    2de6:	0c f0       	brlt	.+2      	; 0x2dea <itoa+0x2c>
    2de8:	89 5d       	subi	r24, 0xD9	; 217
    2dea:	81 93       	st	Z+, r24
    2dec:	cb 01       	movw	r24, r22
    2dee:	00 97       	sbiw	r24, 0x00	; 0
    2df0:	a1 f7       	brne	.-24     	; 0x2dda <itoa+0x1c>
    2df2:	16 f4       	brtc	.+4      	; 0x2df8 <itoa+0x3a>
    2df4:	5d e2       	ldi	r21, 0x2D	; 45
    2df6:	51 93       	st	Z+, r21
    2df8:	10 82       	st	Z, r1
    2dfa:	c9 01       	movw	r24, r18
    2dfc:	0c 94 00 17 	jmp	0x2e00	; 0x2e00 <strrev>

00002e00 <strrev>:
    2e00:	dc 01       	movw	r26, r24
    2e02:	fc 01       	movw	r30, r24
    2e04:	67 2f       	mov	r22, r23
    2e06:	71 91       	ld	r23, Z+
    2e08:	77 23       	and	r23, r23
    2e0a:	e1 f7       	brne	.-8      	; 0x2e04 <strrev+0x4>
    2e0c:	32 97       	sbiw	r30, 0x02	; 2
    2e0e:	04 c0       	rjmp	.+8      	; 0x2e18 <strrev+0x18>
    2e10:	7c 91       	ld	r23, X
    2e12:	6d 93       	st	X+, r22
    2e14:	70 83       	st	Z, r23
    2e16:	62 91       	ld	r22, -Z
    2e18:	ae 17       	cp	r26, r30
    2e1a:	bf 07       	cpc	r27, r31
    2e1c:	c8 f3       	brcs	.-14     	; 0x2e10 <strrev+0x10>
    2e1e:	08 95       	ret

00002e20 <_exit>:
    2e20:	f8 94       	cli

00002e22 <__stop_program>:
    2e22:	ff cf       	rjmp	.-2      	; 0x2e22 <__stop_program>
