
LocalTest.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000014  00800100  00001bb0  00001c44  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001bb0  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000066  00800114  00800114  00001c58  2**0
                  ALLOC
  3 .stab         0000339c  00000000  00000000  00001c58  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000f23  00000000  00000000  00004ff4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      0000002f  00000000  00000000  00005f17  2**0
                  CONTENTS, READONLY
  6 .debug_aranges 000001e0  00000000  00000000  00005f46  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00001e1e  00000000  00000000  00006126  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000007c2  00000000  00000000  00007f44  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00000c77  00000000  00000000  00008706  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  000005e0  00000000  00000000  00009380  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    000006fb  00000000  00000000  00009960  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    00002521  00000000  00000000  0000a05b  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 000001f8  00000000  00000000  0000c57c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 c6 00 	jmp	0x18c	; 0x18c <__ctors_end>
       4:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__bad_interrupt>
       8:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__bad_interrupt>
       c:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__bad_interrupt>
      10:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__bad_interrupt>
      14:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__bad_interrupt>
      18:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__bad_interrupt>
      1c:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__bad_interrupt>
      20:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__bad_interrupt>
      24:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__bad_interrupt>
      28:	0c 94 a2 06 	jmp	0xd44	; 0xd44 <__vector_10>
      2c:	0c 94 e0 06 	jmp	0xdc0	; 0xdc0 <__vector_11>
      30:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__bad_interrupt>
      34:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__bad_interrupt>
      38:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__bad_interrupt>
      3c:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__bad_interrupt>
      40:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__bad_interrupt>
      44:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__bad_interrupt>
      48:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__bad_interrupt>
      4c:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__bad_interrupt>
      50:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__bad_interrupt>
      54:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__bad_interrupt>
      58:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__bad_interrupt>
      5c:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__bad_interrupt>
      60:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__bad_interrupt>
      64:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__bad_interrupt>
      68:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__bad_interrupt>
      6c:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__bad_interrupt>
      70:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__bad_interrupt>
      74:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__bad_interrupt>
      78:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__bad_interrupt>
      7c:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__bad_interrupt>
      80:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__bad_interrupt>
      84:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__bad_interrupt>
      88:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__bad_interrupt>
      8c:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__bad_interrupt>
      90:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__bad_interrupt>
      94:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__bad_interrupt>
      98:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__bad_interrupt>
      9c:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__bad_interrupt>
      a0:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__bad_interrupt>
      a4:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__bad_interrupt>
      a8:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__bad_interrupt>
      ac:	08 4a       	sbci	r16, 0xA8	; 168
      ae:	d7 3b       	cpi	r29, 0xB7	; 183
      b0:	3b ce       	rjmp	.-906    	; 0xfffffd28 <__eeprom_end+0xff7efd28>
      b2:	01 6e       	ori	r16, 0xE1	; 225
      b4:	84 bc       	out	0x24, r8	; 36
      b6:	bf fd       	.word	0xfdbf	; ????
      b8:	c1 2f       	mov	r28, r17
      ba:	3d 6c       	ori	r19, 0xCD	; 205
      bc:	74 31       	cpi	r23, 0x14	; 20
      be:	9a bd       	out	0x2a, r25	; 42
      c0:	56 83       	std	Z+6, r21	; 0x06
      c2:	3d da       	rcall	.-2950   	; 0xfffff53e <__eeprom_end+0xff7ef53e>
      c4:	3d 00       	.word	0x003d	; ????
      c6:	c7 7f       	andi	r28, 0xF7	; 247
      c8:	11 be       	out	0x31, r1	; 49
      ca:	d9 e4       	ldi	r29, 0x49	; 73
      cc:	bb 4c       	sbci	r27, 0xCB	; 203
      ce:	3e 91       	ld	r19, -X
      d0:	6b aa       	std	Y+51, r6	; 0x33
      d2:	aa be       	out	0x3a, r10	; 58
      d4:	00 00       	nop
      d6:	00 80       	ld	r0, Z
      d8:	3f 00       	.word	0x003f	; ????

000000d9 <descriptor_list>:
      d9:	00 01 00 00 0d 01 12 00 02 00 00 1f 01 43 00 03     .............C..
      e9:	00 00 62 01 04 01 03 09 04 66 01 12 02 03 09 04     ..b......f......
      f9:	7a 01 06 03 03 09 04 82 01 08                       z.........

00000103 <endpoint_config_table>:
     103:	00 01 c1 12 01 80 36 01 81 36                       ......6..6

0000010d <device_descriptor>:
     10d:	12 01 00 02 02 00 00 10 c0 16 7a 04 00 01 01 02     ..........z.....
     11d:	03 01                                               ..

0000011f <config1_descriptor>:
     11f:	09 02 43 00 02 01 00 c0 32 09 04 00 00 01 02 02     ..C.....2.......
     12f:	01 00 05 24 00 10 01 05 24 01 01 01 04 24 02 06     ...$....$....$..
     13f:	05 24 06 00 01 07 05 82 03 10 00 40 09 04 01 00     .$.........@....
     14f:	02 0a 00 00 00 07 05 03 02 40 00 00 07 05 84 02     .........@......
     15f:	40 00 00                                            @..

00000162 <string0>:
     162:	04 03 09 04                                         ....

00000166 <string1>:
     166:	12 03 4a 00 2e 00 20 00 46 00 69 00 65 00 6e 00     ..J... .F.i.e.n.
     176:	65 00 00 00                                         e...

0000017a <string2>:
     17a:	06 03 4d 00 32 00 00 00                             ..M.2...

00000182 <string3>:
     182:	08 03 34 00 31 00 30 00 00 00                       ..4.1.0...

0000018c <__ctors_end>:
     18c:	11 24       	eor	r1, r1
     18e:	1f be       	out	0x3f, r1	; 63
     190:	cf ef       	ldi	r28, 0xFF	; 255
     192:	da e0       	ldi	r29, 0x0A	; 10
     194:	de bf       	out	0x3e, r29	; 62
     196:	cd bf       	out	0x3d, r28	; 61

00000198 <__do_copy_data>:
     198:	11 e0       	ldi	r17, 0x01	; 1
     19a:	a0 e0       	ldi	r26, 0x00	; 0
     19c:	b1 e0       	ldi	r27, 0x01	; 1
     19e:	e0 eb       	ldi	r30, 0xB0	; 176
     1a0:	fb e1       	ldi	r31, 0x1B	; 27
     1a2:	02 c0       	rjmp	.+4      	; 0x1a8 <__do_copy_data+0x10>
     1a4:	05 90       	lpm	r0, Z+
     1a6:	0d 92       	st	X+, r0
     1a8:	a4 31       	cpi	r26, 0x14	; 20
     1aa:	b1 07       	cpc	r27, r17
     1ac:	d9 f7       	brne	.-10     	; 0x1a4 <__do_copy_data+0xc>

000001ae <__do_clear_bss>:
     1ae:	21 e0       	ldi	r18, 0x01	; 1
     1b0:	a4 e1       	ldi	r26, 0x14	; 20
     1b2:	b1 e0       	ldi	r27, 0x01	; 1
     1b4:	01 c0       	rjmp	.+2      	; 0x1b8 <.do_clear_bss_start>

000001b6 <.do_clear_bss_loop>:
     1b6:	1d 92       	st	X+, r1

000001b8 <.do_clear_bss_start>:
     1b8:	aa 37       	cpi	r26, 0x7A	; 122
     1ba:	b2 07       	cpc	r27, r18
     1bc:	e1 f7       	brne	.-8      	; 0x1b6 <.do_clear_bss_loop>
     1be:	0e 94 e5 00 	call	0x1ca	; 0x1ca <main>
     1c2:	0c 94 d6 0d 	jmp	0x1bac	; 0x1bac <_exit>

000001c6 <__bad_interrupt>:
     1c6:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001ca <main>:


 int main(void){
	 
	 //MATLAB PLOTTING STUFFS*****************************************************************
	m_clockdivide(0);
     1ca:	e1 e6       	ldi	r30, 0x61	; 97
     1cc:	f0 e0       	ldi	r31, 0x00	; 0
     1ce:	80 e8       	ldi	r24, 0x80	; 128
     1d0:	80 83       	st	Z, r24
     1d2:	10 82       	st	Z, r1
		 
	long count = 0;
	
	m_red(ON);
     1d4:	6e 9a       	sbi	0x0d, 6	; 13
     1d6:	76 98       	cbi	0x0e, 6	; 14
	m_green(ON);
     1d8:	6a 9a       	sbi	0x0d, 2	; 13
     1da:	72 98       	cbi	0x0e, 2	; 14

	m_bus_init();
     1dc:	0e 94 2a 01 	call	0x254	; 0x254 <m_bus_init>
	m_wii_open();
     1e0:	0e 94 8b 09 	call	0x1316	; 0x1316 <m_wii_open>
	m_usb_init(); // connect usb
     1e4:	0e 94 e7 05 	call	0xbce	; 0xbce <m_usb_init>
	while(!m_usb_isconnected()){};  //wait for connection
     1e8:	0e 94 00 06 	call	0xc00	; 0xc00 <m_usb_isconnected>
     1ec:	88 23       	and	r24, r24
     1ee:	e1 f3       	breq	.-8      	; 0x1e8 <main+0x1e>

	m_red(OFF);
     1f0:	6e 9a       	sbi	0x0d, 6	; 13
     1f2:	76 9a       	sbi	0x0e, 6	; 14
	m_green(OFF);
     1f4:	6a 9a       	sbi	0x0d, 2	; 13
     1f6:	72 9a       	sbi	0x0e, 2	; 14
 #define CLOCK 0
 
 //long count = 0;


 int main(void){
     1f8:	0a e8       	ldi	r16, 0x8A	; 138
     1fa:	11 e0       	ldi	r17, 0x01	; 1
	char rx_buffer; //computer interactions
	
	int i;
	while(1){

		m_red(ON);
     1fc:	6e 9a       	sbi	0x0d, 6	; 13
     1fe:	76 98       	cbi	0x0e, 6	; 14
		m_green(OFF);
     200:	6a 9a       	sbi	0x0d, 2	; 13
     202:	72 9a       	sbi	0x0e, 2	; 14
		localize(data);
     204:	8e e5       	ldi	r24, 0x5E	; 94
     206:	91 e0       	ldi	r25, 0x01	; 1
     208:	0e 94 fe 03 	call	0x7fc	; 0x7fc <localize>
		m_red(OFF);
     20c:	6e 9a       	sbi	0x0d, 6	; 13
     20e:	76 9a       	sbi	0x0e, 6	; 14
		m_green(ON);
     210:	6a 9a       	sbi	0x0d, 2	; 13
     212:	72 98       	cbi	0x0e, 2	; 14

		while(!m_usb_rx_available());  	//wait for an indication from the computer
     214:	0e 94 21 06 	call	0xc42	; 0xc42 <m_usb_rx_available>
     218:	88 23       	and	r24, r24
     21a:	e1 f3       	breq	.-8      	; 0x214 <main+0x4a>
		rx_buffer = m_usb_rx_char();  	//grab the computer packet
     21c:	0e 94 03 06 	call	0xc06	; 0xc06 <m_usb_rx_char>
     220:	c8 2f       	mov	r28, r24

		m_usb_rx_flush();  				//clear buffer
     222:	0e 94 30 06 	call	0xc60	; 0xc60 <m_usb_rx_flush>

		if(rx_buffer == 1) {  			//computer wants ir buffer
     226:	c1 30       	cpi	r28, 0x01	; 1
     228:	49 f7       	brne	.-46     	; 0x1fc <main+0x32>
     22a:	ce e5       	ldi	r28, 0x5E	; 94
     22c:	d1 e0       	ldi	r29, 0x01	; 1
			//write ir buffer as concatenated hex:  i.e. f0f1f4f5		

			for (i = 0 ; i < 11 ; i++){
			m_usb_tx_int((int)data[i]);
     22e:	69 91       	ld	r22, Y+
     230:	79 91       	ld	r23, Y+
     232:	89 91       	ld	r24, Y+
     234:	99 91       	ld	r25, Y+
     236:	0e 94 c1 0b 	call	0x1782	; 0x1782 <__fixsfsi>
     23a:	cb 01       	movw	r24, r22
     23c:	0e 94 68 08 	call	0x10d0	; 0x10d0 <m_usb_tx_int>
			m_usb_tx_char('\t');
     240:	89 e0       	ldi	r24, 0x09	; 9
     242:	0e 94 46 06 	call	0xc8c	; 0xc8c <m_usb_tx_char>
		m_usb_rx_flush();  				//clear buffer

		if(rx_buffer == 1) {  			//computer wants ir buffer
			//write ir buffer as concatenated hex:  i.e. f0f1f4f5		

			for (i = 0 ; i < 11 ; i++){
     246:	c0 17       	cp	r28, r16
     248:	d1 07       	cpc	r29, r17
     24a:	89 f7       	brne	.-30     	; 0x22e <main+0x64>
			m_usb_tx_int((int)data[i]);
			m_usb_tx_char('\t');

			}

			m_usb_tx_char('\n');  //MATLAB serial command reads 1 line at a time
     24c:	8a e0       	ldi	r24, 0x0A	; 10
     24e:	0e 94 46 06 	call	0xc8c	; 0xc8c <m_usb_tx_char>
     252:	d4 cf       	rjmp	.-88     	; 0x1fc <main+0x32>

00000254 <m_bus_init>:
     254:	58 9a       	sbi	0x0b, 0	; 11
     256:	59 9a       	sbi	0x0b, 1	; 11
     258:	5a 9a       	sbi	0x0b, 2	; 11
     25a:	8c e0       	ldi	r24, 0x0C	; 12
     25c:	80 93 b8 00 	sts	0x00B8, r24
     260:	e9 e6       	ldi	r30, 0x69	; 105
     262:	f0 e0       	ldi	r31, 0x00	; 0
     264:	80 81       	ld	r24, Z
     266:	80 62       	ori	r24, 0x20	; 32
     268:	80 83       	st	Z, r24
     26a:	80 81       	ld	r24, Z
     26c:	8f 7e       	andi	r24, 0xEF	; 239
     26e:	80 83       	st	Z, r24
     270:	ea 9a       	sbi	0x1d, 2	; 29
     272:	78 94       	sei
     274:	08 95       	ret

00000276 <getData>:
int far1 = 0, far2 = 0, close1 = 0, close2 = 0;

int numlost = 0;
int recalibrate = 0;

unsigned char getData(unsigned int* x, unsigned int* y) {
     276:	0f 93       	push	r16
     278:	1f 93       	push	r17
     27a:	cf 93       	push	r28
     27c:	df 93       	push	r29
     27e:	8c 01       	movw	r16, r24
     280:	eb 01       	movw	r28, r22
	m_wii_read(blobs);
     282:	82 e4       	ldi	r24, 0x42	; 66
     284:	91 e0       	ldi	r25, 0x01	; 1
     286:	0e 94 f6 08 	call	0x11ec	; 0x11ec <m_wii_read>
	x[0] = blobs[0];
     28a:	80 91 42 01 	lds	r24, 0x0142
     28e:	90 91 43 01 	lds	r25, 0x0143
     292:	f8 01       	movw	r30, r16
     294:	91 83       	std	Z+1, r25	; 0x01
     296:	80 83       	st	Z, r24
	x[1] = blobs[3];
     298:	80 91 48 01 	lds	r24, 0x0148
     29c:	90 91 49 01 	lds	r25, 0x0149
     2a0:	93 83       	std	Z+3, r25	; 0x03
     2a2:	82 83       	std	Z+2, r24	; 0x02
	x[2] = blobs[6];
     2a4:	80 91 4e 01 	lds	r24, 0x014E
     2a8:	90 91 4f 01 	lds	r25, 0x014F
     2ac:	95 83       	std	Z+5, r25	; 0x05
     2ae:	84 83       	std	Z+4, r24	; 0x04
	x[3] = blobs[9];
     2b0:	80 91 54 01 	lds	r24, 0x0154
     2b4:	90 91 55 01 	lds	r25, 0x0155
     2b8:	97 83       	std	Z+7, r25	; 0x07
     2ba:	86 83       	std	Z+6, r24	; 0x06
	y[0] = blobs[1];
     2bc:	80 91 44 01 	lds	r24, 0x0144
     2c0:	90 91 45 01 	lds	r25, 0x0145
     2c4:	99 83       	std	Y+1, r25	; 0x01
     2c6:	88 83       	st	Y, r24
	y[1] = blobs[4];
     2c8:	80 91 4a 01 	lds	r24, 0x014A
     2cc:	90 91 4b 01 	lds	r25, 0x014B
     2d0:	9b 83       	std	Y+3, r25	; 0x03
     2d2:	8a 83       	std	Y+2, r24	; 0x02
	y[2] = blobs[7];
     2d4:	80 91 50 01 	lds	r24, 0x0150
     2d8:	90 91 51 01 	lds	r25, 0x0151
     2dc:	9d 83       	std	Y+5, r25	; 0x05
     2de:	8c 83       	std	Y+4, r24	; 0x04
	y[3] = blobs[10];
     2e0:	80 91 56 01 	lds	r24, 0x0156
     2e4:	90 91 57 01 	lds	r25, 0x0157
     2e8:	9f 83       	std	Y+7, r25	; 0x07
     2ea:	8e 83       	std	Y+6, r24	; 0x06
	return 1;
} 
     2ec:	81 e0       	ldi	r24, 0x01	; 1
     2ee:	df 91       	pop	r29
     2f0:	cf 91       	pop	r28
     2f2:	1f 91       	pop	r17
     2f4:	0f 91       	pop	r16
     2f6:	08 95       	ret

000002f8 <determine_blobs>:

unsigned char determine_blobs() {
     2f8:	2f 92       	push	r2
     2fa:	3f 92       	push	r3
     2fc:	4f 92       	push	r4
     2fe:	5f 92       	push	r5
     300:	6f 92       	push	r6
     302:	7f 92       	push	r7
     304:	8f 92       	push	r8
     306:	9f 92       	push	r9
     308:	af 92       	push	r10
     30a:	bf 92       	push	r11
     30c:	cf 92       	push	r12
     30e:	df 92       	push	r13
     310:	ef 92       	push	r14
     312:	ff 92       	push	r15
     314:	0f 93       	push	r16
     316:	1f 93       	push	r17
     318:	cf 93       	push	r28
     31a:	df 93       	push	r29
     31c:	cd b7       	in	r28, 0x3d	; 61
     31e:	de b7       	in	r29, 0x3e	; 62
     320:	6c 97       	sbiw	r28, 0x1c	; 28
     322:	0f b6       	in	r0, 0x3f	; 63
     324:	f8 94       	cli
     326:	de bf       	out	0x3e, r29	; 62
     328:	0f be       	out	0x3f, r0	; 63
     32a:	cd bf       	out	0x3d, r28	; 61
	int exit = 0;
	distmax = 0;
     32c:	10 92 22 01 	sts	0x0122, r1
     330:	10 92 23 01 	sts	0x0123, r1
     334:	10 92 24 01 	sts	0x0124, r1
     338:	10 92 25 01 	sts	0x0125, r1
	distmin = 30000;
     33c:	80 e0       	ldi	r24, 0x00	; 0
     33e:	90 e6       	ldi	r25, 0x60	; 96
     340:	aa ee       	ldi	r26, 0xEA	; 234
     342:	b6 e4       	ldi	r27, 0x46	; 70
     344:	80 93 00 01 	sts	0x0100, r24
     348:	90 93 01 01 	sts	0x0101, r25
     34c:	a0 93 02 01 	sts	0x0102, r26
     350:	b0 93 03 01 	sts	0x0103, r27
	while (exit == 0) {
		getData(x, y);
		if (x[0] < 1023 && x[1] < 1023 && x[2] < 1023 && x[3] < 1023) {
     354:	0f 2e       	mov	r0, r31
     356:	f4 e3       	ldi	r31, 0x34	; 52
     358:	cf 2e       	mov	r12, r31
     35a:	f1 e0       	ldi	r31, 0x01	; 1
     35c:	df 2e       	mov	r13, r31
     35e:	f0 2d       	mov	r31, r0
     360:	06 e3       	ldi	r16, 0x36	; 54
     362:	11 e0       	ldi	r17, 0x01	; 1
     364:	0f 2e       	mov	r0, r31
     366:	f8 e3       	ldi	r31, 0x38	; 56
     368:	ef 2e       	mov	r14, r31
     36a:	f1 e0       	ldi	r31, 0x01	; 1
     36c:	ff 2e       	mov	r15, r31
     36e:	f0 2d       	mov	r31, r0
unsigned char determine_blobs() {
	int exit = 0;
	distmax = 0;
	distmin = 30000;
	while (exit == 0) {
		getData(x, y);
     370:	6a e2       	ldi	r22, 0x2A	; 42
     372:	71 e0       	ldi	r23, 0x01	; 1
     374:	82 e3       	ldi	r24, 0x32	; 50
     376:	91 e0       	ldi	r25, 0x01	; 1
     378:	0e 94 3b 01 	call	0x276	; 0x276 <getData>
		if (x[0] < 1023 && x[1] < 1023 && x[2] < 1023 && x[3] < 1023) {
     37c:	80 91 32 01 	lds	r24, 0x0132
     380:	90 91 33 01 	lds	r25, 0x0133
     384:	8f 3f       	cpi	r24, 0xFF	; 255
     386:	93 40       	sbci	r25, 0x03	; 3
     388:	98 f7       	brcc	.-26     	; 0x370 <determine_blobs+0x78>
     38a:	f6 01       	movw	r30, r12
     38c:	80 81       	ld	r24, Z
     38e:	91 81       	ldd	r25, Z+1	; 0x01
     390:	8f 3f       	cpi	r24, 0xFF	; 255
     392:	93 40       	sbci	r25, 0x03	; 3
     394:	68 f7       	brcc	.-38     	; 0x370 <determine_blobs+0x78>
     396:	f8 01       	movw	r30, r16
     398:	80 81       	ld	r24, Z
     39a:	91 81       	ldd	r25, Z+1	; 0x01
     39c:	8f 3f       	cpi	r24, 0xFF	; 255
     39e:	93 40       	sbci	r25, 0x03	; 3
     3a0:	38 f7       	brcc	.-50     	; 0x370 <determine_blobs+0x78>
     3a2:	f7 01       	movw	r30, r14
     3a4:	80 81       	ld	r24, Z
     3a6:	91 81       	ldd	r25, Z+1	; 0x01
     3a8:	8f 3f       	cpi	r24, 0xFF	; 255
     3aa:	93 40       	sbci	r25, 0x03	; 3
     3ac:	08 f7       	brcc	.-62     	; 0x370 <determine_blobs+0x78>
     3ae:	80 90 26 01 	lds	r8, 0x0126
     3b2:	90 90 27 01 	lds	r9, 0x0127
     3b6:	a0 90 28 01 	lds	r10, 0x0128
     3ba:	b0 90 29 01 	lds	r11, 0x0129
     3be:	20 91 22 01 	lds	r18, 0x0122
     3c2:	29 83       	std	Y+1, r18	; 0x01
     3c4:	30 91 23 01 	lds	r19, 0x0123
     3c8:	3a 83       	std	Y+2, r19	; 0x02
     3ca:	40 91 24 01 	lds	r20, 0x0124
     3ce:	4b 83       	std	Y+3, r20	; 0x03
     3d0:	50 91 25 01 	lds	r21, 0x0125
     3d4:	5c 83       	std	Y+4, r21	; 0x04
     3d6:	60 91 1c 01 	lds	r22, 0x011C
     3da:	6b 8b       	std	Y+19, r22	; 0x13
     3dc:	70 91 1d 01 	lds	r23, 0x011D
     3e0:	7c 8b       	std	Y+20, r23	; 0x14
     3e2:	80 91 1a 01 	lds	r24, 0x011A
     3e6:	89 8b       	std	Y+17, r24	; 0x11
     3e8:	90 91 1b 01 	lds	r25, 0x011B
     3ec:	9a 8b       	std	Y+18, r25	; 0x12
     3ee:	e0 91 1e 01 	lds	r30, 0x011E
     3f2:	ed 8b       	std	Y+21, r30	; 0x15
     3f4:	f0 91 1f 01 	lds	r31, 0x011F
     3f8:	fe 8b       	std	Y+22, r31	; 0x16
     3fa:	20 91 20 01 	lds	r18, 0x0120
     3fe:	2f 8b       	std	Y+23, r18	; 0x17
     400:	30 91 21 01 	lds	r19, 0x0121
     404:	38 8f       	std	Y+24, r19	; 0x18
     406:	40 91 00 01 	lds	r20, 0x0100
     40a:	4d 83       	std	Y+5, r20	; 0x05
     40c:	50 91 01 01 	lds	r21, 0x0101
     410:	5e 83       	std	Y+6, r21	; 0x06
     412:	20 90 02 01 	lds	r2, 0x0102
     416:	30 90 03 01 	lds	r3, 0x0103
     41a:	60 91 18 01 	lds	r22, 0x0118
     41e:	69 8f       	std	Y+25, r22	; 0x19
     420:	70 91 19 01 	lds	r23, 0x0119
     424:	7a 8f       	std	Y+26, r23	; 0x1a
     426:	80 91 16 01 	lds	r24, 0x0116
     42a:	90 91 17 01 	lds	r25, 0x0117
     42e:	98 8b       	std	Y+16, r25	; 0x10
     430:	8f 87       	std	Y+15, r24	; 0x0f
     432:	18 86       	std	Y+8, r1	; 0x08
     434:	1f 82       	std	Y+7, r1	; 0x07
     436:	c1 2c       	mov	r12, r1
     438:	d1 2c       	mov	r13, r1
     43a:	b9 c0       	rjmp	.+370    	; 0x5ae <determine_blobs+0x2b6>
			exit = 1;
			for (int i = 0; i < 4; i++) {
				for (int j = i; j < 4; j++) {
					if (i == j) continue;
     43c:	eb 8d       	ldd	r30, Y+27	; 0x1b
     43e:	fc 8d       	ldd	r31, Y+28	; 0x1c
     440:	e4 15       	cp	r30, r4
     442:	f5 05       	cpc	r31, r5
     444:	09 f4       	brne	.+2      	; 0x448 <determine_blobs+0x150>
     446:	9c c0       	rjmp	.+312    	; 0x580 <determine_blobs+0x288>
					dist = sqrt(((float)x[i]-(float)x[j])*((float)x[i]-(float)x[j])+((float)y[i]-(float)y[j])*((float)y[i]-(float)y[j]));
     448:	e9 85       	ldd	r30, Y+9	; 0x09
     44a:	fa 85       	ldd	r31, Y+10	; 0x0a
     44c:	60 81       	ld	r22, Z
     44e:	71 81       	ldd	r23, Z+1	; 0x01
     450:	80 e0       	ldi	r24, 0x00	; 0
     452:	90 e0       	ldi	r25, 0x00	; 0
     454:	0e 94 f2 0b 	call	0x17e4	; 0x17e4 <__floatunsisf>
     458:	6b 01       	movw	r12, r22
     45a:	7c 01       	movw	r14, r24
     45c:	f3 01       	movw	r30, r6
     45e:	60 81       	ld	r22, Z
     460:	71 81       	ldd	r23, Z+1	; 0x01
     462:	80 e0       	ldi	r24, 0x00	; 0
     464:	90 e0       	ldi	r25, 0x00	; 0
     466:	0e 94 f2 0b 	call	0x17e4	; 0x17e4 <__floatunsisf>
     46a:	9b 01       	movw	r18, r22
     46c:	ac 01       	movw	r20, r24
     46e:	c7 01       	movw	r24, r14
     470:	b6 01       	movw	r22, r12
     472:	0e 94 8e 0a 	call	0x151c	; 0x151c <__subsf3>
     476:	c6 2e       	mov	r12, r22
     478:	d7 2e       	mov	r13, r23
     47a:	e8 2e       	mov	r14, r24
     47c:	f9 2e       	mov	r15, r25
     47e:	eb 85       	ldd	r30, Y+11	; 0x0b
     480:	fc 85       	ldd	r31, Y+12	; 0x0c
     482:	60 81       	ld	r22, Z
     484:	71 81       	ldd	r23, Z+1	; 0x01
     486:	80 e0       	ldi	r24, 0x00	; 0
     488:	90 e0       	ldi	r25, 0x00	; 0
     48a:	0e 94 f2 0b 	call	0x17e4	; 0x17e4 <__floatunsisf>
     48e:	4b 01       	movw	r8, r22
     490:	5c 01       	movw	r10, r24
     492:	f8 01       	movw	r30, r16
     494:	60 81       	ld	r22, Z
     496:	71 81       	ldd	r23, Z+1	; 0x01
     498:	80 e0       	ldi	r24, 0x00	; 0
     49a:	90 e0       	ldi	r25, 0x00	; 0
     49c:	0e 94 f2 0b 	call	0x17e4	; 0x17e4 <__floatunsisf>
     4a0:	9b 01       	movw	r18, r22
     4a2:	ac 01       	movw	r20, r24
     4a4:	c5 01       	movw	r24, r10
     4a6:	b4 01       	movw	r22, r8
     4a8:	0e 94 8e 0a 	call	0x151c	; 0x151c <__subsf3>
     4ac:	86 2e       	mov	r8, r22
     4ae:	97 2e       	mov	r9, r23
     4b0:	a8 2e       	mov	r10, r24
     4b2:	b9 2e       	mov	r11, r25
     4b4:	2c 2d       	mov	r18, r12
     4b6:	3d 2d       	mov	r19, r13
     4b8:	4e 2d       	mov	r20, r14
     4ba:	5f 2d       	mov	r21, r15
     4bc:	6c 2d       	mov	r22, r12
     4be:	7d 2d       	mov	r23, r13
     4c0:	8e 2d       	mov	r24, r14
     4c2:	9f 2d       	mov	r25, r15
     4c4:	0e 94 d4 0c 	call	0x19a8	; 0x19a8 <__mulsf3>
     4c8:	6b 01       	movw	r12, r22
     4ca:	7c 01       	movw	r14, r24
     4cc:	28 2d       	mov	r18, r8
     4ce:	39 2d       	mov	r19, r9
     4d0:	4a 2d       	mov	r20, r10
     4d2:	5b 2d       	mov	r21, r11
     4d4:	68 2d       	mov	r22, r8
     4d6:	79 2d       	mov	r23, r9
     4d8:	8a 2d       	mov	r24, r10
     4da:	9b 2d       	mov	r25, r11
     4dc:	0e 94 d4 0c 	call	0x19a8	; 0x19a8 <__mulsf3>
     4e0:	9b 01       	movw	r18, r22
     4e2:	ac 01       	movw	r20, r24
     4e4:	c7 01       	movw	r24, r14
     4e6:	b6 01       	movw	r22, r12
     4e8:	0e 94 8f 0a 	call	0x151e	; 0x151e <__addsf3>
     4ec:	0e 94 3b 0d 	call	0x1a76	; 0x1a76 <sqrt>
     4f0:	86 2e       	mov	r8, r22
     4f2:	97 2e       	mov	r9, r23
     4f4:	a8 2e       	mov	r10, r24
     4f6:	b9 2e       	mov	r11, r25
					if (dist > distmax) {
     4f8:	79 81       	ldd	r23, Y+1	; 0x01
     4fa:	6a 81       	ldd	r22, Y+2	; 0x02
     4fc:	9b 81       	ldd	r25, Y+3	; 0x03
     4fe:	8c 81       	ldd	r24, Y+4	; 0x04
     500:	27 2f       	mov	r18, r23
     502:	36 2f       	mov	r19, r22
     504:	49 2f       	mov	r20, r25
     506:	58 2f       	mov	r21, r24
     508:	68 2d       	mov	r22, r8
     50a:	79 2d       	mov	r23, r9
     50c:	8a 2d       	mov	r24, r10
     50e:	9b 2d       	mov	r25, r11
     510:	0e 94 c9 0c 	call	0x1992	; 0x1992 <__gesf2>
     514:	18 16       	cp	r1, r24
     516:	d4 f4       	brge	.+52     	; 0x54c <determine_blobs+0x254>
						distmax = dist;
						far1 = i;
						far2 = j;
						dcenter = dist / 2.0;
     518:	20 e0       	ldi	r18, 0x00	; 0
     51a:	30 e0       	ldi	r19, 0x00	; 0
     51c:	40 e0       	ldi	r20, 0x00	; 0
     51e:	5f e3       	ldi	r21, 0x3F	; 63
     520:	68 2d       	mov	r22, r8
     522:	79 2d       	mov	r23, r9
     524:	8a 2d       	mov	r24, r10
     526:	9b 2d       	mov	r25, r11
     528:	0e 94 d4 0c 	call	0x19a8	; 0x19a8 <__mulsf3>
     52c:	6d 8b       	std	Y+21, r22	; 0x15
     52e:	7e 8b       	std	Y+22, r23	; 0x16
     530:	8f 8b       	std	Y+23, r24	; 0x17
     532:	98 8f       	std	Y+24, r25	; 0x18
					if (i == j) continue;
					dist = sqrt(((float)x[i]-(float)x[j])*((float)x[i]-(float)x[j])+((float)y[i]-(float)y[j])*((float)y[i]-(float)y[j]));
					if (dist > distmax) {
						distmax = dist;
						far1 = i;
						far2 = j;
     534:	fb 8d       	ldd	r31, Y+27	; 0x1b
     536:	f9 8b       	std	Y+17, r31	; 0x11
     538:	2c 8d       	ldd	r18, Y+28	; 0x1c
     53a:	2a 8b       	std	Y+18, r18	; 0x12
				for (int j = i; j < 4; j++) {
					if (i == j) continue;
					dist = sqrt(((float)x[i]-(float)x[j])*((float)x[i]-(float)x[j])+((float)y[i]-(float)y[j])*((float)y[i]-(float)y[j]));
					if (dist > distmax) {
						distmax = dist;
						far1 = i;
     53c:	3d 85       	ldd	r19, Y+13	; 0x0d
     53e:	3b 8b       	std	Y+19, r19	; 0x13
     540:	4e 85       	ldd	r20, Y+14	; 0x0e
     542:	4c 8b       	std	Y+20, r20	; 0x14
			for (int i = 0; i < 4; i++) {
				for (int j = i; j < 4; j++) {
					if (i == j) continue;
					dist = sqrt(((float)x[i]-(float)x[j])*((float)x[i]-(float)x[j])+((float)y[i]-(float)y[j])*((float)y[i]-(float)y[j]));
					if (dist > distmax) {
						distmax = dist;
     544:	89 82       	std	Y+1, r8	; 0x01
     546:	9a 82       	std	Y+2, r9	; 0x02
     548:	ab 82       	std	Y+3, r10	; 0x03
     54a:	bc 82       	std	Y+4, r11	; 0x04
						far1 = i;
						far2 = j;
						dcenter = dist / 2.0;
					}
					if (dist < distmin) {
     54c:	7d 81       	ldd	r23, Y+5	; 0x05
     54e:	6e 81       	ldd	r22, Y+6	; 0x06
     550:	27 2f       	mov	r18, r23
     552:	36 2f       	mov	r19, r22
     554:	42 2d       	mov	r20, r2
     556:	53 2d       	mov	r21, r3
     558:	68 2d       	mov	r22, r8
     55a:	79 2d       	mov	r23, r9
     55c:	8a 2d       	mov	r24, r10
     55e:	9b 2d       	mov	r25, r11
     560:	0e 94 55 0b 	call	0x16aa	; 0x16aa <__cmpsf2>
     564:	88 23       	and	r24, r24
     566:	64 f4       	brge	.+24     	; 0x580 <determine_blobs+0x288>
						distmin = dist;
						close1 = i;
						close2 = j;
     568:	6b 8d       	ldd	r22, Y+27	; 0x1b
     56a:	7c 8d       	ldd	r23, Y+28	; 0x1c
     56c:	78 8b       	std	Y+16, r23	; 0x10
     56e:	6f 87       	std	Y+15, r22	; 0x0f
						far2 = j;
						dcenter = dist / 2.0;
					}
					if (dist < distmin) {
						distmin = dist;
						close1 = i;
     570:	7d 85       	ldd	r23, Y+13	; 0x0d
     572:	79 8f       	std	Y+25, r23	; 0x19
     574:	8e 85       	ldd	r24, Y+14	; 0x0e
     576:	8a 8f       	std	Y+26, r24	; 0x1a
						far1 = i;
						far2 = j;
						dcenter = dist / 2.0;
					}
					if (dist < distmin) {
						distmin = dist;
     578:	8d 82       	std	Y+5, r8	; 0x05
     57a:	9e 82       	std	Y+6, r9	; 0x06
     57c:	2a 2c       	mov	r2, r10
     57e:	3b 2c       	mov	r3, r11
     580:	92 e0       	ldi	r25, 0x02	; 2
     582:	69 0e       	add	r6, r25
     584:	71 1c       	adc	r7, r1
     586:	0e 5f       	subi	r16, 0xFE	; 254
     588:	1f 4f       	sbci	r17, 0xFF	; 255
	while (exit == 0) {
		getData(x, y);
		if (x[0] < 1023 && x[1] < 1023 && x[2] < 1023 && x[3] < 1023) {
			exit = 1;
			for (int i = 0; i < 4; i++) {
				for (int j = i; j < 4; j++) {
     58a:	eb 8d       	ldd	r30, Y+27	; 0x1b
     58c:	fc 8d       	ldd	r31, Y+28	; 0x1c
     58e:	31 96       	adiw	r30, 0x01	; 1
     590:	fc 8f       	std	Y+28, r31	; 0x1c
     592:	eb 8f       	std	Y+27, r30	; 0x1b
     594:	34 97       	sbiw	r30, 0x04	; 4
     596:	09 f0       	breq	.+2      	; 0x59a <determine_blobs+0x2a2>
     598:	51 cf       	rjmp	.-350    	; 0x43c <determine_blobs+0x144>
	distmin = 30000;
	while (exit == 0) {
		getData(x, y);
		if (x[0] < 1023 && x[1] < 1023 && x[2] < 1023 && x[3] < 1023) {
			exit = 1;
			for (int i = 0; i < 4; i++) {
     59a:	2f 81       	ldd	r18, Y+7	; 0x07
     59c:	38 85       	ldd	r19, Y+8	; 0x08
     59e:	2f 5f       	subi	r18, 0xFF	; 255
     5a0:	3f 4f       	sbci	r19, 0xFF	; 255
     5a2:	38 87       	std	Y+8, r19	; 0x08
     5a4:	2f 83       	std	Y+7, r18	; 0x07
     5a6:	69 01       	movw	r12, r18
     5a8:	24 30       	cpi	r18, 0x04	; 4
     5aa:	31 05       	cpc	r19, r1
     5ac:	39 f1       	breq	.+78     	; 0x5fc <determine_blobs+0x304>
				for (int j = i; j < 4; j++) {
     5ae:	34 e0       	ldi	r19, 0x04	; 4
     5b0:	c3 16       	cp	r12, r19
     5b2:	d1 04       	cpc	r13, r1
     5b4:	94 f7       	brge	.-28     	; 0x59a <determine_blobs+0x2a2>
					if (i == j) continue;
					dist = sqrt(((float)x[i]-(float)x[j])*((float)x[i]-(float)x[j])+((float)y[i]-(float)y[j])*((float)y[i]-(float)y[j]));
     5b6:	86 01       	movw	r16, r12
     5b8:	0f 5f       	subi	r16, 0xFF	; 255
     5ba:	1f 4f       	sbci	r17, 0xFF	; 255
	y[2] = blobs[7];
	y[3] = blobs[10];
	return 1;
} 

unsigned char determine_blobs() {
     5bc:	00 0f       	add	r16, r16
     5be:	11 1f       	adc	r17, r17
     5c0:	0f 2e       	mov	r0, r31
     5c2:	f2 e3       	ldi	r31, 0x32	; 50
     5c4:	ef 2e       	mov	r14, r31
     5c6:	f1 e0       	ldi	r31, 0x01	; 1
     5c8:	ff 2e       	mov	r15, r31
     5ca:	f0 2d       	mov	r31, r0
     5cc:	e0 0e       	add	r14, r16
     5ce:	f1 1e       	adc	r15, r17
     5d0:	06 5d       	subi	r16, 0xD6	; 214
     5d2:	1e 4f       	sbci	r17, 0xFE	; 254
		if (x[0] < 1023 && x[1] < 1023 && x[2] < 1023 && x[3] < 1023) {
			exit = 1;
			for (int i = 0; i < 4; i++) {
				for (int j = i; j < 4; j++) {
					if (i == j) continue;
					dist = sqrt(((float)x[i]-(float)x[j])*((float)x[i]-(float)x[j])+((float)y[i]-(float)y[j])*((float)y[i]-(float)y[j]));
     5d4:	c6 01       	movw	r24, r12
     5d6:	88 0f       	add	r24, r24
     5d8:	99 1f       	adc	r25, r25
     5da:	ac 01       	movw	r20, r24
     5dc:	4e 5c       	subi	r20, 0xCE	; 206
     5de:	5e 4f       	sbci	r21, 0xFE	; 254
     5e0:	5a 87       	std	Y+10, r21	; 0x0a
     5e2:	49 87       	std	Y+9, r20	; 0x09
     5e4:	bc 01       	movw	r22, r24
     5e6:	66 5d       	subi	r22, 0xD6	; 214
     5e8:	7e 4f       	sbci	r23, 0xFE	; 254
     5ea:	7c 87       	std	Y+12, r23	; 0x0c
     5ec:	6b 87       	std	Y+11, r22	; 0x0b
						far2 = j;
						dcenter = dist / 2.0;
					}
					if (dist < distmin) {
						distmin = dist;
						close1 = i;
     5ee:	cd 86       	std	Y+13, r12	; 0x0d
     5f0:	de 86       	std	Y+14, r13	; 0x0e
     5f2:	dc 8e       	std	Y+28, r13	; 0x1c
     5f4:	cb 8e       	std	Y+27, r12	; 0x1b
     5f6:	26 01       	movw	r4, r12
     5f8:	37 01       	movw	r6, r14
     5fa:	c7 cf       	rjmp	.-114    	; 0x58a <determine_blobs+0x292>
     5fc:	88 2d       	mov	r24, r8
     5fe:	99 2d       	mov	r25, r9
     600:	aa 2d       	mov	r26, r10
     602:	bb 2d       	mov	r27, r11
     604:	80 93 26 01 	sts	0x0126, r24
     608:	90 93 27 01 	sts	0x0127, r25
     60c:	a0 93 28 01 	sts	0x0128, r26
     610:	b0 93 29 01 	sts	0x0129, r27
     614:	59 81       	ldd	r21, Y+1	; 0x01
     616:	4a 81       	ldd	r20, Y+2	; 0x02
     618:	3b 81       	ldd	r19, Y+3	; 0x03
     61a:	2c 81       	ldd	r18, Y+4	; 0x04
     61c:	85 2f       	mov	r24, r21
     61e:	94 2f       	mov	r25, r20
     620:	a3 2f       	mov	r26, r19
     622:	b2 2f       	mov	r27, r18
     624:	80 93 22 01 	sts	0x0122, r24
     628:	90 93 23 01 	sts	0x0123, r25
     62c:	a0 93 24 01 	sts	0x0124, r26
     630:	b0 93 25 01 	sts	0x0125, r27
     634:	7b 89       	ldd	r23, Y+19	; 0x13
     636:	70 93 1c 01 	sts	0x011C, r23
     63a:	8c 89       	ldd	r24, Y+20	; 0x14
     63c:	80 93 1d 01 	sts	0x011D, r24
     640:	99 89       	ldd	r25, Y+17	; 0x11
     642:	90 93 1a 01 	sts	0x011A, r25
     646:	ea 89       	ldd	r30, Y+18	; 0x12
     648:	e0 93 1b 01 	sts	0x011B, r30
     64c:	5d 89       	ldd	r21, Y+21	; 0x15
     64e:	4e 89       	ldd	r20, Y+22	; 0x16
     650:	3f 89       	ldd	r19, Y+23	; 0x17
     652:	28 8d       	ldd	r18, Y+24	; 0x18
     654:	85 2f       	mov	r24, r21
     656:	94 2f       	mov	r25, r20
     658:	a3 2f       	mov	r26, r19
     65a:	b2 2f       	mov	r27, r18
     65c:	80 93 1e 01 	sts	0x011E, r24
     660:	90 93 1f 01 	sts	0x011F, r25
     664:	a0 93 20 01 	sts	0x0120, r26
     668:	b0 93 21 01 	sts	0x0121, r27
     66c:	5d 81       	ldd	r21, Y+5	; 0x05
     66e:	4e 81       	ldd	r20, Y+6	; 0x06
     670:	85 2f       	mov	r24, r21
     672:	94 2f       	mov	r25, r20
     674:	a2 2d       	mov	r26, r2
     676:	b3 2d       	mov	r27, r3
     678:	80 93 00 01 	sts	0x0100, r24
     67c:	90 93 01 01 	sts	0x0101, r25
     680:	a0 93 02 01 	sts	0x0102, r26
     684:	b0 93 03 01 	sts	0x0103, r27
     688:	f9 8d       	ldd	r31, Y+25	; 0x19
     68a:	f0 93 18 01 	sts	0x0118, r31
     68e:	2a 8d       	ldd	r18, Y+26	; 0x1a
     690:	20 93 19 01 	sts	0x0119, r18
     694:	3f 85       	ldd	r19, Y+15	; 0x0f
     696:	30 93 16 01 	sts	0x0116, r19
     69a:	48 89       	ldd	r20, Y+16	; 0x10
     69c:	40 93 17 01 	sts	0x0117, r20
						close2 = j;
					}
				}
			}
			if (far1 == close1) {
     6a0:	80 91 1c 01 	lds	r24, 0x011C
     6a4:	90 91 1d 01 	lds	r25, 0x011D
     6a8:	20 91 18 01 	lds	r18, 0x0118
     6ac:	30 91 19 01 	lds	r19, 0x0119
     6b0:	82 17       	cp	r24, r18
     6b2:	93 07       	cpc	r25, r19
     6b4:	19 f5       	brne	.+70     	; 0x6fc <determine_blobs+0x404>
				top = far1;
     6b6:	90 93 41 01 	sts	0x0141, r25
     6ba:	80 93 40 01 	sts	0x0140, r24
				bottom = far2;
     6be:	40 91 1a 01 	lds	r20, 0x011A
     6c2:	50 91 1b 01 	lds	r21, 0x011B
     6c6:	50 93 3f 01 	sts	0x013F, r21
     6ca:	40 93 3e 01 	sts	0x013E, r20
				right = close2;
     6ce:	20 91 16 01 	lds	r18, 0x0116
     6d2:	30 91 17 01 	lds	r19, 0x0117
     6d6:	30 93 3b 01 	sts	0x013B, r19
     6da:	20 93 3a 01 	sts	0x013A, r18
				//left + top + bottom + right = 1 + 2 + 3 + 4 = 10
				left = 9 - top - bottom - right;
     6de:	69 e0       	ldi	r22, 0x09	; 9
     6e0:	70 e0       	ldi	r23, 0x00	; 0
     6e2:	fb 01       	movw	r30, r22
     6e4:	e8 1b       	sub	r30, r24
     6e6:	f9 0b       	sbc	r31, r25
     6e8:	cf 01       	movw	r24, r30
     6ea:	84 1b       	sub	r24, r20
     6ec:	95 0b       	sbc	r25, r21
     6ee:	82 1b       	sub	r24, r18
     6f0:	93 0b       	sbc	r25, r19
     6f2:	90 93 3d 01 	sts	0x013D, r25
     6f6:	80 93 3c 01 	sts	0x013C, r24
     6fa:	66 c0       	rjmp	.+204    	; 0x7c8 <determine_blobs+0x4d0>
			}
			else if (far1 == close2) {
     6fc:	4f 85       	ldd	r20, Y+15	; 0x0f
     6fe:	58 89       	ldd	r21, Y+16	; 0x10
     700:	84 17       	cp	r24, r20
     702:	95 07       	cpc	r25, r21
     704:	f9 f4       	brne	.+62     	; 0x744 <determine_blobs+0x44c>
				top = far1;
     706:	90 93 41 01 	sts	0x0141, r25
     70a:	80 93 40 01 	sts	0x0140, r24
				bottom = far2;
     70e:	40 91 1a 01 	lds	r20, 0x011A
     712:	50 91 1b 01 	lds	r21, 0x011B
     716:	50 93 3f 01 	sts	0x013F, r21
     71a:	40 93 3e 01 	sts	0x013E, r20
				right = close1;
     71e:	30 93 3b 01 	sts	0x013B, r19
     722:	20 93 3a 01 	sts	0x013A, r18
				left = 9 - top - bottom - right;
     726:	69 e0       	ldi	r22, 0x09	; 9
     728:	70 e0       	ldi	r23, 0x00	; 0
     72a:	fb 01       	movw	r30, r22
     72c:	e8 1b       	sub	r30, r24
     72e:	f9 0b       	sbc	r31, r25
     730:	cf 01       	movw	r24, r30
     732:	84 1b       	sub	r24, r20
     734:	95 0b       	sbc	r25, r21
     736:	82 1b       	sub	r24, r18
     738:	93 0b       	sbc	r25, r19
     73a:	90 93 3d 01 	sts	0x013D, r25
     73e:	80 93 3c 01 	sts	0x013C, r24
     742:	42 c0       	rjmp	.+132    	; 0x7c8 <determine_blobs+0x4d0>
			}
			else if (far2 == close1) {
     744:	40 91 1a 01 	lds	r20, 0x011A
     748:	50 91 1b 01 	lds	r21, 0x011B
     74c:	24 17       	cp	r18, r20
     74e:	35 07       	cpc	r19, r21
     750:	01 f5       	brne	.+64     	; 0x792 <determine_blobs+0x49a>
				top = far2;
     752:	30 93 41 01 	sts	0x0141, r19
     756:	20 93 40 01 	sts	0x0140, r18
				bottom = far1;
     75a:	90 93 3f 01 	sts	0x013F, r25
     75e:	80 93 3e 01 	sts	0x013E, r24
				right = close2;
     762:	4f 85       	ldd	r20, Y+15	; 0x0f
     764:	58 89       	ldd	r21, Y+16	; 0x10
     766:	50 93 3b 01 	sts	0x013B, r21
     76a:	40 93 3a 01 	sts	0x013A, r20
				left = 9 - top - bottom - right;
     76e:	49 e0       	ldi	r20, 0x09	; 9
     770:	50 e0       	ldi	r21, 0x00	; 0
     772:	ba 01       	movw	r22, r20
     774:	62 1b       	sub	r22, r18
     776:	73 0b       	sbc	r23, r19
     778:	fb 01       	movw	r30, r22
     77a:	e8 1b       	sub	r30, r24
     77c:	f9 0b       	sbc	r31, r25
     77e:	cf 01       	movw	r24, r30
     780:	2f 85       	ldd	r18, Y+15	; 0x0f
     782:	38 89       	ldd	r19, Y+16	; 0x10
     784:	82 1b       	sub	r24, r18
     786:	93 0b       	sbc	r25, r19
     788:	90 93 3d 01 	sts	0x013D, r25
     78c:	80 93 3c 01 	sts	0x013C, r24
     790:	1b c0       	rjmp	.+54     	; 0x7c8 <determine_blobs+0x4d0>
			}
			else {
				top = far2;
     792:	50 93 41 01 	sts	0x0141, r21
     796:	40 93 40 01 	sts	0x0140, r20
				bottom = far1;
     79a:	90 93 3f 01 	sts	0x013F, r25
     79e:	80 93 3e 01 	sts	0x013E, r24
				right = close1;
     7a2:	30 93 3b 01 	sts	0x013B, r19
     7a6:	20 93 3a 01 	sts	0x013A, r18
				left = 9 - top - bottom - right;
     7aa:	69 e0       	ldi	r22, 0x09	; 9
     7ac:	70 e0       	ldi	r23, 0x00	; 0
     7ae:	fb 01       	movw	r30, r22
     7b0:	e4 1b       	sub	r30, r20
     7b2:	f5 0b       	sbc	r31, r21
     7b4:	bf 01       	movw	r22, r30
     7b6:	68 1b       	sub	r22, r24
     7b8:	79 0b       	sbc	r23, r25
     7ba:	cb 01       	movw	r24, r22
     7bc:	82 1b       	sub	r24, r18
     7be:	93 0b       	sbc	r25, r19
     7c0:	90 93 3d 01 	sts	0x013D, r25
     7c4:	80 93 3c 01 	sts	0x013C, r24
			}
		}
	}
	return 1;
}
     7c8:	81 e0       	ldi	r24, 0x01	; 1
     7ca:	6c 96       	adiw	r28, 0x1c	; 28
     7cc:	0f b6       	in	r0, 0x3f	; 63
     7ce:	f8 94       	cli
     7d0:	de bf       	out	0x3e, r29	; 62
     7d2:	0f be       	out	0x3f, r0	; 63
     7d4:	cd bf       	out	0x3d, r28	; 61
     7d6:	df 91       	pop	r29
     7d8:	cf 91       	pop	r28
     7da:	1f 91       	pop	r17
     7dc:	0f 91       	pop	r16
     7de:	ff 90       	pop	r15
     7e0:	ef 90       	pop	r14
     7e2:	df 90       	pop	r13
     7e4:	cf 90       	pop	r12
     7e6:	bf 90       	pop	r11
     7e8:	af 90       	pop	r10
     7ea:	9f 90       	pop	r9
     7ec:	8f 90       	pop	r8
     7ee:	7f 90       	pop	r7
     7f0:	6f 90       	pop	r6
     7f2:	5f 90       	pop	r5
     7f4:	4f 90       	pop	r4
     7f6:	3f 90       	pop	r3
     7f8:	2f 90       	pop	r2
     7fa:	08 95       	ret

000007fc <localize>:
	data[1] = blobs[1];
	data[2] = 1.0;
}
*/

unsigned char localize (float* data) {
     7fc:	2f 92       	push	r2
     7fe:	3f 92       	push	r3
     800:	4f 92       	push	r4
     802:	5f 92       	push	r5
     804:	6f 92       	push	r6
     806:	7f 92       	push	r7
     808:	8f 92       	push	r8
     80a:	9f 92       	push	r9
     80c:	af 92       	push	r10
     80e:	bf 92       	push	r11
     810:	cf 92       	push	r12
     812:	df 92       	push	r13
     814:	ef 92       	push	r14
     816:	ff 92       	push	r15
     818:	0f 93       	push	r16
     81a:	1f 93       	push	r17
     81c:	cf 93       	push	r28
     81e:	df 93       	push	r29
     820:	cd b7       	in	r28, 0x3d	; 61
     822:	de b7       	in	r29, 0x3e	; 62
     824:	2a 97       	sbiw	r28, 0x0a	; 10
     826:	0f b6       	in	r0, 0x3f	; 63
     828:	f8 94       	cli
     82a:	de bf       	out	0x3e, r29	; 62
     82c:	0f be       	out	0x3f, r0	; 63
     82e:	cd bf       	out	0x3d, r28	; 61
     830:	9a 87       	std	Y+10, r25	; 0x0a
     832:	89 87       	std	Y+9, r24	; 0x09
	numlost = 0;
     834:	10 92 15 01 	sts	0x0115, r1
     838:	10 92 14 01 	sts	0x0114, r1
	
	//if (recalibrate == 1) {
		determine_blobs();
     83c:	0e 94 7c 01 	call	0x2f8	; 0x2f8 <determine_blobs>
	//if (numlost >= 2) {
		//recalibrate = 1;
		//return 0;
	//}
	
	if (x[top] < 1023 && x[bottom] < 1023) {
     840:	e0 90 40 01 	lds	r14, 0x0140
     844:	f0 90 41 01 	lds	r15, 0x0141
     848:	f7 01       	movw	r30, r14
     84a:	ee 0f       	add	r30, r30
     84c:	ff 1f       	adc	r31, r31
     84e:	ee 5c       	subi	r30, 0xCE	; 206
     850:	fe 4f       	sbci	r31, 0xFE	; 254
     852:	00 81       	ld	r16, Z
     854:	11 81       	ldd	r17, Z+1	; 0x01
     856:	0f 3f       	cpi	r16, 0xFF	; 255
     858:	83 e0       	ldi	r24, 0x03	; 3
     85a:	18 07       	cpc	r17, r24
     85c:	08 f0       	brcs	.+2      	; 0x860 <localize+0x64>
     85e:	9e c1       	rjmp	.+828    	; 0xb9c <__stack+0x9d>
     860:	a0 90 3e 01 	lds	r10, 0x013E
     864:	b0 90 3f 01 	lds	r11, 0x013F
     868:	f5 01       	movw	r30, r10
     86a:	ee 0f       	add	r30, r30
     86c:	ff 1f       	adc	r31, r31
     86e:	ee 5c       	subi	r30, 0xCE	; 206
     870:	fe 4f       	sbci	r31, 0xFE	; 254
     872:	c0 80       	ld	r12, Z
     874:	d1 80       	ldd	r13, Z+1	; 0x01
     876:	ef ef       	ldi	r30, 0xFF	; 255
     878:	ce 16       	cp	r12, r30
     87a:	e3 e0       	ldi	r30, 0x03	; 3
     87c:	de 06       	cpc	r13, r30
     87e:	08 f0       	brcs	.+2      	; 0x882 <localize+0x86>
     880:	8d c1       	rjmp	.+794    	; 0xb9c <__stack+0x9d>
		//calculate and store pixel-space position and orientation
		posx = (float) ((float)(x[top]+x[bottom]))/2.0;
     882:	b6 01       	movw	r22, r12
     884:	60 0f       	add	r22, r16
     886:	71 1f       	adc	r23, r17
     888:	80 e0       	ldi	r24, 0x00	; 0
     88a:	90 e0       	ldi	r25, 0x00	; 0
     88c:	0e 94 f2 0b 	call	0x17e4	; 0x17e4 <__floatunsisf>
     890:	20 e0       	ldi	r18, 0x00	; 0
     892:	30 e0       	ldi	r19, 0x00	; 0
     894:	40 e0       	ldi	r20, 0x00	; 0
     896:	5f e3       	ldi	r21, 0x3F	; 63
     898:	0e 94 d4 0c 	call	0x19a8	; 0x19a8 <__mulsf3>
     89c:	69 83       	std	Y+1, r22	; 0x01
     89e:	7a 83       	std	Y+2, r23	; 0x02
     8a0:	8b 83       	std	Y+3, r24	; 0x03
     8a2:	9c 83       	std	Y+4, r25	; 0x04
		posy = (float) ((float)(y[top]+y[bottom]))/2.0;
     8a4:	f7 01       	movw	r30, r14
     8a6:	ee 0f       	add	r30, r30
     8a8:	ff 1f       	adc	r31, r31
     8aa:	e6 5d       	subi	r30, 0xD6	; 214
     8ac:	fe 4f       	sbci	r31, 0xFE	; 254
     8ae:	e0 80       	ld	r14, Z
     8b0:	f1 80       	ldd	r15, Z+1	; 0x01
     8b2:	f5 01       	movw	r30, r10
     8b4:	ee 0f       	add	r30, r30
     8b6:	ff 1f       	adc	r31, r31
     8b8:	e6 5d       	subi	r30, 0xD6	; 214
     8ba:	fe 4f       	sbci	r31, 0xFE	; 254
     8bc:	a0 80       	ld	r10, Z
     8be:	b1 80       	ldd	r11, Z+1	; 0x01
     8c0:	b5 01       	movw	r22, r10
     8c2:	6e 0d       	add	r22, r14
     8c4:	7f 1d       	adc	r23, r15
     8c6:	80 e0       	ldi	r24, 0x00	; 0
     8c8:	90 e0       	ldi	r25, 0x00	; 0
     8ca:	0e 94 f2 0b 	call	0x17e4	; 0x17e4 <__floatunsisf>
     8ce:	20 e0       	ldi	r18, 0x00	; 0
     8d0:	30 e0       	ldi	r19, 0x00	; 0
     8d2:	40 e0       	ldi	r20, 0x00	; 0
     8d4:	5f e3       	ldi	r21, 0x3F	; 63
     8d6:	0e 94 d4 0c 	call	0x19a8	; 0x19a8 <__mulsf3>
     8da:	6d 83       	std	Y+5, r22	; 0x05
     8dc:	7e 83       	std	Y+6, r23	; 0x06
     8de:	28 2e       	mov	r2, r24
     8e0:	39 2e       	mov	r3, r25
		
		
		//calculate and store angle
		angle = (float) atan2(((double) ((float)y[top]-(float)y[bottom])),((double) ((float)x[top]-(float)x[bottom])));
     8e2:	b8 01       	movw	r22, r16
     8e4:	80 e0       	ldi	r24, 0x00	; 0
     8e6:	90 e0       	ldi	r25, 0x00	; 0
     8e8:	0e 94 f2 0b 	call	0x17e4	; 0x17e4 <__floatunsisf>
     8ec:	2b 01       	movw	r4, r22
     8ee:	3c 01       	movw	r6, r24
     8f0:	b6 01       	movw	r22, r12
     8f2:	80 e0       	ldi	r24, 0x00	; 0
     8f4:	90 e0       	ldi	r25, 0x00	; 0
     8f6:	0e 94 f2 0b 	call	0x17e4	; 0x17e4 <__floatunsisf>
     8fa:	9b 01       	movw	r18, r22
     8fc:	ac 01       	movw	r20, r24
     8fe:	c3 01       	movw	r24, r6
     900:	b2 01       	movw	r22, r4
     902:	0e 94 8e 0a 	call	0x151c	; 0x151c <__subsf3>
     906:	2b 01       	movw	r4, r22
     908:	3c 01       	movw	r6, r24
     90a:	b7 01       	movw	r22, r14
     90c:	80 e0       	ldi	r24, 0x00	; 0
     90e:	90 e0       	ldi	r25, 0x00	; 0
     910:	0e 94 f2 0b 	call	0x17e4	; 0x17e4 <__floatunsisf>
     914:	6b 01       	movw	r12, r22
     916:	7c 01       	movw	r14, r24
     918:	b5 01       	movw	r22, r10
     91a:	80 e0       	ldi	r24, 0x00	; 0
     91c:	90 e0       	ldi	r25, 0x00	; 0
     91e:	0e 94 f2 0b 	call	0x17e4	; 0x17e4 <__floatunsisf>
     922:	9b 01       	movw	r18, r22
     924:	ac 01       	movw	r20, r24
     926:	c7 01       	movw	r24, r14
     928:	b6 01       	movw	r22, r12
     92a:	0e 94 8e 0a 	call	0x151c	; 0x151c <__subsf3>
     92e:	a3 01       	movw	r20, r6
     930:	92 01       	movw	r18, r4
     932:	0e 94 02 0b 	call	0x1604	; 0x1604 <atan2>
     936:	6b 01       	movw	r12, r22
     938:	7c 01       	movw	r14, r24
		phi = ((float) atan2((double) posy, (double) posx));
     93a:	79 81       	ldd	r23, Y+1	; 0x01
     93c:	6a 81       	ldd	r22, Y+2	; 0x02
     93e:	9b 81       	ldd	r25, Y+3	; 0x03
     940:	8c 81       	ldd	r24, Y+4	; 0x04
     942:	27 2f       	mov	r18, r23
     944:	36 2f       	mov	r19, r22
     946:	49 2f       	mov	r20, r25
     948:	58 2f       	mov	r21, r24
     94a:	bd 81       	ldd	r27, Y+5	; 0x05
     94c:	ae 81       	ldd	r26, Y+6	; 0x06
     94e:	6b 2f       	mov	r22, r27
     950:	7a 2f       	mov	r23, r26
     952:	82 2d       	mov	r24, r2
     954:	93 2d       	mov	r25, r3
     956:	0e 94 02 0b 	call	0x1604	; 0x1604 <atan2>
     95a:	4b 01       	movw	r8, r22
     95c:	5c 01       	movw	r10, r24
		
		r = (float) sqrt((double)((posx-rcenterx)*(posx-rcenterx) + (posy-rcentery)*(posy-rcentery)));
     95e:	20 91 08 01 	lds	r18, 0x0108
     962:	30 91 09 01 	lds	r19, 0x0109
     966:	40 91 0a 01 	lds	r20, 0x010A
     96a:	50 91 0b 01 	lds	r21, 0x010B
     96e:	b9 81       	ldd	r27, Y+1	; 0x01
     970:	aa 81       	ldd	r26, Y+2	; 0x02
     972:	1b 81       	ldd	r17, Y+3	; 0x03
     974:	0c 81       	ldd	r16, Y+4	; 0x04
     976:	6b 2f       	mov	r22, r27
     978:	7a 2f       	mov	r23, r26
     97a:	81 2f       	mov	r24, r17
     97c:	90 2f       	mov	r25, r16
     97e:	0e 94 8e 0a 	call	0x151c	; 0x151c <__subsf3>
     982:	46 2e       	mov	r4, r22
     984:	57 2e       	mov	r5, r23
     986:	68 2e       	mov	r6, r24
     988:	79 2e       	mov	r7, r25
     98a:	20 91 04 01 	lds	r18, 0x0104
     98e:	30 91 05 01 	lds	r19, 0x0105
     992:	40 91 06 01 	lds	r20, 0x0106
     996:	50 91 07 01 	lds	r21, 0x0107
     99a:	bd 81       	ldd	r27, Y+5	; 0x05
     99c:	ae 81       	ldd	r26, Y+6	; 0x06
     99e:	6b 2f       	mov	r22, r27
     9a0:	7a 2f       	mov	r23, r26
     9a2:	82 2d       	mov	r24, r2
     9a4:	93 2d       	mov	r25, r3
     9a6:	0e 94 8e 0a 	call	0x151c	; 0x151c <__subsf3>
     9aa:	6f 83       	std	Y+7, r22	; 0x07
     9ac:	78 87       	std	Y+8, r23	; 0x08
     9ae:	08 2f       	mov	r16, r24
     9b0:	19 2f       	mov	r17, r25
     9b2:	24 2d       	mov	r18, r4
     9b4:	35 2d       	mov	r19, r5
     9b6:	46 2d       	mov	r20, r6
     9b8:	57 2d       	mov	r21, r7
     9ba:	64 2d       	mov	r22, r4
     9bc:	75 2d       	mov	r23, r5
     9be:	86 2d       	mov	r24, r6
     9c0:	97 2d       	mov	r25, r7
     9c2:	0e 94 d4 0c 	call	0x19a8	; 0x19a8 <__mulsf3>
     9c6:	2b 01       	movw	r4, r22
     9c8:	3c 01       	movw	r6, r24
     9ca:	7f 81       	ldd	r23, Y+7	; 0x07
     9cc:	68 85       	ldd	r22, Y+8	; 0x08
     9ce:	27 2f       	mov	r18, r23
     9d0:	36 2f       	mov	r19, r22
     9d2:	40 2f       	mov	r20, r16
     9d4:	51 2f       	mov	r21, r17
     9d6:	67 2f       	mov	r22, r23
     9d8:	73 2f       	mov	r23, r19
     9da:	80 2f       	mov	r24, r16
     9dc:	91 2f       	mov	r25, r17
     9de:	0e 94 d4 0c 	call	0x19a8	; 0x19a8 <__mulsf3>
     9e2:	9b 01       	movw	r18, r22
     9e4:	ac 01       	movw	r20, r24
     9e6:	c3 01       	movw	r24, r6
     9e8:	b2 01       	movw	r22, r4
     9ea:	0e 94 8f 0a 	call	0x151e	; 0x151e <__addsf3>
     9ee:	0e 94 3b 0d 	call	0x1a76	; 0x1a76 <sqrt>
		
		

		//data[0] = rcenterx + r * (float) cos((double) (((3 * 3.14)/2) - angle - phi));
		//data[1] = rcentery + r * (float) sin((double) (((3 * 3.14)/2) - angle - phi));
		data[0] = posx- r*phi;
     9f2:	a5 01       	movw	r20, r10
     9f4:	94 01       	movw	r18, r8
     9f6:	0e 94 d4 0c 	call	0x19a8	; 0x19a8 <__mulsf3>
     9fa:	a6 2e       	mov	r10, r22
     9fc:	b7 2e       	mov	r11, r23
     9fe:	08 2f       	mov	r16, r24
     a00:	19 2f       	mov	r17, r25
     a02:	76 2f       	mov	r23, r22
     a04:	27 2f       	mov	r18, r23
     a06:	3b 2d       	mov	r19, r11
     a08:	40 2f       	mov	r20, r16
     a0a:	51 2f       	mov	r21, r17
     a0c:	b9 81       	ldd	r27, Y+1	; 0x01
     a0e:	aa 81       	ldd	r26, Y+2	; 0x02
     a10:	9b 80       	ldd	r9, Y+3	; 0x03
     a12:	8c 80       	ldd	r8, Y+4	; 0x04
     a14:	6b 2f       	mov	r22, r27
     a16:	7a 2f       	mov	r23, r26
     a18:	89 2d       	mov	r24, r9
     a1a:	98 2d       	mov	r25, r8
     a1c:	0e 94 8e 0a 	call	0x151c	; 0x151c <__subsf3>
     a20:	e9 85       	ldd	r30, Y+9	; 0x09
     a22:	fa 85       	ldd	r31, Y+10	; 0x0a
     a24:	60 83       	st	Z, r22
     a26:	71 83       	std	Z+1, r23	; 0x01
     a28:	82 83       	std	Z+2, r24	; 0x02
     a2a:	93 83       	std	Z+3, r25	; 0x03
		data[1] = posy- r*phi;
     a2c:	2a 2d       	mov	r18, r10
     a2e:	3b 2d       	mov	r19, r11
     a30:	40 2f       	mov	r20, r16
     a32:	51 2f       	mov	r21, r17
     a34:	bd 81       	ldd	r27, Y+5	; 0x05
     a36:	ae 81       	ldd	r26, Y+6	; 0x06
     a38:	6b 2f       	mov	r22, r27
     a3a:	7a 2f       	mov	r23, r26
     a3c:	82 2d       	mov	r24, r2
     a3e:	93 2d       	mov	r25, r3
     a40:	0e 94 8e 0a 	call	0x151c	; 0x151c <__subsf3>
     a44:	e9 85       	ldd	r30, Y+9	; 0x09
     a46:	fa 85       	ldd	r31, Y+10	; 0x0a
     a48:	64 83       	std	Z+4, r22	; 0x04
     a4a:	75 83       	std	Z+5, r23	; 0x05
     a4c:	86 83       	std	Z+6, r24	; 0x06
     a4e:	97 83       	std	Z+7, r25	; 0x07
		data[2] = angle * 180.0 / 3.14;
     a50:	20 e0       	ldi	r18, 0x00	; 0
     a52:	30 e0       	ldi	r19, 0x00	; 0
     a54:	44 e3       	ldi	r20, 0x34	; 52
     a56:	53 e4       	ldi	r21, 0x43	; 67
     a58:	c7 01       	movw	r24, r14
     a5a:	b6 01       	movw	r22, r12
     a5c:	0e 94 d4 0c 	call	0x19a8	; 0x19a8 <__mulsf3>
     a60:	23 ec       	ldi	r18, 0xC3	; 195
     a62:	35 ef       	ldi	r19, 0xF5	; 245
     a64:	48 e4       	ldi	r20, 0x48	; 72
     a66:	50 e4       	ldi	r21, 0x40	; 64
     a68:	0e 94 59 0b 	call	0x16b2	; 0x16b2 <__divsf3>
     a6c:	e9 85       	ldd	r30, Y+9	; 0x09
     a6e:	fa 85       	ldd	r31, Y+10	; 0x0a
     a70:	60 87       	std	Z+8, r22	; 0x08
     a72:	71 87       	std	Z+9, r23	; 0x09
     a74:	82 87       	std	Z+10, r24	; 0x0a
     a76:	93 87       	std	Z+11, r25	; 0x0b
		data[3] = x[top];
     a78:	00 91 40 01 	lds	r16, 0x0140
     a7c:	10 91 41 01 	lds	r17, 0x0141
     a80:	00 0f       	add	r16, r16
     a82:	11 1f       	adc	r17, r17
     a84:	f8 01       	movw	r30, r16
     a86:	ee 5c       	subi	r30, 0xCE	; 206
     a88:	fe 4f       	sbci	r31, 0xFE	; 254
     a8a:	60 81       	ld	r22, Z
     a8c:	71 81       	ldd	r23, Z+1	; 0x01
     a8e:	80 e0       	ldi	r24, 0x00	; 0
     a90:	90 e0       	ldi	r25, 0x00	; 0
     a92:	0e 94 f2 0b 	call	0x17e4	; 0x17e4 <__floatunsisf>
     a96:	e9 85       	ldd	r30, Y+9	; 0x09
     a98:	fa 85       	ldd	r31, Y+10	; 0x0a
     a9a:	64 87       	std	Z+12, r22	; 0x0c
     a9c:	75 87       	std	Z+13, r23	; 0x0d
     a9e:	86 87       	std	Z+14, r24	; 0x0e
     aa0:	97 87       	std	Z+15, r25	; 0x0f
		data[4] = y[top];
     aa2:	f8 01       	movw	r30, r16
     aa4:	e6 5d       	subi	r30, 0xD6	; 214
     aa6:	fe 4f       	sbci	r31, 0xFE	; 254
     aa8:	60 81       	ld	r22, Z
     aaa:	71 81       	ldd	r23, Z+1	; 0x01
     aac:	80 e0       	ldi	r24, 0x00	; 0
     aae:	90 e0       	ldi	r25, 0x00	; 0
     ab0:	0e 94 f2 0b 	call	0x17e4	; 0x17e4 <__floatunsisf>
     ab4:	e9 85       	ldd	r30, Y+9	; 0x09
     ab6:	fa 85       	ldd	r31, Y+10	; 0x0a
     ab8:	60 8b       	std	Z+16, r22	; 0x10
     aba:	71 8b       	std	Z+17, r23	; 0x11
     abc:	82 8b       	std	Z+18, r24	; 0x12
     abe:	93 8b       	std	Z+19, r25	; 0x13
		data[5] = x[bottom];
     ac0:	00 91 3e 01 	lds	r16, 0x013E
     ac4:	10 91 3f 01 	lds	r17, 0x013F
     ac8:	00 0f       	add	r16, r16
     aca:	11 1f       	adc	r17, r17
     acc:	f8 01       	movw	r30, r16
     ace:	ee 5c       	subi	r30, 0xCE	; 206
     ad0:	fe 4f       	sbci	r31, 0xFE	; 254
     ad2:	60 81       	ld	r22, Z
     ad4:	71 81       	ldd	r23, Z+1	; 0x01
     ad6:	80 e0       	ldi	r24, 0x00	; 0
     ad8:	90 e0       	ldi	r25, 0x00	; 0
     ada:	0e 94 f2 0b 	call	0x17e4	; 0x17e4 <__floatunsisf>
     ade:	e9 85       	ldd	r30, Y+9	; 0x09
     ae0:	fa 85       	ldd	r31, Y+10	; 0x0a
     ae2:	64 8b       	std	Z+20, r22	; 0x14
     ae4:	75 8b       	std	Z+21, r23	; 0x15
     ae6:	86 8b       	std	Z+22, r24	; 0x16
     ae8:	97 8b       	std	Z+23, r25	; 0x17
		data[6] = y[bottom];
     aea:	f8 01       	movw	r30, r16
     aec:	e6 5d       	subi	r30, 0xD6	; 214
     aee:	fe 4f       	sbci	r31, 0xFE	; 254
     af0:	60 81       	ld	r22, Z
     af2:	71 81       	ldd	r23, Z+1	; 0x01
     af4:	80 e0       	ldi	r24, 0x00	; 0
     af6:	90 e0       	ldi	r25, 0x00	; 0
     af8:	0e 94 f2 0b 	call	0x17e4	; 0x17e4 <__floatunsisf>
     afc:	e9 85       	ldd	r30, Y+9	; 0x09
     afe:	fa 85       	ldd	r31, Y+10	; 0x0a
     b00:	60 8f       	std	Z+24, r22	; 0x18
     b02:	71 8f       	std	Z+25, r23	; 0x19
     b04:	82 8f       	std	Z+26, r24	; 0x1a
     b06:	93 8f       	std	Z+27, r25	; 0x1b
		data[7] = x[right];
     b08:	00 91 3a 01 	lds	r16, 0x013A
     b0c:	10 91 3b 01 	lds	r17, 0x013B
     b10:	00 0f       	add	r16, r16
     b12:	11 1f       	adc	r17, r17
     b14:	f8 01       	movw	r30, r16
     b16:	ee 5c       	subi	r30, 0xCE	; 206
     b18:	fe 4f       	sbci	r31, 0xFE	; 254
     b1a:	60 81       	ld	r22, Z
     b1c:	71 81       	ldd	r23, Z+1	; 0x01
     b1e:	80 e0       	ldi	r24, 0x00	; 0
     b20:	90 e0       	ldi	r25, 0x00	; 0
     b22:	0e 94 f2 0b 	call	0x17e4	; 0x17e4 <__floatunsisf>
     b26:	e9 85       	ldd	r30, Y+9	; 0x09
     b28:	fa 85       	ldd	r31, Y+10	; 0x0a
     b2a:	64 8f       	std	Z+28, r22	; 0x1c
     b2c:	75 8f       	std	Z+29, r23	; 0x1d
     b2e:	86 8f       	std	Z+30, r24	; 0x1e
     b30:	97 8f       	std	Z+31, r25	; 0x1f
		data[8] = y[right];
     b32:	f8 01       	movw	r30, r16
     b34:	e6 5d       	subi	r30, 0xD6	; 214
     b36:	fe 4f       	sbci	r31, 0xFE	; 254
     b38:	60 81       	ld	r22, Z
     b3a:	71 81       	ldd	r23, Z+1	; 0x01
     b3c:	80 e0       	ldi	r24, 0x00	; 0
     b3e:	90 e0       	ldi	r25, 0x00	; 0
     b40:	0e 94 f2 0b 	call	0x17e4	; 0x17e4 <__floatunsisf>
     b44:	e9 85       	ldd	r30, Y+9	; 0x09
     b46:	fa 85       	ldd	r31, Y+10	; 0x0a
     b48:	60 a3       	std	Z+32, r22	; 0x20
     b4a:	71 a3       	std	Z+33, r23	; 0x21
     b4c:	82 a3       	std	Z+34, r24	; 0x22
     b4e:	93 a3       	std	Z+35, r25	; 0x23
		data[9] = x[left];
     b50:	00 91 3c 01 	lds	r16, 0x013C
     b54:	10 91 3d 01 	lds	r17, 0x013D
     b58:	00 0f       	add	r16, r16
     b5a:	11 1f       	adc	r17, r17
     b5c:	f8 01       	movw	r30, r16
     b5e:	ee 5c       	subi	r30, 0xCE	; 206
     b60:	fe 4f       	sbci	r31, 0xFE	; 254
     b62:	60 81       	ld	r22, Z
     b64:	71 81       	ldd	r23, Z+1	; 0x01
     b66:	80 e0       	ldi	r24, 0x00	; 0
     b68:	90 e0       	ldi	r25, 0x00	; 0
     b6a:	0e 94 f2 0b 	call	0x17e4	; 0x17e4 <__floatunsisf>
     b6e:	e9 85       	ldd	r30, Y+9	; 0x09
     b70:	fa 85       	ldd	r31, Y+10	; 0x0a
     b72:	64 a3       	std	Z+36, r22	; 0x24
     b74:	75 a3       	std	Z+37, r23	; 0x25
     b76:	86 a3       	std	Z+38, r24	; 0x26
     b78:	97 a3       	std	Z+39, r25	; 0x27
		data[10] = y[left];
     b7a:	f8 01       	movw	r30, r16
     b7c:	e6 5d       	subi	r30, 0xD6	; 214
     b7e:	fe 4f       	sbci	r31, 0xFE	; 254
     b80:	60 81       	ld	r22, Z
     b82:	71 81       	ldd	r23, Z+1	; 0x01
     b84:	80 e0       	ldi	r24, 0x00	; 0
     b86:	90 e0       	ldi	r25, 0x00	; 0
     b88:	0e 94 f2 0b 	call	0x17e4	; 0x17e4 <__floatunsisf>
     b8c:	e9 85       	ldd	r30, Y+9	; 0x09
     b8e:	fa 85       	ldd	r31, Y+10	; 0x0a
     b90:	60 a7       	std	Z+40, r22	; 0x28
     b92:	71 a7       	std	Z+41, r23	; 0x29
     b94:	82 a7       	std	Z+42, r24	; 0x2a
     b96:	93 a7       	std	Z+43, r25	; 0x2b
		
		return 1;
     b98:	81 e0       	ldi	r24, 0x01	; 1
     b9a:	00 c0       	rjmp	.+0      	; 0xb9c <__stack+0x9d>
		return 1;
	}
	
	return 0;
	*/
     b9c:	2a 96       	adiw	r28, 0x0a	; 10
     b9e:	0f b6       	in	r0, 0x3f	; 63
     ba0:	f8 94       	cli
     ba2:	de bf       	out	0x3e, r29	; 62
     ba4:	0f be       	out	0x3f, r0	; 63
     ba6:	cd bf       	out	0x3d, r28	; 61
     ba8:	df 91       	pop	r29
     baa:	cf 91       	pop	r28
     bac:	1f 91       	pop	r17
     bae:	0f 91       	pop	r16
     bb0:	ff 90       	pop	r15
     bb2:	ef 90       	pop	r14
     bb4:	df 90       	pop	r13
     bb6:	cf 90       	pop	r12
     bb8:	bf 90       	pop	r11
     bba:	af 90       	pop	r10
     bbc:	9f 90       	pop	r9
     bbe:	8f 90       	pop	r8
     bc0:	7f 90       	pop	r7
     bc2:	6f 90       	pop	r6
     bc4:	5f 90       	pop	r5
     bc6:	4f 90       	pop	r4
     bc8:	3f 90       	pop	r3
     bca:	2f 90       	pop	r2
     bcc:	08 95       	ret

00000bce <m_usb_init>:
     bce:	81 e0       	ldi	r24, 0x01	; 1
     bd0:	80 93 d7 00 	sts	0x00D7, r24
     bd4:	80 ea       	ldi	r24, 0xA0	; 160
     bd6:	80 93 d8 00 	sts	0x00D8, r24
     bda:	82 e1       	ldi	r24, 0x12	; 18
     bdc:	89 bd       	out	0x29, r24	; 41
     bde:	09 b4       	in	r0, 0x29	; 41
     be0:	00 fe       	sbrs	r0, 0
     be2:	fd cf       	rjmp	.-6      	; 0xbde <m_usb_init+0x10>
     be4:	80 e9       	ldi	r24, 0x90	; 144
     be6:	80 93 d8 00 	sts	0x00D8, r24
     bea:	10 92 e0 00 	sts	0x00E0, r1
     bee:	10 92 5b 01 	sts	0x015B, r1
     bf2:	10 92 5c 01 	sts	0x015C, r1
     bf6:	8c e0       	ldi	r24, 0x0C	; 12
     bf8:	80 93 e2 00 	sts	0x00E2, r24
     bfc:	78 94       	sei
     bfe:	08 95       	ret

00000c00 <m_usb_isconnected>:
     c00:	80 91 5b 01 	lds	r24, 0x015B
     c04:	08 95       	ret

00000c06 <m_usb_rx_char>:
     c06:	9f b7       	in	r25, 0x3f	; 63
     c08:	f8 94       	cli
     c0a:	80 91 5b 01 	lds	r24, 0x015B
     c0e:	81 11       	cpse	r24, r1
     c10:	03 c0       	rjmp	.+6      	; 0xc18 <m_usb_rx_char+0x12>
     c12:	9f bf       	out	0x3f, r25	; 63
     c14:	8f ef       	ldi	r24, 0xFF	; 255
     c16:	08 95       	ret
     c18:	83 e0       	ldi	r24, 0x03	; 3
     c1a:	80 93 e9 00 	sts	0x00E9, r24
     c1e:	80 91 e8 00 	lds	r24, 0x00E8
     c22:	85 fd       	sbrc	r24, 5
     c24:	03 c0       	rjmp	.+6      	; 0xc2c <m_usb_rx_char+0x26>
     c26:	9f bf       	out	0x3f, r25	; 63
     c28:	8f ef       	ldi	r24, 0xFF	; 255
     c2a:	08 95       	ret
     c2c:	80 91 f1 00 	lds	r24, 0x00F1
     c30:	20 91 e8 00 	lds	r18, 0x00E8
     c34:	25 fd       	sbrc	r18, 5
     c36:	03 c0       	rjmp	.+6      	; 0xc3e <m_usb_rx_char+0x38>
     c38:	2b e6       	ldi	r18, 0x6B	; 107
     c3a:	20 93 e8 00 	sts	0x00E8, r18
     c3e:	9f bf       	out	0x3f, r25	; 63
     c40:	08 95       	ret

00000c42 <m_usb_rx_available>:
     c42:	9f b7       	in	r25, 0x3f	; 63
     c44:	f8 94       	cli
     c46:	80 91 5b 01 	lds	r24, 0x015B
     c4a:	88 23       	and	r24, r24
     c4c:	31 f0       	breq	.+12     	; 0xc5a <m_usb_rx_available+0x18>
     c4e:	83 e0       	ldi	r24, 0x03	; 3
     c50:	80 93 e9 00 	sts	0x00E9, r24
     c54:	80 91 f2 00 	lds	r24, 0x00F2
     c58:	01 c0       	rjmp	.+2      	; 0xc5c <m_usb_rx_available+0x1a>
     c5a:	80 e0       	ldi	r24, 0x00	; 0
     c5c:	9f bf       	out	0x3f, r25	; 63
     c5e:	08 95       	ret

00000c60 <m_usb_rx_flush>:
     c60:	80 91 5b 01 	lds	r24, 0x015B
     c64:	88 23       	and	r24, r24
     c66:	89 f0       	breq	.+34     	; 0xc8a <m_usb_rx_flush+0x2a>
     c68:	2f b7       	in	r18, 0x3f	; 63
     c6a:	f8 94       	cli
     c6c:	83 e0       	ldi	r24, 0x03	; 3
     c6e:	80 93 e9 00 	sts	0x00E9, r24
     c72:	80 91 e8 00 	lds	r24, 0x00E8
     c76:	85 ff       	sbrs	r24, 5
     c78:	07 c0       	rjmp	.+14     	; 0xc88 <m_usb_rx_flush+0x28>
     c7a:	e8 ee       	ldi	r30, 0xE8	; 232
     c7c:	f0 e0       	ldi	r31, 0x00	; 0
     c7e:	9b e6       	ldi	r25, 0x6B	; 107
     c80:	90 83       	st	Z, r25
     c82:	80 81       	ld	r24, Z
     c84:	85 fd       	sbrc	r24, 5
     c86:	fc cf       	rjmp	.-8      	; 0xc80 <m_usb_rx_flush+0x20>
     c88:	2f bf       	out	0x3f, r18	; 63
     c8a:	08 95       	ret

00000c8c <m_usb_tx_char>:
     c8c:	cf 93       	push	r28
     c8e:	df 93       	push	r29
     c90:	90 91 5b 01 	lds	r25, 0x015B
     c94:	99 23       	and	r25, r25
     c96:	09 f4       	brne	.+2      	; 0xc9a <m_usb_tx_char+0xe>
     c98:	4d c0       	rjmp	.+154    	; 0xd34 <m_usb_tx_char+0xa8>
     c9a:	9f b7       	in	r25, 0x3f	; 63
     c9c:	f8 94       	cli
     c9e:	24 e0       	ldi	r18, 0x04	; 4
     ca0:	20 93 e9 00 	sts	0x00E9, r18
     ca4:	20 91 5d 01 	lds	r18, 0x015D
     ca8:	22 23       	and	r18, r18
     caa:	49 f0       	breq	.+18     	; 0xcbe <m_usb_tx_char+0x32>
     cac:	20 91 e8 00 	lds	r18, 0x00E8
     cb0:	25 fd       	sbrc	r18, 5
     cb2:	03 c0       	rjmp	.+6      	; 0xcba <m_usb_tx_char+0x2e>
     cb4:	9f bf       	out	0x3f, r25	; 63
     cb6:	8f ef       	ldi	r24, 0xFF	; 255
     cb8:	42 c0       	rjmp	.+132    	; 0xd3e <m_usb_tx_char+0xb2>
     cba:	10 92 5d 01 	sts	0x015D, r1
     cbe:	30 91 e4 00 	lds	r19, 0x00E4
     cc2:	37 5e       	subi	r19, 0xE7	; 231
     cc4:	20 91 e8 00 	lds	r18, 0x00E8
     cc8:	25 fd       	sbrc	r18, 5
     cca:	25 c0       	rjmp	.+74     	; 0xd16 <m_usb_tx_char+0x8a>
     ccc:	9f bf       	out	0x3f, r25	; 63
     cce:	90 91 e4 00 	lds	r25, 0x00E4
     cd2:	93 17       	cp	r25, r19
     cd4:	49 f0       	breq	.+18     	; 0xce8 <m_usb_tx_char+0x5c>
     cd6:	90 91 5b 01 	lds	r25, 0x015B
     cda:	91 11       	cpse	r25, r1
     cdc:	0f c0       	rjmp	.+30     	; 0xcfc <m_usb_tx_char+0x70>
     cde:	2c c0       	rjmp	.+88     	; 0xd38 <m_usb_tx_char+0xac>
     ce0:	9f bf       	out	0x3f, r25	; 63
     ce2:	98 81       	ld	r25, Y
     ce4:	93 13       	cpse	r25, r19
     ce6:	05 c0       	rjmp	.+10     	; 0xcf2 <m_usb_tx_char+0x66>
     ce8:	81 e0       	ldi	r24, 0x01	; 1
     cea:	80 93 5d 01 	sts	0x015D, r24
     cee:	8f ef       	ldi	r24, 0xFF	; 255
     cf0:	26 c0       	rjmp	.+76     	; 0xd3e <m_usb_tx_char+0xb2>
     cf2:	90 91 5b 01 	lds	r25, 0x015B
     cf6:	91 11       	cpse	r25, r1
     cf8:	08 c0       	rjmp	.+16     	; 0xd0a <m_usb_tx_char+0x7e>
     cfa:	20 c0       	rjmp	.+64     	; 0xd3c <m_usb_tx_char+0xb0>
     cfc:	a9 ee       	ldi	r26, 0xE9	; 233
     cfe:	b0 e0       	ldi	r27, 0x00	; 0
     d00:	44 e0       	ldi	r20, 0x04	; 4
     d02:	e8 ee       	ldi	r30, 0xE8	; 232
     d04:	f0 e0       	ldi	r31, 0x00	; 0
     d06:	c4 ee       	ldi	r28, 0xE4	; 228
     d08:	d0 e0       	ldi	r29, 0x00	; 0
     d0a:	9f b7       	in	r25, 0x3f	; 63
     d0c:	f8 94       	cli
     d0e:	4c 93       	st	X, r20
     d10:	20 81       	ld	r18, Z
     d12:	25 ff       	sbrs	r18, 5
     d14:	e5 cf       	rjmp	.-54     	; 0xce0 <m_usb_tx_char+0x54>
     d16:	80 93 f1 00 	sts	0x00F1, r24
     d1a:	80 91 e8 00 	lds	r24, 0x00E8
     d1e:	85 fd       	sbrc	r24, 5
     d20:	03 c0       	rjmp	.+6      	; 0xd28 <m_usb_tx_char+0x9c>
     d22:	8a e3       	ldi	r24, 0x3A	; 58
     d24:	80 93 e8 00 	sts	0x00E8, r24
     d28:	85 e0       	ldi	r24, 0x05	; 5
     d2a:	80 93 5a 01 	sts	0x015A, r24
     d2e:	9f bf       	out	0x3f, r25	; 63
     d30:	80 e0       	ldi	r24, 0x00	; 0
     d32:	05 c0       	rjmp	.+10     	; 0xd3e <m_usb_tx_char+0xb2>
     d34:	8f ef       	ldi	r24, 0xFF	; 255
     d36:	03 c0       	rjmp	.+6      	; 0xd3e <m_usb_tx_char+0xb2>
     d38:	8f ef       	ldi	r24, 0xFF	; 255
     d3a:	01 c0       	rjmp	.+2      	; 0xd3e <m_usb_tx_char+0xb2>
     d3c:	8f ef       	ldi	r24, 0xFF	; 255
     d3e:	df 91       	pop	r29
     d40:	cf 91       	pop	r28
     d42:	08 95       	ret

00000d44 <__vector_10>:
     d44:	1f 92       	push	r1
     d46:	0f 92       	push	r0
     d48:	0f b6       	in	r0, 0x3f	; 63
     d4a:	0f 92       	push	r0
     d4c:	11 24       	eor	r1, r1
     d4e:	8f 93       	push	r24
     d50:	9f 93       	push	r25
     d52:	ef 93       	push	r30
     d54:	ff 93       	push	r31
     d56:	e1 ee       	ldi	r30, 0xE1	; 225
     d58:	f0 e0       	ldi	r31, 0x00	; 0
     d5a:	80 81       	ld	r24, Z
     d5c:	10 82       	st	Z, r1
     d5e:	83 ff       	sbrs	r24, 3
     d60:	11 c0       	rjmp	.+34     	; 0xd84 <__vector_10+0x40>
     d62:	10 92 e9 00 	sts	0x00E9, r1
     d66:	91 e0       	ldi	r25, 0x01	; 1
     d68:	90 93 eb 00 	sts	0x00EB, r25
     d6c:	10 92 ec 00 	sts	0x00EC, r1
     d70:	92 e1       	ldi	r25, 0x12	; 18
     d72:	90 93 ed 00 	sts	0x00ED, r25
     d76:	98 e0       	ldi	r25, 0x08	; 8
     d78:	90 93 f0 00 	sts	0x00F0, r25
     d7c:	10 92 5b 01 	sts	0x015B, r1
     d80:	10 92 5c 01 	sts	0x015C, r1
     d84:	82 ff       	sbrs	r24, 2
     d86:	13 c0       	rjmp	.+38     	; 0xdae <__vector_10+0x6a>
     d88:	80 91 5b 01 	lds	r24, 0x015B
     d8c:	88 23       	and	r24, r24
     d8e:	79 f0       	breq	.+30     	; 0xdae <__vector_10+0x6a>
     d90:	80 91 5a 01 	lds	r24, 0x015A
     d94:	88 23       	and	r24, r24
     d96:	59 f0       	breq	.+22     	; 0xdae <__vector_10+0x6a>
     d98:	81 50       	subi	r24, 0x01	; 1
     d9a:	80 93 5a 01 	sts	0x015A, r24
     d9e:	81 11       	cpse	r24, r1
     da0:	06 c0       	rjmp	.+12     	; 0xdae <__vector_10+0x6a>
     da2:	84 e0       	ldi	r24, 0x04	; 4
     da4:	80 93 e9 00 	sts	0x00E9, r24
     da8:	8a e3       	ldi	r24, 0x3A	; 58
     daa:	80 93 e8 00 	sts	0x00E8, r24
     dae:	ff 91       	pop	r31
     db0:	ef 91       	pop	r30
     db2:	9f 91       	pop	r25
     db4:	8f 91       	pop	r24
     db6:	0f 90       	pop	r0
     db8:	0f be       	out	0x3f, r0	; 63
     dba:	0f 90       	pop	r0
     dbc:	1f 90       	pop	r1
     dbe:	18 95       	reti

00000dc0 <__vector_11>:
     dc0:	1f 92       	push	r1
     dc2:	0f 92       	push	r0
     dc4:	0f b6       	in	r0, 0x3f	; 63
     dc6:	0f 92       	push	r0
     dc8:	11 24       	eor	r1, r1
     dca:	0f 93       	push	r16
     dcc:	1f 93       	push	r17
     dce:	2f 93       	push	r18
     dd0:	3f 93       	push	r19
     dd2:	4f 93       	push	r20
     dd4:	5f 93       	push	r21
     dd6:	6f 93       	push	r22
     dd8:	7f 93       	push	r23
     dda:	8f 93       	push	r24
     ddc:	9f 93       	push	r25
     dde:	af 93       	push	r26
     de0:	bf 93       	push	r27
     de2:	cf 93       	push	r28
     de4:	df 93       	push	r29
     de6:	ef 93       	push	r30
     de8:	ff 93       	push	r31
     dea:	10 92 e9 00 	sts	0x00E9, r1
     dee:	80 91 e8 00 	lds	r24, 0x00E8
     df2:	83 ff       	sbrs	r24, 3
     df4:	51 c1       	rjmp	.+674    	; 0x1098 <__vector_11+0x2d8>
     df6:	e1 ef       	ldi	r30, 0xF1	; 241
     df8:	f0 e0       	ldi	r31, 0x00	; 0
     dfa:	70 81       	ld	r23, Z
     dfc:	40 81       	ld	r20, Z
     dfe:	20 81       	ld	r18, Z
     e00:	30 81       	ld	r19, Z
     e02:	93 2f       	mov	r25, r19
     e04:	80 e0       	ldi	r24, 0x00	; 0
     e06:	dc 01       	movw	r26, r24
     e08:	a2 2b       	or	r26, r18
     e0a:	9d 01       	movw	r18, r26
     e0c:	50 81       	ld	r21, Z
     e0e:	60 81       	ld	r22, Z
     e10:	96 2f       	mov	r25, r22
     e12:	80 e0       	ldi	r24, 0x00	; 0
     e14:	85 2b       	or	r24, r21
     e16:	a0 81       	ld	r26, Z
     e18:	b0 81       	ld	r27, Z
     e1a:	52 ef       	ldi	r21, 0xF2	; 242
     e1c:	50 93 e8 00 	sts	0x00E8, r21
     e20:	46 30       	cpi	r20, 0x06	; 6
     e22:	09 f0       	breq	.+2      	; 0xe26 <__vector_11+0x66>
     e24:	5c c0       	rjmp	.+184    	; 0xede <__vector_11+0x11e>
     e26:	04 c0       	rjmp	.+8      	; 0xe30 <__vector_11+0x70>
     e28:	81 e2       	ldi	r24, 0x21	; 33
     e2a:	80 93 eb 00 	sts	0x00EB, r24
     e2e:	3b c1       	rjmp	.+630    	; 0x10a6 <__vector_11+0x2e6>
     e30:	c6 e0       	ldi	r28, 0x06	; 6
     e32:	49 ed       	ldi	r20, 0xD9	; 217
     e34:	50 e0       	ldi	r21, 0x00	; 0
     e36:	fa 01       	movw	r30, r20
     e38:	65 91       	lpm	r22, Z+
     e3a:	74 91       	lpm	r23, Z
     e3c:	26 17       	cp	r18, r22
     e3e:	37 07       	cpc	r19, r23
     e40:	19 f0       	breq	.+6      	; 0xe48 <__vector_11+0x88>
     e42:	49 5f       	subi	r20, 0xF9	; 249
     e44:	5f 4f       	sbci	r21, 0xFF	; 255
     e46:	20 c0       	rjmp	.+64     	; 0xe88 <__vector_11+0xc8>
     e48:	fa 01       	movw	r30, r20
     e4a:	32 96       	adiw	r30, 0x02	; 2
     e4c:	65 91       	lpm	r22, Z+
     e4e:	74 91       	lpm	r23, Z
     e50:	86 17       	cp	r24, r22
     e52:	97 07       	cpc	r25, r23
     e54:	19 f0       	breq	.+6      	; 0xe5c <__vector_11+0x9c>
     e56:	49 5f       	subi	r20, 0xF9	; 249
     e58:	5f 4f       	sbci	r21, 0xFF	; 255
     e5a:	16 c0       	rjmp	.+44     	; 0xe88 <__vector_11+0xc8>
     e5c:	fa 01       	movw	r30, r20
     e5e:	34 96       	adiw	r30, 0x04	; 4
     e60:	85 91       	lpm	r24, Z+
     e62:	94 91       	lpm	r25, Z
     e64:	28 2f       	mov	r18, r24
     e66:	39 2f       	mov	r19, r25
     e68:	fa 01       	movw	r30, r20
     e6a:	36 96       	adiw	r30, 0x06	; 6
     e6c:	44 91       	lpm	r20, Z
     e6e:	9b 2f       	mov	r25, r27
     e70:	80 e0       	ldi	r24, 0x00	; 0
     e72:	8a 2b       	or	r24, r26
     e74:	8f 3f       	cpi	r24, 0xFF	; 255
     e76:	91 05       	cpc	r25, r1
     e78:	19 f0       	breq	.+6      	; 0xe80 <__vector_11+0xc0>
     e7a:	10 f0       	brcs	.+4      	; 0xe80 <__vector_11+0xc0>
     e7c:	8f ef       	ldi	r24, 0xFF	; 255
     e7e:	90 e0       	ldi	r25, 0x00	; 0
     e80:	84 17       	cp	r24, r20
     e82:	28 f4       	brcc	.+10     	; 0xe8e <__vector_11+0xce>
     e84:	48 2f       	mov	r20, r24
     e86:	03 c0       	rjmp	.+6      	; 0xe8e <__vector_11+0xce>
     e88:	c1 50       	subi	r28, 0x01	; 1
     e8a:	a9 f6       	brne	.-86     	; 0xe36 <__vector_11+0x76>
     e8c:	cd cf       	rjmp	.-102    	; 0xe28 <__vector_11+0x68>
     e8e:	c8 ee       	ldi	r28, 0xE8	; 232
     e90:	d0 e0       	ldi	r29, 0x00	; 0
     e92:	7e ef       	ldi	r23, 0xFE	; 254
     e94:	a1 ef       	ldi	r26, 0xF1	; 241
     e96:	b0 e0       	ldi	r27, 0x00	; 0
     e98:	10 e1       	ldi	r17, 0x10	; 16
     e9a:	88 81       	ld	r24, Y
     e9c:	98 2f       	mov	r25, r24
     e9e:	95 70       	andi	r25, 0x05	; 5
     ea0:	e1 f3       	breq	.-8      	; 0xe9a <__vector_11+0xda>
     ea2:	82 fd       	sbrc	r24, 2
     ea4:	00 c1       	rjmp	.+512    	; 0x10a6 <__vector_11+0x2e6>
     ea6:	64 2f       	mov	r22, r20
     ea8:	41 31       	cpi	r20, 0x11	; 17
     eaa:	08 f0       	brcs	.+2      	; 0xeae <__vector_11+0xee>
     eac:	61 2f       	mov	r22, r17
     eae:	66 23       	and	r22, r22
     eb0:	09 f4       	brne	.+2      	; 0xeb4 <__vector_11+0xf4>
     eb2:	f6 c0       	rjmp	.+492    	; 0x10a0 <__vector_11+0x2e0>
     eb4:	c9 01       	movw	r24, r18
     eb6:	56 2f       	mov	r21, r22
     eb8:	fc 01       	movw	r30, r24
     eba:	01 96       	adiw	r24, 0x01	; 1
     ebc:	e4 91       	lpm	r30, Z
     ebe:	ec 93       	st	X, r30
     ec0:	51 50       	subi	r21, 0x01	; 1
     ec2:	d1 f7       	brne	.-12     	; 0xeb8 <__vector_11+0xf8>
     ec4:	86 2f       	mov	r24, r22
     ec6:	81 50       	subi	r24, 0x01	; 1
     ec8:	90 e0       	ldi	r25, 0x00	; 0
     eca:	01 96       	adiw	r24, 0x01	; 1
     ecc:	28 0f       	add	r18, r24
     ece:	39 1f       	adc	r19, r25
     ed0:	46 1b       	sub	r20, r22
     ed2:	78 83       	st	Y, r23
     ed4:	41 11       	cpse	r20, r1
     ed6:	e1 cf       	rjmp	.-62     	; 0xe9a <__vector_11+0xda>
     ed8:	60 31       	cpi	r22, 0x10	; 16
     eda:	f9 f2       	breq	.-66     	; 0xe9a <__vector_11+0xda>
     edc:	e4 c0       	rjmp	.+456    	; 0x10a6 <__vector_11+0x2e6>
     ede:	45 30       	cpi	r20, 0x05	; 5
     ee0:	61 f4       	brne	.+24     	; 0xefa <__vector_11+0x13a>
     ee2:	8e ef       	ldi	r24, 0xFE	; 254
     ee4:	80 93 e8 00 	sts	0x00E8, r24
     ee8:	e8 ee       	ldi	r30, 0xE8	; 232
     eea:	f0 e0       	ldi	r31, 0x00	; 0
     eec:	80 81       	ld	r24, Z
     eee:	80 ff       	sbrs	r24, 0
     ef0:	fd cf       	rjmp	.-6      	; 0xeec <__vector_11+0x12c>
     ef2:	20 68       	ori	r18, 0x80	; 128
     ef4:	20 93 e3 00 	sts	0x00E3, r18
     ef8:	d6 c0       	rjmp	.+428    	; 0x10a6 <__vector_11+0x2e6>
     efa:	49 30       	cpi	r20, 0x09	; 9
     efc:	a1 f5       	brne	.+104    	; 0xf66 <__vector_11+0x1a6>
     efe:	71 11       	cpse	r23, r1
     f00:	5b c0       	rjmp	.+182    	; 0xfb8 <__vector_11+0x1f8>
     f02:	20 93 5b 01 	sts	0x015B, r18
     f06:	10 92 5c 01 	sts	0x015C, r1
     f0a:	10 92 5a 01 	sts	0x015A, r1
     f0e:	8e ef       	ldi	r24, 0xFE	; 254
     f10:	80 93 e8 00 	sts	0x00E8, r24
     f14:	11 e0       	ldi	r17, 0x01	; 1
     f16:	83 e0       	ldi	r24, 0x03	; 3
     f18:	91 e0       	ldi	r25, 0x01	; 1
     f1a:	c9 ee       	ldi	r28, 0xE9	; 233
     f1c:	d0 e0       	ldi	r29, 0x00	; 0
     f1e:	ab ee       	ldi	r26, 0xEB	; 235
     f20:	b0 e0       	ldi	r27, 0x00	; 0
     f22:	6c ee       	ldi	r22, 0xEC	; 236
     f24:	70 e0       	ldi	r23, 0x00	; 0
     f26:	4d ee       	ldi	r20, 0xED	; 237
     f28:	50 e0       	ldi	r21, 0x00	; 0
     f2a:	18 83       	st	Y, r17
     f2c:	9c 01       	movw	r18, r24
     f2e:	2f 5f       	subi	r18, 0xFF	; 255
     f30:	3f 4f       	sbci	r19, 0xFF	; 255
     f32:	fc 01       	movw	r30, r24
     f34:	04 91       	lpm	r16, Z
     f36:	0c 93       	st	X, r16
     f38:	00 23       	and	r16, r16
     f3a:	59 f0       	breq	.+22     	; 0xf52 <__vector_11+0x192>
     f3c:	f9 01       	movw	r30, r18
     f3e:	24 91       	lpm	r18, Z
     f40:	fb 01       	movw	r30, r22
     f42:	20 83       	st	Z, r18
     f44:	fc 01       	movw	r30, r24
     f46:	32 96       	adiw	r30, 0x02	; 2
     f48:	03 96       	adiw	r24, 0x03	; 3
     f4a:	24 91       	lpm	r18, Z
     f4c:	fa 01       	movw	r30, r20
     f4e:	20 83       	st	Z, r18
     f50:	01 c0       	rjmp	.+2      	; 0xf54 <__vector_11+0x194>
     f52:	c9 01       	movw	r24, r18
     f54:	1f 5f       	subi	r17, 0xFF	; 255
     f56:	15 30       	cpi	r17, 0x05	; 5
     f58:	41 f7       	brne	.-48     	; 0xf2a <__vector_11+0x16a>
     f5a:	ea ee       	ldi	r30, 0xEA	; 234
     f5c:	f0 e0       	ldi	r31, 0x00	; 0
     f5e:	8e e1       	ldi	r24, 0x1E	; 30
     f60:	80 83       	st	Z, r24
     f62:	10 82       	st	Z, r1
     f64:	a0 c0       	rjmp	.+320    	; 0x10a6 <__vector_11+0x2e6>
     f66:	48 30       	cpi	r20, 0x08	; 8
     f68:	81 f4       	brne	.+32     	; 0xf8a <__vector_11+0x1ca>
     f6a:	70 38       	cpi	r23, 0x80	; 128
     f6c:	09 f0       	breq	.+2      	; 0xf70 <__vector_11+0x1b0>
     f6e:	3f c0       	rjmp	.+126    	; 0xfee <__vector_11+0x22e>
     f70:	e8 ee       	ldi	r30, 0xE8	; 232
     f72:	f0 e0       	ldi	r31, 0x00	; 0
     f74:	80 81       	ld	r24, Z
     f76:	80 ff       	sbrs	r24, 0
     f78:	fd cf       	rjmp	.-6      	; 0xf74 <__vector_11+0x1b4>
     f7a:	80 91 5b 01 	lds	r24, 0x015B
     f7e:	80 93 f1 00 	sts	0x00F1, r24
     f82:	8e ef       	ldi	r24, 0xFE	; 254
     f84:	80 93 e8 00 	sts	0x00E8, r24
     f88:	8e c0       	rjmp	.+284    	; 0x10a6 <__vector_11+0x2e6>
     f8a:	41 32       	cpi	r20, 0x21	; 33
     f8c:	a9 f4       	brne	.+42     	; 0xfb8 <__vector_11+0x1f8>
     f8e:	71 3a       	cpi	r23, 0xA1	; 161
     f90:	f1 f5       	brne	.+124    	; 0x100e <__vector_11+0x24e>
     f92:	e8 ee       	ldi	r30, 0xE8	; 232
     f94:	f0 e0       	ldi	r31, 0x00	; 0
     f96:	80 81       	ld	r24, Z
     f98:	80 ff       	sbrs	r24, 0
     f9a:	fd cf       	rjmp	.-6      	; 0xf96 <__vector_11+0x1d6>
     f9c:	ec e0       	ldi	r30, 0x0C	; 12
     f9e:	f1 e0       	ldi	r31, 0x01	; 1
     fa0:	a1 ef       	ldi	r26, 0xF1	; 241
     fa2:	b0 e0       	ldi	r27, 0x00	; 0
     fa4:	81 91       	ld	r24, Z+
     fa6:	8c 93       	st	X, r24
     fa8:	41 e0       	ldi	r20, 0x01	; 1
     faa:	e3 31       	cpi	r30, 0x13	; 19
     fac:	f4 07       	cpc	r31, r20
     fae:	d1 f7       	brne	.-12     	; 0xfa4 <__vector_11+0x1e4>
     fb0:	8e ef       	ldi	r24, 0xFE	; 254
     fb2:	80 93 e8 00 	sts	0x00E8, r24
     fb6:	77 c0       	rjmp	.+238    	; 0x10a6 <__vector_11+0x2e6>
     fb8:	40 32       	cpi	r20, 0x20	; 32
     fba:	c9 f4       	brne	.+50     	; 0xfee <__vector_11+0x22e>
     fbc:	71 32       	cpi	r23, 0x21	; 33
     fbe:	09 f0       	breq	.+2      	; 0xfc2 <__vector_11+0x202>
     fc0:	6b c0       	rjmp	.+214    	; 0x1098 <__vector_11+0x2d8>
     fc2:	e8 ee       	ldi	r30, 0xE8	; 232
     fc4:	f0 e0       	ldi	r31, 0x00	; 0
     fc6:	80 81       	ld	r24, Z
     fc8:	82 ff       	sbrs	r24, 2
     fca:	fd cf       	rjmp	.-6      	; 0xfc6 <__vector_11+0x206>
     fcc:	ec e0       	ldi	r30, 0x0C	; 12
     fce:	f1 e0       	ldi	r31, 0x01	; 1
     fd0:	a1 ef       	ldi	r26, 0xF1	; 241
     fd2:	b0 e0       	ldi	r27, 0x00	; 0
     fd4:	8c 91       	ld	r24, X
     fd6:	81 93       	st	Z+, r24
     fd8:	51 e0       	ldi	r21, 0x01	; 1
     fda:	e3 31       	cpi	r30, 0x13	; 19
     fdc:	f5 07       	cpc	r31, r21
     fde:	d1 f7       	brne	.-12     	; 0xfd4 <__vector_11+0x214>
     fe0:	e8 ee       	ldi	r30, 0xE8	; 232
     fe2:	f0 e0       	ldi	r31, 0x00	; 0
     fe4:	8b ef       	ldi	r24, 0xFB	; 251
     fe6:	80 83       	st	Z, r24
     fe8:	8e ef       	ldi	r24, 0xFE	; 254
     fea:	80 83       	st	Z, r24
     fec:	5c c0       	rjmp	.+184    	; 0x10a6 <__vector_11+0x2e6>
     fee:	42 32       	cpi	r20, 0x22	; 34
     ff0:	71 f4       	brne	.+28     	; 0x100e <__vector_11+0x24e>
     ff2:	71 32       	cpi	r23, 0x21	; 33
     ff4:	09 f0       	breq	.+2      	; 0xff8 <__vector_11+0x238>
     ff6:	50 c0       	rjmp	.+160    	; 0x1098 <__vector_11+0x2d8>
     ff8:	20 93 5c 01 	sts	0x015C, r18
     ffc:	e8 ee       	ldi	r30, 0xE8	; 232
     ffe:	f0 e0       	ldi	r31, 0x00	; 0
    1000:	80 81       	ld	r24, Z
    1002:	80 ff       	sbrs	r24, 0
    1004:	fd cf       	rjmp	.-6      	; 0x1000 <__vector_11+0x240>
    1006:	8e ef       	ldi	r24, 0xFE	; 254
    1008:	80 93 e8 00 	sts	0x00E8, r24
    100c:	4c c0       	rjmp	.+152    	; 0x10a6 <__vector_11+0x2e6>
    100e:	41 11       	cpse	r20, r1
    1010:	1a c0       	rjmp	.+52     	; 0x1046 <__vector_11+0x286>
    1012:	e8 ee       	ldi	r30, 0xE8	; 232
    1014:	f0 e0       	ldi	r31, 0x00	; 0
    1016:	20 81       	ld	r18, Z
    1018:	20 ff       	sbrs	r18, 0
    101a:	fd cf       	rjmp	.-6      	; 0x1016 <__vector_11+0x256>
    101c:	72 38       	cpi	r23, 0x82	; 130
    101e:	51 f4       	brne	.+20     	; 0x1034 <__vector_11+0x274>
    1020:	e9 ee       	ldi	r30, 0xE9	; 233
    1022:	f0 e0       	ldi	r31, 0x00	; 0
    1024:	80 83       	st	Z, r24
    1026:	80 91 eb 00 	lds	r24, 0x00EB
    102a:	85 fb       	bst	r24, 5
    102c:	88 27       	eor	r24, r24
    102e:	80 f9       	bld	r24, 0
    1030:	10 82       	st	Z, r1
    1032:	01 c0       	rjmp	.+2      	; 0x1036 <__vector_11+0x276>
    1034:	80 e0       	ldi	r24, 0x00	; 0
    1036:	e1 ef       	ldi	r30, 0xF1	; 241
    1038:	f0 e0       	ldi	r31, 0x00	; 0
    103a:	80 83       	st	Z, r24
    103c:	10 82       	st	Z, r1
    103e:	8e ef       	ldi	r24, 0xFE	; 254
    1040:	80 93 e8 00 	sts	0x00E8, r24
    1044:	30 c0       	rjmp	.+96     	; 0x10a6 <__vector_11+0x2e6>
    1046:	41 30       	cpi	r20, 0x01	; 1
    1048:	11 f0       	breq	.+4      	; 0x104e <__vector_11+0x28e>
    104a:	43 30       	cpi	r20, 0x03	; 3
    104c:	29 f5       	brne	.+74     	; 0x1098 <__vector_11+0x2d8>
    104e:	72 30       	cpi	r23, 0x02	; 2
    1050:	19 f5       	brne	.+70     	; 0x1098 <__vector_11+0x2d8>
    1052:	23 2b       	or	r18, r19
    1054:	09 f5       	brne	.+66     	; 0x1098 <__vector_11+0x2d8>
    1056:	8f 77       	andi	r24, 0x7F	; 127
    1058:	99 27       	eor	r25, r25
    105a:	38 2f       	mov	r19, r24
    105c:	31 50       	subi	r19, 0x01	; 1
    105e:	34 30       	cpi	r19, 0x04	; 4
    1060:	d8 f4       	brcc	.+54     	; 0x1098 <__vector_11+0x2d8>
    1062:	3e ef       	ldi	r19, 0xFE	; 254
    1064:	30 93 e8 00 	sts	0x00E8, r19
    1068:	80 93 e9 00 	sts	0x00E9, r24
    106c:	43 30       	cpi	r20, 0x03	; 3
    106e:	21 f4       	brne	.+8      	; 0x1078 <__vector_11+0x2b8>
    1070:	81 e2       	ldi	r24, 0x21	; 33
    1072:	80 93 eb 00 	sts	0x00EB, r24
    1076:	17 c0       	rjmp	.+46     	; 0x10a6 <__vector_11+0x2e6>
    1078:	99 e1       	ldi	r25, 0x19	; 25
    107a:	90 93 eb 00 	sts	0x00EB, r25
    107e:	21 e0       	ldi	r18, 0x01	; 1
    1080:	30 e0       	ldi	r19, 0x00	; 0
    1082:	d9 01       	movw	r26, r18
    1084:	02 c0       	rjmp	.+4      	; 0x108a <__vector_11+0x2ca>
    1086:	aa 0f       	add	r26, r26
    1088:	bb 1f       	adc	r27, r27
    108a:	8a 95       	dec	r24
    108c:	e2 f7       	brpl	.-8      	; 0x1086 <__vector_11+0x2c6>
    108e:	ea ee       	ldi	r30, 0xEA	; 234
    1090:	f0 e0       	ldi	r31, 0x00	; 0
    1092:	a0 83       	st	Z, r26
    1094:	10 82       	st	Z, r1
    1096:	07 c0       	rjmp	.+14     	; 0x10a6 <__vector_11+0x2e6>
    1098:	81 e2       	ldi	r24, 0x21	; 33
    109a:	80 93 eb 00 	sts	0x00EB, r24
    109e:	03 c0       	rjmp	.+6      	; 0x10a6 <__vector_11+0x2e6>
    10a0:	78 83       	st	Y, r23
    10a2:	41 11       	cpse	r20, r1
    10a4:	fa ce       	rjmp	.-524    	; 0xe9a <__vector_11+0xda>
    10a6:	ff 91       	pop	r31
    10a8:	ef 91       	pop	r30
    10aa:	df 91       	pop	r29
    10ac:	cf 91       	pop	r28
    10ae:	bf 91       	pop	r27
    10b0:	af 91       	pop	r26
    10b2:	9f 91       	pop	r25
    10b4:	8f 91       	pop	r24
    10b6:	7f 91       	pop	r23
    10b8:	6f 91       	pop	r22
    10ba:	5f 91       	pop	r21
    10bc:	4f 91       	pop	r20
    10be:	3f 91       	pop	r19
    10c0:	2f 91       	pop	r18
    10c2:	1f 91       	pop	r17
    10c4:	0f 91       	pop	r16
    10c6:	0f 90       	pop	r0
    10c8:	0f be       	out	0x3f, r0	; 63
    10ca:	0f 90       	pop	r0
    10cc:	1f 90       	pop	r1
    10ce:	18 95       	reti

000010d0 <m_usb_tx_int>:
    10d0:	ef 92       	push	r14
    10d2:	ff 92       	push	r15
    10d4:	0f 93       	push	r16
    10d6:	1f 93       	push	r17
    10d8:	cf 93       	push	r28
    10da:	df 93       	push	r29
    10dc:	cd b7       	in	r28, 0x3d	; 61
    10de:	de b7       	in	r29, 0x3e	; 62
    10e0:	27 97       	sbiw	r28, 0x07	; 7
    10e2:	0f b6       	in	r0, 0x3f	; 63
    10e4:	f8 94       	cli
    10e6:	de bf       	out	0x3e, r29	; 62
    10e8:	0f be       	out	0x3f, r0	; 63
    10ea:	cd bf       	out	0x3d, r28	; 61
    10ec:	8e 01       	movw	r16, r28
    10ee:	0f 5f       	subi	r16, 0xFF	; 255
    10f0:	1f 4f       	sbci	r17, 0xFF	; 255
    10f2:	27 e0       	ldi	r18, 0x07	; 7
    10f4:	f8 01       	movw	r30, r16
    10f6:	11 92       	st	Z+, r1
    10f8:	2a 95       	dec	r18
    10fa:	e9 f7       	brne	.-6      	; 0x10f6 <m_usb_tx_int+0x26>
    10fc:	4a e0       	ldi	r20, 0x0A	; 10
    10fe:	50 e0       	ldi	r21, 0x00	; 0
    1100:	b8 01       	movw	r22, r16
    1102:	0e 94 91 0d 	call	0x1b22	; 0x1b22 <itoa>
    1106:	7e 01       	movw	r14, r28
    1108:	f8 e0       	ldi	r31, 0x08	; 8
    110a:	ef 0e       	add	r14, r31
    110c:	f1 1c       	adc	r15, r1
    110e:	f8 01       	movw	r30, r16
    1110:	81 91       	ld	r24, Z+
    1112:	8f 01       	movw	r16, r30
    1114:	81 11       	cpse	r24, r1
    1116:	0e 94 46 06 	call	0xc8c	; 0xc8c <m_usb_tx_char>
    111a:	0e 15       	cp	r16, r14
    111c:	1f 05       	cpc	r17, r15
    111e:	b9 f7       	brne	.-18     	; 0x110e <m_usb_tx_int+0x3e>
    1120:	27 96       	adiw	r28, 0x07	; 7
    1122:	0f b6       	in	r0, 0x3f	; 63
    1124:	f8 94       	cli
    1126:	de bf       	out	0x3e, r29	; 62
    1128:	0f be       	out	0x3f, r0	; 63
    112a:	cd bf       	out	0x3d, r28	; 61
    112c:	df 91       	pop	r29
    112e:	cf 91       	pop	r28
    1130:	1f 91       	pop	r17
    1132:	0f 91       	pop	r16
    1134:	ff 90       	pop	r15
    1136:	ef 90       	pop	r14
    1138:	08 95       	ret

0000113a <twi_wait>:
    113a:	20 e0       	ldi	r18, 0x00	; 0
    113c:	30 e0       	ldi	r19, 0x00	; 0
    113e:	ec eb       	ldi	r30, 0xBC	; 188
    1140:	f0 e0       	ldi	r31, 0x00	; 0
    1142:	80 81       	ld	r24, Z
    1144:	88 23       	and	r24, r24
    1146:	34 f0       	brlt	.+12     	; 0x1154 <twi_wait+0x1a>
    1148:	2f 5f       	subi	r18, 0xFF	; 255
    114a:	3f 4f       	sbci	r19, 0xFF	; 255
    114c:	29 3e       	cpi	r18, 0xE9	; 233
    114e:	83 e0       	ldi	r24, 0x03	; 3
    1150:	38 07       	cpc	r19, r24
    1152:	b9 f7       	brne	.-18     	; 0x1142 <twi_wait+0x8>
    1154:	81 e0       	ldi	r24, 0x01	; 1
    1156:	28 3e       	cpi	r18, 0xE8	; 232
    1158:	33 40       	sbci	r19, 0x03	; 3
    115a:	09 f4       	brne	.+2      	; 0x115e <twi_wait+0x24>
    115c:	80 e0       	ldi	r24, 0x00	; 0
    115e:	08 95       	ret

00001160 <send_byte>:
    1160:	80 93 bb 00 	sts	0x00BB, r24
    1164:	84 e8       	ldi	r24, 0x84	; 132
    1166:	80 93 bc 00 	sts	0x00BC, r24
    116a:	0e 94 9d 08 	call	0x113a	; 0x113a <twi_wait>
    116e:	88 23       	and	r24, r24
    1170:	21 f0       	breq	.+8      	; 0x117a <send_byte+0x1a>
    1172:	80 91 b9 00 	lds	r24, 0x00B9
    1176:	88 7f       	andi	r24, 0xF8	; 248
    1178:	08 95       	ret
    117a:	80 e0       	ldi	r24, 0x00	; 0
    117c:	08 95       	ret

0000117e <start_read>:
    117e:	cf 93       	push	r28
    1180:	c8 2f       	mov	r28, r24
    1182:	94 ea       	ldi	r25, 0xA4	; 164
    1184:	90 93 bc 00 	sts	0x00BC, r25
    1188:	0e 94 9d 08 	call	0x113a	; 0x113a <twi_wait>
    118c:	88 23       	and	r24, r24
    118e:	61 f0       	breq	.+24     	; 0x11a8 <start_read+0x2a>
    1190:	8c 2f       	mov	r24, r28
    1192:	88 0f       	add	r24, r24
    1194:	8f 5f       	subi	r24, 0xFF	; 255
    1196:	0e 94 b0 08 	call	0x1160	; 0x1160 <send_byte>
    119a:	88 34       	cpi	r24, 0x48	; 72
    119c:	39 f4       	brne	.+14     	; 0x11ac <start_read+0x2e>
    119e:	84 e9       	ldi	r24, 0x94	; 148
    11a0:	80 93 bc 00 	sts	0x00BC, r24
    11a4:	80 e0       	ldi	r24, 0x00	; 0
    11a6:	03 c0       	rjmp	.+6      	; 0x11ae <start_read+0x30>
    11a8:	80 e0       	ldi	r24, 0x00	; 0
    11aa:	01 c0       	rjmp	.+2      	; 0x11ae <start_read+0x30>
    11ac:	81 e0       	ldi	r24, 0x01	; 1
    11ae:	cf 91       	pop	r28
    11b0:	08 95       	ret

000011b2 <start_write>:
    11b2:	cf 93       	push	r28
    11b4:	c8 2f       	mov	r28, r24
    11b6:	94 ea       	ldi	r25, 0xA4	; 164
    11b8:	90 93 bc 00 	sts	0x00BC, r25
    11bc:	0e 94 9d 08 	call	0x113a	; 0x113a <twi_wait>
    11c0:	88 23       	and	r24, r24
    11c2:	59 f0       	breq	.+22     	; 0x11da <start_write+0x28>
    11c4:	8c 2f       	mov	r24, r28
    11c6:	88 0f       	add	r24, r24
    11c8:	0e 94 b0 08 	call	0x1160	; 0x1160 <send_byte>
    11cc:	80 32       	cpi	r24, 0x20	; 32
    11ce:	39 f4       	brne	.+14     	; 0x11de <start_write+0x2c>
    11d0:	84 e9       	ldi	r24, 0x94	; 148
    11d2:	80 93 bc 00 	sts	0x00BC, r24
    11d6:	80 e0       	ldi	r24, 0x00	; 0
    11d8:	03 c0       	rjmp	.+6      	; 0x11e0 <start_write+0x2e>
    11da:	80 e0       	ldi	r24, 0x00	; 0
    11dc:	01 c0       	rjmp	.+2      	; 0x11e0 <start_write+0x2e>
    11de:	81 e0       	ldi	r24, 0x01	; 1
    11e0:	cf 91       	pop	r28
    11e2:	08 95       	ret

000011e4 <end>:
    11e4:	84 e9       	ldi	r24, 0x94	; 148
    11e6:	80 93 bc 00 	sts	0x00BC, r24
    11ea:	08 95       	ret

000011ec <m_wii_read>:
    11ec:	ef 92       	push	r14
    11ee:	ff 92       	push	r15
    11f0:	0f 93       	push	r16
    11f2:	1f 93       	push	r17
    11f4:	cf 93       	push	r28
    11f6:	df 93       	push	r29
    11f8:	cd b7       	in	r28, 0x3d	; 61
    11fa:	de b7       	in	r29, 0x3e	; 62
    11fc:	60 97       	sbiw	r28, 0x10	; 16
    11fe:	0f b6       	in	r0, 0x3f	; 63
    1200:	f8 94       	cli
    1202:	de bf       	out	0x3e, r29	; 62
    1204:	0f be       	out	0x3f, r0	; 63
    1206:	cd bf       	out	0x3d, r28	; 61
    1208:	e8 2e       	mov	r14, r24
    120a:	f9 2e       	mov	r15, r25
    120c:	fe 01       	movw	r30, r28
    120e:	31 96       	adiw	r30, 0x01	; 1
    1210:	80 e1       	ldi	r24, 0x10	; 16
    1212:	df 01       	movw	r26, r30
    1214:	1d 92       	st	X+, r1
    1216:	8a 95       	dec	r24
    1218:	e9 f7       	brne	.-6      	; 0x1214 <m_wii_read+0x28>
    121a:	88 e5       	ldi	r24, 0x58	; 88
    121c:	0e 94 d9 08 	call	0x11b2	; 0x11b2 <start_write>
    1220:	88 23       	and	r24, r24
    1222:	09 f4       	brne	.+2      	; 0x1226 <m_wii_read+0x3a>
    1224:	66 c0       	rjmp	.+204    	; 0x12f2 <m_wii_read+0x106>
    1226:	86 e3       	ldi	r24, 0x36	; 54
    1228:	0e 94 b0 08 	call	0x1160	; 0x1160 <send_byte>
    122c:	88 23       	and	r24, r24
    122e:	09 f4       	brne	.+2      	; 0x1232 <m_wii_read+0x46>
    1230:	62 c0       	rjmp	.+196    	; 0x12f6 <m_wii_read+0x10a>
    1232:	0e 94 f2 08 	call	0x11e4	; 0x11e4 <end>
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

    1236:	b8 e0       	ldi	r27, 0x08	; 8
    1238:	ba 95       	dec	r27
    123a:	f1 f7       	brne	.-4      	; 0x1238 <m_wii_read+0x4c>
    123c:	00 00       	nop
    123e:	88 e5       	ldi	r24, 0x58	; 88
    1240:	0e 94 bf 08 	call	0x117e	; 0x117e <start_read>
    1244:	88 23       	and	r24, r24
    1246:	09 f4       	brne	.+2      	; 0x124a <m_wii_read+0x5e>
    1248:	58 c0       	rjmp	.+176    	; 0x12fa <m_wii_read+0x10e>
    124a:	ae 01       	movw	r20, r28
    124c:	4f 5f       	subi	r20, 0xFF	; 255
    124e:	5f 4f       	sbci	r21, 0xFF	; 255
    1250:	8e 01       	movw	r16, r28
    1252:	00 5f       	subi	r16, 0xF0	; 240
    1254:	1f 4f       	sbci	r17, 0xFF	; 255
    1256:	ec eb       	ldi	r30, 0xBC	; 188
    1258:	f0 e0       	ldi	r31, 0x00	; 0
    125a:	94 ec       	ldi	r25, 0xC4	; 196
    125c:	2b eb       	ldi	r18, 0xBB	; 187
    125e:	30 e0       	ldi	r19, 0x00	; 0
    1260:	90 83       	st	Z, r25
    1262:	80 81       	ld	r24, Z
    1264:	88 23       	and	r24, r24
    1266:	ec f7       	brge	.-6      	; 0x1262 <m_wii_read+0x76>
    1268:	d9 01       	movw	r26, r18
    126a:	8c 91       	ld	r24, X
    126c:	da 01       	movw	r26, r20
    126e:	8d 93       	st	X+, r24
    1270:	ad 01       	movw	r20, r26
    1272:	a0 17       	cp	r26, r16
    1274:	b1 07       	cpc	r27, r17
    1276:	a1 f7       	brne	.-24     	; 0x1260 <m_wii_read+0x74>
    1278:	84 e8       	ldi	r24, 0x84	; 132
    127a:	80 93 bc 00 	sts	0x00BC, r24
    127e:	ec eb       	ldi	r30, 0xBC	; 188
    1280:	f0 e0       	ldi	r31, 0x00	; 0
    1282:	80 81       	ld	r24, Z
    1284:	88 23       	and	r24, r24
    1286:	ec f7       	brge	.-6      	; 0x1282 <m_wii_read+0x96>
    1288:	80 91 bb 00 	lds	r24, 0x00BB
    128c:	88 8b       	std	Y+16, r24	; 0x10
    128e:	0e 94 f2 08 	call	0x11e4	; 0x11e4 <end>
    1292:	de 01       	movw	r26, r28
    1294:	14 96       	adiw	r26, 0x04	; 4
    1296:	6e 2d       	mov	r22, r14
    1298:	7f 2d       	mov	r23, r15
    129a:	4c 91       	ld	r20, X
    129c:	24 2f       	mov	r18, r20
    129e:	20 73       	andi	r18, 0x30	; 48
    12a0:	cd 01       	movw	r24, r26
    12a2:	02 97       	sbiw	r24, 0x02	; 2
    12a4:	fc 01       	movw	r30, r24
    12a6:	80 81       	ld	r24, Z
    12a8:	90 e0       	ldi	r25, 0x00	; 0
    12aa:	f0 e1       	ldi	r31, 0x10	; 16
    12ac:	2f 9f       	mul	r18, r31
    12ae:	80 0d       	add	r24, r0
    12b0:	91 1d       	adc	r25, r1
    12b2:	11 24       	eor	r1, r1
    12b4:	fb 01       	movw	r30, r22
    12b6:	91 83       	std	Z+1, r25	; 0x01
    12b8:	80 83       	st	Z, r24
    12ba:	84 2f       	mov	r24, r20
    12bc:	80 7c       	andi	r24, 0xC0	; 192
    12be:	90 e0       	ldi	r25, 0x00	; 0
    12c0:	88 0f       	add	r24, r24
    12c2:	99 1f       	adc	r25, r25
    12c4:	88 0f       	add	r24, r24
    12c6:	99 1f       	adc	r25, r25
    12c8:	9d 01       	movw	r18, r26
    12ca:	21 50       	subi	r18, 0x01	; 1
    12cc:	31 09       	sbc	r19, r1
    12ce:	f9 01       	movw	r30, r18
    12d0:	20 81       	ld	r18, Z
    12d2:	82 0f       	add	r24, r18
    12d4:	91 1d       	adc	r25, r1
    12d6:	fb 01       	movw	r30, r22
    12d8:	93 83       	std	Z+3, r25	; 0x03
    12da:	82 83       	std	Z+2, r24	; 0x02
    12dc:	4f 70       	andi	r20, 0x0F	; 15
    12de:	44 83       	std	Z+4, r20	; 0x04
    12e0:	15 82       	std	Z+5, r1	; 0x05
    12e2:	13 96       	adiw	r26, 0x03	; 3
    12e4:	6a 5f       	subi	r22, 0xFA	; 250
    12e6:	7f 4f       	sbci	r23, 0xFF	; 255
    12e8:	0a 17       	cp	r16, r26
    12ea:	1b 07       	cpc	r17, r27
    12ec:	b1 f6       	brne	.-84     	; 0x129a <m_wii_read+0xae>
    12ee:	81 e0       	ldi	r24, 0x01	; 1
    12f0:	05 c0       	rjmp	.+10     	; 0x12fc <m_wii_read+0x110>
    12f2:	80 e0       	ldi	r24, 0x00	; 0
    12f4:	03 c0       	rjmp	.+6      	; 0x12fc <m_wii_read+0x110>
    12f6:	80 e0       	ldi	r24, 0x00	; 0
    12f8:	01 c0       	rjmp	.+2      	; 0x12fc <m_wii_read+0x110>
    12fa:	80 e0       	ldi	r24, 0x00	; 0
    12fc:	60 96       	adiw	r28, 0x10	; 16
    12fe:	0f b6       	in	r0, 0x3f	; 63
    1300:	f8 94       	cli
    1302:	de bf       	out	0x3e, r29	; 62
    1304:	0f be       	out	0x3f, r0	; 63
    1306:	cd bf       	out	0x3d, r28	; 61
    1308:	df 91       	pop	r29
    130a:	cf 91       	pop	r28
    130c:	1f 91       	pop	r17
    130e:	0f 91       	pop	r16
    1310:	ff 90       	pop	r15
    1312:	ef 90       	pop	r14
    1314:	08 95       	ret

00001316 <m_wii_open>:
    1316:	0e 94 2a 01 	call	0x254	; 0x254 <m_bus_init>
    131a:	88 e5       	ldi	r24, 0x58	; 88
    131c:	0e 94 d9 08 	call	0x11b2	; 0x11b2 <start_write>
    1320:	88 23       	and	r24, r24
    1322:	09 f4       	brne	.+2      	; 0x1326 <m_wii_open+0x10>
    1324:	c7 c0       	rjmp	.+398    	; 0x14b4 <m_wii_open+0x19e>
    1326:	80 e3       	ldi	r24, 0x30	; 48
    1328:	0e 94 b0 08 	call	0x1160	; 0x1160 <send_byte>
    132c:	88 23       	and	r24, r24
    132e:	09 f4       	brne	.+2      	; 0x1332 <m_wii_open+0x1c>
    1330:	c3 c0       	rjmp	.+390    	; 0x14b8 <m_wii_open+0x1a2>
    1332:	81 e0       	ldi	r24, 0x01	; 1
    1334:	0e 94 b0 08 	call	0x1160	; 0x1160 <send_byte>
    1338:	88 23       	and	r24, r24
    133a:	09 f4       	brne	.+2      	; 0x133e <m_wii_open+0x28>
    133c:	bf c0       	rjmp	.+382    	; 0x14bc <m_wii_open+0x1a6>
    133e:	0e 94 f2 08 	call	0x11e4	; 0x11e4 <end>
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

    1342:	83 ec       	ldi	r24, 0xC3	; 195
    1344:	99 e0       	ldi	r25, 0x09	; 9
    1346:	01 97       	sbiw	r24, 0x01	; 1
    1348:	f1 f7       	brne	.-4      	; 0x1346 <m_wii_open+0x30>
    134a:	00 c0       	rjmp	.+0      	; 0x134c <m_wii_open+0x36>
    134c:	00 00       	nop
    134e:	88 e5       	ldi	r24, 0x58	; 88
    1350:	0e 94 d9 08 	call	0x11b2	; 0x11b2 <start_write>
    1354:	88 23       	and	r24, r24
    1356:	09 f4       	brne	.+2      	; 0x135a <m_wii_open+0x44>
    1358:	b3 c0       	rjmp	.+358    	; 0x14c0 <m_wii_open+0x1aa>
    135a:	80 e0       	ldi	r24, 0x00	; 0
    135c:	0e 94 b0 08 	call	0x1160	; 0x1160 <send_byte>
    1360:	88 23       	and	r24, r24
    1362:	09 f4       	brne	.+2      	; 0x1366 <m_wii_open+0x50>
    1364:	af c0       	rjmp	.+350    	; 0x14c4 <m_wii_open+0x1ae>
    1366:	80 e0       	ldi	r24, 0x00	; 0
    1368:	0e 94 b0 08 	call	0x1160	; 0x1160 <send_byte>
    136c:	88 23       	and	r24, r24
    136e:	09 f4       	brne	.+2      	; 0x1372 <m_wii_open+0x5c>
    1370:	ab c0       	rjmp	.+342    	; 0x14c8 <m_wii_open+0x1b2>
    1372:	80 e0       	ldi	r24, 0x00	; 0
    1374:	0e 94 b0 08 	call	0x1160	; 0x1160 <send_byte>
    1378:	88 23       	and	r24, r24
    137a:	09 f4       	brne	.+2      	; 0x137e <m_wii_open+0x68>
    137c:	a7 c0       	rjmp	.+334    	; 0x14cc <m_wii_open+0x1b6>
    137e:	80 e0       	ldi	r24, 0x00	; 0
    1380:	0e 94 b0 08 	call	0x1160	; 0x1160 <send_byte>
    1384:	88 23       	and	r24, r24
    1386:	09 f4       	brne	.+2      	; 0x138a <m_wii_open+0x74>
    1388:	a3 c0       	rjmp	.+326    	; 0x14d0 <m_wii_open+0x1ba>
    138a:	80 e0       	ldi	r24, 0x00	; 0
    138c:	0e 94 b0 08 	call	0x1160	; 0x1160 <send_byte>
    1390:	88 23       	and	r24, r24
    1392:	09 f4       	brne	.+2      	; 0x1396 <m_wii_open+0x80>
    1394:	9f c0       	rjmp	.+318    	; 0x14d4 <m_wii_open+0x1be>
    1396:	80 e0       	ldi	r24, 0x00	; 0
    1398:	0e 94 b0 08 	call	0x1160	; 0x1160 <send_byte>
    139c:	88 23       	and	r24, r24
    139e:	09 f4       	brne	.+2      	; 0x13a2 <m_wii_open+0x8c>
    13a0:	9b c0       	rjmp	.+310    	; 0x14d8 <m_wii_open+0x1c2>
    13a2:	80 e0       	ldi	r24, 0x00	; 0
    13a4:	0e 94 b0 08 	call	0x1160	; 0x1160 <send_byte>
    13a8:	88 23       	and	r24, r24
    13aa:	09 f4       	brne	.+2      	; 0x13ae <m_wii_open+0x98>
    13ac:	97 c0       	rjmp	.+302    	; 0x14dc <m_wii_open+0x1c6>
    13ae:	80 e9       	ldi	r24, 0x90	; 144
    13b0:	0e 94 b0 08 	call	0x1160	; 0x1160 <send_byte>
    13b4:	88 23       	and	r24, r24
    13b6:	09 f4       	brne	.+2      	; 0x13ba <m_wii_open+0xa4>
    13b8:	93 c0       	rjmp	.+294    	; 0x14e0 <m_wii_open+0x1ca>
    13ba:	0e 94 f2 08 	call	0x11e4	; 0x11e4 <end>
    13be:	83 ec       	ldi	r24, 0xC3	; 195
    13c0:	99 e0       	ldi	r25, 0x09	; 9
    13c2:	01 97       	sbiw	r24, 0x01	; 1
    13c4:	f1 f7       	brne	.-4      	; 0x13c2 <m_wii_open+0xac>
    13c6:	00 c0       	rjmp	.+0      	; 0x13c8 <m_wii_open+0xb2>
    13c8:	00 00       	nop
    13ca:	88 e5       	ldi	r24, 0x58	; 88
    13cc:	0e 94 d9 08 	call	0x11b2	; 0x11b2 <start_write>
    13d0:	88 23       	and	r24, r24
    13d2:	09 f4       	brne	.+2      	; 0x13d6 <m_wii_open+0xc0>
    13d4:	87 c0       	rjmp	.+270    	; 0x14e4 <m_wii_open+0x1ce>
    13d6:	87 e0       	ldi	r24, 0x07	; 7
    13d8:	0e 94 b0 08 	call	0x1160	; 0x1160 <send_byte>
    13dc:	88 23       	and	r24, r24
    13de:	09 f4       	brne	.+2      	; 0x13e2 <m_wii_open+0xcc>
    13e0:	83 c0       	rjmp	.+262    	; 0x14e8 <m_wii_open+0x1d2>
    13e2:	80 e0       	ldi	r24, 0x00	; 0
    13e4:	0e 94 b0 08 	call	0x1160	; 0x1160 <send_byte>
    13e8:	88 23       	and	r24, r24
    13ea:	09 f4       	brne	.+2      	; 0x13ee <m_wii_open+0xd8>
    13ec:	7f c0       	rjmp	.+254    	; 0x14ec <m_wii_open+0x1d6>
    13ee:	81 e4       	ldi	r24, 0x41	; 65
    13f0:	0e 94 b0 08 	call	0x1160	; 0x1160 <send_byte>
    13f4:	88 23       	and	r24, r24
    13f6:	09 f4       	brne	.+2      	; 0x13fa <m_wii_open+0xe4>
    13f8:	7b c0       	rjmp	.+246    	; 0x14f0 <m_wii_open+0x1da>
    13fa:	0e 94 f2 08 	call	0x11e4	; 0x11e4 <end>
    13fe:	83 ec       	ldi	r24, 0xC3	; 195
    1400:	99 e0       	ldi	r25, 0x09	; 9
    1402:	01 97       	sbiw	r24, 0x01	; 1
    1404:	f1 f7       	brne	.-4      	; 0x1402 <m_wii_open+0xec>
    1406:	00 c0       	rjmp	.+0      	; 0x1408 <m_wii_open+0xf2>
    1408:	00 00       	nop
    140a:	88 e5       	ldi	r24, 0x58	; 88
    140c:	0e 94 d9 08 	call	0x11b2	; 0x11b2 <start_write>
    1410:	88 23       	and	r24, r24
    1412:	09 f4       	brne	.+2      	; 0x1416 <m_wii_open+0x100>
    1414:	6f c0       	rjmp	.+222    	; 0x14f4 <m_wii_open+0x1de>
    1416:	8a e1       	ldi	r24, 0x1A	; 26
    1418:	0e 94 b0 08 	call	0x1160	; 0x1160 <send_byte>
    141c:	88 23       	and	r24, r24
    141e:	09 f4       	brne	.+2      	; 0x1422 <m_wii_open+0x10c>
    1420:	6b c0       	rjmp	.+214    	; 0x14f8 <m_wii_open+0x1e2>
    1422:	80 e4       	ldi	r24, 0x40	; 64
    1424:	0e 94 b0 08 	call	0x1160	; 0x1160 <send_byte>
    1428:	88 23       	and	r24, r24
    142a:	09 f4       	brne	.+2      	; 0x142e <m_wii_open+0x118>
    142c:	67 c0       	rjmp	.+206    	; 0x14fc <m_wii_open+0x1e6>
    142e:	80 e0       	ldi	r24, 0x00	; 0
    1430:	0e 94 b0 08 	call	0x1160	; 0x1160 <send_byte>
    1434:	88 23       	and	r24, r24
    1436:	09 f4       	brne	.+2      	; 0x143a <m_wii_open+0x124>
    1438:	63 c0       	rjmp	.+198    	; 0x1500 <m_wii_open+0x1ea>
    143a:	0e 94 f2 08 	call	0x11e4	; 0x11e4 <end>
    143e:	83 ec       	ldi	r24, 0xC3	; 195
    1440:	99 e0       	ldi	r25, 0x09	; 9
    1442:	01 97       	sbiw	r24, 0x01	; 1
    1444:	f1 f7       	brne	.-4      	; 0x1442 <m_wii_open+0x12c>
    1446:	00 c0       	rjmp	.+0      	; 0x1448 <m_wii_open+0x132>
    1448:	00 00       	nop
    144a:	88 e5       	ldi	r24, 0x58	; 88
    144c:	0e 94 d9 08 	call	0x11b2	; 0x11b2 <start_write>
    1450:	88 23       	and	r24, r24
    1452:	09 f4       	brne	.+2      	; 0x1456 <m_wii_open+0x140>
    1454:	57 c0       	rjmp	.+174    	; 0x1504 <m_wii_open+0x1ee>
    1456:	83 e3       	ldi	r24, 0x33	; 51
    1458:	0e 94 b0 08 	call	0x1160	; 0x1160 <send_byte>
    145c:	88 23       	and	r24, r24
    145e:	09 f4       	brne	.+2      	; 0x1462 <m_wii_open+0x14c>
    1460:	53 c0       	rjmp	.+166    	; 0x1508 <m_wii_open+0x1f2>
    1462:	83 e0       	ldi	r24, 0x03	; 3
    1464:	0e 94 b0 08 	call	0x1160	; 0x1160 <send_byte>
    1468:	88 23       	and	r24, r24
    146a:	09 f4       	brne	.+2      	; 0x146e <m_wii_open+0x158>
    146c:	4f c0       	rjmp	.+158    	; 0x150c <m_wii_open+0x1f6>
    146e:	0e 94 f2 08 	call	0x11e4	; 0x11e4 <end>
    1472:	83 ec       	ldi	r24, 0xC3	; 195
    1474:	99 e0       	ldi	r25, 0x09	; 9
    1476:	01 97       	sbiw	r24, 0x01	; 1
    1478:	f1 f7       	brne	.-4      	; 0x1476 <m_wii_open+0x160>
    147a:	00 c0       	rjmp	.+0      	; 0x147c <m_wii_open+0x166>
    147c:	00 00       	nop
    147e:	88 e5       	ldi	r24, 0x58	; 88
    1480:	0e 94 d9 08 	call	0x11b2	; 0x11b2 <start_write>
    1484:	88 23       	and	r24, r24
    1486:	09 f4       	brne	.+2      	; 0x148a <m_wii_open+0x174>
    1488:	43 c0       	rjmp	.+134    	; 0x1510 <m_wii_open+0x1fa>
    148a:	80 e3       	ldi	r24, 0x30	; 48
    148c:	0e 94 b0 08 	call	0x1160	; 0x1160 <send_byte>
    1490:	88 23       	and	r24, r24
    1492:	09 f4       	brne	.+2      	; 0x1496 <m_wii_open+0x180>
    1494:	3f c0       	rjmp	.+126    	; 0x1514 <m_wii_open+0x1fe>
    1496:	88 e0       	ldi	r24, 0x08	; 8
    1498:	0e 94 b0 08 	call	0x1160	; 0x1160 <send_byte>
    149c:	88 23       	and	r24, r24
    149e:	e1 f1       	breq	.+120    	; 0x1518 <m_wii_open+0x202>
    14a0:	0e 94 f2 08 	call	0x11e4	; 0x11e4 <end>
    14a4:	83 ec       	ldi	r24, 0xC3	; 195
    14a6:	99 e0       	ldi	r25, 0x09	; 9
    14a8:	01 97       	sbiw	r24, 0x01	; 1
    14aa:	f1 f7       	brne	.-4      	; 0x14a8 <m_wii_open+0x192>
    14ac:	00 c0       	rjmp	.+0      	; 0x14ae <m_wii_open+0x198>
    14ae:	00 00       	nop
    14b0:	81 e0       	ldi	r24, 0x01	; 1
    14b2:	08 95       	ret
    14b4:	80 e0       	ldi	r24, 0x00	; 0
    14b6:	08 95       	ret
    14b8:	80 e0       	ldi	r24, 0x00	; 0
    14ba:	08 95       	ret
    14bc:	80 e0       	ldi	r24, 0x00	; 0
    14be:	08 95       	ret
    14c0:	80 e0       	ldi	r24, 0x00	; 0
    14c2:	08 95       	ret
    14c4:	80 e0       	ldi	r24, 0x00	; 0
    14c6:	08 95       	ret
    14c8:	80 e0       	ldi	r24, 0x00	; 0
    14ca:	08 95       	ret
    14cc:	80 e0       	ldi	r24, 0x00	; 0
    14ce:	08 95       	ret
    14d0:	80 e0       	ldi	r24, 0x00	; 0
    14d2:	08 95       	ret
    14d4:	80 e0       	ldi	r24, 0x00	; 0
    14d6:	08 95       	ret
    14d8:	80 e0       	ldi	r24, 0x00	; 0
    14da:	08 95       	ret
    14dc:	80 e0       	ldi	r24, 0x00	; 0
    14de:	08 95       	ret
    14e0:	80 e0       	ldi	r24, 0x00	; 0
    14e2:	08 95       	ret
    14e4:	80 e0       	ldi	r24, 0x00	; 0
    14e6:	08 95       	ret
    14e8:	80 e0       	ldi	r24, 0x00	; 0
    14ea:	08 95       	ret
    14ec:	80 e0       	ldi	r24, 0x00	; 0
    14ee:	08 95       	ret
    14f0:	80 e0       	ldi	r24, 0x00	; 0
    14f2:	08 95       	ret
    14f4:	80 e0       	ldi	r24, 0x00	; 0
    14f6:	08 95       	ret
    14f8:	80 e0       	ldi	r24, 0x00	; 0
    14fa:	08 95       	ret
    14fc:	80 e0       	ldi	r24, 0x00	; 0
    14fe:	08 95       	ret
    1500:	80 e0       	ldi	r24, 0x00	; 0
    1502:	08 95       	ret
    1504:	80 e0       	ldi	r24, 0x00	; 0
    1506:	08 95       	ret
    1508:	80 e0       	ldi	r24, 0x00	; 0
    150a:	08 95       	ret
    150c:	80 e0       	ldi	r24, 0x00	; 0
    150e:	08 95       	ret
    1510:	80 e0       	ldi	r24, 0x00	; 0
    1512:	08 95       	ret
    1514:	80 e0       	ldi	r24, 0x00	; 0
    1516:	08 95       	ret
    1518:	80 e0       	ldi	r24, 0x00	; 0
    151a:	08 95       	ret

0000151c <__subsf3>:
    151c:	50 58       	subi	r21, 0x80	; 128

0000151e <__addsf3>:
    151e:	bb 27       	eor	r27, r27
    1520:	aa 27       	eor	r26, r26
    1522:	0e d0       	rcall	.+28     	; 0x1540 <__addsf3x>
    1524:	fc c1       	rjmp	.+1016   	; 0x191e <__fp_round>
    1526:	ed d1       	rcall	.+986    	; 0x1902 <__fp_pscA>
    1528:	30 f0       	brcs	.+12     	; 0x1536 <__addsf3+0x18>
    152a:	f2 d1       	rcall	.+996    	; 0x1910 <__fp_pscB>
    152c:	20 f0       	brcs	.+8      	; 0x1536 <__addsf3+0x18>
    152e:	31 f4       	brne	.+12     	; 0x153c <__addsf3+0x1e>
    1530:	9f 3f       	cpi	r25, 0xFF	; 255
    1532:	11 f4       	brne	.+4      	; 0x1538 <__addsf3+0x1a>
    1534:	1e f4       	brtc	.+6      	; 0x153c <__addsf3+0x1e>
    1536:	bd c1       	rjmp	.+890    	; 0x18b2 <__fp_nan>
    1538:	0e f4       	brtc	.+2      	; 0x153c <__addsf3+0x1e>
    153a:	e0 95       	com	r30
    153c:	e7 fb       	bst	r30, 7
    153e:	b3 c1       	rjmp	.+870    	; 0x18a6 <__fp_inf>

00001540 <__addsf3x>:
    1540:	e9 2f       	mov	r30, r25
    1542:	fe d1       	rcall	.+1020   	; 0x1940 <__fp_split3>
    1544:	80 f3       	brcs	.-32     	; 0x1526 <__addsf3+0x8>
    1546:	ba 17       	cp	r27, r26
    1548:	62 07       	cpc	r22, r18
    154a:	73 07       	cpc	r23, r19
    154c:	84 07       	cpc	r24, r20
    154e:	95 07       	cpc	r25, r21
    1550:	18 f0       	brcs	.+6      	; 0x1558 <__addsf3x+0x18>
    1552:	71 f4       	brne	.+28     	; 0x1570 <__addsf3x+0x30>
    1554:	9e f5       	brtc	.+102    	; 0x15bc <__addsf3x+0x7c>
    1556:	16 c2       	rjmp	.+1068   	; 0x1984 <__fp_zero>
    1558:	0e f4       	brtc	.+2      	; 0x155c <__addsf3x+0x1c>
    155a:	e0 95       	com	r30
    155c:	0b 2e       	mov	r0, r27
    155e:	ba 2f       	mov	r27, r26
    1560:	a0 2d       	mov	r26, r0
    1562:	0b 01       	movw	r0, r22
    1564:	b9 01       	movw	r22, r18
    1566:	90 01       	movw	r18, r0
    1568:	0c 01       	movw	r0, r24
    156a:	ca 01       	movw	r24, r20
    156c:	a0 01       	movw	r20, r0
    156e:	11 24       	eor	r1, r1
    1570:	ff 27       	eor	r31, r31
    1572:	59 1b       	sub	r21, r25
    1574:	99 f0       	breq	.+38     	; 0x159c <__addsf3x+0x5c>
    1576:	59 3f       	cpi	r21, 0xF9	; 249
    1578:	50 f4       	brcc	.+20     	; 0x158e <__addsf3x+0x4e>
    157a:	50 3e       	cpi	r21, 0xE0	; 224
    157c:	68 f1       	brcs	.+90     	; 0x15d8 <__addsf3x+0x98>
    157e:	1a 16       	cp	r1, r26
    1580:	f0 40       	sbci	r31, 0x00	; 0
    1582:	a2 2f       	mov	r26, r18
    1584:	23 2f       	mov	r18, r19
    1586:	34 2f       	mov	r19, r20
    1588:	44 27       	eor	r20, r20
    158a:	58 5f       	subi	r21, 0xF8	; 248
    158c:	f3 cf       	rjmp	.-26     	; 0x1574 <__addsf3x+0x34>
    158e:	46 95       	lsr	r20
    1590:	37 95       	ror	r19
    1592:	27 95       	ror	r18
    1594:	a7 95       	ror	r26
    1596:	f0 40       	sbci	r31, 0x00	; 0
    1598:	53 95       	inc	r21
    159a:	c9 f7       	brne	.-14     	; 0x158e <__addsf3x+0x4e>
    159c:	7e f4       	brtc	.+30     	; 0x15bc <__addsf3x+0x7c>
    159e:	1f 16       	cp	r1, r31
    15a0:	ba 0b       	sbc	r27, r26
    15a2:	62 0b       	sbc	r22, r18
    15a4:	73 0b       	sbc	r23, r19
    15a6:	84 0b       	sbc	r24, r20
    15a8:	ba f0       	brmi	.+46     	; 0x15d8 <__addsf3x+0x98>
    15aa:	91 50       	subi	r25, 0x01	; 1
    15ac:	a1 f0       	breq	.+40     	; 0x15d6 <__addsf3x+0x96>
    15ae:	ff 0f       	add	r31, r31
    15b0:	bb 1f       	adc	r27, r27
    15b2:	66 1f       	adc	r22, r22
    15b4:	77 1f       	adc	r23, r23
    15b6:	88 1f       	adc	r24, r24
    15b8:	c2 f7       	brpl	.-16     	; 0x15aa <__addsf3x+0x6a>
    15ba:	0e c0       	rjmp	.+28     	; 0x15d8 <__addsf3x+0x98>
    15bc:	ba 0f       	add	r27, r26
    15be:	62 1f       	adc	r22, r18
    15c0:	73 1f       	adc	r23, r19
    15c2:	84 1f       	adc	r24, r20
    15c4:	48 f4       	brcc	.+18     	; 0x15d8 <__addsf3x+0x98>
    15c6:	87 95       	ror	r24
    15c8:	77 95       	ror	r23
    15ca:	67 95       	ror	r22
    15cc:	b7 95       	ror	r27
    15ce:	f7 95       	ror	r31
    15d0:	9e 3f       	cpi	r25, 0xFE	; 254
    15d2:	08 f0       	brcs	.+2      	; 0x15d6 <__addsf3x+0x96>
    15d4:	b3 cf       	rjmp	.-154    	; 0x153c <__addsf3+0x1e>
    15d6:	93 95       	inc	r25
    15d8:	88 0f       	add	r24, r24
    15da:	08 f0       	brcs	.+2      	; 0x15de <__addsf3x+0x9e>
    15dc:	99 27       	eor	r25, r25
    15de:	ee 0f       	add	r30, r30
    15e0:	97 95       	ror	r25
    15e2:	87 95       	ror	r24
    15e4:	08 95       	ret
    15e6:	8d d1       	rcall	.+794    	; 0x1902 <__fp_pscA>
    15e8:	58 f0       	brcs	.+22     	; 0x1600 <__addsf3x+0xc0>
    15ea:	80 e8       	ldi	r24, 0x80	; 128
    15ec:	91 e0       	ldi	r25, 0x01	; 1
    15ee:	09 f4       	brne	.+2      	; 0x15f2 <__addsf3x+0xb2>
    15f0:	9e ef       	ldi	r25, 0xFE	; 254
    15f2:	8e d1       	rcall	.+796    	; 0x1910 <__fp_pscB>
    15f4:	28 f0       	brcs	.+10     	; 0x1600 <__addsf3x+0xc0>
    15f6:	40 e8       	ldi	r20, 0x80	; 128
    15f8:	51 e0       	ldi	r21, 0x01	; 1
    15fa:	59 f4       	brne	.+22     	; 0x1612 <atan2+0xe>
    15fc:	5e ef       	ldi	r21, 0xFE	; 254
    15fe:	09 c0       	rjmp	.+18     	; 0x1612 <atan2+0xe>
    1600:	58 c1       	rjmp	.+688    	; 0x18b2 <__fp_nan>
    1602:	c0 c1       	rjmp	.+896    	; 0x1984 <__fp_zero>

00001604 <atan2>:
    1604:	e9 2f       	mov	r30, r25
    1606:	e0 78       	andi	r30, 0x80	; 128
    1608:	9b d1       	rcall	.+822    	; 0x1940 <__fp_split3>
    160a:	68 f3       	brcs	.-38     	; 0x15e6 <__addsf3x+0xa6>
    160c:	09 2e       	mov	r0, r25
    160e:	05 2a       	or	r0, r21
    1610:	c1 f3       	breq	.-16     	; 0x1602 <__addsf3x+0xc2>
    1612:	26 17       	cp	r18, r22
    1614:	37 07       	cpc	r19, r23
    1616:	48 07       	cpc	r20, r24
    1618:	59 07       	cpc	r21, r25
    161a:	38 f0       	brcs	.+14     	; 0x162a <atan2+0x26>
    161c:	0e 2e       	mov	r0, r30
    161e:	07 f8       	bld	r0, 7
    1620:	e0 25       	eor	r30, r0
    1622:	69 f0       	breq	.+26     	; 0x163e <atan2+0x3a>
    1624:	e0 25       	eor	r30, r0
    1626:	e0 64       	ori	r30, 0x40	; 64
    1628:	0a c0       	rjmp	.+20     	; 0x163e <atan2+0x3a>
    162a:	ef 63       	ori	r30, 0x3F	; 63
    162c:	07 f8       	bld	r0, 7
    162e:	00 94       	com	r0
    1630:	07 fa       	bst	r0, 7
    1632:	db 01       	movw	r26, r22
    1634:	b9 01       	movw	r22, r18
    1636:	9d 01       	movw	r18, r26
    1638:	dc 01       	movw	r26, r24
    163a:	ca 01       	movw	r24, r20
    163c:	ad 01       	movw	r20, r26
    163e:	ef 93       	push	r30
    1640:	47 d0       	rcall	.+142    	; 0x16d0 <__divsf3_pse>
    1642:	6d d1       	rcall	.+730    	; 0x191e <__fp_round>
    1644:	0a d0       	rcall	.+20     	; 0x165a <atan>
    1646:	5f 91       	pop	r21
    1648:	55 23       	and	r21, r21
    164a:	31 f0       	breq	.+12     	; 0x1658 <atan2+0x54>
    164c:	2b ed       	ldi	r18, 0xDB	; 219
    164e:	3f e0       	ldi	r19, 0x0F	; 15
    1650:	49 e4       	ldi	r20, 0x49	; 73
    1652:	50 fd       	sbrc	r21, 0
    1654:	49 ec       	ldi	r20, 0xC9	; 201
    1656:	63 cf       	rjmp	.-314    	; 0x151e <__addsf3>
    1658:	08 95       	ret

0000165a <atan>:
    165a:	df 93       	push	r29
    165c:	dd 27       	eor	r29, r29
    165e:	b9 2f       	mov	r27, r25
    1660:	bf 77       	andi	r27, 0x7F	; 127
    1662:	40 e8       	ldi	r20, 0x80	; 128
    1664:	5f e3       	ldi	r21, 0x3F	; 63
    1666:	16 16       	cp	r1, r22
    1668:	17 06       	cpc	r1, r23
    166a:	48 07       	cpc	r20, r24
    166c:	5b 07       	cpc	r21, r27
    166e:	10 f4       	brcc	.+4      	; 0x1674 <atan+0x1a>
    1670:	d9 2f       	mov	r29, r25
    1672:	93 d1       	rcall	.+806    	; 0x199a <inverse>
    1674:	9f 93       	push	r25
    1676:	8f 93       	push	r24
    1678:	7f 93       	push	r23
    167a:	6f 93       	push	r22
    167c:	3a d2       	rcall	.+1140   	; 0x1af2 <square>
    167e:	ec ea       	ldi	r30, 0xAC	; 172
    1680:	f0 e0       	ldi	r31, 0x00	; 0
    1682:	1a d1       	rcall	.+564    	; 0x18b8 <__fp_powser>
    1684:	4c d1       	rcall	.+664    	; 0x191e <__fp_round>
    1686:	2f 91       	pop	r18
    1688:	3f 91       	pop	r19
    168a:	4f 91       	pop	r20
    168c:	5f 91       	pop	r21
    168e:	98 d1       	rcall	.+816    	; 0x19c0 <__mulsf3x>
    1690:	dd 23       	and	r29, r29
    1692:	49 f0       	breq	.+18     	; 0x16a6 <atan+0x4c>
    1694:	90 58       	subi	r25, 0x80	; 128
    1696:	a2 ea       	ldi	r26, 0xA2	; 162
    1698:	2a ed       	ldi	r18, 0xDA	; 218
    169a:	3f e0       	ldi	r19, 0x0F	; 15
    169c:	49 ec       	ldi	r20, 0xC9	; 201
    169e:	5f e3       	ldi	r21, 0x3F	; 63
    16a0:	d0 78       	andi	r29, 0x80	; 128
    16a2:	5d 27       	eor	r21, r29
    16a4:	4d df       	rcall	.-358    	; 0x1540 <__addsf3x>
    16a6:	df 91       	pop	r29
    16a8:	3a c1       	rjmp	.+628    	; 0x191e <__fp_round>

000016aa <__cmpsf2>:
    16aa:	d9 d0       	rcall	.+434    	; 0x185e <__fp_cmp>
    16ac:	08 f4       	brcc	.+2      	; 0x16b0 <__cmpsf2+0x6>
    16ae:	81 e0       	ldi	r24, 0x01	; 1
    16b0:	08 95       	ret

000016b2 <__divsf3>:
    16b2:	0c d0       	rcall	.+24     	; 0x16cc <__divsf3x>
    16b4:	34 c1       	rjmp	.+616    	; 0x191e <__fp_round>
    16b6:	2c d1       	rcall	.+600    	; 0x1910 <__fp_pscB>
    16b8:	40 f0       	brcs	.+16     	; 0x16ca <__divsf3+0x18>
    16ba:	23 d1       	rcall	.+582    	; 0x1902 <__fp_pscA>
    16bc:	30 f0       	brcs	.+12     	; 0x16ca <__divsf3+0x18>
    16be:	21 f4       	brne	.+8      	; 0x16c8 <__divsf3+0x16>
    16c0:	5f 3f       	cpi	r21, 0xFF	; 255
    16c2:	19 f0       	breq	.+6      	; 0x16ca <__divsf3+0x18>
    16c4:	f0 c0       	rjmp	.+480    	; 0x18a6 <__fp_inf>
    16c6:	51 11       	cpse	r21, r1
    16c8:	5e c1       	rjmp	.+700    	; 0x1986 <__fp_szero>
    16ca:	f3 c0       	rjmp	.+486    	; 0x18b2 <__fp_nan>

000016cc <__divsf3x>:
    16cc:	39 d1       	rcall	.+626    	; 0x1940 <__fp_split3>
    16ce:	98 f3       	brcs	.-26     	; 0x16b6 <__divsf3+0x4>

000016d0 <__divsf3_pse>:
    16d0:	99 23       	and	r25, r25
    16d2:	c9 f3       	breq	.-14     	; 0x16c6 <__divsf3+0x14>
    16d4:	55 23       	and	r21, r21
    16d6:	b1 f3       	breq	.-20     	; 0x16c4 <__divsf3+0x12>
    16d8:	95 1b       	sub	r25, r21
    16da:	55 0b       	sbc	r21, r21
    16dc:	bb 27       	eor	r27, r27
    16de:	aa 27       	eor	r26, r26
    16e0:	62 17       	cp	r22, r18
    16e2:	73 07       	cpc	r23, r19
    16e4:	84 07       	cpc	r24, r20
    16e6:	38 f0       	brcs	.+14     	; 0x16f6 <__divsf3_pse+0x26>
    16e8:	9f 5f       	subi	r25, 0xFF	; 255
    16ea:	5f 4f       	sbci	r21, 0xFF	; 255
    16ec:	22 0f       	add	r18, r18
    16ee:	33 1f       	adc	r19, r19
    16f0:	44 1f       	adc	r20, r20
    16f2:	aa 1f       	adc	r26, r26
    16f4:	a9 f3       	breq	.-22     	; 0x16e0 <__divsf3_pse+0x10>
    16f6:	33 d0       	rcall	.+102    	; 0x175e <__divsf3_pse+0x8e>
    16f8:	0e 2e       	mov	r0, r30
    16fa:	3a f0       	brmi	.+14     	; 0x170a <__divsf3_pse+0x3a>
    16fc:	e0 e8       	ldi	r30, 0x80	; 128
    16fe:	30 d0       	rcall	.+96     	; 0x1760 <__divsf3_pse+0x90>
    1700:	91 50       	subi	r25, 0x01	; 1
    1702:	50 40       	sbci	r21, 0x00	; 0
    1704:	e6 95       	lsr	r30
    1706:	00 1c       	adc	r0, r0
    1708:	ca f7       	brpl	.-14     	; 0x16fc <__divsf3_pse+0x2c>
    170a:	29 d0       	rcall	.+82     	; 0x175e <__divsf3_pse+0x8e>
    170c:	fe 2f       	mov	r31, r30
    170e:	27 d0       	rcall	.+78     	; 0x175e <__divsf3_pse+0x8e>
    1710:	66 0f       	add	r22, r22
    1712:	77 1f       	adc	r23, r23
    1714:	88 1f       	adc	r24, r24
    1716:	bb 1f       	adc	r27, r27
    1718:	26 17       	cp	r18, r22
    171a:	37 07       	cpc	r19, r23
    171c:	48 07       	cpc	r20, r24
    171e:	ab 07       	cpc	r26, r27
    1720:	b0 e8       	ldi	r27, 0x80	; 128
    1722:	09 f0       	breq	.+2      	; 0x1726 <__divsf3_pse+0x56>
    1724:	bb 0b       	sbc	r27, r27
    1726:	80 2d       	mov	r24, r0
    1728:	bf 01       	movw	r22, r30
    172a:	ff 27       	eor	r31, r31
    172c:	93 58       	subi	r25, 0x83	; 131
    172e:	5f 4f       	sbci	r21, 0xFF	; 255
    1730:	2a f0       	brmi	.+10     	; 0x173c <__divsf3_pse+0x6c>
    1732:	9e 3f       	cpi	r25, 0xFE	; 254
    1734:	51 05       	cpc	r21, r1
    1736:	68 f0       	brcs	.+26     	; 0x1752 <__divsf3_pse+0x82>
    1738:	b6 c0       	rjmp	.+364    	; 0x18a6 <__fp_inf>
    173a:	25 c1       	rjmp	.+586    	; 0x1986 <__fp_szero>
    173c:	5f 3f       	cpi	r21, 0xFF	; 255
    173e:	ec f3       	brlt	.-6      	; 0x173a <__divsf3_pse+0x6a>
    1740:	98 3e       	cpi	r25, 0xE8	; 232
    1742:	dc f3       	brlt	.-10     	; 0x173a <__divsf3_pse+0x6a>
    1744:	86 95       	lsr	r24
    1746:	77 95       	ror	r23
    1748:	67 95       	ror	r22
    174a:	b7 95       	ror	r27
    174c:	f7 95       	ror	r31
    174e:	9f 5f       	subi	r25, 0xFF	; 255
    1750:	c9 f7       	brne	.-14     	; 0x1744 <__divsf3_pse+0x74>
    1752:	88 0f       	add	r24, r24
    1754:	91 1d       	adc	r25, r1
    1756:	96 95       	lsr	r25
    1758:	87 95       	ror	r24
    175a:	97 f9       	bld	r25, 7
    175c:	08 95       	ret
    175e:	e1 e0       	ldi	r30, 0x01	; 1
    1760:	66 0f       	add	r22, r22
    1762:	77 1f       	adc	r23, r23
    1764:	88 1f       	adc	r24, r24
    1766:	bb 1f       	adc	r27, r27
    1768:	62 17       	cp	r22, r18
    176a:	73 07       	cpc	r23, r19
    176c:	84 07       	cpc	r24, r20
    176e:	ba 07       	cpc	r27, r26
    1770:	20 f0       	brcs	.+8      	; 0x177a <__divsf3_pse+0xaa>
    1772:	62 1b       	sub	r22, r18
    1774:	73 0b       	sbc	r23, r19
    1776:	84 0b       	sbc	r24, r20
    1778:	ba 0b       	sbc	r27, r26
    177a:	ee 1f       	adc	r30, r30
    177c:	88 f7       	brcc	.-30     	; 0x1760 <__divsf3_pse+0x90>
    177e:	e0 95       	com	r30
    1780:	08 95       	ret

00001782 <__fixsfsi>:
    1782:	04 d0       	rcall	.+8      	; 0x178c <__fixunssfsi>
    1784:	68 94       	set
    1786:	b1 11       	cpse	r27, r1
    1788:	fe c0       	rjmp	.+508    	; 0x1986 <__fp_szero>
    178a:	08 95       	ret

0000178c <__fixunssfsi>:
    178c:	e1 d0       	rcall	.+450    	; 0x1950 <__fp_splitA>
    178e:	88 f0       	brcs	.+34     	; 0x17b2 <__fixunssfsi+0x26>
    1790:	9f 57       	subi	r25, 0x7F	; 127
    1792:	90 f0       	brcs	.+36     	; 0x17b8 <__fixunssfsi+0x2c>
    1794:	b9 2f       	mov	r27, r25
    1796:	99 27       	eor	r25, r25
    1798:	b7 51       	subi	r27, 0x17	; 23
    179a:	a0 f0       	brcs	.+40     	; 0x17c4 <__fixunssfsi+0x38>
    179c:	d1 f0       	breq	.+52     	; 0x17d2 <__fixunssfsi+0x46>
    179e:	66 0f       	add	r22, r22
    17a0:	77 1f       	adc	r23, r23
    17a2:	88 1f       	adc	r24, r24
    17a4:	99 1f       	adc	r25, r25
    17a6:	1a f0       	brmi	.+6      	; 0x17ae <__fixunssfsi+0x22>
    17a8:	ba 95       	dec	r27
    17aa:	c9 f7       	brne	.-14     	; 0x179e <__fixunssfsi+0x12>
    17ac:	12 c0       	rjmp	.+36     	; 0x17d2 <__fixunssfsi+0x46>
    17ae:	b1 30       	cpi	r27, 0x01	; 1
    17b0:	81 f0       	breq	.+32     	; 0x17d2 <__fixunssfsi+0x46>
    17b2:	e8 d0       	rcall	.+464    	; 0x1984 <__fp_zero>
    17b4:	b1 e0       	ldi	r27, 0x01	; 1
    17b6:	08 95       	ret
    17b8:	e5 c0       	rjmp	.+458    	; 0x1984 <__fp_zero>
    17ba:	67 2f       	mov	r22, r23
    17bc:	78 2f       	mov	r23, r24
    17be:	88 27       	eor	r24, r24
    17c0:	b8 5f       	subi	r27, 0xF8	; 248
    17c2:	39 f0       	breq	.+14     	; 0x17d2 <__fixunssfsi+0x46>
    17c4:	b9 3f       	cpi	r27, 0xF9	; 249
    17c6:	cc f3       	brlt	.-14     	; 0x17ba <__fixunssfsi+0x2e>
    17c8:	86 95       	lsr	r24
    17ca:	77 95       	ror	r23
    17cc:	67 95       	ror	r22
    17ce:	b3 95       	inc	r27
    17d0:	d9 f7       	brne	.-10     	; 0x17c8 <__fixunssfsi+0x3c>
    17d2:	3e f4       	brtc	.+14     	; 0x17e2 <__fixunssfsi+0x56>
    17d4:	90 95       	com	r25
    17d6:	80 95       	com	r24
    17d8:	70 95       	com	r23
    17da:	61 95       	neg	r22
    17dc:	7f 4f       	sbci	r23, 0xFF	; 255
    17de:	8f 4f       	sbci	r24, 0xFF	; 255
    17e0:	9f 4f       	sbci	r25, 0xFF	; 255
    17e2:	08 95       	ret

000017e4 <__floatunsisf>:
    17e4:	e8 94       	clt
    17e6:	09 c0       	rjmp	.+18     	; 0x17fa <__floatsisf+0x12>

000017e8 <__floatsisf>:
    17e8:	97 fb       	bst	r25, 7
    17ea:	3e f4       	brtc	.+14     	; 0x17fa <__floatsisf+0x12>
    17ec:	90 95       	com	r25
    17ee:	80 95       	com	r24
    17f0:	70 95       	com	r23
    17f2:	61 95       	neg	r22
    17f4:	7f 4f       	sbci	r23, 0xFF	; 255
    17f6:	8f 4f       	sbci	r24, 0xFF	; 255
    17f8:	9f 4f       	sbci	r25, 0xFF	; 255
    17fa:	99 23       	and	r25, r25
    17fc:	a9 f0       	breq	.+42     	; 0x1828 <__floatsisf+0x40>
    17fe:	f9 2f       	mov	r31, r25
    1800:	96 e9       	ldi	r25, 0x96	; 150
    1802:	bb 27       	eor	r27, r27
    1804:	93 95       	inc	r25
    1806:	f6 95       	lsr	r31
    1808:	87 95       	ror	r24
    180a:	77 95       	ror	r23
    180c:	67 95       	ror	r22
    180e:	b7 95       	ror	r27
    1810:	f1 11       	cpse	r31, r1
    1812:	f8 cf       	rjmp	.-16     	; 0x1804 <__floatsisf+0x1c>
    1814:	fa f4       	brpl	.+62     	; 0x1854 <__floatsisf+0x6c>
    1816:	bb 0f       	add	r27, r27
    1818:	11 f4       	brne	.+4      	; 0x181e <__floatsisf+0x36>
    181a:	60 ff       	sbrs	r22, 0
    181c:	1b c0       	rjmp	.+54     	; 0x1854 <__floatsisf+0x6c>
    181e:	6f 5f       	subi	r22, 0xFF	; 255
    1820:	7f 4f       	sbci	r23, 0xFF	; 255
    1822:	8f 4f       	sbci	r24, 0xFF	; 255
    1824:	9f 4f       	sbci	r25, 0xFF	; 255
    1826:	16 c0       	rjmp	.+44     	; 0x1854 <__floatsisf+0x6c>
    1828:	88 23       	and	r24, r24
    182a:	11 f0       	breq	.+4      	; 0x1830 <__floatsisf+0x48>
    182c:	96 e9       	ldi	r25, 0x96	; 150
    182e:	11 c0       	rjmp	.+34     	; 0x1852 <__floatsisf+0x6a>
    1830:	77 23       	and	r23, r23
    1832:	21 f0       	breq	.+8      	; 0x183c <__floatsisf+0x54>
    1834:	9e e8       	ldi	r25, 0x8E	; 142
    1836:	87 2f       	mov	r24, r23
    1838:	76 2f       	mov	r23, r22
    183a:	05 c0       	rjmp	.+10     	; 0x1846 <__floatsisf+0x5e>
    183c:	66 23       	and	r22, r22
    183e:	71 f0       	breq	.+28     	; 0x185c <__floatsisf+0x74>
    1840:	96 e8       	ldi	r25, 0x86	; 134
    1842:	86 2f       	mov	r24, r22
    1844:	70 e0       	ldi	r23, 0x00	; 0
    1846:	60 e0       	ldi	r22, 0x00	; 0
    1848:	2a f0       	brmi	.+10     	; 0x1854 <__floatsisf+0x6c>
    184a:	9a 95       	dec	r25
    184c:	66 0f       	add	r22, r22
    184e:	77 1f       	adc	r23, r23
    1850:	88 1f       	adc	r24, r24
    1852:	da f7       	brpl	.-10     	; 0x184a <__floatsisf+0x62>
    1854:	88 0f       	add	r24, r24
    1856:	96 95       	lsr	r25
    1858:	87 95       	ror	r24
    185a:	97 f9       	bld	r25, 7
    185c:	08 95       	ret

0000185e <__fp_cmp>:
    185e:	99 0f       	add	r25, r25
    1860:	00 08       	sbc	r0, r0
    1862:	55 0f       	add	r21, r21
    1864:	aa 0b       	sbc	r26, r26
    1866:	e0 e8       	ldi	r30, 0x80	; 128
    1868:	fe ef       	ldi	r31, 0xFE	; 254
    186a:	16 16       	cp	r1, r22
    186c:	17 06       	cpc	r1, r23
    186e:	e8 07       	cpc	r30, r24
    1870:	f9 07       	cpc	r31, r25
    1872:	c0 f0       	brcs	.+48     	; 0x18a4 <__fp_cmp+0x46>
    1874:	12 16       	cp	r1, r18
    1876:	13 06       	cpc	r1, r19
    1878:	e4 07       	cpc	r30, r20
    187a:	f5 07       	cpc	r31, r21
    187c:	98 f0       	brcs	.+38     	; 0x18a4 <__fp_cmp+0x46>
    187e:	62 1b       	sub	r22, r18
    1880:	73 0b       	sbc	r23, r19
    1882:	84 0b       	sbc	r24, r20
    1884:	95 0b       	sbc	r25, r21
    1886:	39 f4       	brne	.+14     	; 0x1896 <__fp_cmp+0x38>
    1888:	0a 26       	eor	r0, r26
    188a:	61 f0       	breq	.+24     	; 0x18a4 <__fp_cmp+0x46>
    188c:	23 2b       	or	r18, r19
    188e:	24 2b       	or	r18, r20
    1890:	25 2b       	or	r18, r21
    1892:	21 f4       	brne	.+8      	; 0x189c <__fp_cmp+0x3e>
    1894:	08 95       	ret
    1896:	0a 26       	eor	r0, r26
    1898:	09 f4       	brne	.+2      	; 0x189c <__fp_cmp+0x3e>
    189a:	a1 40       	sbci	r26, 0x01	; 1
    189c:	a6 95       	lsr	r26
    189e:	8f ef       	ldi	r24, 0xFF	; 255
    18a0:	81 1d       	adc	r24, r1
    18a2:	81 1d       	adc	r24, r1
    18a4:	08 95       	ret

000018a6 <__fp_inf>:
    18a6:	97 f9       	bld	r25, 7
    18a8:	9f 67       	ori	r25, 0x7F	; 127
    18aa:	80 e8       	ldi	r24, 0x80	; 128
    18ac:	70 e0       	ldi	r23, 0x00	; 0
    18ae:	60 e0       	ldi	r22, 0x00	; 0
    18b0:	08 95       	ret

000018b2 <__fp_nan>:
    18b2:	9f ef       	ldi	r25, 0xFF	; 255
    18b4:	80 ec       	ldi	r24, 0xC0	; 192
    18b6:	08 95       	ret

000018b8 <__fp_powser>:
    18b8:	df 93       	push	r29
    18ba:	cf 93       	push	r28
    18bc:	1f 93       	push	r17
    18be:	0f 93       	push	r16
    18c0:	ff 92       	push	r15
    18c2:	ef 92       	push	r14
    18c4:	df 92       	push	r13
    18c6:	7b 01       	movw	r14, r22
    18c8:	8c 01       	movw	r16, r24
    18ca:	68 94       	set
    18cc:	05 c0       	rjmp	.+10     	; 0x18d8 <__fp_powser+0x20>
    18ce:	da 2e       	mov	r13, r26
    18d0:	ef 01       	movw	r28, r30
    18d2:	76 d0       	rcall	.+236    	; 0x19c0 <__mulsf3x>
    18d4:	fe 01       	movw	r30, r28
    18d6:	e8 94       	clt
    18d8:	a5 91       	lpm	r26, Z+
    18da:	25 91       	lpm	r18, Z+
    18dc:	35 91       	lpm	r19, Z+
    18de:	45 91       	lpm	r20, Z+
    18e0:	55 91       	lpm	r21, Z+
    18e2:	ae f3       	brts	.-22     	; 0x18ce <__fp_powser+0x16>
    18e4:	ef 01       	movw	r28, r30
    18e6:	2c de       	rcall	.-936    	; 0x1540 <__addsf3x>
    18e8:	fe 01       	movw	r30, r28
    18ea:	97 01       	movw	r18, r14
    18ec:	a8 01       	movw	r20, r16
    18ee:	da 94       	dec	r13
    18f0:	79 f7       	brne	.-34     	; 0x18d0 <__fp_powser+0x18>
    18f2:	df 90       	pop	r13
    18f4:	ef 90       	pop	r14
    18f6:	ff 90       	pop	r15
    18f8:	0f 91       	pop	r16
    18fa:	1f 91       	pop	r17
    18fc:	cf 91       	pop	r28
    18fe:	df 91       	pop	r29
    1900:	08 95       	ret

00001902 <__fp_pscA>:
    1902:	00 24       	eor	r0, r0
    1904:	0a 94       	dec	r0
    1906:	16 16       	cp	r1, r22
    1908:	17 06       	cpc	r1, r23
    190a:	18 06       	cpc	r1, r24
    190c:	09 06       	cpc	r0, r25
    190e:	08 95       	ret

00001910 <__fp_pscB>:
    1910:	00 24       	eor	r0, r0
    1912:	0a 94       	dec	r0
    1914:	12 16       	cp	r1, r18
    1916:	13 06       	cpc	r1, r19
    1918:	14 06       	cpc	r1, r20
    191a:	05 06       	cpc	r0, r21
    191c:	08 95       	ret

0000191e <__fp_round>:
    191e:	09 2e       	mov	r0, r25
    1920:	03 94       	inc	r0
    1922:	00 0c       	add	r0, r0
    1924:	11 f4       	brne	.+4      	; 0x192a <__fp_round+0xc>
    1926:	88 23       	and	r24, r24
    1928:	52 f0       	brmi	.+20     	; 0x193e <__fp_round+0x20>
    192a:	bb 0f       	add	r27, r27
    192c:	40 f4       	brcc	.+16     	; 0x193e <__fp_round+0x20>
    192e:	bf 2b       	or	r27, r31
    1930:	11 f4       	brne	.+4      	; 0x1936 <__fp_round+0x18>
    1932:	60 ff       	sbrs	r22, 0
    1934:	04 c0       	rjmp	.+8      	; 0x193e <__fp_round+0x20>
    1936:	6f 5f       	subi	r22, 0xFF	; 255
    1938:	7f 4f       	sbci	r23, 0xFF	; 255
    193a:	8f 4f       	sbci	r24, 0xFF	; 255
    193c:	9f 4f       	sbci	r25, 0xFF	; 255
    193e:	08 95       	ret

00001940 <__fp_split3>:
    1940:	57 fd       	sbrc	r21, 7
    1942:	90 58       	subi	r25, 0x80	; 128
    1944:	44 0f       	add	r20, r20
    1946:	55 1f       	adc	r21, r21
    1948:	59 f0       	breq	.+22     	; 0x1960 <__fp_splitA+0x10>
    194a:	5f 3f       	cpi	r21, 0xFF	; 255
    194c:	71 f0       	breq	.+28     	; 0x196a <__fp_splitA+0x1a>
    194e:	47 95       	ror	r20

00001950 <__fp_splitA>:
    1950:	88 0f       	add	r24, r24
    1952:	97 fb       	bst	r25, 7
    1954:	99 1f       	adc	r25, r25
    1956:	61 f0       	breq	.+24     	; 0x1970 <__fp_splitA+0x20>
    1958:	9f 3f       	cpi	r25, 0xFF	; 255
    195a:	79 f0       	breq	.+30     	; 0x197a <__fp_splitA+0x2a>
    195c:	87 95       	ror	r24
    195e:	08 95       	ret
    1960:	12 16       	cp	r1, r18
    1962:	13 06       	cpc	r1, r19
    1964:	14 06       	cpc	r1, r20
    1966:	55 1f       	adc	r21, r21
    1968:	f2 cf       	rjmp	.-28     	; 0x194e <__fp_split3+0xe>
    196a:	46 95       	lsr	r20
    196c:	f1 df       	rcall	.-30     	; 0x1950 <__fp_splitA>
    196e:	08 c0       	rjmp	.+16     	; 0x1980 <__fp_splitA+0x30>
    1970:	16 16       	cp	r1, r22
    1972:	17 06       	cpc	r1, r23
    1974:	18 06       	cpc	r1, r24
    1976:	99 1f       	adc	r25, r25
    1978:	f1 cf       	rjmp	.-30     	; 0x195c <__fp_splitA+0xc>
    197a:	86 95       	lsr	r24
    197c:	71 05       	cpc	r23, r1
    197e:	61 05       	cpc	r22, r1
    1980:	08 94       	sec
    1982:	08 95       	ret

00001984 <__fp_zero>:
    1984:	e8 94       	clt

00001986 <__fp_szero>:
    1986:	bb 27       	eor	r27, r27
    1988:	66 27       	eor	r22, r22
    198a:	77 27       	eor	r23, r23
    198c:	cb 01       	movw	r24, r22
    198e:	97 f9       	bld	r25, 7
    1990:	08 95       	ret

00001992 <__gesf2>:
    1992:	65 df       	rcall	.-310    	; 0x185e <__fp_cmp>
    1994:	08 f4       	brcc	.+2      	; 0x1998 <__gesf2+0x6>
    1996:	8f ef       	ldi	r24, 0xFF	; 255
    1998:	08 95       	ret

0000199a <inverse>:
    199a:	9b 01       	movw	r18, r22
    199c:	ac 01       	movw	r20, r24
    199e:	60 e0       	ldi	r22, 0x00	; 0
    19a0:	70 e0       	ldi	r23, 0x00	; 0
    19a2:	80 e8       	ldi	r24, 0x80	; 128
    19a4:	9f e3       	ldi	r25, 0x3F	; 63
    19a6:	85 ce       	rjmp	.-758    	; 0x16b2 <__divsf3>

000019a8 <__mulsf3>:
    19a8:	0b d0       	rcall	.+22     	; 0x19c0 <__mulsf3x>
    19aa:	b9 cf       	rjmp	.-142    	; 0x191e <__fp_round>
    19ac:	aa df       	rcall	.-172    	; 0x1902 <__fp_pscA>
    19ae:	28 f0       	brcs	.+10     	; 0x19ba <__mulsf3+0x12>
    19b0:	af df       	rcall	.-162    	; 0x1910 <__fp_pscB>
    19b2:	18 f0       	brcs	.+6      	; 0x19ba <__mulsf3+0x12>
    19b4:	95 23       	and	r25, r21
    19b6:	09 f0       	breq	.+2      	; 0x19ba <__mulsf3+0x12>
    19b8:	76 cf       	rjmp	.-276    	; 0x18a6 <__fp_inf>
    19ba:	7b cf       	rjmp	.-266    	; 0x18b2 <__fp_nan>
    19bc:	11 24       	eor	r1, r1
    19be:	e3 cf       	rjmp	.-58     	; 0x1986 <__fp_szero>

000019c0 <__mulsf3x>:
    19c0:	bf df       	rcall	.-130    	; 0x1940 <__fp_split3>
    19c2:	a0 f3       	brcs	.-24     	; 0x19ac <__mulsf3+0x4>

000019c4 <__mulsf3_pse>:
    19c4:	95 9f       	mul	r25, r21
    19c6:	d1 f3       	breq	.-12     	; 0x19bc <__mulsf3+0x14>
    19c8:	95 0f       	add	r25, r21
    19ca:	50 e0       	ldi	r21, 0x00	; 0
    19cc:	55 1f       	adc	r21, r21
    19ce:	62 9f       	mul	r22, r18
    19d0:	f0 01       	movw	r30, r0
    19d2:	72 9f       	mul	r23, r18
    19d4:	bb 27       	eor	r27, r27
    19d6:	f0 0d       	add	r31, r0
    19d8:	b1 1d       	adc	r27, r1
    19da:	63 9f       	mul	r22, r19
    19dc:	aa 27       	eor	r26, r26
    19de:	f0 0d       	add	r31, r0
    19e0:	b1 1d       	adc	r27, r1
    19e2:	aa 1f       	adc	r26, r26
    19e4:	64 9f       	mul	r22, r20
    19e6:	66 27       	eor	r22, r22
    19e8:	b0 0d       	add	r27, r0
    19ea:	a1 1d       	adc	r26, r1
    19ec:	66 1f       	adc	r22, r22
    19ee:	82 9f       	mul	r24, r18
    19f0:	22 27       	eor	r18, r18
    19f2:	b0 0d       	add	r27, r0
    19f4:	a1 1d       	adc	r26, r1
    19f6:	62 1f       	adc	r22, r18
    19f8:	73 9f       	mul	r23, r19
    19fa:	b0 0d       	add	r27, r0
    19fc:	a1 1d       	adc	r26, r1
    19fe:	62 1f       	adc	r22, r18
    1a00:	83 9f       	mul	r24, r19
    1a02:	a0 0d       	add	r26, r0
    1a04:	61 1d       	adc	r22, r1
    1a06:	22 1f       	adc	r18, r18
    1a08:	74 9f       	mul	r23, r20
    1a0a:	33 27       	eor	r19, r19
    1a0c:	a0 0d       	add	r26, r0
    1a0e:	61 1d       	adc	r22, r1
    1a10:	23 1f       	adc	r18, r19
    1a12:	84 9f       	mul	r24, r20
    1a14:	60 0d       	add	r22, r0
    1a16:	21 1d       	adc	r18, r1
    1a18:	82 2f       	mov	r24, r18
    1a1a:	76 2f       	mov	r23, r22
    1a1c:	6a 2f       	mov	r22, r26
    1a1e:	11 24       	eor	r1, r1
    1a20:	9f 57       	subi	r25, 0x7F	; 127
    1a22:	50 40       	sbci	r21, 0x00	; 0
    1a24:	8a f0       	brmi	.+34     	; 0x1a48 <__mulsf3_pse+0x84>
    1a26:	e1 f0       	breq	.+56     	; 0x1a60 <__mulsf3_pse+0x9c>
    1a28:	88 23       	and	r24, r24
    1a2a:	4a f0       	brmi	.+18     	; 0x1a3e <__mulsf3_pse+0x7a>
    1a2c:	ee 0f       	add	r30, r30
    1a2e:	ff 1f       	adc	r31, r31
    1a30:	bb 1f       	adc	r27, r27
    1a32:	66 1f       	adc	r22, r22
    1a34:	77 1f       	adc	r23, r23
    1a36:	88 1f       	adc	r24, r24
    1a38:	91 50       	subi	r25, 0x01	; 1
    1a3a:	50 40       	sbci	r21, 0x00	; 0
    1a3c:	a9 f7       	brne	.-22     	; 0x1a28 <__mulsf3_pse+0x64>
    1a3e:	9e 3f       	cpi	r25, 0xFE	; 254
    1a40:	51 05       	cpc	r21, r1
    1a42:	70 f0       	brcs	.+28     	; 0x1a60 <__mulsf3_pse+0x9c>
    1a44:	30 cf       	rjmp	.-416    	; 0x18a6 <__fp_inf>
    1a46:	9f cf       	rjmp	.-194    	; 0x1986 <__fp_szero>
    1a48:	5f 3f       	cpi	r21, 0xFF	; 255
    1a4a:	ec f3       	brlt	.-6      	; 0x1a46 <__mulsf3_pse+0x82>
    1a4c:	98 3e       	cpi	r25, 0xE8	; 232
    1a4e:	dc f3       	brlt	.-10     	; 0x1a46 <__mulsf3_pse+0x82>
    1a50:	86 95       	lsr	r24
    1a52:	77 95       	ror	r23
    1a54:	67 95       	ror	r22
    1a56:	b7 95       	ror	r27
    1a58:	f7 95       	ror	r31
    1a5a:	e7 95       	ror	r30
    1a5c:	9f 5f       	subi	r25, 0xFF	; 255
    1a5e:	c1 f7       	brne	.-16     	; 0x1a50 <__mulsf3_pse+0x8c>
    1a60:	fe 2b       	or	r31, r30
    1a62:	88 0f       	add	r24, r24
    1a64:	91 1d       	adc	r25, r1
    1a66:	96 95       	lsr	r25
    1a68:	87 95       	ror	r24
    1a6a:	97 f9       	bld	r25, 7
    1a6c:	08 95       	ret
    1a6e:	11 f4       	brne	.+4      	; 0x1a74 <__mulsf3_pse+0xb0>
    1a70:	0e f4       	brtc	.+2      	; 0x1a74 <__mulsf3_pse+0xb0>
    1a72:	1f cf       	rjmp	.-450    	; 0x18b2 <__fp_nan>
    1a74:	41 c0       	rjmp	.+130    	; 0x1af8 <__fp_mpack>

00001a76 <sqrt>:
    1a76:	6c df       	rcall	.-296    	; 0x1950 <__fp_splitA>
    1a78:	d0 f3       	brcs	.-12     	; 0x1a6e <__mulsf3_pse+0xaa>
    1a7a:	99 23       	and	r25, r25
    1a7c:	d9 f3       	breq	.-10     	; 0x1a74 <__mulsf3_pse+0xb0>
    1a7e:	ce f3       	brts	.-14     	; 0x1a72 <__mulsf3_pse+0xae>
    1a80:	9f 57       	subi	r25, 0x7F	; 127
    1a82:	55 0b       	sbc	r21, r21
    1a84:	87 ff       	sbrs	r24, 7
    1a86:	46 d0       	rcall	.+140    	; 0x1b14 <__fp_norm2>
    1a88:	00 24       	eor	r0, r0
    1a8a:	a0 e6       	ldi	r26, 0x60	; 96
    1a8c:	40 ea       	ldi	r20, 0xA0	; 160
    1a8e:	90 01       	movw	r18, r0
    1a90:	80 58       	subi	r24, 0x80	; 128
    1a92:	56 95       	lsr	r21
    1a94:	97 95       	ror	r25
    1a96:	28 f4       	brcc	.+10     	; 0x1aa2 <sqrt+0x2c>
    1a98:	80 5c       	subi	r24, 0xC0	; 192
    1a9a:	66 0f       	add	r22, r22
    1a9c:	77 1f       	adc	r23, r23
    1a9e:	88 1f       	adc	r24, r24
    1aa0:	20 f0       	brcs	.+8      	; 0x1aaa <sqrt+0x34>
    1aa2:	26 17       	cp	r18, r22
    1aa4:	37 07       	cpc	r19, r23
    1aa6:	48 07       	cpc	r20, r24
    1aa8:	30 f4       	brcc	.+12     	; 0x1ab6 <sqrt+0x40>
    1aaa:	62 1b       	sub	r22, r18
    1aac:	73 0b       	sbc	r23, r19
    1aae:	84 0b       	sbc	r24, r20
    1ab0:	20 29       	or	r18, r0
    1ab2:	31 29       	or	r19, r1
    1ab4:	4a 2b       	or	r20, r26
    1ab6:	a6 95       	lsr	r26
    1ab8:	17 94       	ror	r1
    1aba:	07 94       	ror	r0
    1abc:	20 25       	eor	r18, r0
    1abe:	31 25       	eor	r19, r1
    1ac0:	4a 27       	eor	r20, r26
    1ac2:	58 f7       	brcc	.-42     	; 0x1a9a <sqrt+0x24>
    1ac4:	66 0f       	add	r22, r22
    1ac6:	77 1f       	adc	r23, r23
    1ac8:	88 1f       	adc	r24, r24
    1aca:	20 f0       	brcs	.+8      	; 0x1ad4 <sqrt+0x5e>
    1acc:	26 17       	cp	r18, r22
    1ace:	37 07       	cpc	r19, r23
    1ad0:	48 07       	cpc	r20, r24
    1ad2:	30 f4       	brcc	.+12     	; 0x1ae0 <sqrt+0x6a>
    1ad4:	62 0b       	sbc	r22, r18
    1ad6:	73 0b       	sbc	r23, r19
    1ad8:	84 0b       	sbc	r24, r20
    1ada:	20 0d       	add	r18, r0
    1adc:	31 1d       	adc	r19, r1
    1ade:	41 1d       	adc	r20, r1
    1ae0:	a0 95       	com	r26
    1ae2:	81 f7       	brne	.-32     	; 0x1ac4 <sqrt+0x4e>
    1ae4:	b9 01       	movw	r22, r18
    1ae6:	84 2f       	mov	r24, r20
    1ae8:	91 58       	subi	r25, 0x81	; 129
    1aea:	88 0f       	add	r24, r24
    1aec:	96 95       	lsr	r25
    1aee:	87 95       	ror	r24
    1af0:	08 95       	ret

00001af2 <square>:
    1af2:	9b 01       	movw	r18, r22
    1af4:	ac 01       	movw	r20, r24
    1af6:	58 cf       	rjmp	.-336    	; 0x19a8 <__mulsf3>

00001af8 <__fp_mpack>:
    1af8:	9f 3f       	cpi	r25, 0xFF	; 255
    1afa:	31 f0       	breq	.+12     	; 0x1b08 <__fp_mpack_finite+0xc>

00001afc <__fp_mpack_finite>:
    1afc:	91 50       	subi	r25, 0x01	; 1
    1afe:	20 f4       	brcc	.+8      	; 0x1b08 <__fp_mpack_finite+0xc>
    1b00:	87 95       	ror	r24
    1b02:	77 95       	ror	r23
    1b04:	67 95       	ror	r22
    1b06:	b7 95       	ror	r27
    1b08:	88 0f       	add	r24, r24
    1b0a:	91 1d       	adc	r25, r1
    1b0c:	96 95       	lsr	r25
    1b0e:	87 95       	ror	r24
    1b10:	97 f9       	bld	r25, 7
    1b12:	08 95       	ret

00001b14 <__fp_norm2>:
    1b14:	91 50       	subi	r25, 0x01	; 1
    1b16:	50 40       	sbci	r21, 0x00	; 0
    1b18:	66 0f       	add	r22, r22
    1b1a:	77 1f       	adc	r23, r23
    1b1c:	88 1f       	adc	r24, r24
    1b1e:	d2 f7       	brpl	.-12     	; 0x1b14 <__fp_norm2>
    1b20:	08 95       	ret

00001b22 <itoa>:
    1b22:	fb 01       	movw	r30, r22
    1b24:	9f 01       	movw	r18, r30
    1b26:	e8 94       	clt
    1b28:	42 30       	cpi	r20, 0x02	; 2
    1b2a:	c4 f0       	brlt	.+48     	; 0x1b5c <itoa+0x3a>
    1b2c:	45 32       	cpi	r20, 0x25	; 37
    1b2e:	b4 f4       	brge	.+44     	; 0x1b5c <itoa+0x3a>
    1b30:	4a 30       	cpi	r20, 0x0A	; 10
    1b32:	29 f4       	brne	.+10     	; 0x1b3e <itoa+0x1c>
    1b34:	97 fb       	bst	r25, 7
    1b36:	1e f4       	brtc	.+6      	; 0x1b3e <itoa+0x1c>
    1b38:	90 95       	com	r25
    1b3a:	81 95       	neg	r24
    1b3c:	9f 4f       	sbci	r25, 0xFF	; 255
    1b3e:	64 2f       	mov	r22, r20
    1b40:	77 27       	eor	r23, r23
    1b42:	0e 94 c2 0d 	call	0x1b84	; 0x1b84 <__udivmodhi4>
    1b46:	80 5d       	subi	r24, 0xD0	; 208
    1b48:	8a 33       	cpi	r24, 0x3A	; 58
    1b4a:	0c f0       	brlt	.+2      	; 0x1b4e <itoa+0x2c>
    1b4c:	89 5d       	subi	r24, 0xD9	; 217
    1b4e:	81 93       	st	Z+, r24
    1b50:	cb 01       	movw	r24, r22
    1b52:	00 97       	sbiw	r24, 0x00	; 0
    1b54:	a1 f7       	brne	.-24     	; 0x1b3e <itoa+0x1c>
    1b56:	16 f4       	brtc	.+4      	; 0x1b5c <itoa+0x3a>
    1b58:	5d e2       	ldi	r21, 0x2D	; 45
    1b5a:	51 93       	st	Z+, r21
    1b5c:	10 82       	st	Z, r1
    1b5e:	c9 01       	movw	r24, r18
    1b60:	0c 94 b2 0d 	jmp	0x1b64	; 0x1b64 <strrev>

00001b64 <strrev>:
    1b64:	dc 01       	movw	r26, r24
    1b66:	fc 01       	movw	r30, r24
    1b68:	67 2f       	mov	r22, r23
    1b6a:	71 91       	ld	r23, Z+
    1b6c:	77 23       	and	r23, r23
    1b6e:	e1 f7       	brne	.-8      	; 0x1b68 <strrev+0x4>
    1b70:	32 97       	sbiw	r30, 0x02	; 2
    1b72:	04 c0       	rjmp	.+8      	; 0x1b7c <strrev+0x18>
    1b74:	7c 91       	ld	r23, X
    1b76:	6d 93       	st	X+, r22
    1b78:	70 83       	st	Z, r23
    1b7a:	62 91       	ld	r22, -Z
    1b7c:	ae 17       	cp	r26, r30
    1b7e:	bf 07       	cpc	r27, r31
    1b80:	c8 f3       	brcs	.-14     	; 0x1b74 <strrev+0x10>
    1b82:	08 95       	ret

00001b84 <__udivmodhi4>:
    1b84:	aa 1b       	sub	r26, r26
    1b86:	bb 1b       	sub	r27, r27
    1b88:	51 e1       	ldi	r21, 0x11	; 17
    1b8a:	07 c0       	rjmp	.+14     	; 0x1b9a <__udivmodhi4_ep>

00001b8c <__udivmodhi4_loop>:
    1b8c:	aa 1f       	adc	r26, r26
    1b8e:	bb 1f       	adc	r27, r27
    1b90:	a6 17       	cp	r26, r22
    1b92:	b7 07       	cpc	r27, r23
    1b94:	10 f0       	brcs	.+4      	; 0x1b9a <__udivmodhi4_ep>
    1b96:	a6 1b       	sub	r26, r22
    1b98:	b7 0b       	sbc	r27, r23

00001b9a <__udivmodhi4_ep>:
    1b9a:	88 1f       	adc	r24, r24
    1b9c:	99 1f       	adc	r25, r25
    1b9e:	5a 95       	dec	r21
    1ba0:	a9 f7       	brne	.-22     	; 0x1b8c <__udivmodhi4_loop>
    1ba2:	80 95       	com	r24
    1ba4:	90 95       	com	r25
    1ba6:	bc 01       	movw	r22, r24
    1ba8:	cd 01       	movw	r24, r26
    1baa:	08 95       	ret

00001bac <_exit>:
    1bac:	f8 94       	cli

00001bae <__stop_program>:
    1bae:	ff cf       	rjmp	.-2      	; 0x1bae <__stop_program>
