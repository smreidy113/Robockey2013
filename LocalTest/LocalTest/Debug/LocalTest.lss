
LocalTest.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000014  00800100  00001b9a  00001c2e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001b9a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000064  00800114  00800114  00001c42  2**0
                  ALLOC
  3 .stab         000037ec  00000000  00000000  00001c44  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      000010f3  00000000  00000000  00005430  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      0000002f  00000000  00000000  00006523  2**0
                  CONTENTS, READONLY
  6 .debug_aranges 000001e0  00000000  00000000  00006552  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00001f35  00000000  00000000  00006732  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000007f3  00000000  00000000  00008667  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00000c74  00000000  00000000  00008e5a  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  000005e0  00000000  00000000  00009ad0  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    000006e9  00000000  00000000  0000a0b0  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    00002546  00000000  00000000  0000a799  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 000001f8  00000000  00000000  0000ccdf  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 f0 00 	jmp	0x1e0	; 0x1e0 <__ctors_end>
       4:	0c 94 0d 01 	jmp	0x21a	; 0x21a <__bad_interrupt>
       8:	0c 94 0d 01 	jmp	0x21a	; 0x21a <__bad_interrupt>
       c:	0c 94 0d 01 	jmp	0x21a	; 0x21a <__bad_interrupt>
      10:	0c 94 0d 01 	jmp	0x21a	; 0x21a <__bad_interrupt>
      14:	0c 94 0d 01 	jmp	0x21a	; 0x21a <__bad_interrupt>
      18:	0c 94 0d 01 	jmp	0x21a	; 0x21a <__bad_interrupt>
      1c:	0c 94 0d 01 	jmp	0x21a	; 0x21a <__bad_interrupt>
      20:	0c 94 0d 01 	jmp	0x21a	; 0x21a <__bad_interrupt>
      24:	0c 94 0d 01 	jmp	0x21a	; 0x21a <__bad_interrupt>
      28:	0c 94 2e 06 	jmp	0xc5c	; 0xc5c <__vector_10>
      2c:	0c 94 6c 06 	jmp	0xcd8	; 0xcd8 <__vector_11>
      30:	0c 94 0d 01 	jmp	0x21a	; 0x21a <__bad_interrupt>
      34:	0c 94 0d 01 	jmp	0x21a	; 0x21a <__bad_interrupt>
      38:	0c 94 0d 01 	jmp	0x21a	; 0x21a <__bad_interrupt>
      3c:	0c 94 0d 01 	jmp	0x21a	; 0x21a <__bad_interrupt>
      40:	0c 94 0d 01 	jmp	0x21a	; 0x21a <__bad_interrupt>
      44:	0c 94 0d 01 	jmp	0x21a	; 0x21a <__bad_interrupt>
      48:	0c 94 0d 01 	jmp	0x21a	; 0x21a <__bad_interrupt>
      4c:	0c 94 0d 01 	jmp	0x21a	; 0x21a <__bad_interrupt>
      50:	0c 94 0d 01 	jmp	0x21a	; 0x21a <__bad_interrupt>
      54:	0c 94 0d 01 	jmp	0x21a	; 0x21a <__bad_interrupt>
      58:	0c 94 0d 01 	jmp	0x21a	; 0x21a <__bad_interrupt>
      5c:	0c 94 0d 01 	jmp	0x21a	; 0x21a <__bad_interrupt>
      60:	0c 94 0d 01 	jmp	0x21a	; 0x21a <__bad_interrupt>
      64:	0c 94 0d 01 	jmp	0x21a	; 0x21a <__bad_interrupt>
      68:	0c 94 0d 01 	jmp	0x21a	; 0x21a <__bad_interrupt>
      6c:	0c 94 0d 01 	jmp	0x21a	; 0x21a <__bad_interrupt>
      70:	0c 94 0d 01 	jmp	0x21a	; 0x21a <__bad_interrupt>
      74:	0c 94 0d 01 	jmp	0x21a	; 0x21a <__bad_interrupt>
      78:	0c 94 0d 01 	jmp	0x21a	; 0x21a <__bad_interrupt>
      7c:	0c 94 0d 01 	jmp	0x21a	; 0x21a <__bad_interrupt>
      80:	0c 94 0d 01 	jmp	0x21a	; 0x21a <__bad_interrupt>
      84:	0c 94 0d 01 	jmp	0x21a	; 0x21a <__bad_interrupt>
      88:	0c 94 0d 01 	jmp	0x21a	; 0x21a <__bad_interrupt>
      8c:	0c 94 0d 01 	jmp	0x21a	; 0x21a <__bad_interrupt>
      90:	0c 94 0d 01 	jmp	0x21a	; 0x21a <__bad_interrupt>
      94:	0c 94 0d 01 	jmp	0x21a	; 0x21a <__bad_interrupt>
      98:	0c 94 0d 01 	jmp	0x21a	; 0x21a <__bad_interrupt>
      9c:	0c 94 0d 01 	jmp	0x21a	; 0x21a <__bad_interrupt>
      a0:	0c 94 0d 01 	jmp	0x21a	; 0x21a <__bad_interrupt>
      a4:	0c 94 0d 01 	jmp	0x21a	; 0x21a <__bad_interrupt>
      a8:	0c 94 0d 01 	jmp	0x21a	; 0x21a <__bad_interrupt>
      ac:	08 4a       	sbci	r16, 0xA8	; 168
      ae:	d7 3b       	cpi	r29, 0xB7	; 183
      b0:	3b ce       	rjmp	.-906    	; 0xfffffd28 <__eeprom_end+0xff7efd28>
      b2:	01 6e       	ori	r16, 0xE1	; 225
      b4:	84 bc       	out	0x24, r8	; 36
      b6:	bf fd       	.word	0xfdbf	; ????
      b8:	c1 2f       	mov	r28, r17
      ba:	3d 6c       	ori	r19, 0xCD	; 205
      bc:	74 31       	cpi	r23, 0x14	; 20
      be:	9a bd       	out	0x2a, r25	; 42
      c0:	56 83       	std	Z+6, r21	; 0x06
      c2:	3d da       	rcall	.-2950   	; 0xfffff53e <__eeprom_end+0xff7ef53e>
      c4:	3d 00       	.word	0x003d	; ????
      c6:	c7 7f       	andi	r28, 0xF7	; 247
      c8:	11 be       	out	0x31, r1	; 49
      ca:	d9 e4       	ldi	r29, 0x49	; 73
      cc:	bb 4c       	sbci	r27, 0xCB	; 203
      ce:	3e 91       	ld	r19, -X
      d0:	6b aa       	std	Y+51, r6	; 0x33
      d2:	aa be       	out	0x3a, r10	; 58
      d4:	00 00       	nop
      d6:	00 80       	ld	r0, Z
      d8:	3f 05       	cpc	r19, r15
      da:	a8 4c       	sbci	r26, 0xC8	; 200
      dc:	cd b2       	in	r12, 0x1d	; 29
      de:	d4 4e       	sbci	r29, 0xE4	; 228
      e0:	b9 38       	cpi	r27, 0x89	; 137
      e2:	36 a9       	ldd	r19, Z+54	; 0x36
      e4:	02 0c       	add	r0, r2
      e6:	50 b9       	out	0x00, r21	; 0
      e8:	91 86       	std	Z+9, r9	; 0x09
      ea:	88 08       	sbc	r8, r8
      ec:	3c a6       	std	Y+44, r3	; 0x2c
      ee:	aa aa       	std	Y+50, r10	; 0x32
      f0:	2a be       	out	0x3a, r2	; 58
      f2:	00 00       	nop
      f4:	00 80       	ld	r0, Z
      f6:	3f 09       	sbc	r19, r15

000000f7 <__c.1831>:
      f7:	09 00                                               ..

000000f9 <__c.1833>:
      f9:	09 00                                               ..

000000fb <__c.1838>:
      fb:	09 78 5b 74 6f 70 5d 3a 20 00                       .x[top]: .

00000105 <__c.1840>:
     105:	09 78 5b 62 6f 74 74 6f 6d 5d 3a 20 00              .x[bottom]: .

00000112 <__c.1842>:
     112:	0a 00                                               ..

00000114 <__c.1844>:
     114:	09 79 5b 74 6f 70 5d 3a 20 00                       .y[top]: .

0000011e <__c.1846>:
     11e:	09 79 5b 62 6f 74 74 6f 6d 5d 3a 20 00              .y[bottom]: .

0000012b <__c.1848>:
     12b:	0a 00                                               ..

0000012d <descriptor_list>:
     12d:	00 01 00 00 61 01 12 00 02 00 00 73 01 43 00 03     ....a......s.C..
     13d:	00 00 b6 01 04 01 03 09 04 ba 01 12 02 03 09 04     ................
     14d:	ce 01 06 03 03 09 04 d6 01 08                       ..........

00000157 <endpoint_config_table>:
     157:	00 01 c1 12 01 80 36 01 81 36                       ......6..6

00000161 <device_descriptor>:
     161:	12 01 00 02 02 00 00 10 c0 16 7a 04 00 01 01 02     ..........z.....
     171:	03 01                                               ..

00000173 <config1_descriptor>:
     173:	09 02 43 00 02 01 00 c0 32 09 04 00 00 01 02 02     ..C.....2.......
     183:	01 00 05 24 00 10 01 05 24 01 01 01 04 24 02 06     ...$....$....$..
     193:	05 24 06 00 01 07 05 82 03 10 00 40 09 04 01 00     .$.........@....
     1a3:	02 0a 00 00 00 07 05 03 02 40 00 00 07 05 84 02     .........@......
     1b3:	40 00 00                                            @..

000001b6 <string0>:
     1b6:	04 03 09 04                                         ....

000001ba <string1>:
     1ba:	12 03 4a 00 2e 00 20 00 46 00 69 00 65 00 6e 00     ..J... .F.i.e.n.
     1ca:	65 00 00 00                                         e...

000001ce <string2>:
     1ce:	06 03 4d 00 32 00 00 00                             ..M.2...

000001d6 <string3>:
     1d6:	08 03 34 00 31 00 30 00 00 00                       ..4.1.0...

000001e0 <__ctors_end>:
     1e0:	11 24       	eor	r1, r1
     1e2:	1f be       	out	0x3f, r1	; 63
     1e4:	cf ef       	ldi	r28, 0xFF	; 255
     1e6:	da e0       	ldi	r29, 0x0A	; 10
     1e8:	de bf       	out	0x3e, r29	; 62
     1ea:	cd bf       	out	0x3d, r28	; 61

000001ec <__do_copy_data>:
     1ec:	11 e0       	ldi	r17, 0x01	; 1
     1ee:	a0 e0       	ldi	r26, 0x00	; 0
     1f0:	b1 e0       	ldi	r27, 0x01	; 1
     1f2:	ea e9       	ldi	r30, 0x9A	; 154
     1f4:	fb e1       	ldi	r31, 0x1B	; 27
     1f6:	02 c0       	rjmp	.+4      	; 0x1fc <__do_copy_data+0x10>
     1f8:	05 90       	lpm	r0, Z+
     1fa:	0d 92       	st	X+, r0
     1fc:	a4 31       	cpi	r26, 0x14	; 20
     1fe:	b1 07       	cpc	r27, r17
     200:	d9 f7       	brne	.-10     	; 0x1f8 <__do_copy_data+0xc>

00000202 <__do_clear_bss>:
     202:	21 e0       	ldi	r18, 0x01	; 1
     204:	a4 e1       	ldi	r26, 0x14	; 20
     206:	b1 e0       	ldi	r27, 0x01	; 1
     208:	01 c0       	rjmp	.+2      	; 0x20c <.do_clear_bss_start>

0000020a <.do_clear_bss_loop>:
     20a:	1d 92       	st	X+, r1

0000020c <.do_clear_bss_start>:
     20c:	a8 37       	cpi	r26, 0x78	; 120
     20e:	b2 07       	cpc	r27, r18
     210:	e1 f7       	brne	.-8      	; 0x20a <.do_clear_bss_loop>
     212:	0e 94 0f 01 	call	0x21e	; 0x21e <main>
     216:	0c 94 cb 0d 	jmp	0x1b96	; 0x1b96 <_exit>

0000021a <__bad_interrupt>:
     21a:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000021e <main>:
 int main(void){

	 //m_red(ON);
	 //m_green(ON);

	 m_bus_init();
     21e:	0e 94 ca 01 	call	0x394	; 0x394 <m_bus_init>
	 
	 m_usb_init(); // connect usb
     222:	0e 94 b9 05 	call	0xb72	; 0xb72 <m_usb_init>
	 //m_green(OFF);

	 char rx_buffer; //computer interactions
	 
	 
	 m_wii_open();
     226:	0e 94 31 09 	call	0x1262	; 0x1262 <m_wii_open>

	 

	 
	 int i;
	 int counter = 0;
     22a:	c0 e0       	ldi	r28, 0x00	; 0
     22c:	d0 e0       	ldi	r29, 0x00	; 0
					 m_usb_tx_int((int) (data[i] * 180.0 / 3.14));
					 m_usb_tx_string("\t");
				 }
				 
				 else {
					 m_usb_tx_int((int) data[i]);
     22e:	0f 2e       	mov	r0, r31
     230:	f0 e6       	ldi	r31, 0x60	; 96
     232:	8f 2e       	mov	r8, r31
     234:	f1 e0       	ldi	r31, 0x01	; 1
     236:	9f 2e       	mov	r9, r31
     238:	f0 2d       	mov	r31, r0
			 //for printing to Terminal.exe	
			 //so far: rotating does not work -- it changes x & y; angle calculation does not work either--it changes when in quadrants 1 & 2, but it stuck at either 0 or 45 in quadrants 3 & 4
			 //also check the orientation of the mWii on the wiki -- we need to invert the x direction again	
			 for (i = 0 ; i < 3 ; i++){
				 if (i == 2) {
					 m_usb_tx_int((int) (data[i] * 180.0 / 3.14));
     23a:	0f 2e       	mov	r0, r31
     23c:	f4 e6       	ldi	r31, 0x64	; 100
     23e:	af 2e       	mov	r10, r31
     240:	f1 e0       	ldi	r31, 0x01	; 1
     242:	bf 2e       	mov	r11, r31
     244:	f0 2d       	mov	r31, r0
				 }

			 }

			 m_usb_tx_string("\tx[top]: ");
			 m_usb_tx_int(data[3]);
     246:	0f 2e       	mov	r0, r31
     248:	f8 e6       	ldi	r31, 0x68	; 104
     24a:	cf 2e       	mov	r12, r31
     24c:	f1 e0       	ldi	r31, 0x01	; 1
     24e:	df 2e       	mov	r13, r31
     250:	f0 2d       	mov	r31, r0
			 m_usb_tx_string("\tx[bottom]: ");
			 m_usb_tx_int(data[4]);
     252:	0f 2e       	mov	r0, r31
     254:	fc e6       	ldi	r31, 0x6C	; 108
     256:	ef 2e       	mov	r14, r31
     258:	f1 e0       	ldi	r31, 0x01	; 1
     25a:	ff 2e       	mov	r15, r31
     25c:	f0 2d       	mov	r31, r0
			 m_usb_tx_string("\n");
			 			 m_usb_tx_string("\ty[top]: ");
			 			 m_usb_tx_int(data[5]);
     25e:	00 e7       	ldi	r16, 0x70	; 112
     260:	11 e0       	ldi	r17, 0x01	; 1
			 			 m_usb_tx_string("\ty[bottom]: ");
			 			 m_usb_tx_int(data[6]);
     262:	0f 2e       	mov	r0, r31
     264:	f4 e7       	ldi	r31, 0x74	; 116
     266:	6f 2e       	mov	r6, r31
     268:	f1 e0       	ldi	r31, 0x01	; 1
     26a:	7f 2e       	mov	r7, r31
     26c:	f0 2d       	mov	r31, r0
			 			 m_usb_tx_string("\n");
			 m_green(TOGGLE);
     26e:	68 94       	set
     270:	33 24       	eor	r3, r3
     272:	32 f8       	bld	r3, 2
			 
			 counter = 0;
     274:	41 2c       	mov	r4, r1
     276:	51 2c       	mov	r5, r1
     278:	84 c0       	rjmp	.+264    	; 0x382 <main+0x164>
			 //while(!m_usb_rx_available());  	//wait for an indication from the computer
			 //rx_buffer = m_usb_rx_char();  	//grab the computer packet
			 
			 //m_usb_rx_flush();  				//clear buffer
			 
			 localize(data);
     27a:	8c e5       	ldi	r24, 0x5C	; 92
     27c:	91 e0       	ldi	r25, 0x01	; 1
     27e:	0e 94 2f 04 	call	0x85e	; 0x85e <localize>
			 m_red(ON);
     282:	6e 9a       	sbi	0x0d, 6	; 13
     284:	76 98       	cbi	0x0e, 6	; 14
					 m_usb_tx_int((int) (data[i] * 180.0 / 3.14));
					 m_usb_tx_string("\t");
				 }
				 
				 else {
					 m_usb_tx_int((int) data[i]);
     286:	60 91 5c 01 	lds	r22, 0x015C
     28a:	70 91 5d 01 	lds	r23, 0x015D
     28e:	80 91 5e 01 	lds	r24, 0x015E
     292:	90 91 5f 01 	lds	r25, 0x015F
     296:	0e 94 66 0b 	call	0x16cc	; 0x16cc <__fixsfsi>
     29a:	cb 01       	movw	r24, r22
     29c:	0e 94 0e 08 	call	0x101c	; 0x101c <m_usb_tx_int>
					 m_usb_tx_string("\t");
     2a0:	89 ef       	ldi	r24, 0xF9	; 249
     2a2:	90 e0       	ldi	r25, 0x00	; 0
     2a4:	0e 94 f4 07 	call	0xfe8	; 0xfe8 <print_P>
					 m_usb_tx_int((int) (data[i] * 180.0 / 3.14));
					 m_usb_tx_string("\t");
				 }
				 
				 else {
					 m_usb_tx_int((int) data[i]);
     2a8:	f4 01       	movw	r30, r8
     2aa:	60 81       	ld	r22, Z
     2ac:	71 81       	ldd	r23, Z+1	; 0x01
     2ae:	82 81       	ldd	r24, Z+2	; 0x02
     2b0:	93 81       	ldd	r25, Z+3	; 0x03
     2b2:	0e 94 66 0b 	call	0x16cc	; 0x16cc <__fixsfsi>
     2b6:	cb 01       	movw	r24, r22
     2b8:	0e 94 0e 08 	call	0x101c	; 0x101c <m_usb_tx_int>
					 m_usb_tx_string("\t");
     2bc:	89 ef       	ldi	r24, 0xF9	; 249
     2be:	90 e0       	ldi	r25, 0x00	; 0
     2c0:	0e 94 f4 07 	call	0xfe8	; 0xfe8 <print_P>
			 //for printing to Terminal.exe	
			 //so far: rotating does not work -- it changes x & y; angle calculation does not work either--it changes when in quadrants 1 & 2, but it stuck at either 0 or 45 in quadrants 3 & 4
			 //also check the orientation of the mWii on the wiki -- we need to invert the x direction again	
			 for (i = 0 ; i < 3 ; i++){
				 if (i == 2) {
					 m_usb_tx_int((int) (data[i] * 180.0 / 3.14));
     2c4:	20 e0       	ldi	r18, 0x00	; 0
     2c6:	30 e0       	ldi	r19, 0x00	; 0
     2c8:	44 e3       	ldi	r20, 0x34	; 52
     2ca:	53 e4       	ldi	r21, 0x43	; 67
     2cc:	f5 01       	movw	r30, r10
     2ce:	60 81       	ld	r22, Z
     2d0:	71 81       	ldd	r23, Z+1	; 0x01
     2d2:	82 81       	ldd	r24, Z+2	; 0x02
     2d4:	93 81       	ldd	r25, Z+3	; 0x03
     2d6:	0e 94 8e 0c 	call	0x191c	; 0x191c <__mulsf3>
     2da:	23 ec       	ldi	r18, 0xC3	; 195
     2dc:	35 ef       	ldi	r19, 0xF5	; 245
     2de:	48 e4       	ldi	r20, 0x48	; 72
     2e0:	50 e4       	ldi	r21, 0x40	; 64
     2e2:	0e 94 fe 0a 	call	0x15fc	; 0x15fc <__divsf3>
     2e6:	0e 94 66 0b 	call	0x16cc	; 0x16cc <__fixsfsi>
     2ea:	cb 01       	movw	r24, r22
     2ec:	0e 94 0e 08 	call	0x101c	; 0x101c <m_usb_tx_int>
					 m_usb_tx_string("\t");
     2f0:	87 ef       	ldi	r24, 0xF7	; 247
     2f2:	90 e0       	ldi	r25, 0x00	; 0
     2f4:	0e 94 f4 07 	call	0xfe8	; 0xfe8 <print_P>
					 m_usb_tx_string("\t");
				 }

			 }

			 m_usb_tx_string("\tx[top]: ");
     2f8:	8b ef       	ldi	r24, 0xFB	; 251
     2fa:	90 e0       	ldi	r25, 0x00	; 0
     2fc:	0e 94 f4 07 	call	0xfe8	; 0xfe8 <print_P>
			 m_usb_tx_int(data[3]);
     300:	f6 01       	movw	r30, r12
     302:	60 81       	ld	r22, Z
     304:	71 81       	ldd	r23, Z+1	; 0x01
     306:	82 81       	ldd	r24, Z+2	; 0x02
     308:	93 81       	ldd	r25, Z+3	; 0x03
     30a:	0e 94 66 0b 	call	0x16cc	; 0x16cc <__fixsfsi>
     30e:	cb 01       	movw	r24, r22
     310:	0e 94 0e 08 	call	0x101c	; 0x101c <m_usb_tx_int>
			 m_usb_tx_string("\tx[bottom]: ");
     314:	85 e0       	ldi	r24, 0x05	; 5
     316:	91 e0       	ldi	r25, 0x01	; 1
     318:	0e 94 f4 07 	call	0xfe8	; 0xfe8 <print_P>
			 m_usb_tx_int(data[4]);
     31c:	f7 01       	movw	r30, r14
     31e:	60 81       	ld	r22, Z
     320:	71 81       	ldd	r23, Z+1	; 0x01
     322:	82 81       	ldd	r24, Z+2	; 0x02
     324:	93 81       	ldd	r25, Z+3	; 0x03
     326:	0e 94 66 0b 	call	0x16cc	; 0x16cc <__fixsfsi>
     32a:	cb 01       	movw	r24, r22
     32c:	0e 94 0e 08 	call	0x101c	; 0x101c <m_usb_tx_int>
			 m_usb_tx_string("\n");
     330:	82 e1       	ldi	r24, 0x12	; 18
     332:	91 e0       	ldi	r25, 0x01	; 1
     334:	0e 94 f4 07 	call	0xfe8	; 0xfe8 <print_P>
			 			 m_usb_tx_string("\ty[top]: ");
     338:	84 e1       	ldi	r24, 0x14	; 20
     33a:	91 e0       	ldi	r25, 0x01	; 1
     33c:	0e 94 f4 07 	call	0xfe8	; 0xfe8 <print_P>
			 			 m_usb_tx_int(data[5]);
     340:	f8 01       	movw	r30, r16
     342:	60 81       	ld	r22, Z
     344:	71 81       	ldd	r23, Z+1	; 0x01
     346:	82 81       	ldd	r24, Z+2	; 0x02
     348:	93 81       	ldd	r25, Z+3	; 0x03
     34a:	0e 94 66 0b 	call	0x16cc	; 0x16cc <__fixsfsi>
     34e:	cb 01       	movw	r24, r22
     350:	0e 94 0e 08 	call	0x101c	; 0x101c <m_usb_tx_int>
			 			 m_usb_tx_string("\ty[bottom]: ");
     354:	8e e1       	ldi	r24, 0x1E	; 30
     356:	91 e0       	ldi	r25, 0x01	; 1
     358:	0e 94 f4 07 	call	0xfe8	; 0xfe8 <print_P>
			 			 m_usb_tx_int(data[6]);
     35c:	f3 01       	movw	r30, r6
     35e:	60 81       	ld	r22, Z
     360:	71 81       	ldd	r23, Z+1	; 0x01
     362:	82 81       	ldd	r24, Z+2	; 0x02
     364:	93 81       	ldd	r25, Z+3	; 0x03
     366:	0e 94 66 0b 	call	0x16cc	; 0x16cc <__fixsfsi>
     36a:	cb 01       	movw	r24, r22
     36c:	0e 94 0e 08 	call	0x101c	; 0x101c <m_usb_tx_int>
			 			 m_usb_tx_string("\n");
     370:	8b e2       	ldi	r24, 0x2B	; 43
     372:	91 e0       	ldi	r25, 0x01	; 1
     374:	0e 94 f4 07 	call	0xfe8	; 0xfe8 <print_P>
			 m_green(TOGGLE);
     378:	6a 9a       	sbi	0x0d, 2	; 13
     37a:	8e b1       	in	r24, 0x0e	; 14
     37c:	83 25       	eor	r24, r3
     37e:	8e b9       	out	0x0e, r24	; 14
			 
			 counter = 0;
     380:	e2 01       	movw	r28, r4

		 }
		 
		 counter++;
     382:	21 96       	adiw	r28, 0x01	; 1

		 m_usb_tx_char('\n');  //MATLAB serial command reads 1 line at a time
     384:	8a e0       	ldi	r24, 0x0A	; 10
     386:	0e 94 d2 05 	call	0xba4	; 0xba4 <m_usb_tx_char>
	 int i;
	 int counter = 0;
	 while(1){
		 
		 
		 if (counter == 10000) {
     38a:	c0 31       	cpi	r28, 0x10	; 16
     38c:	f7 e2       	ldi	r31, 0x27	; 39
     38e:	df 07       	cpc	r29, r31
     390:	c1 f7       	brne	.-16     	; 0x382 <main+0x164>
     392:	73 cf       	rjmp	.-282    	; 0x27a <main+0x5c>

00000394 <m_bus_init>:
     394:	58 9a       	sbi	0x0b, 0	; 11
     396:	59 9a       	sbi	0x0b, 1	; 11
     398:	5a 9a       	sbi	0x0b, 2	; 11
     39a:	8c e0       	ldi	r24, 0x0C	; 12
     39c:	80 93 b8 00 	sts	0x00B8, r24
     3a0:	e9 e6       	ldi	r30, 0x69	; 105
     3a2:	f0 e0       	ldi	r31, 0x00	; 0
     3a4:	80 81       	ld	r24, Z
     3a6:	80 62       	ori	r24, 0x20	; 32
     3a8:	80 83       	st	Z, r24
     3aa:	80 81       	ld	r24, Z
     3ac:	8f 7e       	andi	r24, 0xEF	; 239
     3ae:	80 83       	st	Z, r24
     3b0:	ea 9a       	sbi	0x1d, 2	; 29
     3b2:	78 94       	sei
     3b4:	08 95       	ret

000003b6 <getData>:
float dist = 0;
float distmax = 0, distmin = 1023;
float dcenter = 0;
int far1 = 0, far2 = 0, close1 = 0, close2 = 0;

unsigned char getData(unsigned int* x, unsigned int* y) {
     3b6:	0f 93       	push	r16
     3b8:	1f 93       	push	r17
     3ba:	cf 93       	push	r28
     3bc:	df 93       	push	r29
     3be:	8c 01       	movw	r16, r24
     3c0:	eb 01       	movw	r28, r22
	m_wii_read(blobs);
     3c2:	80 e4       	ldi	r24, 0x40	; 64
     3c4:	91 e0       	ldi	r25, 0x01	; 1
     3c6:	0e 94 9c 08 	call	0x1138	; 0x1138 <m_wii_read>
	x[0] = blobs[0];
     3ca:	80 91 40 01 	lds	r24, 0x0140
     3ce:	90 91 41 01 	lds	r25, 0x0141
     3d2:	f8 01       	movw	r30, r16
     3d4:	91 83       	std	Z+1, r25	; 0x01
     3d6:	80 83       	st	Z, r24
	x[1] = blobs[3];
     3d8:	80 91 46 01 	lds	r24, 0x0146
     3dc:	90 91 47 01 	lds	r25, 0x0147
     3e0:	93 83       	std	Z+3, r25	; 0x03
     3e2:	82 83       	std	Z+2, r24	; 0x02
	x[2] = blobs[6];
     3e4:	80 91 4c 01 	lds	r24, 0x014C
     3e8:	90 91 4d 01 	lds	r25, 0x014D
     3ec:	95 83       	std	Z+5, r25	; 0x05
     3ee:	84 83       	std	Z+4, r24	; 0x04
	x[3] = blobs[9];
     3f0:	80 91 52 01 	lds	r24, 0x0152
     3f4:	90 91 53 01 	lds	r25, 0x0153
     3f8:	97 83       	std	Z+7, r25	; 0x07
     3fa:	86 83       	std	Z+6, r24	; 0x06
	y[0] = blobs[1];
     3fc:	80 91 42 01 	lds	r24, 0x0142
     400:	90 91 43 01 	lds	r25, 0x0143
     404:	99 83       	std	Y+1, r25	; 0x01
     406:	88 83       	st	Y, r24
	y[1] = blobs[4];
     408:	80 91 48 01 	lds	r24, 0x0148
     40c:	90 91 49 01 	lds	r25, 0x0149
     410:	9b 83       	std	Y+3, r25	; 0x03
     412:	8a 83       	std	Y+2, r24	; 0x02
	y[2] = blobs[7];
     414:	80 91 4e 01 	lds	r24, 0x014E
     418:	90 91 4f 01 	lds	r25, 0x014F
     41c:	9d 83       	std	Y+5, r25	; 0x05
     41e:	8c 83       	std	Y+4, r24	; 0x04
	y[3] = blobs[10];
     420:	80 91 54 01 	lds	r24, 0x0154
     424:	90 91 55 01 	lds	r25, 0x0155
     428:	9f 83       	std	Y+7, r25	; 0x07
     42a:	8e 83       	std	Y+6, r24	; 0x06
	return 1;
} 
     42c:	81 e0       	ldi	r24, 0x01	; 1
     42e:	df 91       	pop	r29
     430:	cf 91       	pop	r28
     432:	1f 91       	pop	r17
     434:	0f 91       	pop	r16
     436:	08 95       	ret

00000438 <determine_blobs>:

unsigned char determine_blobs() {
     438:	2f 92       	push	r2
     43a:	3f 92       	push	r3
     43c:	4f 92       	push	r4
     43e:	5f 92       	push	r5
     440:	6f 92       	push	r6
     442:	7f 92       	push	r7
     444:	8f 92       	push	r8
     446:	9f 92       	push	r9
     448:	af 92       	push	r10
     44a:	bf 92       	push	r11
     44c:	cf 92       	push	r12
     44e:	df 92       	push	r13
     450:	ef 92       	push	r14
     452:	ff 92       	push	r15
     454:	0f 93       	push	r16
     456:	1f 93       	push	r17
     458:	cf 93       	push	r28
     45a:	df 93       	push	r29
     45c:	cd b7       	in	r28, 0x3d	; 61
     45e:	de b7       	in	r29, 0x3e	; 62
     460:	66 97       	sbiw	r28, 0x16	; 22
     462:	0f b6       	in	r0, 0x3f	; 63
     464:	f8 94       	cli
     466:	de bf       	out	0x3e, r29	; 62
     468:	0f be       	out	0x3f, r0	; 63
     46a:	cd bf       	out	0x3d, r28	; 61
	int exit = 0;
	while (exit == 0) {
		getData(x, y);
		if (x[0] < 1023 && x[1] < 1023 && x[2] < 1023 && x[3] < 1023) {
     46c:	0f 2e       	mov	r0, r31
     46e:	f2 e3       	ldi	r31, 0x32	; 50
     470:	cf 2e       	mov	r12, r31
     472:	f1 e0       	ldi	r31, 0x01	; 1
     474:	df 2e       	mov	r13, r31
     476:	f0 2d       	mov	r31, r0
     478:	04 e3       	ldi	r16, 0x34	; 52
     47a:	11 e0       	ldi	r17, 0x01	; 1
     47c:	0f 2e       	mov	r0, r31
     47e:	f6 e3       	ldi	r31, 0x36	; 54
     480:	ef 2e       	mov	r14, r31
     482:	f1 e0       	ldi	r31, 0x01	; 1
     484:	ff 2e       	mov	r15, r31
     486:	f0 2d       	mov	r31, r0
} 

unsigned char determine_blobs() {
	int exit = 0;
	while (exit == 0) {
		getData(x, y);
     488:	68 e2       	ldi	r22, 0x28	; 40
     48a:	71 e0       	ldi	r23, 0x01	; 1
     48c:	80 e3       	ldi	r24, 0x30	; 48
     48e:	91 e0       	ldi	r25, 0x01	; 1
     490:	0e 94 db 01 	call	0x3b6	; 0x3b6 <getData>
		if (x[0] < 1023 && x[1] < 1023 && x[2] < 1023 && x[3] < 1023) {
     494:	80 91 30 01 	lds	r24, 0x0130
     498:	90 91 31 01 	lds	r25, 0x0131
     49c:	8f 3f       	cpi	r24, 0xFF	; 255
     49e:	93 40       	sbci	r25, 0x03	; 3
     4a0:	98 f7       	brcc	.-26     	; 0x488 <determine_blobs+0x50>
     4a2:	d6 01       	movw	r26, r12
     4a4:	8d 91       	ld	r24, X+
     4a6:	9c 91       	ld	r25, X
     4a8:	8f 3f       	cpi	r24, 0xFF	; 255
     4aa:	93 40       	sbci	r25, 0x03	; 3
     4ac:	68 f7       	brcc	.-38     	; 0x488 <determine_blobs+0x50>
     4ae:	f8 01       	movw	r30, r16
     4b0:	80 81       	ld	r24, Z
     4b2:	91 81       	ldd	r25, Z+1	; 0x01
     4b4:	8f 3f       	cpi	r24, 0xFF	; 255
     4b6:	93 40       	sbci	r25, 0x03	; 3
     4b8:	38 f7       	brcc	.-50     	; 0x488 <determine_blobs+0x50>
     4ba:	d7 01       	movw	r26, r14
     4bc:	8d 91       	ld	r24, X+
     4be:	9c 91       	ld	r25, X
     4c0:	8f 3f       	cpi	r24, 0xFF	; 255
     4c2:	93 40       	sbci	r25, 0x03	; 3
     4c4:	08 f7       	brcc	.-62     	; 0x488 <determine_blobs+0x50>
     4c6:	60 90 24 01 	lds	r6, 0x0124
     4ca:	70 90 25 01 	lds	r7, 0x0125
     4ce:	80 90 26 01 	lds	r8, 0x0126
     4d2:	90 90 27 01 	lds	r9, 0x0127
     4d6:	d0 90 20 01 	lds	r13, 0x0120
     4da:	c0 90 21 01 	lds	r12, 0x0121
     4de:	40 90 22 01 	lds	r4, 0x0122
     4e2:	50 90 23 01 	lds	r5, 0x0123
     4e6:	e0 91 1a 01 	lds	r30, 0x011A
     4ea:	ed 87       	std	Y+13, r30	; 0x0d
     4ec:	f0 91 1b 01 	lds	r31, 0x011B
     4f0:	fe 87       	std	Y+14, r31	; 0x0e
     4f2:	20 91 18 01 	lds	r18, 0x0118
     4f6:	2b 87       	std	Y+11, r18	; 0x0b
     4f8:	30 91 19 01 	lds	r19, 0x0119
     4fc:	3c 87       	std	Y+12, r19	; 0x0c
     4fe:	40 91 1c 01 	lds	r20, 0x011C
     502:	49 8b       	std	Y+17, r20	; 0x11
     504:	50 91 1d 01 	lds	r21, 0x011D
     508:	5a 8b       	std	Y+18, r21	; 0x12
     50a:	60 91 1e 01 	lds	r22, 0x011E
     50e:	6b 8b       	std	Y+19, r22	; 0x13
     510:	70 91 1f 01 	lds	r23, 0x011F
     514:	7c 8b       	std	Y+20, r23	; 0x14
     516:	f0 90 00 01 	lds	r15, 0x0100
     51a:	e0 90 01 01 	lds	r14, 0x0101
     51e:	20 90 02 01 	lds	r2, 0x0102
     522:	30 90 03 01 	lds	r3, 0x0103
     526:	80 91 16 01 	lds	r24, 0x0116
     52a:	8f 87       	std	Y+15, r24	; 0x0f
     52c:	90 91 17 01 	lds	r25, 0x0117
     530:	98 8b       	std	Y+16, r25	; 0x10
     532:	a0 91 14 01 	lds	r26, 0x0114
     536:	b0 91 15 01 	lds	r27, 0x0115
     53a:	ba 87       	std	Y+10, r27	; 0x0a
     53c:	a9 87       	std	Y+9, r26	; 0x09
     53e:	18 86       	std	Y+8, r1	; 0x08
     540:	1f 82       	std	Y+7, r1	; 0x07
     542:	80 e0       	ldi	r24, 0x00	; 0
     544:	90 e0       	ldi	r25, 0x00	; 0
     546:	77 c0       	rjmp	.+238    	; 0x636 <determine_blobs+0x1fe>
			exit = 1;
			for (int i = 0; i < 4; i++) {
				for (int j = i; j < 4; j++) {
					dist = sqrt((x[i]-x[j])*(x[i]-x[j])+(y[i]-y[j])*(y[i]-y[j]));
     548:	f8 01       	movw	r30, r16
     54a:	81 91       	ld	r24, Z+
     54c:	91 91       	ld	r25, Z+
     54e:	8f 01       	movw	r16, r30
     550:	2b 81       	ldd	r18, Y+3	; 0x03
     552:	3c 81       	ldd	r19, Y+4	; 0x04
     554:	28 1b       	sub	r18, r24
     556:	39 0b       	sbc	r19, r25
     558:	c9 01       	movw	r24, r18
     55a:	a9 81       	ldd	r26, Y+1	; 0x01
     55c:	ba 81       	ldd	r27, Y+2	; 0x02
     55e:	2d 91       	ld	r18, X+
     560:	3d 91       	ld	r19, X+
     562:	ba 83       	std	Y+2, r27	; 0x02
     564:	a9 83       	std	Y+1, r26	; 0x01
     566:	ed 81       	ldd	r30, Y+5	; 0x05
     568:	fe 81       	ldd	r31, Y+6	; 0x06
     56a:	e2 1b       	sub	r30, r18
     56c:	f3 0b       	sbc	r31, r19
     56e:	ee 9f       	mul	r30, r30
     570:	b0 01       	movw	r22, r0
     572:	ef 9f       	mul	r30, r31
     574:	70 0d       	add	r23, r0
     576:	70 0d       	add	r23, r0
     578:	11 24       	eor	r1, r1
     57a:	88 9f       	mul	r24, r24
     57c:	90 01       	movw	r18, r0
     57e:	89 9f       	mul	r24, r25
     580:	30 0d       	add	r19, r0
     582:	30 0d       	add	r19, r0
     584:	11 24       	eor	r1, r1
     586:	62 0f       	add	r22, r18
     588:	73 1f       	adc	r23, r19
     58a:	80 e0       	ldi	r24, 0x00	; 0
     58c:	90 e0       	ldi	r25, 0x00	; 0
     58e:	0e 94 97 0b 	call	0x172e	; 0x172e <__floatunsisf>
     592:	0e 94 fb 0c 	call	0x19f6	; 0x19f6 <sqrt>
     596:	66 2e       	mov	r6, r22
     598:	77 2e       	mov	r7, r23
     59a:	88 2e       	mov	r8, r24
     59c:	99 2e       	mov	r9, r25
					if (dist > distmax) {
     59e:	2d 2d       	mov	r18, r13
     5a0:	3c 2d       	mov	r19, r12
     5a2:	44 2d       	mov	r20, r4
     5a4:	55 2d       	mov	r21, r5
     5a6:	66 2d       	mov	r22, r6
     5a8:	77 2d       	mov	r23, r7
     5aa:	88 2d       	mov	r24, r8
     5ac:	99 2d       	mov	r25, r9
     5ae:	0e 94 83 0c 	call	0x1906	; 0x1906 <__gesf2>
     5b2:	18 16       	cp	r1, r24
     5b4:	c4 f4       	brge	.+48     	; 0x5e6 <determine_blobs+0x1ae>
						distmax = dist;
						far1 = i;
						far2 = j;
						dcenter = dist / 2.0;
     5b6:	20 e0       	ldi	r18, 0x00	; 0
     5b8:	30 e0       	ldi	r19, 0x00	; 0
     5ba:	40 e0       	ldi	r20, 0x00	; 0
     5bc:	5f e3       	ldi	r21, 0x3F	; 63
     5be:	66 2d       	mov	r22, r6
     5c0:	77 2d       	mov	r23, r7
     5c2:	88 2d       	mov	r24, r8
     5c4:	99 2d       	mov	r25, r9
     5c6:	0e 94 8e 0c 	call	0x191c	; 0x191c <__mulsf3>
     5ca:	69 8b       	std	Y+17, r22	; 0x11
     5cc:	7a 8b       	std	Y+18, r23	; 0x12
     5ce:	8b 8b       	std	Y+19, r24	; 0x13
     5d0:	9c 8b       	std	Y+20, r25	; 0x14
				for (int j = i; j < 4; j++) {
					dist = sqrt((x[i]-x[j])*(x[i]-x[j])+(y[i]-y[j])*(y[i]-y[j]));
					if (dist > distmax) {
						distmax = dist;
						far1 = i;
						far2 = j;
     5d2:	fd 89       	ldd	r31, Y+21	; 0x15
     5d4:	fb 87       	std	Y+11, r31	; 0x0b
     5d6:	2e 89       	ldd	r18, Y+22	; 0x16
     5d8:	2c 87       	std	Y+12, r18	; 0x0c
			for (int i = 0; i < 4; i++) {
				for (int j = i; j < 4; j++) {
					dist = sqrt((x[i]-x[j])*(x[i]-x[j])+(y[i]-y[j])*(y[i]-y[j]));
					if (dist > distmax) {
						distmax = dist;
						far1 = i;
     5da:	ad 86       	std	Y+13, r10	; 0x0d
     5dc:	be 86       	std	Y+14, r11	; 0x0e
			exit = 1;
			for (int i = 0; i < 4; i++) {
				for (int j = i; j < 4; j++) {
					dist = sqrt((x[i]-x[j])*(x[i]-x[j])+(y[i]-y[j])*(y[i]-y[j]));
					if (dist > distmax) {
						distmax = dist;
     5de:	d6 2c       	mov	r13, r6
     5e0:	c7 2c       	mov	r12, r7
     5e2:	48 2c       	mov	r4, r8
     5e4:	59 2c       	mov	r5, r9
						far1 = i;
						far2 = j;
						dcenter = dist / 2.0;
					}
					if (dist < distmin) {
     5e6:	26 2d       	mov	r18, r6
     5e8:	37 2d       	mov	r19, r7
     5ea:	48 2d       	mov	r20, r8
     5ec:	59 2d       	mov	r21, r9
     5ee:	6f 2d       	mov	r22, r15
     5f0:	7e 2d       	mov	r23, r14
     5f2:	82 2d       	mov	r24, r2
     5f4:	93 2d       	mov	r25, r3
     5f6:	0e 94 83 0c 	call	0x1906	; 0x1906 <__gesf2>
     5fa:	18 16       	cp	r1, r24
     5fc:	54 f4       	brge	.+20     	; 0x612 <determine_blobs+0x1da>
						distmin = dist;
						close1 = i;
						close2 = j;
     5fe:	4d 89       	ldd	r20, Y+21	; 0x15
     600:	5e 89       	ldd	r21, Y+22	; 0x16
     602:	5a 87       	std	Y+10, r21	; 0x0a
     604:	49 87       	std	Y+9, r20	; 0x09
						far2 = j;
						dcenter = dist / 2.0;
					}
					if (dist < distmin) {
						distmin = dist;
						close1 = i;
     606:	af 86       	std	Y+15, r10	; 0x0f
     608:	b8 8a       	std	Y+16, r11	; 0x10
						far1 = i;
						far2 = j;
						dcenter = dist / 2.0;
					}
					if (dist < distmin) {
						distmin = dist;
     60a:	f6 2c       	mov	r15, r6
     60c:	e7 2c       	mov	r14, r7
     60e:	28 2c       	mov	r2, r8
     610:	39 2c       	mov	r3, r9
	while (exit == 0) {
		getData(x, y);
		if (x[0] < 1023 && x[1] < 1023 && x[2] < 1023 && x[3] < 1023) {
			exit = 1;
			for (int i = 0; i < 4; i++) {
				for (int j = i; j < 4; j++) {
     612:	6d 89       	ldd	r22, Y+21	; 0x15
     614:	7e 89       	ldd	r23, Y+22	; 0x16
     616:	6f 5f       	subi	r22, 0xFF	; 255
     618:	7f 4f       	sbci	r23, 0xFF	; 255
     61a:	7e 8b       	std	Y+22, r23	; 0x16
     61c:	6d 8b       	std	Y+21, r22	; 0x15
     61e:	64 30       	cpi	r22, 0x04	; 4
     620:	71 05       	cpc	r23, r1
     622:	09 f0       	breq	.+2      	; 0x626 <determine_blobs+0x1ee>
     624:	91 cf       	rjmp	.-222    	; 0x548 <determine_blobs+0x110>
	int exit = 0;
	while (exit == 0) {
		getData(x, y);
		if (x[0] < 1023 && x[1] < 1023 && x[2] < 1023 && x[3] < 1023) {
			exit = 1;
			for (int i = 0; i < 4; i++) {
     626:	8f 81       	ldd	r24, Y+7	; 0x07
     628:	98 85       	ldd	r25, Y+8	; 0x08
     62a:	01 96       	adiw	r24, 0x01	; 1
     62c:	98 87       	std	Y+8, r25	; 0x08
     62e:	8f 83       	std	Y+7, r24	; 0x07
     630:	84 30       	cpi	r24, 0x04	; 4
     632:	91 05       	cpc	r25, r1
     634:	e1 f0       	breq	.+56     	; 0x66e <determine_blobs+0x236>
				for (int j = i; j < 4; j++) {
     636:	84 30       	cpi	r24, 0x04	; 4
     638:	91 05       	cpc	r25, r1
     63a:	ac f7       	brge	.-22     	; 0x626 <determine_blobs+0x1ee>
					dist = sqrt((x[i]-x[j])*(x[i]-x[j])+(y[i]-y[j])*(y[i]-y[j]));
     63c:	fc 01       	movw	r30, r24
     63e:	ee 0f       	add	r30, r30
     640:	ff 1f       	adc	r31, r31
     642:	8f 01       	movw	r16, r30
     644:	00 5d       	subi	r16, 0xD0	; 208
     646:	1e 4f       	sbci	r17, 0xFE	; 254
     648:	d8 01       	movw	r26, r16
     64a:	0d 90       	ld	r0, X+
     64c:	bc 91       	ld	r27, X
     64e:	a0 2d       	mov	r26, r0
     650:	bc 83       	std	Y+4, r27	; 0x04
     652:	ab 83       	std	Y+3, r26	; 0x03
     654:	e8 5d       	subi	r30, 0xD8	; 216
     656:	fe 4f       	sbci	r31, 0xFE	; 254
     658:	20 81       	ld	r18, Z
     65a:	31 81       	ldd	r19, Z+1	; 0x01
     65c:	3e 83       	std	Y+6, r19	; 0x06
     65e:	2d 83       	std	Y+5, r18	; 0x05
	y[2] = blobs[7];
	y[3] = blobs[10];
	return 1;
} 

unsigned char determine_blobs() {
     660:	fa 83       	std	Y+2, r31	; 0x02
     662:	e9 83       	std	Y+1, r30	; 0x01
			for (int i = 0; i < 4; i++) {
				for (int j = i; j < 4; j++) {
					dist = sqrt((x[i]-x[j])*(x[i]-x[j])+(y[i]-y[j])*(y[i]-y[j]));
					if (dist > distmax) {
						distmax = dist;
						far1 = i;
     664:	a8 2e       	mov	r10, r24
     666:	b9 2e       	mov	r11, r25
     668:	9e 8b       	std	Y+22, r25	; 0x16
     66a:	8d 8b       	std	Y+21, r24	; 0x15
     66c:	6d cf       	rjmp	.-294    	; 0x548 <determine_blobs+0x110>
     66e:	86 2d       	mov	r24, r6
     670:	97 2d       	mov	r25, r7
     672:	a8 2d       	mov	r26, r8
     674:	b9 2d       	mov	r27, r9
     676:	80 93 24 01 	sts	0x0124, r24
     67a:	90 93 25 01 	sts	0x0125, r25
     67e:	a0 93 26 01 	sts	0x0126, r26
     682:	b0 93 27 01 	sts	0x0127, r27
     686:	8d 2d       	mov	r24, r13
     688:	9c 2d       	mov	r25, r12
     68a:	a4 2d       	mov	r26, r4
     68c:	b5 2d       	mov	r27, r5
     68e:	80 93 20 01 	sts	0x0120, r24
     692:	90 93 21 01 	sts	0x0121, r25
     696:	a0 93 22 01 	sts	0x0122, r26
     69a:	b0 93 23 01 	sts	0x0123, r27
     69e:	3d 85       	ldd	r19, Y+13	; 0x0d
     6a0:	30 93 1a 01 	sts	0x011A, r19
     6a4:	4e 85       	ldd	r20, Y+14	; 0x0e
     6a6:	40 93 1b 01 	sts	0x011B, r20
     6aa:	5b 85       	ldd	r21, Y+11	; 0x0b
     6ac:	50 93 18 01 	sts	0x0118, r21
     6b0:	6c 85       	ldd	r22, Y+12	; 0x0c
     6b2:	60 93 19 01 	sts	0x0119, r22
     6b6:	59 89       	ldd	r21, Y+17	; 0x11
     6b8:	4a 89       	ldd	r20, Y+18	; 0x12
     6ba:	3b 89       	ldd	r19, Y+19	; 0x13
     6bc:	2c 89       	ldd	r18, Y+20	; 0x14
     6be:	85 2f       	mov	r24, r21
     6c0:	94 2f       	mov	r25, r20
     6c2:	a3 2f       	mov	r26, r19
     6c4:	b2 2f       	mov	r27, r18
     6c6:	80 93 1c 01 	sts	0x011C, r24
     6ca:	90 93 1d 01 	sts	0x011D, r25
     6ce:	a0 93 1e 01 	sts	0x011E, r26
     6d2:	b0 93 1f 01 	sts	0x011F, r27
     6d6:	8f 2d       	mov	r24, r15
     6d8:	9e 2d       	mov	r25, r14
     6da:	a2 2d       	mov	r26, r2
     6dc:	b3 2d       	mov	r27, r3
     6de:	80 93 00 01 	sts	0x0100, r24
     6e2:	90 93 01 01 	sts	0x0101, r25
     6e6:	a0 93 02 01 	sts	0x0102, r26
     6ea:	b0 93 03 01 	sts	0x0103, r27
     6ee:	7f 85       	ldd	r23, Y+15	; 0x0f
     6f0:	70 93 16 01 	sts	0x0116, r23
     6f4:	88 89       	ldd	r24, Y+16	; 0x10
     6f6:	80 93 17 01 	sts	0x0117, r24
     6fa:	99 85       	ldd	r25, Y+9	; 0x09
     6fc:	90 93 14 01 	sts	0x0114, r25
     700:	aa 85       	ldd	r26, Y+10	; 0x0a
     702:	a0 93 15 01 	sts	0x0115, r26
						close1 = i;
						close2 = j;
					}
				}
			}
			if (far1 == close1) {
     706:	80 91 1a 01 	lds	r24, 0x011A
     70a:	90 91 1b 01 	lds	r25, 0x011B
     70e:	20 91 16 01 	lds	r18, 0x0116
     712:	30 91 17 01 	lds	r19, 0x0117
     716:	82 17       	cp	r24, r18
     718:	93 07       	cpc	r25, r19
     71a:	19 f5       	brne	.+70     	; 0x762 <determine_blobs+0x32a>
				top = far1;
     71c:	90 93 3f 01 	sts	0x013F, r25
     720:	80 93 3e 01 	sts	0x013E, r24
				bottom = far2;
     724:	40 91 18 01 	lds	r20, 0x0118
     728:	50 91 19 01 	lds	r21, 0x0119
     72c:	50 93 3d 01 	sts	0x013D, r21
     730:	40 93 3c 01 	sts	0x013C, r20
				right = close2;
     734:	20 91 14 01 	lds	r18, 0x0114
     738:	30 91 15 01 	lds	r19, 0x0115
     73c:	30 93 39 01 	sts	0x0139, r19
     740:	20 93 38 01 	sts	0x0138, r18
				//left + top + bottom + right = 1 + 2 + 3 + 4 = 10
				left = 10 - top - bottom - right;
     744:	6a e0       	ldi	r22, 0x0A	; 10
     746:	70 e0       	ldi	r23, 0x00	; 0
     748:	fb 01       	movw	r30, r22
     74a:	e8 1b       	sub	r30, r24
     74c:	f9 0b       	sbc	r31, r25
     74e:	cf 01       	movw	r24, r30
     750:	84 1b       	sub	r24, r20
     752:	95 0b       	sbc	r25, r21
     754:	82 1b       	sub	r24, r18
     756:	93 0b       	sbc	r25, r19
     758:	90 93 3b 01 	sts	0x013B, r25
     75c:	80 93 3a 01 	sts	0x013A, r24
     760:	64 c0       	rjmp	.+200    	; 0x82a <determine_blobs+0x3f2>
			}
			else if (far1 == close2) {
     762:	49 85       	ldd	r20, Y+9	; 0x09
     764:	5a 85       	ldd	r21, Y+10	; 0x0a
     766:	84 17       	cp	r24, r20
     768:	95 07       	cpc	r25, r21
     76a:	f9 f4       	brne	.+62     	; 0x7aa <determine_blobs+0x372>
				top = far1;
     76c:	90 93 3f 01 	sts	0x013F, r25
     770:	80 93 3e 01 	sts	0x013E, r24
				bottom = far2;
     774:	40 91 18 01 	lds	r20, 0x0118
     778:	50 91 19 01 	lds	r21, 0x0119
     77c:	50 93 3d 01 	sts	0x013D, r21
     780:	40 93 3c 01 	sts	0x013C, r20
				right = close1;
     784:	30 93 39 01 	sts	0x0139, r19
     788:	20 93 38 01 	sts	0x0138, r18
				left = 10 - top - bottom - right;
     78c:	6a e0       	ldi	r22, 0x0A	; 10
     78e:	70 e0       	ldi	r23, 0x00	; 0
     790:	db 01       	movw	r26, r22
     792:	a8 1b       	sub	r26, r24
     794:	b9 0b       	sbc	r27, r25
     796:	cd 01       	movw	r24, r26
     798:	84 1b       	sub	r24, r20
     79a:	95 0b       	sbc	r25, r21
     79c:	82 1b       	sub	r24, r18
     79e:	93 0b       	sbc	r25, r19
     7a0:	90 93 3b 01 	sts	0x013B, r25
     7a4:	80 93 3a 01 	sts	0x013A, r24
     7a8:	40 c0       	rjmp	.+128    	; 0x82a <determine_blobs+0x3f2>
			}
			else if (far2 == close1) {
     7aa:	40 91 18 01 	lds	r20, 0x0118
     7ae:	50 91 19 01 	lds	r21, 0x0119
     7b2:	24 17       	cp	r18, r20
     7b4:	35 07       	cpc	r19, r21
     7b6:	f1 f4       	brne	.+60     	; 0x7f4 <determine_blobs+0x3bc>
				top = far2;
     7b8:	30 93 3f 01 	sts	0x013F, r19
     7bc:	20 93 3e 01 	sts	0x013E, r18
				bottom = far1;
     7c0:	90 93 3d 01 	sts	0x013D, r25
     7c4:	80 93 3c 01 	sts	0x013C, r24
				right = close2;
     7c8:	e9 85       	ldd	r30, Y+9	; 0x09
     7ca:	fa 85       	ldd	r31, Y+10	; 0x0a
     7cc:	f0 93 39 01 	sts	0x0139, r31
     7d0:	e0 93 38 01 	sts	0x0138, r30
				left = 10 - top - bottom - right;
     7d4:	4a e0       	ldi	r20, 0x0A	; 10
     7d6:	50 e0       	ldi	r21, 0x00	; 0
     7d8:	ba 01       	movw	r22, r20
     7da:	62 1b       	sub	r22, r18
     7dc:	73 0b       	sbc	r23, r19
     7de:	db 01       	movw	r26, r22
     7e0:	a8 1b       	sub	r26, r24
     7e2:	b9 0b       	sbc	r27, r25
     7e4:	cd 01       	movw	r24, r26
     7e6:	8e 1b       	sub	r24, r30
     7e8:	9f 0b       	sbc	r25, r31
     7ea:	90 93 3b 01 	sts	0x013B, r25
     7ee:	80 93 3a 01 	sts	0x013A, r24
     7f2:	1b c0       	rjmp	.+54     	; 0x82a <determine_blobs+0x3f2>
			}
			else {
				top = far2;
     7f4:	50 93 3f 01 	sts	0x013F, r21
     7f8:	40 93 3e 01 	sts	0x013E, r20
				bottom = far1;
     7fc:	90 93 3d 01 	sts	0x013D, r25
     800:	80 93 3c 01 	sts	0x013C, r24
				right = close1;
     804:	30 93 39 01 	sts	0x0139, r19
     808:	20 93 38 01 	sts	0x0138, r18
				left = 10 - top - bottom - right;
     80c:	6a e0       	ldi	r22, 0x0A	; 10
     80e:	70 e0       	ldi	r23, 0x00	; 0
     810:	fb 01       	movw	r30, r22
     812:	e4 1b       	sub	r30, r20
     814:	f5 0b       	sbc	r31, r21
     816:	bf 01       	movw	r22, r30
     818:	68 1b       	sub	r22, r24
     81a:	79 0b       	sbc	r23, r25
     81c:	cb 01       	movw	r24, r22
     81e:	82 1b       	sub	r24, r18
     820:	93 0b       	sbc	r25, r19
     822:	90 93 3b 01 	sts	0x013B, r25
     826:	80 93 3a 01 	sts	0x013A, r24
			}
		}
	}
	return 1;
}
     82a:	81 e0       	ldi	r24, 0x01	; 1
     82c:	66 96       	adiw	r28, 0x16	; 22
     82e:	0f b6       	in	r0, 0x3f	; 63
     830:	f8 94       	cli
     832:	de bf       	out	0x3e, r29	; 62
     834:	0f be       	out	0x3f, r0	; 63
     836:	cd bf       	out	0x3d, r28	; 61
     838:	df 91       	pop	r29
     83a:	cf 91       	pop	r28
     83c:	1f 91       	pop	r17
     83e:	0f 91       	pop	r16
     840:	ff 90       	pop	r15
     842:	ef 90       	pop	r14
     844:	df 90       	pop	r13
     846:	cf 90       	pop	r12
     848:	bf 90       	pop	r11
     84a:	af 90       	pop	r10
     84c:	9f 90       	pop	r9
     84e:	8f 90       	pop	r8
     850:	7f 90       	pop	r7
     852:	6f 90       	pop	r6
     854:	5f 90       	pop	r5
     856:	4f 90       	pop	r4
     858:	3f 90       	pop	r3
     85a:	2f 90       	pop	r2
     85c:	08 95       	ret

0000085e <localize>:
	determine_blobs();
	
	return 1;
}

unsigned char localize (float* data) {
     85e:	2f 92       	push	r2
     860:	3f 92       	push	r3
     862:	4f 92       	push	r4
     864:	5f 92       	push	r5
     866:	6f 92       	push	r6
     868:	7f 92       	push	r7
     86a:	8f 92       	push	r8
     86c:	9f 92       	push	r9
     86e:	af 92       	push	r10
     870:	bf 92       	push	r11
     872:	cf 92       	push	r12
     874:	df 92       	push	r13
     876:	ef 92       	push	r14
     878:	ff 92       	push	r15
     87a:	0f 93       	push	r16
     87c:	1f 93       	push	r17
     87e:	cf 93       	push	r28
     880:	df 93       	push	r29
     882:	cd b7       	in	r28, 0x3d	; 61
     884:	de b7       	in	r29, 0x3e	; 62
     886:	2a 97       	sbiw	r28, 0x0a	; 10
     888:	0f b6       	in	r0, 0x3f	; 63
     88a:	f8 94       	cli
     88c:	de bf       	out	0x3e, r29	; 62
     88e:	0f be       	out	0x3f, r0	; 63
     890:	cd bf       	out	0x3d, r28	; 61
     892:	9a 87       	std	Y+10, r25	; 0x0a
     894:	89 87       	std	Y+9, r24	; 0x09
	m_wii_read(blobs);
     896:	80 e4       	ldi	r24, 0x40	; 64
     898:	91 e0       	ldi	r25, 0x01	; 1
     89a:	0e 94 9c 08 	call	0x1138	; 0x1138 <m_wii_read>
	determine_blobs();
     89e:	0e 94 1c 02 	call	0x438	; 0x438 <determine_blobs>
	float theta_top_right = (float) atan2((double) 11.655, (double) (14.5+8.741));
	float theta_bottom_left = (float) atan2((double)10.563, (double) (14.5+2.483));
	float theta_bottom_right = (float) atan2((double) 11.655, (double) (14.5-8.741));

	
	if (x[top] < 1023 && x[bottom] < 1023) {
     8a2:	c0 90 3e 01 	lds	r12, 0x013E
     8a6:	d0 90 3f 01 	lds	r13, 0x013F
     8aa:	f6 01       	movw	r30, r12
     8ac:	ee 0f       	add	r30, r30
     8ae:	ff 1f       	adc	r31, r31
     8b0:	e0 5d       	subi	r30, 0xD0	; 208
     8b2:	fe 4f       	sbci	r31, 0xFE	; 254
     8b4:	e0 80       	ld	r14, Z
     8b6:	f1 80       	ldd	r15, Z+1	; 0x01
     8b8:	8f ef       	ldi	r24, 0xFF	; 255
     8ba:	e8 16       	cp	r14, r24
     8bc:	83 e0       	ldi	r24, 0x03	; 3
     8be:	f8 06       	cpc	r15, r24
     8c0:	08 f0       	brcs	.+2      	; 0x8c4 <localize+0x66>
     8c2:	3b c1       	rjmp	.+630    	; 0xb3a <__stack+0x3b>
     8c4:	80 90 3c 01 	lds	r8, 0x013C
     8c8:	90 90 3d 01 	lds	r9, 0x013D
     8cc:	f4 01       	movw	r30, r8
     8ce:	ee 0f       	add	r30, r30
     8d0:	ff 1f       	adc	r31, r31
     8d2:	e0 5d       	subi	r30, 0xD0	; 208
     8d4:	fe 4f       	sbci	r31, 0xFE	; 254
     8d6:	a0 80       	ld	r10, Z
     8d8:	b1 80       	ldd	r11, Z+1	; 0x01
     8da:	ef ef       	ldi	r30, 0xFF	; 255
     8dc:	ae 16       	cp	r10, r30
     8de:	e3 e0       	ldi	r30, 0x03	; 3
     8e0:	be 06       	cpc	r11, r30
     8e2:	08 f0       	brcs	.+2      	; 0x8e6 <localize+0x88>
     8e4:	2c c1       	rjmp	.+600    	; 0xb3e <__stack+0x3f>
		//calculate and store pixel-space position and orientation
		posx = (float) ((128.0/1023.0)*((float)(x[top]+x[bottom]))/2.0-rcenterx);
     8e6:	40 90 08 01 	lds	r4, 0x0108
     8ea:	50 90 09 01 	lds	r5, 0x0109
     8ee:	60 90 0a 01 	lds	r6, 0x010A
     8f2:	70 90 0b 01 	lds	r7, 0x010B
     8f6:	b5 01       	movw	r22, r10
     8f8:	6e 0d       	add	r22, r14
     8fa:	7f 1d       	adc	r23, r15
     8fc:	80 e0       	ldi	r24, 0x00	; 0
     8fe:	90 e0       	ldi	r25, 0x00	; 0
     900:	0e 94 97 0b 	call	0x172e	; 0x172e <__floatunsisf>
     904:	28 e0       	ldi	r18, 0x08	; 8
     906:	30 e2       	ldi	r19, 0x20	; 32
     908:	40 e0       	ldi	r20, 0x00	; 0
     90a:	5e e3       	ldi	r21, 0x3E	; 62
     90c:	0e 94 8e 0c 	call	0x191c	; 0x191c <__mulsf3>
     910:	20 e0       	ldi	r18, 0x00	; 0
     912:	30 e0       	ldi	r19, 0x00	; 0
     914:	40 e0       	ldi	r20, 0x00	; 0
     916:	5f e3       	ldi	r21, 0x3F	; 63
     918:	0e 94 8e 0c 	call	0x191c	; 0x191c <__mulsf3>
     91c:	a3 01       	movw	r20, r6
     91e:	92 01       	movw	r18, r4
     920:	0e 94 34 0a 	call	0x1468	; 0x1468 <__subsf3>
     924:	16 2f       	mov	r17, r22
     926:	07 2f       	mov	r16, r23
     928:	38 2e       	mov	r3, r24
     92a:	29 2e       	mov	r2, r25
		posy = (float) ((96.0/1023.0)*((float)(y[top]+y[bottom]))/2.0-rcentery);
     92c:	f6 01       	movw	r30, r12
     92e:	ee 0f       	add	r30, r30
     930:	ff 1f       	adc	r31, r31
     932:	e8 5d       	subi	r30, 0xD8	; 216
     934:	fe 4f       	sbci	r31, 0xFE	; 254
     936:	c0 80       	ld	r12, Z
     938:	d1 80       	ldd	r13, Z+1	; 0x01
     93a:	f4 01       	movw	r30, r8
     93c:	ee 0f       	add	r30, r30
     93e:	ff 1f       	adc	r31, r31
     940:	e8 5d       	subi	r30, 0xD8	; 216
     942:	fe 4f       	sbci	r31, 0xFE	; 254
     944:	80 80       	ld	r8, Z
     946:	91 80       	ldd	r9, Z+1	; 0x01
     948:	b4 01       	movw	r22, r8
     94a:	6c 0d       	add	r22, r12
     94c:	7d 1d       	adc	r23, r13
     94e:	80 e0       	ldi	r24, 0x00	; 0
     950:	90 e0       	ldi	r25, 0x00	; 0
     952:	0e 94 97 0b 	call	0x172e	; 0x172e <__floatunsisf>
     956:	2c e0       	ldi	r18, 0x0C	; 12
     958:	30 e3       	ldi	r19, 0x30	; 48
     95a:	40 ec       	ldi	r20, 0xC0	; 192
     95c:	5d e3       	ldi	r21, 0x3D	; 61
     95e:	0e 94 8e 0c 	call	0x191c	; 0x191c <__mulsf3>
     962:	20 e0       	ldi	r18, 0x00	; 0
     964:	30 e0       	ldi	r19, 0x00	; 0
     966:	40 e0       	ldi	r20, 0x00	; 0
     968:	5f e3       	ldi	r21, 0x3F	; 63
     96a:	0e 94 8e 0c 	call	0x191c	; 0x191c <__mulsf3>
     96e:	20 91 04 01 	lds	r18, 0x0104
     972:	30 91 05 01 	lds	r19, 0x0105
     976:	40 91 06 01 	lds	r20, 0x0106
     97a:	50 91 07 01 	lds	r21, 0x0107
     97e:	0e 94 34 0a 	call	0x1468	; 0x1468 <__subsf3>
     982:	69 83       	std	Y+1, r22	; 0x01
     984:	7a 83       	std	Y+2, r23	; 0x02
     986:	8b 83       	std	Y+3, r24	; 0x03
     988:	9c 83       	std	Y+4, r25	; 0x04
		
		//calculate and store angle
		angle = (float) atan2(((double) (x[top]-x[bottom])),((double) (y[top]-y[bottom])));
     98a:	b6 01       	movw	r22, r12
     98c:	68 19       	sub	r22, r8
     98e:	79 09       	sbc	r23, r9
     990:	80 e0       	ldi	r24, 0x00	; 0
     992:	90 e0       	ldi	r25, 0x00	; 0
     994:	0e 94 97 0b 	call	0x172e	; 0x172e <__floatunsisf>
     998:	6d 83       	std	Y+5, r22	; 0x05
     99a:	7e 83       	std	Y+6, r23	; 0x06
     99c:	8f 83       	std	Y+7, r24	; 0x07
     99e:	98 87       	std	Y+8, r25	; 0x08
     9a0:	b7 01       	movw	r22, r14
     9a2:	6a 19       	sub	r22, r10
     9a4:	7b 09       	sbc	r23, r11
     9a6:	80 e0       	ldi	r24, 0x00	; 0
     9a8:	90 e0       	ldi	r25, 0x00	; 0
     9aa:	0e 94 97 0b 	call	0x172e	; 0x172e <__floatunsisf>
     9ae:	2d 81       	ldd	r18, Y+5	; 0x05
     9b0:	3e 81       	ldd	r19, Y+6	; 0x06
     9b2:	4f 81       	ldd	r20, Y+7	; 0x07
     9b4:	58 85       	ldd	r21, Y+8	; 0x08
     9b6:	0e 94 a8 0a 	call	0x1550	; 0x1550 <atan2>
     9ba:	6b 01       	movw	r12, r22
     9bc:	7c 01       	movw	r14, r24
		phi = -1.0 * ((float) atan2((double) posy, (double) posx));
     9be:	21 2f       	mov	r18, r17
     9c0:	30 2f       	mov	r19, r16
     9c2:	43 2d       	mov	r20, r3
     9c4:	52 2d       	mov	r21, r2
     9c6:	b9 81       	ldd	r27, Y+1	; 0x01
     9c8:	aa 81       	ldd	r26, Y+2	; 0x02
     9ca:	bb 80       	ldd	r11, Y+3	; 0x03
     9cc:	ac 80       	ldd	r10, Y+4	; 0x04
     9ce:	6b 2f       	mov	r22, r27
     9d0:	7a 2f       	mov	r23, r26
     9d2:	8b 2d       	mov	r24, r11
     9d4:	9a 2d       	mov	r25, r10
     9d6:	0e 94 a8 0a 	call	0x1550	; 0x1550 <atan2>
     9da:	6d 83       	std	Y+5, r22	; 0x05
     9dc:	7e 83       	std	Y+6, r23	; 0x06
     9de:	8f 83       	std	Y+7, r24	; 0x07
     9e0:	98 87       	std	Y+8, r25	; 0x08
		
		r = (float) sqrt((double)(posx*posx + posy*posy));
     9e2:	21 2f       	mov	r18, r17
     9e4:	30 2f       	mov	r19, r16
     9e6:	43 2d       	mov	r20, r3
     9e8:	52 2d       	mov	r21, r2
     9ea:	61 2f       	mov	r22, r17
     9ec:	70 2f       	mov	r23, r16
     9ee:	83 2d       	mov	r24, r3
     9f0:	92 2d       	mov	r25, r2
     9f2:	0e 94 8e 0c 	call	0x191c	; 0x191c <__mulsf3>
     9f6:	4b 01       	movw	r8, r22
     9f8:	5c 01       	movw	r10, r24
     9fa:	79 81       	ldd	r23, Y+1	; 0x01
     9fc:	6a 81       	ldd	r22, Y+2	; 0x02
     9fe:	9b 81       	ldd	r25, Y+3	; 0x03
     a00:	8c 81       	ldd	r24, Y+4	; 0x04
     a02:	27 2f       	mov	r18, r23
     a04:	36 2f       	mov	r19, r22
     a06:	49 2f       	mov	r20, r25
     a08:	58 2f       	mov	r21, r24
     a0a:	67 2f       	mov	r22, r23
     a0c:	73 2f       	mov	r23, r19
     a0e:	84 2f       	mov	r24, r20
     a10:	95 2f       	mov	r25, r21
     a12:	0e 94 8e 0c 	call	0x191c	; 0x191c <__mulsf3>
     a16:	9b 01       	movw	r18, r22
     a18:	ac 01       	movw	r20, r24
     a1a:	c5 01       	movw	r24, r10
     a1c:	b4 01       	movw	r22, r8
     a1e:	0e 94 35 0a 	call	0x146a	; 0x146a <__addsf3>
     a22:	0e 94 fb 0c 	call	0x19f6	; 0x19f6 <sqrt>
     a26:	4b 01       	movw	r8, r22
     a28:	5c 01       	movw	r10, r24
		
		
		data[0] = rcenterx - r * (float) cos((double) (angle - phi));
     a2a:	2d 81       	ldd	r18, Y+5	; 0x05
     a2c:	3e 81       	ldd	r19, Y+6	; 0x06
     a2e:	4f 81       	ldd	r20, Y+7	; 0x07
     a30:	58 85       	ldd	r21, Y+8	; 0x08
     a32:	c7 01       	movw	r24, r14
     a34:	b6 01       	movw	r22, r12
     a36:	0e 94 35 0a 	call	0x146a	; 0x146a <__addsf3>
     a3a:	26 2e       	mov	r2, r22
     a3c:	37 2e       	mov	r3, r23
     a3e:	08 2f       	mov	r16, r24
     a40:	19 2f       	mov	r17, r25
     a42:	80 2f       	mov	r24, r16
     a44:	91 2f       	mov	r25, r17
     a46:	0e 94 fb 0a 	call	0x15f6	; 0x15f6 <cos>
     a4a:	a5 01       	movw	r20, r10
     a4c:	94 01       	movw	r18, r8
     a4e:	0e 94 8e 0c 	call	0x191c	; 0x191c <__mulsf3>
     a52:	9b 01       	movw	r18, r22
     a54:	ac 01       	movw	r20, r24
     a56:	c3 01       	movw	r24, r6
     a58:	b2 01       	movw	r22, r4
     a5a:	0e 94 34 0a 	call	0x1468	; 0x1468 <__subsf3>
     a5e:	e9 85       	ldd	r30, Y+9	; 0x09
     a60:	fa 85       	ldd	r31, Y+10	; 0x0a
     a62:	60 83       	st	Z, r22
     a64:	71 83       	std	Z+1, r23	; 0x01
     a66:	82 83       	std	Z+2, r24	; 0x02
     a68:	93 83       	std	Z+3, r25	; 0x03
		data[1] = rcentery + r * (float) sin((double) (angle - phi));
     a6a:	62 2d       	mov	r22, r2
     a6c:	73 2d       	mov	r23, r3
     a6e:	80 2f       	mov	r24, r16
     a70:	91 2f       	mov	r25, r17
     a72:	0e 94 f1 0c 	call	0x19e2	; 0x19e2 <sin>
     a76:	a5 01       	movw	r20, r10
     a78:	94 01       	movw	r18, r8
     a7a:	0e 94 8e 0c 	call	0x191c	; 0x191c <__mulsf3>
     a7e:	20 91 04 01 	lds	r18, 0x0104
     a82:	30 91 05 01 	lds	r19, 0x0105
     a86:	40 91 06 01 	lds	r20, 0x0106
     a8a:	50 91 07 01 	lds	r21, 0x0107
     a8e:	0e 94 35 0a 	call	0x146a	; 0x146a <__addsf3>
     a92:	e9 85       	ldd	r30, Y+9	; 0x09
     a94:	fa 85       	ldd	r31, Y+10	; 0x0a
     a96:	64 83       	std	Z+4, r22	; 0x04
     a98:	75 83       	std	Z+5, r23	; 0x05
     a9a:	86 83       	std	Z+6, r24	; 0x06
     a9c:	97 83       	std	Z+7, r25	; 0x07
		data[2] = angle;
     a9e:	c0 86       	std	Z+8, r12	; 0x08
     aa0:	d1 86       	std	Z+9, r13	; 0x09
     aa2:	e2 86       	std	Z+10, r14	; 0x0a
     aa4:	f3 86       	std	Z+11, r15	; 0x0b
		data[3] = x[top];
     aa6:	e0 90 3e 01 	lds	r14, 0x013E
     aaa:	f0 90 3f 01 	lds	r15, 0x013F
     aae:	ee 0c       	add	r14, r14
     ab0:	ff 1c       	adc	r15, r15
     ab2:	f7 01       	movw	r30, r14
     ab4:	e0 5d       	subi	r30, 0xD0	; 208
     ab6:	fe 4f       	sbci	r31, 0xFE	; 254
     ab8:	60 81       	ld	r22, Z
     aba:	71 81       	ldd	r23, Z+1	; 0x01
     abc:	80 e0       	ldi	r24, 0x00	; 0
     abe:	90 e0       	ldi	r25, 0x00	; 0
     ac0:	0e 94 97 0b 	call	0x172e	; 0x172e <__floatunsisf>
     ac4:	e9 85       	ldd	r30, Y+9	; 0x09
     ac6:	fa 85       	ldd	r31, Y+10	; 0x0a
     ac8:	64 87       	std	Z+12, r22	; 0x0c
     aca:	75 87       	std	Z+13, r23	; 0x0d
     acc:	86 87       	std	Z+14, r24	; 0x0e
     ace:	97 87       	std	Z+15, r25	; 0x0f
		data[4] = x[bottom];
     ad0:	00 91 3c 01 	lds	r16, 0x013C
     ad4:	10 91 3d 01 	lds	r17, 0x013D
     ad8:	00 0f       	add	r16, r16
     ada:	11 1f       	adc	r17, r17
     adc:	f8 01       	movw	r30, r16
     ade:	e0 5d       	subi	r30, 0xD0	; 208
     ae0:	fe 4f       	sbci	r31, 0xFE	; 254
     ae2:	60 81       	ld	r22, Z
     ae4:	71 81       	ldd	r23, Z+1	; 0x01
     ae6:	80 e0       	ldi	r24, 0x00	; 0
     ae8:	90 e0       	ldi	r25, 0x00	; 0
     aea:	0e 94 97 0b 	call	0x172e	; 0x172e <__floatunsisf>
     aee:	e9 85       	ldd	r30, Y+9	; 0x09
     af0:	fa 85       	ldd	r31, Y+10	; 0x0a
     af2:	60 8b       	std	Z+16, r22	; 0x10
     af4:	71 8b       	std	Z+17, r23	; 0x11
     af6:	82 8b       	std	Z+18, r24	; 0x12
     af8:	93 8b       	std	Z+19, r25	; 0x13
		data[5] = y[top];
     afa:	f7 01       	movw	r30, r14
     afc:	e8 5d       	subi	r30, 0xD8	; 216
     afe:	fe 4f       	sbci	r31, 0xFE	; 254
     b00:	60 81       	ld	r22, Z
     b02:	71 81       	ldd	r23, Z+1	; 0x01
     b04:	80 e0       	ldi	r24, 0x00	; 0
     b06:	90 e0       	ldi	r25, 0x00	; 0
     b08:	0e 94 97 0b 	call	0x172e	; 0x172e <__floatunsisf>
     b0c:	e9 85       	ldd	r30, Y+9	; 0x09
     b0e:	fa 85       	ldd	r31, Y+10	; 0x0a
     b10:	64 8b       	std	Z+20, r22	; 0x14
     b12:	75 8b       	std	Z+21, r23	; 0x15
     b14:	86 8b       	std	Z+22, r24	; 0x16
     b16:	97 8b       	std	Z+23, r25	; 0x17
		data[6] = y[bottom];
     b18:	f8 01       	movw	r30, r16
     b1a:	e8 5d       	subi	r30, 0xD8	; 216
     b1c:	fe 4f       	sbci	r31, 0xFE	; 254
     b1e:	60 81       	ld	r22, Z
     b20:	71 81       	ldd	r23, Z+1	; 0x01
     b22:	80 e0       	ldi	r24, 0x00	; 0
     b24:	90 e0       	ldi	r25, 0x00	; 0
     b26:	0e 94 97 0b 	call	0x172e	; 0x172e <__floatunsisf>
     b2a:	e9 85       	ldd	r30, Y+9	; 0x09
     b2c:	fa 85       	ldd	r31, Y+10	; 0x0a
     b2e:	60 8f       	std	Z+24, r22	; 0x18
     b30:	71 8f       	std	Z+25, r23	; 0x19
     b32:	82 8f       	std	Z+26, r24	; 0x1a
     b34:	93 8f       	std	Z+27, r25	; 0x1b
		return 1;
     b36:	81 e0       	ldi	r24, 0x01	; 1
     b38:	03 c0       	rjmp	.+6      	; 0xb40 <__stack+0x41>
		data[1] = rcentery - r * (float)sin((double)(angle - phi));
		data[2] = angle;
		return 1;
	}
	*/
	return 0;
     b3a:	80 e0       	ldi	r24, 0x00	; 0
     b3c:	01 c0       	rjmp	.+2      	; 0xb40 <__stack+0x41>
     b3e:	80 e0       	ldi	r24, 0x00	; 0
     b40:	2a 96       	adiw	r28, 0x0a	; 10
     b42:	0f b6       	in	r0, 0x3f	; 63
     b44:	f8 94       	cli
     b46:	de bf       	out	0x3e, r29	; 62
     b48:	0f be       	out	0x3f, r0	; 63
     b4a:	cd bf       	out	0x3d, r28	; 61
     b4c:	df 91       	pop	r29
     b4e:	cf 91       	pop	r28
     b50:	1f 91       	pop	r17
     b52:	0f 91       	pop	r16
     b54:	ff 90       	pop	r15
     b56:	ef 90       	pop	r14
     b58:	df 90       	pop	r13
     b5a:	cf 90       	pop	r12
     b5c:	bf 90       	pop	r11
     b5e:	af 90       	pop	r10
     b60:	9f 90       	pop	r9
     b62:	8f 90       	pop	r8
     b64:	7f 90       	pop	r7
     b66:	6f 90       	pop	r6
     b68:	5f 90       	pop	r5
     b6a:	4f 90       	pop	r4
     b6c:	3f 90       	pop	r3
     b6e:	2f 90       	pop	r2
     b70:	08 95       	ret

00000b72 <m_usb_init>:
     b72:	81 e0       	ldi	r24, 0x01	; 1
     b74:	80 93 d7 00 	sts	0x00D7, r24
     b78:	80 ea       	ldi	r24, 0xA0	; 160
     b7a:	80 93 d8 00 	sts	0x00D8, r24
     b7e:	82 e1       	ldi	r24, 0x12	; 18
     b80:	89 bd       	out	0x29, r24	; 41
     b82:	09 b4       	in	r0, 0x29	; 41
     b84:	00 fe       	sbrs	r0, 0
     b86:	fd cf       	rjmp	.-6      	; 0xb82 <m_usb_init+0x10>
     b88:	80 e9       	ldi	r24, 0x90	; 144
     b8a:	80 93 d8 00 	sts	0x00D8, r24
     b8e:	10 92 e0 00 	sts	0x00E0, r1
     b92:	10 92 59 01 	sts	0x0159, r1
     b96:	10 92 5a 01 	sts	0x015A, r1
     b9a:	8c e0       	ldi	r24, 0x0C	; 12
     b9c:	80 93 e2 00 	sts	0x00E2, r24
     ba0:	78 94       	sei
     ba2:	08 95       	ret

00000ba4 <m_usb_tx_char>:
     ba4:	cf 93       	push	r28
     ba6:	df 93       	push	r29
     ba8:	90 91 59 01 	lds	r25, 0x0159
     bac:	99 23       	and	r25, r25
     bae:	09 f4       	brne	.+2      	; 0xbb2 <m_usb_tx_char+0xe>
     bb0:	4d c0       	rjmp	.+154    	; 0xc4c <m_usb_tx_char+0xa8>
     bb2:	9f b7       	in	r25, 0x3f	; 63
     bb4:	f8 94       	cli
     bb6:	24 e0       	ldi	r18, 0x04	; 4
     bb8:	20 93 e9 00 	sts	0x00E9, r18
     bbc:	20 91 5b 01 	lds	r18, 0x015B
     bc0:	22 23       	and	r18, r18
     bc2:	49 f0       	breq	.+18     	; 0xbd6 <m_usb_tx_char+0x32>
     bc4:	20 91 e8 00 	lds	r18, 0x00E8
     bc8:	25 fd       	sbrc	r18, 5
     bca:	03 c0       	rjmp	.+6      	; 0xbd2 <m_usb_tx_char+0x2e>
     bcc:	9f bf       	out	0x3f, r25	; 63
     bce:	8f ef       	ldi	r24, 0xFF	; 255
     bd0:	42 c0       	rjmp	.+132    	; 0xc56 <m_usb_tx_char+0xb2>
     bd2:	10 92 5b 01 	sts	0x015B, r1
     bd6:	30 91 e4 00 	lds	r19, 0x00E4
     bda:	37 5e       	subi	r19, 0xE7	; 231
     bdc:	20 91 e8 00 	lds	r18, 0x00E8
     be0:	25 fd       	sbrc	r18, 5
     be2:	25 c0       	rjmp	.+74     	; 0xc2e <m_usb_tx_char+0x8a>
     be4:	9f bf       	out	0x3f, r25	; 63
     be6:	90 91 e4 00 	lds	r25, 0x00E4
     bea:	93 17       	cp	r25, r19
     bec:	49 f0       	breq	.+18     	; 0xc00 <m_usb_tx_char+0x5c>
     bee:	90 91 59 01 	lds	r25, 0x0159
     bf2:	91 11       	cpse	r25, r1
     bf4:	0f c0       	rjmp	.+30     	; 0xc14 <m_usb_tx_char+0x70>
     bf6:	2c c0       	rjmp	.+88     	; 0xc50 <m_usb_tx_char+0xac>
     bf8:	9f bf       	out	0x3f, r25	; 63
     bfa:	98 81       	ld	r25, Y
     bfc:	93 13       	cpse	r25, r19
     bfe:	05 c0       	rjmp	.+10     	; 0xc0a <m_usb_tx_char+0x66>
     c00:	81 e0       	ldi	r24, 0x01	; 1
     c02:	80 93 5b 01 	sts	0x015B, r24
     c06:	8f ef       	ldi	r24, 0xFF	; 255
     c08:	26 c0       	rjmp	.+76     	; 0xc56 <m_usb_tx_char+0xb2>
     c0a:	90 91 59 01 	lds	r25, 0x0159
     c0e:	91 11       	cpse	r25, r1
     c10:	08 c0       	rjmp	.+16     	; 0xc22 <m_usb_tx_char+0x7e>
     c12:	20 c0       	rjmp	.+64     	; 0xc54 <m_usb_tx_char+0xb0>
     c14:	a9 ee       	ldi	r26, 0xE9	; 233
     c16:	b0 e0       	ldi	r27, 0x00	; 0
     c18:	44 e0       	ldi	r20, 0x04	; 4
     c1a:	e8 ee       	ldi	r30, 0xE8	; 232
     c1c:	f0 e0       	ldi	r31, 0x00	; 0
     c1e:	c4 ee       	ldi	r28, 0xE4	; 228
     c20:	d0 e0       	ldi	r29, 0x00	; 0
     c22:	9f b7       	in	r25, 0x3f	; 63
     c24:	f8 94       	cli
     c26:	4c 93       	st	X, r20
     c28:	20 81       	ld	r18, Z
     c2a:	25 ff       	sbrs	r18, 5
     c2c:	e5 cf       	rjmp	.-54     	; 0xbf8 <m_usb_tx_char+0x54>
     c2e:	80 93 f1 00 	sts	0x00F1, r24
     c32:	80 91 e8 00 	lds	r24, 0x00E8
     c36:	85 fd       	sbrc	r24, 5
     c38:	03 c0       	rjmp	.+6      	; 0xc40 <m_usb_tx_char+0x9c>
     c3a:	8a e3       	ldi	r24, 0x3A	; 58
     c3c:	80 93 e8 00 	sts	0x00E8, r24
     c40:	85 e0       	ldi	r24, 0x05	; 5
     c42:	80 93 58 01 	sts	0x0158, r24
     c46:	9f bf       	out	0x3f, r25	; 63
     c48:	80 e0       	ldi	r24, 0x00	; 0
     c4a:	05 c0       	rjmp	.+10     	; 0xc56 <m_usb_tx_char+0xb2>
     c4c:	8f ef       	ldi	r24, 0xFF	; 255
     c4e:	03 c0       	rjmp	.+6      	; 0xc56 <m_usb_tx_char+0xb2>
     c50:	8f ef       	ldi	r24, 0xFF	; 255
     c52:	01 c0       	rjmp	.+2      	; 0xc56 <m_usb_tx_char+0xb2>
     c54:	8f ef       	ldi	r24, 0xFF	; 255
     c56:	df 91       	pop	r29
     c58:	cf 91       	pop	r28
     c5a:	08 95       	ret

00000c5c <__vector_10>:
     c5c:	1f 92       	push	r1
     c5e:	0f 92       	push	r0
     c60:	0f b6       	in	r0, 0x3f	; 63
     c62:	0f 92       	push	r0
     c64:	11 24       	eor	r1, r1
     c66:	8f 93       	push	r24
     c68:	9f 93       	push	r25
     c6a:	ef 93       	push	r30
     c6c:	ff 93       	push	r31
     c6e:	e1 ee       	ldi	r30, 0xE1	; 225
     c70:	f0 e0       	ldi	r31, 0x00	; 0
     c72:	80 81       	ld	r24, Z
     c74:	10 82       	st	Z, r1
     c76:	83 ff       	sbrs	r24, 3
     c78:	11 c0       	rjmp	.+34     	; 0xc9c <__vector_10+0x40>
     c7a:	10 92 e9 00 	sts	0x00E9, r1
     c7e:	91 e0       	ldi	r25, 0x01	; 1
     c80:	90 93 eb 00 	sts	0x00EB, r25
     c84:	10 92 ec 00 	sts	0x00EC, r1
     c88:	92 e1       	ldi	r25, 0x12	; 18
     c8a:	90 93 ed 00 	sts	0x00ED, r25
     c8e:	98 e0       	ldi	r25, 0x08	; 8
     c90:	90 93 f0 00 	sts	0x00F0, r25
     c94:	10 92 59 01 	sts	0x0159, r1
     c98:	10 92 5a 01 	sts	0x015A, r1
     c9c:	82 ff       	sbrs	r24, 2
     c9e:	13 c0       	rjmp	.+38     	; 0xcc6 <__vector_10+0x6a>
     ca0:	80 91 59 01 	lds	r24, 0x0159
     ca4:	88 23       	and	r24, r24
     ca6:	79 f0       	breq	.+30     	; 0xcc6 <__vector_10+0x6a>
     ca8:	80 91 58 01 	lds	r24, 0x0158
     cac:	88 23       	and	r24, r24
     cae:	59 f0       	breq	.+22     	; 0xcc6 <__vector_10+0x6a>
     cb0:	81 50       	subi	r24, 0x01	; 1
     cb2:	80 93 58 01 	sts	0x0158, r24
     cb6:	81 11       	cpse	r24, r1
     cb8:	06 c0       	rjmp	.+12     	; 0xcc6 <__vector_10+0x6a>
     cba:	84 e0       	ldi	r24, 0x04	; 4
     cbc:	80 93 e9 00 	sts	0x00E9, r24
     cc0:	8a e3       	ldi	r24, 0x3A	; 58
     cc2:	80 93 e8 00 	sts	0x00E8, r24
     cc6:	ff 91       	pop	r31
     cc8:	ef 91       	pop	r30
     cca:	9f 91       	pop	r25
     ccc:	8f 91       	pop	r24
     cce:	0f 90       	pop	r0
     cd0:	0f be       	out	0x3f, r0	; 63
     cd2:	0f 90       	pop	r0
     cd4:	1f 90       	pop	r1
     cd6:	18 95       	reti

00000cd8 <__vector_11>:
     cd8:	1f 92       	push	r1
     cda:	0f 92       	push	r0
     cdc:	0f b6       	in	r0, 0x3f	; 63
     cde:	0f 92       	push	r0
     ce0:	11 24       	eor	r1, r1
     ce2:	0f 93       	push	r16
     ce4:	1f 93       	push	r17
     ce6:	2f 93       	push	r18
     ce8:	3f 93       	push	r19
     cea:	4f 93       	push	r20
     cec:	5f 93       	push	r21
     cee:	6f 93       	push	r22
     cf0:	7f 93       	push	r23
     cf2:	8f 93       	push	r24
     cf4:	9f 93       	push	r25
     cf6:	af 93       	push	r26
     cf8:	bf 93       	push	r27
     cfa:	cf 93       	push	r28
     cfc:	df 93       	push	r29
     cfe:	ef 93       	push	r30
     d00:	ff 93       	push	r31
     d02:	10 92 e9 00 	sts	0x00E9, r1
     d06:	80 91 e8 00 	lds	r24, 0x00E8
     d0a:	83 ff       	sbrs	r24, 3
     d0c:	51 c1       	rjmp	.+674    	; 0xfb0 <__vector_11+0x2d8>
     d0e:	e1 ef       	ldi	r30, 0xF1	; 241
     d10:	f0 e0       	ldi	r31, 0x00	; 0
     d12:	70 81       	ld	r23, Z
     d14:	40 81       	ld	r20, Z
     d16:	20 81       	ld	r18, Z
     d18:	30 81       	ld	r19, Z
     d1a:	93 2f       	mov	r25, r19
     d1c:	80 e0       	ldi	r24, 0x00	; 0
     d1e:	dc 01       	movw	r26, r24
     d20:	a2 2b       	or	r26, r18
     d22:	9d 01       	movw	r18, r26
     d24:	50 81       	ld	r21, Z
     d26:	60 81       	ld	r22, Z
     d28:	96 2f       	mov	r25, r22
     d2a:	80 e0       	ldi	r24, 0x00	; 0
     d2c:	85 2b       	or	r24, r21
     d2e:	a0 81       	ld	r26, Z
     d30:	b0 81       	ld	r27, Z
     d32:	52 ef       	ldi	r21, 0xF2	; 242
     d34:	50 93 e8 00 	sts	0x00E8, r21
     d38:	46 30       	cpi	r20, 0x06	; 6
     d3a:	09 f0       	breq	.+2      	; 0xd3e <__vector_11+0x66>
     d3c:	5c c0       	rjmp	.+184    	; 0xdf6 <__vector_11+0x11e>
     d3e:	04 c0       	rjmp	.+8      	; 0xd48 <__vector_11+0x70>
     d40:	81 e2       	ldi	r24, 0x21	; 33
     d42:	80 93 eb 00 	sts	0x00EB, r24
     d46:	3b c1       	rjmp	.+630    	; 0xfbe <__vector_11+0x2e6>
     d48:	c6 e0       	ldi	r28, 0x06	; 6
     d4a:	4d e2       	ldi	r20, 0x2D	; 45
     d4c:	51 e0       	ldi	r21, 0x01	; 1
     d4e:	fa 01       	movw	r30, r20
     d50:	65 91       	lpm	r22, Z+
     d52:	74 91       	lpm	r23, Z
     d54:	26 17       	cp	r18, r22
     d56:	37 07       	cpc	r19, r23
     d58:	19 f0       	breq	.+6      	; 0xd60 <__vector_11+0x88>
     d5a:	49 5f       	subi	r20, 0xF9	; 249
     d5c:	5f 4f       	sbci	r21, 0xFF	; 255
     d5e:	20 c0       	rjmp	.+64     	; 0xda0 <__vector_11+0xc8>
     d60:	fa 01       	movw	r30, r20
     d62:	32 96       	adiw	r30, 0x02	; 2
     d64:	65 91       	lpm	r22, Z+
     d66:	74 91       	lpm	r23, Z
     d68:	86 17       	cp	r24, r22
     d6a:	97 07       	cpc	r25, r23
     d6c:	19 f0       	breq	.+6      	; 0xd74 <__vector_11+0x9c>
     d6e:	49 5f       	subi	r20, 0xF9	; 249
     d70:	5f 4f       	sbci	r21, 0xFF	; 255
     d72:	16 c0       	rjmp	.+44     	; 0xda0 <__vector_11+0xc8>
     d74:	fa 01       	movw	r30, r20
     d76:	34 96       	adiw	r30, 0x04	; 4
     d78:	85 91       	lpm	r24, Z+
     d7a:	94 91       	lpm	r25, Z
     d7c:	28 2f       	mov	r18, r24
     d7e:	39 2f       	mov	r19, r25
     d80:	fa 01       	movw	r30, r20
     d82:	36 96       	adiw	r30, 0x06	; 6
     d84:	44 91       	lpm	r20, Z
     d86:	9b 2f       	mov	r25, r27
     d88:	80 e0       	ldi	r24, 0x00	; 0
     d8a:	8a 2b       	or	r24, r26
     d8c:	8f 3f       	cpi	r24, 0xFF	; 255
     d8e:	91 05       	cpc	r25, r1
     d90:	19 f0       	breq	.+6      	; 0xd98 <__vector_11+0xc0>
     d92:	10 f0       	brcs	.+4      	; 0xd98 <__vector_11+0xc0>
     d94:	8f ef       	ldi	r24, 0xFF	; 255
     d96:	90 e0       	ldi	r25, 0x00	; 0
     d98:	84 17       	cp	r24, r20
     d9a:	28 f4       	brcc	.+10     	; 0xda6 <__vector_11+0xce>
     d9c:	48 2f       	mov	r20, r24
     d9e:	03 c0       	rjmp	.+6      	; 0xda6 <__vector_11+0xce>
     da0:	c1 50       	subi	r28, 0x01	; 1
     da2:	a9 f6       	brne	.-86     	; 0xd4e <__vector_11+0x76>
     da4:	cd cf       	rjmp	.-102    	; 0xd40 <__vector_11+0x68>
     da6:	c8 ee       	ldi	r28, 0xE8	; 232
     da8:	d0 e0       	ldi	r29, 0x00	; 0
     daa:	7e ef       	ldi	r23, 0xFE	; 254
     dac:	a1 ef       	ldi	r26, 0xF1	; 241
     dae:	b0 e0       	ldi	r27, 0x00	; 0
     db0:	10 e1       	ldi	r17, 0x10	; 16
     db2:	88 81       	ld	r24, Y
     db4:	98 2f       	mov	r25, r24
     db6:	95 70       	andi	r25, 0x05	; 5
     db8:	e1 f3       	breq	.-8      	; 0xdb2 <__vector_11+0xda>
     dba:	82 fd       	sbrc	r24, 2
     dbc:	00 c1       	rjmp	.+512    	; 0xfbe <__vector_11+0x2e6>
     dbe:	64 2f       	mov	r22, r20
     dc0:	41 31       	cpi	r20, 0x11	; 17
     dc2:	08 f0       	brcs	.+2      	; 0xdc6 <__vector_11+0xee>
     dc4:	61 2f       	mov	r22, r17
     dc6:	66 23       	and	r22, r22
     dc8:	09 f4       	brne	.+2      	; 0xdcc <__vector_11+0xf4>
     dca:	f6 c0       	rjmp	.+492    	; 0xfb8 <__vector_11+0x2e0>
     dcc:	c9 01       	movw	r24, r18
     dce:	56 2f       	mov	r21, r22
     dd0:	fc 01       	movw	r30, r24
     dd2:	01 96       	adiw	r24, 0x01	; 1
     dd4:	e4 91       	lpm	r30, Z
     dd6:	ec 93       	st	X, r30
     dd8:	51 50       	subi	r21, 0x01	; 1
     dda:	d1 f7       	brne	.-12     	; 0xdd0 <__vector_11+0xf8>
     ddc:	86 2f       	mov	r24, r22
     dde:	81 50       	subi	r24, 0x01	; 1
     de0:	90 e0       	ldi	r25, 0x00	; 0
     de2:	01 96       	adiw	r24, 0x01	; 1
     de4:	28 0f       	add	r18, r24
     de6:	39 1f       	adc	r19, r25
     de8:	46 1b       	sub	r20, r22
     dea:	78 83       	st	Y, r23
     dec:	41 11       	cpse	r20, r1
     dee:	e1 cf       	rjmp	.-62     	; 0xdb2 <__vector_11+0xda>
     df0:	60 31       	cpi	r22, 0x10	; 16
     df2:	f9 f2       	breq	.-66     	; 0xdb2 <__vector_11+0xda>
     df4:	e4 c0       	rjmp	.+456    	; 0xfbe <__vector_11+0x2e6>
     df6:	45 30       	cpi	r20, 0x05	; 5
     df8:	61 f4       	brne	.+24     	; 0xe12 <__vector_11+0x13a>
     dfa:	8e ef       	ldi	r24, 0xFE	; 254
     dfc:	80 93 e8 00 	sts	0x00E8, r24
     e00:	e8 ee       	ldi	r30, 0xE8	; 232
     e02:	f0 e0       	ldi	r31, 0x00	; 0
     e04:	80 81       	ld	r24, Z
     e06:	80 ff       	sbrs	r24, 0
     e08:	fd cf       	rjmp	.-6      	; 0xe04 <__vector_11+0x12c>
     e0a:	20 68       	ori	r18, 0x80	; 128
     e0c:	20 93 e3 00 	sts	0x00E3, r18
     e10:	d6 c0       	rjmp	.+428    	; 0xfbe <__vector_11+0x2e6>
     e12:	49 30       	cpi	r20, 0x09	; 9
     e14:	a1 f5       	brne	.+104    	; 0xe7e <__vector_11+0x1a6>
     e16:	71 11       	cpse	r23, r1
     e18:	5b c0       	rjmp	.+182    	; 0xed0 <__vector_11+0x1f8>
     e1a:	20 93 59 01 	sts	0x0159, r18
     e1e:	10 92 5a 01 	sts	0x015A, r1
     e22:	10 92 58 01 	sts	0x0158, r1
     e26:	8e ef       	ldi	r24, 0xFE	; 254
     e28:	80 93 e8 00 	sts	0x00E8, r24
     e2c:	11 e0       	ldi	r17, 0x01	; 1
     e2e:	87 e5       	ldi	r24, 0x57	; 87
     e30:	91 e0       	ldi	r25, 0x01	; 1
     e32:	c9 ee       	ldi	r28, 0xE9	; 233
     e34:	d0 e0       	ldi	r29, 0x00	; 0
     e36:	ab ee       	ldi	r26, 0xEB	; 235
     e38:	b0 e0       	ldi	r27, 0x00	; 0
     e3a:	6c ee       	ldi	r22, 0xEC	; 236
     e3c:	70 e0       	ldi	r23, 0x00	; 0
     e3e:	4d ee       	ldi	r20, 0xED	; 237
     e40:	50 e0       	ldi	r21, 0x00	; 0
     e42:	18 83       	st	Y, r17
     e44:	9c 01       	movw	r18, r24
     e46:	2f 5f       	subi	r18, 0xFF	; 255
     e48:	3f 4f       	sbci	r19, 0xFF	; 255
     e4a:	fc 01       	movw	r30, r24
     e4c:	04 91       	lpm	r16, Z
     e4e:	0c 93       	st	X, r16
     e50:	00 23       	and	r16, r16
     e52:	59 f0       	breq	.+22     	; 0xe6a <__vector_11+0x192>
     e54:	f9 01       	movw	r30, r18
     e56:	24 91       	lpm	r18, Z
     e58:	fb 01       	movw	r30, r22
     e5a:	20 83       	st	Z, r18
     e5c:	fc 01       	movw	r30, r24
     e5e:	32 96       	adiw	r30, 0x02	; 2
     e60:	03 96       	adiw	r24, 0x03	; 3
     e62:	24 91       	lpm	r18, Z
     e64:	fa 01       	movw	r30, r20
     e66:	20 83       	st	Z, r18
     e68:	01 c0       	rjmp	.+2      	; 0xe6c <__vector_11+0x194>
     e6a:	c9 01       	movw	r24, r18
     e6c:	1f 5f       	subi	r17, 0xFF	; 255
     e6e:	15 30       	cpi	r17, 0x05	; 5
     e70:	41 f7       	brne	.-48     	; 0xe42 <__vector_11+0x16a>
     e72:	ea ee       	ldi	r30, 0xEA	; 234
     e74:	f0 e0       	ldi	r31, 0x00	; 0
     e76:	8e e1       	ldi	r24, 0x1E	; 30
     e78:	80 83       	st	Z, r24
     e7a:	10 82       	st	Z, r1
     e7c:	a0 c0       	rjmp	.+320    	; 0xfbe <__vector_11+0x2e6>
     e7e:	48 30       	cpi	r20, 0x08	; 8
     e80:	81 f4       	brne	.+32     	; 0xea2 <__vector_11+0x1ca>
     e82:	70 38       	cpi	r23, 0x80	; 128
     e84:	09 f0       	breq	.+2      	; 0xe88 <__vector_11+0x1b0>
     e86:	3f c0       	rjmp	.+126    	; 0xf06 <__vector_11+0x22e>
     e88:	e8 ee       	ldi	r30, 0xE8	; 232
     e8a:	f0 e0       	ldi	r31, 0x00	; 0
     e8c:	80 81       	ld	r24, Z
     e8e:	80 ff       	sbrs	r24, 0
     e90:	fd cf       	rjmp	.-6      	; 0xe8c <__vector_11+0x1b4>
     e92:	80 91 59 01 	lds	r24, 0x0159
     e96:	80 93 f1 00 	sts	0x00F1, r24
     e9a:	8e ef       	ldi	r24, 0xFE	; 254
     e9c:	80 93 e8 00 	sts	0x00E8, r24
     ea0:	8e c0       	rjmp	.+284    	; 0xfbe <__vector_11+0x2e6>
     ea2:	41 32       	cpi	r20, 0x21	; 33
     ea4:	a9 f4       	brne	.+42     	; 0xed0 <__vector_11+0x1f8>
     ea6:	71 3a       	cpi	r23, 0xA1	; 161
     ea8:	f1 f5       	brne	.+124    	; 0xf26 <__vector_11+0x24e>
     eaa:	e8 ee       	ldi	r30, 0xE8	; 232
     eac:	f0 e0       	ldi	r31, 0x00	; 0
     eae:	80 81       	ld	r24, Z
     eb0:	80 ff       	sbrs	r24, 0
     eb2:	fd cf       	rjmp	.-6      	; 0xeae <__vector_11+0x1d6>
     eb4:	ec e0       	ldi	r30, 0x0C	; 12
     eb6:	f1 e0       	ldi	r31, 0x01	; 1
     eb8:	a1 ef       	ldi	r26, 0xF1	; 241
     eba:	b0 e0       	ldi	r27, 0x00	; 0
     ebc:	81 91       	ld	r24, Z+
     ebe:	8c 93       	st	X, r24
     ec0:	41 e0       	ldi	r20, 0x01	; 1
     ec2:	e3 31       	cpi	r30, 0x13	; 19
     ec4:	f4 07       	cpc	r31, r20
     ec6:	d1 f7       	brne	.-12     	; 0xebc <__vector_11+0x1e4>
     ec8:	8e ef       	ldi	r24, 0xFE	; 254
     eca:	80 93 e8 00 	sts	0x00E8, r24
     ece:	77 c0       	rjmp	.+238    	; 0xfbe <__vector_11+0x2e6>
     ed0:	40 32       	cpi	r20, 0x20	; 32
     ed2:	c9 f4       	brne	.+50     	; 0xf06 <__vector_11+0x22e>
     ed4:	71 32       	cpi	r23, 0x21	; 33
     ed6:	09 f0       	breq	.+2      	; 0xeda <__vector_11+0x202>
     ed8:	6b c0       	rjmp	.+214    	; 0xfb0 <__vector_11+0x2d8>
     eda:	e8 ee       	ldi	r30, 0xE8	; 232
     edc:	f0 e0       	ldi	r31, 0x00	; 0
     ede:	80 81       	ld	r24, Z
     ee0:	82 ff       	sbrs	r24, 2
     ee2:	fd cf       	rjmp	.-6      	; 0xede <__vector_11+0x206>
     ee4:	ec e0       	ldi	r30, 0x0C	; 12
     ee6:	f1 e0       	ldi	r31, 0x01	; 1
     ee8:	a1 ef       	ldi	r26, 0xF1	; 241
     eea:	b0 e0       	ldi	r27, 0x00	; 0
     eec:	8c 91       	ld	r24, X
     eee:	81 93       	st	Z+, r24
     ef0:	51 e0       	ldi	r21, 0x01	; 1
     ef2:	e3 31       	cpi	r30, 0x13	; 19
     ef4:	f5 07       	cpc	r31, r21
     ef6:	d1 f7       	brne	.-12     	; 0xeec <__vector_11+0x214>
     ef8:	e8 ee       	ldi	r30, 0xE8	; 232
     efa:	f0 e0       	ldi	r31, 0x00	; 0
     efc:	8b ef       	ldi	r24, 0xFB	; 251
     efe:	80 83       	st	Z, r24
     f00:	8e ef       	ldi	r24, 0xFE	; 254
     f02:	80 83       	st	Z, r24
     f04:	5c c0       	rjmp	.+184    	; 0xfbe <__vector_11+0x2e6>
     f06:	42 32       	cpi	r20, 0x22	; 34
     f08:	71 f4       	brne	.+28     	; 0xf26 <__vector_11+0x24e>
     f0a:	71 32       	cpi	r23, 0x21	; 33
     f0c:	09 f0       	breq	.+2      	; 0xf10 <__vector_11+0x238>
     f0e:	50 c0       	rjmp	.+160    	; 0xfb0 <__vector_11+0x2d8>
     f10:	20 93 5a 01 	sts	0x015A, r18
     f14:	e8 ee       	ldi	r30, 0xE8	; 232
     f16:	f0 e0       	ldi	r31, 0x00	; 0
     f18:	80 81       	ld	r24, Z
     f1a:	80 ff       	sbrs	r24, 0
     f1c:	fd cf       	rjmp	.-6      	; 0xf18 <__vector_11+0x240>
     f1e:	8e ef       	ldi	r24, 0xFE	; 254
     f20:	80 93 e8 00 	sts	0x00E8, r24
     f24:	4c c0       	rjmp	.+152    	; 0xfbe <__vector_11+0x2e6>
     f26:	41 11       	cpse	r20, r1
     f28:	1a c0       	rjmp	.+52     	; 0xf5e <__vector_11+0x286>
     f2a:	e8 ee       	ldi	r30, 0xE8	; 232
     f2c:	f0 e0       	ldi	r31, 0x00	; 0
     f2e:	20 81       	ld	r18, Z
     f30:	20 ff       	sbrs	r18, 0
     f32:	fd cf       	rjmp	.-6      	; 0xf2e <__vector_11+0x256>
     f34:	72 38       	cpi	r23, 0x82	; 130
     f36:	51 f4       	brne	.+20     	; 0xf4c <__vector_11+0x274>
     f38:	e9 ee       	ldi	r30, 0xE9	; 233
     f3a:	f0 e0       	ldi	r31, 0x00	; 0
     f3c:	80 83       	st	Z, r24
     f3e:	80 91 eb 00 	lds	r24, 0x00EB
     f42:	85 fb       	bst	r24, 5
     f44:	88 27       	eor	r24, r24
     f46:	80 f9       	bld	r24, 0
     f48:	10 82       	st	Z, r1
     f4a:	01 c0       	rjmp	.+2      	; 0xf4e <__vector_11+0x276>
     f4c:	80 e0       	ldi	r24, 0x00	; 0
     f4e:	e1 ef       	ldi	r30, 0xF1	; 241
     f50:	f0 e0       	ldi	r31, 0x00	; 0
     f52:	80 83       	st	Z, r24
     f54:	10 82       	st	Z, r1
     f56:	8e ef       	ldi	r24, 0xFE	; 254
     f58:	80 93 e8 00 	sts	0x00E8, r24
     f5c:	30 c0       	rjmp	.+96     	; 0xfbe <__vector_11+0x2e6>
     f5e:	41 30       	cpi	r20, 0x01	; 1
     f60:	11 f0       	breq	.+4      	; 0xf66 <__vector_11+0x28e>
     f62:	43 30       	cpi	r20, 0x03	; 3
     f64:	29 f5       	brne	.+74     	; 0xfb0 <__vector_11+0x2d8>
     f66:	72 30       	cpi	r23, 0x02	; 2
     f68:	19 f5       	brne	.+70     	; 0xfb0 <__vector_11+0x2d8>
     f6a:	23 2b       	or	r18, r19
     f6c:	09 f5       	brne	.+66     	; 0xfb0 <__vector_11+0x2d8>
     f6e:	8f 77       	andi	r24, 0x7F	; 127
     f70:	99 27       	eor	r25, r25
     f72:	38 2f       	mov	r19, r24
     f74:	31 50       	subi	r19, 0x01	; 1
     f76:	34 30       	cpi	r19, 0x04	; 4
     f78:	d8 f4       	brcc	.+54     	; 0xfb0 <__vector_11+0x2d8>
     f7a:	3e ef       	ldi	r19, 0xFE	; 254
     f7c:	30 93 e8 00 	sts	0x00E8, r19
     f80:	80 93 e9 00 	sts	0x00E9, r24
     f84:	43 30       	cpi	r20, 0x03	; 3
     f86:	21 f4       	brne	.+8      	; 0xf90 <__vector_11+0x2b8>
     f88:	81 e2       	ldi	r24, 0x21	; 33
     f8a:	80 93 eb 00 	sts	0x00EB, r24
     f8e:	17 c0       	rjmp	.+46     	; 0xfbe <__vector_11+0x2e6>
     f90:	99 e1       	ldi	r25, 0x19	; 25
     f92:	90 93 eb 00 	sts	0x00EB, r25
     f96:	21 e0       	ldi	r18, 0x01	; 1
     f98:	30 e0       	ldi	r19, 0x00	; 0
     f9a:	d9 01       	movw	r26, r18
     f9c:	02 c0       	rjmp	.+4      	; 0xfa2 <__vector_11+0x2ca>
     f9e:	aa 0f       	add	r26, r26
     fa0:	bb 1f       	adc	r27, r27
     fa2:	8a 95       	dec	r24
     fa4:	e2 f7       	brpl	.-8      	; 0xf9e <__vector_11+0x2c6>
     fa6:	ea ee       	ldi	r30, 0xEA	; 234
     fa8:	f0 e0       	ldi	r31, 0x00	; 0
     faa:	a0 83       	st	Z, r26
     fac:	10 82       	st	Z, r1
     fae:	07 c0       	rjmp	.+14     	; 0xfbe <__vector_11+0x2e6>
     fb0:	81 e2       	ldi	r24, 0x21	; 33
     fb2:	80 93 eb 00 	sts	0x00EB, r24
     fb6:	03 c0       	rjmp	.+6      	; 0xfbe <__vector_11+0x2e6>
     fb8:	78 83       	st	Y, r23
     fba:	41 11       	cpse	r20, r1
     fbc:	fa ce       	rjmp	.-524    	; 0xdb2 <__vector_11+0xda>
     fbe:	ff 91       	pop	r31
     fc0:	ef 91       	pop	r30
     fc2:	df 91       	pop	r29
     fc4:	cf 91       	pop	r28
     fc6:	bf 91       	pop	r27
     fc8:	af 91       	pop	r26
     fca:	9f 91       	pop	r25
     fcc:	8f 91       	pop	r24
     fce:	7f 91       	pop	r23
     fd0:	6f 91       	pop	r22
     fd2:	5f 91       	pop	r21
     fd4:	4f 91       	pop	r20
     fd6:	3f 91       	pop	r19
     fd8:	2f 91       	pop	r18
     fda:	1f 91       	pop	r17
     fdc:	0f 91       	pop	r16
     fde:	0f 90       	pop	r0
     fe0:	0f be       	out	0x3f, r0	; 63
     fe2:	0f 90       	pop	r0
     fe4:	1f 90       	pop	r1
     fe6:	18 95       	reti

00000fe8 <print_P>:
     fe8:	1f 93       	push	r17
     fea:	cf 93       	push	r28
     fec:	df 93       	push	r29
     fee:	ec 01       	movw	r28, r24
     ff0:	21 96       	adiw	r28, 0x01	; 1
     ff2:	fc 01       	movw	r30, r24
     ff4:	14 91       	lpm	r17, Z
     ff6:	11 23       	and	r17, r17
     ff8:	69 f0       	breq	.+26     	; 0x1014 <print_P+0x2c>
     ffa:	1a 30       	cpi	r17, 0x0A	; 10
     ffc:	19 f4       	brne	.+6      	; 0x1004 <print_P+0x1c>
     ffe:	8d e0       	ldi	r24, 0x0D	; 13
    1000:	0e 94 d2 05 	call	0xba4	; 0xba4 <m_usb_tx_char>
    1004:	81 2f       	mov	r24, r17
    1006:	0e 94 d2 05 	call	0xba4	; 0xba4 <m_usb_tx_char>
    100a:	fe 01       	movw	r30, r28
    100c:	21 96       	adiw	r28, 0x01	; 1
    100e:	14 91       	lpm	r17, Z
    1010:	11 11       	cpse	r17, r1
    1012:	f3 cf       	rjmp	.-26     	; 0xffa <print_P+0x12>
    1014:	df 91       	pop	r29
    1016:	cf 91       	pop	r28
    1018:	1f 91       	pop	r17
    101a:	08 95       	ret

0000101c <m_usb_tx_int>:
    101c:	ef 92       	push	r14
    101e:	ff 92       	push	r15
    1020:	0f 93       	push	r16
    1022:	1f 93       	push	r17
    1024:	cf 93       	push	r28
    1026:	df 93       	push	r29
    1028:	cd b7       	in	r28, 0x3d	; 61
    102a:	de b7       	in	r29, 0x3e	; 62
    102c:	27 97       	sbiw	r28, 0x07	; 7
    102e:	0f b6       	in	r0, 0x3f	; 63
    1030:	f8 94       	cli
    1032:	de bf       	out	0x3e, r29	; 62
    1034:	0f be       	out	0x3f, r0	; 63
    1036:	cd bf       	out	0x3d, r28	; 61
    1038:	8e 01       	movw	r16, r28
    103a:	0f 5f       	subi	r16, 0xFF	; 255
    103c:	1f 4f       	sbci	r17, 0xFF	; 255
    103e:	27 e0       	ldi	r18, 0x07	; 7
    1040:	f8 01       	movw	r30, r16
    1042:	11 92       	st	Z+, r1
    1044:	2a 95       	dec	r18
    1046:	e9 f7       	brne	.-6      	; 0x1042 <m_usb_tx_int+0x26>
    1048:	4a e0       	ldi	r20, 0x0A	; 10
    104a:	50 e0       	ldi	r21, 0x00	; 0
    104c:	b8 01       	movw	r22, r16
    104e:	0e 94 86 0d 	call	0x1b0c	; 0x1b0c <itoa>
    1052:	7e 01       	movw	r14, r28
    1054:	f8 e0       	ldi	r31, 0x08	; 8
    1056:	ef 0e       	add	r14, r31
    1058:	f1 1c       	adc	r15, r1
    105a:	f8 01       	movw	r30, r16
    105c:	81 91       	ld	r24, Z+
    105e:	8f 01       	movw	r16, r30
    1060:	81 11       	cpse	r24, r1
    1062:	0e 94 d2 05 	call	0xba4	; 0xba4 <m_usb_tx_char>
    1066:	0e 15       	cp	r16, r14
    1068:	1f 05       	cpc	r17, r15
    106a:	b9 f7       	brne	.-18     	; 0x105a <m_usb_tx_int+0x3e>
    106c:	27 96       	adiw	r28, 0x07	; 7
    106e:	0f b6       	in	r0, 0x3f	; 63
    1070:	f8 94       	cli
    1072:	de bf       	out	0x3e, r29	; 62
    1074:	0f be       	out	0x3f, r0	; 63
    1076:	cd bf       	out	0x3d, r28	; 61
    1078:	df 91       	pop	r29
    107a:	cf 91       	pop	r28
    107c:	1f 91       	pop	r17
    107e:	0f 91       	pop	r16
    1080:	ff 90       	pop	r15
    1082:	ef 90       	pop	r14
    1084:	08 95       	ret

00001086 <twi_wait>:
    1086:	20 e0       	ldi	r18, 0x00	; 0
    1088:	30 e0       	ldi	r19, 0x00	; 0
    108a:	ec eb       	ldi	r30, 0xBC	; 188
    108c:	f0 e0       	ldi	r31, 0x00	; 0
    108e:	80 81       	ld	r24, Z
    1090:	88 23       	and	r24, r24
    1092:	34 f0       	brlt	.+12     	; 0x10a0 <twi_wait+0x1a>
    1094:	2f 5f       	subi	r18, 0xFF	; 255
    1096:	3f 4f       	sbci	r19, 0xFF	; 255
    1098:	29 3e       	cpi	r18, 0xE9	; 233
    109a:	83 e0       	ldi	r24, 0x03	; 3
    109c:	38 07       	cpc	r19, r24
    109e:	b9 f7       	brne	.-18     	; 0x108e <twi_wait+0x8>
    10a0:	81 e0       	ldi	r24, 0x01	; 1
    10a2:	28 3e       	cpi	r18, 0xE8	; 232
    10a4:	33 40       	sbci	r19, 0x03	; 3
    10a6:	09 f4       	brne	.+2      	; 0x10aa <twi_wait+0x24>
    10a8:	80 e0       	ldi	r24, 0x00	; 0
    10aa:	08 95       	ret

000010ac <send_byte>:
    10ac:	80 93 bb 00 	sts	0x00BB, r24
    10b0:	84 e8       	ldi	r24, 0x84	; 132
    10b2:	80 93 bc 00 	sts	0x00BC, r24
    10b6:	0e 94 43 08 	call	0x1086	; 0x1086 <twi_wait>
    10ba:	88 23       	and	r24, r24
    10bc:	21 f0       	breq	.+8      	; 0x10c6 <send_byte+0x1a>
    10be:	80 91 b9 00 	lds	r24, 0x00B9
    10c2:	88 7f       	andi	r24, 0xF8	; 248
    10c4:	08 95       	ret
    10c6:	80 e0       	ldi	r24, 0x00	; 0
    10c8:	08 95       	ret

000010ca <start_read>:
    10ca:	cf 93       	push	r28
    10cc:	c8 2f       	mov	r28, r24
    10ce:	94 ea       	ldi	r25, 0xA4	; 164
    10d0:	90 93 bc 00 	sts	0x00BC, r25
    10d4:	0e 94 43 08 	call	0x1086	; 0x1086 <twi_wait>
    10d8:	88 23       	and	r24, r24
    10da:	61 f0       	breq	.+24     	; 0x10f4 <start_read+0x2a>
    10dc:	8c 2f       	mov	r24, r28
    10de:	88 0f       	add	r24, r24
    10e0:	8f 5f       	subi	r24, 0xFF	; 255
    10e2:	0e 94 56 08 	call	0x10ac	; 0x10ac <send_byte>
    10e6:	88 34       	cpi	r24, 0x48	; 72
    10e8:	39 f4       	brne	.+14     	; 0x10f8 <start_read+0x2e>
    10ea:	84 e9       	ldi	r24, 0x94	; 148
    10ec:	80 93 bc 00 	sts	0x00BC, r24
    10f0:	80 e0       	ldi	r24, 0x00	; 0
    10f2:	03 c0       	rjmp	.+6      	; 0x10fa <start_read+0x30>
    10f4:	80 e0       	ldi	r24, 0x00	; 0
    10f6:	01 c0       	rjmp	.+2      	; 0x10fa <start_read+0x30>
    10f8:	81 e0       	ldi	r24, 0x01	; 1
    10fa:	cf 91       	pop	r28
    10fc:	08 95       	ret

000010fe <start_write>:
    10fe:	cf 93       	push	r28
    1100:	c8 2f       	mov	r28, r24
    1102:	94 ea       	ldi	r25, 0xA4	; 164
    1104:	90 93 bc 00 	sts	0x00BC, r25
    1108:	0e 94 43 08 	call	0x1086	; 0x1086 <twi_wait>
    110c:	88 23       	and	r24, r24
    110e:	59 f0       	breq	.+22     	; 0x1126 <start_write+0x28>
    1110:	8c 2f       	mov	r24, r28
    1112:	88 0f       	add	r24, r24
    1114:	0e 94 56 08 	call	0x10ac	; 0x10ac <send_byte>
    1118:	80 32       	cpi	r24, 0x20	; 32
    111a:	39 f4       	brne	.+14     	; 0x112a <start_write+0x2c>
    111c:	84 e9       	ldi	r24, 0x94	; 148
    111e:	80 93 bc 00 	sts	0x00BC, r24
    1122:	80 e0       	ldi	r24, 0x00	; 0
    1124:	03 c0       	rjmp	.+6      	; 0x112c <start_write+0x2e>
    1126:	80 e0       	ldi	r24, 0x00	; 0
    1128:	01 c0       	rjmp	.+2      	; 0x112c <start_write+0x2e>
    112a:	81 e0       	ldi	r24, 0x01	; 1
    112c:	cf 91       	pop	r28
    112e:	08 95       	ret

00001130 <end>:
    1130:	84 e9       	ldi	r24, 0x94	; 148
    1132:	80 93 bc 00 	sts	0x00BC, r24
    1136:	08 95       	ret

00001138 <m_wii_read>:
    1138:	ef 92       	push	r14
    113a:	ff 92       	push	r15
    113c:	0f 93       	push	r16
    113e:	1f 93       	push	r17
    1140:	cf 93       	push	r28
    1142:	df 93       	push	r29
    1144:	cd b7       	in	r28, 0x3d	; 61
    1146:	de b7       	in	r29, 0x3e	; 62
    1148:	60 97       	sbiw	r28, 0x10	; 16
    114a:	0f b6       	in	r0, 0x3f	; 63
    114c:	f8 94       	cli
    114e:	de bf       	out	0x3e, r29	; 62
    1150:	0f be       	out	0x3f, r0	; 63
    1152:	cd bf       	out	0x3d, r28	; 61
    1154:	e8 2e       	mov	r14, r24
    1156:	f9 2e       	mov	r15, r25
    1158:	fe 01       	movw	r30, r28
    115a:	31 96       	adiw	r30, 0x01	; 1
    115c:	80 e1       	ldi	r24, 0x10	; 16
    115e:	df 01       	movw	r26, r30
    1160:	1d 92       	st	X+, r1
    1162:	8a 95       	dec	r24
    1164:	e9 f7       	brne	.-6      	; 0x1160 <m_wii_read+0x28>
    1166:	88 e5       	ldi	r24, 0x58	; 88
    1168:	0e 94 7f 08 	call	0x10fe	; 0x10fe <start_write>
    116c:	88 23       	and	r24, r24
    116e:	09 f4       	brne	.+2      	; 0x1172 <m_wii_read+0x3a>
    1170:	66 c0       	rjmp	.+204    	; 0x123e <m_wii_read+0x106>
    1172:	86 e3       	ldi	r24, 0x36	; 54
    1174:	0e 94 56 08 	call	0x10ac	; 0x10ac <send_byte>
    1178:	88 23       	and	r24, r24
    117a:	09 f4       	brne	.+2      	; 0x117e <m_wii_read+0x46>
    117c:	62 c0       	rjmp	.+196    	; 0x1242 <m_wii_read+0x10a>
    117e:	0e 94 98 08 	call	0x1130	; 0x1130 <end>
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

    1182:	b8 e0       	ldi	r27, 0x08	; 8
    1184:	ba 95       	dec	r27
    1186:	f1 f7       	brne	.-4      	; 0x1184 <m_wii_read+0x4c>
    1188:	00 00       	nop
    118a:	88 e5       	ldi	r24, 0x58	; 88
    118c:	0e 94 65 08 	call	0x10ca	; 0x10ca <start_read>
    1190:	88 23       	and	r24, r24
    1192:	09 f4       	brne	.+2      	; 0x1196 <m_wii_read+0x5e>
    1194:	58 c0       	rjmp	.+176    	; 0x1246 <m_wii_read+0x10e>
    1196:	ae 01       	movw	r20, r28
    1198:	4f 5f       	subi	r20, 0xFF	; 255
    119a:	5f 4f       	sbci	r21, 0xFF	; 255
    119c:	8e 01       	movw	r16, r28
    119e:	00 5f       	subi	r16, 0xF0	; 240
    11a0:	1f 4f       	sbci	r17, 0xFF	; 255
    11a2:	ec eb       	ldi	r30, 0xBC	; 188
    11a4:	f0 e0       	ldi	r31, 0x00	; 0
    11a6:	94 ec       	ldi	r25, 0xC4	; 196
    11a8:	2b eb       	ldi	r18, 0xBB	; 187
    11aa:	30 e0       	ldi	r19, 0x00	; 0
    11ac:	90 83       	st	Z, r25
    11ae:	80 81       	ld	r24, Z
    11b0:	88 23       	and	r24, r24
    11b2:	ec f7       	brge	.-6      	; 0x11ae <m_wii_read+0x76>
    11b4:	d9 01       	movw	r26, r18
    11b6:	8c 91       	ld	r24, X
    11b8:	da 01       	movw	r26, r20
    11ba:	8d 93       	st	X+, r24
    11bc:	ad 01       	movw	r20, r26
    11be:	a0 17       	cp	r26, r16
    11c0:	b1 07       	cpc	r27, r17
    11c2:	a1 f7       	brne	.-24     	; 0x11ac <m_wii_read+0x74>
    11c4:	84 e8       	ldi	r24, 0x84	; 132
    11c6:	80 93 bc 00 	sts	0x00BC, r24
    11ca:	ec eb       	ldi	r30, 0xBC	; 188
    11cc:	f0 e0       	ldi	r31, 0x00	; 0
    11ce:	80 81       	ld	r24, Z
    11d0:	88 23       	and	r24, r24
    11d2:	ec f7       	brge	.-6      	; 0x11ce <m_wii_read+0x96>
    11d4:	80 91 bb 00 	lds	r24, 0x00BB
    11d8:	88 8b       	std	Y+16, r24	; 0x10
    11da:	0e 94 98 08 	call	0x1130	; 0x1130 <end>
    11de:	de 01       	movw	r26, r28
    11e0:	14 96       	adiw	r26, 0x04	; 4
    11e2:	6e 2d       	mov	r22, r14
    11e4:	7f 2d       	mov	r23, r15
    11e6:	4c 91       	ld	r20, X
    11e8:	24 2f       	mov	r18, r20
    11ea:	20 73       	andi	r18, 0x30	; 48
    11ec:	cd 01       	movw	r24, r26
    11ee:	02 97       	sbiw	r24, 0x02	; 2
    11f0:	fc 01       	movw	r30, r24
    11f2:	80 81       	ld	r24, Z
    11f4:	90 e0       	ldi	r25, 0x00	; 0
    11f6:	f0 e1       	ldi	r31, 0x10	; 16
    11f8:	2f 9f       	mul	r18, r31
    11fa:	80 0d       	add	r24, r0
    11fc:	91 1d       	adc	r25, r1
    11fe:	11 24       	eor	r1, r1
    1200:	fb 01       	movw	r30, r22
    1202:	91 83       	std	Z+1, r25	; 0x01
    1204:	80 83       	st	Z, r24
    1206:	84 2f       	mov	r24, r20
    1208:	80 7c       	andi	r24, 0xC0	; 192
    120a:	90 e0       	ldi	r25, 0x00	; 0
    120c:	88 0f       	add	r24, r24
    120e:	99 1f       	adc	r25, r25
    1210:	88 0f       	add	r24, r24
    1212:	99 1f       	adc	r25, r25
    1214:	9d 01       	movw	r18, r26
    1216:	21 50       	subi	r18, 0x01	; 1
    1218:	31 09       	sbc	r19, r1
    121a:	f9 01       	movw	r30, r18
    121c:	20 81       	ld	r18, Z
    121e:	82 0f       	add	r24, r18
    1220:	91 1d       	adc	r25, r1
    1222:	fb 01       	movw	r30, r22
    1224:	93 83       	std	Z+3, r25	; 0x03
    1226:	82 83       	std	Z+2, r24	; 0x02
    1228:	4f 70       	andi	r20, 0x0F	; 15
    122a:	44 83       	std	Z+4, r20	; 0x04
    122c:	15 82       	std	Z+5, r1	; 0x05
    122e:	13 96       	adiw	r26, 0x03	; 3
    1230:	6a 5f       	subi	r22, 0xFA	; 250
    1232:	7f 4f       	sbci	r23, 0xFF	; 255
    1234:	0a 17       	cp	r16, r26
    1236:	1b 07       	cpc	r17, r27
    1238:	b1 f6       	brne	.-84     	; 0x11e6 <m_wii_read+0xae>
    123a:	81 e0       	ldi	r24, 0x01	; 1
    123c:	05 c0       	rjmp	.+10     	; 0x1248 <m_wii_read+0x110>
    123e:	80 e0       	ldi	r24, 0x00	; 0
    1240:	03 c0       	rjmp	.+6      	; 0x1248 <m_wii_read+0x110>
    1242:	80 e0       	ldi	r24, 0x00	; 0
    1244:	01 c0       	rjmp	.+2      	; 0x1248 <m_wii_read+0x110>
    1246:	80 e0       	ldi	r24, 0x00	; 0
    1248:	60 96       	adiw	r28, 0x10	; 16
    124a:	0f b6       	in	r0, 0x3f	; 63
    124c:	f8 94       	cli
    124e:	de bf       	out	0x3e, r29	; 62
    1250:	0f be       	out	0x3f, r0	; 63
    1252:	cd bf       	out	0x3d, r28	; 61
    1254:	df 91       	pop	r29
    1256:	cf 91       	pop	r28
    1258:	1f 91       	pop	r17
    125a:	0f 91       	pop	r16
    125c:	ff 90       	pop	r15
    125e:	ef 90       	pop	r14
    1260:	08 95       	ret

00001262 <m_wii_open>:
    1262:	0e 94 ca 01 	call	0x394	; 0x394 <m_bus_init>
    1266:	88 e5       	ldi	r24, 0x58	; 88
    1268:	0e 94 7f 08 	call	0x10fe	; 0x10fe <start_write>
    126c:	88 23       	and	r24, r24
    126e:	09 f4       	brne	.+2      	; 0x1272 <m_wii_open+0x10>
    1270:	c7 c0       	rjmp	.+398    	; 0x1400 <m_wii_open+0x19e>
    1272:	80 e3       	ldi	r24, 0x30	; 48
    1274:	0e 94 56 08 	call	0x10ac	; 0x10ac <send_byte>
    1278:	88 23       	and	r24, r24
    127a:	09 f4       	brne	.+2      	; 0x127e <m_wii_open+0x1c>
    127c:	c3 c0       	rjmp	.+390    	; 0x1404 <m_wii_open+0x1a2>
    127e:	81 e0       	ldi	r24, 0x01	; 1
    1280:	0e 94 56 08 	call	0x10ac	; 0x10ac <send_byte>
    1284:	88 23       	and	r24, r24
    1286:	09 f4       	brne	.+2      	; 0x128a <m_wii_open+0x28>
    1288:	bf c0       	rjmp	.+382    	; 0x1408 <m_wii_open+0x1a6>
    128a:	0e 94 98 08 	call	0x1130	; 0x1130 <end>
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

    128e:	83 ec       	ldi	r24, 0xC3	; 195
    1290:	99 e0       	ldi	r25, 0x09	; 9
    1292:	01 97       	sbiw	r24, 0x01	; 1
    1294:	f1 f7       	brne	.-4      	; 0x1292 <m_wii_open+0x30>
    1296:	00 c0       	rjmp	.+0      	; 0x1298 <m_wii_open+0x36>
    1298:	00 00       	nop
    129a:	88 e5       	ldi	r24, 0x58	; 88
    129c:	0e 94 7f 08 	call	0x10fe	; 0x10fe <start_write>
    12a0:	88 23       	and	r24, r24
    12a2:	09 f4       	brne	.+2      	; 0x12a6 <m_wii_open+0x44>
    12a4:	b3 c0       	rjmp	.+358    	; 0x140c <m_wii_open+0x1aa>
    12a6:	80 e0       	ldi	r24, 0x00	; 0
    12a8:	0e 94 56 08 	call	0x10ac	; 0x10ac <send_byte>
    12ac:	88 23       	and	r24, r24
    12ae:	09 f4       	brne	.+2      	; 0x12b2 <m_wii_open+0x50>
    12b0:	af c0       	rjmp	.+350    	; 0x1410 <m_wii_open+0x1ae>
    12b2:	80 e0       	ldi	r24, 0x00	; 0
    12b4:	0e 94 56 08 	call	0x10ac	; 0x10ac <send_byte>
    12b8:	88 23       	and	r24, r24
    12ba:	09 f4       	brne	.+2      	; 0x12be <m_wii_open+0x5c>
    12bc:	ab c0       	rjmp	.+342    	; 0x1414 <m_wii_open+0x1b2>
    12be:	80 e0       	ldi	r24, 0x00	; 0
    12c0:	0e 94 56 08 	call	0x10ac	; 0x10ac <send_byte>
    12c4:	88 23       	and	r24, r24
    12c6:	09 f4       	brne	.+2      	; 0x12ca <m_wii_open+0x68>
    12c8:	a7 c0       	rjmp	.+334    	; 0x1418 <m_wii_open+0x1b6>
    12ca:	80 e0       	ldi	r24, 0x00	; 0
    12cc:	0e 94 56 08 	call	0x10ac	; 0x10ac <send_byte>
    12d0:	88 23       	and	r24, r24
    12d2:	09 f4       	brne	.+2      	; 0x12d6 <m_wii_open+0x74>
    12d4:	a3 c0       	rjmp	.+326    	; 0x141c <m_wii_open+0x1ba>
    12d6:	80 e0       	ldi	r24, 0x00	; 0
    12d8:	0e 94 56 08 	call	0x10ac	; 0x10ac <send_byte>
    12dc:	88 23       	and	r24, r24
    12de:	09 f4       	brne	.+2      	; 0x12e2 <m_wii_open+0x80>
    12e0:	9f c0       	rjmp	.+318    	; 0x1420 <m_wii_open+0x1be>
    12e2:	80 e0       	ldi	r24, 0x00	; 0
    12e4:	0e 94 56 08 	call	0x10ac	; 0x10ac <send_byte>
    12e8:	88 23       	and	r24, r24
    12ea:	09 f4       	brne	.+2      	; 0x12ee <m_wii_open+0x8c>
    12ec:	9b c0       	rjmp	.+310    	; 0x1424 <m_wii_open+0x1c2>
    12ee:	80 e0       	ldi	r24, 0x00	; 0
    12f0:	0e 94 56 08 	call	0x10ac	; 0x10ac <send_byte>
    12f4:	88 23       	and	r24, r24
    12f6:	09 f4       	brne	.+2      	; 0x12fa <m_wii_open+0x98>
    12f8:	97 c0       	rjmp	.+302    	; 0x1428 <m_wii_open+0x1c6>
    12fa:	80 e9       	ldi	r24, 0x90	; 144
    12fc:	0e 94 56 08 	call	0x10ac	; 0x10ac <send_byte>
    1300:	88 23       	and	r24, r24
    1302:	09 f4       	brne	.+2      	; 0x1306 <m_wii_open+0xa4>
    1304:	93 c0       	rjmp	.+294    	; 0x142c <m_wii_open+0x1ca>
    1306:	0e 94 98 08 	call	0x1130	; 0x1130 <end>
    130a:	83 ec       	ldi	r24, 0xC3	; 195
    130c:	99 e0       	ldi	r25, 0x09	; 9
    130e:	01 97       	sbiw	r24, 0x01	; 1
    1310:	f1 f7       	brne	.-4      	; 0x130e <m_wii_open+0xac>
    1312:	00 c0       	rjmp	.+0      	; 0x1314 <m_wii_open+0xb2>
    1314:	00 00       	nop
    1316:	88 e5       	ldi	r24, 0x58	; 88
    1318:	0e 94 7f 08 	call	0x10fe	; 0x10fe <start_write>
    131c:	88 23       	and	r24, r24
    131e:	09 f4       	brne	.+2      	; 0x1322 <m_wii_open+0xc0>
    1320:	87 c0       	rjmp	.+270    	; 0x1430 <m_wii_open+0x1ce>
    1322:	87 e0       	ldi	r24, 0x07	; 7
    1324:	0e 94 56 08 	call	0x10ac	; 0x10ac <send_byte>
    1328:	88 23       	and	r24, r24
    132a:	09 f4       	brne	.+2      	; 0x132e <m_wii_open+0xcc>
    132c:	83 c0       	rjmp	.+262    	; 0x1434 <m_wii_open+0x1d2>
    132e:	80 e0       	ldi	r24, 0x00	; 0
    1330:	0e 94 56 08 	call	0x10ac	; 0x10ac <send_byte>
    1334:	88 23       	and	r24, r24
    1336:	09 f4       	brne	.+2      	; 0x133a <m_wii_open+0xd8>
    1338:	7f c0       	rjmp	.+254    	; 0x1438 <m_wii_open+0x1d6>
    133a:	81 e4       	ldi	r24, 0x41	; 65
    133c:	0e 94 56 08 	call	0x10ac	; 0x10ac <send_byte>
    1340:	88 23       	and	r24, r24
    1342:	09 f4       	brne	.+2      	; 0x1346 <m_wii_open+0xe4>
    1344:	7b c0       	rjmp	.+246    	; 0x143c <m_wii_open+0x1da>
    1346:	0e 94 98 08 	call	0x1130	; 0x1130 <end>
    134a:	83 ec       	ldi	r24, 0xC3	; 195
    134c:	99 e0       	ldi	r25, 0x09	; 9
    134e:	01 97       	sbiw	r24, 0x01	; 1
    1350:	f1 f7       	brne	.-4      	; 0x134e <m_wii_open+0xec>
    1352:	00 c0       	rjmp	.+0      	; 0x1354 <m_wii_open+0xf2>
    1354:	00 00       	nop
    1356:	88 e5       	ldi	r24, 0x58	; 88
    1358:	0e 94 7f 08 	call	0x10fe	; 0x10fe <start_write>
    135c:	88 23       	and	r24, r24
    135e:	09 f4       	brne	.+2      	; 0x1362 <m_wii_open+0x100>
    1360:	6f c0       	rjmp	.+222    	; 0x1440 <m_wii_open+0x1de>
    1362:	8a e1       	ldi	r24, 0x1A	; 26
    1364:	0e 94 56 08 	call	0x10ac	; 0x10ac <send_byte>
    1368:	88 23       	and	r24, r24
    136a:	09 f4       	brne	.+2      	; 0x136e <m_wii_open+0x10c>
    136c:	6b c0       	rjmp	.+214    	; 0x1444 <m_wii_open+0x1e2>
    136e:	80 e4       	ldi	r24, 0x40	; 64
    1370:	0e 94 56 08 	call	0x10ac	; 0x10ac <send_byte>
    1374:	88 23       	and	r24, r24
    1376:	09 f4       	brne	.+2      	; 0x137a <m_wii_open+0x118>
    1378:	67 c0       	rjmp	.+206    	; 0x1448 <m_wii_open+0x1e6>
    137a:	80 e0       	ldi	r24, 0x00	; 0
    137c:	0e 94 56 08 	call	0x10ac	; 0x10ac <send_byte>
    1380:	88 23       	and	r24, r24
    1382:	09 f4       	brne	.+2      	; 0x1386 <m_wii_open+0x124>
    1384:	63 c0       	rjmp	.+198    	; 0x144c <m_wii_open+0x1ea>
    1386:	0e 94 98 08 	call	0x1130	; 0x1130 <end>
    138a:	83 ec       	ldi	r24, 0xC3	; 195
    138c:	99 e0       	ldi	r25, 0x09	; 9
    138e:	01 97       	sbiw	r24, 0x01	; 1
    1390:	f1 f7       	brne	.-4      	; 0x138e <m_wii_open+0x12c>
    1392:	00 c0       	rjmp	.+0      	; 0x1394 <m_wii_open+0x132>
    1394:	00 00       	nop
    1396:	88 e5       	ldi	r24, 0x58	; 88
    1398:	0e 94 7f 08 	call	0x10fe	; 0x10fe <start_write>
    139c:	88 23       	and	r24, r24
    139e:	09 f4       	brne	.+2      	; 0x13a2 <m_wii_open+0x140>
    13a0:	57 c0       	rjmp	.+174    	; 0x1450 <m_wii_open+0x1ee>
    13a2:	83 e3       	ldi	r24, 0x33	; 51
    13a4:	0e 94 56 08 	call	0x10ac	; 0x10ac <send_byte>
    13a8:	88 23       	and	r24, r24
    13aa:	09 f4       	brne	.+2      	; 0x13ae <m_wii_open+0x14c>
    13ac:	53 c0       	rjmp	.+166    	; 0x1454 <m_wii_open+0x1f2>
    13ae:	83 e0       	ldi	r24, 0x03	; 3
    13b0:	0e 94 56 08 	call	0x10ac	; 0x10ac <send_byte>
    13b4:	88 23       	and	r24, r24
    13b6:	09 f4       	brne	.+2      	; 0x13ba <m_wii_open+0x158>
    13b8:	4f c0       	rjmp	.+158    	; 0x1458 <m_wii_open+0x1f6>
    13ba:	0e 94 98 08 	call	0x1130	; 0x1130 <end>
    13be:	83 ec       	ldi	r24, 0xC3	; 195
    13c0:	99 e0       	ldi	r25, 0x09	; 9
    13c2:	01 97       	sbiw	r24, 0x01	; 1
    13c4:	f1 f7       	brne	.-4      	; 0x13c2 <m_wii_open+0x160>
    13c6:	00 c0       	rjmp	.+0      	; 0x13c8 <m_wii_open+0x166>
    13c8:	00 00       	nop
    13ca:	88 e5       	ldi	r24, 0x58	; 88
    13cc:	0e 94 7f 08 	call	0x10fe	; 0x10fe <start_write>
    13d0:	88 23       	and	r24, r24
    13d2:	09 f4       	brne	.+2      	; 0x13d6 <m_wii_open+0x174>
    13d4:	43 c0       	rjmp	.+134    	; 0x145c <m_wii_open+0x1fa>
    13d6:	80 e3       	ldi	r24, 0x30	; 48
    13d8:	0e 94 56 08 	call	0x10ac	; 0x10ac <send_byte>
    13dc:	88 23       	and	r24, r24
    13de:	09 f4       	brne	.+2      	; 0x13e2 <m_wii_open+0x180>
    13e0:	3f c0       	rjmp	.+126    	; 0x1460 <m_wii_open+0x1fe>
    13e2:	88 e0       	ldi	r24, 0x08	; 8
    13e4:	0e 94 56 08 	call	0x10ac	; 0x10ac <send_byte>
    13e8:	88 23       	and	r24, r24
    13ea:	e1 f1       	breq	.+120    	; 0x1464 <m_wii_open+0x202>
    13ec:	0e 94 98 08 	call	0x1130	; 0x1130 <end>
    13f0:	83 ec       	ldi	r24, 0xC3	; 195
    13f2:	99 e0       	ldi	r25, 0x09	; 9
    13f4:	01 97       	sbiw	r24, 0x01	; 1
    13f6:	f1 f7       	brne	.-4      	; 0x13f4 <m_wii_open+0x192>
    13f8:	00 c0       	rjmp	.+0      	; 0x13fa <m_wii_open+0x198>
    13fa:	00 00       	nop
    13fc:	81 e0       	ldi	r24, 0x01	; 1
    13fe:	08 95       	ret
    1400:	80 e0       	ldi	r24, 0x00	; 0
    1402:	08 95       	ret
    1404:	80 e0       	ldi	r24, 0x00	; 0
    1406:	08 95       	ret
    1408:	80 e0       	ldi	r24, 0x00	; 0
    140a:	08 95       	ret
    140c:	80 e0       	ldi	r24, 0x00	; 0
    140e:	08 95       	ret
    1410:	80 e0       	ldi	r24, 0x00	; 0
    1412:	08 95       	ret
    1414:	80 e0       	ldi	r24, 0x00	; 0
    1416:	08 95       	ret
    1418:	80 e0       	ldi	r24, 0x00	; 0
    141a:	08 95       	ret
    141c:	80 e0       	ldi	r24, 0x00	; 0
    141e:	08 95       	ret
    1420:	80 e0       	ldi	r24, 0x00	; 0
    1422:	08 95       	ret
    1424:	80 e0       	ldi	r24, 0x00	; 0
    1426:	08 95       	ret
    1428:	80 e0       	ldi	r24, 0x00	; 0
    142a:	08 95       	ret
    142c:	80 e0       	ldi	r24, 0x00	; 0
    142e:	08 95       	ret
    1430:	80 e0       	ldi	r24, 0x00	; 0
    1432:	08 95       	ret
    1434:	80 e0       	ldi	r24, 0x00	; 0
    1436:	08 95       	ret
    1438:	80 e0       	ldi	r24, 0x00	; 0
    143a:	08 95       	ret
    143c:	80 e0       	ldi	r24, 0x00	; 0
    143e:	08 95       	ret
    1440:	80 e0       	ldi	r24, 0x00	; 0
    1442:	08 95       	ret
    1444:	80 e0       	ldi	r24, 0x00	; 0
    1446:	08 95       	ret
    1448:	80 e0       	ldi	r24, 0x00	; 0
    144a:	08 95       	ret
    144c:	80 e0       	ldi	r24, 0x00	; 0
    144e:	08 95       	ret
    1450:	80 e0       	ldi	r24, 0x00	; 0
    1452:	08 95       	ret
    1454:	80 e0       	ldi	r24, 0x00	; 0
    1456:	08 95       	ret
    1458:	80 e0       	ldi	r24, 0x00	; 0
    145a:	08 95       	ret
    145c:	80 e0       	ldi	r24, 0x00	; 0
    145e:	08 95       	ret
    1460:	80 e0       	ldi	r24, 0x00	; 0
    1462:	08 95       	ret
    1464:	80 e0       	ldi	r24, 0x00	; 0
    1466:	08 95       	ret

00001468 <__subsf3>:
    1468:	50 58       	subi	r21, 0x80	; 128

0000146a <__addsf3>:
    146a:	bb 27       	eor	r27, r27
    146c:	aa 27       	eor	r26, r26
    146e:	0e d0       	rcall	.+28     	; 0x148c <__addsf3x>
    1470:	ff c1       	rjmp	.+1022   	; 0x1870 <__fp_round>
    1472:	c8 d1       	rcall	.+912    	; 0x1804 <__fp_pscA>
    1474:	30 f0       	brcs	.+12     	; 0x1482 <__addsf3+0x18>
    1476:	cd d1       	rcall	.+922    	; 0x1812 <__fp_pscB>
    1478:	20 f0       	brcs	.+8      	; 0x1482 <__addsf3+0x18>
    147a:	31 f4       	brne	.+12     	; 0x1488 <__addsf3+0x1e>
    147c:	9f 3f       	cpi	r25, 0xFF	; 255
    147e:	11 f4       	brne	.+4      	; 0x1484 <__addsf3+0x1a>
    1480:	1e f4       	brtc	.+6      	; 0x1488 <__addsf3+0x1e>
    1482:	98 c1       	rjmp	.+816    	; 0x17b4 <__fp_nan>
    1484:	0e f4       	brtc	.+2      	; 0x1488 <__addsf3+0x1e>
    1486:	e0 95       	com	r30
    1488:	e7 fb       	bst	r30, 7
    148a:	8e c1       	rjmp	.+796    	; 0x17a8 <__fp_inf>

0000148c <__addsf3x>:
    148c:	e9 2f       	mov	r30, r25
    148e:	12 d2       	rcall	.+1060   	; 0x18b4 <__fp_split3>
    1490:	80 f3       	brcs	.-32     	; 0x1472 <__addsf3+0x8>
    1492:	ba 17       	cp	r27, r26
    1494:	62 07       	cpc	r22, r18
    1496:	73 07       	cpc	r23, r19
    1498:	84 07       	cpc	r24, r20
    149a:	95 07       	cpc	r25, r21
    149c:	18 f0       	brcs	.+6      	; 0x14a4 <__addsf3x+0x18>
    149e:	71 f4       	brne	.+28     	; 0x14bc <__addsf3x+0x30>
    14a0:	9e f5       	brtc	.+102    	; 0x1508 <__addsf3x+0x7c>
    14a2:	2a c2       	rjmp	.+1108   	; 0x18f8 <__fp_zero>
    14a4:	0e f4       	brtc	.+2      	; 0x14a8 <__addsf3x+0x1c>
    14a6:	e0 95       	com	r30
    14a8:	0b 2e       	mov	r0, r27
    14aa:	ba 2f       	mov	r27, r26
    14ac:	a0 2d       	mov	r26, r0
    14ae:	0b 01       	movw	r0, r22
    14b0:	b9 01       	movw	r22, r18
    14b2:	90 01       	movw	r18, r0
    14b4:	0c 01       	movw	r0, r24
    14b6:	ca 01       	movw	r24, r20
    14b8:	a0 01       	movw	r20, r0
    14ba:	11 24       	eor	r1, r1
    14bc:	ff 27       	eor	r31, r31
    14be:	59 1b       	sub	r21, r25
    14c0:	99 f0       	breq	.+38     	; 0x14e8 <__addsf3x+0x5c>
    14c2:	59 3f       	cpi	r21, 0xF9	; 249
    14c4:	50 f4       	brcc	.+20     	; 0x14da <__addsf3x+0x4e>
    14c6:	50 3e       	cpi	r21, 0xE0	; 224
    14c8:	68 f1       	brcs	.+90     	; 0x1524 <__addsf3x+0x98>
    14ca:	1a 16       	cp	r1, r26
    14cc:	f0 40       	sbci	r31, 0x00	; 0
    14ce:	a2 2f       	mov	r26, r18
    14d0:	23 2f       	mov	r18, r19
    14d2:	34 2f       	mov	r19, r20
    14d4:	44 27       	eor	r20, r20
    14d6:	58 5f       	subi	r21, 0xF8	; 248
    14d8:	f3 cf       	rjmp	.-26     	; 0x14c0 <__addsf3x+0x34>
    14da:	46 95       	lsr	r20
    14dc:	37 95       	ror	r19
    14de:	27 95       	ror	r18
    14e0:	a7 95       	ror	r26
    14e2:	f0 40       	sbci	r31, 0x00	; 0
    14e4:	53 95       	inc	r21
    14e6:	c9 f7       	brne	.-14     	; 0x14da <__addsf3x+0x4e>
    14e8:	7e f4       	brtc	.+30     	; 0x1508 <__addsf3x+0x7c>
    14ea:	1f 16       	cp	r1, r31
    14ec:	ba 0b       	sbc	r27, r26
    14ee:	62 0b       	sbc	r22, r18
    14f0:	73 0b       	sbc	r23, r19
    14f2:	84 0b       	sbc	r24, r20
    14f4:	ba f0       	brmi	.+46     	; 0x1524 <__addsf3x+0x98>
    14f6:	91 50       	subi	r25, 0x01	; 1
    14f8:	a1 f0       	breq	.+40     	; 0x1522 <__addsf3x+0x96>
    14fa:	ff 0f       	add	r31, r31
    14fc:	bb 1f       	adc	r27, r27
    14fe:	66 1f       	adc	r22, r22
    1500:	77 1f       	adc	r23, r23
    1502:	88 1f       	adc	r24, r24
    1504:	c2 f7       	brpl	.-16     	; 0x14f6 <__addsf3x+0x6a>
    1506:	0e c0       	rjmp	.+28     	; 0x1524 <__addsf3x+0x98>
    1508:	ba 0f       	add	r27, r26
    150a:	62 1f       	adc	r22, r18
    150c:	73 1f       	adc	r23, r19
    150e:	84 1f       	adc	r24, r20
    1510:	48 f4       	brcc	.+18     	; 0x1524 <__addsf3x+0x98>
    1512:	87 95       	ror	r24
    1514:	77 95       	ror	r23
    1516:	67 95       	ror	r22
    1518:	b7 95       	ror	r27
    151a:	f7 95       	ror	r31
    151c:	9e 3f       	cpi	r25, 0xFE	; 254
    151e:	08 f0       	brcs	.+2      	; 0x1522 <__addsf3x+0x96>
    1520:	b3 cf       	rjmp	.-154    	; 0x1488 <__addsf3+0x1e>
    1522:	93 95       	inc	r25
    1524:	88 0f       	add	r24, r24
    1526:	08 f0       	brcs	.+2      	; 0x152a <__addsf3x+0x9e>
    1528:	99 27       	eor	r25, r25
    152a:	ee 0f       	add	r30, r30
    152c:	97 95       	ror	r25
    152e:	87 95       	ror	r24
    1530:	08 95       	ret
    1532:	68 d1       	rcall	.+720    	; 0x1804 <__fp_pscA>
    1534:	58 f0       	brcs	.+22     	; 0x154c <__addsf3x+0xc0>
    1536:	80 e8       	ldi	r24, 0x80	; 128
    1538:	91 e0       	ldi	r25, 0x01	; 1
    153a:	09 f4       	brne	.+2      	; 0x153e <__addsf3x+0xb2>
    153c:	9e ef       	ldi	r25, 0xFE	; 254
    153e:	69 d1       	rcall	.+722    	; 0x1812 <__fp_pscB>
    1540:	28 f0       	brcs	.+10     	; 0x154c <__addsf3x+0xc0>
    1542:	40 e8       	ldi	r20, 0x80	; 128
    1544:	51 e0       	ldi	r21, 0x01	; 1
    1546:	59 f4       	brne	.+22     	; 0x155e <atan2+0xe>
    1548:	5e ef       	ldi	r21, 0xFE	; 254
    154a:	09 c0       	rjmp	.+18     	; 0x155e <atan2+0xe>
    154c:	33 c1       	rjmp	.+614    	; 0x17b4 <__fp_nan>
    154e:	d4 c1       	rjmp	.+936    	; 0x18f8 <__fp_zero>

00001550 <atan2>:
    1550:	e9 2f       	mov	r30, r25
    1552:	e0 78       	andi	r30, 0x80	; 128
    1554:	af d1       	rcall	.+862    	; 0x18b4 <__fp_split3>
    1556:	68 f3       	brcs	.-38     	; 0x1532 <__addsf3x+0xa6>
    1558:	09 2e       	mov	r0, r25
    155a:	05 2a       	or	r0, r21
    155c:	c1 f3       	breq	.-16     	; 0x154e <__addsf3x+0xc2>
    155e:	26 17       	cp	r18, r22
    1560:	37 07       	cpc	r19, r23
    1562:	48 07       	cpc	r20, r24
    1564:	59 07       	cpc	r21, r25
    1566:	38 f0       	brcs	.+14     	; 0x1576 <atan2+0x26>
    1568:	0e 2e       	mov	r0, r30
    156a:	07 f8       	bld	r0, 7
    156c:	e0 25       	eor	r30, r0
    156e:	69 f0       	breq	.+26     	; 0x158a <atan2+0x3a>
    1570:	e0 25       	eor	r30, r0
    1572:	e0 64       	ori	r30, 0x40	; 64
    1574:	0a c0       	rjmp	.+20     	; 0x158a <atan2+0x3a>
    1576:	ef 63       	ori	r30, 0x3F	; 63
    1578:	07 f8       	bld	r0, 7
    157a:	00 94       	com	r0
    157c:	07 fa       	bst	r0, 7
    157e:	db 01       	movw	r26, r22
    1580:	b9 01       	movw	r22, r18
    1582:	9d 01       	movw	r18, r26
    1584:	dc 01       	movw	r26, r24
    1586:	ca 01       	movw	r24, r20
    1588:	ad 01       	movw	r20, r26
    158a:	ef 93       	push	r30
    158c:	46 d0       	rcall	.+140    	; 0x161a <__divsf3_pse>
    158e:	70 d1       	rcall	.+736    	; 0x1870 <__fp_round>
    1590:	0a d0       	rcall	.+20     	; 0x15a6 <atan>
    1592:	5f 91       	pop	r21
    1594:	55 23       	and	r21, r21
    1596:	31 f0       	breq	.+12     	; 0x15a4 <atan2+0x54>
    1598:	2b ed       	ldi	r18, 0xDB	; 219
    159a:	3f e0       	ldi	r19, 0x0F	; 15
    159c:	49 e4       	ldi	r20, 0x49	; 73
    159e:	50 fd       	sbrc	r21, 0
    15a0:	49 ec       	ldi	r20, 0xC9	; 201
    15a2:	63 cf       	rjmp	.-314    	; 0x146a <__addsf3>
    15a4:	08 95       	ret

000015a6 <atan>:
    15a6:	df 93       	push	r29
    15a8:	dd 27       	eor	r29, r29
    15aa:	b9 2f       	mov	r27, r25
    15ac:	bf 77       	andi	r27, 0x7F	; 127
    15ae:	40 e8       	ldi	r20, 0x80	; 128
    15b0:	5f e3       	ldi	r21, 0x3F	; 63
    15b2:	16 16       	cp	r1, r22
    15b4:	17 06       	cpc	r1, r23
    15b6:	48 07       	cpc	r20, r24
    15b8:	5b 07       	cpc	r21, r27
    15ba:	10 f4       	brcc	.+4      	; 0x15c0 <atan+0x1a>
    15bc:	d9 2f       	mov	r29, r25
    15be:	a7 d1       	rcall	.+846    	; 0x190e <inverse>
    15c0:	9f 93       	push	r25
    15c2:	8f 93       	push	r24
    15c4:	7f 93       	push	r23
    15c6:	6f 93       	push	r22
    15c8:	54 d2       	rcall	.+1192   	; 0x1a72 <square>
    15ca:	ec ea       	ldi	r30, 0xAC	; 172
    15cc:	f0 e0       	ldi	r31, 0x00	; 0
    15ce:	f5 d0       	rcall	.+490    	; 0x17ba <__fp_powser>
    15d0:	4f d1       	rcall	.+670    	; 0x1870 <__fp_round>
    15d2:	2f 91       	pop	r18
    15d4:	3f 91       	pop	r19
    15d6:	4f 91       	pop	r20
    15d8:	5f 91       	pop	r21
    15da:	ac d1       	rcall	.+856    	; 0x1934 <__mulsf3x>
    15dc:	dd 23       	and	r29, r29
    15de:	49 f0       	breq	.+18     	; 0x15f2 <atan+0x4c>
    15e0:	90 58       	subi	r25, 0x80	; 128
    15e2:	a2 ea       	ldi	r26, 0xA2	; 162
    15e4:	2a ed       	ldi	r18, 0xDA	; 218
    15e6:	3f e0       	ldi	r19, 0x0F	; 15
    15e8:	49 ec       	ldi	r20, 0xC9	; 201
    15ea:	5f e3       	ldi	r21, 0x3F	; 63
    15ec:	d0 78       	andi	r29, 0x80	; 128
    15ee:	5d 27       	eor	r21, r29
    15f0:	4d df       	rcall	.-358    	; 0x148c <__addsf3x>
    15f2:	df 91       	pop	r29
    15f4:	3d c1       	rjmp	.+634    	; 0x1870 <__fp_round>

000015f6 <cos>:
    15f6:	15 d1       	rcall	.+554    	; 0x1822 <__fp_rempio2>
    15f8:	e3 95       	inc	r30
    15fa:	4b c1       	rjmp	.+662    	; 0x1892 <__fp_sinus>

000015fc <__divsf3>:
    15fc:	0c d0       	rcall	.+24     	; 0x1616 <__divsf3x>
    15fe:	38 c1       	rjmp	.+624    	; 0x1870 <__fp_round>
    1600:	08 d1       	rcall	.+528    	; 0x1812 <__fp_pscB>
    1602:	40 f0       	brcs	.+16     	; 0x1614 <__divsf3+0x18>
    1604:	ff d0       	rcall	.+510    	; 0x1804 <__fp_pscA>
    1606:	30 f0       	brcs	.+12     	; 0x1614 <__divsf3+0x18>
    1608:	21 f4       	brne	.+8      	; 0x1612 <__divsf3+0x16>
    160a:	5f 3f       	cpi	r21, 0xFF	; 255
    160c:	19 f0       	breq	.+6      	; 0x1614 <__divsf3+0x18>
    160e:	cc c0       	rjmp	.+408    	; 0x17a8 <__fp_inf>
    1610:	51 11       	cpse	r21, r1
    1612:	73 c1       	rjmp	.+742    	; 0x18fa <__fp_szero>
    1614:	cf c0       	rjmp	.+414    	; 0x17b4 <__fp_nan>

00001616 <__divsf3x>:
    1616:	4e d1       	rcall	.+668    	; 0x18b4 <__fp_split3>
    1618:	98 f3       	brcs	.-26     	; 0x1600 <__divsf3+0x4>

0000161a <__divsf3_pse>:
    161a:	99 23       	and	r25, r25
    161c:	c9 f3       	breq	.-14     	; 0x1610 <__divsf3+0x14>
    161e:	55 23       	and	r21, r21
    1620:	b1 f3       	breq	.-20     	; 0x160e <__divsf3+0x12>
    1622:	95 1b       	sub	r25, r21
    1624:	55 0b       	sbc	r21, r21
    1626:	bb 27       	eor	r27, r27
    1628:	aa 27       	eor	r26, r26
    162a:	62 17       	cp	r22, r18
    162c:	73 07       	cpc	r23, r19
    162e:	84 07       	cpc	r24, r20
    1630:	38 f0       	brcs	.+14     	; 0x1640 <__divsf3_pse+0x26>
    1632:	9f 5f       	subi	r25, 0xFF	; 255
    1634:	5f 4f       	sbci	r21, 0xFF	; 255
    1636:	22 0f       	add	r18, r18
    1638:	33 1f       	adc	r19, r19
    163a:	44 1f       	adc	r20, r20
    163c:	aa 1f       	adc	r26, r26
    163e:	a9 f3       	breq	.-22     	; 0x162a <__divsf3_pse+0x10>
    1640:	33 d0       	rcall	.+102    	; 0x16a8 <__divsf3_pse+0x8e>
    1642:	0e 2e       	mov	r0, r30
    1644:	3a f0       	brmi	.+14     	; 0x1654 <__divsf3_pse+0x3a>
    1646:	e0 e8       	ldi	r30, 0x80	; 128
    1648:	30 d0       	rcall	.+96     	; 0x16aa <__divsf3_pse+0x90>
    164a:	91 50       	subi	r25, 0x01	; 1
    164c:	50 40       	sbci	r21, 0x00	; 0
    164e:	e6 95       	lsr	r30
    1650:	00 1c       	adc	r0, r0
    1652:	ca f7       	brpl	.-14     	; 0x1646 <__divsf3_pse+0x2c>
    1654:	29 d0       	rcall	.+82     	; 0x16a8 <__divsf3_pse+0x8e>
    1656:	fe 2f       	mov	r31, r30
    1658:	27 d0       	rcall	.+78     	; 0x16a8 <__divsf3_pse+0x8e>
    165a:	66 0f       	add	r22, r22
    165c:	77 1f       	adc	r23, r23
    165e:	88 1f       	adc	r24, r24
    1660:	bb 1f       	adc	r27, r27
    1662:	26 17       	cp	r18, r22
    1664:	37 07       	cpc	r19, r23
    1666:	48 07       	cpc	r20, r24
    1668:	ab 07       	cpc	r26, r27
    166a:	b0 e8       	ldi	r27, 0x80	; 128
    166c:	09 f0       	breq	.+2      	; 0x1670 <__divsf3_pse+0x56>
    166e:	bb 0b       	sbc	r27, r27
    1670:	80 2d       	mov	r24, r0
    1672:	bf 01       	movw	r22, r30
    1674:	ff 27       	eor	r31, r31
    1676:	93 58       	subi	r25, 0x83	; 131
    1678:	5f 4f       	sbci	r21, 0xFF	; 255
    167a:	2a f0       	brmi	.+10     	; 0x1686 <__divsf3_pse+0x6c>
    167c:	9e 3f       	cpi	r25, 0xFE	; 254
    167e:	51 05       	cpc	r21, r1
    1680:	68 f0       	brcs	.+26     	; 0x169c <__divsf3_pse+0x82>
    1682:	92 c0       	rjmp	.+292    	; 0x17a8 <__fp_inf>
    1684:	3a c1       	rjmp	.+628    	; 0x18fa <__fp_szero>
    1686:	5f 3f       	cpi	r21, 0xFF	; 255
    1688:	ec f3       	brlt	.-6      	; 0x1684 <__divsf3_pse+0x6a>
    168a:	98 3e       	cpi	r25, 0xE8	; 232
    168c:	dc f3       	brlt	.-10     	; 0x1684 <__divsf3_pse+0x6a>
    168e:	86 95       	lsr	r24
    1690:	77 95       	ror	r23
    1692:	67 95       	ror	r22
    1694:	b7 95       	ror	r27
    1696:	f7 95       	ror	r31
    1698:	9f 5f       	subi	r25, 0xFF	; 255
    169a:	c9 f7       	brne	.-14     	; 0x168e <__divsf3_pse+0x74>
    169c:	88 0f       	add	r24, r24
    169e:	91 1d       	adc	r25, r1
    16a0:	96 95       	lsr	r25
    16a2:	87 95       	ror	r24
    16a4:	97 f9       	bld	r25, 7
    16a6:	08 95       	ret
    16a8:	e1 e0       	ldi	r30, 0x01	; 1
    16aa:	66 0f       	add	r22, r22
    16ac:	77 1f       	adc	r23, r23
    16ae:	88 1f       	adc	r24, r24
    16b0:	bb 1f       	adc	r27, r27
    16b2:	62 17       	cp	r22, r18
    16b4:	73 07       	cpc	r23, r19
    16b6:	84 07       	cpc	r24, r20
    16b8:	ba 07       	cpc	r27, r26
    16ba:	20 f0       	brcs	.+8      	; 0x16c4 <__divsf3_pse+0xaa>
    16bc:	62 1b       	sub	r22, r18
    16be:	73 0b       	sbc	r23, r19
    16c0:	84 0b       	sbc	r24, r20
    16c2:	ba 0b       	sbc	r27, r26
    16c4:	ee 1f       	adc	r30, r30
    16c6:	88 f7       	brcc	.-30     	; 0x16aa <__divsf3_pse+0x90>
    16c8:	e0 95       	com	r30
    16ca:	08 95       	ret

000016cc <__fixsfsi>:
    16cc:	04 d0       	rcall	.+8      	; 0x16d6 <__fixunssfsi>
    16ce:	68 94       	set
    16d0:	b1 11       	cpse	r27, r1
    16d2:	13 c1       	rjmp	.+550    	; 0x18fa <__fp_szero>
    16d4:	08 95       	ret

000016d6 <__fixunssfsi>:
    16d6:	f6 d0       	rcall	.+492    	; 0x18c4 <__fp_splitA>
    16d8:	88 f0       	brcs	.+34     	; 0x16fc <__fixunssfsi+0x26>
    16da:	9f 57       	subi	r25, 0x7F	; 127
    16dc:	90 f0       	brcs	.+36     	; 0x1702 <__fixunssfsi+0x2c>
    16de:	b9 2f       	mov	r27, r25
    16e0:	99 27       	eor	r25, r25
    16e2:	b7 51       	subi	r27, 0x17	; 23
    16e4:	a0 f0       	brcs	.+40     	; 0x170e <__fixunssfsi+0x38>
    16e6:	d1 f0       	breq	.+52     	; 0x171c <__fixunssfsi+0x46>
    16e8:	66 0f       	add	r22, r22
    16ea:	77 1f       	adc	r23, r23
    16ec:	88 1f       	adc	r24, r24
    16ee:	99 1f       	adc	r25, r25
    16f0:	1a f0       	brmi	.+6      	; 0x16f8 <__fixunssfsi+0x22>
    16f2:	ba 95       	dec	r27
    16f4:	c9 f7       	brne	.-14     	; 0x16e8 <__fixunssfsi+0x12>
    16f6:	12 c0       	rjmp	.+36     	; 0x171c <__fixunssfsi+0x46>
    16f8:	b1 30       	cpi	r27, 0x01	; 1
    16fa:	81 f0       	breq	.+32     	; 0x171c <__fixunssfsi+0x46>
    16fc:	fd d0       	rcall	.+506    	; 0x18f8 <__fp_zero>
    16fe:	b1 e0       	ldi	r27, 0x01	; 1
    1700:	08 95       	ret
    1702:	fa c0       	rjmp	.+500    	; 0x18f8 <__fp_zero>
    1704:	67 2f       	mov	r22, r23
    1706:	78 2f       	mov	r23, r24
    1708:	88 27       	eor	r24, r24
    170a:	b8 5f       	subi	r27, 0xF8	; 248
    170c:	39 f0       	breq	.+14     	; 0x171c <__fixunssfsi+0x46>
    170e:	b9 3f       	cpi	r27, 0xF9	; 249
    1710:	cc f3       	brlt	.-14     	; 0x1704 <__fixunssfsi+0x2e>
    1712:	86 95       	lsr	r24
    1714:	77 95       	ror	r23
    1716:	67 95       	ror	r22
    1718:	b3 95       	inc	r27
    171a:	d9 f7       	brne	.-10     	; 0x1712 <__fixunssfsi+0x3c>
    171c:	3e f4       	brtc	.+14     	; 0x172c <__fixunssfsi+0x56>
    171e:	90 95       	com	r25
    1720:	80 95       	com	r24
    1722:	70 95       	com	r23
    1724:	61 95       	neg	r22
    1726:	7f 4f       	sbci	r23, 0xFF	; 255
    1728:	8f 4f       	sbci	r24, 0xFF	; 255
    172a:	9f 4f       	sbci	r25, 0xFF	; 255
    172c:	08 95       	ret

0000172e <__floatunsisf>:
    172e:	e8 94       	clt
    1730:	09 c0       	rjmp	.+18     	; 0x1744 <__floatsisf+0x12>

00001732 <__floatsisf>:
    1732:	97 fb       	bst	r25, 7
    1734:	3e f4       	brtc	.+14     	; 0x1744 <__floatsisf+0x12>
    1736:	90 95       	com	r25
    1738:	80 95       	com	r24
    173a:	70 95       	com	r23
    173c:	61 95       	neg	r22
    173e:	7f 4f       	sbci	r23, 0xFF	; 255
    1740:	8f 4f       	sbci	r24, 0xFF	; 255
    1742:	9f 4f       	sbci	r25, 0xFF	; 255
    1744:	99 23       	and	r25, r25
    1746:	a9 f0       	breq	.+42     	; 0x1772 <__floatsisf+0x40>
    1748:	f9 2f       	mov	r31, r25
    174a:	96 e9       	ldi	r25, 0x96	; 150
    174c:	bb 27       	eor	r27, r27
    174e:	93 95       	inc	r25
    1750:	f6 95       	lsr	r31
    1752:	87 95       	ror	r24
    1754:	77 95       	ror	r23
    1756:	67 95       	ror	r22
    1758:	b7 95       	ror	r27
    175a:	f1 11       	cpse	r31, r1
    175c:	f8 cf       	rjmp	.-16     	; 0x174e <__floatsisf+0x1c>
    175e:	fa f4       	brpl	.+62     	; 0x179e <__floatsisf+0x6c>
    1760:	bb 0f       	add	r27, r27
    1762:	11 f4       	brne	.+4      	; 0x1768 <__floatsisf+0x36>
    1764:	60 ff       	sbrs	r22, 0
    1766:	1b c0       	rjmp	.+54     	; 0x179e <__floatsisf+0x6c>
    1768:	6f 5f       	subi	r22, 0xFF	; 255
    176a:	7f 4f       	sbci	r23, 0xFF	; 255
    176c:	8f 4f       	sbci	r24, 0xFF	; 255
    176e:	9f 4f       	sbci	r25, 0xFF	; 255
    1770:	16 c0       	rjmp	.+44     	; 0x179e <__floatsisf+0x6c>
    1772:	88 23       	and	r24, r24
    1774:	11 f0       	breq	.+4      	; 0x177a <__floatsisf+0x48>
    1776:	96 e9       	ldi	r25, 0x96	; 150
    1778:	11 c0       	rjmp	.+34     	; 0x179c <__floatsisf+0x6a>
    177a:	77 23       	and	r23, r23
    177c:	21 f0       	breq	.+8      	; 0x1786 <__floatsisf+0x54>
    177e:	9e e8       	ldi	r25, 0x8E	; 142
    1780:	87 2f       	mov	r24, r23
    1782:	76 2f       	mov	r23, r22
    1784:	05 c0       	rjmp	.+10     	; 0x1790 <__floatsisf+0x5e>
    1786:	66 23       	and	r22, r22
    1788:	71 f0       	breq	.+28     	; 0x17a6 <__floatsisf+0x74>
    178a:	96 e8       	ldi	r25, 0x86	; 134
    178c:	86 2f       	mov	r24, r22
    178e:	70 e0       	ldi	r23, 0x00	; 0
    1790:	60 e0       	ldi	r22, 0x00	; 0
    1792:	2a f0       	brmi	.+10     	; 0x179e <__floatsisf+0x6c>
    1794:	9a 95       	dec	r25
    1796:	66 0f       	add	r22, r22
    1798:	77 1f       	adc	r23, r23
    179a:	88 1f       	adc	r24, r24
    179c:	da f7       	brpl	.-10     	; 0x1794 <__floatsisf+0x62>
    179e:	88 0f       	add	r24, r24
    17a0:	96 95       	lsr	r25
    17a2:	87 95       	ror	r24
    17a4:	97 f9       	bld	r25, 7
    17a6:	08 95       	ret

000017a8 <__fp_inf>:
    17a8:	97 f9       	bld	r25, 7
    17aa:	9f 67       	ori	r25, 0x7F	; 127
    17ac:	80 e8       	ldi	r24, 0x80	; 128
    17ae:	70 e0       	ldi	r23, 0x00	; 0
    17b0:	60 e0       	ldi	r22, 0x00	; 0
    17b2:	08 95       	ret

000017b4 <__fp_nan>:
    17b4:	9f ef       	ldi	r25, 0xFF	; 255
    17b6:	80 ec       	ldi	r24, 0xC0	; 192
    17b8:	08 95       	ret

000017ba <__fp_powser>:
    17ba:	df 93       	push	r29
    17bc:	cf 93       	push	r28
    17be:	1f 93       	push	r17
    17c0:	0f 93       	push	r16
    17c2:	ff 92       	push	r15
    17c4:	ef 92       	push	r14
    17c6:	df 92       	push	r13
    17c8:	7b 01       	movw	r14, r22
    17ca:	8c 01       	movw	r16, r24
    17cc:	68 94       	set
    17ce:	05 c0       	rjmp	.+10     	; 0x17da <__fp_powser+0x20>
    17d0:	da 2e       	mov	r13, r26
    17d2:	ef 01       	movw	r28, r30
    17d4:	af d0       	rcall	.+350    	; 0x1934 <__mulsf3x>
    17d6:	fe 01       	movw	r30, r28
    17d8:	e8 94       	clt
    17da:	a5 91       	lpm	r26, Z+
    17dc:	25 91       	lpm	r18, Z+
    17de:	35 91       	lpm	r19, Z+
    17e0:	45 91       	lpm	r20, Z+
    17e2:	55 91       	lpm	r21, Z+
    17e4:	ae f3       	brts	.-22     	; 0x17d0 <__fp_powser+0x16>
    17e6:	ef 01       	movw	r28, r30
    17e8:	51 de       	rcall	.-862    	; 0x148c <__addsf3x>
    17ea:	fe 01       	movw	r30, r28
    17ec:	97 01       	movw	r18, r14
    17ee:	a8 01       	movw	r20, r16
    17f0:	da 94       	dec	r13
    17f2:	79 f7       	brne	.-34     	; 0x17d2 <__fp_powser+0x18>
    17f4:	df 90       	pop	r13
    17f6:	ef 90       	pop	r14
    17f8:	ff 90       	pop	r15
    17fa:	0f 91       	pop	r16
    17fc:	1f 91       	pop	r17
    17fe:	cf 91       	pop	r28
    1800:	df 91       	pop	r29
    1802:	08 95       	ret

00001804 <__fp_pscA>:
    1804:	00 24       	eor	r0, r0
    1806:	0a 94       	dec	r0
    1808:	16 16       	cp	r1, r22
    180a:	17 06       	cpc	r1, r23
    180c:	18 06       	cpc	r1, r24
    180e:	09 06       	cpc	r0, r25
    1810:	08 95       	ret

00001812 <__fp_pscB>:
    1812:	00 24       	eor	r0, r0
    1814:	0a 94       	dec	r0
    1816:	12 16       	cp	r1, r18
    1818:	13 06       	cpc	r1, r19
    181a:	14 06       	cpc	r1, r20
    181c:	05 06       	cpc	r0, r21
    181e:	08 95       	ret
    1820:	c9 cf       	rjmp	.-110    	; 0x17b4 <__fp_nan>

00001822 <__fp_rempio2>:
    1822:	50 d0       	rcall	.+160    	; 0x18c4 <__fp_splitA>
    1824:	e8 f3       	brcs	.-6      	; 0x1820 <__fp_pscB+0xe>
    1826:	e8 94       	clt
    1828:	e0 e0       	ldi	r30, 0x00	; 0
    182a:	bb 27       	eor	r27, r27
    182c:	9f 57       	subi	r25, 0x7F	; 127
    182e:	f0 f0       	brcs	.+60     	; 0x186c <__fp_rempio2+0x4a>
    1830:	2a ed       	ldi	r18, 0xDA	; 218
    1832:	3f e0       	ldi	r19, 0x0F	; 15
    1834:	49 ec       	ldi	r20, 0xC9	; 201
    1836:	06 c0       	rjmp	.+12     	; 0x1844 <__fp_rempio2+0x22>
    1838:	ee 0f       	add	r30, r30
    183a:	bb 0f       	add	r27, r27
    183c:	66 1f       	adc	r22, r22
    183e:	77 1f       	adc	r23, r23
    1840:	88 1f       	adc	r24, r24
    1842:	28 f0       	brcs	.+10     	; 0x184e <__fp_rempio2+0x2c>
    1844:	b2 3a       	cpi	r27, 0xA2	; 162
    1846:	62 07       	cpc	r22, r18
    1848:	73 07       	cpc	r23, r19
    184a:	84 07       	cpc	r24, r20
    184c:	28 f0       	brcs	.+10     	; 0x1858 <__fp_rempio2+0x36>
    184e:	b2 5a       	subi	r27, 0xA2	; 162
    1850:	62 0b       	sbc	r22, r18
    1852:	73 0b       	sbc	r23, r19
    1854:	84 0b       	sbc	r24, r20
    1856:	e3 95       	inc	r30
    1858:	9a 95       	dec	r25
    185a:	72 f7       	brpl	.-36     	; 0x1838 <__fp_rempio2+0x16>
    185c:	80 38       	cpi	r24, 0x80	; 128
    185e:	30 f4       	brcc	.+12     	; 0x186c <__fp_rempio2+0x4a>
    1860:	9a 95       	dec	r25
    1862:	bb 0f       	add	r27, r27
    1864:	66 1f       	adc	r22, r22
    1866:	77 1f       	adc	r23, r23
    1868:	88 1f       	adc	r24, r24
    186a:	d2 f7       	brpl	.-12     	; 0x1860 <__fp_rempio2+0x3e>
    186c:	90 48       	sbci	r25, 0x80	; 128
    186e:	2a c1       	rjmp	.+596    	; 0x1ac4 <__fp_mpack_finite>

00001870 <__fp_round>:
    1870:	09 2e       	mov	r0, r25
    1872:	03 94       	inc	r0
    1874:	00 0c       	add	r0, r0
    1876:	11 f4       	brne	.+4      	; 0x187c <__fp_round+0xc>
    1878:	88 23       	and	r24, r24
    187a:	52 f0       	brmi	.+20     	; 0x1890 <__fp_round+0x20>
    187c:	bb 0f       	add	r27, r27
    187e:	40 f4       	brcc	.+16     	; 0x1890 <__fp_round+0x20>
    1880:	bf 2b       	or	r27, r31
    1882:	11 f4       	brne	.+4      	; 0x1888 <__fp_round+0x18>
    1884:	60 ff       	sbrs	r22, 0
    1886:	04 c0       	rjmp	.+8      	; 0x1890 <__fp_round+0x20>
    1888:	6f 5f       	subi	r22, 0xFF	; 255
    188a:	7f 4f       	sbci	r23, 0xFF	; 255
    188c:	8f 4f       	sbci	r24, 0xFF	; 255
    188e:	9f 4f       	sbci	r25, 0xFF	; 255
    1890:	08 95       	ret

00001892 <__fp_sinus>:
    1892:	ef 93       	push	r30
    1894:	e0 ff       	sbrs	r30, 0
    1896:	06 c0       	rjmp	.+12     	; 0x18a4 <__fp_sinus+0x12>
    1898:	a2 ea       	ldi	r26, 0xA2	; 162
    189a:	2a ed       	ldi	r18, 0xDA	; 218
    189c:	3f e0       	ldi	r19, 0x0F	; 15
    189e:	49 ec       	ldi	r20, 0xC9	; 201
    18a0:	5f eb       	ldi	r21, 0xBF	; 191
    18a2:	f4 dd       	rcall	.-1048   	; 0x148c <__addsf3x>
    18a4:	e5 df       	rcall	.-54     	; 0x1870 <__fp_round>
    18a6:	0f 90       	pop	r0
    18a8:	03 94       	inc	r0
    18aa:	01 fc       	sbrc	r0, 1
    18ac:	90 58       	subi	r25, 0x80	; 128
    18ae:	e9 ed       	ldi	r30, 0xD9	; 217
    18b0:	f0 e0       	ldi	r31, 0x00	; 0
    18b2:	1b c1       	rjmp	.+566    	; 0x1aea <__fp_powsodd>

000018b4 <__fp_split3>:
    18b4:	57 fd       	sbrc	r21, 7
    18b6:	90 58       	subi	r25, 0x80	; 128
    18b8:	44 0f       	add	r20, r20
    18ba:	55 1f       	adc	r21, r21
    18bc:	59 f0       	breq	.+22     	; 0x18d4 <__fp_splitA+0x10>
    18be:	5f 3f       	cpi	r21, 0xFF	; 255
    18c0:	71 f0       	breq	.+28     	; 0x18de <__fp_splitA+0x1a>
    18c2:	47 95       	ror	r20

000018c4 <__fp_splitA>:
    18c4:	88 0f       	add	r24, r24
    18c6:	97 fb       	bst	r25, 7
    18c8:	99 1f       	adc	r25, r25
    18ca:	61 f0       	breq	.+24     	; 0x18e4 <__fp_splitA+0x20>
    18cc:	9f 3f       	cpi	r25, 0xFF	; 255
    18ce:	79 f0       	breq	.+30     	; 0x18ee <__fp_splitA+0x2a>
    18d0:	87 95       	ror	r24
    18d2:	08 95       	ret
    18d4:	12 16       	cp	r1, r18
    18d6:	13 06       	cpc	r1, r19
    18d8:	14 06       	cpc	r1, r20
    18da:	55 1f       	adc	r21, r21
    18dc:	f2 cf       	rjmp	.-28     	; 0x18c2 <__fp_split3+0xe>
    18de:	46 95       	lsr	r20
    18e0:	f1 df       	rcall	.-30     	; 0x18c4 <__fp_splitA>
    18e2:	08 c0       	rjmp	.+16     	; 0x18f4 <__fp_splitA+0x30>
    18e4:	16 16       	cp	r1, r22
    18e6:	17 06       	cpc	r1, r23
    18e8:	18 06       	cpc	r1, r24
    18ea:	99 1f       	adc	r25, r25
    18ec:	f1 cf       	rjmp	.-30     	; 0x18d0 <__fp_splitA+0xc>
    18ee:	86 95       	lsr	r24
    18f0:	71 05       	cpc	r23, r1
    18f2:	61 05       	cpc	r22, r1
    18f4:	08 94       	sec
    18f6:	08 95       	ret

000018f8 <__fp_zero>:
    18f8:	e8 94       	clt

000018fa <__fp_szero>:
    18fa:	bb 27       	eor	r27, r27
    18fc:	66 27       	eor	r22, r22
    18fe:	77 27       	eor	r23, r23
    1900:	cb 01       	movw	r24, r22
    1902:	97 f9       	bld	r25, 7
    1904:	08 95       	ret

00001906 <__gesf2>:
    1906:	b8 d0       	rcall	.+368    	; 0x1a78 <__fp_cmp>
    1908:	08 f4       	brcc	.+2      	; 0x190c <__gesf2+0x6>
    190a:	8f ef       	ldi	r24, 0xFF	; 255
    190c:	08 95       	ret

0000190e <inverse>:
    190e:	9b 01       	movw	r18, r22
    1910:	ac 01       	movw	r20, r24
    1912:	60 e0       	ldi	r22, 0x00	; 0
    1914:	70 e0       	ldi	r23, 0x00	; 0
    1916:	80 e8       	ldi	r24, 0x80	; 128
    1918:	9f e3       	ldi	r25, 0x3F	; 63
    191a:	70 ce       	rjmp	.-800    	; 0x15fc <__divsf3>

0000191c <__mulsf3>:
    191c:	0b d0       	rcall	.+22     	; 0x1934 <__mulsf3x>
    191e:	a8 cf       	rjmp	.-176    	; 0x1870 <__fp_round>
    1920:	71 df       	rcall	.-286    	; 0x1804 <__fp_pscA>
    1922:	28 f0       	brcs	.+10     	; 0x192e <__mulsf3+0x12>
    1924:	76 df       	rcall	.-276    	; 0x1812 <__fp_pscB>
    1926:	18 f0       	brcs	.+6      	; 0x192e <__mulsf3+0x12>
    1928:	95 23       	and	r25, r21
    192a:	09 f0       	breq	.+2      	; 0x192e <__mulsf3+0x12>
    192c:	3d cf       	rjmp	.-390    	; 0x17a8 <__fp_inf>
    192e:	42 cf       	rjmp	.-380    	; 0x17b4 <__fp_nan>
    1930:	11 24       	eor	r1, r1
    1932:	e3 cf       	rjmp	.-58     	; 0x18fa <__fp_szero>

00001934 <__mulsf3x>:
    1934:	bf df       	rcall	.-130    	; 0x18b4 <__fp_split3>
    1936:	a0 f3       	brcs	.-24     	; 0x1920 <__mulsf3+0x4>

00001938 <__mulsf3_pse>:
    1938:	95 9f       	mul	r25, r21
    193a:	d1 f3       	breq	.-12     	; 0x1930 <__mulsf3+0x14>
    193c:	95 0f       	add	r25, r21
    193e:	50 e0       	ldi	r21, 0x00	; 0
    1940:	55 1f       	adc	r21, r21
    1942:	62 9f       	mul	r22, r18
    1944:	f0 01       	movw	r30, r0
    1946:	72 9f       	mul	r23, r18
    1948:	bb 27       	eor	r27, r27
    194a:	f0 0d       	add	r31, r0
    194c:	b1 1d       	adc	r27, r1
    194e:	63 9f       	mul	r22, r19
    1950:	aa 27       	eor	r26, r26
    1952:	f0 0d       	add	r31, r0
    1954:	b1 1d       	adc	r27, r1
    1956:	aa 1f       	adc	r26, r26
    1958:	64 9f       	mul	r22, r20
    195a:	66 27       	eor	r22, r22
    195c:	b0 0d       	add	r27, r0
    195e:	a1 1d       	adc	r26, r1
    1960:	66 1f       	adc	r22, r22
    1962:	82 9f       	mul	r24, r18
    1964:	22 27       	eor	r18, r18
    1966:	b0 0d       	add	r27, r0
    1968:	a1 1d       	adc	r26, r1
    196a:	62 1f       	adc	r22, r18
    196c:	73 9f       	mul	r23, r19
    196e:	b0 0d       	add	r27, r0
    1970:	a1 1d       	adc	r26, r1
    1972:	62 1f       	adc	r22, r18
    1974:	83 9f       	mul	r24, r19
    1976:	a0 0d       	add	r26, r0
    1978:	61 1d       	adc	r22, r1
    197a:	22 1f       	adc	r18, r18
    197c:	74 9f       	mul	r23, r20
    197e:	33 27       	eor	r19, r19
    1980:	a0 0d       	add	r26, r0
    1982:	61 1d       	adc	r22, r1
    1984:	23 1f       	adc	r18, r19
    1986:	84 9f       	mul	r24, r20
    1988:	60 0d       	add	r22, r0
    198a:	21 1d       	adc	r18, r1
    198c:	82 2f       	mov	r24, r18
    198e:	76 2f       	mov	r23, r22
    1990:	6a 2f       	mov	r22, r26
    1992:	11 24       	eor	r1, r1
    1994:	9f 57       	subi	r25, 0x7F	; 127
    1996:	50 40       	sbci	r21, 0x00	; 0
    1998:	8a f0       	brmi	.+34     	; 0x19bc <__mulsf3_pse+0x84>
    199a:	e1 f0       	breq	.+56     	; 0x19d4 <__mulsf3_pse+0x9c>
    199c:	88 23       	and	r24, r24
    199e:	4a f0       	brmi	.+18     	; 0x19b2 <__mulsf3_pse+0x7a>
    19a0:	ee 0f       	add	r30, r30
    19a2:	ff 1f       	adc	r31, r31
    19a4:	bb 1f       	adc	r27, r27
    19a6:	66 1f       	adc	r22, r22
    19a8:	77 1f       	adc	r23, r23
    19aa:	88 1f       	adc	r24, r24
    19ac:	91 50       	subi	r25, 0x01	; 1
    19ae:	50 40       	sbci	r21, 0x00	; 0
    19b0:	a9 f7       	brne	.-22     	; 0x199c <__mulsf3_pse+0x64>
    19b2:	9e 3f       	cpi	r25, 0xFE	; 254
    19b4:	51 05       	cpc	r21, r1
    19b6:	70 f0       	brcs	.+28     	; 0x19d4 <__mulsf3_pse+0x9c>
    19b8:	f7 ce       	rjmp	.-530    	; 0x17a8 <__fp_inf>
    19ba:	9f cf       	rjmp	.-194    	; 0x18fa <__fp_szero>
    19bc:	5f 3f       	cpi	r21, 0xFF	; 255
    19be:	ec f3       	brlt	.-6      	; 0x19ba <__mulsf3_pse+0x82>
    19c0:	98 3e       	cpi	r25, 0xE8	; 232
    19c2:	dc f3       	brlt	.-10     	; 0x19ba <__mulsf3_pse+0x82>
    19c4:	86 95       	lsr	r24
    19c6:	77 95       	ror	r23
    19c8:	67 95       	ror	r22
    19ca:	b7 95       	ror	r27
    19cc:	f7 95       	ror	r31
    19ce:	e7 95       	ror	r30
    19d0:	9f 5f       	subi	r25, 0xFF	; 255
    19d2:	c1 f7       	brne	.-16     	; 0x19c4 <__mulsf3_pse+0x8c>
    19d4:	fe 2b       	or	r31, r30
    19d6:	88 0f       	add	r24, r24
    19d8:	91 1d       	adc	r25, r1
    19da:	96 95       	lsr	r25
    19dc:	87 95       	ror	r24
    19de:	97 f9       	bld	r25, 7
    19e0:	08 95       	ret

000019e2 <sin>:
    19e2:	9f 93       	push	r25
    19e4:	1e df       	rcall	.-452    	; 0x1822 <__fp_rempio2>
    19e6:	0f 90       	pop	r0
    19e8:	07 fc       	sbrc	r0, 7
    19ea:	ee 5f       	subi	r30, 0xFE	; 254
    19ec:	52 cf       	rjmp	.-348    	; 0x1892 <__fp_sinus>
    19ee:	11 f4       	brne	.+4      	; 0x19f4 <sin+0x12>
    19f0:	0e f4       	brtc	.+2      	; 0x19f4 <sin+0x12>
    19f2:	e0 ce       	rjmp	.-576    	; 0x17b4 <__fp_nan>
    19f4:	65 c0       	rjmp	.+202    	; 0x1ac0 <__fp_mpack>

000019f6 <sqrt>:
    19f6:	66 df       	rcall	.-308    	; 0x18c4 <__fp_splitA>
    19f8:	d0 f3       	brcs	.-12     	; 0x19ee <sin+0xc>
    19fa:	99 23       	and	r25, r25
    19fc:	d9 f3       	breq	.-10     	; 0x19f4 <sin+0x12>
    19fe:	ce f3       	brts	.-14     	; 0x19f2 <sin+0x10>
    1a00:	9f 57       	subi	r25, 0x7F	; 127
    1a02:	55 0b       	sbc	r21, r21
    1a04:	87 ff       	sbrs	r24, 7
    1a06:	6a d0       	rcall	.+212    	; 0x1adc <__fp_norm2>
    1a08:	00 24       	eor	r0, r0
    1a0a:	a0 e6       	ldi	r26, 0x60	; 96
    1a0c:	40 ea       	ldi	r20, 0xA0	; 160
    1a0e:	90 01       	movw	r18, r0
    1a10:	80 58       	subi	r24, 0x80	; 128
    1a12:	56 95       	lsr	r21
    1a14:	97 95       	ror	r25
    1a16:	28 f4       	brcc	.+10     	; 0x1a22 <sqrt+0x2c>
    1a18:	80 5c       	subi	r24, 0xC0	; 192
    1a1a:	66 0f       	add	r22, r22
    1a1c:	77 1f       	adc	r23, r23
    1a1e:	88 1f       	adc	r24, r24
    1a20:	20 f0       	brcs	.+8      	; 0x1a2a <sqrt+0x34>
    1a22:	26 17       	cp	r18, r22
    1a24:	37 07       	cpc	r19, r23
    1a26:	48 07       	cpc	r20, r24
    1a28:	30 f4       	brcc	.+12     	; 0x1a36 <sqrt+0x40>
    1a2a:	62 1b       	sub	r22, r18
    1a2c:	73 0b       	sbc	r23, r19
    1a2e:	84 0b       	sbc	r24, r20
    1a30:	20 29       	or	r18, r0
    1a32:	31 29       	or	r19, r1
    1a34:	4a 2b       	or	r20, r26
    1a36:	a6 95       	lsr	r26
    1a38:	17 94       	ror	r1
    1a3a:	07 94       	ror	r0
    1a3c:	20 25       	eor	r18, r0
    1a3e:	31 25       	eor	r19, r1
    1a40:	4a 27       	eor	r20, r26
    1a42:	58 f7       	brcc	.-42     	; 0x1a1a <sqrt+0x24>
    1a44:	66 0f       	add	r22, r22
    1a46:	77 1f       	adc	r23, r23
    1a48:	88 1f       	adc	r24, r24
    1a4a:	20 f0       	brcs	.+8      	; 0x1a54 <sqrt+0x5e>
    1a4c:	26 17       	cp	r18, r22
    1a4e:	37 07       	cpc	r19, r23
    1a50:	48 07       	cpc	r20, r24
    1a52:	30 f4       	brcc	.+12     	; 0x1a60 <sqrt+0x6a>
    1a54:	62 0b       	sbc	r22, r18
    1a56:	73 0b       	sbc	r23, r19
    1a58:	84 0b       	sbc	r24, r20
    1a5a:	20 0d       	add	r18, r0
    1a5c:	31 1d       	adc	r19, r1
    1a5e:	41 1d       	adc	r20, r1
    1a60:	a0 95       	com	r26
    1a62:	81 f7       	brne	.-32     	; 0x1a44 <sqrt+0x4e>
    1a64:	b9 01       	movw	r22, r18
    1a66:	84 2f       	mov	r24, r20
    1a68:	91 58       	subi	r25, 0x81	; 129
    1a6a:	88 0f       	add	r24, r24
    1a6c:	96 95       	lsr	r25
    1a6e:	87 95       	ror	r24
    1a70:	08 95       	ret

00001a72 <square>:
    1a72:	9b 01       	movw	r18, r22
    1a74:	ac 01       	movw	r20, r24
    1a76:	52 cf       	rjmp	.-348    	; 0x191c <__mulsf3>

00001a78 <__fp_cmp>:
    1a78:	99 0f       	add	r25, r25
    1a7a:	00 08       	sbc	r0, r0
    1a7c:	55 0f       	add	r21, r21
    1a7e:	aa 0b       	sbc	r26, r26
    1a80:	e0 e8       	ldi	r30, 0x80	; 128
    1a82:	fe ef       	ldi	r31, 0xFE	; 254
    1a84:	16 16       	cp	r1, r22
    1a86:	17 06       	cpc	r1, r23
    1a88:	e8 07       	cpc	r30, r24
    1a8a:	f9 07       	cpc	r31, r25
    1a8c:	c0 f0       	brcs	.+48     	; 0x1abe <__fp_cmp+0x46>
    1a8e:	12 16       	cp	r1, r18
    1a90:	13 06       	cpc	r1, r19
    1a92:	e4 07       	cpc	r30, r20
    1a94:	f5 07       	cpc	r31, r21
    1a96:	98 f0       	brcs	.+38     	; 0x1abe <__fp_cmp+0x46>
    1a98:	62 1b       	sub	r22, r18
    1a9a:	73 0b       	sbc	r23, r19
    1a9c:	84 0b       	sbc	r24, r20
    1a9e:	95 0b       	sbc	r25, r21
    1aa0:	39 f4       	brne	.+14     	; 0x1ab0 <__fp_cmp+0x38>
    1aa2:	0a 26       	eor	r0, r26
    1aa4:	61 f0       	breq	.+24     	; 0x1abe <__fp_cmp+0x46>
    1aa6:	23 2b       	or	r18, r19
    1aa8:	24 2b       	or	r18, r20
    1aaa:	25 2b       	or	r18, r21
    1aac:	21 f4       	brne	.+8      	; 0x1ab6 <__fp_cmp+0x3e>
    1aae:	08 95       	ret
    1ab0:	0a 26       	eor	r0, r26
    1ab2:	09 f4       	brne	.+2      	; 0x1ab6 <__fp_cmp+0x3e>
    1ab4:	a1 40       	sbci	r26, 0x01	; 1
    1ab6:	a6 95       	lsr	r26
    1ab8:	8f ef       	ldi	r24, 0xFF	; 255
    1aba:	81 1d       	adc	r24, r1
    1abc:	81 1d       	adc	r24, r1
    1abe:	08 95       	ret

00001ac0 <__fp_mpack>:
    1ac0:	9f 3f       	cpi	r25, 0xFF	; 255
    1ac2:	31 f0       	breq	.+12     	; 0x1ad0 <__fp_mpack_finite+0xc>

00001ac4 <__fp_mpack_finite>:
    1ac4:	91 50       	subi	r25, 0x01	; 1
    1ac6:	20 f4       	brcc	.+8      	; 0x1ad0 <__fp_mpack_finite+0xc>
    1ac8:	87 95       	ror	r24
    1aca:	77 95       	ror	r23
    1acc:	67 95       	ror	r22
    1ace:	b7 95       	ror	r27
    1ad0:	88 0f       	add	r24, r24
    1ad2:	91 1d       	adc	r25, r1
    1ad4:	96 95       	lsr	r25
    1ad6:	87 95       	ror	r24
    1ad8:	97 f9       	bld	r25, 7
    1ada:	08 95       	ret

00001adc <__fp_norm2>:
    1adc:	91 50       	subi	r25, 0x01	; 1
    1ade:	50 40       	sbci	r21, 0x00	; 0
    1ae0:	66 0f       	add	r22, r22
    1ae2:	77 1f       	adc	r23, r23
    1ae4:	88 1f       	adc	r24, r24
    1ae6:	d2 f7       	brpl	.-12     	; 0x1adc <__fp_norm2>
    1ae8:	08 95       	ret

00001aea <__fp_powsodd>:
    1aea:	9f 93       	push	r25
    1aec:	8f 93       	push	r24
    1aee:	7f 93       	push	r23
    1af0:	6f 93       	push	r22
    1af2:	ff 93       	push	r31
    1af4:	ef 93       	push	r30
    1af6:	9b 01       	movw	r18, r22
    1af8:	ac 01       	movw	r20, r24
    1afa:	10 df       	rcall	.-480    	; 0x191c <__mulsf3>
    1afc:	ef 91       	pop	r30
    1afe:	ff 91       	pop	r31
    1b00:	5c de       	rcall	.-840    	; 0x17ba <__fp_powser>
    1b02:	2f 91       	pop	r18
    1b04:	3f 91       	pop	r19
    1b06:	4f 91       	pop	r20
    1b08:	5f 91       	pop	r21
    1b0a:	08 cf       	rjmp	.-496    	; 0x191c <__mulsf3>

00001b0c <itoa>:
    1b0c:	fb 01       	movw	r30, r22
    1b0e:	9f 01       	movw	r18, r30
    1b10:	e8 94       	clt
    1b12:	42 30       	cpi	r20, 0x02	; 2
    1b14:	c4 f0       	brlt	.+48     	; 0x1b46 <itoa+0x3a>
    1b16:	45 32       	cpi	r20, 0x25	; 37
    1b18:	b4 f4       	brge	.+44     	; 0x1b46 <itoa+0x3a>
    1b1a:	4a 30       	cpi	r20, 0x0A	; 10
    1b1c:	29 f4       	brne	.+10     	; 0x1b28 <itoa+0x1c>
    1b1e:	97 fb       	bst	r25, 7
    1b20:	1e f4       	brtc	.+6      	; 0x1b28 <itoa+0x1c>
    1b22:	90 95       	com	r25
    1b24:	81 95       	neg	r24
    1b26:	9f 4f       	sbci	r25, 0xFF	; 255
    1b28:	64 2f       	mov	r22, r20
    1b2a:	77 27       	eor	r23, r23
    1b2c:	0e 94 b7 0d 	call	0x1b6e	; 0x1b6e <__udivmodhi4>
    1b30:	80 5d       	subi	r24, 0xD0	; 208
    1b32:	8a 33       	cpi	r24, 0x3A	; 58
    1b34:	0c f0       	brlt	.+2      	; 0x1b38 <itoa+0x2c>
    1b36:	89 5d       	subi	r24, 0xD9	; 217
    1b38:	81 93       	st	Z+, r24
    1b3a:	cb 01       	movw	r24, r22
    1b3c:	00 97       	sbiw	r24, 0x00	; 0
    1b3e:	a1 f7       	brne	.-24     	; 0x1b28 <itoa+0x1c>
    1b40:	16 f4       	brtc	.+4      	; 0x1b46 <itoa+0x3a>
    1b42:	5d e2       	ldi	r21, 0x2D	; 45
    1b44:	51 93       	st	Z+, r21
    1b46:	10 82       	st	Z, r1
    1b48:	c9 01       	movw	r24, r18
    1b4a:	0c 94 a7 0d 	jmp	0x1b4e	; 0x1b4e <strrev>

00001b4e <strrev>:
    1b4e:	dc 01       	movw	r26, r24
    1b50:	fc 01       	movw	r30, r24
    1b52:	67 2f       	mov	r22, r23
    1b54:	71 91       	ld	r23, Z+
    1b56:	77 23       	and	r23, r23
    1b58:	e1 f7       	brne	.-8      	; 0x1b52 <strrev+0x4>
    1b5a:	32 97       	sbiw	r30, 0x02	; 2
    1b5c:	04 c0       	rjmp	.+8      	; 0x1b66 <strrev+0x18>
    1b5e:	7c 91       	ld	r23, X
    1b60:	6d 93       	st	X+, r22
    1b62:	70 83       	st	Z, r23
    1b64:	62 91       	ld	r22, -Z
    1b66:	ae 17       	cp	r26, r30
    1b68:	bf 07       	cpc	r27, r31
    1b6a:	c8 f3       	brcs	.-14     	; 0x1b5e <strrev+0x10>
    1b6c:	08 95       	ret

00001b6e <__udivmodhi4>:
    1b6e:	aa 1b       	sub	r26, r26
    1b70:	bb 1b       	sub	r27, r27
    1b72:	51 e1       	ldi	r21, 0x11	; 17
    1b74:	07 c0       	rjmp	.+14     	; 0x1b84 <__udivmodhi4_ep>

00001b76 <__udivmodhi4_loop>:
    1b76:	aa 1f       	adc	r26, r26
    1b78:	bb 1f       	adc	r27, r27
    1b7a:	a6 17       	cp	r26, r22
    1b7c:	b7 07       	cpc	r27, r23
    1b7e:	10 f0       	brcs	.+4      	; 0x1b84 <__udivmodhi4_ep>
    1b80:	a6 1b       	sub	r26, r22
    1b82:	b7 0b       	sbc	r27, r23

00001b84 <__udivmodhi4_ep>:
    1b84:	88 1f       	adc	r24, r24
    1b86:	99 1f       	adc	r25, r25
    1b88:	5a 95       	dec	r21
    1b8a:	a9 f7       	brne	.-22     	; 0x1b76 <__udivmodhi4_loop>
    1b8c:	80 95       	com	r24
    1b8e:	90 95       	com	r25
    1b90:	bc 01       	movw	r22, r24
    1b92:	cd 01       	movw	r24, r26
    1b94:	08 95       	ret

00001b96 <_exit>:
    1b96:	f8 94       	cli

00001b98 <__stop_program>:
    1b98:	ff cf       	rjmp	.-2      	; 0x1b98 <__stop_program>
