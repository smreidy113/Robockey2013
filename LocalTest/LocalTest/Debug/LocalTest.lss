
LocalTest.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000014  00800100  00001a38  00001acc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001a38  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000054  00800114  00800114  00001ae0  2**0
                  ALLOC
  3 .stab         000037ec  00000000  00000000  00001ae0  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      000010f3  00000000  00000000  000052cc  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      0000002f  00000000  00000000  000063bf  2**0
                  CONTENTS, READONLY
  6 .debug_aranges 000001e0  00000000  00000000  000063ee  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00001e85  00000000  00000000  000065ce  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000007f3  00000000  00000000  00008453  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00000c61  00000000  00000000  00008c46  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  000005e0  00000000  00000000  000098a8  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    000006e9  00000000  00000000  00009e88  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    00002546  00000000  00000000  0000a571  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 000001f8  00000000  00000000  0000cab7  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__ctors_end>
       4:	0c 94 f5 00 	jmp	0x1ea	; 0x1ea <__bad_interrupt>
       8:	0c 94 f5 00 	jmp	0x1ea	; 0x1ea <__bad_interrupt>
       c:	0c 94 f5 00 	jmp	0x1ea	; 0x1ea <__bad_interrupt>
      10:	0c 94 f5 00 	jmp	0x1ea	; 0x1ea <__bad_interrupt>
      14:	0c 94 f5 00 	jmp	0x1ea	; 0x1ea <__bad_interrupt>
      18:	0c 94 f5 00 	jmp	0x1ea	; 0x1ea <__bad_interrupt>
      1c:	0c 94 f5 00 	jmp	0x1ea	; 0x1ea <__bad_interrupt>
      20:	0c 94 f5 00 	jmp	0x1ea	; 0x1ea <__bad_interrupt>
      24:	0c 94 f5 00 	jmp	0x1ea	; 0x1ea <__bad_interrupt>
      28:	0c 94 7d 05 	jmp	0xafa	; 0xafa <__vector_10>
      2c:	0c 94 bb 05 	jmp	0xb76	; 0xb76 <__vector_11>
      30:	0c 94 f5 00 	jmp	0x1ea	; 0x1ea <__bad_interrupt>
      34:	0c 94 f5 00 	jmp	0x1ea	; 0x1ea <__bad_interrupt>
      38:	0c 94 f5 00 	jmp	0x1ea	; 0x1ea <__bad_interrupt>
      3c:	0c 94 f5 00 	jmp	0x1ea	; 0x1ea <__bad_interrupt>
      40:	0c 94 f5 00 	jmp	0x1ea	; 0x1ea <__bad_interrupt>
      44:	0c 94 f5 00 	jmp	0x1ea	; 0x1ea <__bad_interrupt>
      48:	0c 94 f5 00 	jmp	0x1ea	; 0x1ea <__bad_interrupt>
      4c:	0c 94 f5 00 	jmp	0x1ea	; 0x1ea <__bad_interrupt>
      50:	0c 94 f5 00 	jmp	0x1ea	; 0x1ea <__bad_interrupt>
      54:	0c 94 f5 00 	jmp	0x1ea	; 0x1ea <__bad_interrupt>
      58:	0c 94 f5 00 	jmp	0x1ea	; 0x1ea <__bad_interrupt>
      5c:	0c 94 f5 00 	jmp	0x1ea	; 0x1ea <__bad_interrupt>
      60:	0c 94 f5 00 	jmp	0x1ea	; 0x1ea <__bad_interrupt>
      64:	0c 94 f5 00 	jmp	0x1ea	; 0x1ea <__bad_interrupt>
      68:	0c 94 f5 00 	jmp	0x1ea	; 0x1ea <__bad_interrupt>
      6c:	0c 94 f5 00 	jmp	0x1ea	; 0x1ea <__bad_interrupt>
      70:	0c 94 f5 00 	jmp	0x1ea	; 0x1ea <__bad_interrupt>
      74:	0c 94 f5 00 	jmp	0x1ea	; 0x1ea <__bad_interrupt>
      78:	0c 94 f5 00 	jmp	0x1ea	; 0x1ea <__bad_interrupt>
      7c:	0c 94 f5 00 	jmp	0x1ea	; 0x1ea <__bad_interrupt>
      80:	0c 94 f5 00 	jmp	0x1ea	; 0x1ea <__bad_interrupt>
      84:	0c 94 f5 00 	jmp	0x1ea	; 0x1ea <__bad_interrupt>
      88:	0c 94 f5 00 	jmp	0x1ea	; 0x1ea <__bad_interrupt>
      8c:	0c 94 f5 00 	jmp	0x1ea	; 0x1ea <__bad_interrupt>
      90:	0c 94 f5 00 	jmp	0x1ea	; 0x1ea <__bad_interrupt>
      94:	0c 94 f5 00 	jmp	0x1ea	; 0x1ea <__bad_interrupt>
      98:	0c 94 f5 00 	jmp	0x1ea	; 0x1ea <__bad_interrupt>
      9c:	0c 94 f5 00 	jmp	0x1ea	; 0x1ea <__bad_interrupt>
      a0:	0c 94 f5 00 	jmp	0x1ea	; 0x1ea <__bad_interrupt>
      a4:	0c 94 f5 00 	jmp	0x1ea	; 0x1ea <__bad_interrupt>
      a8:	0c 94 f5 00 	jmp	0x1ea	; 0x1ea <__bad_interrupt>
      ac:	08 4a       	sbci	r16, 0xA8	; 168
      ae:	d7 3b       	cpi	r29, 0xB7	; 183
      b0:	3b ce       	rjmp	.-906    	; 0xfffffd28 <__eeprom_end+0xff7efd28>
      b2:	01 6e       	ori	r16, 0xE1	; 225
      b4:	84 bc       	out	0x24, r8	; 36
      b6:	bf fd       	.word	0xfdbf	; ????
      b8:	c1 2f       	mov	r28, r17
      ba:	3d 6c       	ori	r19, 0xCD	; 205
      bc:	74 31       	cpi	r23, 0x14	; 20
      be:	9a bd       	out	0x2a, r25	; 42
      c0:	56 83       	std	Z+6, r21	; 0x06
      c2:	3d da       	rcall	.-2950   	; 0xfffff53e <__eeprom_end+0xff7ef53e>
      c4:	3d 00       	.word	0x003d	; ????
      c6:	c7 7f       	andi	r28, 0xF7	; 247
      c8:	11 be       	out	0x31, r1	; 49
      ca:	d9 e4       	ldi	r29, 0x49	; 73
      cc:	bb 4c       	sbci	r27, 0xCB	; 203
      ce:	3e 91       	ld	r19, -X
      d0:	6b aa       	std	Y+51, r6	; 0x33
      d2:	aa be       	out	0x3a, r10	; 58
      d4:	00 00       	nop
      d6:	00 80       	ld	r0, Z
      d8:	3f 05       	cpc	r19, r15
      da:	a8 4c       	sbci	r26, 0xC8	; 200
      dc:	cd b2       	in	r12, 0x1d	; 29
      de:	d4 4e       	sbci	r29, 0xE4	; 228
      e0:	b9 38       	cpi	r27, 0x89	; 137
      e2:	36 a9       	ldd	r19, Z+54	; 0x36
      e4:	02 0c       	add	r0, r2
      e6:	50 b9       	out	0x00, r21	; 0
      e8:	91 86       	std	Z+9, r9	; 0x09
      ea:	88 08       	sbc	r8, r8
      ec:	3c a6       	std	Y+44, r3	; 0x2c
      ee:	aa aa       	std	Y+50, r10	; 0x32
      f0:	2a be       	out	0x3a, r2	; 58
      f2:	00 00       	nop
      f4:	00 80       	ld	r0, Z
      f6:	3f 09       	sbc	r19, r15

000000f7 <__c.1831>:
      f7:	09 00                                               ..

000000f9 <__c.1833>:
      f9:	09 00                                               ..

000000fb <__c.1838>:
      fb:	0a 00                                               ..

000000fd <descriptor_list>:
      fd:	00 01 00 00 31 01 12 00 02 00 00 43 01 43 00 03     ....1......C.C..
     10d:	00 00 86 01 04 01 03 09 04 8a 01 12 02 03 09 04     ................
     11d:	9e 01 06 03 03 09 04 a6 01 08                       ..........

00000127 <endpoint_config_table>:
     127:	00 01 c1 12 01 80 36 01 81 36                       ......6..6

00000131 <device_descriptor>:
     131:	12 01 00 02 02 00 00 10 c0 16 7a 04 00 01 01 02     ..........z.....
     141:	03 01                                               ..

00000143 <config1_descriptor>:
     143:	09 02 43 00 02 01 00 c0 32 09 04 00 00 01 02 02     ..C.....2.......
     153:	01 00 05 24 00 10 01 05 24 01 01 01 04 24 02 06     ...$....$....$..
     163:	05 24 06 00 01 07 05 82 03 10 00 40 09 04 01 00     .$.........@....
     173:	02 0a 00 00 00 07 05 03 02 40 00 00 07 05 84 02     .........@......
     183:	40 00 00                                            @..

00000186 <string0>:
     186:	04 03 09 04                                         ....

0000018a <string1>:
     18a:	12 03 4a 00 2e 00 20 00 46 00 69 00 65 00 6e 00     ..J... .F.i.e.n.
     19a:	65 00 00 00                                         e...

0000019e <string2>:
     19e:	06 03 4d 00 32 00 00 00                             ..M.2...

000001a6 <string3>:
     1a6:	08 03 34 00 31 00 30 00 00 00                       ..4.1.0...

000001b0 <__ctors_end>:
     1b0:	11 24       	eor	r1, r1
     1b2:	1f be       	out	0x3f, r1	; 63
     1b4:	cf ef       	ldi	r28, 0xFF	; 255
     1b6:	da e0       	ldi	r29, 0x0A	; 10
     1b8:	de bf       	out	0x3e, r29	; 62
     1ba:	cd bf       	out	0x3d, r28	; 61

000001bc <__do_copy_data>:
     1bc:	11 e0       	ldi	r17, 0x01	; 1
     1be:	a0 e0       	ldi	r26, 0x00	; 0
     1c0:	b1 e0       	ldi	r27, 0x01	; 1
     1c2:	e8 e3       	ldi	r30, 0x38	; 56
     1c4:	fa e1       	ldi	r31, 0x1A	; 26
     1c6:	02 c0       	rjmp	.+4      	; 0x1cc <__do_copy_data+0x10>
     1c8:	05 90       	lpm	r0, Z+
     1ca:	0d 92       	st	X+, r0
     1cc:	a4 31       	cpi	r26, 0x14	; 20
     1ce:	b1 07       	cpc	r27, r17
     1d0:	d9 f7       	brne	.-10     	; 0x1c8 <__do_copy_data+0xc>

000001d2 <__do_clear_bss>:
     1d2:	21 e0       	ldi	r18, 0x01	; 1
     1d4:	a4 e1       	ldi	r26, 0x14	; 20
     1d6:	b1 e0       	ldi	r27, 0x01	; 1
     1d8:	01 c0       	rjmp	.+2      	; 0x1dc <.do_clear_bss_start>

000001da <.do_clear_bss_loop>:
     1da:	1d 92       	st	X+, r1

000001dc <.do_clear_bss_start>:
     1dc:	a8 36       	cpi	r26, 0x68	; 104
     1de:	b2 07       	cpc	r27, r18
     1e0:	e1 f7       	brne	.-8      	; 0x1da <.do_clear_bss_loop>
     1e2:	0e 94 f7 00 	call	0x1ee	; 0x1ee <main>
     1e6:	0c 94 1a 0d 	jmp	0x1a34	; 0x1a34 <_exit>

000001ea <__bad_interrupt>:
     1ea:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001ee <main>:
 int main(void){

	 //m_red(ON);
	 //m_green(ON);

	 m_bus_init();
     1ee:	0e 94 61 01 	call	0x2c2	; 0x2c2 <m_bus_init>
	 
	 m_usb_init(); // connect usb
     1f2:	0e 94 08 05 	call	0xa10	; 0xa10 <m_usb_init>
	 //m_green(OFF);

	 char rx_buffer; //computer interactions
	 
	 
	 m_wii_open();
     1f6:	0e 94 80 08 	call	0x1100	; 0x1100 <m_wii_open>

	 

	 
	 int i;
	 int counter = 0;
     1fa:	a1 2c       	mov	r10, r1
     1fc:	b1 2c       	mov	r11, r1
					 m_usb_tx_int((int) (data[i] * 180.0 / 3.14));
					 m_usb_tx_string("\t");
				 }
				 
				 else {
					 m_usb_tx_int((int) data[i]);
     1fe:	0f 2e       	mov	r0, r31
     200:	f0 e6       	ldi	r31, 0x60	; 96
     202:	ef 2e       	mov	r14, r31
     204:	f1 e0       	ldi	r31, 0x01	; 1
     206:	ff 2e       	mov	r15, r31
     208:	f0 2d       	mov	r31, r0
			 //for printing to Terminal.exe	
			 //so far: rotating does not work -- it changes x & y; angle calculation does not work either--it changes when in quadrants 1 & 2, but it stuck at either 0 or 45 in quadrants 3 & 4
			 //also check the orientation of the mWii on the wiki -- we need to invert the x direction again	
			 for (i = 0 ; i < 3 ; i++){
				 if (i == 2) {
					 m_usb_tx_int((int) (data[i] * 180.0 / 3.14));
     20a:	04 e6       	ldi	r16, 0x64	; 100
     20c:	11 e0       	ldi	r17, 0x01	; 1
					 m_usb_tx_string("\t");
				 }

			 }
			 m_usb_tx_string("\n");
			 m_green(TOGGLE);
     20e:	68 94       	set
     210:	dd 24       	eor	r13, r13
     212:	d2 f8       	bld	r13, 2
			 
			 counter = 0;
     214:	c0 e0       	ldi	r28, 0x00	; 0
     216:	d0 e0       	ldi	r29, 0x00	; 0
     218:	48 c0       	rjmp	.+144    	; 0x2aa <main+0xbc>
			 //while(!m_usb_rx_available());  	//wait for an indication from the computer
			 //rx_buffer = m_usb_rx_char();  	//grab the computer packet
			 
			 //m_usb_rx_flush();  				//clear buffer
			 
			 localize(data);
     21a:	8c e5       	ldi	r24, 0x5C	; 92
     21c:	91 e0       	ldi	r25, 0x01	; 1
     21e:	0e 94 c6 03 	call	0x78c	; 0x78c <localize>
			 m_red(ON);
     222:	6e 9a       	sbi	0x0d, 6	; 13
     224:	76 98       	cbi	0x0e, 6	; 14
					 m_usb_tx_int((int) (data[i] * 180.0 / 3.14));
					 m_usb_tx_string("\t");
				 }
				 
				 else {
					 m_usb_tx_int((int) data[i]);
     226:	60 91 5c 01 	lds	r22, 0x015C
     22a:	70 91 5d 01 	lds	r23, 0x015D
     22e:	80 91 5e 01 	lds	r24, 0x015E
     232:	90 91 5f 01 	lds	r25, 0x015F
     236:	0e 94 b5 0a 	call	0x156a	; 0x156a <__fixsfsi>
     23a:	cb 01       	movw	r24, r22
     23c:	0e 94 5d 07 	call	0xeba	; 0xeba <m_usb_tx_int>
					 m_usb_tx_string("\t");
     240:	89 ef       	ldi	r24, 0xF9	; 249
     242:	90 e0       	ldi	r25, 0x00	; 0
     244:	0e 94 43 07 	call	0xe86	; 0xe86 <print_P>
					 m_usb_tx_int((int) (data[i] * 180.0 / 3.14));
					 m_usb_tx_string("\t");
				 }
				 
				 else {
					 m_usb_tx_int((int) data[i]);
     248:	f7 01       	movw	r30, r14
     24a:	60 81       	ld	r22, Z
     24c:	71 81       	ldd	r23, Z+1	; 0x01
     24e:	82 81       	ldd	r24, Z+2	; 0x02
     250:	93 81       	ldd	r25, Z+3	; 0x03
     252:	0e 94 b5 0a 	call	0x156a	; 0x156a <__fixsfsi>
     256:	cb 01       	movw	r24, r22
     258:	0e 94 5d 07 	call	0xeba	; 0xeba <m_usb_tx_int>
					 m_usb_tx_string("\t");
     25c:	89 ef       	ldi	r24, 0xF9	; 249
     25e:	90 e0       	ldi	r25, 0x00	; 0
     260:	0e 94 43 07 	call	0xe86	; 0xe86 <print_P>
			 //for printing to Terminal.exe	
			 //so far: rotating does not work -- it changes x & y; angle calculation does not work either--it changes when in quadrants 1 & 2, but it stuck at either 0 or 45 in quadrants 3 & 4
			 //also check the orientation of the mWii on the wiki -- we need to invert the x direction again	
			 for (i = 0 ; i < 3 ; i++){
				 if (i == 2) {
					 m_usb_tx_int((int) (data[i] * 180.0 / 3.14));
     264:	20 e0       	ldi	r18, 0x00	; 0
     266:	30 e0       	ldi	r19, 0x00	; 0
     268:	44 e3       	ldi	r20, 0x34	; 52
     26a:	53 e4       	ldi	r21, 0x43	; 67
     26c:	f8 01       	movw	r30, r16
     26e:	60 81       	ld	r22, Z
     270:	71 81       	ldd	r23, Z+1	; 0x01
     272:	82 81       	ldd	r24, Z+2	; 0x02
     274:	93 81       	ldd	r25, Z+3	; 0x03
     276:	0e 94 dd 0b 	call	0x17ba	; 0x17ba <__mulsf3>
     27a:	23 ec       	ldi	r18, 0xC3	; 195
     27c:	35 ef       	ldi	r19, 0xF5	; 245
     27e:	48 e4       	ldi	r20, 0x48	; 72
     280:	50 e4       	ldi	r21, 0x40	; 64
     282:	0e 94 4d 0a 	call	0x149a	; 0x149a <__divsf3>
     286:	0e 94 b5 0a 	call	0x156a	; 0x156a <__fixsfsi>
     28a:	cb 01       	movw	r24, r22
     28c:	0e 94 5d 07 	call	0xeba	; 0xeba <m_usb_tx_int>
					 m_usb_tx_string("\t");
     290:	87 ef       	ldi	r24, 0xF7	; 247
     292:	90 e0       	ldi	r25, 0x00	; 0
     294:	0e 94 43 07 	call	0xe86	; 0xe86 <print_P>
					 m_usb_tx_int((int) data[i]);
					 m_usb_tx_string("\t");
				 }

			 }
			 m_usb_tx_string("\n");
     298:	8b ef       	ldi	r24, 0xFB	; 251
     29a:	90 e0       	ldi	r25, 0x00	; 0
     29c:	0e 94 43 07 	call	0xe86	; 0xe86 <print_P>
			 m_green(TOGGLE);
     2a0:	6a 9a       	sbi	0x0d, 2	; 13
     2a2:	8e b1       	in	r24, 0x0e	; 14
     2a4:	8d 25       	eor	r24, r13
     2a6:	8e b9       	out	0x0e, r24	; 14
			 
			 counter = 0;
     2a8:	5e 01       	movw	r10, r28

		 }
		 
		 counter++;
     2aa:	ff ef       	ldi	r31, 0xFF	; 255
     2ac:	af 1a       	sub	r10, r31
     2ae:	bf 0a       	sbc	r11, r31

		 m_usb_tx_char('\n');  //MATLAB serial command reads 1 line at a time
     2b0:	8a e0       	ldi	r24, 0x0A	; 10
     2b2:	0e 94 21 05 	call	0xa42	; 0xa42 <m_usb_tx_char>
	 int i;
	 int counter = 0;
	 while(1){
		 
		 
		 if (counter == 10000) {
     2b6:	80 e1       	ldi	r24, 0x10	; 16
     2b8:	a8 16       	cp	r10, r24
     2ba:	87 e2       	ldi	r24, 0x27	; 39
     2bc:	b8 06       	cpc	r11, r24
     2be:	a9 f7       	brne	.-22     	; 0x2aa <main+0xbc>
     2c0:	ac cf       	rjmp	.-168    	; 0x21a <main+0x2c>

000002c2 <m_bus_init>:
     2c2:	58 9a       	sbi	0x0b, 0	; 11
     2c4:	59 9a       	sbi	0x0b, 1	; 11
     2c6:	5a 9a       	sbi	0x0b, 2	; 11
     2c8:	8c e0       	ldi	r24, 0x0C	; 12
     2ca:	80 93 b8 00 	sts	0x00B8, r24
     2ce:	e9 e6       	ldi	r30, 0x69	; 105
     2d0:	f0 e0       	ldi	r31, 0x00	; 0
     2d2:	80 81       	ld	r24, Z
     2d4:	80 62       	ori	r24, 0x20	; 32
     2d6:	80 83       	st	Z, r24
     2d8:	80 81       	ld	r24, Z
     2da:	8f 7e       	andi	r24, 0xEF	; 239
     2dc:	80 83       	st	Z, r24
     2de:	ea 9a       	sbi	0x1d, 2	; 29
     2e0:	78 94       	sei
     2e2:	08 95       	ret

000002e4 <getData>:
float dist = 0;
float distmax = 0, distmin = 1023;
float dcenter = 0;
int far1 = 0, far2 = 0, close1 = 0, close2 = 0;

unsigned char getData(unsigned int* x, unsigned int* y) {
     2e4:	0f 93       	push	r16
     2e6:	1f 93       	push	r17
     2e8:	cf 93       	push	r28
     2ea:	df 93       	push	r29
     2ec:	8c 01       	movw	r16, r24
     2ee:	eb 01       	movw	r28, r22
	m_wii_read(blobs);
     2f0:	80 e4       	ldi	r24, 0x40	; 64
     2f2:	91 e0       	ldi	r25, 0x01	; 1
     2f4:	0e 94 eb 07 	call	0xfd6	; 0xfd6 <m_wii_read>
	x[0] = blobs[0];
     2f8:	80 91 40 01 	lds	r24, 0x0140
     2fc:	90 91 41 01 	lds	r25, 0x0141
     300:	f8 01       	movw	r30, r16
     302:	91 83       	std	Z+1, r25	; 0x01
     304:	80 83       	st	Z, r24
	x[1] = blobs[3];
     306:	80 91 46 01 	lds	r24, 0x0146
     30a:	90 91 47 01 	lds	r25, 0x0147
     30e:	93 83       	std	Z+3, r25	; 0x03
     310:	82 83       	std	Z+2, r24	; 0x02
	x[2] = blobs[6];
     312:	80 91 4c 01 	lds	r24, 0x014C
     316:	90 91 4d 01 	lds	r25, 0x014D
     31a:	95 83       	std	Z+5, r25	; 0x05
     31c:	84 83       	std	Z+4, r24	; 0x04
	x[3] = blobs[9];
     31e:	80 91 52 01 	lds	r24, 0x0152
     322:	90 91 53 01 	lds	r25, 0x0153
     326:	97 83       	std	Z+7, r25	; 0x07
     328:	86 83       	std	Z+6, r24	; 0x06
	y[0] = blobs[1];
     32a:	80 91 42 01 	lds	r24, 0x0142
     32e:	90 91 43 01 	lds	r25, 0x0143
     332:	99 83       	std	Y+1, r25	; 0x01
     334:	88 83       	st	Y, r24
	y[1] = blobs[4];
     336:	80 91 48 01 	lds	r24, 0x0148
     33a:	90 91 49 01 	lds	r25, 0x0149
     33e:	9b 83       	std	Y+3, r25	; 0x03
     340:	8a 83       	std	Y+2, r24	; 0x02
	y[2] = blobs[7];
     342:	80 91 4e 01 	lds	r24, 0x014E
     346:	90 91 4f 01 	lds	r25, 0x014F
     34a:	9d 83       	std	Y+5, r25	; 0x05
     34c:	8c 83       	std	Y+4, r24	; 0x04
	y[3] = blobs[10];
     34e:	80 91 54 01 	lds	r24, 0x0154
     352:	90 91 55 01 	lds	r25, 0x0155
     356:	9f 83       	std	Y+7, r25	; 0x07
     358:	8e 83       	std	Y+6, r24	; 0x06
	return 1;
} 
     35a:	81 e0       	ldi	r24, 0x01	; 1
     35c:	df 91       	pop	r29
     35e:	cf 91       	pop	r28
     360:	1f 91       	pop	r17
     362:	0f 91       	pop	r16
     364:	08 95       	ret

00000366 <determine_blobs>:

unsigned char determine_blobs() {
     366:	2f 92       	push	r2
     368:	3f 92       	push	r3
     36a:	4f 92       	push	r4
     36c:	5f 92       	push	r5
     36e:	6f 92       	push	r6
     370:	7f 92       	push	r7
     372:	8f 92       	push	r8
     374:	9f 92       	push	r9
     376:	af 92       	push	r10
     378:	bf 92       	push	r11
     37a:	cf 92       	push	r12
     37c:	df 92       	push	r13
     37e:	ef 92       	push	r14
     380:	ff 92       	push	r15
     382:	0f 93       	push	r16
     384:	1f 93       	push	r17
     386:	cf 93       	push	r28
     388:	df 93       	push	r29
     38a:	cd b7       	in	r28, 0x3d	; 61
     38c:	de b7       	in	r29, 0x3e	; 62
     38e:	66 97       	sbiw	r28, 0x16	; 22
     390:	0f b6       	in	r0, 0x3f	; 63
     392:	f8 94       	cli
     394:	de bf       	out	0x3e, r29	; 62
     396:	0f be       	out	0x3f, r0	; 63
     398:	cd bf       	out	0x3d, r28	; 61
	int exit = 0;
	while (exit == 0) {
		getData(x, y);
		if (x[0] < 1023 && x[1] < 1023 && x[2] < 1023 && x[3] < 1023) {
     39a:	0f 2e       	mov	r0, r31
     39c:	f2 e3       	ldi	r31, 0x32	; 50
     39e:	cf 2e       	mov	r12, r31
     3a0:	f1 e0       	ldi	r31, 0x01	; 1
     3a2:	df 2e       	mov	r13, r31
     3a4:	f0 2d       	mov	r31, r0
     3a6:	04 e3       	ldi	r16, 0x34	; 52
     3a8:	11 e0       	ldi	r17, 0x01	; 1
     3aa:	0f 2e       	mov	r0, r31
     3ac:	f6 e3       	ldi	r31, 0x36	; 54
     3ae:	ef 2e       	mov	r14, r31
     3b0:	f1 e0       	ldi	r31, 0x01	; 1
     3b2:	ff 2e       	mov	r15, r31
     3b4:	f0 2d       	mov	r31, r0
} 

unsigned char determine_blobs() {
	int exit = 0;
	while (exit == 0) {
		getData(x, y);
     3b6:	68 e2       	ldi	r22, 0x28	; 40
     3b8:	71 e0       	ldi	r23, 0x01	; 1
     3ba:	80 e3       	ldi	r24, 0x30	; 48
     3bc:	91 e0       	ldi	r25, 0x01	; 1
     3be:	0e 94 72 01 	call	0x2e4	; 0x2e4 <getData>
		if (x[0] < 1023 && x[1] < 1023 && x[2] < 1023 && x[3] < 1023) {
     3c2:	80 91 30 01 	lds	r24, 0x0130
     3c6:	90 91 31 01 	lds	r25, 0x0131
     3ca:	8f 3f       	cpi	r24, 0xFF	; 255
     3cc:	93 40       	sbci	r25, 0x03	; 3
     3ce:	98 f7       	brcc	.-26     	; 0x3b6 <determine_blobs+0x50>
     3d0:	d6 01       	movw	r26, r12
     3d2:	8d 91       	ld	r24, X+
     3d4:	9c 91       	ld	r25, X
     3d6:	8f 3f       	cpi	r24, 0xFF	; 255
     3d8:	93 40       	sbci	r25, 0x03	; 3
     3da:	68 f7       	brcc	.-38     	; 0x3b6 <determine_blobs+0x50>
     3dc:	f8 01       	movw	r30, r16
     3de:	80 81       	ld	r24, Z
     3e0:	91 81       	ldd	r25, Z+1	; 0x01
     3e2:	8f 3f       	cpi	r24, 0xFF	; 255
     3e4:	93 40       	sbci	r25, 0x03	; 3
     3e6:	38 f7       	brcc	.-50     	; 0x3b6 <determine_blobs+0x50>
     3e8:	d7 01       	movw	r26, r14
     3ea:	8d 91       	ld	r24, X+
     3ec:	9c 91       	ld	r25, X
     3ee:	8f 3f       	cpi	r24, 0xFF	; 255
     3f0:	93 40       	sbci	r25, 0x03	; 3
     3f2:	08 f7       	brcc	.-62     	; 0x3b6 <determine_blobs+0x50>
     3f4:	60 90 24 01 	lds	r6, 0x0124
     3f8:	70 90 25 01 	lds	r7, 0x0125
     3fc:	80 90 26 01 	lds	r8, 0x0126
     400:	90 90 27 01 	lds	r9, 0x0127
     404:	d0 90 20 01 	lds	r13, 0x0120
     408:	c0 90 21 01 	lds	r12, 0x0121
     40c:	40 90 22 01 	lds	r4, 0x0122
     410:	50 90 23 01 	lds	r5, 0x0123
     414:	e0 91 1a 01 	lds	r30, 0x011A
     418:	ed 87       	std	Y+13, r30	; 0x0d
     41a:	f0 91 1b 01 	lds	r31, 0x011B
     41e:	fe 87       	std	Y+14, r31	; 0x0e
     420:	20 91 18 01 	lds	r18, 0x0118
     424:	2b 87       	std	Y+11, r18	; 0x0b
     426:	30 91 19 01 	lds	r19, 0x0119
     42a:	3c 87       	std	Y+12, r19	; 0x0c
     42c:	40 91 1c 01 	lds	r20, 0x011C
     430:	49 8b       	std	Y+17, r20	; 0x11
     432:	50 91 1d 01 	lds	r21, 0x011D
     436:	5a 8b       	std	Y+18, r21	; 0x12
     438:	60 91 1e 01 	lds	r22, 0x011E
     43c:	6b 8b       	std	Y+19, r22	; 0x13
     43e:	70 91 1f 01 	lds	r23, 0x011F
     442:	7c 8b       	std	Y+20, r23	; 0x14
     444:	f0 90 00 01 	lds	r15, 0x0100
     448:	e0 90 01 01 	lds	r14, 0x0101
     44c:	20 90 02 01 	lds	r2, 0x0102
     450:	30 90 03 01 	lds	r3, 0x0103
     454:	80 91 16 01 	lds	r24, 0x0116
     458:	8f 87       	std	Y+15, r24	; 0x0f
     45a:	90 91 17 01 	lds	r25, 0x0117
     45e:	98 8b       	std	Y+16, r25	; 0x10
     460:	a0 91 14 01 	lds	r26, 0x0114
     464:	b0 91 15 01 	lds	r27, 0x0115
     468:	ba 87       	std	Y+10, r27	; 0x0a
     46a:	a9 87       	std	Y+9, r26	; 0x09
     46c:	18 86       	std	Y+8, r1	; 0x08
     46e:	1f 82       	std	Y+7, r1	; 0x07
     470:	80 e0       	ldi	r24, 0x00	; 0
     472:	90 e0       	ldi	r25, 0x00	; 0
     474:	77 c0       	rjmp	.+238    	; 0x564 <determine_blobs+0x1fe>
			exit = 1;
			for (int i = 0; i < 4; i++) {
				for (int j = i; j < 4; j++) {
					dist = sqrt((x[i]-x[j])*(x[i]-x[j])+(y[i]-y[j])*(y[i]-y[j]));
     476:	f8 01       	movw	r30, r16
     478:	81 91       	ld	r24, Z+
     47a:	91 91       	ld	r25, Z+
     47c:	8f 01       	movw	r16, r30
     47e:	2b 81       	ldd	r18, Y+3	; 0x03
     480:	3c 81       	ldd	r19, Y+4	; 0x04
     482:	28 1b       	sub	r18, r24
     484:	39 0b       	sbc	r19, r25
     486:	c9 01       	movw	r24, r18
     488:	a9 81       	ldd	r26, Y+1	; 0x01
     48a:	ba 81       	ldd	r27, Y+2	; 0x02
     48c:	2d 91       	ld	r18, X+
     48e:	3d 91       	ld	r19, X+
     490:	ba 83       	std	Y+2, r27	; 0x02
     492:	a9 83       	std	Y+1, r26	; 0x01
     494:	ed 81       	ldd	r30, Y+5	; 0x05
     496:	fe 81       	ldd	r31, Y+6	; 0x06
     498:	e2 1b       	sub	r30, r18
     49a:	f3 0b       	sbc	r31, r19
     49c:	ee 9f       	mul	r30, r30
     49e:	b0 01       	movw	r22, r0
     4a0:	ef 9f       	mul	r30, r31
     4a2:	70 0d       	add	r23, r0
     4a4:	70 0d       	add	r23, r0
     4a6:	11 24       	eor	r1, r1
     4a8:	88 9f       	mul	r24, r24
     4aa:	90 01       	movw	r18, r0
     4ac:	89 9f       	mul	r24, r25
     4ae:	30 0d       	add	r19, r0
     4b0:	30 0d       	add	r19, r0
     4b2:	11 24       	eor	r1, r1
     4b4:	62 0f       	add	r22, r18
     4b6:	73 1f       	adc	r23, r19
     4b8:	80 e0       	ldi	r24, 0x00	; 0
     4ba:	90 e0       	ldi	r25, 0x00	; 0
     4bc:	0e 94 e6 0a 	call	0x15cc	; 0x15cc <__floatunsisf>
     4c0:	0e 94 4a 0c 	call	0x1894	; 0x1894 <sqrt>
     4c4:	66 2e       	mov	r6, r22
     4c6:	77 2e       	mov	r7, r23
     4c8:	88 2e       	mov	r8, r24
     4ca:	99 2e       	mov	r9, r25
					if (dist > distmax) {
     4cc:	2d 2d       	mov	r18, r13
     4ce:	3c 2d       	mov	r19, r12
     4d0:	44 2d       	mov	r20, r4
     4d2:	55 2d       	mov	r21, r5
     4d4:	66 2d       	mov	r22, r6
     4d6:	77 2d       	mov	r23, r7
     4d8:	88 2d       	mov	r24, r8
     4da:	99 2d       	mov	r25, r9
     4dc:	0e 94 d2 0b 	call	0x17a4	; 0x17a4 <__gesf2>
     4e0:	18 16       	cp	r1, r24
     4e2:	c4 f4       	brge	.+48     	; 0x514 <determine_blobs+0x1ae>
						distmax = dist;
						far1 = i;
						far2 = j;
						dcenter = dist / 2.0;
     4e4:	20 e0       	ldi	r18, 0x00	; 0
     4e6:	30 e0       	ldi	r19, 0x00	; 0
     4e8:	40 e0       	ldi	r20, 0x00	; 0
     4ea:	5f e3       	ldi	r21, 0x3F	; 63
     4ec:	66 2d       	mov	r22, r6
     4ee:	77 2d       	mov	r23, r7
     4f0:	88 2d       	mov	r24, r8
     4f2:	99 2d       	mov	r25, r9
     4f4:	0e 94 dd 0b 	call	0x17ba	; 0x17ba <__mulsf3>
     4f8:	69 8b       	std	Y+17, r22	; 0x11
     4fa:	7a 8b       	std	Y+18, r23	; 0x12
     4fc:	8b 8b       	std	Y+19, r24	; 0x13
     4fe:	9c 8b       	std	Y+20, r25	; 0x14
				for (int j = i; j < 4; j++) {
					dist = sqrt((x[i]-x[j])*(x[i]-x[j])+(y[i]-y[j])*(y[i]-y[j]));
					if (dist > distmax) {
						distmax = dist;
						far1 = i;
						far2 = j;
     500:	fd 89       	ldd	r31, Y+21	; 0x15
     502:	fb 87       	std	Y+11, r31	; 0x0b
     504:	2e 89       	ldd	r18, Y+22	; 0x16
     506:	2c 87       	std	Y+12, r18	; 0x0c
			for (int i = 0; i < 4; i++) {
				for (int j = i; j < 4; j++) {
					dist = sqrt((x[i]-x[j])*(x[i]-x[j])+(y[i]-y[j])*(y[i]-y[j]));
					if (dist > distmax) {
						distmax = dist;
						far1 = i;
     508:	ad 86       	std	Y+13, r10	; 0x0d
     50a:	be 86       	std	Y+14, r11	; 0x0e
			exit = 1;
			for (int i = 0; i < 4; i++) {
				for (int j = i; j < 4; j++) {
					dist = sqrt((x[i]-x[j])*(x[i]-x[j])+(y[i]-y[j])*(y[i]-y[j]));
					if (dist > distmax) {
						distmax = dist;
     50c:	d6 2c       	mov	r13, r6
     50e:	c7 2c       	mov	r12, r7
     510:	48 2c       	mov	r4, r8
     512:	59 2c       	mov	r5, r9
						far1 = i;
						far2 = j;
						dcenter = dist / 2.0;
					}
					if (dist < distmin) {
     514:	26 2d       	mov	r18, r6
     516:	37 2d       	mov	r19, r7
     518:	48 2d       	mov	r20, r8
     51a:	59 2d       	mov	r21, r9
     51c:	6f 2d       	mov	r22, r15
     51e:	7e 2d       	mov	r23, r14
     520:	82 2d       	mov	r24, r2
     522:	93 2d       	mov	r25, r3
     524:	0e 94 d2 0b 	call	0x17a4	; 0x17a4 <__gesf2>
     528:	18 16       	cp	r1, r24
     52a:	54 f4       	brge	.+20     	; 0x540 <determine_blobs+0x1da>
						distmin = dist;
						close1 = i;
						close2 = j;
     52c:	4d 89       	ldd	r20, Y+21	; 0x15
     52e:	5e 89       	ldd	r21, Y+22	; 0x16
     530:	5a 87       	std	Y+10, r21	; 0x0a
     532:	49 87       	std	Y+9, r20	; 0x09
						far2 = j;
						dcenter = dist / 2.0;
					}
					if (dist < distmin) {
						distmin = dist;
						close1 = i;
     534:	af 86       	std	Y+15, r10	; 0x0f
     536:	b8 8a       	std	Y+16, r11	; 0x10
						far1 = i;
						far2 = j;
						dcenter = dist / 2.0;
					}
					if (dist < distmin) {
						distmin = dist;
     538:	f6 2c       	mov	r15, r6
     53a:	e7 2c       	mov	r14, r7
     53c:	28 2c       	mov	r2, r8
     53e:	39 2c       	mov	r3, r9
	while (exit == 0) {
		getData(x, y);
		if (x[0] < 1023 && x[1] < 1023 && x[2] < 1023 && x[3] < 1023) {
			exit = 1;
			for (int i = 0; i < 4; i++) {
				for (int j = i; j < 4; j++) {
     540:	6d 89       	ldd	r22, Y+21	; 0x15
     542:	7e 89       	ldd	r23, Y+22	; 0x16
     544:	6f 5f       	subi	r22, 0xFF	; 255
     546:	7f 4f       	sbci	r23, 0xFF	; 255
     548:	7e 8b       	std	Y+22, r23	; 0x16
     54a:	6d 8b       	std	Y+21, r22	; 0x15
     54c:	64 30       	cpi	r22, 0x04	; 4
     54e:	71 05       	cpc	r23, r1
     550:	09 f0       	breq	.+2      	; 0x554 <determine_blobs+0x1ee>
     552:	91 cf       	rjmp	.-222    	; 0x476 <determine_blobs+0x110>
	int exit = 0;
	while (exit == 0) {
		getData(x, y);
		if (x[0] < 1023 && x[1] < 1023 && x[2] < 1023 && x[3] < 1023) {
			exit = 1;
			for (int i = 0; i < 4; i++) {
     554:	8f 81       	ldd	r24, Y+7	; 0x07
     556:	98 85       	ldd	r25, Y+8	; 0x08
     558:	01 96       	adiw	r24, 0x01	; 1
     55a:	98 87       	std	Y+8, r25	; 0x08
     55c:	8f 83       	std	Y+7, r24	; 0x07
     55e:	84 30       	cpi	r24, 0x04	; 4
     560:	91 05       	cpc	r25, r1
     562:	e1 f0       	breq	.+56     	; 0x59c <determine_blobs+0x236>
				for (int j = i; j < 4; j++) {
     564:	84 30       	cpi	r24, 0x04	; 4
     566:	91 05       	cpc	r25, r1
     568:	ac f7       	brge	.-22     	; 0x554 <determine_blobs+0x1ee>
					dist = sqrt((x[i]-x[j])*(x[i]-x[j])+(y[i]-y[j])*(y[i]-y[j]));
     56a:	fc 01       	movw	r30, r24
     56c:	ee 0f       	add	r30, r30
     56e:	ff 1f       	adc	r31, r31
     570:	8f 01       	movw	r16, r30
     572:	00 5d       	subi	r16, 0xD0	; 208
     574:	1e 4f       	sbci	r17, 0xFE	; 254
     576:	d8 01       	movw	r26, r16
     578:	0d 90       	ld	r0, X+
     57a:	bc 91       	ld	r27, X
     57c:	a0 2d       	mov	r26, r0
     57e:	bc 83       	std	Y+4, r27	; 0x04
     580:	ab 83       	std	Y+3, r26	; 0x03
     582:	e8 5d       	subi	r30, 0xD8	; 216
     584:	fe 4f       	sbci	r31, 0xFE	; 254
     586:	20 81       	ld	r18, Z
     588:	31 81       	ldd	r19, Z+1	; 0x01
     58a:	3e 83       	std	Y+6, r19	; 0x06
     58c:	2d 83       	std	Y+5, r18	; 0x05
	y[2] = blobs[7];
	y[3] = blobs[10];
	return 1;
} 

unsigned char determine_blobs() {
     58e:	fa 83       	std	Y+2, r31	; 0x02
     590:	e9 83       	std	Y+1, r30	; 0x01
			for (int i = 0; i < 4; i++) {
				for (int j = i; j < 4; j++) {
					dist = sqrt((x[i]-x[j])*(x[i]-x[j])+(y[i]-y[j])*(y[i]-y[j]));
					if (dist > distmax) {
						distmax = dist;
						far1 = i;
     592:	a8 2e       	mov	r10, r24
     594:	b9 2e       	mov	r11, r25
     596:	9e 8b       	std	Y+22, r25	; 0x16
     598:	8d 8b       	std	Y+21, r24	; 0x15
     59a:	6d cf       	rjmp	.-294    	; 0x476 <determine_blobs+0x110>
     59c:	86 2d       	mov	r24, r6
     59e:	97 2d       	mov	r25, r7
     5a0:	a8 2d       	mov	r26, r8
     5a2:	b9 2d       	mov	r27, r9
     5a4:	80 93 24 01 	sts	0x0124, r24
     5a8:	90 93 25 01 	sts	0x0125, r25
     5ac:	a0 93 26 01 	sts	0x0126, r26
     5b0:	b0 93 27 01 	sts	0x0127, r27
     5b4:	8d 2d       	mov	r24, r13
     5b6:	9c 2d       	mov	r25, r12
     5b8:	a4 2d       	mov	r26, r4
     5ba:	b5 2d       	mov	r27, r5
     5bc:	80 93 20 01 	sts	0x0120, r24
     5c0:	90 93 21 01 	sts	0x0121, r25
     5c4:	a0 93 22 01 	sts	0x0122, r26
     5c8:	b0 93 23 01 	sts	0x0123, r27
     5cc:	3d 85       	ldd	r19, Y+13	; 0x0d
     5ce:	30 93 1a 01 	sts	0x011A, r19
     5d2:	4e 85       	ldd	r20, Y+14	; 0x0e
     5d4:	40 93 1b 01 	sts	0x011B, r20
     5d8:	5b 85       	ldd	r21, Y+11	; 0x0b
     5da:	50 93 18 01 	sts	0x0118, r21
     5de:	6c 85       	ldd	r22, Y+12	; 0x0c
     5e0:	60 93 19 01 	sts	0x0119, r22
     5e4:	59 89       	ldd	r21, Y+17	; 0x11
     5e6:	4a 89       	ldd	r20, Y+18	; 0x12
     5e8:	3b 89       	ldd	r19, Y+19	; 0x13
     5ea:	2c 89       	ldd	r18, Y+20	; 0x14
     5ec:	85 2f       	mov	r24, r21
     5ee:	94 2f       	mov	r25, r20
     5f0:	a3 2f       	mov	r26, r19
     5f2:	b2 2f       	mov	r27, r18
     5f4:	80 93 1c 01 	sts	0x011C, r24
     5f8:	90 93 1d 01 	sts	0x011D, r25
     5fc:	a0 93 1e 01 	sts	0x011E, r26
     600:	b0 93 1f 01 	sts	0x011F, r27
     604:	8f 2d       	mov	r24, r15
     606:	9e 2d       	mov	r25, r14
     608:	a2 2d       	mov	r26, r2
     60a:	b3 2d       	mov	r27, r3
     60c:	80 93 00 01 	sts	0x0100, r24
     610:	90 93 01 01 	sts	0x0101, r25
     614:	a0 93 02 01 	sts	0x0102, r26
     618:	b0 93 03 01 	sts	0x0103, r27
     61c:	7f 85       	ldd	r23, Y+15	; 0x0f
     61e:	70 93 16 01 	sts	0x0116, r23
     622:	88 89       	ldd	r24, Y+16	; 0x10
     624:	80 93 17 01 	sts	0x0117, r24
     628:	99 85       	ldd	r25, Y+9	; 0x09
     62a:	90 93 14 01 	sts	0x0114, r25
     62e:	aa 85       	ldd	r26, Y+10	; 0x0a
     630:	a0 93 15 01 	sts	0x0115, r26
						close1 = i;
						close2 = j;
					}
				}
			}
			if (far1 == close1) {
     634:	80 91 1a 01 	lds	r24, 0x011A
     638:	90 91 1b 01 	lds	r25, 0x011B
     63c:	20 91 16 01 	lds	r18, 0x0116
     640:	30 91 17 01 	lds	r19, 0x0117
     644:	82 17       	cp	r24, r18
     646:	93 07       	cpc	r25, r19
     648:	19 f5       	brne	.+70     	; 0x690 <determine_blobs+0x32a>
				top = far1;
     64a:	90 93 3f 01 	sts	0x013F, r25
     64e:	80 93 3e 01 	sts	0x013E, r24
				bottom = far2;
     652:	40 91 18 01 	lds	r20, 0x0118
     656:	50 91 19 01 	lds	r21, 0x0119
     65a:	50 93 3d 01 	sts	0x013D, r21
     65e:	40 93 3c 01 	sts	0x013C, r20
				right = close2;
     662:	20 91 14 01 	lds	r18, 0x0114
     666:	30 91 15 01 	lds	r19, 0x0115
     66a:	30 93 39 01 	sts	0x0139, r19
     66e:	20 93 38 01 	sts	0x0138, r18
				//left + top + bottom + right = 1 + 2 + 3 + 4 = 10
				left = 10 - top - bottom - right;
     672:	6a e0       	ldi	r22, 0x0A	; 10
     674:	70 e0       	ldi	r23, 0x00	; 0
     676:	fb 01       	movw	r30, r22
     678:	e8 1b       	sub	r30, r24
     67a:	f9 0b       	sbc	r31, r25
     67c:	cf 01       	movw	r24, r30
     67e:	84 1b       	sub	r24, r20
     680:	95 0b       	sbc	r25, r21
     682:	82 1b       	sub	r24, r18
     684:	93 0b       	sbc	r25, r19
     686:	90 93 3b 01 	sts	0x013B, r25
     68a:	80 93 3a 01 	sts	0x013A, r24
     68e:	64 c0       	rjmp	.+200    	; 0x758 <determine_blobs+0x3f2>
			}
			else if (far1 == close2) {
     690:	49 85       	ldd	r20, Y+9	; 0x09
     692:	5a 85       	ldd	r21, Y+10	; 0x0a
     694:	84 17       	cp	r24, r20
     696:	95 07       	cpc	r25, r21
     698:	f9 f4       	brne	.+62     	; 0x6d8 <determine_blobs+0x372>
				top = far1;
     69a:	90 93 3f 01 	sts	0x013F, r25
     69e:	80 93 3e 01 	sts	0x013E, r24
				bottom = far2;
     6a2:	40 91 18 01 	lds	r20, 0x0118
     6a6:	50 91 19 01 	lds	r21, 0x0119
     6aa:	50 93 3d 01 	sts	0x013D, r21
     6ae:	40 93 3c 01 	sts	0x013C, r20
				right = close1;
     6b2:	30 93 39 01 	sts	0x0139, r19
     6b6:	20 93 38 01 	sts	0x0138, r18
				left = 10 - top - bottom - right;
     6ba:	6a e0       	ldi	r22, 0x0A	; 10
     6bc:	70 e0       	ldi	r23, 0x00	; 0
     6be:	db 01       	movw	r26, r22
     6c0:	a8 1b       	sub	r26, r24
     6c2:	b9 0b       	sbc	r27, r25
     6c4:	cd 01       	movw	r24, r26
     6c6:	84 1b       	sub	r24, r20
     6c8:	95 0b       	sbc	r25, r21
     6ca:	82 1b       	sub	r24, r18
     6cc:	93 0b       	sbc	r25, r19
     6ce:	90 93 3b 01 	sts	0x013B, r25
     6d2:	80 93 3a 01 	sts	0x013A, r24
     6d6:	40 c0       	rjmp	.+128    	; 0x758 <determine_blobs+0x3f2>
			}
			else if (far2 == close1) {
     6d8:	40 91 18 01 	lds	r20, 0x0118
     6dc:	50 91 19 01 	lds	r21, 0x0119
     6e0:	24 17       	cp	r18, r20
     6e2:	35 07       	cpc	r19, r21
     6e4:	f1 f4       	brne	.+60     	; 0x722 <determine_blobs+0x3bc>
				top = far2;
     6e6:	30 93 3f 01 	sts	0x013F, r19
     6ea:	20 93 3e 01 	sts	0x013E, r18
				bottom = far1;
     6ee:	90 93 3d 01 	sts	0x013D, r25
     6f2:	80 93 3c 01 	sts	0x013C, r24
				right = close2;
     6f6:	e9 85       	ldd	r30, Y+9	; 0x09
     6f8:	fa 85       	ldd	r31, Y+10	; 0x0a
     6fa:	f0 93 39 01 	sts	0x0139, r31
     6fe:	e0 93 38 01 	sts	0x0138, r30
				left = 10 - top - bottom - right;
     702:	4a e0       	ldi	r20, 0x0A	; 10
     704:	50 e0       	ldi	r21, 0x00	; 0
     706:	ba 01       	movw	r22, r20
     708:	62 1b       	sub	r22, r18
     70a:	73 0b       	sbc	r23, r19
     70c:	db 01       	movw	r26, r22
     70e:	a8 1b       	sub	r26, r24
     710:	b9 0b       	sbc	r27, r25
     712:	cd 01       	movw	r24, r26
     714:	8e 1b       	sub	r24, r30
     716:	9f 0b       	sbc	r25, r31
     718:	90 93 3b 01 	sts	0x013B, r25
     71c:	80 93 3a 01 	sts	0x013A, r24
     720:	1b c0       	rjmp	.+54     	; 0x758 <determine_blobs+0x3f2>
			}
			else {
				top = far2;
     722:	50 93 3f 01 	sts	0x013F, r21
     726:	40 93 3e 01 	sts	0x013E, r20
				bottom = far1;
     72a:	90 93 3d 01 	sts	0x013D, r25
     72e:	80 93 3c 01 	sts	0x013C, r24
				right = close1;
     732:	30 93 39 01 	sts	0x0139, r19
     736:	20 93 38 01 	sts	0x0138, r18
				left = 10 - top - bottom - right;
     73a:	6a e0       	ldi	r22, 0x0A	; 10
     73c:	70 e0       	ldi	r23, 0x00	; 0
     73e:	fb 01       	movw	r30, r22
     740:	e4 1b       	sub	r30, r20
     742:	f5 0b       	sbc	r31, r21
     744:	bf 01       	movw	r22, r30
     746:	68 1b       	sub	r22, r24
     748:	79 0b       	sbc	r23, r25
     74a:	cb 01       	movw	r24, r22
     74c:	82 1b       	sub	r24, r18
     74e:	93 0b       	sbc	r25, r19
     750:	90 93 3b 01 	sts	0x013B, r25
     754:	80 93 3a 01 	sts	0x013A, r24
			}
		}
	}
	return 1;
}
     758:	81 e0       	ldi	r24, 0x01	; 1
     75a:	66 96       	adiw	r28, 0x16	; 22
     75c:	0f b6       	in	r0, 0x3f	; 63
     75e:	f8 94       	cli
     760:	de bf       	out	0x3e, r29	; 62
     762:	0f be       	out	0x3f, r0	; 63
     764:	cd bf       	out	0x3d, r28	; 61
     766:	df 91       	pop	r29
     768:	cf 91       	pop	r28
     76a:	1f 91       	pop	r17
     76c:	0f 91       	pop	r16
     76e:	ff 90       	pop	r15
     770:	ef 90       	pop	r14
     772:	df 90       	pop	r13
     774:	cf 90       	pop	r12
     776:	bf 90       	pop	r11
     778:	af 90       	pop	r10
     77a:	9f 90       	pop	r9
     77c:	8f 90       	pop	r8
     77e:	7f 90       	pop	r7
     780:	6f 90       	pop	r6
     782:	5f 90       	pop	r5
     784:	4f 90       	pop	r4
     786:	3f 90       	pop	r3
     788:	2f 90       	pop	r2
     78a:	08 95       	ret

0000078c <localize>:
	determine_blobs();
	
	return 1;
}

unsigned char localize (float* data) {
     78c:	2f 92       	push	r2
     78e:	3f 92       	push	r3
     790:	4f 92       	push	r4
     792:	5f 92       	push	r5
     794:	6f 92       	push	r6
     796:	7f 92       	push	r7
     798:	8f 92       	push	r8
     79a:	9f 92       	push	r9
     79c:	af 92       	push	r10
     79e:	bf 92       	push	r11
     7a0:	cf 92       	push	r12
     7a2:	df 92       	push	r13
     7a4:	ef 92       	push	r14
     7a6:	ff 92       	push	r15
     7a8:	0f 93       	push	r16
     7aa:	1f 93       	push	r17
     7ac:	cf 93       	push	r28
     7ae:	df 93       	push	r29
     7b0:	cd b7       	in	r28, 0x3d	; 61
     7b2:	de b7       	in	r29, 0x3e	; 62
     7b4:	2a 97       	sbiw	r28, 0x0a	; 10
     7b6:	0f b6       	in	r0, 0x3f	; 63
     7b8:	f8 94       	cli
     7ba:	de bf       	out	0x3e, r29	; 62
     7bc:	0f be       	out	0x3f, r0	; 63
     7be:	cd bf       	out	0x3d, r28	; 61
     7c0:	9a 87       	std	Y+10, r25	; 0x0a
     7c2:	89 87       	std	Y+9, r24	; 0x09
	m_wii_read(blobs);
     7c4:	80 e4       	ldi	r24, 0x40	; 64
     7c6:	91 e0       	ldi	r25, 0x01	; 1
     7c8:	0e 94 eb 07 	call	0xfd6	; 0xfd6 <m_wii_read>
	determine_blobs();
     7cc:	0e 94 b3 01 	call	0x366	; 0x366 <determine_blobs>
	float theta_top_right = (float) atan2((double) 11.655, (double) (14.5+8.741));
	float theta_bottom_left = (float) atan2((double)10.563, (double) (14.5+2.483));
	float theta_bottom_right = (float) atan2((double) 11.655, (double) (14.5-8.741));

	
	if (x[top] < 1023 && x[bottom] < 1023) {
     7d0:	c0 90 3e 01 	lds	r12, 0x013E
     7d4:	d0 90 3f 01 	lds	r13, 0x013F
     7d8:	f6 01       	movw	r30, r12
     7da:	ee 0f       	add	r30, r30
     7dc:	ff 1f       	adc	r31, r31
     7de:	e0 5d       	subi	r30, 0xD0	; 208
     7e0:	fe 4f       	sbci	r31, 0xFE	; 254
     7e2:	e0 80       	ld	r14, Z
     7e4:	f1 80       	ldd	r15, Z+1	; 0x01
     7e6:	8f ef       	ldi	r24, 0xFF	; 255
     7e8:	e8 16       	cp	r14, r24
     7ea:	83 e0       	ldi	r24, 0x03	; 3
     7ec:	f8 06       	cpc	r15, r24
     7ee:	08 f0       	brcs	.+2      	; 0x7f2 <localize+0x66>
     7f0:	f3 c0       	rjmp	.+486    	; 0x9d8 <localize+0x24c>
     7f2:	80 90 3c 01 	lds	r8, 0x013C
     7f6:	90 90 3d 01 	lds	r9, 0x013D
     7fa:	f4 01       	movw	r30, r8
     7fc:	ee 0f       	add	r30, r30
     7fe:	ff 1f       	adc	r31, r31
     800:	e0 5d       	subi	r30, 0xD0	; 208
     802:	fe 4f       	sbci	r31, 0xFE	; 254
     804:	a0 80       	ld	r10, Z
     806:	b1 80       	ldd	r11, Z+1	; 0x01
     808:	ef ef       	ldi	r30, 0xFF	; 255
     80a:	ae 16       	cp	r10, r30
     80c:	e3 e0       	ldi	r30, 0x03	; 3
     80e:	be 06       	cpc	r11, r30
     810:	08 f0       	brcs	.+2      	; 0x814 <localize+0x88>
     812:	e4 c0       	rjmp	.+456    	; 0x9dc <localize+0x250>
		//calculate and store pixel-space position and orientation
		posx = (float) ((128.0/1023.0)*((float)(x[top]+x[bottom]))/2.0-rcenterx);
     814:	40 90 08 01 	lds	r4, 0x0108
     818:	50 90 09 01 	lds	r5, 0x0109
     81c:	60 90 0a 01 	lds	r6, 0x010A
     820:	70 90 0b 01 	lds	r7, 0x010B
     824:	b5 01       	movw	r22, r10
     826:	6e 0d       	add	r22, r14
     828:	7f 1d       	adc	r23, r15
     82a:	80 e0       	ldi	r24, 0x00	; 0
     82c:	90 e0       	ldi	r25, 0x00	; 0
     82e:	0e 94 e6 0a 	call	0x15cc	; 0x15cc <__floatunsisf>
     832:	28 e0       	ldi	r18, 0x08	; 8
     834:	30 e2       	ldi	r19, 0x20	; 32
     836:	40 e0       	ldi	r20, 0x00	; 0
     838:	5e e3       	ldi	r21, 0x3E	; 62
     83a:	0e 94 dd 0b 	call	0x17ba	; 0x17ba <__mulsf3>
     83e:	20 e0       	ldi	r18, 0x00	; 0
     840:	30 e0       	ldi	r19, 0x00	; 0
     842:	40 e0       	ldi	r20, 0x00	; 0
     844:	5f e3       	ldi	r21, 0x3F	; 63
     846:	0e 94 dd 0b 	call	0x17ba	; 0x17ba <__mulsf3>
     84a:	a3 01       	movw	r20, r6
     84c:	92 01       	movw	r18, r4
     84e:	0e 94 83 09 	call	0x1306	; 0x1306 <__subsf3>
     852:	16 2f       	mov	r17, r22
     854:	07 2f       	mov	r16, r23
     856:	38 2e       	mov	r3, r24
     858:	29 2e       	mov	r2, r25
		posy = (float) ((96.0/1023.0)*((float)(y[top]+y[bottom]))/2.0-rcentery);
     85a:	f6 01       	movw	r30, r12
     85c:	ee 0f       	add	r30, r30
     85e:	ff 1f       	adc	r31, r31
     860:	e8 5d       	subi	r30, 0xD8	; 216
     862:	fe 4f       	sbci	r31, 0xFE	; 254
     864:	c0 80       	ld	r12, Z
     866:	d1 80       	ldd	r13, Z+1	; 0x01
     868:	f4 01       	movw	r30, r8
     86a:	ee 0f       	add	r30, r30
     86c:	ff 1f       	adc	r31, r31
     86e:	e8 5d       	subi	r30, 0xD8	; 216
     870:	fe 4f       	sbci	r31, 0xFE	; 254
     872:	80 80       	ld	r8, Z
     874:	91 80       	ldd	r9, Z+1	; 0x01
     876:	b4 01       	movw	r22, r8
     878:	6c 0d       	add	r22, r12
     87a:	7d 1d       	adc	r23, r13
     87c:	80 e0       	ldi	r24, 0x00	; 0
     87e:	90 e0       	ldi	r25, 0x00	; 0
     880:	0e 94 e6 0a 	call	0x15cc	; 0x15cc <__floatunsisf>
     884:	2c e0       	ldi	r18, 0x0C	; 12
     886:	30 e3       	ldi	r19, 0x30	; 48
     888:	40 ec       	ldi	r20, 0xC0	; 192
     88a:	5d e3       	ldi	r21, 0x3D	; 61
     88c:	0e 94 dd 0b 	call	0x17ba	; 0x17ba <__mulsf3>
     890:	20 e0       	ldi	r18, 0x00	; 0
     892:	30 e0       	ldi	r19, 0x00	; 0
     894:	40 e0       	ldi	r20, 0x00	; 0
     896:	5f e3       	ldi	r21, 0x3F	; 63
     898:	0e 94 dd 0b 	call	0x17ba	; 0x17ba <__mulsf3>
     89c:	20 91 04 01 	lds	r18, 0x0104
     8a0:	30 91 05 01 	lds	r19, 0x0105
     8a4:	40 91 06 01 	lds	r20, 0x0106
     8a8:	50 91 07 01 	lds	r21, 0x0107
     8ac:	0e 94 83 09 	call	0x1306	; 0x1306 <__subsf3>
     8b0:	69 83       	std	Y+1, r22	; 0x01
     8b2:	7a 83       	std	Y+2, r23	; 0x02
     8b4:	8b 83       	std	Y+3, r24	; 0x03
     8b6:	9c 83       	std	Y+4, r25	; 0x04
		
		//calculate and store angle
		angle = (float) atan2(((double) (x[top]-x[bottom])),((double) (y[top]-y[bottom])));
     8b8:	b6 01       	movw	r22, r12
     8ba:	68 19       	sub	r22, r8
     8bc:	79 09       	sbc	r23, r9
     8be:	80 e0       	ldi	r24, 0x00	; 0
     8c0:	90 e0       	ldi	r25, 0x00	; 0
     8c2:	0e 94 e6 0a 	call	0x15cc	; 0x15cc <__floatunsisf>
     8c6:	6d 83       	std	Y+5, r22	; 0x05
     8c8:	7e 83       	std	Y+6, r23	; 0x06
     8ca:	8f 83       	std	Y+7, r24	; 0x07
     8cc:	98 87       	std	Y+8, r25	; 0x08
     8ce:	b7 01       	movw	r22, r14
     8d0:	6a 19       	sub	r22, r10
     8d2:	7b 09       	sbc	r23, r11
     8d4:	80 e0       	ldi	r24, 0x00	; 0
     8d6:	90 e0       	ldi	r25, 0x00	; 0
     8d8:	0e 94 e6 0a 	call	0x15cc	; 0x15cc <__floatunsisf>
     8dc:	2d 81       	ldd	r18, Y+5	; 0x05
     8de:	3e 81       	ldd	r19, Y+6	; 0x06
     8e0:	4f 81       	ldd	r20, Y+7	; 0x07
     8e2:	58 85       	ldd	r21, Y+8	; 0x08
     8e4:	0e 94 f7 09 	call	0x13ee	; 0x13ee <atan2>
     8e8:	6b 01       	movw	r12, r22
     8ea:	7c 01       	movw	r14, r24
		phi = -1.0 * ((float) atan2((double) posy, (double) posx));
     8ec:	21 2f       	mov	r18, r17
     8ee:	30 2f       	mov	r19, r16
     8f0:	43 2d       	mov	r20, r3
     8f2:	52 2d       	mov	r21, r2
     8f4:	b9 81       	ldd	r27, Y+1	; 0x01
     8f6:	aa 81       	ldd	r26, Y+2	; 0x02
     8f8:	bb 80       	ldd	r11, Y+3	; 0x03
     8fa:	ac 80       	ldd	r10, Y+4	; 0x04
     8fc:	6b 2f       	mov	r22, r27
     8fe:	7a 2f       	mov	r23, r26
     900:	8b 2d       	mov	r24, r11
     902:	9a 2d       	mov	r25, r10
     904:	0e 94 f7 09 	call	0x13ee	; 0x13ee <atan2>
     908:	6d 83       	std	Y+5, r22	; 0x05
     90a:	7e 83       	std	Y+6, r23	; 0x06
     90c:	8f 83       	std	Y+7, r24	; 0x07
     90e:	98 87       	std	Y+8, r25	; 0x08
		
		r = (float) sqrt((double)(posx*posx + posy*posy));
     910:	21 2f       	mov	r18, r17
     912:	30 2f       	mov	r19, r16
     914:	43 2d       	mov	r20, r3
     916:	52 2d       	mov	r21, r2
     918:	61 2f       	mov	r22, r17
     91a:	70 2f       	mov	r23, r16
     91c:	83 2d       	mov	r24, r3
     91e:	92 2d       	mov	r25, r2
     920:	0e 94 dd 0b 	call	0x17ba	; 0x17ba <__mulsf3>
     924:	4b 01       	movw	r8, r22
     926:	5c 01       	movw	r10, r24
     928:	79 81       	ldd	r23, Y+1	; 0x01
     92a:	6a 81       	ldd	r22, Y+2	; 0x02
     92c:	9b 81       	ldd	r25, Y+3	; 0x03
     92e:	8c 81       	ldd	r24, Y+4	; 0x04
     930:	27 2f       	mov	r18, r23
     932:	36 2f       	mov	r19, r22
     934:	49 2f       	mov	r20, r25
     936:	58 2f       	mov	r21, r24
     938:	67 2f       	mov	r22, r23
     93a:	73 2f       	mov	r23, r19
     93c:	84 2f       	mov	r24, r20
     93e:	95 2f       	mov	r25, r21
     940:	0e 94 dd 0b 	call	0x17ba	; 0x17ba <__mulsf3>
     944:	9b 01       	movw	r18, r22
     946:	ac 01       	movw	r20, r24
     948:	c5 01       	movw	r24, r10
     94a:	b4 01       	movw	r22, r8
     94c:	0e 94 84 09 	call	0x1308	; 0x1308 <__addsf3>
     950:	0e 94 4a 0c 	call	0x1894	; 0x1894 <sqrt>
     954:	4b 01       	movw	r8, r22
     956:	5c 01       	movw	r10, r24
		
		
		data[0] = rcenterx - r * (float) cos((double) (angle - phi));
     958:	2d 81       	ldd	r18, Y+5	; 0x05
     95a:	3e 81       	ldd	r19, Y+6	; 0x06
     95c:	4f 81       	ldd	r20, Y+7	; 0x07
     95e:	58 85       	ldd	r21, Y+8	; 0x08
     960:	c7 01       	movw	r24, r14
     962:	b6 01       	movw	r22, r12
     964:	0e 94 84 09 	call	0x1308	; 0x1308 <__addsf3>
     968:	26 2e       	mov	r2, r22
     96a:	37 2e       	mov	r3, r23
     96c:	08 2f       	mov	r16, r24
     96e:	19 2f       	mov	r17, r25
     970:	80 2f       	mov	r24, r16
     972:	91 2f       	mov	r25, r17
     974:	0e 94 4a 0a 	call	0x1494	; 0x1494 <cos>
     978:	a5 01       	movw	r20, r10
     97a:	94 01       	movw	r18, r8
     97c:	0e 94 dd 0b 	call	0x17ba	; 0x17ba <__mulsf3>
     980:	9b 01       	movw	r18, r22
     982:	ac 01       	movw	r20, r24
     984:	c3 01       	movw	r24, r6
     986:	b2 01       	movw	r22, r4
     988:	0e 94 83 09 	call	0x1306	; 0x1306 <__subsf3>
     98c:	e9 85       	ldd	r30, Y+9	; 0x09
     98e:	fa 85       	ldd	r31, Y+10	; 0x0a
     990:	60 83       	st	Z, r22
     992:	71 83       	std	Z+1, r23	; 0x01
     994:	82 83       	std	Z+2, r24	; 0x02
     996:	93 83       	std	Z+3, r25	; 0x03
		data[1] = rcentery + r * (float) sin((double) (angle - phi));
     998:	62 2d       	mov	r22, r2
     99a:	73 2d       	mov	r23, r3
     99c:	80 2f       	mov	r24, r16
     99e:	91 2f       	mov	r25, r17
     9a0:	0e 94 40 0c 	call	0x1880	; 0x1880 <sin>
     9a4:	a5 01       	movw	r20, r10
     9a6:	94 01       	movw	r18, r8
     9a8:	0e 94 dd 0b 	call	0x17ba	; 0x17ba <__mulsf3>
     9ac:	20 91 04 01 	lds	r18, 0x0104
     9b0:	30 91 05 01 	lds	r19, 0x0105
     9b4:	40 91 06 01 	lds	r20, 0x0106
     9b8:	50 91 07 01 	lds	r21, 0x0107
     9bc:	0e 94 84 09 	call	0x1308	; 0x1308 <__addsf3>
     9c0:	e9 85       	ldd	r30, Y+9	; 0x09
     9c2:	fa 85       	ldd	r31, Y+10	; 0x0a
     9c4:	64 83       	std	Z+4, r22	; 0x04
     9c6:	75 83       	std	Z+5, r23	; 0x05
     9c8:	86 83       	std	Z+6, r24	; 0x06
     9ca:	97 83       	std	Z+7, r25	; 0x07
		data[2] = angle;
     9cc:	c0 86       	std	Z+8, r12	; 0x08
     9ce:	d1 86       	std	Z+9, r13	; 0x09
     9d0:	e2 86       	std	Z+10, r14	; 0x0a
     9d2:	f3 86       	std	Z+11, r15	; 0x0b
		return 1;
     9d4:	81 e0       	ldi	r24, 0x01	; 1
     9d6:	03 c0       	rjmp	.+6      	; 0x9de <localize+0x252>
		data[1] = rcentery - r * (float)sin((double)(angle - phi));
		data[2] = angle;
		return 1;
	}
	*/
	return 0;
     9d8:	80 e0       	ldi	r24, 0x00	; 0
     9da:	01 c0       	rjmp	.+2      	; 0x9de <localize+0x252>
     9dc:	80 e0       	ldi	r24, 0x00	; 0
     9de:	2a 96       	adiw	r28, 0x0a	; 10
     9e0:	0f b6       	in	r0, 0x3f	; 63
     9e2:	f8 94       	cli
     9e4:	de bf       	out	0x3e, r29	; 62
     9e6:	0f be       	out	0x3f, r0	; 63
     9e8:	cd bf       	out	0x3d, r28	; 61
     9ea:	df 91       	pop	r29
     9ec:	cf 91       	pop	r28
     9ee:	1f 91       	pop	r17
     9f0:	0f 91       	pop	r16
     9f2:	ff 90       	pop	r15
     9f4:	ef 90       	pop	r14
     9f6:	df 90       	pop	r13
     9f8:	cf 90       	pop	r12
     9fa:	bf 90       	pop	r11
     9fc:	af 90       	pop	r10
     9fe:	9f 90       	pop	r9
     a00:	8f 90       	pop	r8
     a02:	7f 90       	pop	r7
     a04:	6f 90       	pop	r6
     a06:	5f 90       	pop	r5
     a08:	4f 90       	pop	r4
     a0a:	3f 90       	pop	r3
     a0c:	2f 90       	pop	r2
     a0e:	08 95       	ret

00000a10 <m_usb_init>:
     a10:	81 e0       	ldi	r24, 0x01	; 1
     a12:	80 93 d7 00 	sts	0x00D7, r24
     a16:	80 ea       	ldi	r24, 0xA0	; 160
     a18:	80 93 d8 00 	sts	0x00D8, r24
     a1c:	82 e1       	ldi	r24, 0x12	; 18
     a1e:	89 bd       	out	0x29, r24	; 41
     a20:	09 b4       	in	r0, 0x29	; 41
     a22:	00 fe       	sbrs	r0, 0
     a24:	fd cf       	rjmp	.-6      	; 0xa20 <m_usb_init+0x10>
     a26:	80 e9       	ldi	r24, 0x90	; 144
     a28:	80 93 d8 00 	sts	0x00D8, r24
     a2c:	10 92 e0 00 	sts	0x00E0, r1
     a30:	10 92 59 01 	sts	0x0159, r1
     a34:	10 92 5a 01 	sts	0x015A, r1
     a38:	8c e0       	ldi	r24, 0x0C	; 12
     a3a:	80 93 e2 00 	sts	0x00E2, r24
     a3e:	78 94       	sei
     a40:	08 95       	ret

00000a42 <m_usb_tx_char>:
     a42:	cf 93       	push	r28
     a44:	df 93       	push	r29
     a46:	90 91 59 01 	lds	r25, 0x0159
     a4a:	99 23       	and	r25, r25
     a4c:	09 f4       	brne	.+2      	; 0xa50 <m_usb_tx_char+0xe>
     a4e:	4d c0       	rjmp	.+154    	; 0xaea <m_usb_tx_char+0xa8>
     a50:	9f b7       	in	r25, 0x3f	; 63
     a52:	f8 94       	cli
     a54:	24 e0       	ldi	r18, 0x04	; 4
     a56:	20 93 e9 00 	sts	0x00E9, r18
     a5a:	20 91 5b 01 	lds	r18, 0x015B
     a5e:	22 23       	and	r18, r18
     a60:	49 f0       	breq	.+18     	; 0xa74 <m_usb_tx_char+0x32>
     a62:	20 91 e8 00 	lds	r18, 0x00E8
     a66:	25 fd       	sbrc	r18, 5
     a68:	03 c0       	rjmp	.+6      	; 0xa70 <m_usb_tx_char+0x2e>
     a6a:	9f bf       	out	0x3f, r25	; 63
     a6c:	8f ef       	ldi	r24, 0xFF	; 255
     a6e:	42 c0       	rjmp	.+132    	; 0xaf4 <m_usb_tx_char+0xb2>
     a70:	10 92 5b 01 	sts	0x015B, r1
     a74:	30 91 e4 00 	lds	r19, 0x00E4
     a78:	37 5e       	subi	r19, 0xE7	; 231
     a7a:	20 91 e8 00 	lds	r18, 0x00E8
     a7e:	25 fd       	sbrc	r18, 5
     a80:	25 c0       	rjmp	.+74     	; 0xacc <m_usb_tx_char+0x8a>
     a82:	9f bf       	out	0x3f, r25	; 63
     a84:	90 91 e4 00 	lds	r25, 0x00E4
     a88:	93 17       	cp	r25, r19
     a8a:	49 f0       	breq	.+18     	; 0xa9e <m_usb_tx_char+0x5c>
     a8c:	90 91 59 01 	lds	r25, 0x0159
     a90:	91 11       	cpse	r25, r1
     a92:	0f c0       	rjmp	.+30     	; 0xab2 <m_usb_tx_char+0x70>
     a94:	2c c0       	rjmp	.+88     	; 0xaee <m_usb_tx_char+0xac>
     a96:	9f bf       	out	0x3f, r25	; 63
     a98:	98 81       	ld	r25, Y
     a9a:	93 13       	cpse	r25, r19
     a9c:	05 c0       	rjmp	.+10     	; 0xaa8 <m_usb_tx_char+0x66>
     a9e:	81 e0       	ldi	r24, 0x01	; 1
     aa0:	80 93 5b 01 	sts	0x015B, r24
     aa4:	8f ef       	ldi	r24, 0xFF	; 255
     aa6:	26 c0       	rjmp	.+76     	; 0xaf4 <m_usb_tx_char+0xb2>
     aa8:	90 91 59 01 	lds	r25, 0x0159
     aac:	91 11       	cpse	r25, r1
     aae:	08 c0       	rjmp	.+16     	; 0xac0 <m_usb_tx_char+0x7e>
     ab0:	20 c0       	rjmp	.+64     	; 0xaf2 <m_usb_tx_char+0xb0>
     ab2:	a9 ee       	ldi	r26, 0xE9	; 233
     ab4:	b0 e0       	ldi	r27, 0x00	; 0
     ab6:	44 e0       	ldi	r20, 0x04	; 4
     ab8:	e8 ee       	ldi	r30, 0xE8	; 232
     aba:	f0 e0       	ldi	r31, 0x00	; 0
     abc:	c4 ee       	ldi	r28, 0xE4	; 228
     abe:	d0 e0       	ldi	r29, 0x00	; 0
     ac0:	9f b7       	in	r25, 0x3f	; 63
     ac2:	f8 94       	cli
     ac4:	4c 93       	st	X, r20
     ac6:	20 81       	ld	r18, Z
     ac8:	25 ff       	sbrs	r18, 5
     aca:	e5 cf       	rjmp	.-54     	; 0xa96 <m_usb_tx_char+0x54>
     acc:	80 93 f1 00 	sts	0x00F1, r24
     ad0:	80 91 e8 00 	lds	r24, 0x00E8
     ad4:	85 fd       	sbrc	r24, 5
     ad6:	03 c0       	rjmp	.+6      	; 0xade <m_usb_tx_char+0x9c>
     ad8:	8a e3       	ldi	r24, 0x3A	; 58
     ada:	80 93 e8 00 	sts	0x00E8, r24
     ade:	85 e0       	ldi	r24, 0x05	; 5
     ae0:	80 93 58 01 	sts	0x0158, r24
     ae4:	9f bf       	out	0x3f, r25	; 63
     ae6:	80 e0       	ldi	r24, 0x00	; 0
     ae8:	05 c0       	rjmp	.+10     	; 0xaf4 <m_usb_tx_char+0xb2>
     aea:	8f ef       	ldi	r24, 0xFF	; 255
     aec:	03 c0       	rjmp	.+6      	; 0xaf4 <m_usb_tx_char+0xb2>
     aee:	8f ef       	ldi	r24, 0xFF	; 255
     af0:	01 c0       	rjmp	.+2      	; 0xaf4 <m_usb_tx_char+0xb2>
     af2:	8f ef       	ldi	r24, 0xFF	; 255
     af4:	df 91       	pop	r29
     af6:	cf 91       	pop	r28
     af8:	08 95       	ret

00000afa <__vector_10>:
     afa:	1f 92       	push	r1
     afc:	0f 92       	push	r0
     afe:	0f b6       	in	r0, 0x3f	; 63
     b00:	0f 92       	push	r0
     b02:	11 24       	eor	r1, r1
     b04:	8f 93       	push	r24
     b06:	9f 93       	push	r25
     b08:	ef 93       	push	r30
     b0a:	ff 93       	push	r31
     b0c:	e1 ee       	ldi	r30, 0xE1	; 225
     b0e:	f0 e0       	ldi	r31, 0x00	; 0
     b10:	80 81       	ld	r24, Z
     b12:	10 82       	st	Z, r1
     b14:	83 ff       	sbrs	r24, 3
     b16:	11 c0       	rjmp	.+34     	; 0xb3a <__stack+0x3b>
     b18:	10 92 e9 00 	sts	0x00E9, r1
     b1c:	91 e0       	ldi	r25, 0x01	; 1
     b1e:	90 93 eb 00 	sts	0x00EB, r25
     b22:	10 92 ec 00 	sts	0x00EC, r1
     b26:	92 e1       	ldi	r25, 0x12	; 18
     b28:	90 93 ed 00 	sts	0x00ED, r25
     b2c:	98 e0       	ldi	r25, 0x08	; 8
     b2e:	90 93 f0 00 	sts	0x00F0, r25
     b32:	10 92 59 01 	sts	0x0159, r1
     b36:	10 92 5a 01 	sts	0x015A, r1
     b3a:	82 ff       	sbrs	r24, 2
     b3c:	13 c0       	rjmp	.+38     	; 0xb64 <__stack+0x65>
     b3e:	80 91 59 01 	lds	r24, 0x0159
     b42:	88 23       	and	r24, r24
     b44:	79 f0       	breq	.+30     	; 0xb64 <__stack+0x65>
     b46:	80 91 58 01 	lds	r24, 0x0158
     b4a:	88 23       	and	r24, r24
     b4c:	59 f0       	breq	.+22     	; 0xb64 <__stack+0x65>
     b4e:	81 50       	subi	r24, 0x01	; 1
     b50:	80 93 58 01 	sts	0x0158, r24
     b54:	81 11       	cpse	r24, r1
     b56:	06 c0       	rjmp	.+12     	; 0xb64 <__stack+0x65>
     b58:	84 e0       	ldi	r24, 0x04	; 4
     b5a:	80 93 e9 00 	sts	0x00E9, r24
     b5e:	8a e3       	ldi	r24, 0x3A	; 58
     b60:	80 93 e8 00 	sts	0x00E8, r24
     b64:	ff 91       	pop	r31
     b66:	ef 91       	pop	r30
     b68:	9f 91       	pop	r25
     b6a:	8f 91       	pop	r24
     b6c:	0f 90       	pop	r0
     b6e:	0f be       	out	0x3f, r0	; 63
     b70:	0f 90       	pop	r0
     b72:	1f 90       	pop	r1
     b74:	18 95       	reti

00000b76 <__vector_11>:
     b76:	1f 92       	push	r1
     b78:	0f 92       	push	r0
     b7a:	0f b6       	in	r0, 0x3f	; 63
     b7c:	0f 92       	push	r0
     b7e:	11 24       	eor	r1, r1
     b80:	0f 93       	push	r16
     b82:	1f 93       	push	r17
     b84:	2f 93       	push	r18
     b86:	3f 93       	push	r19
     b88:	4f 93       	push	r20
     b8a:	5f 93       	push	r21
     b8c:	6f 93       	push	r22
     b8e:	7f 93       	push	r23
     b90:	8f 93       	push	r24
     b92:	9f 93       	push	r25
     b94:	af 93       	push	r26
     b96:	bf 93       	push	r27
     b98:	cf 93       	push	r28
     b9a:	df 93       	push	r29
     b9c:	ef 93       	push	r30
     b9e:	ff 93       	push	r31
     ba0:	10 92 e9 00 	sts	0x00E9, r1
     ba4:	80 91 e8 00 	lds	r24, 0x00E8
     ba8:	83 ff       	sbrs	r24, 3
     baa:	51 c1       	rjmp	.+674    	; 0xe4e <__vector_11+0x2d8>
     bac:	e1 ef       	ldi	r30, 0xF1	; 241
     bae:	f0 e0       	ldi	r31, 0x00	; 0
     bb0:	70 81       	ld	r23, Z
     bb2:	40 81       	ld	r20, Z
     bb4:	20 81       	ld	r18, Z
     bb6:	30 81       	ld	r19, Z
     bb8:	93 2f       	mov	r25, r19
     bba:	80 e0       	ldi	r24, 0x00	; 0
     bbc:	dc 01       	movw	r26, r24
     bbe:	a2 2b       	or	r26, r18
     bc0:	9d 01       	movw	r18, r26
     bc2:	50 81       	ld	r21, Z
     bc4:	60 81       	ld	r22, Z
     bc6:	96 2f       	mov	r25, r22
     bc8:	80 e0       	ldi	r24, 0x00	; 0
     bca:	85 2b       	or	r24, r21
     bcc:	a0 81       	ld	r26, Z
     bce:	b0 81       	ld	r27, Z
     bd0:	52 ef       	ldi	r21, 0xF2	; 242
     bd2:	50 93 e8 00 	sts	0x00E8, r21
     bd6:	46 30       	cpi	r20, 0x06	; 6
     bd8:	09 f0       	breq	.+2      	; 0xbdc <__vector_11+0x66>
     bda:	5c c0       	rjmp	.+184    	; 0xc94 <__vector_11+0x11e>
     bdc:	04 c0       	rjmp	.+8      	; 0xbe6 <__vector_11+0x70>
     bde:	81 e2       	ldi	r24, 0x21	; 33
     be0:	80 93 eb 00 	sts	0x00EB, r24
     be4:	3b c1       	rjmp	.+630    	; 0xe5c <__vector_11+0x2e6>
     be6:	c6 e0       	ldi	r28, 0x06	; 6
     be8:	4d ef       	ldi	r20, 0xFD	; 253
     bea:	50 e0       	ldi	r21, 0x00	; 0
     bec:	fa 01       	movw	r30, r20
     bee:	65 91       	lpm	r22, Z+
     bf0:	74 91       	lpm	r23, Z
     bf2:	26 17       	cp	r18, r22
     bf4:	37 07       	cpc	r19, r23
     bf6:	19 f0       	breq	.+6      	; 0xbfe <__vector_11+0x88>
     bf8:	49 5f       	subi	r20, 0xF9	; 249
     bfa:	5f 4f       	sbci	r21, 0xFF	; 255
     bfc:	20 c0       	rjmp	.+64     	; 0xc3e <__vector_11+0xc8>
     bfe:	fa 01       	movw	r30, r20
     c00:	32 96       	adiw	r30, 0x02	; 2
     c02:	65 91       	lpm	r22, Z+
     c04:	74 91       	lpm	r23, Z
     c06:	86 17       	cp	r24, r22
     c08:	97 07       	cpc	r25, r23
     c0a:	19 f0       	breq	.+6      	; 0xc12 <__vector_11+0x9c>
     c0c:	49 5f       	subi	r20, 0xF9	; 249
     c0e:	5f 4f       	sbci	r21, 0xFF	; 255
     c10:	16 c0       	rjmp	.+44     	; 0xc3e <__vector_11+0xc8>
     c12:	fa 01       	movw	r30, r20
     c14:	34 96       	adiw	r30, 0x04	; 4
     c16:	85 91       	lpm	r24, Z+
     c18:	94 91       	lpm	r25, Z
     c1a:	28 2f       	mov	r18, r24
     c1c:	39 2f       	mov	r19, r25
     c1e:	fa 01       	movw	r30, r20
     c20:	36 96       	adiw	r30, 0x06	; 6
     c22:	44 91       	lpm	r20, Z
     c24:	9b 2f       	mov	r25, r27
     c26:	80 e0       	ldi	r24, 0x00	; 0
     c28:	8a 2b       	or	r24, r26
     c2a:	8f 3f       	cpi	r24, 0xFF	; 255
     c2c:	91 05       	cpc	r25, r1
     c2e:	19 f0       	breq	.+6      	; 0xc36 <__vector_11+0xc0>
     c30:	10 f0       	brcs	.+4      	; 0xc36 <__vector_11+0xc0>
     c32:	8f ef       	ldi	r24, 0xFF	; 255
     c34:	90 e0       	ldi	r25, 0x00	; 0
     c36:	84 17       	cp	r24, r20
     c38:	28 f4       	brcc	.+10     	; 0xc44 <__vector_11+0xce>
     c3a:	48 2f       	mov	r20, r24
     c3c:	03 c0       	rjmp	.+6      	; 0xc44 <__vector_11+0xce>
     c3e:	c1 50       	subi	r28, 0x01	; 1
     c40:	a9 f6       	brne	.-86     	; 0xbec <__vector_11+0x76>
     c42:	cd cf       	rjmp	.-102    	; 0xbde <__vector_11+0x68>
     c44:	c8 ee       	ldi	r28, 0xE8	; 232
     c46:	d0 e0       	ldi	r29, 0x00	; 0
     c48:	7e ef       	ldi	r23, 0xFE	; 254
     c4a:	a1 ef       	ldi	r26, 0xF1	; 241
     c4c:	b0 e0       	ldi	r27, 0x00	; 0
     c4e:	10 e1       	ldi	r17, 0x10	; 16
     c50:	88 81       	ld	r24, Y
     c52:	98 2f       	mov	r25, r24
     c54:	95 70       	andi	r25, 0x05	; 5
     c56:	e1 f3       	breq	.-8      	; 0xc50 <__vector_11+0xda>
     c58:	82 fd       	sbrc	r24, 2
     c5a:	00 c1       	rjmp	.+512    	; 0xe5c <__vector_11+0x2e6>
     c5c:	64 2f       	mov	r22, r20
     c5e:	41 31       	cpi	r20, 0x11	; 17
     c60:	08 f0       	brcs	.+2      	; 0xc64 <__vector_11+0xee>
     c62:	61 2f       	mov	r22, r17
     c64:	66 23       	and	r22, r22
     c66:	09 f4       	brne	.+2      	; 0xc6a <__vector_11+0xf4>
     c68:	f6 c0       	rjmp	.+492    	; 0xe56 <__vector_11+0x2e0>
     c6a:	c9 01       	movw	r24, r18
     c6c:	56 2f       	mov	r21, r22
     c6e:	fc 01       	movw	r30, r24
     c70:	01 96       	adiw	r24, 0x01	; 1
     c72:	e4 91       	lpm	r30, Z
     c74:	ec 93       	st	X, r30
     c76:	51 50       	subi	r21, 0x01	; 1
     c78:	d1 f7       	brne	.-12     	; 0xc6e <__vector_11+0xf8>
     c7a:	86 2f       	mov	r24, r22
     c7c:	81 50       	subi	r24, 0x01	; 1
     c7e:	90 e0       	ldi	r25, 0x00	; 0
     c80:	01 96       	adiw	r24, 0x01	; 1
     c82:	28 0f       	add	r18, r24
     c84:	39 1f       	adc	r19, r25
     c86:	46 1b       	sub	r20, r22
     c88:	78 83       	st	Y, r23
     c8a:	41 11       	cpse	r20, r1
     c8c:	e1 cf       	rjmp	.-62     	; 0xc50 <__vector_11+0xda>
     c8e:	60 31       	cpi	r22, 0x10	; 16
     c90:	f9 f2       	breq	.-66     	; 0xc50 <__vector_11+0xda>
     c92:	e4 c0       	rjmp	.+456    	; 0xe5c <__vector_11+0x2e6>
     c94:	45 30       	cpi	r20, 0x05	; 5
     c96:	61 f4       	brne	.+24     	; 0xcb0 <__vector_11+0x13a>
     c98:	8e ef       	ldi	r24, 0xFE	; 254
     c9a:	80 93 e8 00 	sts	0x00E8, r24
     c9e:	e8 ee       	ldi	r30, 0xE8	; 232
     ca0:	f0 e0       	ldi	r31, 0x00	; 0
     ca2:	80 81       	ld	r24, Z
     ca4:	80 ff       	sbrs	r24, 0
     ca6:	fd cf       	rjmp	.-6      	; 0xca2 <__vector_11+0x12c>
     ca8:	20 68       	ori	r18, 0x80	; 128
     caa:	20 93 e3 00 	sts	0x00E3, r18
     cae:	d6 c0       	rjmp	.+428    	; 0xe5c <__vector_11+0x2e6>
     cb0:	49 30       	cpi	r20, 0x09	; 9
     cb2:	a1 f5       	brne	.+104    	; 0xd1c <__vector_11+0x1a6>
     cb4:	71 11       	cpse	r23, r1
     cb6:	5b c0       	rjmp	.+182    	; 0xd6e <__vector_11+0x1f8>
     cb8:	20 93 59 01 	sts	0x0159, r18
     cbc:	10 92 5a 01 	sts	0x015A, r1
     cc0:	10 92 58 01 	sts	0x0158, r1
     cc4:	8e ef       	ldi	r24, 0xFE	; 254
     cc6:	80 93 e8 00 	sts	0x00E8, r24
     cca:	11 e0       	ldi	r17, 0x01	; 1
     ccc:	87 e2       	ldi	r24, 0x27	; 39
     cce:	91 e0       	ldi	r25, 0x01	; 1
     cd0:	c9 ee       	ldi	r28, 0xE9	; 233
     cd2:	d0 e0       	ldi	r29, 0x00	; 0
     cd4:	ab ee       	ldi	r26, 0xEB	; 235
     cd6:	b0 e0       	ldi	r27, 0x00	; 0
     cd8:	6c ee       	ldi	r22, 0xEC	; 236
     cda:	70 e0       	ldi	r23, 0x00	; 0
     cdc:	4d ee       	ldi	r20, 0xED	; 237
     cde:	50 e0       	ldi	r21, 0x00	; 0
     ce0:	18 83       	st	Y, r17
     ce2:	9c 01       	movw	r18, r24
     ce4:	2f 5f       	subi	r18, 0xFF	; 255
     ce6:	3f 4f       	sbci	r19, 0xFF	; 255
     ce8:	fc 01       	movw	r30, r24
     cea:	04 91       	lpm	r16, Z
     cec:	0c 93       	st	X, r16
     cee:	00 23       	and	r16, r16
     cf0:	59 f0       	breq	.+22     	; 0xd08 <__vector_11+0x192>
     cf2:	f9 01       	movw	r30, r18
     cf4:	24 91       	lpm	r18, Z
     cf6:	fb 01       	movw	r30, r22
     cf8:	20 83       	st	Z, r18
     cfa:	fc 01       	movw	r30, r24
     cfc:	32 96       	adiw	r30, 0x02	; 2
     cfe:	03 96       	adiw	r24, 0x03	; 3
     d00:	24 91       	lpm	r18, Z
     d02:	fa 01       	movw	r30, r20
     d04:	20 83       	st	Z, r18
     d06:	01 c0       	rjmp	.+2      	; 0xd0a <__vector_11+0x194>
     d08:	c9 01       	movw	r24, r18
     d0a:	1f 5f       	subi	r17, 0xFF	; 255
     d0c:	15 30       	cpi	r17, 0x05	; 5
     d0e:	41 f7       	brne	.-48     	; 0xce0 <__vector_11+0x16a>
     d10:	ea ee       	ldi	r30, 0xEA	; 234
     d12:	f0 e0       	ldi	r31, 0x00	; 0
     d14:	8e e1       	ldi	r24, 0x1E	; 30
     d16:	80 83       	st	Z, r24
     d18:	10 82       	st	Z, r1
     d1a:	a0 c0       	rjmp	.+320    	; 0xe5c <__vector_11+0x2e6>
     d1c:	48 30       	cpi	r20, 0x08	; 8
     d1e:	81 f4       	brne	.+32     	; 0xd40 <__vector_11+0x1ca>
     d20:	70 38       	cpi	r23, 0x80	; 128
     d22:	09 f0       	breq	.+2      	; 0xd26 <__vector_11+0x1b0>
     d24:	3f c0       	rjmp	.+126    	; 0xda4 <__vector_11+0x22e>
     d26:	e8 ee       	ldi	r30, 0xE8	; 232
     d28:	f0 e0       	ldi	r31, 0x00	; 0
     d2a:	80 81       	ld	r24, Z
     d2c:	80 ff       	sbrs	r24, 0
     d2e:	fd cf       	rjmp	.-6      	; 0xd2a <__vector_11+0x1b4>
     d30:	80 91 59 01 	lds	r24, 0x0159
     d34:	80 93 f1 00 	sts	0x00F1, r24
     d38:	8e ef       	ldi	r24, 0xFE	; 254
     d3a:	80 93 e8 00 	sts	0x00E8, r24
     d3e:	8e c0       	rjmp	.+284    	; 0xe5c <__vector_11+0x2e6>
     d40:	41 32       	cpi	r20, 0x21	; 33
     d42:	a9 f4       	brne	.+42     	; 0xd6e <__vector_11+0x1f8>
     d44:	71 3a       	cpi	r23, 0xA1	; 161
     d46:	f1 f5       	brne	.+124    	; 0xdc4 <__vector_11+0x24e>
     d48:	e8 ee       	ldi	r30, 0xE8	; 232
     d4a:	f0 e0       	ldi	r31, 0x00	; 0
     d4c:	80 81       	ld	r24, Z
     d4e:	80 ff       	sbrs	r24, 0
     d50:	fd cf       	rjmp	.-6      	; 0xd4c <__vector_11+0x1d6>
     d52:	ec e0       	ldi	r30, 0x0C	; 12
     d54:	f1 e0       	ldi	r31, 0x01	; 1
     d56:	a1 ef       	ldi	r26, 0xF1	; 241
     d58:	b0 e0       	ldi	r27, 0x00	; 0
     d5a:	81 91       	ld	r24, Z+
     d5c:	8c 93       	st	X, r24
     d5e:	41 e0       	ldi	r20, 0x01	; 1
     d60:	e3 31       	cpi	r30, 0x13	; 19
     d62:	f4 07       	cpc	r31, r20
     d64:	d1 f7       	brne	.-12     	; 0xd5a <__vector_11+0x1e4>
     d66:	8e ef       	ldi	r24, 0xFE	; 254
     d68:	80 93 e8 00 	sts	0x00E8, r24
     d6c:	77 c0       	rjmp	.+238    	; 0xe5c <__vector_11+0x2e6>
     d6e:	40 32       	cpi	r20, 0x20	; 32
     d70:	c9 f4       	brne	.+50     	; 0xda4 <__vector_11+0x22e>
     d72:	71 32       	cpi	r23, 0x21	; 33
     d74:	09 f0       	breq	.+2      	; 0xd78 <__vector_11+0x202>
     d76:	6b c0       	rjmp	.+214    	; 0xe4e <__vector_11+0x2d8>
     d78:	e8 ee       	ldi	r30, 0xE8	; 232
     d7a:	f0 e0       	ldi	r31, 0x00	; 0
     d7c:	80 81       	ld	r24, Z
     d7e:	82 ff       	sbrs	r24, 2
     d80:	fd cf       	rjmp	.-6      	; 0xd7c <__vector_11+0x206>
     d82:	ec e0       	ldi	r30, 0x0C	; 12
     d84:	f1 e0       	ldi	r31, 0x01	; 1
     d86:	a1 ef       	ldi	r26, 0xF1	; 241
     d88:	b0 e0       	ldi	r27, 0x00	; 0
     d8a:	8c 91       	ld	r24, X
     d8c:	81 93       	st	Z+, r24
     d8e:	51 e0       	ldi	r21, 0x01	; 1
     d90:	e3 31       	cpi	r30, 0x13	; 19
     d92:	f5 07       	cpc	r31, r21
     d94:	d1 f7       	brne	.-12     	; 0xd8a <__vector_11+0x214>
     d96:	e8 ee       	ldi	r30, 0xE8	; 232
     d98:	f0 e0       	ldi	r31, 0x00	; 0
     d9a:	8b ef       	ldi	r24, 0xFB	; 251
     d9c:	80 83       	st	Z, r24
     d9e:	8e ef       	ldi	r24, 0xFE	; 254
     da0:	80 83       	st	Z, r24
     da2:	5c c0       	rjmp	.+184    	; 0xe5c <__vector_11+0x2e6>
     da4:	42 32       	cpi	r20, 0x22	; 34
     da6:	71 f4       	brne	.+28     	; 0xdc4 <__vector_11+0x24e>
     da8:	71 32       	cpi	r23, 0x21	; 33
     daa:	09 f0       	breq	.+2      	; 0xdae <__vector_11+0x238>
     dac:	50 c0       	rjmp	.+160    	; 0xe4e <__vector_11+0x2d8>
     dae:	20 93 5a 01 	sts	0x015A, r18
     db2:	e8 ee       	ldi	r30, 0xE8	; 232
     db4:	f0 e0       	ldi	r31, 0x00	; 0
     db6:	80 81       	ld	r24, Z
     db8:	80 ff       	sbrs	r24, 0
     dba:	fd cf       	rjmp	.-6      	; 0xdb6 <__vector_11+0x240>
     dbc:	8e ef       	ldi	r24, 0xFE	; 254
     dbe:	80 93 e8 00 	sts	0x00E8, r24
     dc2:	4c c0       	rjmp	.+152    	; 0xe5c <__vector_11+0x2e6>
     dc4:	41 11       	cpse	r20, r1
     dc6:	1a c0       	rjmp	.+52     	; 0xdfc <__vector_11+0x286>
     dc8:	e8 ee       	ldi	r30, 0xE8	; 232
     dca:	f0 e0       	ldi	r31, 0x00	; 0
     dcc:	20 81       	ld	r18, Z
     dce:	20 ff       	sbrs	r18, 0
     dd0:	fd cf       	rjmp	.-6      	; 0xdcc <__vector_11+0x256>
     dd2:	72 38       	cpi	r23, 0x82	; 130
     dd4:	51 f4       	brne	.+20     	; 0xdea <__vector_11+0x274>
     dd6:	e9 ee       	ldi	r30, 0xE9	; 233
     dd8:	f0 e0       	ldi	r31, 0x00	; 0
     dda:	80 83       	st	Z, r24
     ddc:	80 91 eb 00 	lds	r24, 0x00EB
     de0:	85 fb       	bst	r24, 5
     de2:	88 27       	eor	r24, r24
     de4:	80 f9       	bld	r24, 0
     de6:	10 82       	st	Z, r1
     de8:	01 c0       	rjmp	.+2      	; 0xdec <__vector_11+0x276>
     dea:	80 e0       	ldi	r24, 0x00	; 0
     dec:	e1 ef       	ldi	r30, 0xF1	; 241
     dee:	f0 e0       	ldi	r31, 0x00	; 0
     df0:	80 83       	st	Z, r24
     df2:	10 82       	st	Z, r1
     df4:	8e ef       	ldi	r24, 0xFE	; 254
     df6:	80 93 e8 00 	sts	0x00E8, r24
     dfa:	30 c0       	rjmp	.+96     	; 0xe5c <__vector_11+0x2e6>
     dfc:	41 30       	cpi	r20, 0x01	; 1
     dfe:	11 f0       	breq	.+4      	; 0xe04 <__vector_11+0x28e>
     e00:	43 30       	cpi	r20, 0x03	; 3
     e02:	29 f5       	brne	.+74     	; 0xe4e <__vector_11+0x2d8>
     e04:	72 30       	cpi	r23, 0x02	; 2
     e06:	19 f5       	brne	.+70     	; 0xe4e <__vector_11+0x2d8>
     e08:	23 2b       	or	r18, r19
     e0a:	09 f5       	brne	.+66     	; 0xe4e <__vector_11+0x2d8>
     e0c:	8f 77       	andi	r24, 0x7F	; 127
     e0e:	99 27       	eor	r25, r25
     e10:	38 2f       	mov	r19, r24
     e12:	31 50       	subi	r19, 0x01	; 1
     e14:	34 30       	cpi	r19, 0x04	; 4
     e16:	d8 f4       	brcc	.+54     	; 0xe4e <__vector_11+0x2d8>
     e18:	3e ef       	ldi	r19, 0xFE	; 254
     e1a:	30 93 e8 00 	sts	0x00E8, r19
     e1e:	80 93 e9 00 	sts	0x00E9, r24
     e22:	43 30       	cpi	r20, 0x03	; 3
     e24:	21 f4       	brne	.+8      	; 0xe2e <__vector_11+0x2b8>
     e26:	81 e2       	ldi	r24, 0x21	; 33
     e28:	80 93 eb 00 	sts	0x00EB, r24
     e2c:	17 c0       	rjmp	.+46     	; 0xe5c <__vector_11+0x2e6>
     e2e:	99 e1       	ldi	r25, 0x19	; 25
     e30:	90 93 eb 00 	sts	0x00EB, r25
     e34:	21 e0       	ldi	r18, 0x01	; 1
     e36:	30 e0       	ldi	r19, 0x00	; 0
     e38:	d9 01       	movw	r26, r18
     e3a:	02 c0       	rjmp	.+4      	; 0xe40 <__vector_11+0x2ca>
     e3c:	aa 0f       	add	r26, r26
     e3e:	bb 1f       	adc	r27, r27
     e40:	8a 95       	dec	r24
     e42:	e2 f7       	brpl	.-8      	; 0xe3c <__vector_11+0x2c6>
     e44:	ea ee       	ldi	r30, 0xEA	; 234
     e46:	f0 e0       	ldi	r31, 0x00	; 0
     e48:	a0 83       	st	Z, r26
     e4a:	10 82       	st	Z, r1
     e4c:	07 c0       	rjmp	.+14     	; 0xe5c <__vector_11+0x2e6>
     e4e:	81 e2       	ldi	r24, 0x21	; 33
     e50:	80 93 eb 00 	sts	0x00EB, r24
     e54:	03 c0       	rjmp	.+6      	; 0xe5c <__vector_11+0x2e6>
     e56:	78 83       	st	Y, r23
     e58:	41 11       	cpse	r20, r1
     e5a:	fa ce       	rjmp	.-524    	; 0xc50 <__vector_11+0xda>
     e5c:	ff 91       	pop	r31
     e5e:	ef 91       	pop	r30
     e60:	df 91       	pop	r29
     e62:	cf 91       	pop	r28
     e64:	bf 91       	pop	r27
     e66:	af 91       	pop	r26
     e68:	9f 91       	pop	r25
     e6a:	8f 91       	pop	r24
     e6c:	7f 91       	pop	r23
     e6e:	6f 91       	pop	r22
     e70:	5f 91       	pop	r21
     e72:	4f 91       	pop	r20
     e74:	3f 91       	pop	r19
     e76:	2f 91       	pop	r18
     e78:	1f 91       	pop	r17
     e7a:	0f 91       	pop	r16
     e7c:	0f 90       	pop	r0
     e7e:	0f be       	out	0x3f, r0	; 63
     e80:	0f 90       	pop	r0
     e82:	1f 90       	pop	r1
     e84:	18 95       	reti

00000e86 <print_P>:
     e86:	1f 93       	push	r17
     e88:	cf 93       	push	r28
     e8a:	df 93       	push	r29
     e8c:	ec 01       	movw	r28, r24
     e8e:	21 96       	adiw	r28, 0x01	; 1
     e90:	fc 01       	movw	r30, r24
     e92:	14 91       	lpm	r17, Z
     e94:	11 23       	and	r17, r17
     e96:	69 f0       	breq	.+26     	; 0xeb2 <print_P+0x2c>
     e98:	1a 30       	cpi	r17, 0x0A	; 10
     e9a:	19 f4       	brne	.+6      	; 0xea2 <print_P+0x1c>
     e9c:	8d e0       	ldi	r24, 0x0D	; 13
     e9e:	0e 94 21 05 	call	0xa42	; 0xa42 <m_usb_tx_char>
     ea2:	81 2f       	mov	r24, r17
     ea4:	0e 94 21 05 	call	0xa42	; 0xa42 <m_usb_tx_char>
     ea8:	fe 01       	movw	r30, r28
     eaa:	21 96       	adiw	r28, 0x01	; 1
     eac:	14 91       	lpm	r17, Z
     eae:	11 11       	cpse	r17, r1
     eb0:	f3 cf       	rjmp	.-26     	; 0xe98 <print_P+0x12>
     eb2:	df 91       	pop	r29
     eb4:	cf 91       	pop	r28
     eb6:	1f 91       	pop	r17
     eb8:	08 95       	ret

00000eba <m_usb_tx_int>:
     eba:	ef 92       	push	r14
     ebc:	ff 92       	push	r15
     ebe:	0f 93       	push	r16
     ec0:	1f 93       	push	r17
     ec2:	cf 93       	push	r28
     ec4:	df 93       	push	r29
     ec6:	cd b7       	in	r28, 0x3d	; 61
     ec8:	de b7       	in	r29, 0x3e	; 62
     eca:	27 97       	sbiw	r28, 0x07	; 7
     ecc:	0f b6       	in	r0, 0x3f	; 63
     ece:	f8 94       	cli
     ed0:	de bf       	out	0x3e, r29	; 62
     ed2:	0f be       	out	0x3f, r0	; 63
     ed4:	cd bf       	out	0x3d, r28	; 61
     ed6:	8e 01       	movw	r16, r28
     ed8:	0f 5f       	subi	r16, 0xFF	; 255
     eda:	1f 4f       	sbci	r17, 0xFF	; 255
     edc:	27 e0       	ldi	r18, 0x07	; 7
     ede:	f8 01       	movw	r30, r16
     ee0:	11 92       	st	Z+, r1
     ee2:	2a 95       	dec	r18
     ee4:	e9 f7       	brne	.-6      	; 0xee0 <m_usb_tx_int+0x26>
     ee6:	4a e0       	ldi	r20, 0x0A	; 10
     ee8:	50 e0       	ldi	r21, 0x00	; 0
     eea:	b8 01       	movw	r22, r16
     eec:	0e 94 d5 0c 	call	0x19aa	; 0x19aa <itoa>
     ef0:	7e 01       	movw	r14, r28
     ef2:	f8 e0       	ldi	r31, 0x08	; 8
     ef4:	ef 0e       	add	r14, r31
     ef6:	f1 1c       	adc	r15, r1
     ef8:	f8 01       	movw	r30, r16
     efa:	81 91       	ld	r24, Z+
     efc:	8f 01       	movw	r16, r30
     efe:	81 11       	cpse	r24, r1
     f00:	0e 94 21 05 	call	0xa42	; 0xa42 <m_usb_tx_char>
     f04:	0e 15       	cp	r16, r14
     f06:	1f 05       	cpc	r17, r15
     f08:	b9 f7       	brne	.-18     	; 0xef8 <m_usb_tx_int+0x3e>
     f0a:	27 96       	adiw	r28, 0x07	; 7
     f0c:	0f b6       	in	r0, 0x3f	; 63
     f0e:	f8 94       	cli
     f10:	de bf       	out	0x3e, r29	; 62
     f12:	0f be       	out	0x3f, r0	; 63
     f14:	cd bf       	out	0x3d, r28	; 61
     f16:	df 91       	pop	r29
     f18:	cf 91       	pop	r28
     f1a:	1f 91       	pop	r17
     f1c:	0f 91       	pop	r16
     f1e:	ff 90       	pop	r15
     f20:	ef 90       	pop	r14
     f22:	08 95       	ret

00000f24 <twi_wait>:
     f24:	20 e0       	ldi	r18, 0x00	; 0
     f26:	30 e0       	ldi	r19, 0x00	; 0
     f28:	ec eb       	ldi	r30, 0xBC	; 188
     f2a:	f0 e0       	ldi	r31, 0x00	; 0
     f2c:	80 81       	ld	r24, Z
     f2e:	88 23       	and	r24, r24
     f30:	34 f0       	brlt	.+12     	; 0xf3e <twi_wait+0x1a>
     f32:	2f 5f       	subi	r18, 0xFF	; 255
     f34:	3f 4f       	sbci	r19, 0xFF	; 255
     f36:	29 3e       	cpi	r18, 0xE9	; 233
     f38:	83 e0       	ldi	r24, 0x03	; 3
     f3a:	38 07       	cpc	r19, r24
     f3c:	b9 f7       	brne	.-18     	; 0xf2c <twi_wait+0x8>
     f3e:	81 e0       	ldi	r24, 0x01	; 1
     f40:	28 3e       	cpi	r18, 0xE8	; 232
     f42:	33 40       	sbci	r19, 0x03	; 3
     f44:	09 f4       	brne	.+2      	; 0xf48 <twi_wait+0x24>
     f46:	80 e0       	ldi	r24, 0x00	; 0
     f48:	08 95       	ret

00000f4a <send_byte>:
     f4a:	80 93 bb 00 	sts	0x00BB, r24
     f4e:	84 e8       	ldi	r24, 0x84	; 132
     f50:	80 93 bc 00 	sts	0x00BC, r24
     f54:	0e 94 92 07 	call	0xf24	; 0xf24 <twi_wait>
     f58:	88 23       	and	r24, r24
     f5a:	21 f0       	breq	.+8      	; 0xf64 <send_byte+0x1a>
     f5c:	80 91 b9 00 	lds	r24, 0x00B9
     f60:	88 7f       	andi	r24, 0xF8	; 248
     f62:	08 95       	ret
     f64:	80 e0       	ldi	r24, 0x00	; 0
     f66:	08 95       	ret

00000f68 <start_read>:
     f68:	cf 93       	push	r28
     f6a:	c8 2f       	mov	r28, r24
     f6c:	94 ea       	ldi	r25, 0xA4	; 164
     f6e:	90 93 bc 00 	sts	0x00BC, r25
     f72:	0e 94 92 07 	call	0xf24	; 0xf24 <twi_wait>
     f76:	88 23       	and	r24, r24
     f78:	61 f0       	breq	.+24     	; 0xf92 <start_read+0x2a>
     f7a:	8c 2f       	mov	r24, r28
     f7c:	88 0f       	add	r24, r24
     f7e:	8f 5f       	subi	r24, 0xFF	; 255
     f80:	0e 94 a5 07 	call	0xf4a	; 0xf4a <send_byte>
     f84:	88 34       	cpi	r24, 0x48	; 72
     f86:	39 f4       	brne	.+14     	; 0xf96 <start_read+0x2e>
     f88:	84 e9       	ldi	r24, 0x94	; 148
     f8a:	80 93 bc 00 	sts	0x00BC, r24
     f8e:	80 e0       	ldi	r24, 0x00	; 0
     f90:	03 c0       	rjmp	.+6      	; 0xf98 <start_read+0x30>
     f92:	80 e0       	ldi	r24, 0x00	; 0
     f94:	01 c0       	rjmp	.+2      	; 0xf98 <start_read+0x30>
     f96:	81 e0       	ldi	r24, 0x01	; 1
     f98:	cf 91       	pop	r28
     f9a:	08 95       	ret

00000f9c <start_write>:
     f9c:	cf 93       	push	r28
     f9e:	c8 2f       	mov	r28, r24
     fa0:	94 ea       	ldi	r25, 0xA4	; 164
     fa2:	90 93 bc 00 	sts	0x00BC, r25
     fa6:	0e 94 92 07 	call	0xf24	; 0xf24 <twi_wait>
     faa:	88 23       	and	r24, r24
     fac:	59 f0       	breq	.+22     	; 0xfc4 <start_write+0x28>
     fae:	8c 2f       	mov	r24, r28
     fb0:	88 0f       	add	r24, r24
     fb2:	0e 94 a5 07 	call	0xf4a	; 0xf4a <send_byte>
     fb6:	80 32       	cpi	r24, 0x20	; 32
     fb8:	39 f4       	brne	.+14     	; 0xfc8 <start_write+0x2c>
     fba:	84 e9       	ldi	r24, 0x94	; 148
     fbc:	80 93 bc 00 	sts	0x00BC, r24
     fc0:	80 e0       	ldi	r24, 0x00	; 0
     fc2:	03 c0       	rjmp	.+6      	; 0xfca <start_write+0x2e>
     fc4:	80 e0       	ldi	r24, 0x00	; 0
     fc6:	01 c0       	rjmp	.+2      	; 0xfca <start_write+0x2e>
     fc8:	81 e0       	ldi	r24, 0x01	; 1
     fca:	cf 91       	pop	r28
     fcc:	08 95       	ret

00000fce <end>:
     fce:	84 e9       	ldi	r24, 0x94	; 148
     fd0:	80 93 bc 00 	sts	0x00BC, r24
     fd4:	08 95       	ret

00000fd6 <m_wii_read>:
     fd6:	ef 92       	push	r14
     fd8:	ff 92       	push	r15
     fda:	0f 93       	push	r16
     fdc:	1f 93       	push	r17
     fde:	cf 93       	push	r28
     fe0:	df 93       	push	r29
     fe2:	cd b7       	in	r28, 0x3d	; 61
     fe4:	de b7       	in	r29, 0x3e	; 62
     fe6:	60 97       	sbiw	r28, 0x10	; 16
     fe8:	0f b6       	in	r0, 0x3f	; 63
     fea:	f8 94       	cli
     fec:	de bf       	out	0x3e, r29	; 62
     fee:	0f be       	out	0x3f, r0	; 63
     ff0:	cd bf       	out	0x3d, r28	; 61
     ff2:	e8 2e       	mov	r14, r24
     ff4:	f9 2e       	mov	r15, r25
     ff6:	fe 01       	movw	r30, r28
     ff8:	31 96       	adiw	r30, 0x01	; 1
     ffa:	80 e1       	ldi	r24, 0x10	; 16
     ffc:	df 01       	movw	r26, r30
     ffe:	1d 92       	st	X+, r1
    1000:	8a 95       	dec	r24
    1002:	e9 f7       	brne	.-6      	; 0xffe <m_wii_read+0x28>
    1004:	88 e5       	ldi	r24, 0x58	; 88
    1006:	0e 94 ce 07 	call	0xf9c	; 0xf9c <start_write>
    100a:	88 23       	and	r24, r24
    100c:	09 f4       	brne	.+2      	; 0x1010 <m_wii_read+0x3a>
    100e:	66 c0       	rjmp	.+204    	; 0x10dc <m_wii_read+0x106>
    1010:	86 e3       	ldi	r24, 0x36	; 54
    1012:	0e 94 a5 07 	call	0xf4a	; 0xf4a <send_byte>
    1016:	88 23       	and	r24, r24
    1018:	09 f4       	brne	.+2      	; 0x101c <m_wii_read+0x46>
    101a:	62 c0       	rjmp	.+196    	; 0x10e0 <m_wii_read+0x10a>
    101c:	0e 94 e7 07 	call	0xfce	; 0xfce <end>
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

    1020:	b8 e0       	ldi	r27, 0x08	; 8
    1022:	ba 95       	dec	r27
    1024:	f1 f7       	brne	.-4      	; 0x1022 <m_wii_read+0x4c>
    1026:	00 00       	nop
    1028:	88 e5       	ldi	r24, 0x58	; 88
    102a:	0e 94 b4 07 	call	0xf68	; 0xf68 <start_read>
    102e:	88 23       	and	r24, r24
    1030:	09 f4       	brne	.+2      	; 0x1034 <m_wii_read+0x5e>
    1032:	58 c0       	rjmp	.+176    	; 0x10e4 <m_wii_read+0x10e>
    1034:	ae 01       	movw	r20, r28
    1036:	4f 5f       	subi	r20, 0xFF	; 255
    1038:	5f 4f       	sbci	r21, 0xFF	; 255
    103a:	8e 01       	movw	r16, r28
    103c:	00 5f       	subi	r16, 0xF0	; 240
    103e:	1f 4f       	sbci	r17, 0xFF	; 255
    1040:	ec eb       	ldi	r30, 0xBC	; 188
    1042:	f0 e0       	ldi	r31, 0x00	; 0
    1044:	94 ec       	ldi	r25, 0xC4	; 196
    1046:	2b eb       	ldi	r18, 0xBB	; 187
    1048:	30 e0       	ldi	r19, 0x00	; 0
    104a:	90 83       	st	Z, r25
    104c:	80 81       	ld	r24, Z
    104e:	88 23       	and	r24, r24
    1050:	ec f7       	brge	.-6      	; 0x104c <m_wii_read+0x76>
    1052:	d9 01       	movw	r26, r18
    1054:	8c 91       	ld	r24, X
    1056:	da 01       	movw	r26, r20
    1058:	8d 93       	st	X+, r24
    105a:	ad 01       	movw	r20, r26
    105c:	a0 17       	cp	r26, r16
    105e:	b1 07       	cpc	r27, r17
    1060:	a1 f7       	brne	.-24     	; 0x104a <m_wii_read+0x74>
    1062:	84 e8       	ldi	r24, 0x84	; 132
    1064:	80 93 bc 00 	sts	0x00BC, r24
    1068:	ec eb       	ldi	r30, 0xBC	; 188
    106a:	f0 e0       	ldi	r31, 0x00	; 0
    106c:	80 81       	ld	r24, Z
    106e:	88 23       	and	r24, r24
    1070:	ec f7       	brge	.-6      	; 0x106c <m_wii_read+0x96>
    1072:	80 91 bb 00 	lds	r24, 0x00BB
    1076:	88 8b       	std	Y+16, r24	; 0x10
    1078:	0e 94 e7 07 	call	0xfce	; 0xfce <end>
    107c:	de 01       	movw	r26, r28
    107e:	14 96       	adiw	r26, 0x04	; 4
    1080:	6e 2d       	mov	r22, r14
    1082:	7f 2d       	mov	r23, r15
    1084:	4c 91       	ld	r20, X
    1086:	24 2f       	mov	r18, r20
    1088:	20 73       	andi	r18, 0x30	; 48
    108a:	cd 01       	movw	r24, r26
    108c:	02 97       	sbiw	r24, 0x02	; 2
    108e:	fc 01       	movw	r30, r24
    1090:	80 81       	ld	r24, Z
    1092:	90 e0       	ldi	r25, 0x00	; 0
    1094:	f0 e1       	ldi	r31, 0x10	; 16
    1096:	2f 9f       	mul	r18, r31
    1098:	80 0d       	add	r24, r0
    109a:	91 1d       	adc	r25, r1
    109c:	11 24       	eor	r1, r1
    109e:	fb 01       	movw	r30, r22
    10a0:	91 83       	std	Z+1, r25	; 0x01
    10a2:	80 83       	st	Z, r24
    10a4:	84 2f       	mov	r24, r20
    10a6:	80 7c       	andi	r24, 0xC0	; 192
    10a8:	90 e0       	ldi	r25, 0x00	; 0
    10aa:	88 0f       	add	r24, r24
    10ac:	99 1f       	adc	r25, r25
    10ae:	88 0f       	add	r24, r24
    10b0:	99 1f       	adc	r25, r25
    10b2:	9d 01       	movw	r18, r26
    10b4:	21 50       	subi	r18, 0x01	; 1
    10b6:	31 09       	sbc	r19, r1
    10b8:	f9 01       	movw	r30, r18
    10ba:	20 81       	ld	r18, Z
    10bc:	82 0f       	add	r24, r18
    10be:	91 1d       	adc	r25, r1
    10c0:	fb 01       	movw	r30, r22
    10c2:	93 83       	std	Z+3, r25	; 0x03
    10c4:	82 83       	std	Z+2, r24	; 0x02
    10c6:	4f 70       	andi	r20, 0x0F	; 15
    10c8:	44 83       	std	Z+4, r20	; 0x04
    10ca:	15 82       	std	Z+5, r1	; 0x05
    10cc:	13 96       	adiw	r26, 0x03	; 3
    10ce:	6a 5f       	subi	r22, 0xFA	; 250
    10d0:	7f 4f       	sbci	r23, 0xFF	; 255
    10d2:	0a 17       	cp	r16, r26
    10d4:	1b 07       	cpc	r17, r27
    10d6:	b1 f6       	brne	.-84     	; 0x1084 <m_wii_read+0xae>
    10d8:	81 e0       	ldi	r24, 0x01	; 1
    10da:	05 c0       	rjmp	.+10     	; 0x10e6 <m_wii_read+0x110>
    10dc:	80 e0       	ldi	r24, 0x00	; 0
    10de:	03 c0       	rjmp	.+6      	; 0x10e6 <m_wii_read+0x110>
    10e0:	80 e0       	ldi	r24, 0x00	; 0
    10e2:	01 c0       	rjmp	.+2      	; 0x10e6 <m_wii_read+0x110>
    10e4:	80 e0       	ldi	r24, 0x00	; 0
    10e6:	60 96       	adiw	r28, 0x10	; 16
    10e8:	0f b6       	in	r0, 0x3f	; 63
    10ea:	f8 94       	cli
    10ec:	de bf       	out	0x3e, r29	; 62
    10ee:	0f be       	out	0x3f, r0	; 63
    10f0:	cd bf       	out	0x3d, r28	; 61
    10f2:	df 91       	pop	r29
    10f4:	cf 91       	pop	r28
    10f6:	1f 91       	pop	r17
    10f8:	0f 91       	pop	r16
    10fa:	ff 90       	pop	r15
    10fc:	ef 90       	pop	r14
    10fe:	08 95       	ret

00001100 <m_wii_open>:
    1100:	0e 94 61 01 	call	0x2c2	; 0x2c2 <m_bus_init>
    1104:	88 e5       	ldi	r24, 0x58	; 88
    1106:	0e 94 ce 07 	call	0xf9c	; 0xf9c <start_write>
    110a:	88 23       	and	r24, r24
    110c:	09 f4       	brne	.+2      	; 0x1110 <m_wii_open+0x10>
    110e:	c7 c0       	rjmp	.+398    	; 0x129e <m_wii_open+0x19e>
    1110:	80 e3       	ldi	r24, 0x30	; 48
    1112:	0e 94 a5 07 	call	0xf4a	; 0xf4a <send_byte>
    1116:	88 23       	and	r24, r24
    1118:	09 f4       	brne	.+2      	; 0x111c <m_wii_open+0x1c>
    111a:	c3 c0       	rjmp	.+390    	; 0x12a2 <m_wii_open+0x1a2>
    111c:	81 e0       	ldi	r24, 0x01	; 1
    111e:	0e 94 a5 07 	call	0xf4a	; 0xf4a <send_byte>
    1122:	88 23       	and	r24, r24
    1124:	09 f4       	brne	.+2      	; 0x1128 <m_wii_open+0x28>
    1126:	bf c0       	rjmp	.+382    	; 0x12a6 <m_wii_open+0x1a6>
    1128:	0e 94 e7 07 	call	0xfce	; 0xfce <end>
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

    112c:	83 ec       	ldi	r24, 0xC3	; 195
    112e:	99 e0       	ldi	r25, 0x09	; 9
    1130:	01 97       	sbiw	r24, 0x01	; 1
    1132:	f1 f7       	brne	.-4      	; 0x1130 <m_wii_open+0x30>
    1134:	00 c0       	rjmp	.+0      	; 0x1136 <m_wii_open+0x36>
    1136:	00 00       	nop
    1138:	88 e5       	ldi	r24, 0x58	; 88
    113a:	0e 94 ce 07 	call	0xf9c	; 0xf9c <start_write>
    113e:	88 23       	and	r24, r24
    1140:	09 f4       	brne	.+2      	; 0x1144 <m_wii_open+0x44>
    1142:	b3 c0       	rjmp	.+358    	; 0x12aa <m_wii_open+0x1aa>
    1144:	80 e0       	ldi	r24, 0x00	; 0
    1146:	0e 94 a5 07 	call	0xf4a	; 0xf4a <send_byte>
    114a:	88 23       	and	r24, r24
    114c:	09 f4       	brne	.+2      	; 0x1150 <m_wii_open+0x50>
    114e:	af c0       	rjmp	.+350    	; 0x12ae <m_wii_open+0x1ae>
    1150:	80 e0       	ldi	r24, 0x00	; 0
    1152:	0e 94 a5 07 	call	0xf4a	; 0xf4a <send_byte>
    1156:	88 23       	and	r24, r24
    1158:	09 f4       	brne	.+2      	; 0x115c <m_wii_open+0x5c>
    115a:	ab c0       	rjmp	.+342    	; 0x12b2 <m_wii_open+0x1b2>
    115c:	80 e0       	ldi	r24, 0x00	; 0
    115e:	0e 94 a5 07 	call	0xf4a	; 0xf4a <send_byte>
    1162:	88 23       	and	r24, r24
    1164:	09 f4       	brne	.+2      	; 0x1168 <m_wii_open+0x68>
    1166:	a7 c0       	rjmp	.+334    	; 0x12b6 <m_wii_open+0x1b6>
    1168:	80 e0       	ldi	r24, 0x00	; 0
    116a:	0e 94 a5 07 	call	0xf4a	; 0xf4a <send_byte>
    116e:	88 23       	and	r24, r24
    1170:	09 f4       	brne	.+2      	; 0x1174 <m_wii_open+0x74>
    1172:	a3 c0       	rjmp	.+326    	; 0x12ba <m_wii_open+0x1ba>
    1174:	80 e0       	ldi	r24, 0x00	; 0
    1176:	0e 94 a5 07 	call	0xf4a	; 0xf4a <send_byte>
    117a:	88 23       	and	r24, r24
    117c:	09 f4       	brne	.+2      	; 0x1180 <m_wii_open+0x80>
    117e:	9f c0       	rjmp	.+318    	; 0x12be <m_wii_open+0x1be>
    1180:	80 e0       	ldi	r24, 0x00	; 0
    1182:	0e 94 a5 07 	call	0xf4a	; 0xf4a <send_byte>
    1186:	88 23       	and	r24, r24
    1188:	09 f4       	brne	.+2      	; 0x118c <m_wii_open+0x8c>
    118a:	9b c0       	rjmp	.+310    	; 0x12c2 <m_wii_open+0x1c2>
    118c:	80 e0       	ldi	r24, 0x00	; 0
    118e:	0e 94 a5 07 	call	0xf4a	; 0xf4a <send_byte>
    1192:	88 23       	and	r24, r24
    1194:	09 f4       	brne	.+2      	; 0x1198 <m_wii_open+0x98>
    1196:	97 c0       	rjmp	.+302    	; 0x12c6 <m_wii_open+0x1c6>
    1198:	80 e9       	ldi	r24, 0x90	; 144
    119a:	0e 94 a5 07 	call	0xf4a	; 0xf4a <send_byte>
    119e:	88 23       	and	r24, r24
    11a0:	09 f4       	brne	.+2      	; 0x11a4 <m_wii_open+0xa4>
    11a2:	93 c0       	rjmp	.+294    	; 0x12ca <m_wii_open+0x1ca>
    11a4:	0e 94 e7 07 	call	0xfce	; 0xfce <end>
    11a8:	83 ec       	ldi	r24, 0xC3	; 195
    11aa:	99 e0       	ldi	r25, 0x09	; 9
    11ac:	01 97       	sbiw	r24, 0x01	; 1
    11ae:	f1 f7       	brne	.-4      	; 0x11ac <m_wii_open+0xac>
    11b0:	00 c0       	rjmp	.+0      	; 0x11b2 <m_wii_open+0xb2>
    11b2:	00 00       	nop
    11b4:	88 e5       	ldi	r24, 0x58	; 88
    11b6:	0e 94 ce 07 	call	0xf9c	; 0xf9c <start_write>
    11ba:	88 23       	and	r24, r24
    11bc:	09 f4       	brne	.+2      	; 0x11c0 <m_wii_open+0xc0>
    11be:	87 c0       	rjmp	.+270    	; 0x12ce <m_wii_open+0x1ce>
    11c0:	87 e0       	ldi	r24, 0x07	; 7
    11c2:	0e 94 a5 07 	call	0xf4a	; 0xf4a <send_byte>
    11c6:	88 23       	and	r24, r24
    11c8:	09 f4       	brne	.+2      	; 0x11cc <m_wii_open+0xcc>
    11ca:	83 c0       	rjmp	.+262    	; 0x12d2 <m_wii_open+0x1d2>
    11cc:	80 e0       	ldi	r24, 0x00	; 0
    11ce:	0e 94 a5 07 	call	0xf4a	; 0xf4a <send_byte>
    11d2:	88 23       	and	r24, r24
    11d4:	09 f4       	brne	.+2      	; 0x11d8 <m_wii_open+0xd8>
    11d6:	7f c0       	rjmp	.+254    	; 0x12d6 <m_wii_open+0x1d6>
    11d8:	81 e4       	ldi	r24, 0x41	; 65
    11da:	0e 94 a5 07 	call	0xf4a	; 0xf4a <send_byte>
    11de:	88 23       	and	r24, r24
    11e0:	09 f4       	brne	.+2      	; 0x11e4 <m_wii_open+0xe4>
    11e2:	7b c0       	rjmp	.+246    	; 0x12da <m_wii_open+0x1da>
    11e4:	0e 94 e7 07 	call	0xfce	; 0xfce <end>
    11e8:	83 ec       	ldi	r24, 0xC3	; 195
    11ea:	99 e0       	ldi	r25, 0x09	; 9
    11ec:	01 97       	sbiw	r24, 0x01	; 1
    11ee:	f1 f7       	brne	.-4      	; 0x11ec <m_wii_open+0xec>
    11f0:	00 c0       	rjmp	.+0      	; 0x11f2 <m_wii_open+0xf2>
    11f2:	00 00       	nop
    11f4:	88 e5       	ldi	r24, 0x58	; 88
    11f6:	0e 94 ce 07 	call	0xf9c	; 0xf9c <start_write>
    11fa:	88 23       	and	r24, r24
    11fc:	09 f4       	brne	.+2      	; 0x1200 <m_wii_open+0x100>
    11fe:	6f c0       	rjmp	.+222    	; 0x12de <m_wii_open+0x1de>
    1200:	8a e1       	ldi	r24, 0x1A	; 26
    1202:	0e 94 a5 07 	call	0xf4a	; 0xf4a <send_byte>
    1206:	88 23       	and	r24, r24
    1208:	09 f4       	brne	.+2      	; 0x120c <m_wii_open+0x10c>
    120a:	6b c0       	rjmp	.+214    	; 0x12e2 <m_wii_open+0x1e2>
    120c:	80 e4       	ldi	r24, 0x40	; 64
    120e:	0e 94 a5 07 	call	0xf4a	; 0xf4a <send_byte>
    1212:	88 23       	and	r24, r24
    1214:	09 f4       	brne	.+2      	; 0x1218 <m_wii_open+0x118>
    1216:	67 c0       	rjmp	.+206    	; 0x12e6 <m_wii_open+0x1e6>
    1218:	80 e0       	ldi	r24, 0x00	; 0
    121a:	0e 94 a5 07 	call	0xf4a	; 0xf4a <send_byte>
    121e:	88 23       	and	r24, r24
    1220:	09 f4       	brne	.+2      	; 0x1224 <m_wii_open+0x124>
    1222:	63 c0       	rjmp	.+198    	; 0x12ea <m_wii_open+0x1ea>
    1224:	0e 94 e7 07 	call	0xfce	; 0xfce <end>
    1228:	83 ec       	ldi	r24, 0xC3	; 195
    122a:	99 e0       	ldi	r25, 0x09	; 9
    122c:	01 97       	sbiw	r24, 0x01	; 1
    122e:	f1 f7       	brne	.-4      	; 0x122c <m_wii_open+0x12c>
    1230:	00 c0       	rjmp	.+0      	; 0x1232 <m_wii_open+0x132>
    1232:	00 00       	nop
    1234:	88 e5       	ldi	r24, 0x58	; 88
    1236:	0e 94 ce 07 	call	0xf9c	; 0xf9c <start_write>
    123a:	88 23       	and	r24, r24
    123c:	09 f4       	brne	.+2      	; 0x1240 <m_wii_open+0x140>
    123e:	57 c0       	rjmp	.+174    	; 0x12ee <m_wii_open+0x1ee>
    1240:	83 e3       	ldi	r24, 0x33	; 51
    1242:	0e 94 a5 07 	call	0xf4a	; 0xf4a <send_byte>
    1246:	88 23       	and	r24, r24
    1248:	09 f4       	brne	.+2      	; 0x124c <m_wii_open+0x14c>
    124a:	53 c0       	rjmp	.+166    	; 0x12f2 <m_wii_open+0x1f2>
    124c:	83 e0       	ldi	r24, 0x03	; 3
    124e:	0e 94 a5 07 	call	0xf4a	; 0xf4a <send_byte>
    1252:	88 23       	and	r24, r24
    1254:	09 f4       	brne	.+2      	; 0x1258 <m_wii_open+0x158>
    1256:	4f c0       	rjmp	.+158    	; 0x12f6 <m_wii_open+0x1f6>
    1258:	0e 94 e7 07 	call	0xfce	; 0xfce <end>
    125c:	83 ec       	ldi	r24, 0xC3	; 195
    125e:	99 e0       	ldi	r25, 0x09	; 9
    1260:	01 97       	sbiw	r24, 0x01	; 1
    1262:	f1 f7       	brne	.-4      	; 0x1260 <m_wii_open+0x160>
    1264:	00 c0       	rjmp	.+0      	; 0x1266 <m_wii_open+0x166>
    1266:	00 00       	nop
    1268:	88 e5       	ldi	r24, 0x58	; 88
    126a:	0e 94 ce 07 	call	0xf9c	; 0xf9c <start_write>
    126e:	88 23       	and	r24, r24
    1270:	09 f4       	brne	.+2      	; 0x1274 <m_wii_open+0x174>
    1272:	43 c0       	rjmp	.+134    	; 0x12fa <m_wii_open+0x1fa>
    1274:	80 e3       	ldi	r24, 0x30	; 48
    1276:	0e 94 a5 07 	call	0xf4a	; 0xf4a <send_byte>
    127a:	88 23       	and	r24, r24
    127c:	09 f4       	brne	.+2      	; 0x1280 <m_wii_open+0x180>
    127e:	3f c0       	rjmp	.+126    	; 0x12fe <m_wii_open+0x1fe>
    1280:	88 e0       	ldi	r24, 0x08	; 8
    1282:	0e 94 a5 07 	call	0xf4a	; 0xf4a <send_byte>
    1286:	88 23       	and	r24, r24
    1288:	e1 f1       	breq	.+120    	; 0x1302 <m_wii_open+0x202>
    128a:	0e 94 e7 07 	call	0xfce	; 0xfce <end>
    128e:	83 ec       	ldi	r24, 0xC3	; 195
    1290:	99 e0       	ldi	r25, 0x09	; 9
    1292:	01 97       	sbiw	r24, 0x01	; 1
    1294:	f1 f7       	brne	.-4      	; 0x1292 <m_wii_open+0x192>
    1296:	00 c0       	rjmp	.+0      	; 0x1298 <m_wii_open+0x198>
    1298:	00 00       	nop
    129a:	81 e0       	ldi	r24, 0x01	; 1
    129c:	08 95       	ret
    129e:	80 e0       	ldi	r24, 0x00	; 0
    12a0:	08 95       	ret
    12a2:	80 e0       	ldi	r24, 0x00	; 0
    12a4:	08 95       	ret
    12a6:	80 e0       	ldi	r24, 0x00	; 0
    12a8:	08 95       	ret
    12aa:	80 e0       	ldi	r24, 0x00	; 0
    12ac:	08 95       	ret
    12ae:	80 e0       	ldi	r24, 0x00	; 0
    12b0:	08 95       	ret
    12b2:	80 e0       	ldi	r24, 0x00	; 0
    12b4:	08 95       	ret
    12b6:	80 e0       	ldi	r24, 0x00	; 0
    12b8:	08 95       	ret
    12ba:	80 e0       	ldi	r24, 0x00	; 0
    12bc:	08 95       	ret
    12be:	80 e0       	ldi	r24, 0x00	; 0
    12c0:	08 95       	ret
    12c2:	80 e0       	ldi	r24, 0x00	; 0
    12c4:	08 95       	ret
    12c6:	80 e0       	ldi	r24, 0x00	; 0
    12c8:	08 95       	ret
    12ca:	80 e0       	ldi	r24, 0x00	; 0
    12cc:	08 95       	ret
    12ce:	80 e0       	ldi	r24, 0x00	; 0
    12d0:	08 95       	ret
    12d2:	80 e0       	ldi	r24, 0x00	; 0
    12d4:	08 95       	ret
    12d6:	80 e0       	ldi	r24, 0x00	; 0
    12d8:	08 95       	ret
    12da:	80 e0       	ldi	r24, 0x00	; 0
    12dc:	08 95       	ret
    12de:	80 e0       	ldi	r24, 0x00	; 0
    12e0:	08 95       	ret
    12e2:	80 e0       	ldi	r24, 0x00	; 0
    12e4:	08 95       	ret
    12e6:	80 e0       	ldi	r24, 0x00	; 0
    12e8:	08 95       	ret
    12ea:	80 e0       	ldi	r24, 0x00	; 0
    12ec:	08 95       	ret
    12ee:	80 e0       	ldi	r24, 0x00	; 0
    12f0:	08 95       	ret
    12f2:	80 e0       	ldi	r24, 0x00	; 0
    12f4:	08 95       	ret
    12f6:	80 e0       	ldi	r24, 0x00	; 0
    12f8:	08 95       	ret
    12fa:	80 e0       	ldi	r24, 0x00	; 0
    12fc:	08 95       	ret
    12fe:	80 e0       	ldi	r24, 0x00	; 0
    1300:	08 95       	ret
    1302:	80 e0       	ldi	r24, 0x00	; 0
    1304:	08 95       	ret

00001306 <__subsf3>:
    1306:	50 58       	subi	r21, 0x80	; 128

00001308 <__addsf3>:
    1308:	bb 27       	eor	r27, r27
    130a:	aa 27       	eor	r26, r26
    130c:	0e d0       	rcall	.+28     	; 0x132a <__addsf3x>
    130e:	ff c1       	rjmp	.+1022   	; 0x170e <__fp_round>
    1310:	c8 d1       	rcall	.+912    	; 0x16a2 <__fp_pscA>
    1312:	30 f0       	brcs	.+12     	; 0x1320 <__addsf3+0x18>
    1314:	cd d1       	rcall	.+922    	; 0x16b0 <__fp_pscB>
    1316:	20 f0       	brcs	.+8      	; 0x1320 <__addsf3+0x18>
    1318:	31 f4       	brne	.+12     	; 0x1326 <__addsf3+0x1e>
    131a:	9f 3f       	cpi	r25, 0xFF	; 255
    131c:	11 f4       	brne	.+4      	; 0x1322 <__addsf3+0x1a>
    131e:	1e f4       	brtc	.+6      	; 0x1326 <__addsf3+0x1e>
    1320:	98 c1       	rjmp	.+816    	; 0x1652 <__fp_nan>
    1322:	0e f4       	brtc	.+2      	; 0x1326 <__addsf3+0x1e>
    1324:	e0 95       	com	r30
    1326:	e7 fb       	bst	r30, 7
    1328:	8e c1       	rjmp	.+796    	; 0x1646 <__fp_inf>

0000132a <__addsf3x>:
    132a:	e9 2f       	mov	r30, r25
    132c:	12 d2       	rcall	.+1060   	; 0x1752 <__fp_split3>
    132e:	80 f3       	brcs	.-32     	; 0x1310 <__addsf3+0x8>
    1330:	ba 17       	cp	r27, r26
    1332:	62 07       	cpc	r22, r18
    1334:	73 07       	cpc	r23, r19
    1336:	84 07       	cpc	r24, r20
    1338:	95 07       	cpc	r25, r21
    133a:	18 f0       	brcs	.+6      	; 0x1342 <__addsf3x+0x18>
    133c:	71 f4       	brne	.+28     	; 0x135a <__addsf3x+0x30>
    133e:	9e f5       	brtc	.+102    	; 0x13a6 <__addsf3x+0x7c>
    1340:	2a c2       	rjmp	.+1108   	; 0x1796 <__fp_zero>
    1342:	0e f4       	brtc	.+2      	; 0x1346 <__addsf3x+0x1c>
    1344:	e0 95       	com	r30
    1346:	0b 2e       	mov	r0, r27
    1348:	ba 2f       	mov	r27, r26
    134a:	a0 2d       	mov	r26, r0
    134c:	0b 01       	movw	r0, r22
    134e:	b9 01       	movw	r22, r18
    1350:	90 01       	movw	r18, r0
    1352:	0c 01       	movw	r0, r24
    1354:	ca 01       	movw	r24, r20
    1356:	a0 01       	movw	r20, r0
    1358:	11 24       	eor	r1, r1
    135a:	ff 27       	eor	r31, r31
    135c:	59 1b       	sub	r21, r25
    135e:	99 f0       	breq	.+38     	; 0x1386 <__addsf3x+0x5c>
    1360:	59 3f       	cpi	r21, 0xF9	; 249
    1362:	50 f4       	brcc	.+20     	; 0x1378 <__addsf3x+0x4e>
    1364:	50 3e       	cpi	r21, 0xE0	; 224
    1366:	68 f1       	brcs	.+90     	; 0x13c2 <__addsf3x+0x98>
    1368:	1a 16       	cp	r1, r26
    136a:	f0 40       	sbci	r31, 0x00	; 0
    136c:	a2 2f       	mov	r26, r18
    136e:	23 2f       	mov	r18, r19
    1370:	34 2f       	mov	r19, r20
    1372:	44 27       	eor	r20, r20
    1374:	58 5f       	subi	r21, 0xF8	; 248
    1376:	f3 cf       	rjmp	.-26     	; 0x135e <__addsf3x+0x34>
    1378:	46 95       	lsr	r20
    137a:	37 95       	ror	r19
    137c:	27 95       	ror	r18
    137e:	a7 95       	ror	r26
    1380:	f0 40       	sbci	r31, 0x00	; 0
    1382:	53 95       	inc	r21
    1384:	c9 f7       	brne	.-14     	; 0x1378 <__addsf3x+0x4e>
    1386:	7e f4       	brtc	.+30     	; 0x13a6 <__addsf3x+0x7c>
    1388:	1f 16       	cp	r1, r31
    138a:	ba 0b       	sbc	r27, r26
    138c:	62 0b       	sbc	r22, r18
    138e:	73 0b       	sbc	r23, r19
    1390:	84 0b       	sbc	r24, r20
    1392:	ba f0       	brmi	.+46     	; 0x13c2 <__addsf3x+0x98>
    1394:	91 50       	subi	r25, 0x01	; 1
    1396:	a1 f0       	breq	.+40     	; 0x13c0 <__addsf3x+0x96>
    1398:	ff 0f       	add	r31, r31
    139a:	bb 1f       	adc	r27, r27
    139c:	66 1f       	adc	r22, r22
    139e:	77 1f       	adc	r23, r23
    13a0:	88 1f       	adc	r24, r24
    13a2:	c2 f7       	brpl	.-16     	; 0x1394 <__addsf3x+0x6a>
    13a4:	0e c0       	rjmp	.+28     	; 0x13c2 <__addsf3x+0x98>
    13a6:	ba 0f       	add	r27, r26
    13a8:	62 1f       	adc	r22, r18
    13aa:	73 1f       	adc	r23, r19
    13ac:	84 1f       	adc	r24, r20
    13ae:	48 f4       	brcc	.+18     	; 0x13c2 <__addsf3x+0x98>
    13b0:	87 95       	ror	r24
    13b2:	77 95       	ror	r23
    13b4:	67 95       	ror	r22
    13b6:	b7 95       	ror	r27
    13b8:	f7 95       	ror	r31
    13ba:	9e 3f       	cpi	r25, 0xFE	; 254
    13bc:	08 f0       	brcs	.+2      	; 0x13c0 <__addsf3x+0x96>
    13be:	b3 cf       	rjmp	.-154    	; 0x1326 <__addsf3+0x1e>
    13c0:	93 95       	inc	r25
    13c2:	88 0f       	add	r24, r24
    13c4:	08 f0       	brcs	.+2      	; 0x13c8 <__addsf3x+0x9e>
    13c6:	99 27       	eor	r25, r25
    13c8:	ee 0f       	add	r30, r30
    13ca:	97 95       	ror	r25
    13cc:	87 95       	ror	r24
    13ce:	08 95       	ret
    13d0:	68 d1       	rcall	.+720    	; 0x16a2 <__fp_pscA>
    13d2:	58 f0       	brcs	.+22     	; 0x13ea <__addsf3x+0xc0>
    13d4:	80 e8       	ldi	r24, 0x80	; 128
    13d6:	91 e0       	ldi	r25, 0x01	; 1
    13d8:	09 f4       	brne	.+2      	; 0x13dc <__addsf3x+0xb2>
    13da:	9e ef       	ldi	r25, 0xFE	; 254
    13dc:	69 d1       	rcall	.+722    	; 0x16b0 <__fp_pscB>
    13de:	28 f0       	brcs	.+10     	; 0x13ea <__addsf3x+0xc0>
    13e0:	40 e8       	ldi	r20, 0x80	; 128
    13e2:	51 e0       	ldi	r21, 0x01	; 1
    13e4:	59 f4       	brne	.+22     	; 0x13fc <atan2+0xe>
    13e6:	5e ef       	ldi	r21, 0xFE	; 254
    13e8:	09 c0       	rjmp	.+18     	; 0x13fc <atan2+0xe>
    13ea:	33 c1       	rjmp	.+614    	; 0x1652 <__fp_nan>
    13ec:	d4 c1       	rjmp	.+936    	; 0x1796 <__fp_zero>

000013ee <atan2>:
    13ee:	e9 2f       	mov	r30, r25
    13f0:	e0 78       	andi	r30, 0x80	; 128
    13f2:	af d1       	rcall	.+862    	; 0x1752 <__fp_split3>
    13f4:	68 f3       	brcs	.-38     	; 0x13d0 <__addsf3x+0xa6>
    13f6:	09 2e       	mov	r0, r25
    13f8:	05 2a       	or	r0, r21
    13fa:	c1 f3       	breq	.-16     	; 0x13ec <__addsf3x+0xc2>
    13fc:	26 17       	cp	r18, r22
    13fe:	37 07       	cpc	r19, r23
    1400:	48 07       	cpc	r20, r24
    1402:	59 07       	cpc	r21, r25
    1404:	38 f0       	brcs	.+14     	; 0x1414 <atan2+0x26>
    1406:	0e 2e       	mov	r0, r30
    1408:	07 f8       	bld	r0, 7
    140a:	e0 25       	eor	r30, r0
    140c:	69 f0       	breq	.+26     	; 0x1428 <atan2+0x3a>
    140e:	e0 25       	eor	r30, r0
    1410:	e0 64       	ori	r30, 0x40	; 64
    1412:	0a c0       	rjmp	.+20     	; 0x1428 <atan2+0x3a>
    1414:	ef 63       	ori	r30, 0x3F	; 63
    1416:	07 f8       	bld	r0, 7
    1418:	00 94       	com	r0
    141a:	07 fa       	bst	r0, 7
    141c:	db 01       	movw	r26, r22
    141e:	b9 01       	movw	r22, r18
    1420:	9d 01       	movw	r18, r26
    1422:	dc 01       	movw	r26, r24
    1424:	ca 01       	movw	r24, r20
    1426:	ad 01       	movw	r20, r26
    1428:	ef 93       	push	r30
    142a:	46 d0       	rcall	.+140    	; 0x14b8 <__divsf3_pse>
    142c:	70 d1       	rcall	.+736    	; 0x170e <__fp_round>
    142e:	0a d0       	rcall	.+20     	; 0x1444 <atan>
    1430:	5f 91       	pop	r21
    1432:	55 23       	and	r21, r21
    1434:	31 f0       	breq	.+12     	; 0x1442 <atan2+0x54>
    1436:	2b ed       	ldi	r18, 0xDB	; 219
    1438:	3f e0       	ldi	r19, 0x0F	; 15
    143a:	49 e4       	ldi	r20, 0x49	; 73
    143c:	50 fd       	sbrc	r21, 0
    143e:	49 ec       	ldi	r20, 0xC9	; 201
    1440:	63 cf       	rjmp	.-314    	; 0x1308 <__addsf3>
    1442:	08 95       	ret

00001444 <atan>:
    1444:	df 93       	push	r29
    1446:	dd 27       	eor	r29, r29
    1448:	b9 2f       	mov	r27, r25
    144a:	bf 77       	andi	r27, 0x7F	; 127
    144c:	40 e8       	ldi	r20, 0x80	; 128
    144e:	5f e3       	ldi	r21, 0x3F	; 63
    1450:	16 16       	cp	r1, r22
    1452:	17 06       	cpc	r1, r23
    1454:	48 07       	cpc	r20, r24
    1456:	5b 07       	cpc	r21, r27
    1458:	10 f4       	brcc	.+4      	; 0x145e <atan+0x1a>
    145a:	d9 2f       	mov	r29, r25
    145c:	a7 d1       	rcall	.+846    	; 0x17ac <inverse>
    145e:	9f 93       	push	r25
    1460:	8f 93       	push	r24
    1462:	7f 93       	push	r23
    1464:	6f 93       	push	r22
    1466:	54 d2       	rcall	.+1192   	; 0x1910 <square>
    1468:	ec ea       	ldi	r30, 0xAC	; 172
    146a:	f0 e0       	ldi	r31, 0x00	; 0
    146c:	f5 d0       	rcall	.+490    	; 0x1658 <__fp_powser>
    146e:	4f d1       	rcall	.+670    	; 0x170e <__fp_round>
    1470:	2f 91       	pop	r18
    1472:	3f 91       	pop	r19
    1474:	4f 91       	pop	r20
    1476:	5f 91       	pop	r21
    1478:	ac d1       	rcall	.+856    	; 0x17d2 <__mulsf3x>
    147a:	dd 23       	and	r29, r29
    147c:	49 f0       	breq	.+18     	; 0x1490 <atan+0x4c>
    147e:	90 58       	subi	r25, 0x80	; 128
    1480:	a2 ea       	ldi	r26, 0xA2	; 162
    1482:	2a ed       	ldi	r18, 0xDA	; 218
    1484:	3f e0       	ldi	r19, 0x0F	; 15
    1486:	49 ec       	ldi	r20, 0xC9	; 201
    1488:	5f e3       	ldi	r21, 0x3F	; 63
    148a:	d0 78       	andi	r29, 0x80	; 128
    148c:	5d 27       	eor	r21, r29
    148e:	4d df       	rcall	.-358    	; 0x132a <__addsf3x>
    1490:	df 91       	pop	r29
    1492:	3d c1       	rjmp	.+634    	; 0x170e <__fp_round>

00001494 <cos>:
    1494:	15 d1       	rcall	.+554    	; 0x16c0 <__fp_rempio2>
    1496:	e3 95       	inc	r30
    1498:	4b c1       	rjmp	.+662    	; 0x1730 <__fp_sinus>

0000149a <__divsf3>:
    149a:	0c d0       	rcall	.+24     	; 0x14b4 <__divsf3x>
    149c:	38 c1       	rjmp	.+624    	; 0x170e <__fp_round>
    149e:	08 d1       	rcall	.+528    	; 0x16b0 <__fp_pscB>
    14a0:	40 f0       	brcs	.+16     	; 0x14b2 <__divsf3+0x18>
    14a2:	ff d0       	rcall	.+510    	; 0x16a2 <__fp_pscA>
    14a4:	30 f0       	brcs	.+12     	; 0x14b2 <__divsf3+0x18>
    14a6:	21 f4       	brne	.+8      	; 0x14b0 <__divsf3+0x16>
    14a8:	5f 3f       	cpi	r21, 0xFF	; 255
    14aa:	19 f0       	breq	.+6      	; 0x14b2 <__divsf3+0x18>
    14ac:	cc c0       	rjmp	.+408    	; 0x1646 <__fp_inf>
    14ae:	51 11       	cpse	r21, r1
    14b0:	73 c1       	rjmp	.+742    	; 0x1798 <__fp_szero>
    14b2:	cf c0       	rjmp	.+414    	; 0x1652 <__fp_nan>

000014b4 <__divsf3x>:
    14b4:	4e d1       	rcall	.+668    	; 0x1752 <__fp_split3>
    14b6:	98 f3       	brcs	.-26     	; 0x149e <__divsf3+0x4>

000014b8 <__divsf3_pse>:
    14b8:	99 23       	and	r25, r25
    14ba:	c9 f3       	breq	.-14     	; 0x14ae <__divsf3+0x14>
    14bc:	55 23       	and	r21, r21
    14be:	b1 f3       	breq	.-20     	; 0x14ac <__divsf3+0x12>
    14c0:	95 1b       	sub	r25, r21
    14c2:	55 0b       	sbc	r21, r21
    14c4:	bb 27       	eor	r27, r27
    14c6:	aa 27       	eor	r26, r26
    14c8:	62 17       	cp	r22, r18
    14ca:	73 07       	cpc	r23, r19
    14cc:	84 07       	cpc	r24, r20
    14ce:	38 f0       	brcs	.+14     	; 0x14de <__divsf3_pse+0x26>
    14d0:	9f 5f       	subi	r25, 0xFF	; 255
    14d2:	5f 4f       	sbci	r21, 0xFF	; 255
    14d4:	22 0f       	add	r18, r18
    14d6:	33 1f       	adc	r19, r19
    14d8:	44 1f       	adc	r20, r20
    14da:	aa 1f       	adc	r26, r26
    14dc:	a9 f3       	breq	.-22     	; 0x14c8 <__divsf3_pse+0x10>
    14de:	33 d0       	rcall	.+102    	; 0x1546 <__divsf3_pse+0x8e>
    14e0:	0e 2e       	mov	r0, r30
    14e2:	3a f0       	brmi	.+14     	; 0x14f2 <__divsf3_pse+0x3a>
    14e4:	e0 e8       	ldi	r30, 0x80	; 128
    14e6:	30 d0       	rcall	.+96     	; 0x1548 <__divsf3_pse+0x90>
    14e8:	91 50       	subi	r25, 0x01	; 1
    14ea:	50 40       	sbci	r21, 0x00	; 0
    14ec:	e6 95       	lsr	r30
    14ee:	00 1c       	adc	r0, r0
    14f0:	ca f7       	brpl	.-14     	; 0x14e4 <__divsf3_pse+0x2c>
    14f2:	29 d0       	rcall	.+82     	; 0x1546 <__divsf3_pse+0x8e>
    14f4:	fe 2f       	mov	r31, r30
    14f6:	27 d0       	rcall	.+78     	; 0x1546 <__divsf3_pse+0x8e>
    14f8:	66 0f       	add	r22, r22
    14fa:	77 1f       	adc	r23, r23
    14fc:	88 1f       	adc	r24, r24
    14fe:	bb 1f       	adc	r27, r27
    1500:	26 17       	cp	r18, r22
    1502:	37 07       	cpc	r19, r23
    1504:	48 07       	cpc	r20, r24
    1506:	ab 07       	cpc	r26, r27
    1508:	b0 e8       	ldi	r27, 0x80	; 128
    150a:	09 f0       	breq	.+2      	; 0x150e <__divsf3_pse+0x56>
    150c:	bb 0b       	sbc	r27, r27
    150e:	80 2d       	mov	r24, r0
    1510:	bf 01       	movw	r22, r30
    1512:	ff 27       	eor	r31, r31
    1514:	93 58       	subi	r25, 0x83	; 131
    1516:	5f 4f       	sbci	r21, 0xFF	; 255
    1518:	2a f0       	brmi	.+10     	; 0x1524 <__divsf3_pse+0x6c>
    151a:	9e 3f       	cpi	r25, 0xFE	; 254
    151c:	51 05       	cpc	r21, r1
    151e:	68 f0       	brcs	.+26     	; 0x153a <__divsf3_pse+0x82>
    1520:	92 c0       	rjmp	.+292    	; 0x1646 <__fp_inf>
    1522:	3a c1       	rjmp	.+628    	; 0x1798 <__fp_szero>
    1524:	5f 3f       	cpi	r21, 0xFF	; 255
    1526:	ec f3       	brlt	.-6      	; 0x1522 <__divsf3_pse+0x6a>
    1528:	98 3e       	cpi	r25, 0xE8	; 232
    152a:	dc f3       	brlt	.-10     	; 0x1522 <__divsf3_pse+0x6a>
    152c:	86 95       	lsr	r24
    152e:	77 95       	ror	r23
    1530:	67 95       	ror	r22
    1532:	b7 95       	ror	r27
    1534:	f7 95       	ror	r31
    1536:	9f 5f       	subi	r25, 0xFF	; 255
    1538:	c9 f7       	brne	.-14     	; 0x152c <__divsf3_pse+0x74>
    153a:	88 0f       	add	r24, r24
    153c:	91 1d       	adc	r25, r1
    153e:	96 95       	lsr	r25
    1540:	87 95       	ror	r24
    1542:	97 f9       	bld	r25, 7
    1544:	08 95       	ret
    1546:	e1 e0       	ldi	r30, 0x01	; 1
    1548:	66 0f       	add	r22, r22
    154a:	77 1f       	adc	r23, r23
    154c:	88 1f       	adc	r24, r24
    154e:	bb 1f       	adc	r27, r27
    1550:	62 17       	cp	r22, r18
    1552:	73 07       	cpc	r23, r19
    1554:	84 07       	cpc	r24, r20
    1556:	ba 07       	cpc	r27, r26
    1558:	20 f0       	brcs	.+8      	; 0x1562 <__divsf3_pse+0xaa>
    155a:	62 1b       	sub	r22, r18
    155c:	73 0b       	sbc	r23, r19
    155e:	84 0b       	sbc	r24, r20
    1560:	ba 0b       	sbc	r27, r26
    1562:	ee 1f       	adc	r30, r30
    1564:	88 f7       	brcc	.-30     	; 0x1548 <__divsf3_pse+0x90>
    1566:	e0 95       	com	r30
    1568:	08 95       	ret

0000156a <__fixsfsi>:
    156a:	04 d0       	rcall	.+8      	; 0x1574 <__fixunssfsi>
    156c:	68 94       	set
    156e:	b1 11       	cpse	r27, r1
    1570:	13 c1       	rjmp	.+550    	; 0x1798 <__fp_szero>
    1572:	08 95       	ret

00001574 <__fixunssfsi>:
    1574:	f6 d0       	rcall	.+492    	; 0x1762 <__fp_splitA>
    1576:	88 f0       	brcs	.+34     	; 0x159a <__fixunssfsi+0x26>
    1578:	9f 57       	subi	r25, 0x7F	; 127
    157a:	90 f0       	brcs	.+36     	; 0x15a0 <__fixunssfsi+0x2c>
    157c:	b9 2f       	mov	r27, r25
    157e:	99 27       	eor	r25, r25
    1580:	b7 51       	subi	r27, 0x17	; 23
    1582:	a0 f0       	brcs	.+40     	; 0x15ac <__fixunssfsi+0x38>
    1584:	d1 f0       	breq	.+52     	; 0x15ba <__fixunssfsi+0x46>
    1586:	66 0f       	add	r22, r22
    1588:	77 1f       	adc	r23, r23
    158a:	88 1f       	adc	r24, r24
    158c:	99 1f       	adc	r25, r25
    158e:	1a f0       	brmi	.+6      	; 0x1596 <__fixunssfsi+0x22>
    1590:	ba 95       	dec	r27
    1592:	c9 f7       	brne	.-14     	; 0x1586 <__fixunssfsi+0x12>
    1594:	12 c0       	rjmp	.+36     	; 0x15ba <__fixunssfsi+0x46>
    1596:	b1 30       	cpi	r27, 0x01	; 1
    1598:	81 f0       	breq	.+32     	; 0x15ba <__fixunssfsi+0x46>
    159a:	fd d0       	rcall	.+506    	; 0x1796 <__fp_zero>
    159c:	b1 e0       	ldi	r27, 0x01	; 1
    159e:	08 95       	ret
    15a0:	fa c0       	rjmp	.+500    	; 0x1796 <__fp_zero>
    15a2:	67 2f       	mov	r22, r23
    15a4:	78 2f       	mov	r23, r24
    15a6:	88 27       	eor	r24, r24
    15a8:	b8 5f       	subi	r27, 0xF8	; 248
    15aa:	39 f0       	breq	.+14     	; 0x15ba <__fixunssfsi+0x46>
    15ac:	b9 3f       	cpi	r27, 0xF9	; 249
    15ae:	cc f3       	brlt	.-14     	; 0x15a2 <__fixunssfsi+0x2e>
    15b0:	86 95       	lsr	r24
    15b2:	77 95       	ror	r23
    15b4:	67 95       	ror	r22
    15b6:	b3 95       	inc	r27
    15b8:	d9 f7       	brne	.-10     	; 0x15b0 <__fixunssfsi+0x3c>
    15ba:	3e f4       	brtc	.+14     	; 0x15ca <__fixunssfsi+0x56>
    15bc:	90 95       	com	r25
    15be:	80 95       	com	r24
    15c0:	70 95       	com	r23
    15c2:	61 95       	neg	r22
    15c4:	7f 4f       	sbci	r23, 0xFF	; 255
    15c6:	8f 4f       	sbci	r24, 0xFF	; 255
    15c8:	9f 4f       	sbci	r25, 0xFF	; 255
    15ca:	08 95       	ret

000015cc <__floatunsisf>:
    15cc:	e8 94       	clt
    15ce:	09 c0       	rjmp	.+18     	; 0x15e2 <__floatsisf+0x12>

000015d0 <__floatsisf>:
    15d0:	97 fb       	bst	r25, 7
    15d2:	3e f4       	brtc	.+14     	; 0x15e2 <__floatsisf+0x12>
    15d4:	90 95       	com	r25
    15d6:	80 95       	com	r24
    15d8:	70 95       	com	r23
    15da:	61 95       	neg	r22
    15dc:	7f 4f       	sbci	r23, 0xFF	; 255
    15de:	8f 4f       	sbci	r24, 0xFF	; 255
    15e0:	9f 4f       	sbci	r25, 0xFF	; 255
    15e2:	99 23       	and	r25, r25
    15e4:	a9 f0       	breq	.+42     	; 0x1610 <__floatsisf+0x40>
    15e6:	f9 2f       	mov	r31, r25
    15e8:	96 e9       	ldi	r25, 0x96	; 150
    15ea:	bb 27       	eor	r27, r27
    15ec:	93 95       	inc	r25
    15ee:	f6 95       	lsr	r31
    15f0:	87 95       	ror	r24
    15f2:	77 95       	ror	r23
    15f4:	67 95       	ror	r22
    15f6:	b7 95       	ror	r27
    15f8:	f1 11       	cpse	r31, r1
    15fa:	f8 cf       	rjmp	.-16     	; 0x15ec <__floatsisf+0x1c>
    15fc:	fa f4       	brpl	.+62     	; 0x163c <__floatsisf+0x6c>
    15fe:	bb 0f       	add	r27, r27
    1600:	11 f4       	brne	.+4      	; 0x1606 <__floatsisf+0x36>
    1602:	60 ff       	sbrs	r22, 0
    1604:	1b c0       	rjmp	.+54     	; 0x163c <__floatsisf+0x6c>
    1606:	6f 5f       	subi	r22, 0xFF	; 255
    1608:	7f 4f       	sbci	r23, 0xFF	; 255
    160a:	8f 4f       	sbci	r24, 0xFF	; 255
    160c:	9f 4f       	sbci	r25, 0xFF	; 255
    160e:	16 c0       	rjmp	.+44     	; 0x163c <__floatsisf+0x6c>
    1610:	88 23       	and	r24, r24
    1612:	11 f0       	breq	.+4      	; 0x1618 <__floatsisf+0x48>
    1614:	96 e9       	ldi	r25, 0x96	; 150
    1616:	11 c0       	rjmp	.+34     	; 0x163a <__floatsisf+0x6a>
    1618:	77 23       	and	r23, r23
    161a:	21 f0       	breq	.+8      	; 0x1624 <__floatsisf+0x54>
    161c:	9e e8       	ldi	r25, 0x8E	; 142
    161e:	87 2f       	mov	r24, r23
    1620:	76 2f       	mov	r23, r22
    1622:	05 c0       	rjmp	.+10     	; 0x162e <__floatsisf+0x5e>
    1624:	66 23       	and	r22, r22
    1626:	71 f0       	breq	.+28     	; 0x1644 <__floatsisf+0x74>
    1628:	96 e8       	ldi	r25, 0x86	; 134
    162a:	86 2f       	mov	r24, r22
    162c:	70 e0       	ldi	r23, 0x00	; 0
    162e:	60 e0       	ldi	r22, 0x00	; 0
    1630:	2a f0       	brmi	.+10     	; 0x163c <__floatsisf+0x6c>
    1632:	9a 95       	dec	r25
    1634:	66 0f       	add	r22, r22
    1636:	77 1f       	adc	r23, r23
    1638:	88 1f       	adc	r24, r24
    163a:	da f7       	brpl	.-10     	; 0x1632 <__floatsisf+0x62>
    163c:	88 0f       	add	r24, r24
    163e:	96 95       	lsr	r25
    1640:	87 95       	ror	r24
    1642:	97 f9       	bld	r25, 7
    1644:	08 95       	ret

00001646 <__fp_inf>:
    1646:	97 f9       	bld	r25, 7
    1648:	9f 67       	ori	r25, 0x7F	; 127
    164a:	80 e8       	ldi	r24, 0x80	; 128
    164c:	70 e0       	ldi	r23, 0x00	; 0
    164e:	60 e0       	ldi	r22, 0x00	; 0
    1650:	08 95       	ret

00001652 <__fp_nan>:
    1652:	9f ef       	ldi	r25, 0xFF	; 255
    1654:	80 ec       	ldi	r24, 0xC0	; 192
    1656:	08 95       	ret

00001658 <__fp_powser>:
    1658:	df 93       	push	r29
    165a:	cf 93       	push	r28
    165c:	1f 93       	push	r17
    165e:	0f 93       	push	r16
    1660:	ff 92       	push	r15
    1662:	ef 92       	push	r14
    1664:	df 92       	push	r13
    1666:	7b 01       	movw	r14, r22
    1668:	8c 01       	movw	r16, r24
    166a:	68 94       	set
    166c:	05 c0       	rjmp	.+10     	; 0x1678 <__fp_powser+0x20>
    166e:	da 2e       	mov	r13, r26
    1670:	ef 01       	movw	r28, r30
    1672:	af d0       	rcall	.+350    	; 0x17d2 <__mulsf3x>
    1674:	fe 01       	movw	r30, r28
    1676:	e8 94       	clt
    1678:	a5 91       	lpm	r26, Z+
    167a:	25 91       	lpm	r18, Z+
    167c:	35 91       	lpm	r19, Z+
    167e:	45 91       	lpm	r20, Z+
    1680:	55 91       	lpm	r21, Z+
    1682:	ae f3       	brts	.-22     	; 0x166e <__fp_powser+0x16>
    1684:	ef 01       	movw	r28, r30
    1686:	51 de       	rcall	.-862    	; 0x132a <__addsf3x>
    1688:	fe 01       	movw	r30, r28
    168a:	97 01       	movw	r18, r14
    168c:	a8 01       	movw	r20, r16
    168e:	da 94       	dec	r13
    1690:	79 f7       	brne	.-34     	; 0x1670 <__fp_powser+0x18>
    1692:	df 90       	pop	r13
    1694:	ef 90       	pop	r14
    1696:	ff 90       	pop	r15
    1698:	0f 91       	pop	r16
    169a:	1f 91       	pop	r17
    169c:	cf 91       	pop	r28
    169e:	df 91       	pop	r29
    16a0:	08 95       	ret

000016a2 <__fp_pscA>:
    16a2:	00 24       	eor	r0, r0
    16a4:	0a 94       	dec	r0
    16a6:	16 16       	cp	r1, r22
    16a8:	17 06       	cpc	r1, r23
    16aa:	18 06       	cpc	r1, r24
    16ac:	09 06       	cpc	r0, r25
    16ae:	08 95       	ret

000016b0 <__fp_pscB>:
    16b0:	00 24       	eor	r0, r0
    16b2:	0a 94       	dec	r0
    16b4:	12 16       	cp	r1, r18
    16b6:	13 06       	cpc	r1, r19
    16b8:	14 06       	cpc	r1, r20
    16ba:	05 06       	cpc	r0, r21
    16bc:	08 95       	ret
    16be:	c9 cf       	rjmp	.-110    	; 0x1652 <__fp_nan>

000016c0 <__fp_rempio2>:
    16c0:	50 d0       	rcall	.+160    	; 0x1762 <__fp_splitA>
    16c2:	e8 f3       	brcs	.-6      	; 0x16be <__fp_pscB+0xe>
    16c4:	e8 94       	clt
    16c6:	e0 e0       	ldi	r30, 0x00	; 0
    16c8:	bb 27       	eor	r27, r27
    16ca:	9f 57       	subi	r25, 0x7F	; 127
    16cc:	f0 f0       	brcs	.+60     	; 0x170a <__fp_rempio2+0x4a>
    16ce:	2a ed       	ldi	r18, 0xDA	; 218
    16d0:	3f e0       	ldi	r19, 0x0F	; 15
    16d2:	49 ec       	ldi	r20, 0xC9	; 201
    16d4:	06 c0       	rjmp	.+12     	; 0x16e2 <__fp_rempio2+0x22>
    16d6:	ee 0f       	add	r30, r30
    16d8:	bb 0f       	add	r27, r27
    16da:	66 1f       	adc	r22, r22
    16dc:	77 1f       	adc	r23, r23
    16de:	88 1f       	adc	r24, r24
    16e0:	28 f0       	brcs	.+10     	; 0x16ec <__fp_rempio2+0x2c>
    16e2:	b2 3a       	cpi	r27, 0xA2	; 162
    16e4:	62 07       	cpc	r22, r18
    16e6:	73 07       	cpc	r23, r19
    16e8:	84 07       	cpc	r24, r20
    16ea:	28 f0       	brcs	.+10     	; 0x16f6 <__fp_rempio2+0x36>
    16ec:	b2 5a       	subi	r27, 0xA2	; 162
    16ee:	62 0b       	sbc	r22, r18
    16f0:	73 0b       	sbc	r23, r19
    16f2:	84 0b       	sbc	r24, r20
    16f4:	e3 95       	inc	r30
    16f6:	9a 95       	dec	r25
    16f8:	72 f7       	brpl	.-36     	; 0x16d6 <__fp_rempio2+0x16>
    16fa:	80 38       	cpi	r24, 0x80	; 128
    16fc:	30 f4       	brcc	.+12     	; 0x170a <__fp_rempio2+0x4a>
    16fe:	9a 95       	dec	r25
    1700:	bb 0f       	add	r27, r27
    1702:	66 1f       	adc	r22, r22
    1704:	77 1f       	adc	r23, r23
    1706:	88 1f       	adc	r24, r24
    1708:	d2 f7       	brpl	.-12     	; 0x16fe <__fp_rempio2+0x3e>
    170a:	90 48       	sbci	r25, 0x80	; 128
    170c:	2a c1       	rjmp	.+596    	; 0x1962 <__fp_mpack_finite>

0000170e <__fp_round>:
    170e:	09 2e       	mov	r0, r25
    1710:	03 94       	inc	r0
    1712:	00 0c       	add	r0, r0
    1714:	11 f4       	brne	.+4      	; 0x171a <__fp_round+0xc>
    1716:	88 23       	and	r24, r24
    1718:	52 f0       	brmi	.+20     	; 0x172e <__fp_round+0x20>
    171a:	bb 0f       	add	r27, r27
    171c:	40 f4       	brcc	.+16     	; 0x172e <__fp_round+0x20>
    171e:	bf 2b       	or	r27, r31
    1720:	11 f4       	brne	.+4      	; 0x1726 <__fp_round+0x18>
    1722:	60 ff       	sbrs	r22, 0
    1724:	04 c0       	rjmp	.+8      	; 0x172e <__fp_round+0x20>
    1726:	6f 5f       	subi	r22, 0xFF	; 255
    1728:	7f 4f       	sbci	r23, 0xFF	; 255
    172a:	8f 4f       	sbci	r24, 0xFF	; 255
    172c:	9f 4f       	sbci	r25, 0xFF	; 255
    172e:	08 95       	ret

00001730 <__fp_sinus>:
    1730:	ef 93       	push	r30
    1732:	e0 ff       	sbrs	r30, 0
    1734:	06 c0       	rjmp	.+12     	; 0x1742 <__fp_sinus+0x12>
    1736:	a2 ea       	ldi	r26, 0xA2	; 162
    1738:	2a ed       	ldi	r18, 0xDA	; 218
    173a:	3f e0       	ldi	r19, 0x0F	; 15
    173c:	49 ec       	ldi	r20, 0xC9	; 201
    173e:	5f eb       	ldi	r21, 0xBF	; 191
    1740:	f4 dd       	rcall	.-1048   	; 0x132a <__addsf3x>
    1742:	e5 df       	rcall	.-54     	; 0x170e <__fp_round>
    1744:	0f 90       	pop	r0
    1746:	03 94       	inc	r0
    1748:	01 fc       	sbrc	r0, 1
    174a:	90 58       	subi	r25, 0x80	; 128
    174c:	e9 ed       	ldi	r30, 0xD9	; 217
    174e:	f0 e0       	ldi	r31, 0x00	; 0
    1750:	1b c1       	rjmp	.+566    	; 0x1988 <__fp_powsodd>

00001752 <__fp_split3>:
    1752:	57 fd       	sbrc	r21, 7
    1754:	90 58       	subi	r25, 0x80	; 128
    1756:	44 0f       	add	r20, r20
    1758:	55 1f       	adc	r21, r21
    175a:	59 f0       	breq	.+22     	; 0x1772 <__fp_splitA+0x10>
    175c:	5f 3f       	cpi	r21, 0xFF	; 255
    175e:	71 f0       	breq	.+28     	; 0x177c <__fp_splitA+0x1a>
    1760:	47 95       	ror	r20

00001762 <__fp_splitA>:
    1762:	88 0f       	add	r24, r24
    1764:	97 fb       	bst	r25, 7
    1766:	99 1f       	adc	r25, r25
    1768:	61 f0       	breq	.+24     	; 0x1782 <__fp_splitA+0x20>
    176a:	9f 3f       	cpi	r25, 0xFF	; 255
    176c:	79 f0       	breq	.+30     	; 0x178c <__fp_splitA+0x2a>
    176e:	87 95       	ror	r24
    1770:	08 95       	ret
    1772:	12 16       	cp	r1, r18
    1774:	13 06       	cpc	r1, r19
    1776:	14 06       	cpc	r1, r20
    1778:	55 1f       	adc	r21, r21
    177a:	f2 cf       	rjmp	.-28     	; 0x1760 <__fp_split3+0xe>
    177c:	46 95       	lsr	r20
    177e:	f1 df       	rcall	.-30     	; 0x1762 <__fp_splitA>
    1780:	08 c0       	rjmp	.+16     	; 0x1792 <__fp_splitA+0x30>
    1782:	16 16       	cp	r1, r22
    1784:	17 06       	cpc	r1, r23
    1786:	18 06       	cpc	r1, r24
    1788:	99 1f       	adc	r25, r25
    178a:	f1 cf       	rjmp	.-30     	; 0x176e <__fp_splitA+0xc>
    178c:	86 95       	lsr	r24
    178e:	71 05       	cpc	r23, r1
    1790:	61 05       	cpc	r22, r1
    1792:	08 94       	sec
    1794:	08 95       	ret

00001796 <__fp_zero>:
    1796:	e8 94       	clt

00001798 <__fp_szero>:
    1798:	bb 27       	eor	r27, r27
    179a:	66 27       	eor	r22, r22
    179c:	77 27       	eor	r23, r23
    179e:	cb 01       	movw	r24, r22
    17a0:	97 f9       	bld	r25, 7
    17a2:	08 95       	ret

000017a4 <__gesf2>:
    17a4:	b8 d0       	rcall	.+368    	; 0x1916 <__fp_cmp>
    17a6:	08 f4       	brcc	.+2      	; 0x17aa <__gesf2+0x6>
    17a8:	8f ef       	ldi	r24, 0xFF	; 255
    17aa:	08 95       	ret

000017ac <inverse>:
    17ac:	9b 01       	movw	r18, r22
    17ae:	ac 01       	movw	r20, r24
    17b0:	60 e0       	ldi	r22, 0x00	; 0
    17b2:	70 e0       	ldi	r23, 0x00	; 0
    17b4:	80 e8       	ldi	r24, 0x80	; 128
    17b6:	9f e3       	ldi	r25, 0x3F	; 63
    17b8:	70 ce       	rjmp	.-800    	; 0x149a <__divsf3>

000017ba <__mulsf3>:
    17ba:	0b d0       	rcall	.+22     	; 0x17d2 <__mulsf3x>
    17bc:	a8 cf       	rjmp	.-176    	; 0x170e <__fp_round>
    17be:	71 df       	rcall	.-286    	; 0x16a2 <__fp_pscA>
    17c0:	28 f0       	brcs	.+10     	; 0x17cc <__mulsf3+0x12>
    17c2:	76 df       	rcall	.-276    	; 0x16b0 <__fp_pscB>
    17c4:	18 f0       	brcs	.+6      	; 0x17cc <__mulsf3+0x12>
    17c6:	95 23       	and	r25, r21
    17c8:	09 f0       	breq	.+2      	; 0x17cc <__mulsf3+0x12>
    17ca:	3d cf       	rjmp	.-390    	; 0x1646 <__fp_inf>
    17cc:	42 cf       	rjmp	.-380    	; 0x1652 <__fp_nan>
    17ce:	11 24       	eor	r1, r1
    17d0:	e3 cf       	rjmp	.-58     	; 0x1798 <__fp_szero>

000017d2 <__mulsf3x>:
    17d2:	bf df       	rcall	.-130    	; 0x1752 <__fp_split3>
    17d4:	a0 f3       	brcs	.-24     	; 0x17be <__mulsf3+0x4>

000017d6 <__mulsf3_pse>:
    17d6:	95 9f       	mul	r25, r21
    17d8:	d1 f3       	breq	.-12     	; 0x17ce <__mulsf3+0x14>
    17da:	95 0f       	add	r25, r21
    17dc:	50 e0       	ldi	r21, 0x00	; 0
    17de:	55 1f       	adc	r21, r21
    17e0:	62 9f       	mul	r22, r18
    17e2:	f0 01       	movw	r30, r0
    17e4:	72 9f       	mul	r23, r18
    17e6:	bb 27       	eor	r27, r27
    17e8:	f0 0d       	add	r31, r0
    17ea:	b1 1d       	adc	r27, r1
    17ec:	63 9f       	mul	r22, r19
    17ee:	aa 27       	eor	r26, r26
    17f0:	f0 0d       	add	r31, r0
    17f2:	b1 1d       	adc	r27, r1
    17f4:	aa 1f       	adc	r26, r26
    17f6:	64 9f       	mul	r22, r20
    17f8:	66 27       	eor	r22, r22
    17fa:	b0 0d       	add	r27, r0
    17fc:	a1 1d       	adc	r26, r1
    17fe:	66 1f       	adc	r22, r22
    1800:	82 9f       	mul	r24, r18
    1802:	22 27       	eor	r18, r18
    1804:	b0 0d       	add	r27, r0
    1806:	a1 1d       	adc	r26, r1
    1808:	62 1f       	adc	r22, r18
    180a:	73 9f       	mul	r23, r19
    180c:	b0 0d       	add	r27, r0
    180e:	a1 1d       	adc	r26, r1
    1810:	62 1f       	adc	r22, r18
    1812:	83 9f       	mul	r24, r19
    1814:	a0 0d       	add	r26, r0
    1816:	61 1d       	adc	r22, r1
    1818:	22 1f       	adc	r18, r18
    181a:	74 9f       	mul	r23, r20
    181c:	33 27       	eor	r19, r19
    181e:	a0 0d       	add	r26, r0
    1820:	61 1d       	adc	r22, r1
    1822:	23 1f       	adc	r18, r19
    1824:	84 9f       	mul	r24, r20
    1826:	60 0d       	add	r22, r0
    1828:	21 1d       	adc	r18, r1
    182a:	82 2f       	mov	r24, r18
    182c:	76 2f       	mov	r23, r22
    182e:	6a 2f       	mov	r22, r26
    1830:	11 24       	eor	r1, r1
    1832:	9f 57       	subi	r25, 0x7F	; 127
    1834:	50 40       	sbci	r21, 0x00	; 0
    1836:	8a f0       	brmi	.+34     	; 0x185a <__mulsf3_pse+0x84>
    1838:	e1 f0       	breq	.+56     	; 0x1872 <__mulsf3_pse+0x9c>
    183a:	88 23       	and	r24, r24
    183c:	4a f0       	brmi	.+18     	; 0x1850 <__mulsf3_pse+0x7a>
    183e:	ee 0f       	add	r30, r30
    1840:	ff 1f       	adc	r31, r31
    1842:	bb 1f       	adc	r27, r27
    1844:	66 1f       	adc	r22, r22
    1846:	77 1f       	adc	r23, r23
    1848:	88 1f       	adc	r24, r24
    184a:	91 50       	subi	r25, 0x01	; 1
    184c:	50 40       	sbci	r21, 0x00	; 0
    184e:	a9 f7       	brne	.-22     	; 0x183a <__mulsf3_pse+0x64>
    1850:	9e 3f       	cpi	r25, 0xFE	; 254
    1852:	51 05       	cpc	r21, r1
    1854:	70 f0       	brcs	.+28     	; 0x1872 <__mulsf3_pse+0x9c>
    1856:	f7 ce       	rjmp	.-530    	; 0x1646 <__fp_inf>
    1858:	9f cf       	rjmp	.-194    	; 0x1798 <__fp_szero>
    185a:	5f 3f       	cpi	r21, 0xFF	; 255
    185c:	ec f3       	brlt	.-6      	; 0x1858 <__mulsf3_pse+0x82>
    185e:	98 3e       	cpi	r25, 0xE8	; 232
    1860:	dc f3       	brlt	.-10     	; 0x1858 <__mulsf3_pse+0x82>
    1862:	86 95       	lsr	r24
    1864:	77 95       	ror	r23
    1866:	67 95       	ror	r22
    1868:	b7 95       	ror	r27
    186a:	f7 95       	ror	r31
    186c:	e7 95       	ror	r30
    186e:	9f 5f       	subi	r25, 0xFF	; 255
    1870:	c1 f7       	brne	.-16     	; 0x1862 <__mulsf3_pse+0x8c>
    1872:	fe 2b       	or	r31, r30
    1874:	88 0f       	add	r24, r24
    1876:	91 1d       	adc	r25, r1
    1878:	96 95       	lsr	r25
    187a:	87 95       	ror	r24
    187c:	97 f9       	bld	r25, 7
    187e:	08 95       	ret

00001880 <sin>:
    1880:	9f 93       	push	r25
    1882:	1e df       	rcall	.-452    	; 0x16c0 <__fp_rempio2>
    1884:	0f 90       	pop	r0
    1886:	07 fc       	sbrc	r0, 7
    1888:	ee 5f       	subi	r30, 0xFE	; 254
    188a:	52 cf       	rjmp	.-348    	; 0x1730 <__fp_sinus>
    188c:	11 f4       	brne	.+4      	; 0x1892 <sin+0x12>
    188e:	0e f4       	brtc	.+2      	; 0x1892 <sin+0x12>
    1890:	e0 ce       	rjmp	.-576    	; 0x1652 <__fp_nan>
    1892:	65 c0       	rjmp	.+202    	; 0x195e <__fp_mpack>

00001894 <sqrt>:
    1894:	66 df       	rcall	.-308    	; 0x1762 <__fp_splitA>
    1896:	d0 f3       	brcs	.-12     	; 0x188c <sin+0xc>
    1898:	99 23       	and	r25, r25
    189a:	d9 f3       	breq	.-10     	; 0x1892 <sin+0x12>
    189c:	ce f3       	brts	.-14     	; 0x1890 <sin+0x10>
    189e:	9f 57       	subi	r25, 0x7F	; 127
    18a0:	55 0b       	sbc	r21, r21
    18a2:	87 ff       	sbrs	r24, 7
    18a4:	6a d0       	rcall	.+212    	; 0x197a <__fp_norm2>
    18a6:	00 24       	eor	r0, r0
    18a8:	a0 e6       	ldi	r26, 0x60	; 96
    18aa:	40 ea       	ldi	r20, 0xA0	; 160
    18ac:	90 01       	movw	r18, r0
    18ae:	80 58       	subi	r24, 0x80	; 128
    18b0:	56 95       	lsr	r21
    18b2:	97 95       	ror	r25
    18b4:	28 f4       	brcc	.+10     	; 0x18c0 <sqrt+0x2c>
    18b6:	80 5c       	subi	r24, 0xC0	; 192
    18b8:	66 0f       	add	r22, r22
    18ba:	77 1f       	adc	r23, r23
    18bc:	88 1f       	adc	r24, r24
    18be:	20 f0       	brcs	.+8      	; 0x18c8 <sqrt+0x34>
    18c0:	26 17       	cp	r18, r22
    18c2:	37 07       	cpc	r19, r23
    18c4:	48 07       	cpc	r20, r24
    18c6:	30 f4       	brcc	.+12     	; 0x18d4 <sqrt+0x40>
    18c8:	62 1b       	sub	r22, r18
    18ca:	73 0b       	sbc	r23, r19
    18cc:	84 0b       	sbc	r24, r20
    18ce:	20 29       	or	r18, r0
    18d0:	31 29       	or	r19, r1
    18d2:	4a 2b       	or	r20, r26
    18d4:	a6 95       	lsr	r26
    18d6:	17 94       	ror	r1
    18d8:	07 94       	ror	r0
    18da:	20 25       	eor	r18, r0
    18dc:	31 25       	eor	r19, r1
    18de:	4a 27       	eor	r20, r26
    18e0:	58 f7       	brcc	.-42     	; 0x18b8 <sqrt+0x24>
    18e2:	66 0f       	add	r22, r22
    18e4:	77 1f       	adc	r23, r23
    18e6:	88 1f       	adc	r24, r24
    18e8:	20 f0       	brcs	.+8      	; 0x18f2 <sqrt+0x5e>
    18ea:	26 17       	cp	r18, r22
    18ec:	37 07       	cpc	r19, r23
    18ee:	48 07       	cpc	r20, r24
    18f0:	30 f4       	brcc	.+12     	; 0x18fe <sqrt+0x6a>
    18f2:	62 0b       	sbc	r22, r18
    18f4:	73 0b       	sbc	r23, r19
    18f6:	84 0b       	sbc	r24, r20
    18f8:	20 0d       	add	r18, r0
    18fa:	31 1d       	adc	r19, r1
    18fc:	41 1d       	adc	r20, r1
    18fe:	a0 95       	com	r26
    1900:	81 f7       	brne	.-32     	; 0x18e2 <sqrt+0x4e>
    1902:	b9 01       	movw	r22, r18
    1904:	84 2f       	mov	r24, r20
    1906:	91 58       	subi	r25, 0x81	; 129
    1908:	88 0f       	add	r24, r24
    190a:	96 95       	lsr	r25
    190c:	87 95       	ror	r24
    190e:	08 95       	ret

00001910 <square>:
    1910:	9b 01       	movw	r18, r22
    1912:	ac 01       	movw	r20, r24
    1914:	52 cf       	rjmp	.-348    	; 0x17ba <__mulsf3>

00001916 <__fp_cmp>:
    1916:	99 0f       	add	r25, r25
    1918:	00 08       	sbc	r0, r0
    191a:	55 0f       	add	r21, r21
    191c:	aa 0b       	sbc	r26, r26
    191e:	e0 e8       	ldi	r30, 0x80	; 128
    1920:	fe ef       	ldi	r31, 0xFE	; 254
    1922:	16 16       	cp	r1, r22
    1924:	17 06       	cpc	r1, r23
    1926:	e8 07       	cpc	r30, r24
    1928:	f9 07       	cpc	r31, r25
    192a:	c0 f0       	brcs	.+48     	; 0x195c <__fp_cmp+0x46>
    192c:	12 16       	cp	r1, r18
    192e:	13 06       	cpc	r1, r19
    1930:	e4 07       	cpc	r30, r20
    1932:	f5 07       	cpc	r31, r21
    1934:	98 f0       	brcs	.+38     	; 0x195c <__fp_cmp+0x46>
    1936:	62 1b       	sub	r22, r18
    1938:	73 0b       	sbc	r23, r19
    193a:	84 0b       	sbc	r24, r20
    193c:	95 0b       	sbc	r25, r21
    193e:	39 f4       	brne	.+14     	; 0x194e <__fp_cmp+0x38>
    1940:	0a 26       	eor	r0, r26
    1942:	61 f0       	breq	.+24     	; 0x195c <__fp_cmp+0x46>
    1944:	23 2b       	or	r18, r19
    1946:	24 2b       	or	r18, r20
    1948:	25 2b       	or	r18, r21
    194a:	21 f4       	brne	.+8      	; 0x1954 <__fp_cmp+0x3e>
    194c:	08 95       	ret
    194e:	0a 26       	eor	r0, r26
    1950:	09 f4       	brne	.+2      	; 0x1954 <__fp_cmp+0x3e>
    1952:	a1 40       	sbci	r26, 0x01	; 1
    1954:	a6 95       	lsr	r26
    1956:	8f ef       	ldi	r24, 0xFF	; 255
    1958:	81 1d       	adc	r24, r1
    195a:	81 1d       	adc	r24, r1
    195c:	08 95       	ret

0000195e <__fp_mpack>:
    195e:	9f 3f       	cpi	r25, 0xFF	; 255
    1960:	31 f0       	breq	.+12     	; 0x196e <__fp_mpack_finite+0xc>

00001962 <__fp_mpack_finite>:
    1962:	91 50       	subi	r25, 0x01	; 1
    1964:	20 f4       	brcc	.+8      	; 0x196e <__fp_mpack_finite+0xc>
    1966:	87 95       	ror	r24
    1968:	77 95       	ror	r23
    196a:	67 95       	ror	r22
    196c:	b7 95       	ror	r27
    196e:	88 0f       	add	r24, r24
    1970:	91 1d       	adc	r25, r1
    1972:	96 95       	lsr	r25
    1974:	87 95       	ror	r24
    1976:	97 f9       	bld	r25, 7
    1978:	08 95       	ret

0000197a <__fp_norm2>:
    197a:	91 50       	subi	r25, 0x01	; 1
    197c:	50 40       	sbci	r21, 0x00	; 0
    197e:	66 0f       	add	r22, r22
    1980:	77 1f       	adc	r23, r23
    1982:	88 1f       	adc	r24, r24
    1984:	d2 f7       	brpl	.-12     	; 0x197a <__fp_norm2>
    1986:	08 95       	ret

00001988 <__fp_powsodd>:
    1988:	9f 93       	push	r25
    198a:	8f 93       	push	r24
    198c:	7f 93       	push	r23
    198e:	6f 93       	push	r22
    1990:	ff 93       	push	r31
    1992:	ef 93       	push	r30
    1994:	9b 01       	movw	r18, r22
    1996:	ac 01       	movw	r20, r24
    1998:	10 df       	rcall	.-480    	; 0x17ba <__mulsf3>
    199a:	ef 91       	pop	r30
    199c:	ff 91       	pop	r31
    199e:	5c de       	rcall	.-840    	; 0x1658 <__fp_powser>
    19a0:	2f 91       	pop	r18
    19a2:	3f 91       	pop	r19
    19a4:	4f 91       	pop	r20
    19a6:	5f 91       	pop	r21
    19a8:	08 cf       	rjmp	.-496    	; 0x17ba <__mulsf3>

000019aa <itoa>:
    19aa:	fb 01       	movw	r30, r22
    19ac:	9f 01       	movw	r18, r30
    19ae:	e8 94       	clt
    19b0:	42 30       	cpi	r20, 0x02	; 2
    19b2:	c4 f0       	brlt	.+48     	; 0x19e4 <itoa+0x3a>
    19b4:	45 32       	cpi	r20, 0x25	; 37
    19b6:	b4 f4       	brge	.+44     	; 0x19e4 <itoa+0x3a>
    19b8:	4a 30       	cpi	r20, 0x0A	; 10
    19ba:	29 f4       	brne	.+10     	; 0x19c6 <itoa+0x1c>
    19bc:	97 fb       	bst	r25, 7
    19be:	1e f4       	brtc	.+6      	; 0x19c6 <itoa+0x1c>
    19c0:	90 95       	com	r25
    19c2:	81 95       	neg	r24
    19c4:	9f 4f       	sbci	r25, 0xFF	; 255
    19c6:	64 2f       	mov	r22, r20
    19c8:	77 27       	eor	r23, r23
    19ca:	0e 94 06 0d 	call	0x1a0c	; 0x1a0c <__udivmodhi4>
    19ce:	80 5d       	subi	r24, 0xD0	; 208
    19d0:	8a 33       	cpi	r24, 0x3A	; 58
    19d2:	0c f0       	brlt	.+2      	; 0x19d6 <itoa+0x2c>
    19d4:	89 5d       	subi	r24, 0xD9	; 217
    19d6:	81 93       	st	Z+, r24
    19d8:	cb 01       	movw	r24, r22
    19da:	00 97       	sbiw	r24, 0x00	; 0
    19dc:	a1 f7       	brne	.-24     	; 0x19c6 <itoa+0x1c>
    19de:	16 f4       	brtc	.+4      	; 0x19e4 <itoa+0x3a>
    19e0:	5d e2       	ldi	r21, 0x2D	; 45
    19e2:	51 93       	st	Z+, r21
    19e4:	10 82       	st	Z, r1
    19e6:	c9 01       	movw	r24, r18
    19e8:	0c 94 f6 0c 	jmp	0x19ec	; 0x19ec <strrev>

000019ec <strrev>:
    19ec:	dc 01       	movw	r26, r24
    19ee:	fc 01       	movw	r30, r24
    19f0:	67 2f       	mov	r22, r23
    19f2:	71 91       	ld	r23, Z+
    19f4:	77 23       	and	r23, r23
    19f6:	e1 f7       	brne	.-8      	; 0x19f0 <strrev+0x4>
    19f8:	32 97       	sbiw	r30, 0x02	; 2
    19fa:	04 c0       	rjmp	.+8      	; 0x1a04 <strrev+0x18>
    19fc:	7c 91       	ld	r23, X
    19fe:	6d 93       	st	X+, r22
    1a00:	70 83       	st	Z, r23
    1a02:	62 91       	ld	r22, -Z
    1a04:	ae 17       	cp	r26, r30
    1a06:	bf 07       	cpc	r27, r31
    1a08:	c8 f3       	brcs	.-14     	; 0x19fc <strrev+0x10>
    1a0a:	08 95       	ret

00001a0c <__udivmodhi4>:
    1a0c:	aa 1b       	sub	r26, r26
    1a0e:	bb 1b       	sub	r27, r27
    1a10:	51 e1       	ldi	r21, 0x11	; 17
    1a12:	07 c0       	rjmp	.+14     	; 0x1a22 <__udivmodhi4_ep>

00001a14 <__udivmodhi4_loop>:
    1a14:	aa 1f       	adc	r26, r26
    1a16:	bb 1f       	adc	r27, r27
    1a18:	a6 17       	cp	r26, r22
    1a1a:	b7 07       	cpc	r27, r23
    1a1c:	10 f0       	brcs	.+4      	; 0x1a22 <__udivmodhi4_ep>
    1a1e:	a6 1b       	sub	r26, r22
    1a20:	b7 0b       	sbc	r27, r23

00001a22 <__udivmodhi4_ep>:
    1a22:	88 1f       	adc	r24, r24
    1a24:	99 1f       	adc	r25, r25
    1a26:	5a 95       	dec	r21
    1a28:	a9 f7       	brne	.-22     	; 0x1a14 <__udivmodhi4_loop>
    1a2a:	80 95       	com	r24
    1a2c:	90 95       	com	r25
    1a2e:	bc 01       	movw	r22, r24
    1a30:	cd 01       	movw	r24, r26
    1a32:	08 95       	ret

00001a34 <_exit>:
    1a34:	f8 94       	cli

00001a36 <__stop_program>:
    1a36:	ff cf       	rjmp	.-2      	; 0x1a36 <__stop_program>
