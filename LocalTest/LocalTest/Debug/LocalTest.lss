
LocalTest.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000c  00800100  00001cfa  00001d8e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001cfa  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000006e  0080010c  0080010c  00001d9a  2**0
                  ALLOC
  3 .stab         0000387c  00000000  00000000  00001d9c  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00001166  00000000  00000000  00005618  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      0000002f  00000000  00000000  0000677e  2**0
                  CONTENTS, READONLY
  6 .debug_aranges 000001e8  00000000  00000000  000067ad  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00001e90  00000000  00000000  00006995  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000007ec  00000000  00000000  00008825  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00000c9a  00000000  00000000  00009011  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000604  00000000  00000000  00009cac  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    000006fb  00000000  00000000  0000a2b0  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    000025c0  00000000  00000000  0000a9ab  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000200  00000000  00000000  0000cf6b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 d5 00 	jmp	0x1aa	; 0x1aa <__ctors_end>
       4:	0c 94 f2 00 	jmp	0x1e4	; 0x1e4 <__bad_interrupt>
       8:	0c 94 f2 00 	jmp	0x1e4	; 0x1e4 <__bad_interrupt>
       c:	0c 94 f2 00 	jmp	0x1e4	; 0x1e4 <__bad_interrupt>
      10:	0c 94 f2 00 	jmp	0x1e4	; 0x1e4 <__bad_interrupt>
      14:	0c 94 f2 00 	jmp	0x1e4	; 0x1e4 <__bad_interrupt>
      18:	0c 94 f2 00 	jmp	0x1e4	; 0x1e4 <__bad_interrupt>
      1c:	0c 94 f2 00 	jmp	0x1e4	; 0x1e4 <__bad_interrupt>
      20:	0c 94 f2 00 	jmp	0x1e4	; 0x1e4 <__bad_interrupt>
      24:	0c 94 f2 00 	jmp	0x1e4	; 0x1e4 <__bad_interrupt>
      28:	0c 94 f4 06 	jmp	0xde8	; 0xde8 <__vector_10>
      2c:	0c 94 32 07 	jmp	0xe64	; 0xe64 <__vector_11>
      30:	0c 94 f2 00 	jmp	0x1e4	; 0x1e4 <__bad_interrupt>
      34:	0c 94 f2 00 	jmp	0x1e4	; 0x1e4 <__bad_interrupt>
      38:	0c 94 f2 00 	jmp	0x1e4	; 0x1e4 <__bad_interrupt>
      3c:	0c 94 f2 00 	jmp	0x1e4	; 0x1e4 <__bad_interrupt>
      40:	0c 94 f2 00 	jmp	0x1e4	; 0x1e4 <__bad_interrupt>
      44:	0c 94 f2 00 	jmp	0x1e4	; 0x1e4 <__bad_interrupt>
      48:	0c 94 f2 00 	jmp	0x1e4	; 0x1e4 <__bad_interrupt>
      4c:	0c 94 f2 00 	jmp	0x1e4	; 0x1e4 <__bad_interrupt>
      50:	0c 94 f2 00 	jmp	0x1e4	; 0x1e4 <__bad_interrupt>
      54:	0c 94 f2 00 	jmp	0x1e4	; 0x1e4 <__bad_interrupt>
      58:	0c 94 f2 00 	jmp	0x1e4	; 0x1e4 <__bad_interrupt>
      5c:	0c 94 f2 00 	jmp	0x1e4	; 0x1e4 <__bad_interrupt>
      60:	0c 94 f2 00 	jmp	0x1e4	; 0x1e4 <__bad_interrupt>
      64:	0c 94 f2 00 	jmp	0x1e4	; 0x1e4 <__bad_interrupt>
      68:	0c 94 f2 00 	jmp	0x1e4	; 0x1e4 <__bad_interrupt>
      6c:	0c 94 f2 00 	jmp	0x1e4	; 0x1e4 <__bad_interrupt>
      70:	0c 94 f2 00 	jmp	0x1e4	; 0x1e4 <__bad_interrupt>
      74:	0c 94 f2 00 	jmp	0x1e4	; 0x1e4 <__bad_interrupt>
      78:	0c 94 f2 00 	jmp	0x1e4	; 0x1e4 <__bad_interrupt>
      7c:	0c 94 f2 00 	jmp	0x1e4	; 0x1e4 <__bad_interrupt>
      80:	0c 94 f2 00 	jmp	0x1e4	; 0x1e4 <__bad_interrupt>
      84:	0c 94 f2 00 	jmp	0x1e4	; 0x1e4 <__bad_interrupt>
      88:	0c 94 f2 00 	jmp	0x1e4	; 0x1e4 <__bad_interrupt>
      8c:	0c 94 f2 00 	jmp	0x1e4	; 0x1e4 <__bad_interrupt>
      90:	0c 94 f2 00 	jmp	0x1e4	; 0x1e4 <__bad_interrupt>
      94:	0c 94 f2 00 	jmp	0x1e4	; 0x1e4 <__bad_interrupt>
      98:	0c 94 f2 00 	jmp	0x1e4	; 0x1e4 <__bad_interrupt>
      9c:	0c 94 f2 00 	jmp	0x1e4	; 0x1e4 <__bad_interrupt>
      a0:	0c 94 f2 00 	jmp	0x1e4	; 0x1e4 <__bad_interrupt>
      a4:	0c 94 f2 00 	jmp	0x1e4	; 0x1e4 <__bad_interrupt>
      a8:	0c 94 f2 00 	jmp	0x1e4	; 0x1e4 <__bad_interrupt>
      ac:	08 4a       	sbci	r16, 0xA8	; 168
      ae:	d7 3b       	cpi	r29, 0xB7	; 183
      b0:	3b ce       	rjmp	.-906    	; 0xfffffd28 <__eeprom_end+0xff7efd28>
      b2:	01 6e       	ori	r16, 0xE1	; 225
      b4:	84 bc       	out	0x24, r8	; 36
      b6:	bf fd       	.word	0xfdbf	; ????
      b8:	c1 2f       	mov	r28, r17
      ba:	3d 6c       	ori	r19, 0xCD	; 205
      bc:	74 31       	cpi	r23, 0x14	; 20
      be:	9a bd       	out	0x2a, r25	; 42
      c0:	56 83       	std	Z+6, r21	; 0x06
      c2:	3d da       	rcall	.-2950   	; 0xfffff53e <__eeprom_end+0xff7ef53e>
      c4:	3d 00       	.word	0x003d	; ????
      c6:	c7 7f       	andi	r28, 0xF7	; 247
      c8:	11 be       	out	0x31, r1	; 49
      ca:	d9 e4       	ldi	r29, 0x49	; 73
      cc:	bb 4c       	sbci	r27, 0xCB	; 203
      ce:	3e 91       	ld	r19, -X
      d0:	6b aa       	std	Y+51, r6	; 0x33
      d2:	aa be       	out	0x3a, r10	; 58
      d4:	00 00       	nop
      d6:	00 80       	ld	r0, Z
      d8:	3f 05       	cpc	r19, r15
      da:	a8 4c       	sbci	r26, 0xC8	; 200
      dc:	cd b2       	in	r12, 0x1d	; 29
      de:	d4 4e       	sbci	r29, 0xE4	; 228
      e0:	b9 38       	cpi	r27, 0x89	; 137
      e2:	36 a9       	ldd	r19, Z+54	; 0x36
      e4:	02 0c       	add	r0, r2
      e6:	50 b9       	out	0x00, r21	; 0
      e8:	91 86       	std	Z+9, r9	; 0x09
      ea:	88 08       	sbc	r8, r8
      ec:	3c a6       	std	Y+44, r3	; 0x2c
      ee:	aa aa       	std	Y+50, r10	; 0x32
      f0:	2a be       	out	0x3a, r2	; 58
      f2:	00 00       	nop
      f4:	00 80       	ld	r0, Z
      f6:	3f 00       	.word	0x003f	; ????

000000f7 <descriptor_list>:
      f7:	00 01 00 00 2b 01 12 00 02 00 00 3d 01 43 00 03     ....+......=.C..
     107:	00 00 80 01 04 01 03 09 04 84 01 12 02 03 09 04     ................
     117:	98 01 06 03 03 09 04 a0 01 08                       ..........

00000121 <endpoint_config_table>:
     121:	00 01 c1 12 01 80 36 01 81 36                       ......6..6

0000012b <device_descriptor>:
     12b:	12 01 00 02 02 00 00 10 c0 16 7a 04 00 01 01 02     ..........z.....
     13b:	03 01                                               ..

0000013d <config1_descriptor>:
     13d:	09 02 43 00 02 01 00 c0 32 09 04 00 00 01 02 02     ..C.....2.......
     14d:	01 00 05 24 00 10 01 05 24 01 01 01 04 24 02 06     ...$....$....$..
     15d:	05 24 06 00 01 07 05 82 03 10 00 40 09 04 01 00     .$.........@....
     16d:	02 0a 00 00 00 07 05 03 02 40 00 00 07 05 84 02     .........@......
     17d:	40 00 00                                            @..

00000180 <string0>:
     180:	04 03 09 04                                         ....

00000184 <string1>:
     184:	12 03 4a 00 2e 00 20 00 46 00 69 00 65 00 6e 00     ..J... .F.i.e.n.
     194:	65 00 00 00                                         e...

00000198 <string2>:
     198:	06 03 4d 00 32 00 00 00                             ..M.2...

000001a0 <string3>:
     1a0:	08 03 34 00 31 00 30 00 00 00                       ..4.1.0...

000001aa <__ctors_end>:
     1aa:	11 24       	eor	r1, r1
     1ac:	1f be       	out	0x3f, r1	; 63
     1ae:	cf ef       	ldi	r28, 0xFF	; 255
     1b0:	da e0       	ldi	r29, 0x0A	; 10
     1b2:	de bf       	out	0x3e, r29	; 62
     1b4:	cd bf       	out	0x3d, r28	; 61

000001b6 <__do_copy_data>:
     1b6:	11 e0       	ldi	r17, 0x01	; 1
     1b8:	a0 e0       	ldi	r26, 0x00	; 0
     1ba:	b1 e0       	ldi	r27, 0x01	; 1
     1bc:	ea ef       	ldi	r30, 0xFA	; 250
     1be:	fc e1       	ldi	r31, 0x1C	; 28
     1c0:	02 c0       	rjmp	.+4      	; 0x1c6 <__do_copy_data+0x10>
     1c2:	05 90       	lpm	r0, Z+
     1c4:	0d 92       	st	X+, r0
     1c6:	ac 30       	cpi	r26, 0x0C	; 12
     1c8:	b1 07       	cpc	r27, r17
     1ca:	d9 f7       	brne	.-10     	; 0x1c2 <__do_copy_data+0xc>

000001cc <__do_clear_bss>:
     1cc:	21 e0       	ldi	r18, 0x01	; 1
     1ce:	ac e0       	ldi	r26, 0x0C	; 12
     1d0:	b1 e0       	ldi	r27, 0x01	; 1
     1d2:	01 c0       	rjmp	.+2      	; 0x1d6 <.do_clear_bss_start>

000001d4 <.do_clear_bss_loop>:
     1d4:	1d 92       	st	X+, r1

000001d6 <.do_clear_bss_start>:
     1d6:	aa 37       	cpi	r26, 0x7A	; 122
     1d8:	b2 07       	cpc	r27, r18
     1da:	e1 f7       	brne	.-8      	; 0x1d4 <.do_clear_bss_loop>
     1dc:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <main>
     1e0:	0c 94 7b 0e 	jmp	0x1cf6	; 0x1cf6 <_exit>

000001e4 <__bad_interrupt>:
     1e4:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001e8 <main>:


 int main(void){
	 
	 //MATLAB PLOTTING STUFFS*****************************************************************
	m_clockdivide(0);
     1e8:	e1 e6       	ldi	r30, 0x61	; 97
     1ea:	f0 e0       	ldi	r31, 0x00	; 0
     1ec:	80 e8       	ldi	r24, 0x80	; 128
     1ee:	80 83       	st	Z, r24
     1f0:	10 82       	st	Z, r1
		 
	long count = 0;
	
	m_red(ON);
     1f2:	6e 9a       	sbi	0x0d, 6	; 13
     1f4:	76 98       	cbi	0x0e, 6	; 14
	m_green(ON);
     1f6:	6a 9a       	sbi	0x0d, 2	; 13
     1f8:	72 98       	cbi	0x0e, 2	; 14

	m_bus_init();
     1fa:	0e 94 39 01 	call	0x272	; 0x272 <m_bus_init>
	m_wii_open();
     1fe:	0e 94 dd 09 	call	0x13ba	; 0x13ba <m_wii_open>
	//first place mWii in center of rink to calibrate!!!
	//calibrate();
	m_usb_init(); // connect usb
     202:	0e 94 39 06 	call	0xc72	; 0xc72 <m_usb_init>
	while(!m_usb_isconnected()){};  //wait for connection
     206:	0e 94 52 06 	call	0xca4	; 0xca4 <m_usb_isconnected>
     20a:	88 23       	and	r24, r24
     20c:	e1 f3       	breq	.-8      	; 0x206 <main+0x1e>

	m_red(OFF);
     20e:	6e 9a       	sbi	0x0d, 6	; 13
     210:	76 9a       	sbi	0x0e, 6	; 14
	m_green(OFF);
     212:	6a 9a       	sbi	0x0d, 2	; 13
     214:	72 9a       	sbi	0x0e, 2	; 14
 #define CLOCK 0
 
 //long count = 0;


 int main(void){
     216:	0e e8       	ldi	r16, 0x8E	; 142
     218:	11 e0       	ldi	r17, 0x01	; 1
	char rx_buffer; //computer interactions
	
	int i;
	while(1){

		m_red(ON);
     21a:	6e 9a       	sbi	0x0d, 6	; 13
     21c:	76 98       	cbi	0x0e, 6	; 14
		m_green(OFF);
     21e:	6a 9a       	sbi	0x0d, 2	; 13
     220:	72 9a       	sbi	0x0e, 2	; 14
		localize(data);
     222:	86 e5       	ldi	r24, 0x56	; 86
     224:	91 e0       	ldi	r25, 0x01	; 1
     226:	0e 94 0d 04 	call	0x81a	; 0x81a <localize>
		m_red(OFF);
     22a:	6e 9a       	sbi	0x0d, 6	; 13
     22c:	76 9a       	sbi	0x0e, 6	; 14
		m_green(ON);
     22e:	6a 9a       	sbi	0x0d, 2	; 13
     230:	72 98       	cbi	0x0e, 2	; 14

		while(!m_usb_rx_available());  	//wait for an indication from the computer
     232:	0e 94 73 06 	call	0xce6	; 0xce6 <m_usb_rx_available>
     236:	88 23       	and	r24, r24
     238:	e1 f3       	breq	.-8      	; 0x232 <main+0x4a>
		rx_buffer = m_usb_rx_char();  	//grab the computer packet
     23a:	0e 94 55 06 	call	0xcaa	; 0xcaa <m_usb_rx_char>
     23e:	c8 2f       	mov	r28, r24

		m_usb_rx_flush();  				//clear buffer
     240:	0e 94 82 06 	call	0xd04	; 0xd04 <m_usb_rx_flush>

		if(rx_buffer == 1) {  			//computer wants ir buffer
     244:	c1 30       	cpi	r28, 0x01	; 1
     246:	49 f7       	brne	.-46     	; 0x21a <main+0x32>
     248:	c6 e5       	ldi	r28, 0x56	; 86
     24a:	d1 e0       	ldi	r29, 0x01	; 1
			//write ir buffer as concatenated hex:  i.e. f0f1f4f5		

			for (i = 0 ; i < 14 ; i++){
			m_usb_tx_int((int)data[i]);
     24c:	69 91       	ld	r22, Y+
     24e:	79 91       	ld	r23, Y+
     250:	89 91       	ld	r24, Y+
     252:	99 91       	ld	r25, Y+
     254:	0e 94 16 0c 	call	0x182c	; 0x182c <__fixsfsi>
     258:	cb 01       	movw	r24, r22
     25a:	0e 94 ba 08 	call	0x1174	; 0x1174 <m_usb_tx_int>
			m_usb_tx_char('\t');
     25e:	89 e0       	ldi	r24, 0x09	; 9
     260:	0e 94 98 06 	call	0xd30	; 0xd30 <m_usb_tx_char>
		m_usb_rx_flush();  				//clear buffer

		if(rx_buffer == 1) {  			//computer wants ir buffer
			//write ir buffer as concatenated hex:  i.e. f0f1f4f5		

			for (i = 0 ; i < 14 ; i++){
     264:	c0 17       	cp	r28, r16
     266:	d1 07       	cpc	r29, r17
     268:	89 f7       	brne	.-30     	; 0x24c <main+0x64>
			m_usb_tx_int((int)data[i]);
			m_usb_tx_char('\t');

			}

			m_usb_tx_char('\n');  //MATLAB serial command reads 1 line at a time
     26a:	8a e0       	ldi	r24, 0x0A	; 10
     26c:	0e 94 98 06 	call	0xd30	; 0xd30 <m_usb_tx_char>
     270:	d4 cf       	rjmp	.-88     	; 0x21a <main+0x32>

00000272 <m_bus_init>:
     272:	58 9a       	sbi	0x0b, 0	; 11
     274:	59 9a       	sbi	0x0b, 1	; 11
     276:	5a 9a       	sbi	0x0b, 2	; 11
     278:	8c e0       	ldi	r24, 0x0C	; 12
     27a:	80 93 b8 00 	sts	0x00B8, r24
     27e:	e9 e6       	ldi	r30, 0x69	; 105
     280:	f0 e0       	ldi	r31, 0x00	; 0
     282:	80 81       	ld	r24, Z
     284:	80 62       	ori	r24, 0x20	; 32
     286:	80 83       	st	Z, r24
     288:	80 81       	ld	r24, Z
     28a:	8f 7e       	andi	r24, 0xEF	; 239
     28c:	80 83       	st	Z, r24
     28e:	ea 9a       	sbi	0x1d, 2	; 29
     290:	78 94       	sei
     292:	08 95       	ret

00000294 <getData>:
int far1 = 0, far2 = 0, close1 = 0, close2 = 0;

int numlost = 0;
int recalibrate = 0;

unsigned char getData(unsigned int* x, unsigned int* y) {
     294:	0f 93       	push	r16
     296:	1f 93       	push	r17
     298:	cf 93       	push	r28
     29a:	df 93       	push	r29
     29c:	8c 01       	movw	r16, r24
     29e:	eb 01       	movw	r28, r22
	m_wii_read(blobs);
     2a0:	8a e3       	ldi	r24, 0x3A	; 58
     2a2:	91 e0       	ldi	r25, 0x01	; 1
     2a4:	0e 94 48 09 	call	0x1290	; 0x1290 <m_wii_read>
	x[0] = blobs[0];
     2a8:	80 91 3a 01 	lds	r24, 0x013A
     2ac:	90 91 3b 01 	lds	r25, 0x013B
     2b0:	f8 01       	movw	r30, r16
     2b2:	91 83       	std	Z+1, r25	; 0x01
     2b4:	80 83       	st	Z, r24
	x[1] = blobs[3];
     2b6:	80 91 40 01 	lds	r24, 0x0140
     2ba:	90 91 41 01 	lds	r25, 0x0141
     2be:	93 83       	std	Z+3, r25	; 0x03
     2c0:	82 83       	std	Z+2, r24	; 0x02
	x[2] = blobs[6];
     2c2:	80 91 46 01 	lds	r24, 0x0146
     2c6:	90 91 47 01 	lds	r25, 0x0147
     2ca:	95 83       	std	Z+5, r25	; 0x05
     2cc:	84 83       	std	Z+4, r24	; 0x04
	x[3] = blobs[9];
     2ce:	80 91 4c 01 	lds	r24, 0x014C
     2d2:	90 91 4d 01 	lds	r25, 0x014D
     2d6:	97 83       	std	Z+7, r25	; 0x07
     2d8:	86 83       	std	Z+6, r24	; 0x06
	y[0] = blobs[1];
     2da:	80 91 3c 01 	lds	r24, 0x013C
     2de:	90 91 3d 01 	lds	r25, 0x013D
     2e2:	99 83       	std	Y+1, r25	; 0x01
     2e4:	88 83       	st	Y, r24
	y[1] = blobs[4];
     2e6:	80 91 42 01 	lds	r24, 0x0142
     2ea:	90 91 43 01 	lds	r25, 0x0143
     2ee:	9b 83       	std	Y+3, r25	; 0x03
     2f0:	8a 83       	std	Y+2, r24	; 0x02
	y[2] = blobs[7];
     2f2:	80 91 48 01 	lds	r24, 0x0148
     2f6:	90 91 49 01 	lds	r25, 0x0149
     2fa:	9d 83       	std	Y+5, r25	; 0x05
     2fc:	8c 83       	std	Y+4, r24	; 0x04
	y[3] = blobs[10];
     2fe:	80 91 4e 01 	lds	r24, 0x014E
     302:	90 91 4f 01 	lds	r25, 0x014F
     306:	9f 83       	std	Y+7, r25	; 0x07
     308:	8e 83       	std	Y+6, r24	; 0x06
	return 1;
} 
     30a:	81 e0       	ldi	r24, 0x01	; 1
     30c:	df 91       	pop	r29
     30e:	cf 91       	pop	r28
     310:	1f 91       	pop	r17
     312:	0f 91       	pop	r16
     314:	08 95       	ret

00000316 <determine_blobs>:

unsigned char determine_blobs() {
     316:	2f 92       	push	r2
     318:	3f 92       	push	r3
     31a:	4f 92       	push	r4
     31c:	5f 92       	push	r5
     31e:	6f 92       	push	r6
     320:	7f 92       	push	r7
     322:	8f 92       	push	r8
     324:	9f 92       	push	r9
     326:	af 92       	push	r10
     328:	bf 92       	push	r11
     32a:	cf 92       	push	r12
     32c:	df 92       	push	r13
     32e:	ef 92       	push	r14
     330:	ff 92       	push	r15
     332:	0f 93       	push	r16
     334:	1f 93       	push	r17
     336:	cf 93       	push	r28
     338:	df 93       	push	r29
     33a:	cd b7       	in	r28, 0x3d	; 61
     33c:	de b7       	in	r29, 0x3e	; 62
     33e:	6c 97       	sbiw	r28, 0x1c	; 28
     340:	0f b6       	in	r0, 0x3f	; 63
     342:	f8 94       	cli
     344:	de bf       	out	0x3e, r29	; 62
     346:	0f be       	out	0x3f, r0	; 63
     348:	cd bf       	out	0x3d, r28	; 61
	int exit = 0;
	distmax = 0;
     34a:	10 92 1a 01 	sts	0x011A, r1
     34e:	10 92 1b 01 	sts	0x011B, r1
     352:	10 92 1c 01 	sts	0x011C, r1
     356:	10 92 1d 01 	sts	0x011D, r1
	distmin = 30000;
     35a:	80 e0       	ldi	r24, 0x00	; 0
     35c:	90 e6       	ldi	r25, 0x60	; 96
     35e:	aa ee       	ldi	r26, 0xEA	; 234
     360:	b6 e4       	ldi	r27, 0x46	; 70
     362:	80 93 00 01 	sts	0x0100, r24
     366:	90 93 01 01 	sts	0x0101, r25
     36a:	a0 93 02 01 	sts	0x0102, r26
     36e:	b0 93 03 01 	sts	0x0103, r27
	while (exit == 0) {
		getData(x, y);
		if (x[0] < 1023 && x[1] < 1023 && x[2] < 1023 && x[3] < 1023) {
     372:	0f 2e       	mov	r0, r31
     374:	fc e2       	ldi	r31, 0x2C	; 44
     376:	cf 2e       	mov	r12, r31
     378:	f1 e0       	ldi	r31, 0x01	; 1
     37a:	df 2e       	mov	r13, r31
     37c:	f0 2d       	mov	r31, r0
     37e:	0e e2       	ldi	r16, 0x2E	; 46
     380:	11 e0       	ldi	r17, 0x01	; 1
     382:	0f 2e       	mov	r0, r31
     384:	f0 e3       	ldi	r31, 0x30	; 48
     386:	ef 2e       	mov	r14, r31
     388:	f1 e0       	ldi	r31, 0x01	; 1
     38a:	ff 2e       	mov	r15, r31
     38c:	f0 2d       	mov	r31, r0
unsigned char determine_blobs() {
	int exit = 0;
	distmax = 0;
	distmin = 30000;
	while (exit == 0) {
		getData(x, y);
     38e:	62 e2       	ldi	r22, 0x22	; 34
     390:	71 e0       	ldi	r23, 0x01	; 1
     392:	8a e2       	ldi	r24, 0x2A	; 42
     394:	91 e0       	ldi	r25, 0x01	; 1
     396:	0e 94 4a 01 	call	0x294	; 0x294 <getData>
		if (x[0] < 1023 && x[1] < 1023 && x[2] < 1023 && x[3] < 1023) {
     39a:	80 91 2a 01 	lds	r24, 0x012A
     39e:	90 91 2b 01 	lds	r25, 0x012B
     3a2:	8f 3f       	cpi	r24, 0xFF	; 255
     3a4:	93 40       	sbci	r25, 0x03	; 3
     3a6:	98 f7       	brcc	.-26     	; 0x38e <determine_blobs+0x78>
     3a8:	f6 01       	movw	r30, r12
     3aa:	80 81       	ld	r24, Z
     3ac:	91 81       	ldd	r25, Z+1	; 0x01
     3ae:	8f 3f       	cpi	r24, 0xFF	; 255
     3b0:	93 40       	sbci	r25, 0x03	; 3
     3b2:	68 f7       	brcc	.-38     	; 0x38e <determine_blobs+0x78>
     3b4:	f8 01       	movw	r30, r16
     3b6:	80 81       	ld	r24, Z
     3b8:	91 81       	ldd	r25, Z+1	; 0x01
     3ba:	8f 3f       	cpi	r24, 0xFF	; 255
     3bc:	93 40       	sbci	r25, 0x03	; 3
     3be:	38 f7       	brcc	.-50     	; 0x38e <determine_blobs+0x78>
     3c0:	f7 01       	movw	r30, r14
     3c2:	80 81       	ld	r24, Z
     3c4:	91 81       	ldd	r25, Z+1	; 0x01
     3c6:	8f 3f       	cpi	r24, 0xFF	; 255
     3c8:	93 40       	sbci	r25, 0x03	; 3
     3ca:	08 f7       	brcc	.-62     	; 0x38e <determine_blobs+0x78>
     3cc:	80 90 1e 01 	lds	r8, 0x011E
     3d0:	90 90 1f 01 	lds	r9, 0x011F
     3d4:	a0 90 20 01 	lds	r10, 0x0120
     3d8:	b0 90 21 01 	lds	r11, 0x0121
     3dc:	20 91 1a 01 	lds	r18, 0x011A
     3e0:	29 83       	std	Y+1, r18	; 0x01
     3e2:	30 91 1b 01 	lds	r19, 0x011B
     3e6:	3a 83       	std	Y+2, r19	; 0x02
     3e8:	40 91 1c 01 	lds	r20, 0x011C
     3ec:	4b 83       	std	Y+3, r20	; 0x03
     3ee:	50 91 1d 01 	lds	r21, 0x011D
     3f2:	5c 83       	std	Y+4, r21	; 0x04
     3f4:	60 91 14 01 	lds	r22, 0x0114
     3f8:	6b 8b       	std	Y+19, r22	; 0x13
     3fa:	70 91 15 01 	lds	r23, 0x0115
     3fe:	7c 8b       	std	Y+20, r23	; 0x14
     400:	80 91 12 01 	lds	r24, 0x0112
     404:	89 8b       	std	Y+17, r24	; 0x11
     406:	90 91 13 01 	lds	r25, 0x0113
     40a:	9a 8b       	std	Y+18, r25	; 0x12
     40c:	e0 91 16 01 	lds	r30, 0x0116
     410:	ed 8b       	std	Y+21, r30	; 0x15
     412:	f0 91 17 01 	lds	r31, 0x0117
     416:	fe 8b       	std	Y+22, r31	; 0x16
     418:	20 91 18 01 	lds	r18, 0x0118
     41c:	2f 8b       	std	Y+23, r18	; 0x17
     41e:	30 91 19 01 	lds	r19, 0x0119
     422:	38 8f       	std	Y+24, r19	; 0x18
     424:	40 91 00 01 	lds	r20, 0x0100
     428:	4d 83       	std	Y+5, r20	; 0x05
     42a:	50 91 01 01 	lds	r21, 0x0101
     42e:	5e 83       	std	Y+6, r21	; 0x06
     430:	20 90 02 01 	lds	r2, 0x0102
     434:	30 90 03 01 	lds	r3, 0x0103
     438:	60 91 10 01 	lds	r22, 0x0110
     43c:	69 8f       	std	Y+25, r22	; 0x19
     43e:	70 91 11 01 	lds	r23, 0x0111
     442:	7a 8f       	std	Y+26, r23	; 0x1a
     444:	80 91 0e 01 	lds	r24, 0x010E
     448:	90 91 0f 01 	lds	r25, 0x010F
     44c:	98 8b       	std	Y+16, r25	; 0x10
     44e:	8f 87       	std	Y+15, r24	; 0x0f
     450:	18 86       	std	Y+8, r1	; 0x08
     452:	1f 82       	std	Y+7, r1	; 0x07
     454:	c1 2c       	mov	r12, r1
     456:	d1 2c       	mov	r13, r1
     458:	b9 c0       	rjmp	.+370    	; 0x5cc <determine_blobs+0x2b6>
			exit = 1;
			for (int i = 0; i < 4; i++) {
				for (int j = i; j < 4; j++) {
					if (i == j) continue;
     45a:	eb 8d       	ldd	r30, Y+27	; 0x1b
     45c:	fc 8d       	ldd	r31, Y+28	; 0x1c
     45e:	e4 15       	cp	r30, r4
     460:	f5 05       	cpc	r31, r5
     462:	09 f4       	brne	.+2      	; 0x466 <determine_blobs+0x150>
     464:	9c c0       	rjmp	.+312    	; 0x59e <determine_blobs+0x288>
					dist = sqrt(((float)x[i]-(float)x[j])*((float)x[i]-(float)x[j])+((float)y[i]-(float)y[j])*((float)y[i]-(float)y[j]));
     466:	e9 85       	ldd	r30, Y+9	; 0x09
     468:	fa 85       	ldd	r31, Y+10	; 0x0a
     46a:	60 81       	ld	r22, Z
     46c:	71 81       	ldd	r23, Z+1	; 0x01
     46e:	80 e0       	ldi	r24, 0x00	; 0
     470:	90 e0       	ldi	r25, 0x00	; 0
     472:	0e 94 47 0c 	call	0x188e	; 0x188e <__floatunsisf>
     476:	6b 01       	movw	r12, r22
     478:	7c 01       	movw	r14, r24
     47a:	f3 01       	movw	r30, r6
     47c:	60 81       	ld	r22, Z
     47e:	71 81       	ldd	r23, Z+1	; 0x01
     480:	80 e0       	ldi	r24, 0x00	; 0
     482:	90 e0       	ldi	r25, 0x00	; 0
     484:	0e 94 47 0c 	call	0x188e	; 0x188e <__floatunsisf>
     488:	9b 01       	movw	r18, r22
     48a:	ac 01       	movw	r20, r24
     48c:	c7 01       	movw	r24, r14
     48e:	b6 01       	movw	r22, r12
     490:	0e 94 e0 0a 	call	0x15c0	; 0x15c0 <__subsf3>
     494:	c6 2e       	mov	r12, r22
     496:	d7 2e       	mov	r13, r23
     498:	e8 2e       	mov	r14, r24
     49a:	f9 2e       	mov	r15, r25
     49c:	eb 85       	ldd	r30, Y+11	; 0x0b
     49e:	fc 85       	ldd	r31, Y+12	; 0x0c
     4a0:	60 81       	ld	r22, Z
     4a2:	71 81       	ldd	r23, Z+1	; 0x01
     4a4:	80 e0       	ldi	r24, 0x00	; 0
     4a6:	90 e0       	ldi	r25, 0x00	; 0
     4a8:	0e 94 47 0c 	call	0x188e	; 0x188e <__floatunsisf>
     4ac:	4b 01       	movw	r8, r22
     4ae:	5c 01       	movw	r10, r24
     4b0:	f8 01       	movw	r30, r16
     4b2:	60 81       	ld	r22, Z
     4b4:	71 81       	ldd	r23, Z+1	; 0x01
     4b6:	80 e0       	ldi	r24, 0x00	; 0
     4b8:	90 e0       	ldi	r25, 0x00	; 0
     4ba:	0e 94 47 0c 	call	0x188e	; 0x188e <__floatunsisf>
     4be:	9b 01       	movw	r18, r22
     4c0:	ac 01       	movw	r20, r24
     4c2:	c5 01       	movw	r24, r10
     4c4:	b4 01       	movw	r22, r8
     4c6:	0e 94 e0 0a 	call	0x15c0	; 0x15c0 <__subsf3>
     4ca:	86 2e       	mov	r8, r22
     4cc:	97 2e       	mov	r9, r23
     4ce:	a8 2e       	mov	r10, r24
     4d0:	b9 2e       	mov	r11, r25
     4d2:	2c 2d       	mov	r18, r12
     4d4:	3d 2d       	mov	r19, r13
     4d6:	4e 2d       	mov	r20, r14
     4d8:	5f 2d       	mov	r21, r15
     4da:	6c 2d       	mov	r22, r12
     4dc:	7d 2d       	mov	r23, r13
     4de:	8e 2d       	mov	r24, r14
     4e0:	9f 2d       	mov	r25, r15
     4e2:	0e 94 62 0d 	call	0x1ac4	; 0x1ac4 <__mulsf3>
     4e6:	6b 01       	movw	r12, r22
     4e8:	7c 01       	movw	r14, r24
     4ea:	28 2d       	mov	r18, r8
     4ec:	39 2d       	mov	r19, r9
     4ee:	4a 2d       	mov	r20, r10
     4f0:	5b 2d       	mov	r21, r11
     4f2:	68 2d       	mov	r22, r8
     4f4:	79 2d       	mov	r23, r9
     4f6:	8a 2d       	mov	r24, r10
     4f8:	9b 2d       	mov	r25, r11
     4fa:	0e 94 62 0d 	call	0x1ac4	; 0x1ac4 <__mulsf3>
     4fe:	9b 01       	movw	r18, r22
     500:	ac 01       	movw	r20, r24
     502:	c7 01       	movw	r24, r14
     504:	b6 01       	movw	r22, r12
     506:	0e 94 e1 0a 	call	0x15c2	; 0x15c2 <__addsf3>
     50a:	0e 94 cf 0d 	call	0x1b9e	; 0x1b9e <sqrt>
     50e:	86 2e       	mov	r8, r22
     510:	97 2e       	mov	r9, r23
     512:	a8 2e       	mov	r10, r24
     514:	b9 2e       	mov	r11, r25
					if (dist > distmax) {
     516:	79 81       	ldd	r23, Y+1	; 0x01
     518:	6a 81       	ldd	r22, Y+2	; 0x02
     51a:	9b 81       	ldd	r25, Y+3	; 0x03
     51c:	8c 81       	ldd	r24, Y+4	; 0x04
     51e:	27 2f       	mov	r18, r23
     520:	36 2f       	mov	r19, r22
     522:	49 2f       	mov	r20, r25
     524:	58 2f       	mov	r21, r24
     526:	68 2d       	mov	r22, r8
     528:	79 2d       	mov	r23, r9
     52a:	8a 2d       	mov	r24, r10
     52c:	9b 2d       	mov	r25, r11
     52e:	0e 94 57 0d 	call	0x1aae	; 0x1aae <__gesf2>
     532:	18 16       	cp	r1, r24
     534:	d4 f4       	brge	.+52     	; 0x56a <determine_blobs+0x254>
						distmax = dist;
						far1 = i;
						far2 = j;
						dcenter = dist / 2.0;
     536:	20 e0       	ldi	r18, 0x00	; 0
     538:	30 e0       	ldi	r19, 0x00	; 0
     53a:	40 e0       	ldi	r20, 0x00	; 0
     53c:	5f e3       	ldi	r21, 0x3F	; 63
     53e:	68 2d       	mov	r22, r8
     540:	79 2d       	mov	r23, r9
     542:	8a 2d       	mov	r24, r10
     544:	9b 2d       	mov	r25, r11
     546:	0e 94 62 0d 	call	0x1ac4	; 0x1ac4 <__mulsf3>
     54a:	6d 8b       	std	Y+21, r22	; 0x15
     54c:	7e 8b       	std	Y+22, r23	; 0x16
     54e:	8f 8b       	std	Y+23, r24	; 0x17
     550:	98 8f       	std	Y+24, r25	; 0x18
					if (i == j) continue;
					dist = sqrt(((float)x[i]-(float)x[j])*((float)x[i]-(float)x[j])+((float)y[i]-(float)y[j])*((float)y[i]-(float)y[j]));
					if (dist > distmax) {
						distmax = dist;
						far1 = i;
						far2 = j;
     552:	fb 8d       	ldd	r31, Y+27	; 0x1b
     554:	f9 8b       	std	Y+17, r31	; 0x11
     556:	2c 8d       	ldd	r18, Y+28	; 0x1c
     558:	2a 8b       	std	Y+18, r18	; 0x12
				for (int j = i; j < 4; j++) {
					if (i == j) continue;
					dist = sqrt(((float)x[i]-(float)x[j])*((float)x[i]-(float)x[j])+((float)y[i]-(float)y[j])*((float)y[i]-(float)y[j]));
					if (dist > distmax) {
						distmax = dist;
						far1 = i;
     55a:	3d 85       	ldd	r19, Y+13	; 0x0d
     55c:	3b 8b       	std	Y+19, r19	; 0x13
     55e:	4e 85       	ldd	r20, Y+14	; 0x0e
     560:	4c 8b       	std	Y+20, r20	; 0x14
			for (int i = 0; i < 4; i++) {
				for (int j = i; j < 4; j++) {
					if (i == j) continue;
					dist = sqrt(((float)x[i]-(float)x[j])*((float)x[i]-(float)x[j])+((float)y[i]-(float)y[j])*((float)y[i]-(float)y[j]));
					if (dist > distmax) {
						distmax = dist;
     562:	89 82       	std	Y+1, r8	; 0x01
     564:	9a 82       	std	Y+2, r9	; 0x02
     566:	ab 82       	std	Y+3, r10	; 0x03
     568:	bc 82       	std	Y+4, r11	; 0x04
						far1 = i;
						far2 = j;
						dcenter = dist / 2.0;
					}
					if (dist < distmin) {
     56a:	7d 81       	ldd	r23, Y+5	; 0x05
     56c:	6e 81       	ldd	r22, Y+6	; 0x06
     56e:	27 2f       	mov	r18, r23
     570:	36 2f       	mov	r19, r22
     572:	42 2d       	mov	r20, r2
     574:	53 2d       	mov	r21, r3
     576:	68 2d       	mov	r22, r8
     578:	79 2d       	mov	r23, r9
     57a:	8a 2d       	mov	r24, r10
     57c:	9b 2d       	mov	r25, r11
     57e:	0e 94 a7 0b 	call	0x174e	; 0x174e <__cmpsf2>
     582:	88 23       	and	r24, r24
     584:	64 f4       	brge	.+24     	; 0x59e <determine_blobs+0x288>
						distmin = dist;
						close1 = i;
						close2 = j;
     586:	6b 8d       	ldd	r22, Y+27	; 0x1b
     588:	7c 8d       	ldd	r23, Y+28	; 0x1c
     58a:	78 8b       	std	Y+16, r23	; 0x10
     58c:	6f 87       	std	Y+15, r22	; 0x0f
						far2 = j;
						dcenter = dist / 2.0;
					}
					if (dist < distmin) {
						distmin = dist;
						close1 = i;
     58e:	7d 85       	ldd	r23, Y+13	; 0x0d
     590:	79 8f       	std	Y+25, r23	; 0x19
     592:	8e 85       	ldd	r24, Y+14	; 0x0e
     594:	8a 8f       	std	Y+26, r24	; 0x1a
						far1 = i;
						far2 = j;
						dcenter = dist / 2.0;
					}
					if (dist < distmin) {
						distmin = dist;
     596:	8d 82       	std	Y+5, r8	; 0x05
     598:	9e 82       	std	Y+6, r9	; 0x06
     59a:	2a 2c       	mov	r2, r10
     59c:	3b 2c       	mov	r3, r11
     59e:	92 e0       	ldi	r25, 0x02	; 2
     5a0:	69 0e       	add	r6, r25
     5a2:	71 1c       	adc	r7, r1
     5a4:	0e 5f       	subi	r16, 0xFE	; 254
     5a6:	1f 4f       	sbci	r17, 0xFF	; 255
	while (exit == 0) {
		getData(x, y);
		if (x[0] < 1023 && x[1] < 1023 && x[2] < 1023 && x[3] < 1023) {
			exit = 1;
			for (int i = 0; i < 4; i++) {
				for (int j = i; j < 4; j++) {
     5a8:	eb 8d       	ldd	r30, Y+27	; 0x1b
     5aa:	fc 8d       	ldd	r31, Y+28	; 0x1c
     5ac:	31 96       	adiw	r30, 0x01	; 1
     5ae:	fc 8f       	std	Y+28, r31	; 0x1c
     5b0:	eb 8f       	std	Y+27, r30	; 0x1b
     5b2:	34 97       	sbiw	r30, 0x04	; 4
     5b4:	09 f0       	breq	.+2      	; 0x5b8 <determine_blobs+0x2a2>
     5b6:	51 cf       	rjmp	.-350    	; 0x45a <determine_blobs+0x144>
	distmin = 30000;
	while (exit == 0) {
		getData(x, y);
		if (x[0] < 1023 && x[1] < 1023 && x[2] < 1023 && x[3] < 1023) {
			exit = 1;
			for (int i = 0; i < 4; i++) {
     5b8:	2f 81       	ldd	r18, Y+7	; 0x07
     5ba:	38 85       	ldd	r19, Y+8	; 0x08
     5bc:	2f 5f       	subi	r18, 0xFF	; 255
     5be:	3f 4f       	sbci	r19, 0xFF	; 255
     5c0:	38 87       	std	Y+8, r19	; 0x08
     5c2:	2f 83       	std	Y+7, r18	; 0x07
     5c4:	69 01       	movw	r12, r18
     5c6:	24 30       	cpi	r18, 0x04	; 4
     5c8:	31 05       	cpc	r19, r1
     5ca:	39 f1       	breq	.+78     	; 0x61a <determine_blobs+0x304>
				for (int j = i; j < 4; j++) {
     5cc:	34 e0       	ldi	r19, 0x04	; 4
     5ce:	c3 16       	cp	r12, r19
     5d0:	d1 04       	cpc	r13, r1
     5d2:	94 f7       	brge	.-28     	; 0x5b8 <determine_blobs+0x2a2>
					if (i == j) continue;
					dist = sqrt(((float)x[i]-(float)x[j])*((float)x[i]-(float)x[j])+((float)y[i]-(float)y[j])*((float)y[i]-(float)y[j]));
     5d4:	86 01       	movw	r16, r12
     5d6:	0f 5f       	subi	r16, 0xFF	; 255
     5d8:	1f 4f       	sbci	r17, 0xFF	; 255
	y[2] = blobs[7];
	y[3] = blobs[10];
	return 1;
} 

unsigned char determine_blobs() {
     5da:	00 0f       	add	r16, r16
     5dc:	11 1f       	adc	r17, r17
     5de:	0f 2e       	mov	r0, r31
     5e0:	fa e2       	ldi	r31, 0x2A	; 42
     5e2:	ef 2e       	mov	r14, r31
     5e4:	f1 e0       	ldi	r31, 0x01	; 1
     5e6:	ff 2e       	mov	r15, r31
     5e8:	f0 2d       	mov	r31, r0
     5ea:	e0 0e       	add	r14, r16
     5ec:	f1 1e       	adc	r15, r17
     5ee:	0e 5d       	subi	r16, 0xDE	; 222
     5f0:	1e 4f       	sbci	r17, 0xFE	; 254
		if (x[0] < 1023 && x[1] < 1023 && x[2] < 1023 && x[3] < 1023) {
			exit = 1;
			for (int i = 0; i < 4; i++) {
				for (int j = i; j < 4; j++) {
					if (i == j) continue;
					dist = sqrt(((float)x[i]-(float)x[j])*((float)x[i]-(float)x[j])+((float)y[i]-(float)y[j])*((float)y[i]-(float)y[j]));
     5f2:	c6 01       	movw	r24, r12
     5f4:	88 0f       	add	r24, r24
     5f6:	99 1f       	adc	r25, r25
     5f8:	ac 01       	movw	r20, r24
     5fa:	46 5d       	subi	r20, 0xD6	; 214
     5fc:	5e 4f       	sbci	r21, 0xFE	; 254
     5fe:	5a 87       	std	Y+10, r21	; 0x0a
     600:	49 87       	std	Y+9, r20	; 0x09
     602:	bc 01       	movw	r22, r24
     604:	6e 5d       	subi	r22, 0xDE	; 222
     606:	7e 4f       	sbci	r23, 0xFE	; 254
     608:	7c 87       	std	Y+12, r23	; 0x0c
     60a:	6b 87       	std	Y+11, r22	; 0x0b
						far2 = j;
						dcenter = dist / 2.0;
					}
					if (dist < distmin) {
						distmin = dist;
						close1 = i;
     60c:	cd 86       	std	Y+13, r12	; 0x0d
     60e:	de 86       	std	Y+14, r13	; 0x0e
     610:	dc 8e       	std	Y+28, r13	; 0x1c
     612:	cb 8e       	std	Y+27, r12	; 0x1b
     614:	26 01       	movw	r4, r12
     616:	37 01       	movw	r6, r14
     618:	c7 cf       	rjmp	.-114    	; 0x5a8 <determine_blobs+0x292>
     61a:	88 2d       	mov	r24, r8
     61c:	99 2d       	mov	r25, r9
     61e:	aa 2d       	mov	r26, r10
     620:	bb 2d       	mov	r27, r11
     622:	80 93 1e 01 	sts	0x011E, r24
     626:	90 93 1f 01 	sts	0x011F, r25
     62a:	a0 93 20 01 	sts	0x0120, r26
     62e:	b0 93 21 01 	sts	0x0121, r27
     632:	59 81       	ldd	r21, Y+1	; 0x01
     634:	4a 81       	ldd	r20, Y+2	; 0x02
     636:	3b 81       	ldd	r19, Y+3	; 0x03
     638:	2c 81       	ldd	r18, Y+4	; 0x04
     63a:	85 2f       	mov	r24, r21
     63c:	94 2f       	mov	r25, r20
     63e:	a3 2f       	mov	r26, r19
     640:	b2 2f       	mov	r27, r18
     642:	80 93 1a 01 	sts	0x011A, r24
     646:	90 93 1b 01 	sts	0x011B, r25
     64a:	a0 93 1c 01 	sts	0x011C, r26
     64e:	b0 93 1d 01 	sts	0x011D, r27
     652:	7b 89       	ldd	r23, Y+19	; 0x13
     654:	70 93 14 01 	sts	0x0114, r23
     658:	8c 89       	ldd	r24, Y+20	; 0x14
     65a:	80 93 15 01 	sts	0x0115, r24
     65e:	99 89       	ldd	r25, Y+17	; 0x11
     660:	90 93 12 01 	sts	0x0112, r25
     664:	ea 89       	ldd	r30, Y+18	; 0x12
     666:	e0 93 13 01 	sts	0x0113, r30
     66a:	5d 89       	ldd	r21, Y+21	; 0x15
     66c:	4e 89       	ldd	r20, Y+22	; 0x16
     66e:	3f 89       	ldd	r19, Y+23	; 0x17
     670:	28 8d       	ldd	r18, Y+24	; 0x18
     672:	85 2f       	mov	r24, r21
     674:	94 2f       	mov	r25, r20
     676:	a3 2f       	mov	r26, r19
     678:	b2 2f       	mov	r27, r18
     67a:	80 93 16 01 	sts	0x0116, r24
     67e:	90 93 17 01 	sts	0x0117, r25
     682:	a0 93 18 01 	sts	0x0118, r26
     686:	b0 93 19 01 	sts	0x0119, r27
     68a:	5d 81       	ldd	r21, Y+5	; 0x05
     68c:	4e 81       	ldd	r20, Y+6	; 0x06
     68e:	85 2f       	mov	r24, r21
     690:	94 2f       	mov	r25, r20
     692:	a2 2d       	mov	r26, r2
     694:	b3 2d       	mov	r27, r3
     696:	80 93 00 01 	sts	0x0100, r24
     69a:	90 93 01 01 	sts	0x0101, r25
     69e:	a0 93 02 01 	sts	0x0102, r26
     6a2:	b0 93 03 01 	sts	0x0103, r27
     6a6:	f9 8d       	ldd	r31, Y+25	; 0x19
     6a8:	f0 93 10 01 	sts	0x0110, r31
     6ac:	2a 8d       	ldd	r18, Y+26	; 0x1a
     6ae:	20 93 11 01 	sts	0x0111, r18
     6b2:	3f 85       	ldd	r19, Y+15	; 0x0f
     6b4:	30 93 0e 01 	sts	0x010E, r19
     6b8:	48 89       	ldd	r20, Y+16	; 0x10
     6ba:	40 93 0f 01 	sts	0x010F, r20
						close2 = j;
					}
				}
			}
			if (far1 == close1) {
     6be:	80 91 14 01 	lds	r24, 0x0114
     6c2:	90 91 15 01 	lds	r25, 0x0115
     6c6:	20 91 10 01 	lds	r18, 0x0110
     6ca:	30 91 11 01 	lds	r19, 0x0111
     6ce:	82 17       	cp	r24, r18
     6d0:	93 07       	cpc	r25, r19
     6d2:	19 f5       	brne	.+70     	; 0x71a <determine_blobs+0x404>
				top = far1;
     6d4:	90 93 39 01 	sts	0x0139, r25
     6d8:	80 93 38 01 	sts	0x0138, r24
				bottom = far2;
     6dc:	40 91 12 01 	lds	r20, 0x0112
     6e0:	50 91 13 01 	lds	r21, 0x0113
     6e4:	50 93 37 01 	sts	0x0137, r21
     6e8:	40 93 36 01 	sts	0x0136, r20
				right = close2;
     6ec:	20 91 0e 01 	lds	r18, 0x010E
     6f0:	30 91 0f 01 	lds	r19, 0x010F
     6f4:	30 93 33 01 	sts	0x0133, r19
     6f8:	20 93 32 01 	sts	0x0132, r18
				//left + top + bottom + right = 1 + 2 + 3 + 4 = 10
				left = 9 - top - bottom - right;
     6fc:	69 e0       	ldi	r22, 0x09	; 9
     6fe:	70 e0       	ldi	r23, 0x00	; 0
     700:	fb 01       	movw	r30, r22
     702:	e8 1b       	sub	r30, r24
     704:	f9 0b       	sbc	r31, r25
     706:	cf 01       	movw	r24, r30
     708:	84 1b       	sub	r24, r20
     70a:	95 0b       	sbc	r25, r21
     70c:	82 1b       	sub	r24, r18
     70e:	93 0b       	sbc	r25, r19
     710:	90 93 35 01 	sts	0x0135, r25
     714:	80 93 34 01 	sts	0x0134, r24
     718:	66 c0       	rjmp	.+204    	; 0x7e6 <determine_blobs+0x4d0>
			}
			else if (far1 == close2) {
     71a:	4f 85       	ldd	r20, Y+15	; 0x0f
     71c:	58 89       	ldd	r21, Y+16	; 0x10
     71e:	84 17       	cp	r24, r20
     720:	95 07       	cpc	r25, r21
     722:	f9 f4       	brne	.+62     	; 0x762 <determine_blobs+0x44c>
				top = far1;
     724:	90 93 39 01 	sts	0x0139, r25
     728:	80 93 38 01 	sts	0x0138, r24
				bottom = far2;
     72c:	40 91 12 01 	lds	r20, 0x0112
     730:	50 91 13 01 	lds	r21, 0x0113
     734:	50 93 37 01 	sts	0x0137, r21
     738:	40 93 36 01 	sts	0x0136, r20
				right = close1;
     73c:	30 93 33 01 	sts	0x0133, r19
     740:	20 93 32 01 	sts	0x0132, r18
				left = 9 - top - bottom - right;
     744:	69 e0       	ldi	r22, 0x09	; 9
     746:	70 e0       	ldi	r23, 0x00	; 0
     748:	fb 01       	movw	r30, r22
     74a:	e8 1b       	sub	r30, r24
     74c:	f9 0b       	sbc	r31, r25
     74e:	cf 01       	movw	r24, r30
     750:	84 1b       	sub	r24, r20
     752:	95 0b       	sbc	r25, r21
     754:	82 1b       	sub	r24, r18
     756:	93 0b       	sbc	r25, r19
     758:	90 93 35 01 	sts	0x0135, r25
     75c:	80 93 34 01 	sts	0x0134, r24
     760:	42 c0       	rjmp	.+132    	; 0x7e6 <determine_blobs+0x4d0>
			}
			else if (far2 == close1) {
     762:	40 91 12 01 	lds	r20, 0x0112
     766:	50 91 13 01 	lds	r21, 0x0113
     76a:	24 17       	cp	r18, r20
     76c:	35 07       	cpc	r19, r21
     76e:	01 f5       	brne	.+64     	; 0x7b0 <determine_blobs+0x49a>
				top = far2;
     770:	30 93 39 01 	sts	0x0139, r19
     774:	20 93 38 01 	sts	0x0138, r18
				bottom = far1;
     778:	90 93 37 01 	sts	0x0137, r25
     77c:	80 93 36 01 	sts	0x0136, r24
				right = close2;
     780:	4f 85       	ldd	r20, Y+15	; 0x0f
     782:	58 89       	ldd	r21, Y+16	; 0x10
     784:	50 93 33 01 	sts	0x0133, r21
     788:	40 93 32 01 	sts	0x0132, r20
				left = 9 - top - bottom - right;
     78c:	49 e0       	ldi	r20, 0x09	; 9
     78e:	50 e0       	ldi	r21, 0x00	; 0
     790:	ba 01       	movw	r22, r20
     792:	62 1b       	sub	r22, r18
     794:	73 0b       	sbc	r23, r19
     796:	fb 01       	movw	r30, r22
     798:	e8 1b       	sub	r30, r24
     79a:	f9 0b       	sbc	r31, r25
     79c:	cf 01       	movw	r24, r30
     79e:	2f 85       	ldd	r18, Y+15	; 0x0f
     7a0:	38 89       	ldd	r19, Y+16	; 0x10
     7a2:	82 1b       	sub	r24, r18
     7a4:	93 0b       	sbc	r25, r19
     7a6:	90 93 35 01 	sts	0x0135, r25
     7aa:	80 93 34 01 	sts	0x0134, r24
     7ae:	1b c0       	rjmp	.+54     	; 0x7e6 <determine_blobs+0x4d0>
			}
			else {
				top = far2;
     7b0:	50 93 39 01 	sts	0x0139, r21
     7b4:	40 93 38 01 	sts	0x0138, r20
				bottom = far1;
     7b8:	90 93 37 01 	sts	0x0137, r25
     7bc:	80 93 36 01 	sts	0x0136, r24
				right = close1;
     7c0:	30 93 33 01 	sts	0x0133, r19
     7c4:	20 93 32 01 	sts	0x0132, r18
				left = 9 - top - bottom - right;
     7c8:	69 e0       	ldi	r22, 0x09	; 9
     7ca:	70 e0       	ldi	r23, 0x00	; 0
     7cc:	fb 01       	movw	r30, r22
     7ce:	e4 1b       	sub	r30, r20
     7d0:	f5 0b       	sbc	r31, r21
     7d2:	bf 01       	movw	r22, r30
     7d4:	68 1b       	sub	r22, r24
     7d6:	79 0b       	sbc	r23, r25
     7d8:	cb 01       	movw	r24, r22
     7da:	82 1b       	sub	r24, r18
     7dc:	93 0b       	sbc	r25, r19
     7de:	90 93 35 01 	sts	0x0135, r25
     7e2:	80 93 34 01 	sts	0x0134, r24
			}
		}
	}
	return 1;
}
     7e6:	81 e0       	ldi	r24, 0x01	; 1
     7e8:	6c 96       	adiw	r28, 0x1c	; 28
     7ea:	0f b6       	in	r0, 0x3f	; 63
     7ec:	f8 94       	cli
     7ee:	de bf       	out	0x3e, r29	; 62
     7f0:	0f be       	out	0x3f, r0	; 63
     7f2:	cd bf       	out	0x3d, r28	; 61
     7f4:	df 91       	pop	r29
     7f6:	cf 91       	pop	r28
     7f8:	1f 91       	pop	r17
     7fa:	0f 91       	pop	r16
     7fc:	ff 90       	pop	r15
     7fe:	ef 90       	pop	r14
     800:	df 90       	pop	r13
     802:	cf 90       	pop	r12
     804:	bf 90       	pop	r11
     806:	af 90       	pop	r10
     808:	9f 90       	pop	r9
     80a:	8f 90       	pop	r8
     80c:	7f 90       	pop	r7
     80e:	6f 90       	pop	r6
     810:	5f 90       	pop	r5
     812:	4f 90       	pop	r4
     814:	3f 90       	pop	r3
     816:	2f 90       	pop	r2
     818:	08 95       	ret

0000081a <localize>:
	data[1] = blobs[1];
	data[2] = 1.0;
}
*/

unsigned char localize (float* data) {
     81a:	2f 92       	push	r2
     81c:	3f 92       	push	r3
     81e:	4f 92       	push	r4
     820:	5f 92       	push	r5
     822:	6f 92       	push	r6
     824:	7f 92       	push	r7
     826:	8f 92       	push	r8
     828:	9f 92       	push	r9
     82a:	af 92       	push	r10
     82c:	bf 92       	push	r11
     82e:	cf 92       	push	r12
     830:	df 92       	push	r13
     832:	ef 92       	push	r14
     834:	ff 92       	push	r15
     836:	0f 93       	push	r16
     838:	1f 93       	push	r17
     83a:	cf 93       	push	r28
     83c:	df 93       	push	r29
     83e:	cd b7       	in	r28, 0x3d	; 61
     840:	de b7       	in	r29, 0x3e	; 62
     842:	2e 97       	sbiw	r28, 0x0e	; 14
     844:	0f b6       	in	r0, 0x3f	; 63
     846:	f8 94       	cli
     848:	de bf       	out	0x3e, r29	; 62
     84a:	0f be       	out	0x3f, r0	; 63
     84c:	cd bf       	out	0x3d, r28	; 61
     84e:	1c 01       	movw	r2, r24
	numlost = 0;
     850:	10 92 0d 01 	sts	0x010D, r1
     854:	10 92 0c 01 	sts	0x010C, r1
	
	//if (recalibrate == 1) {
		determine_blobs();
     858:	0e 94 8b 01 	call	0x316	; 0x316 <determine_blobs>
	//if (numlost >= 2) {
		//recalibrate = 1;
		//return 0;
	//}
	
	if (x[top] < 1023 && x[bottom] < 1023) {
     85c:	00 91 38 01 	lds	r16, 0x0138
     860:	10 91 39 01 	lds	r17, 0x0139
     864:	f8 01       	movw	r30, r16
     866:	ee 0f       	add	r30, r30
     868:	ff 1f       	adc	r31, r31
     86a:	e6 5d       	subi	r30, 0xD6	; 214
     86c:	fe 4f       	sbci	r31, 0xFE	; 254
     86e:	a0 80       	ld	r10, Z
     870:	b1 80       	ldd	r11, Z+1	; 0x01
     872:	2f ef       	ldi	r18, 0xFF	; 255
     874:	a2 16       	cp	r10, r18
     876:	23 e0       	ldi	r18, 0x03	; 3
     878:	b2 06       	cpc	r11, r18
     87a:	08 f0       	brcs	.+2      	; 0x87e <localize+0x64>
     87c:	e1 c1       	rjmp	.+962    	; 0xc40 <__stack+0x141>
     87e:	c0 90 36 01 	lds	r12, 0x0136
     882:	d0 90 37 01 	lds	r13, 0x0137
     886:	f6 01       	movw	r30, r12
     888:	ee 0f       	add	r30, r30
     88a:	ff 1f       	adc	r31, r31
     88c:	e6 5d       	subi	r30, 0xD6	; 214
     88e:	fe 4f       	sbci	r31, 0xFE	; 254
     890:	e0 80       	ld	r14, Z
     892:	f1 80       	ldd	r15, Z+1	; 0x01
     894:	3f ef       	ldi	r19, 0xFF	; 255
     896:	e3 16       	cp	r14, r19
     898:	33 e0       	ldi	r19, 0x03	; 3
     89a:	f3 06       	cpc	r15, r19
     89c:	08 f0       	brcs	.+2      	; 0x8a0 <localize+0x86>
     89e:	d0 c1       	rjmp	.+928    	; 0xc40 <__stack+0x141>
		//calculate and store pixel-space position and orientation
		posx = (float) ((float)(x[top]+x[bottom]))/2.0 - rcenterx;
     8a0:	40 90 72 01 	lds	r4, 0x0172
     8a4:	50 90 73 01 	lds	r5, 0x0173
     8a8:	60 90 74 01 	lds	r6, 0x0174
     8ac:	70 90 75 01 	lds	r7, 0x0175
     8b0:	b7 01       	movw	r22, r14
     8b2:	6a 0d       	add	r22, r10
     8b4:	7b 1d       	adc	r23, r11
     8b6:	80 e0       	ldi	r24, 0x00	; 0
     8b8:	90 e0       	ldi	r25, 0x00	; 0
     8ba:	0e 94 47 0c 	call	0x188e	; 0x188e <__floatunsisf>
     8be:	20 e0       	ldi	r18, 0x00	; 0
     8c0:	30 e0       	ldi	r19, 0x00	; 0
     8c2:	40 e0       	ldi	r20, 0x00	; 0
     8c4:	5f e3       	ldi	r21, 0x3F	; 63
     8c6:	0e 94 62 0d 	call	0x1ac4	; 0x1ac4 <__mulsf3>
     8ca:	a3 01       	movw	r20, r6
     8cc:	92 01       	movw	r18, r4
     8ce:	0e 94 e0 0a 	call	0x15c0	; 0x15c0 <__subsf3>
     8d2:	6d 83       	std	Y+5, r22	; 0x05
     8d4:	7e 83       	std	Y+6, r23	; 0x06
     8d6:	8f 83       	std	Y+7, r24	; 0x07
     8d8:	98 87       	std	Y+8, r25	; 0x08
		posy = (float) ((float)(y[top]+y[bottom]))/2.0 - rcentery;
     8da:	f8 01       	movw	r30, r16
     8dc:	ee 0f       	add	r30, r30
     8de:	ff 1f       	adc	r31, r31
     8e0:	ee 5d       	subi	r30, 0xDE	; 222
     8e2:	fe 4f       	sbci	r31, 0xFE	; 254
     8e4:	80 81       	ld	r24, Z
     8e6:	91 81       	ldd	r25, Z+1	; 0x01
     8e8:	9a 83       	std	Y+2, r25	; 0x02
     8ea:	89 83       	std	Y+1, r24	; 0x01
     8ec:	f6 01       	movw	r30, r12
     8ee:	ee 0f       	add	r30, r30
     8f0:	ff 1f       	adc	r31, r31
     8f2:	ee 5d       	subi	r30, 0xDE	; 222
     8f4:	fe 4f       	sbci	r31, 0xFE	; 254
     8f6:	00 81       	ld	r16, Z
     8f8:	11 81       	ldd	r17, Z+1	; 0x01
     8fa:	bc 01       	movw	r22, r24
     8fc:	60 0f       	add	r22, r16
     8fe:	71 1f       	adc	r23, r17
     900:	80 e0       	ldi	r24, 0x00	; 0
     902:	90 e0       	ldi	r25, 0x00	; 0
     904:	0e 94 47 0c 	call	0x188e	; 0x188e <__floatunsisf>
     908:	20 e0       	ldi	r18, 0x00	; 0
     90a:	30 e0       	ldi	r19, 0x00	; 0
     90c:	40 e0       	ldi	r20, 0x00	; 0
     90e:	5f e3       	ldi	r21, 0x3F	; 63
     910:	0e 94 62 0d 	call	0x1ac4	; 0x1ac4 <__mulsf3>
     914:	20 91 76 01 	lds	r18, 0x0176
     918:	30 91 77 01 	lds	r19, 0x0177
     91c:	40 91 78 01 	lds	r20, 0x0178
     920:	50 91 79 01 	lds	r21, 0x0179
     924:	0e 94 e0 0a 	call	0x15c0	; 0x15c0 <__subsf3>
     928:	69 87       	std	Y+9, r22	; 0x09
     92a:	7a 87       	std	Y+10, r23	; 0x0a
     92c:	8b 87       	std	Y+11, r24	; 0x0b
     92e:	9c 87       	std	Y+12, r25	; 0x0c
		
		
		//calculate and store angle
		angle = -1.0*(float) atan2(((double) ((float)y[top]-(float)y[bottom])),((double) ((float)x[top]-(float)x[bottom])));
     930:	b5 01       	movw	r22, r10
     932:	80 e0       	ldi	r24, 0x00	; 0
     934:	90 e0       	ldi	r25, 0x00	; 0
     936:	0e 94 47 0c 	call	0x188e	; 0x188e <__floatunsisf>
     93a:	4b 01       	movw	r8, r22
     93c:	5c 01       	movw	r10, r24
     93e:	b7 01       	movw	r22, r14
     940:	80 e0       	ldi	r24, 0x00	; 0
     942:	90 e0       	ldi	r25, 0x00	; 0
     944:	0e 94 47 0c 	call	0x188e	; 0x188e <__floatunsisf>
     948:	9b 01       	movw	r18, r22
     94a:	ac 01       	movw	r20, r24
     94c:	c5 01       	movw	r24, r10
     94e:	b4 01       	movw	r22, r8
     950:	0e 94 e0 0a 	call	0x15c0	; 0x15c0 <__subsf3>
     954:	6b 01       	movw	r12, r22
     956:	7c 01       	movw	r14, r24
     958:	a9 81       	ldd	r26, Y+1	; 0x01
     95a:	ba 81       	ldd	r27, Y+2	; 0x02
     95c:	bd 01       	movw	r22, r26
     95e:	80 e0       	ldi	r24, 0x00	; 0
     960:	90 e0       	ldi	r25, 0x00	; 0
     962:	0e 94 47 0c 	call	0x188e	; 0x188e <__floatunsisf>
     966:	4b 01       	movw	r8, r22
     968:	5c 01       	movw	r10, r24
     96a:	b8 01       	movw	r22, r16
     96c:	80 e0       	ldi	r24, 0x00	; 0
     96e:	90 e0       	ldi	r25, 0x00	; 0
     970:	0e 94 47 0c 	call	0x188e	; 0x188e <__floatunsisf>
     974:	9b 01       	movw	r18, r22
     976:	ac 01       	movw	r20, r24
     978:	c5 01       	movw	r24, r10
     97a:	b4 01       	movw	r22, r8
     97c:	0e 94 e0 0a 	call	0x15c0	; 0x15c0 <__subsf3>
     980:	a7 01       	movw	r20, r14
     982:	96 01       	movw	r18, r12
     984:	0e 94 54 0b 	call	0x16a8	; 0x16a8 <atan2>
     988:	4b 01       	movw	r8, r22
     98a:	5c 01       	movw	r10, r24
		phi = ((float) atan2((double) posy, (double) posx));
     98c:	7d 81       	ldd	r23, Y+5	; 0x05
     98e:	6e 81       	ldd	r22, Y+6	; 0x06
     990:	9f 81       	ldd	r25, Y+7	; 0x07
     992:	88 85       	ldd	r24, Y+8	; 0x08
     994:	27 2f       	mov	r18, r23
     996:	36 2f       	mov	r19, r22
     998:	49 2f       	mov	r20, r25
     99a:	58 2f       	mov	r21, r24
     99c:	b9 85       	ldd	r27, Y+9	; 0x09
     99e:	aa 85       	ldd	r26, Y+10	; 0x0a
     9a0:	eb 85       	ldd	r30, Y+11	; 0x0b
     9a2:	1c 85       	ldd	r17, Y+12	; 0x0c
     9a4:	6b 2f       	mov	r22, r27
     9a6:	7a 2f       	mov	r23, r26
     9a8:	8e 2f       	mov	r24, r30
     9aa:	91 2f       	mov	r25, r17
     9ac:	0e 94 54 0b 	call	0x16a8	; 0x16a8 <atan2>
     9b0:	6b 01       	movw	r12, r22
     9b2:	7c 01       	movw	r14, r24
		
		r = (float) sqrt((double)((posx)*(posx) + (posy)*(posy)));
     9b4:	7d 81       	ldd	r23, Y+5	; 0x05
     9b6:	6e 81       	ldd	r22, Y+6	; 0x06
     9b8:	9f 81       	ldd	r25, Y+7	; 0x07
     9ba:	88 85       	ldd	r24, Y+8	; 0x08
     9bc:	27 2f       	mov	r18, r23
     9be:	36 2f       	mov	r19, r22
     9c0:	49 2f       	mov	r20, r25
     9c2:	58 2f       	mov	r21, r24
     9c4:	67 2f       	mov	r22, r23
     9c6:	73 2f       	mov	r23, r19
     9c8:	89 2f       	mov	r24, r25
     9ca:	95 2f       	mov	r25, r21
     9cc:	0e 94 62 0d 	call	0x1ac4	; 0x1ac4 <__mulsf3>
     9d0:	69 83       	std	Y+1, r22	; 0x01
     9d2:	7a 83       	std	Y+2, r23	; 0x02
     9d4:	8b 83       	std	Y+3, r24	; 0x03
     9d6:	9c 83       	std	Y+4, r25	; 0x04
     9d8:	79 85       	ldd	r23, Y+9	; 0x09
     9da:	6a 85       	ldd	r22, Y+10	; 0x0a
     9dc:	9b 85       	ldd	r25, Y+11	; 0x0b
     9de:	8c 85       	ldd	r24, Y+12	; 0x0c
     9e0:	27 2f       	mov	r18, r23
     9e2:	36 2f       	mov	r19, r22
     9e4:	49 2f       	mov	r20, r25
     9e6:	58 2f       	mov	r21, r24
     9e8:	67 2f       	mov	r22, r23
     9ea:	73 2f       	mov	r23, r19
     9ec:	89 2f       	mov	r24, r25
     9ee:	95 2f       	mov	r25, r21
     9f0:	0e 94 62 0d 	call	0x1ac4	; 0x1ac4 <__mulsf3>
     9f4:	9b 01       	movw	r18, r22
     9f6:	ac 01       	movw	r20, r24
     9f8:	69 81       	ldd	r22, Y+1	; 0x01
     9fa:	7a 81       	ldd	r23, Y+2	; 0x02
     9fc:	8b 81       	ldd	r24, Y+3	; 0x03
     9fe:	9c 81       	ldd	r25, Y+4	; 0x04
     a00:	0e 94 e1 0a 	call	0x15c2	; 0x15c2 <__addsf3>
     a04:	0e 94 cf 0d 	call	0x1b9e	; 0x1b9e <sqrt>
     a08:	69 83       	std	Y+1, r22	; 0x01
     a0a:	7a 83       	std	Y+2, r23	; 0x02
     a0c:	8b 83       	std	Y+3, r24	; 0x03
     a0e:	9c 83       	std	Y+4, r25	; 0x04
		
		

		data[0] = (rcenterx + r * (float) cos((double) (((3 * 3.14)/2) - angle - phi)));
     a10:	22 e5       	ldi	r18, 0x52	; 82
     a12:	38 eb       	ldi	r19, 0xB8	; 184
     a14:	46 e9       	ldi	r20, 0x96	; 150
     a16:	50 e4       	ldi	r21, 0x40	; 64
     a18:	c5 01       	movw	r24, r10
     a1a:	b4 01       	movw	r22, r8
     a1c:	0e 94 e1 0a 	call	0x15c2	; 0x15c2 <__addsf3>
     a20:	a7 01       	movw	r20, r14
     a22:	96 01       	movw	r18, r12
     a24:	0e 94 e0 0a 	call	0x15c0	; 0x15c0 <__subsf3>
     a28:	6e 87       	std	Y+14, r22	; 0x0e
     a2a:	7d 87       	std	Y+13, r23	; 0x0d
     a2c:	18 2f       	mov	r17, r24
     a2e:	09 2f       	mov	r16, r25
     a30:	81 2f       	mov	r24, r17
     a32:	90 2f       	mov	r25, r16
     a34:	0e 94 ab 0b 	call	0x1756	; 0x1756 <cos>
     a38:	29 81       	ldd	r18, Y+1	; 0x01
     a3a:	3a 81       	ldd	r19, Y+2	; 0x02
     a3c:	4b 81       	ldd	r20, Y+3	; 0x03
     a3e:	5c 81       	ldd	r21, Y+4	; 0x04
     a40:	0e 94 62 0d 	call	0x1ac4	; 0x1ac4 <__mulsf3>
     a44:	9b 01       	movw	r18, r22
     a46:	ac 01       	movw	r20, r24
     a48:	c3 01       	movw	r24, r6
     a4a:	b2 01       	movw	r22, r4
     a4c:	0e 94 e1 0a 	call	0x15c2	; 0x15c2 <__addsf3>
     a50:	f1 01       	movw	r30, r2
     a52:	60 83       	st	Z, r22
     a54:	71 83       	std	Z+1, r23	; 0x01
     a56:	82 83       	std	Z+2, r24	; 0x02
     a58:	93 83       	std	Z+3, r25	; 0x03
		data[1] = rcentery + r * (float) sin((double) (((3 * 3.14)/2) - angle - phi));
     a5a:	5e 85       	ldd	r21, Y+14	; 0x0e
     a5c:	4d 85       	ldd	r20, Y+13	; 0x0d
     a5e:	65 2f       	mov	r22, r21
     a60:	74 2f       	mov	r23, r20
     a62:	81 2f       	mov	r24, r17
     a64:	90 2f       	mov	r25, r16
     a66:	0e 94 c5 0d 	call	0x1b8a	; 0x1b8a <sin>
     a6a:	29 81       	ldd	r18, Y+1	; 0x01
     a6c:	3a 81       	ldd	r19, Y+2	; 0x02
     a6e:	4b 81       	ldd	r20, Y+3	; 0x03
     a70:	5c 81       	ldd	r21, Y+4	; 0x04
     a72:	0e 94 62 0d 	call	0x1ac4	; 0x1ac4 <__mulsf3>
     a76:	20 91 76 01 	lds	r18, 0x0176
     a7a:	30 91 77 01 	lds	r19, 0x0177
     a7e:	40 91 78 01 	lds	r20, 0x0178
     a82:	50 91 79 01 	lds	r21, 0x0179
     a86:	0e 94 e1 0a 	call	0x15c2	; 0x15c2 <__addsf3>
     a8a:	d1 01       	movw	r26, r2
     a8c:	14 96       	adiw	r26, 0x04	; 4
     a8e:	6d 93       	st	X+, r22
     a90:	7d 93       	st	X+, r23
     a92:	8d 93       	st	X+, r24
     a94:	9c 93       	st	X, r25
     a96:	17 97       	sbiw	r26, 0x07	; 7
		posx = (float) ((float)(x[top]+x[bottom]))/2.0 - rcenterx;
		posy = (float) ((float)(y[top]+y[bottom]))/2.0 - rcentery;
		
		
		//calculate and store angle
		angle = -1.0*(float) atan2(((double) ((float)y[top]-(float)y[bottom])),((double) ((float)x[top]-(float)x[bottom])));
     a98:	c5 01       	movw	r24, r10
     a9a:	b4 01       	movw	r22, r8
     a9c:	90 58       	subi	r25, 0x80	; 128

		data[0] = (rcenterx + r * (float) cos((double) (((3 * 3.14)/2) - angle - phi)));
		data[1] = rcentery + r * (float) sin((double) (((3 * 3.14)/2) - angle - phi));
		//data[0] = posx- r*(float)cos((double)phi);
		//data[1] = posy- r*(float)sin((double)phi);
		data[2] = angle * 180.0 / 3.14;
     a9e:	20 e0       	ldi	r18, 0x00	; 0
     aa0:	30 e0       	ldi	r19, 0x00	; 0
     aa2:	44 e3       	ldi	r20, 0x34	; 52
     aa4:	53 e4       	ldi	r21, 0x43	; 67
     aa6:	0e 94 62 0d 	call	0x1ac4	; 0x1ac4 <__mulsf3>
     aaa:	23 ec       	ldi	r18, 0xC3	; 195
     aac:	35 ef       	ldi	r19, 0xF5	; 245
     aae:	48 e4       	ldi	r20, 0x48	; 72
     ab0:	50 e4       	ldi	r21, 0x40	; 64
     ab2:	0e 94 ae 0b 	call	0x175c	; 0x175c <__divsf3>
     ab6:	f1 01       	movw	r30, r2
     ab8:	60 87       	std	Z+8, r22	; 0x08
     aba:	71 87       	std	Z+9, r23	; 0x09
     abc:	82 87       	std	Z+10, r24	; 0x0a
     abe:	93 87       	std	Z+11, r25	; 0x0b
		data[3] = x[top];
     ac0:	00 91 38 01 	lds	r16, 0x0138
     ac4:	10 91 39 01 	lds	r17, 0x0139
     ac8:	00 0f       	add	r16, r16
     aca:	11 1f       	adc	r17, r17
     acc:	f8 01       	movw	r30, r16
     ace:	e6 5d       	subi	r30, 0xD6	; 214
     ad0:	fe 4f       	sbci	r31, 0xFE	; 254
     ad2:	60 81       	ld	r22, Z
     ad4:	71 81       	ldd	r23, Z+1	; 0x01
     ad6:	80 e0       	ldi	r24, 0x00	; 0
     ad8:	90 e0       	ldi	r25, 0x00	; 0
     ada:	0e 94 47 0c 	call	0x188e	; 0x188e <__floatunsisf>
     ade:	d1 01       	movw	r26, r2
     ae0:	1c 96       	adiw	r26, 0x0c	; 12
     ae2:	6d 93       	st	X+, r22
     ae4:	7d 93       	st	X+, r23
     ae6:	8d 93       	st	X+, r24
     ae8:	9c 93       	st	X, r25
     aea:	1f 97       	sbiw	r26, 0x0f	; 15
		data[4] = y[top];
     aec:	f8 01       	movw	r30, r16
     aee:	ee 5d       	subi	r30, 0xDE	; 222
     af0:	fe 4f       	sbci	r31, 0xFE	; 254
     af2:	60 81       	ld	r22, Z
     af4:	71 81       	ldd	r23, Z+1	; 0x01
     af6:	80 e0       	ldi	r24, 0x00	; 0
     af8:	90 e0       	ldi	r25, 0x00	; 0
     afa:	0e 94 47 0c 	call	0x188e	; 0x188e <__floatunsisf>
     afe:	f1 01       	movw	r30, r2
     b00:	60 8b       	std	Z+16, r22	; 0x10
     b02:	71 8b       	std	Z+17, r23	; 0x11
     b04:	82 8b       	std	Z+18, r24	; 0x12
     b06:	93 8b       	std	Z+19, r25	; 0x13
		data[5] = x[bottom];
     b08:	00 91 36 01 	lds	r16, 0x0136
     b0c:	10 91 37 01 	lds	r17, 0x0137
     b10:	00 0f       	add	r16, r16
     b12:	11 1f       	adc	r17, r17
     b14:	f8 01       	movw	r30, r16
     b16:	e6 5d       	subi	r30, 0xD6	; 214
     b18:	fe 4f       	sbci	r31, 0xFE	; 254
     b1a:	60 81       	ld	r22, Z
     b1c:	71 81       	ldd	r23, Z+1	; 0x01
     b1e:	80 e0       	ldi	r24, 0x00	; 0
     b20:	90 e0       	ldi	r25, 0x00	; 0
     b22:	0e 94 47 0c 	call	0x188e	; 0x188e <__floatunsisf>
     b26:	d1 01       	movw	r26, r2
     b28:	54 96       	adiw	r26, 0x14	; 20
     b2a:	6d 93       	st	X+, r22
     b2c:	7d 93       	st	X+, r23
     b2e:	8d 93       	st	X+, r24
     b30:	9c 93       	st	X, r25
     b32:	57 97       	sbiw	r26, 0x17	; 23
		data[6] = y[bottom];
     b34:	f8 01       	movw	r30, r16
     b36:	ee 5d       	subi	r30, 0xDE	; 222
     b38:	fe 4f       	sbci	r31, 0xFE	; 254
     b3a:	60 81       	ld	r22, Z
     b3c:	71 81       	ldd	r23, Z+1	; 0x01
     b3e:	80 e0       	ldi	r24, 0x00	; 0
     b40:	90 e0       	ldi	r25, 0x00	; 0
     b42:	0e 94 47 0c 	call	0x188e	; 0x188e <__floatunsisf>
     b46:	f1 01       	movw	r30, r2
     b48:	60 8f       	std	Z+24, r22	; 0x18
     b4a:	71 8f       	std	Z+25, r23	; 0x19
     b4c:	82 8f       	std	Z+26, r24	; 0x1a
     b4e:	93 8f       	std	Z+27, r25	; 0x1b
		data[7] = x[right];
     b50:	00 91 32 01 	lds	r16, 0x0132
     b54:	10 91 33 01 	lds	r17, 0x0133
     b58:	00 0f       	add	r16, r16
     b5a:	11 1f       	adc	r17, r17
     b5c:	f8 01       	movw	r30, r16
     b5e:	e6 5d       	subi	r30, 0xD6	; 214
     b60:	fe 4f       	sbci	r31, 0xFE	; 254
     b62:	60 81       	ld	r22, Z
     b64:	71 81       	ldd	r23, Z+1	; 0x01
     b66:	80 e0       	ldi	r24, 0x00	; 0
     b68:	90 e0       	ldi	r25, 0x00	; 0
     b6a:	0e 94 47 0c 	call	0x188e	; 0x188e <__floatunsisf>
     b6e:	d1 01       	movw	r26, r2
     b70:	5c 96       	adiw	r26, 0x1c	; 28
     b72:	6d 93       	st	X+, r22
     b74:	7d 93       	st	X+, r23
     b76:	8d 93       	st	X+, r24
     b78:	9c 93       	st	X, r25
     b7a:	5f 97       	sbiw	r26, 0x1f	; 31
		data[8] = y[right];
     b7c:	f8 01       	movw	r30, r16
     b7e:	ee 5d       	subi	r30, 0xDE	; 222
     b80:	fe 4f       	sbci	r31, 0xFE	; 254
     b82:	60 81       	ld	r22, Z
     b84:	71 81       	ldd	r23, Z+1	; 0x01
     b86:	80 e0       	ldi	r24, 0x00	; 0
     b88:	90 e0       	ldi	r25, 0x00	; 0
     b8a:	0e 94 47 0c 	call	0x188e	; 0x188e <__floatunsisf>
     b8e:	f1 01       	movw	r30, r2
     b90:	60 a3       	std	Z+32, r22	; 0x20
     b92:	71 a3       	std	Z+33, r23	; 0x21
     b94:	82 a3       	std	Z+34, r24	; 0x22
     b96:	93 a3       	std	Z+35, r25	; 0x23
		data[9] = x[left];
     b98:	00 91 34 01 	lds	r16, 0x0134
     b9c:	10 91 35 01 	lds	r17, 0x0135
     ba0:	00 0f       	add	r16, r16
     ba2:	11 1f       	adc	r17, r17
     ba4:	f8 01       	movw	r30, r16
     ba6:	e6 5d       	subi	r30, 0xD6	; 214
     ba8:	fe 4f       	sbci	r31, 0xFE	; 254
     baa:	60 81       	ld	r22, Z
     bac:	71 81       	ldd	r23, Z+1	; 0x01
     bae:	80 e0       	ldi	r24, 0x00	; 0
     bb0:	90 e0       	ldi	r25, 0x00	; 0
     bb2:	0e 94 47 0c 	call	0x188e	; 0x188e <__floatunsisf>
     bb6:	d1 01       	movw	r26, r2
     bb8:	94 96       	adiw	r26, 0x24	; 36
     bba:	6d 93       	st	X+, r22
     bbc:	7d 93       	st	X+, r23
     bbe:	8d 93       	st	X+, r24
     bc0:	9c 93       	st	X, r25
     bc2:	97 97       	sbiw	r26, 0x27	; 39
		data[10] = y[left];
     bc4:	f8 01       	movw	r30, r16
     bc6:	ee 5d       	subi	r30, 0xDE	; 222
     bc8:	fe 4f       	sbci	r31, 0xFE	; 254
     bca:	60 81       	ld	r22, Z
     bcc:	71 81       	ldd	r23, Z+1	; 0x01
     bce:	80 e0       	ldi	r24, 0x00	; 0
     bd0:	90 e0       	ldi	r25, 0x00	; 0
     bd2:	0e 94 47 0c 	call	0x188e	; 0x188e <__floatunsisf>
     bd6:	f1 01       	movw	r30, r2
     bd8:	60 a7       	std	Z+40, r22	; 0x28
     bda:	71 a7       	std	Z+41, r23	; 0x29
     bdc:	82 a7       	std	Z+42, r24	; 0x2a
     bde:	93 a7       	std	Z+43, r25	; 0x2b
		data[11] = phi * 180.0 / 3.14;
     be0:	20 e0       	ldi	r18, 0x00	; 0
     be2:	30 e0       	ldi	r19, 0x00	; 0
     be4:	44 e3       	ldi	r20, 0x34	; 52
     be6:	53 e4       	ldi	r21, 0x43	; 67
     be8:	c7 01       	movw	r24, r14
     bea:	b6 01       	movw	r22, r12
     bec:	0e 94 62 0d 	call	0x1ac4	; 0x1ac4 <__mulsf3>
     bf0:	23 ec       	ldi	r18, 0xC3	; 195
     bf2:	35 ef       	ldi	r19, 0xF5	; 245
     bf4:	48 e4       	ldi	r20, 0x48	; 72
     bf6:	50 e4       	ldi	r21, 0x40	; 64
     bf8:	0e 94 ae 0b 	call	0x175c	; 0x175c <__divsf3>
     bfc:	d1 01       	movw	r26, r2
     bfe:	9c 96       	adiw	r26, 0x2c	; 44
     c00:	6d 93       	st	X+, r22
     c02:	7d 93       	st	X+, r23
     c04:	8d 93       	st	X+, r24
     c06:	9c 93       	st	X, r25
     c08:	9f 97       	sbiw	r26, 0x2f	; 47
		data[12] = posx;
     c0a:	5d 81       	ldd	r21, Y+5	; 0x05
     c0c:	4e 81       	ldd	r20, Y+6	; 0x06
     c0e:	3f 81       	ldd	r19, Y+7	; 0x07
     c10:	28 85       	ldd	r18, Y+8	; 0x08
     c12:	85 2f       	mov	r24, r21
     c14:	94 2f       	mov	r25, r20
     c16:	a3 2f       	mov	r26, r19
     c18:	b2 2f       	mov	r27, r18
     c1a:	f1 01       	movw	r30, r2
     c1c:	80 ab       	std	Z+48, r24	; 0x30
     c1e:	91 ab       	std	Z+49, r25	; 0x31
     c20:	a2 ab       	std	Z+50, r26	; 0x32
     c22:	b3 ab       	std	Z+51, r27	; 0x33
		data[13] = posy;
     c24:	59 85       	ldd	r21, Y+9	; 0x09
     c26:	4a 85       	ldd	r20, Y+10	; 0x0a
     c28:	3b 85       	ldd	r19, Y+11	; 0x0b
     c2a:	2c 85       	ldd	r18, Y+12	; 0x0c
     c2c:	85 2f       	mov	r24, r21
     c2e:	94 2f       	mov	r25, r20
     c30:	a3 2f       	mov	r26, r19
     c32:	b2 2f       	mov	r27, r18
     c34:	84 ab       	std	Z+52, r24	; 0x34
     c36:	95 ab       	std	Z+53, r25	; 0x35
     c38:	a6 ab       	std	Z+54, r26	; 0x36
     c3a:	b7 ab       	std	Z+55, r27	; 0x37
		
		return 1;
     c3c:	81 e0       	ldi	r24, 0x01	; 1
     c3e:	00 c0       	rjmp	.+0      	; 0xc40 <__stack+0x141>
		return 1;
	}
	
	return 0;
	*/
     c40:	2e 96       	adiw	r28, 0x0e	; 14
     c42:	0f b6       	in	r0, 0x3f	; 63
     c44:	f8 94       	cli
     c46:	de bf       	out	0x3e, r29	; 62
     c48:	0f be       	out	0x3f, r0	; 63
     c4a:	cd bf       	out	0x3d, r28	; 61
     c4c:	df 91       	pop	r29
     c4e:	cf 91       	pop	r28
     c50:	1f 91       	pop	r17
     c52:	0f 91       	pop	r16
     c54:	ff 90       	pop	r15
     c56:	ef 90       	pop	r14
     c58:	df 90       	pop	r13
     c5a:	cf 90       	pop	r12
     c5c:	bf 90       	pop	r11
     c5e:	af 90       	pop	r10
     c60:	9f 90       	pop	r9
     c62:	8f 90       	pop	r8
     c64:	7f 90       	pop	r7
     c66:	6f 90       	pop	r6
     c68:	5f 90       	pop	r5
     c6a:	4f 90       	pop	r4
     c6c:	3f 90       	pop	r3
     c6e:	2f 90       	pop	r2
     c70:	08 95       	ret

00000c72 <m_usb_init>:
     c72:	81 e0       	ldi	r24, 0x01	; 1
     c74:	80 93 d7 00 	sts	0x00D7, r24
     c78:	80 ea       	ldi	r24, 0xA0	; 160
     c7a:	80 93 d8 00 	sts	0x00D8, r24
     c7e:	82 e1       	ldi	r24, 0x12	; 18
     c80:	89 bd       	out	0x29, r24	; 41
     c82:	09 b4       	in	r0, 0x29	; 41
     c84:	00 fe       	sbrs	r0, 0
     c86:	fd cf       	rjmp	.-6      	; 0xc82 <m_usb_init+0x10>
     c88:	80 e9       	ldi	r24, 0x90	; 144
     c8a:	80 93 d8 00 	sts	0x00D8, r24
     c8e:	10 92 e0 00 	sts	0x00E0, r1
     c92:	10 92 53 01 	sts	0x0153, r1
     c96:	10 92 54 01 	sts	0x0154, r1
     c9a:	8c e0       	ldi	r24, 0x0C	; 12
     c9c:	80 93 e2 00 	sts	0x00E2, r24
     ca0:	78 94       	sei
     ca2:	08 95       	ret

00000ca4 <m_usb_isconnected>:
     ca4:	80 91 53 01 	lds	r24, 0x0153
     ca8:	08 95       	ret

00000caa <m_usb_rx_char>:
     caa:	9f b7       	in	r25, 0x3f	; 63
     cac:	f8 94       	cli
     cae:	80 91 53 01 	lds	r24, 0x0153
     cb2:	81 11       	cpse	r24, r1
     cb4:	03 c0       	rjmp	.+6      	; 0xcbc <m_usb_rx_char+0x12>
     cb6:	9f bf       	out	0x3f, r25	; 63
     cb8:	8f ef       	ldi	r24, 0xFF	; 255
     cba:	08 95       	ret
     cbc:	83 e0       	ldi	r24, 0x03	; 3
     cbe:	80 93 e9 00 	sts	0x00E9, r24
     cc2:	80 91 e8 00 	lds	r24, 0x00E8
     cc6:	85 fd       	sbrc	r24, 5
     cc8:	03 c0       	rjmp	.+6      	; 0xcd0 <m_usb_rx_char+0x26>
     cca:	9f bf       	out	0x3f, r25	; 63
     ccc:	8f ef       	ldi	r24, 0xFF	; 255
     cce:	08 95       	ret
     cd0:	80 91 f1 00 	lds	r24, 0x00F1
     cd4:	20 91 e8 00 	lds	r18, 0x00E8
     cd8:	25 fd       	sbrc	r18, 5
     cda:	03 c0       	rjmp	.+6      	; 0xce2 <m_usb_rx_char+0x38>
     cdc:	2b e6       	ldi	r18, 0x6B	; 107
     cde:	20 93 e8 00 	sts	0x00E8, r18
     ce2:	9f bf       	out	0x3f, r25	; 63
     ce4:	08 95       	ret

00000ce6 <m_usb_rx_available>:
     ce6:	9f b7       	in	r25, 0x3f	; 63
     ce8:	f8 94       	cli
     cea:	80 91 53 01 	lds	r24, 0x0153
     cee:	88 23       	and	r24, r24
     cf0:	31 f0       	breq	.+12     	; 0xcfe <m_usb_rx_available+0x18>
     cf2:	83 e0       	ldi	r24, 0x03	; 3
     cf4:	80 93 e9 00 	sts	0x00E9, r24
     cf8:	80 91 f2 00 	lds	r24, 0x00F2
     cfc:	01 c0       	rjmp	.+2      	; 0xd00 <m_usb_rx_available+0x1a>
     cfe:	80 e0       	ldi	r24, 0x00	; 0
     d00:	9f bf       	out	0x3f, r25	; 63
     d02:	08 95       	ret

00000d04 <m_usb_rx_flush>:
     d04:	80 91 53 01 	lds	r24, 0x0153
     d08:	88 23       	and	r24, r24
     d0a:	89 f0       	breq	.+34     	; 0xd2e <m_usb_rx_flush+0x2a>
     d0c:	2f b7       	in	r18, 0x3f	; 63
     d0e:	f8 94       	cli
     d10:	83 e0       	ldi	r24, 0x03	; 3
     d12:	80 93 e9 00 	sts	0x00E9, r24
     d16:	80 91 e8 00 	lds	r24, 0x00E8
     d1a:	85 ff       	sbrs	r24, 5
     d1c:	07 c0       	rjmp	.+14     	; 0xd2c <m_usb_rx_flush+0x28>
     d1e:	e8 ee       	ldi	r30, 0xE8	; 232
     d20:	f0 e0       	ldi	r31, 0x00	; 0
     d22:	9b e6       	ldi	r25, 0x6B	; 107
     d24:	90 83       	st	Z, r25
     d26:	80 81       	ld	r24, Z
     d28:	85 fd       	sbrc	r24, 5
     d2a:	fc cf       	rjmp	.-8      	; 0xd24 <m_usb_rx_flush+0x20>
     d2c:	2f bf       	out	0x3f, r18	; 63
     d2e:	08 95       	ret

00000d30 <m_usb_tx_char>:
     d30:	cf 93       	push	r28
     d32:	df 93       	push	r29
     d34:	90 91 53 01 	lds	r25, 0x0153
     d38:	99 23       	and	r25, r25
     d3a:	09 f4       	brne	.+2      	; 0xd3e <m_usb_tx_char+0xe>
     d3c:	4d c0       	rjmp	.+154    	; 0xdd8 <m_usb_tx_char+0xa8>
     d3e:	9f b7       	in	r25, 0x3f	; 63
     d40:	f8 94       	cli
     d42:	24 e0       	ldi	r18, 0x04	; 4
     d44:	20 93 e9 00 	sts	0x00E9, r18
     d48:	20 91 55 01 	lds	r18, 0x0155
     d4c:	22 23       	and	r18, r18
     d4e:	49 f0       	breq	.+18     	; 0xd62 <m_usb_tx_char+0x32>
     d50:	20 91 e8 00 	lds	r18, 0x00E8
     d54:	25 fd       	sbrc	r18, 5
     d56:	03 c0       	rjmp	.+6      	; 0xd5e <m_usb_tx_char+0x2e>
     d58:	9f bf       	out	0x3f, r25	; 63
     d5a:	8f ef       	ldi	r24, 0xFF	; 255
     d5c:	42 c0       	rjmp	.+132    	; 0xde2 <m_usb_tx_char+0xb2>
     d5e:	10 92 55 01 	sts	0x0155, r1
     d62:	30 91 e4 00 	lds	r19, 0x00E4
     d66:	37 5e       	subi	r19, 0xE7	; 231
     d68:	20 91 e8 00 	lds	r18, 0x00E8
     d6c:	25 fd       	sbrc	r18, 5
     d6e:	25 c0       	rjmp	.+74     	; 0xdba <m_usb_tx_char+0x8a>
     d70:	9f bf       	out	0x3f, r25	; 63
     d72:	90 91 e4 00 	lds	r25, 0x00E4
     d76:	93 17       	cp	r25, r19
     d78:	49 f0       	breq	.+18     	; 0xd8c <m_usb_tx_char+0x5c>
     d7a:	90 91 53 01 	lds	r25, 0x0153
     d7e:	91 11       	cpse	r25, r1
     d80:	0f c0       	rjmp	.+30     	; 0xda0 <m_usb_tx_char+0x70>
     d82:	2c c0       	rjmp	.+88     	; 0xddc <m_usb_tx_char+0xac>
     d84:	9f bf       	out	0x3f, r25	; 63
     d86:	98 81       	ld	r25, Y
     d88:	93 13       	cpse	r25, r19
     d8a:	05 c0       	rjmp	.+10     	; 0xd96 <m_usb_tx_char+0x66>
     d8c:	81 e0       	ldi	r24, 0x01	; 1
     d8e:	80 93 55 01 	sts	0x0155, r24
     d92:	8f ef       	ldi	r24, 0xFF	; 255
     d94:	26 c0       	rjmp	.+76     	; 0xde2 <m_usb_tx_char+0xb2>
     d96:	90 91 53 01 	lds	r25, 0x0153
     d9a:	91 11       	cpse	r25, r1
     d9c:	08 c0       	rjmp	.+16     	; 0xdae <m_usb_tx_char+0x7e>
     d9e:	20 c0       	rjmp	.+64     	; 0xde0 <m_usb_tx_char+0xb0>
     da0:	a9 ee       	ldi	r26, 0xE9	; 233
     da2:	b0 e0       	ldi	r27, 0x00	; 0
     da4:	44 e0       	ldi	r20, 0x04	; 4
     da6:	e8 ee       	ldi	r30, 0xE8	; 232
     da8:	f0 e0       	ldi	r31, 0x00	; 0
     daa:	c4 ee       	ldi	r28, 0xE4	; 228
     dac:	d0 e0       	ldi	r29, 0x00	; 0
     dae:	9f b7       	in	r25, 0x3f	; 63
     db0:	f8 94       	cli
     db2:	4c 93       	st	X, r20
     db4:	20 81       	ld	r18, Z
     db6:	25 ff       	sbrs	r18, 5
     db8:	e5 cf       	rjmp	.-54     	; 0xd84 <m_usb_tx_char+0x54>
     dba:	80 93 f1 00 	sts	0x00F1, r24
     dbe:	80 91 e8 00 	lds	r24, 0x00E8
     dc2:	85 fd       	sbrc	r24, 5
     dc4:	03 c0       	rjmp	.+6      	; 0xdcc <m_usb_tx_char+0x9c>
     dc6:	8a e3       	ldi	r24, 0x3A	; 58
     dc8:	80 93 e8 00 	sts	0x00E8, r24
     dcc:	85 e0       	ldi	r24, 0x05	; 5
     dce:	80 93 52 01 	sts	0x0152, r24
     dd2:	9f bf       	out	0x3f, r25	; 63
     dd4:	80 e0       	ldi	r24, 0x00	; 0
     dd6:	05 c0       	rjmp	.+10     	; 0xde2 <m_usb_tx_char+0xb2>
     dd8:	8f ef       	ldi	r24, 0xFF	; 255
     dda:	03 c0       	rjmp	.+6      	; 0xde2 <m_usb_tx_char+0xb2>
     ddc:	8f ef       	ldi	r24, 0xFF	; 255
     dde:	01 c0       	rjmp	.+2      	; 0xde2 <m_usb_tx_char+0xb2>
     de0:	8f ef       	ldi	r24, 0xFF	; 255
     de2:	df 91       	pop	r29
     de4:	cf 91       	pop	r28
     de6:	08 95       	ret

00000de8 <__vector_10>:
     de8:	1f 92       	push	r1
     dea:	0f 92       	push	r0
     dec:	0f b6       	in	r0, 0x3f	; 63
     dee:	0f 92       	push	r0
     df0:	11 24       	eor	r1, r1
     df2:	8f 93       	push	r24
     df4:	9f 93       	push	r25
     df6:	ef 93       	push	r30
     df8:	ff 93       	push	r31
     dfa:	e1 ee       	ldi	r30, 0xE1	; 225
     dfc:	f0 e0       	ldi	r31, 0x00	; 0
     dfe:	80 81       	ld	r24, Z
     e00:	10 82       	st	Z, r1
     e02:	83 ff       	sbrs	r24, 3
     e04:	11 c0       	rjmp	.+34     	; 0xe28 <__vector_10+0x40>
     e06:	10 92 e9 00 	sts	0x00E9, r1
     e0a:	91 e0       	ldi	r25, 0x01	; 1
     e0c:	90 93 eb 00 	sts	0x00EB, r25
     e10:	10 92 ec 00 	sts	0x00EC, r1
     e14:	92 e1       	ldi	r25, 0x12	; 18
     e16:	90 93 ed 00 	sts	0x00ED, r25
     e1a:	98 e0       	ldi	r25, 0x08	; 8
     e1c:	90 93 f0 00 	sts	0x00F0, r25
     e20:	10 92 53 01 	sts	0x0153, r1
     e24:	10 92 54 01 	sts	0x0154, r1
     e28:	82 ff       	sbrs	r24, 2
     e2a:	13 c0       	rjmp	.+38     	; 0xe52 <__vector_10+0x6a>
     e2c:	80 91 53 01 	lds	r24, 0x0153
     e30:	88 23       	and	r24, r24
     e32:	79 f0       	breq	.+30     	; 0xe52 <__vector_10+0x6a>
     e34:	80 91 52 01 	lds	r24, 0x0152
     e38:	88 23       	and	r24, r24
     e3a:	59 f0       	breq	.+22     	; 0xe52 <__vector_10+0x6a>
     e3c:	81 50       	subi	r24, 0x01	; 1
     e3e:	80 93 52 01 	sts	0x0152, r24
     e42:	81 11       	cpse	r24, r1
     e44:	06 c0       	rjmp	.+12     	; 0xe52 <__vector_10+0x6a>
     e46:	84 e0       	ldi	r24, 0x04	; 4
     e48:	80 93 e9 00 	sts	0x00E9, r24
     e4c:	8a e3       	ldi	r24, 0x3A	; 58
     e4e:	80 93 e8 00 	sts	0x00E8, r24
     e52:	ff 91       	pop	r31
     e54:	ef 91       	pop	r30
     e56:	9f 91       	pop	r25
     e58:	8f 91       	pop	r24
     e5a:	0f 90       	pop	r0
     e5c:	0f be       	out	0x3f, r0	; 63
     e5e:	0f 90       	pop	r0
     e60:	1f 90       	pop	r1
     e62:	18 95       	reti

00000e64 <__vector_11>:
     e64:	1f 92       	push	r1
     e66:	0f 92       	push	r0
     e68:	0f b6       	in	r0, 0x3f	; 63
     e6a:	0f 92       	push	r0
     e6c:	11 24       	eor	r1, r1
     e6e:	0f 93       	push	r16
     e70:	1f 93       	push	r17
     e72:	2f 93       	push	r18
     e74:	3f 93       	push	r19
     e76:	4f 93       	push	r20
     e78:	5f 93       	push	r21
     e7a:	6f 93       	push	r22
     e7c:	7f 93       	push	r23
     e7e:	8f 93       	push	r24
     e80:	9f 93       	push	r25
     e82:	af 93       	push	r26
     e84:	bf 93       	push	r27
     e86:	cf 93       	push	r28
     e88:	df 93       	push	r29
     e8a:	ef 93       	push	r30
     e8c:	ff 93       	push	r31
     e8e:	10 92 e9 00 	sts	0x00E9, r1
     e92:	80 91 e8 00 	lds	r24, 0x00E8
     e96:	83 ff       	sbrs	r24, 3
     e98:	51 c1       	rjmp	.+674    	; 0x113c <__vector_11+0x2d8>
     e9a:	e1 ef       	ldi	r30, 0xF1	; 241
     e9c:	f0 e0       	ldi	r31, 0x00	; 0
     e9e:	70 81       	ld	r23, Z
     ea0:	40 81       	ld	r20, Z
     ea2:	20 81       	ld	r18, Z
     ea4:	30 81       	ld	r19, Z
     ea6:	93 2f       	mov	r25, r19
     ea8:	80 e0       	ldi	r24, 0x00	; 0
     eaa:	dc 01       	movw	r26, r24
     eac:	a2 2b       	or	r26, r18
     eae:	9d 01       	movw	r18, r26
     eb0:	50 81       	ld	r21, Z
     eb2:	60 81       	ld	r22, Z
     eb4:	96 2f       	mov	r25, r22
     eb6:	80 e0       	ldi	r24, 0x00	; 0
     eb8:	85 2b       	or	r24, r21
     eba:	a0 81       	ld	r26, Z
     ebc:	b0 81       	ld	r27, Z
     ebe:	52 ef       	ldi	r21, 0xF2	; 242
     ec0:	50 93 e8 00 	sts	0x00E8, r21
     ec4:	46 30       	cpi	r20, 0x06	; 6
     ec6:	09 f0       	breq	.+2      	; 0xeca <__vector_11+0x66>
     ec8:	5c c0       	rjmp	.+184    	; 0xf82 <__vector_11+0x11e>
     eca:	04 c0       	rjmp	.+8      	; 0xed4 <__vector_11+0x70>
     ecc:	81 e2       	ldi	r24, 0x21	; 33
     ece:	80 93 eb 00 	sts	0x00EB, r24
     ed2:	3b c1       	rjmp	.+630    	; 0x114a <__vector_11+0x2e6>
     ed4:	c6 e0       	ldi	r28, 0x06	; 6
     ed6:	47 ef       	ldi	r20, 0xF7	; 247
     ed8:	50 e0       	ldi	r21, 0x00	; 0
     eda:	fa 01       	movw	r30, r20
     edc:	65 91       	lpm	r22, Z+
     ede:	74 91       	lpm	r23, Z
     ee0:	26 17       	cp	r18, r22
     ee2:	37 07       	cpc	r19, r23
     ee4:	19 f0       	breq	.+6      	; 0xeec <__vector_11+0x88>
     ee6:	49 5f       	subi	r20, 0xF9	; 249
     ee8:	5f 4f       	sbci	r21, 0xFF	; 255
     eea:	20 c0       	rjmp	.+64     	; 0xf2c <__vector_11+0xc8>
     eec:	fa 01       	movw	r30, r20
     eee:	32 96       	adiw	r30, 0x02	; 2
     ef0:	65 91       	lpm	r22, Z+
     ef2:	74 91       	lpm	r23, Z
     ef4:	86 17       	cp	r24, r22
     ef6:	97 07       	cpc	r25, r23
     ef8:	19 f0       	breq	.+6      	; 0xf00 <__vector_11+0x9c>
     efa:	49 5f       	subi	r20, 0xF9	; 249
     efc:	5f 4f       	sbci	r21, 0xFF	; 255
     efe:	16 c0       	rjmp	.+44     	; 0xf2c <__vector_11+0xc8>
     f00:	fa 01       	movw	r30, r20
     f02:	34 96       	adiw	r30, 0x04	; 4
     f04:	85 91       	lpm	r24, Z+
     f06:	94 91       	lpm	r25, Z
     f08:	28 2f       	mov	r18, r24
     f0a:	39 2f       	mov	r19, r25
     f0c:	fa 01       	movw	r30, r20
     f0e:	36 96       	adiw	r30, 0x06	; 6
     f10:	44 91       	lpm	r20, Z
     f12:	9b 2f       	mov	r25, r27
     f14:	80 e0       	ldi	r24, 0x00	; 0
     f16:	8a 2b       	or	r24, r26
     f18:	8f 3f       	cpi	r24, 0xFF	; 255
     f1a:	91 05       	cpc	r25, r1
     f1c:	19 f0       	breq	.+6      	; 0xf24 <__vector_11+0xc0>
     f1e:	10 f0       	brcs	.+4      	; 0xf24 <__vector_11+0xc0>
     f20:	8f ef       	ldi	r24, 0xFF	; 255
     f22:	90 e0       	ldi	r25, 0x00	; 0
     f24:	84 17       	cp	r24, r20
     f26:	28 f4       	brcc	.+10     	; 0xf32 <__vector_11+0xce>
     f28:	48 2f       	mov	r20, r24
     f2a:	03 c0       	rjmp	.+6      	; 0xf32 <__vector_11+0xce>
     f2c:	c1 50       	subi	r28, 0x01	; 1
     f2e:	a9 f6       	brne	.-86     	; 0xeda <__vector_11+0x76>
     f30:	cd cf       	rjmp	.-102    	; 0xecc <__vector_11+0x68>
     f32:	c8 ee       	ldi	r28, 0xE8	; 232
     f34:	d0 e0       	ldi	r29, 0x00	; 0
     f36:	7e ef       	ldi	r23, 0xFE	; 254
     f38:	a1 ef       	ldi	r26, 0xF1	; 241
     f3a:	b0 e0       	ldi	r27, 0x00	; 0
     f3c:	10 e1       	ldi	r17, 0x10	; 16
     f3e:	88 81       	ld	r24, Y
     f40:	98 2f       	mov	r25, r24
     f42:	95 70       	andi	r25, 0x05	; 5
     f44:	e1 f3       	breq	.-8      	; 0xf3e <__vector_11+0xda>
     f46:	82 fd       	sbrc	r24, 2
     f48:	00 c1       	rjmp	.+512    	; 0x114a <__vector_11+0x2e6>
     f4a:	64 2f       	mov	r22, r20
     f4c:	41 31       	cpi	r20, 0x11	; 17
     f4e:	08 f0       	brcs	.+2      	; 0xf52 <__vector_11+0xee>
     f50:	61 2f       	mov	r22, r17
     f52:	66 23       	and	r22, r22
     f54:	09 f4       	brne	.+2      	; 0xf58 <__vector_11+0xf4>
     f56:	f6 c0       	rjmp	.+492    	; 0x1144 <__vector_11+0x2e0>
     f58:	c9 01       	movw	r24, r18
     f5a:	56 2f       	mov	r21, r22
     f5c:	fc 01       	movw	r30, r24
     f5e:	01 96       	adiw	r24, 0x01	; 1
     f60:	e4 91       	lpm	r30, Z
     f62:	ec 93       	st	X, r30
     f64:	51 50       	subi	r21, 0x01	; 1
     f66:	d1 f7       	brne	.-12     	; 0xf5c <__vector_11+0xf8>
     f68:	86 2f       	mov	r24, r22
     f6a:	81 50       	subi	r24, 0x01	; 1
     f6c:	90 e0       	ldi	r25, 0x00	; 0
     f6e:	01 96       	adiw	r24, 0x01	; 1
     f70:	28 0f       	add	r18, r24
     f72:	39 1f       	adc	r19, r25
     f74:	46 1b       	sub	r20, r22
     f76:	78 83       	st	Y, r23
     f78:	41 11       	cpse	r20, r1
     f7a:	e1 cf       	rjmp	.-62     	; 0xf3e <__vector_11+0xda>
     f7c:	60 31       	cpi	r22, 0x10	; 16
     f7e:	f9 f2       	breq	.-66     	; 0xf3e <__vector_11+0xda>
     f80:	e4 c0       	rjmp	.+456    	; 0x114a <__vector_11+0x2e6>
     f82:	45 30       	cpi	r20, 0x05	; 5
     f84:	61 f4       	brne	.+24     	; 0xf9e <__vector_11+0x13a>
     f86:	8e ef       	ldi	r24, 0xFE	; 254
     f88:	80 93 e8 00 	sts	0x00E8, r24
     f8c:	e8 ee       	ldi	r30, 0xE8	; 232
     f8e:	f0 e0       	ldi	r31, 0x00	; 0
     f90:	80 81       	ld	r24, Z
     f92:	80 ff       	sbrs	r24, 0
     f94:	fd cf       	rjmp	.-6      	; 0xf90 <__vector_11+0x12c>
     f96:	20 68       	ori	r18, 0x80	; 128
     f98:	20 93 e3 00 	sts	0x00E3, r18
     f9c:	d6 c0       	rjmp	.+428    	; 0x114a <__vector_11+0x2e6>
     f9e:	49 30       	cpi	r20, 0x09	; 9
     fa0:	a1 f5       	brne	.+104    	; 0x100a <__vector_11+0x1a6>
     fa2:	71 11       	cpse	r23, r1
     fa4:	5b c0       	rjmp	.+182    	; 0x105c <__vector_11+0x1f8>
     fa6:	20 93 53 01 	sts	0x0153, r18
     faa:	10 92 54 01 	sts	0x0154, r1
     fae:	10 92 52 01 	sts	0x0152, r1
     fb2:	8e ef       	ldi	r24, 0xFE	; 254
     fb4:	80 93 e8 00 	sts	0x00E8, r24
     fb8:	11 e0       	ldi	r17, 0x01	; 1
     fba:	81 e2       	ldi	r24, 0x21	; 33
     fbc:	91 e0       	ldi	r25, 0x01	; 1
     fbe:	c9 ee       	ldi	r28, 0xE9	; 233
     fc0:	d0 e0       	ldi	r29, 0x00	; 0
     fc2:	ab ee       	ldi	r26, 0xEB	; 235
     fc4:	b0 e0       	ldi	r27, 0x00	; 0
     fc6:	6c ee       	ldi	r22, 0xEC	; 236
     fc8:	70 e0       	ldi	r23, 0x00	; 0
     fca:	4d ee       	ldi	r20, 0xED	; 237
     fcc:	50 e0       	ldi	r21, 0x00	; 0
     fce:	18 83       	st	Y, r17
     fd0:	9c 01       	movw	r18, r24
     fd2:	2f 5f       	subi	r18, 0xFF	; 255
     fd4:	3f 4f       	sbci	r19, 0xFF	; 255
     fd6:	fc 01       	movw	r30, r24
     fd8:	04 91       	lpm	r16, Z
     fda:	0c 93       	st	X, r16
     fdc:	00 23       	and	r16, r16
     fde:	59 f0       	breq	.+22     	; 0xff6 <__vector_11+0x192>
     fe0:	f9 01       	movw	r30, r18
     fe2:	24 91       	lpm	r18, Z
     fe4:	fb 01       	movw	r30, r22
     fe6:	20 83       	st	Z, r18
     fe8:	fc 01       	movw	r30, r24
     fea:	32 96       	adiw	r30, 0x02	; 2
     fec:	03 96       	adiw	r24, 0x03	; 3
     fee:	24 91       	lpm	r18, Z
     ff0:	fa 01       	movw	r30, r20
     ff2:	20 83       	st	Z, r18
     ff4:	01 c0       	rjmp	.+2      	; 0xff8 <__vector_11+0x194>
     ff6:	c9 01       	movw	r24, r18
     ff8:	1f 5f       	subi	r17, 0xFF	; 255
     ffa:	15 30       	cpi	r17, 0x05	; 5
     ffc:	41 f7       	brne	.-48     	; 0xfce <__vector_11+0x16a>
     ffe:	ea ee       	ldi	r30, 0xEA	; 234
    1000:	f0 e0       	ldi	r31, 0x00	; 0
    1002:	8e e1       	ldi	r24, 0x1E	; 30
    1004:	80 83       	st	Z, r24
    1006:	10 82       	st	Z, r1
    1008:	a0 c0       	rjmp	.+320    	; 0x114a <__vector_11+0x2e6>
    100a:	48 30       	cpi	r20, 0x08	; 8
    100c:	81 f4       	brne	.+32     	; 0x102e <__vector_11+0x1ca>
    100e:	70 38       	cpi	r23, 0x80	; 128
    1010:	09 f0       	breq	.+2      	; 0x1014 <__vector_11+0x1b0>
    1012:	3f c0       	rjmp	.+126    	; 0x1092 <__vector_11+0x22e>
    1014:	e8 ee       	ldi	r30, 0xE8	; 232
    1016:	f0 e0       	ldi	r31, 0x00	; 0
    1018:	80 81       	ld	r24, Z
    101a:	80 ff       	sbrs	r24, 0
    101c:	fd cf       	rjmp	.-6      	; 0x1018 <__vector_11+0x1b4>
    101e:	80 91 53 01 	lds	r24, 0x0153
    1022:	80 93 f1 00 	sts	0x00F1, r24
    1026:	8e ef       	ldi	r24, 0xFE	; 254
    1028:	80 93 e8 00 	sts	0x00E8, r24
    102c:	8e c0       	rjmp	.+284    	; 0x114a <__vector_11+0x2e6>
    102e:	41 32       	cpi	r20, 0x21	; 33
    1030:	a9 f4       	brne	.+42     	; 0x105c <__vector_11+0x1f8>
    1032:	71 3a       	cpi	r23, 0xA1	; 161
    1034:	f1 f5       	brne	.+124    	; 0x10b2 <__vector_11+0x24e>
    1036:	e8 ee       	ldi	r30, 0xE8	; 232
    1038:	f0 e0       	ldi	r31, 0x00	; 0
    103a:	80 81       	ld	r24, Z
    103c:	80 ff       	sbrs	r24, 0
    103e:	fd cf       	rjmp	.-6      	; 0x103a <__vector_11+0x1d6>
    1040:	e4 e0       	ldi	r30, 0x04	; 4
    1042:	f1 e0       	ldi	r31, 0x01	; 1
    1044:	a1 ef       	ldi	r26, 0xF1	; 241
    1046:	b0 e0       	ldi	r27, 0x00	; 0
    1048:	81 91       	ld	r24, Z+
    104a:	8c 93       	st	X, r24
    104c:	41 e0       	ldi	r20, 0x01	; 1
    104e:	eb 30       	cpi	r30, 0x0B	; 11
    1050:	f4 07       	cpc	r31, r20
    1052:	d1 f7       	brne	.-12     	; 0x1048 <__vector_11+0x1e4>
    1054:	8e ef       	ldi	r24, 0xFE	; 254
    1056:	80 93 e8 00 	sts	0x00E8, r24
    105a:	77 c0       	rjmp	.+238    	; 0x114a <__vector_11+0x2e6>
    105c:	40 32       	cpi	r20, 0x20	; 32
    105e:	c9 f4       	brne	.+50     	; 0x1092 <__vector_11+0x22e>
    1060:	71 32       	cpi	r23, 0x21	; 33
    1062:	09 f0       	breq	.+2      	; 0x1066 <__vector_11+0x202>
    1064:	6b c0       	rjmp	.+214    	; 0x113c <__vector_11+0x2d8>
    1066:	e8 ee       	ldi	r30, 0xE8	; 232
    1068:	f0 e0       	ldi	r31, 0x00	; 0
    106a:	80 81       	ld	r24, Z
    106c:	82 ff       	sbrs	r24, 2
    106e:	fd cf       	rjmp	.-6      	; 0x106a <__vector_11+0x206>
    1070:	e4 e0       	ldi	r30, 0x04	; 4
    1072:	f1 e0       	ldi	r31, 0x01	; 1
    1074:	a1 ef       	ldi	r26, 0xF1	; 241
    1076:	b0 e0       	ldi	r27, 0x00	; 0
    1078:	8c 91       	ld	r24, X
    107a:	81 93       	st	Z+, r24
    107c:	51 e0       	ldi	r21, 0x01	; 1
    107e:	eb 30       	cpi	r30, 0x0B	; 11
    1080:	f5 07       	cpc	r31, r21
    1082:	d1 f7       	brne	.-12     	; 0x1078 <__vector_11+0x214>
    1084:	e8 ee       	ldi	r30, 0xE8	; 232
    1086:	f0 e0       	ldi	r31, 0x00	; 0
    1088:	8b ef       	ldi	r24, 0xFB	; 251
    108a:	80 83       	st	Z, r24
    108c:	8e ef       	ldi	r24, 0xFE	; 254
    108e:	80 83       	st	Z, r24
    1090:	5c c0       	rjmp	.+184    	; 0x114a <__vector_11+0x2e6>
    1092:	42 32       	cpi	r20, 0x22	; 34
    1094:	71 f4       	brne	.+28     	; 0x10b2 <__vector_11+0x24e>
    1096:	71 32       	cpi	r23, 0x21	; 33
    1098:	09 f0       	breq	.+2      	; 0x109c <__vector_11+0x238>
    109a:	50 c0       	rjmp	.+160    	; 0x113c <__vector_11+0x2d8>
    109c:	20 93 54 01 	sts	0x0154, r18
    10a0:	e8 ee       	ldi	r30, 0xE8	; 232
    10a2:	f0 e0       	ldi	r31, 0x00	; 0
    10a4:	80 81       	ld	r24, Z
    10a6:	80 ff       	sbrs	r24, 0
    10a8:	fd cf       	rjmp	.-6      	; 0x10a4 <__vector_11+0x240>
    10aa:	8e ef       	ldi	r24, 0xFE	; 254
    10ac:	80 93 e8 00 	sts	0x00E8, r24
    10b0:	4c c0       	rjmp	.+152    	; 0x114a <__vector_11+0x2e6>
    10b2:	41 11       	cpse	r20, r1
    10b4:	1a c0       	rjmp	.+52     	; 0x10ea <__vector_11+0x286>
    10b6:	e8 ee       	ldi	r30, 0xE8	; 232
    10b8:	f0 e0       	ldi	r31, 0x00	; 0
    10ba:	20 81       	ld	r18, Z
    10bc:	20 ff       	sbrs	r18, 0
    10be:	fd cf       	rjmp	.-6      	; 0x10ba <__vector_11+0x256>
    10c0:	72 38       	cpi	r23, 0x82	; 130
    10c2:	51 f4       	brne	.+20     	; 0x10d8 <__vector_11+0x274>
    10c4:	e9 ee       	ldi	r30, 0xE9	; 233
    10c6:	f0 e0       	ldi	r31, 0x00	; 0
    10c8:	80 83       	st	Z, r24
    10ca:	80 91 eb 00 	lds	r24, 0x00EB
    10ce:	85 fb       	bst	r24, 5
    10d0:	88 27       	eor	r24, r24
    10d2:	80 f9       	bld	r24, 0
    10d4:	10 82       	st	Z, r1
    10d6:	01 c0       	rjmp	.+2      	; 0x10da <__vector_11+0x276>
    10d8:	80 e0       	ldi	r24, 0x00	; 0
    10da:	e1 ef       	ldi	r30, 0xF1	; 241
    10dc:	f0 e0       	ldi	r31, 0x00	; 0
    10de:	80 83       	st	Z, r24
    10e0:	10 82       	st	Z, r1
    10e2:	8e ef       	ldi	r24, 0xFE	; 254
    10e4:	80 93 e8 00 	sts	0x00E8, r24
    10e8:	30 c0       	rjmp	.+96     	; 0x114a <__vector_11+0x2e6>
    10ea:	41 30       	cpi	r20, 0x01	; 1
    10ec:	11 f0       	breq	.+4      	; 0x10f2 <__vector_11+0x28e>
    10ee:	43 30       	cpi	r20, 0x03	; 3
    10f0:	29 f5       	brne	.+74     	; 0x113c <__vector_11+0x2d8>
    10f2:	72 30       	cpi	r23, 0x02	; 2
    10f4:	19 f5       	brne	.+70     	; 0x113c <__vector_11+0x2d8>
    10f6:	23 2b       	or	r18, r19
    10f8:	09 f5       	brne	.+66     	; 0x113c <__vector_11+0x2d8>
    10fa:	8f 77       	andi	r24, 0x7F	; 127
    10fc:	99 27       	eor	r25, r25
    10fe:	38 2f       	mov	r19, r24
    1100:	31 50       	subi	r19, 0x01	; 1
    1102:	34 30       	cpi	r19, 0x04	; 4
    1104:	d8 f4       	brcc	.+54     	; 0x113c <__vector_11+0x2d8>
    1106:	3e ef       	ldi	r19, 0xFE	; 254
    1108:	30 93 e8 00 	sts	0x00E8, r19
    110c:	80 93 e9 00 	sts	0x00E9, r24
    1110:	43 30       	cpi	r20, 0x03	; 3
    1112:	21 f4       	brne	.+8      	; 0x111c <__vector_11+0x2b8>
    1114:	81 e2       	ldi	r24, 0x21	; 33
    1116:	80 93 eb 00 	sts	0x00EB, r24
    111a:	17 c0       	rjmp	.+46     	; 0x114a <__vector_11+0x2e6>
    111c:	99 e1       	ldi	r25, 0x19	; 25
    111e:	90 93 eb 00 	sts	0x00EB, r25
    1122:	21 e0       	ldi	r18, 0x01	; 1
    1124:	30 e0       	ldi	r19, 0x00	; 0
    1126:	d9 01       	movw	r26, r18
    1128:	02 c0       	rjmp	.+4      	; 0x112e <__vector_11+0x2ca>
    112a:	aa 0f       	add	r26, r26
    112c:	bb 1f       	adc	r27, r27
    112e:	8a 95       	dec	r24
    1130:	e2 f7       	brpl	.-8      	; 0x112a <__vector_11+0x2c6>
    1132:	ea ee       	ldi	r30, 0xEA	; 234
    1134:	f0 e0       	ldi	r31, 0x00	; 0
    1136:	a0 83       	st	Z, r26
    1138:	10 82       	st	Z, r1
    113a:	07 c0       	rjmp	.+14     	; 0x114a <__vector_11+0x2e6>
    113c:	81 e2       	ldi	r24, 0x21	; 33
    113e:	80 93 eb 00 	sts	0x00EB, r24
    1142:	03 c0       	rjmp	.+6      	; 0x114a <__vector_11+0x2e6>
    1144:	78 83       	st	Y, r23
    1146:	41 11       	cpse	r20, r1
    1148:	fa ce       	rjmp	.-524    	; 0xf3e <__vector_11+0xda>
    114a:	ff 91       	pop	r31
    114c:	ef 91       	pop	r30
    114e:	df 91       	pop	r29
    1150:	cf 91       	pop	r28
    1152:	bf 91       	pop	r27
    1154:	af 91       	pop	r26
    1156:	9f 91       	pop	r25
    1158:	8f 91       	pop	r24
    115a:	7f 91       	pop	r23
    115c:	6f 91       	pop	r22
    115e:	5f 91       	pop	r21
    1160:	4f 91       	pop	r20
    1162:	3f 91       	pop	r19
    1164:	2f 91       	pop	r18
    1166:	1f 91       	pop	r17
    1168:	0f 91       	pop	r16
    116a:	0f 90       	pop	r0
    116c:	0f be       	out	0x3f, r0	; 63
    116e:	0f 90       	pop	r0
    1170:	1f 90       	pop	r1
    1172:	18 95       	reti

00001174 <m_usb_tx_int>:
    1174:	ef 92       	push	r14
    1176:	ff 92       	push	r15
    1178:	0f 93       	push	r16
    117a:	1f 93       	push	r17
    117c:	cf 93       	push	r28
    117e:	df 93       	push	r29
    1180:	cd b7       	in	r28, 0x3d	; 61
    1182:	de b7       	in	r29, 0x3e	; 62
    1184:	27 97       	sbiw	r28, 0x07	; 7
    1186:	0f b6       	in	r0, 0x3f	; 63
    1188:	f8 94       	cli
    118a:	de bf       	out	0x3e, r29	; 62
    118c:	0f be       	out	0x3f, r0	; 63
    118e:	cd bf       	out	0x3d, r28	; 61
    1190:	8e 01       	movw	r16, r28
    1192:	0f 5f       	subi	r16, 0xFF	; 255
    1194:	1f 4f       	sbci	r17, 0xFF	; 255
    1196:	27 e0       	ldi	r18, 0x07	; 7
    1198:	f8 01       	movw	r30, r16
    119a:	11 92       	st	Z+, r1
    119c:	2a 95       	dec	r18
    119e:	e9 f7       	brne	.-6      	; 0x119a <m_usb_tx_int+0x26>
    11a0:	4a e0       	ldi	r20, 0x0A	; 10
    11a2:	50 e0       	ldi	r21, 0x00	; 0
    11a4:	b8 01       	movw	r22, r16
    11a6:	0e 94 36 0e 	call	0x1c6c	; 0x1c6c <itoa>
    11aa:	7e 01       	movw	r14, r28
    11ac:	f8 e0       	ldi	r31, 0x08	; 8
    11ae:	ef 0e       	add	r14, r31
    11b0:	f1 1c       	adc	r15, r1
    11b2:	f8 01       	movw	r30, r16
    11b4:	81 91       	ld	r24, Z+
    11b6:	8f 01       	movw	r16, r30
    11b8:	81 11       	cpse	r24, r1
    11ba:	0e 94 98 06 	call	0xd30	; 0xd30 <m_usb_tx_char>
    11be:	0e 15       	cp	r16, r14
    11c0:	1f 05       	cpc	r17, r15
    11c2:	b9 f7       	brne	.-18     	; 0x11b2 <m_usb_tx_int+0x3e>
    11c4:	27 96       	adiw	r28, 0x07	; 7
    11c6:	0f b6       	in	r0, 0x3f	; 63
    11c8:	f8 94       	cli
    11ca:	de bf       	out	0x3e, r29	; 62
    11cc:	0f be       	out	0x3f, r0	; 63
    11ce:	cd bf       	out	0x3d, r28	; 61
    11d0:	df 91       	pop	r29
    11d2:	cf 91       	pop	r28
    11d4:	1f 91       	pop	r17
    11d6:	0f 91       	pop	r16
    11d8:	ff 90       	pop	r15
    11da:	ef 90       	pop	r14
    11dc:	08 95       	ret

000011de <twi_wait>:
    11de:	20 e0       	ldi	r18, 0x00	; 0
    11e0:	30 e0       	ldi	r19, 0x00	; 0
    11e2:	ec eb       	ldi	r30, 0xBC	; 188
    11e4:	f0 e0       	ldi	r31, 0x00	; 0
    11e6:	80 81       	ld	r24, Z
    11e8:	88 23       	and	r24, r24
    11ea:	34 f0       	brlt	.+12     	; 0x11f8 <twi_wait+0x1a>
    11ec:	2f 5f       	subi	r18, 0xFF	; 255
    11ee:	3f 4f       	sbci	r19, 0xFF	; 255
    11f0:	29 3e       	cpi	r18, 0xE9	; 233
    11f2:	83 e0       	ldi	r24, 0x03	; 3
    11f4:	38 07       	cpc	r19, r24
    11f6:	b9 f7       	brne	.-18     	; 0x11e6 <twi_wait+0x8>
    11f8:	81 e0       	ldi	r24, 0x01	; 1
    11fa:	28 3e       	cpi	r18, 0xE8	; 232
    11fc:	33 40       	sbci	r19, 0x03	; 3
    11fe:	09 f4       	brne	.+2      	; 0x1202 <twi_wait+0x24>
    1200:	80 e0       	ldi	r24, 0x00	; 0
    1202:	08 95       	ret

00001204 <send_byte>:
    1204:	80 93 bb 00 	sts	0x00BB, r24
    1208:	84 e8       	ldi	r24, 0x84	; 132
    120a:	80 93 bc 00 	sts	0x00BC, r24
    120e:	0e 94 ef 08 	call	0x11de	; 0x11de <twi_wait>
    1212:	88 23       	and	r24, r24
    1214:	21 f0       	breq	.+8      	; 0x121e <send_byte+0x1a>
    1216:	80 91 b9 00 	lds	r24, 0x00B9
    121a:	88 7f       	andi	r24, 0xF8	; 248
    121c:	08 95       	ret
    121e:	80 e0       	ldi	r24, 0x00	; 0
    1220:	08 95       	ret

00001222 <start_read>:
    1222:	cf 93       	push	r28
    1224:	c8 2f       	mov	r28, r24
    1226:	94 ea       	ldi	r25, 0xA4	; 164
    1228:	90 93 bc 00 	sts	0x00BC, r25
    122c:	0e 94 ef 08 	call	0x11de	; 0x11de <twi_wait>
    1230:	88 23       	and	r24, r24
    1232:	61 f0       	breq	.+24     	; 0x124c <start_read+0x2a>
    1234:	8c 2f       	mov	r24, r28
    1236:	88 0f       	add	r24, r24
    1238:	8f 5f       	subi	r24, 0xFF	; 255
    123a:	0e 94 02 09 	call	0x1204	; 0x1204 <send_byte>
    123e:	88 34       	cpi	r24, 0x48	; 72
    1240:	39 f4       	brne	.+14     	; 0x1250 <start_read+0x2e>
    1242:	84 e9       	ldi	r24, 0x94	; 148
    1244:	80 93 bc 00 	sts	0x00BC, r24
    1248:	80 e0       	ldi	r24, 0x00	; 0
    124a:	03 c0       	rjmp	.+6      	; 0x1252 <start_read+0x30>
    124c:	80 e0       	ldi	r24, 0x00	; 0
    124e:	01 c0       	rjmp	.+2      	; 0x1252 <start_read+0x30>
    1250:	81 e0       	ldi	r24, 0x01	; 1
    1252:	cf 91       	pop	r28
    1254:	08 95       	ret

00001256 <start_write>:
    1256:	cf 93       	push	r28
    1258:	c8 2f       	mov	r28, r24
    125a:	94 ea       	ldi	r25, 0xA4	; 164
    125c:	90 93 bc 00 	sts	0x00BC, r25
    1260:	0e 94 ef 08 	call	0x11de	; 0x11de <twi_wait>
    1264:	88 23       	and	r24, r24
    1266:	59 f0       	breq	.+22     	; 0x127e <start_write+0x28>
    1268:	8c 2f       	mov	r24, r28
    126a:	88 0f       	add	r24, r24
    126c:	0e 94 02 09 	call	0x1204	; 0x1204 <send_byte>
    1270:	80 32       	cpi	r24, 0x20	; 32
    1272:	39 f4       	brne	.+14     	; 0x1282 <start_write+0x2c>
    1274:	84 e9       	ldi	r24, 0x94	; 148
    1276:	80 93 bc 00 	sts	0x00BC, r24
    127a:	80 e0       	ldi	r24, 0x00	; 0
    127c:	03 c0       	rjmp	.+6      	; 0x1284 <start_write+0x2e>
    127e:	80 e0       	ldi	r24, 0x00	; 0
    1280:	01 c0       	rjmp	.+2      	; 0x1284 <start_write+0x2e>
    1282:	81 e0       	ldi	r24, 0x01	; 1
    1284:	cf 91       	pop	r28
    1286:	08 95       	ret

00001288 <end>:
    1288:	84 e9       	ldi	r24, 0x94	; 148
    128a:	80 93 bc 00 	sts	0x00BC, r24
    128e:	08 95       	ret

00001290 <m_wii_read>:
    1290:	ef 92       	push	r14
    1292:	ff 92       	push	r15
    1294:	0f 93       	push	r16
    1296:	1f 93       	push	r17
    1298:	cf 93       	push	r28
    129a:	df 93       	push	r29
    129c:	cd b7       	in	r28, 0x3d	; 61
    129e:	de b7       	in	r29, 0x3e	; 62
    12a0:	60 97       	sbiw	r28, 0x10	; 16
    12a2:	0f b6       	in	r0, 0x3f	; 63
    12a4:	f8 94       	cli
    12a6:	de bf       	out	0x3e, r29	; 62
    12a8:	0f be       	out	0x3f, r0	; 63
    12aa:	cd bf       	out	0x3d, r28	; 61
    12ac:	e8 2e       	mov	r14, r24
    12ae:	f9 2e       	mov	r15, r25
    12b0:	fe 01       	movw	r30, r28
    12b2:	31 96       	adiw	r30, 0x01	; 1
    12b4:	80 e1       	ldi	r24, 0x10	; 16
    12b6:	df 01       	movw	r26, r30
    12b8:	1d 92       	st	X+, r1
    12ba:	8a 95       	dec	r24
    12bc:	e9 f7       	brne	.-6      	; 0x12b8 <m_wii_read+0x28>
    12be:	88 e5       	ldi	r24, 0x58	; 88
    12c0:	0e 94 2b 09 	call	0x1256	; 0x1256 <start_write>
    12c4:	88 23       	and	r24, r24
    12c6:	09 f4       	brne	.+2      	; 0x12ca <m_wii_read+0x3a>
    12c8:	66 c0       	rjmp	.+204    	; 0x1396 <m_wii_read+0x106>
    12ca:	86 e3       	ldi	r24, 0x36	; 54
    12cc:	0e 94 02 09 	call	0x1204	; 0x1204 <send_byte>
    12d0:	88 23       	and	r24, r24
    12d2:	09 f4       	brne	.+2      	; 0x12d6 <m_wii_read+0x46>
    12d4:	62 c0       	rjmp	.+196    	; 0x139a <m_wii_read+0x10a>
    12d6:	0e 94 44 09 	call	0x1288	; 0x1288 <end>
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

    12da:	b8 e0       	ldi	r27, 0x08	; 8
    12dc:	ba 95       	dec	r27
    12de:	f1 f7       	brne	.-4      	; 0x12dc <m_wii_read+0x4c>
    12e0:	00 00       	nop
    12e2:	88 e5       	ldi	r24, 0x58	; 88
    12e4:	0e 94 11 09 	call	0x1222	; 0x1222 <start_read>
    12e8:	88 23       	and	r24, r24
    12ea:	09 f4       	brne	.+2      	; 0x12ee <m_wii_read+0x5e>
    12ec:	58 c0       	rjmp	.+176    	; 0x139e <m_wii_read+0x10e>
    12ee:	ae 01       	movw	r20, r28
    12f0:	4f 5f       	subi	r20, 0xFF	; 255
    12f2:	5f 4f       	sbci	r21, 0xFF	; 255
    12f4:	8e 01       	movw	r16, r28
    12f6:	00 5f       	subi	r16, 0xF0	; 240
    12f8:	1f 4f       	sbci	r17, 0xFF	; 255
    12fa:	ec eb       	ldi	r30, 0xBC	; 188
    12fc:	f0 e0       	ldi	r31, 0x00	; 0
    12fe:	94 ec       	ldi	r25, 0xC4	; 196
    1300:	2b eb       	ldi	r18, 0xBB	; 187
    1302:	30 e0       	ldi	r19, 0x00	; 0
    1304:	90 83       	st	Z, r25
    1306:	80 81       	ld	r24, Z
    1308:	88 23       	and	r24, r24
    130a:	ec f7       	brge	.-6      	; 0x1306 <m_wii_read+0x76>
    130c:	d9 01       	movw	r26, r18
    130e:	8c 91       	ld	r24, X
    1310:	da 01       	movw	r26, r20
    1312:	8d 93       	st	X+, r24
    1314:	ad 01       	movw	r20, r26
    1316:	a0 17       	cp	r26, r16
    1318:	b1 07       	cpc	r27, r17
    131a:	a1 f7       	brne	.-24     	; 0x1304 <m_wii_read+0x74>
    131c:	84 e8       	ldi	r24, 0x84	; 132
    131e:	80 93 bc 00 	sts	0x00BC, r24
    1322:	ec eb       	ldi	r30, 0xBC	; 188
    1324:	f0 e0       	ldi	r31, 0x00	; 0
    1326:	80 81       	ld	r24, Z
    1328:	88 23       	and	r24, r24
    132a:	ec f7       	brge	.-6      	; 0x1326 <m_wii_read+0x96>
    132c:	80 91 bb 00 	lds	r24, 0x00BB
    1330:	88 8b       	std	Y+16, r24	; 0x10
    1332:	0e 94 44 09 	call	0x1288	; 0x1288 <end>
    1336:	de 01       	movw	r26, r28
    1338:	14 96       	adiw	r26, 0x04	; 4
    133a:	6e 2d       	mov	r22, r14
    133c:	7f 2d       	mov	r23, r15
    133e:	4c 91       	ld	r20, X
    1340:	24 2f       	mov	r18, r20
    1342:	20 73       	andi	r18, 0x30	; 48
    1344:	cd 01       	movw	r24, r26
    1346:	02 97       	sbiw	r24, 0x02	; 2
    1348:	fc 01       	movw	r30, r24
    134a:	80 81       	ld	r24, Z
    134c:	90 e0       	ldi	r25, 0x00	; 0
    134e:	f0 e1       	ldi	r31, 0x10	; 16
    1350:	2f 9f       	mul	r18, r31
    1352:	80 0d       	add	r24, r0
    1354:	91 1d       	adc	r25, r1
    1356:	11 24       	eor	r1, r1
    1358:	fb 01       	movw	r30, r22
    135a:	91 83       	std	Z+1, r25	; 0x01
    135c:	80 83       	st	Z, r24
    135e:	84 2f       	mov	r24, r20
    1360:	80 7c       	andi	r24, 0xC0	; 192
    1362:	90 e0       	ldi	r25, 0x00	; 0
    1364:	88 0f       	add	r24, r24
    1366:	99 1f       	adc	r25, r25
    1368:	88 0f       	add	r24, r24
    136a:	99 1f       	adc	r25, r25
    136c:	9d 01       	movw	r18, r26
    136e:	21 50       	subi	r18, 0x01	; 1
    1370:	31 09       	sbc	r19, r1
    1372:	f9 01       	movw	r30, r18
    1374:	20 81       	ld	r18, Z
    1376:	82 0f       	add	r24, r18
    1378:	91 1d       	adc	r25, r1
    137a:	fb 01       	movw	r30, r22
    137c:	93 83       	std	Z+3, r25	; 0x03
    137e:	82 83       	std	Z+2, r24	; 0x02
    1380:	4f 70       	andi	r20, 0x0F	; 15
    1382:	44 83       	std	Z+4, r20	; 0x04
    1384:	15 82       	std	Z+5, r1	; 0x05
    1386:	13 96       	adiw	r26, 0x03	; 3
    1388:	6a 5f       	subi	r22, 0xFA	; 250
    138a:	7f 4f       	sbci	r23, 0xFF	; 255
    138c:	0a 17       	cp	r16, r26
    138e:	1b 07       	cpc	r17, r27
    1390:	b1 f6       	brne	.-84     	; 0x133e <m_wii_read+0xae>
    1392:	81 e0       	ldi	r24, 0x01	; 1
    1394:	05 c0       	rjmp	.+10     	; 0x13a0 <m_wii_read+0x110>
    1396:	80 e0       	ldi	r24, 0x00	; 0
    1398:	03 c0       	rjmp	.+6      	; 0x13a0 <m_wii_read+0x110>
    139a:	80 e0       	ldi	r24, 0x00	; 0
    139c:	01 c0       	rjmp	.+2      	; 0x13a0 <m_wii_read+0x110>
    139e:	80 e0       	ldi	r24, 0x00	; 0
    13a0:	60 96       	adiw	r28, 0x10	; 16
    13a2:	0f b6       	in	r0, 0x3f	; 63
    13a4:	f8 94       	cli
    13a6:	de bf       	out	0x3e, r29	; 62
    13a8:	0f be       	out	0x3f, r0	; 63
    13aa:	cd bf       	out	0x3d, r28	; 61
    13ac:	df 91       	pop	r29
    13ae:	cf 91       	pop	r28
    13b0:	1f 91       	pop	r17
    13b2:	0f 91       	pop	r16
    13b4:	ff 90       	pop	r15
    13b6:	ef 90       	pop	r14
    13b8:	08 95       	ret

000013ba <m_wii_open>:
    13ba:	0e 94 39 01 	call	0x272	; 0x272 <m_bus_init>
    13be:	88 e5       	ldi	r24, 0x58	; 88
    13c0:	0e 94 2b 09 	call	0x1256	; 0x1256 <start_write>
    13c4:	88 23       	and	r24, r24
    13c6:	09 f4       	brne	.+2      	; 0x13ca <m_wii_open+0x10>
    13c8:	c7 c0       	rjmp	.+398    	; 0x1558 <m_wii_open+0x19e>
    13ca:	80 e3       	ldi	r24, 0x30	; 48
    13cc:	0e 94 02 09 	call	0x1204	; 0x1204 <send_byte>
    13d0:	88 23       	and	r24, r24
    13d2:	09 f4       	brne	.+2      	; 0x13d6 <m_wii_open+0x1c>
    13d4:	c3 c0       	rjmp	.+390    	; 0x155c <m_wii_open+0x1a2>
    13d6:	81 e0       	ldi	r24, 0x01	; 1
    13d8:	0e 94 02 09 	call	0x1204	; 0x1204 <send_byte>
    13dc:	88 23       	and	r24, r24
    13de:	09 f4       	brne	.+2      	; 0x13e2 <m_wii_open+0x28>
    13e0:	bf c0       	rjmp	.+382    	; 0x1560 <m_wii_open+0x1a6>
    13e2:	0e 94 44 09 	call	0x1288	; 0x1288 <end>
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

    13e6:	83 ec       	ldi	r24, 0xC3	; 195
    13e8:	99 e0       	ldi	r25, 0x09	; 9
    13ea:	01 97       	sbiw	r24, 0x01	; 1
    13ec:	f1 f7       	brne	.-4      	; 0x13ea <m_wii_open+0x30>
    13ee:	00 c0       	rjmp	.+0      	; 0x13f0 <m_wii_open+0x36>
    13f0:	00 00       	nop
    13f2:	88 e5       	ldi	r24, 0x58	; 88
    13f4:	0e 94 2b 09 	call	0x1256	; 0x1256 <start_write>
    13f8:	88 23       	and	r24, r24
    13fa:	09 f4       	brne	.+2      	; 0x13fe <m_wii_open+0x44>
    13fc:	b3 c0       	rjmp	.+358    	; 0x1564 <m_wii_open+0x1aa>
    13fe:	80 e0       	ldi	r24, 0x00	; 0
    1400:	0e 94 02 09 	call	0x1204	; 0x1204 <send_byte>
    1404:	88 23       	and	r24, r24
    1406:	09 f4       	brne	.+2      	; 0x140a <m_wii_open+0x50>
    1408:	af c0       	rjmp	.+350    	; 0x1568 <m_wii_open+0x1ae>
    140a:	80 e0       	ldi	r24, 0x00	; 0
    140c:	0e 94 02 09 	call	0x1204	; 0x1204 <send_byte>
    1410:	88 23       	and	r24, r24
    1412:	09 f4       	brne	.+2      	; 0x1416 <m_wii_open+0x5c>
    1414:	ab c0       	rjmp	.+342    	; 0x156c <m_wii_open+0x1b2>
    1416:	80 e0       	ldi	r24, 0x00	; 0
    1418:	0e 94 02 09 	call	0x1204	; 0x1204 <send_byte>
    141c:	88 23       	and	r24, r24
    141e:	09 f4       	brne	.+2      	; 0x1422 <m_wii_open+0x68>
    1420:	a7 c0       	rjmp	.+334    	; 0x1570 <m_wii_open+0x1b6>
    1422:	80 e0       	ldi	r24, 0x00	; 0
    1424:	0e 94 02 09 	call	0x1204	; 0x1204 <send_byte>
    1428:	88 23       	and	r24, r24
    142a:	09 f4       	brne	.+2      	; 0x142e <m_wii_open+0x74>
    142c:	a3 c0       	rjmp	.+326    	; 0x1574 <m_wii_open+0x1ba>
    142e:	80 e0       	ldi	r24, 0x00	; 0
    1430:	0e 94 02 09 	call	0x1204	; 0x1204 <send_byte>
    1434:	88 23       	and	r24, r24
    1436:	09 f4       	brne	.+2      	; 0x143a <m_wii_open+0x80>
    1438:	9f c0       	rjmp	.+318    	; 0x1578 <m_wii_open+0x1be>
    143a:	80 e0       	ldi	r24, 0x00	; 0
    143c:	0e 94 02 09 	call	0x1204	; 0x1204 <send_byte>
    1440:	88 23       	and	r24, r24
    1442:	09 f4       	brne	.+2      	; 0x1446 <m_wii_open+0x8c>
    1444:	9b c0       	rjmp	.+310    	; 0x157c <m_wii_open+0x1c2>
    1446:	80 e0       	ldi	r24, 0x00	; 0
    1448:	0e 94 02 09 	call	0x1204	; 0x1204 <send_byte>
    144c:	88 23       	and	r24, r24
    144e:	09 f4       	brne	.+2      	; 0x1452 <m_wii_open+0x98>
    1450:	97 c0       	rjmp	.+302    	; 0x1580 <m_wii_open+0x1c6>
    1452:	80 e9       	ldi	r24, 0x90	; 144
    1454:	0e 94 02 09 	call	0x1204	; 0x1204 <send_byte>
    1458:	88 23       	and	r24, r24
    145a:	09 f4       	brne	.+2      	; 0x145e <m_wii_open+0xa4>
    145c:	93 c0       	rjmp	.+294    	; 0x1584 <m_wii_open+0x1ca>
    145e:	0e 94 44 09 	call	0x1288	; 0x1288 <end>
    1462:	83 ec       	ldi	r24, 0xC3	; 195
    1464:	99 e0       	ldi	r25, 0x09	; 9
    1466:	01 97       	sbiw	r24, 0x01	; 1
    1468:	f1 f7       	brne	.-4      	; 0x1466 <m_wii_open+0xac>
    146a:	00 c0       	rjmp	.+0      	; 0x146c <m_wii_open+0xb2>
    146c:	00 00       	nop
    146e:	88 e5       	ldi	r24, 0x58	; 88
    1470:	0e 94 2b 09 	call	0x1256	; 0x1256 <start_write>
    1474:	88 23       	and	r24, r24
    1476:	09 f4       	brne	.+2      	; 0x147a <m_wii_open+0xc0>
    1478:	87 c0       	rjmp	.+270    	; 0x1588 <m_wii_open+0x1ce>
    147a:	87 e0       	ldi	r24, 0x07	; 7
    147c:	0e 94 02 09 	call	0x1204	; 0x1204 <send_byte>
    1480:	88 23       	and	r24, r24
    1482:	09 f4       	brne	.+2      	; 0x1486 <m_wii_open+0xcc>
    1484:	83 c0       	rjmp	.+262    	; 0x158c <m_wii_open+0x1d2>
    1486:	80 e0       	ldi	r24, 0x00	; 0
    1488:	0e 94 02 09 	call	0x1204	; 0x1204 <send_byte>
    148c:	88 23       	and	r24, r24
    148e:	09 f4       	brne	.+2      	; 0x1492 <m_wii_open+0xd8>
    1490:	7f c0       	rjmp	.+254    	; 0x1590 <m_wii_open+0x1d6>
    1492:	81 e4       	ldi	r24, 0x41	; 65
    1494:	0e 94 02 09 	call	0x1204	; 0x1204 <send_byte>
    1498:	88 23       	and	r24, r24
    149a:	09 f4       	brne	.+2      	; 0x149e <m_wii_open+0xe4>
    149c:	7b c0       	rjmp	.+246    	; 0x1594 <m_wii_open+0x1da>
    149e:	0e 94 44 09 	call	0x1288	; 0x1288 <end>
    14a2:	83 ec       	ldi	r24, 0xC3	; 195
    14a4:	99 e0       	ldi	r25, 0x09	; 9
    14a6:	01 97       	sbiw	r24, 0x01	; 1
    14a8:	f1 f7       	brne	.-4      	; 0x14a6 <m_wii_open+0xec>
    14aa:	00 c0       	rjmp	.+0      	; 0x14ac <m_wii_open+0xf2>
    14ac:	00 00       	nop
    14ae:	88 e5       	ldi	r24, 0x58	; 88
    14b0:	0e 94 2b 09 	call	0x1256	; 0x1256 <start_write>
    14b4:	88 23       	and	r24, r24
    14b6:	09 f4       	brne	.+2      	; 0x14ba <m_wii_open+0x100>
    14b8:	6f c0       	rjmp	.+222    	; 0x1598 <m_wii_open+0x1de>
    14ba:	8a e1       	ldi	r24, 0x1A	; 26
    14bc:	0e 94 02 09 	call	0x1204	; 0x1204 <send_byte>
    14c0:	88 23       	and	r24, r24
    14c2:	09 f4       	brne	.+2      	; 0x14c6 <m_wii_open+0x10c>
    14c4:	6b c0       	rjmp	.+214    	; 0x159c <m_wii_open+0x1e2>
    14c6:	80 e4       	ldi	r24, 0x40	; 64
    14c8:	0e 94 02 09 	call	0x1204	; 0x1204 <send_byte>
    14cc:	88 23       	and	r24, r24
    14ce:	09 f4       	brne	.+2      	; 0x14d2 <m_wii_open+0x118>
    14d0:	67 c0       	rjmp	.+206    	; 0x15a0 <m_wii_open+0x1e6>
    14d2:	80 e0       	ldi	r24, 0x00	; 0
    14d4:	0e 94 02 09 	call	0x1204	; 0x1204 <send_byte>
    14d8:	88 23       	and	r24, r24
    14da:	09 f4       	brne	.+2      	; 0x14de <m_wii_open+0x124>
    14dc:	63 c0       	rjmp	.+198    	; 0x15a4 <m_wii_open+0x1ea>
    14de:	0e 94 44 09 	call	0x1288	; 0x1288 <end>
    14e2:	83 ec       	ldi	r24, 0xC3	; 195
    14e4:	99 e0       	ldi	r25, 0x09	; 9
    14e6:	01 97       	sbiw	r24, 0x01	; 1
    14e8:	f1 f7       	brne	.-4      	; 0x14e6 <m_wii_open+0x12c>
    14ea:	00 c0       	rjmp	.+0      	; 0x14ec <m_wii_open+0x132>
    14ec:	00 00       	nop
    14ee:	88 e5       	ldi	r24, 0x58	; 88
    14f0:	0e 94 2b 09 	call	0x1256	; 0x1256 <start_write>
    14f4:	88 23       	and	r24, r24
    14f6:	09 f4       	brne	.+2      	; 0x14fa <m_wii_open+0x140>
    14f8:	57 c0       	rjmp	.+174    	; 0x15a8 <m_wii_open+0x1ee>
    14fa:	83 e3       	ldi	r24, 0x33	; 51
    14fc:	0e 94 02 09 	call	0x1204	; 0x1204 <send_byte>
    1500:	88 23       	and	r24, r24
    1502:	09 f4       	brne	.+2      	; 0x1506 <m_wii_open+0x14c>
    1504:	53 c0       	rjmp	.+166    	; 0x15ac <m_wii_open+0x1f2>
    1506:	83 e0       	ldi	r24, 0x03	; 3
    1508:	0e 94 02 09 	call	0x1204	; 0x1204 <send_byte>
    150c:	88 23       	and	r24, r24
    150e:	09 f4       	brne	.+2      	; 0x1512 <m_wii_open+0x158>
    1510:	4f c0       	rjmp	.+158    	; 0x15b0 <m_wii_open+0x1f6>
    1512:	0e 94 44 09 	call	0x1288	; 0x1288 <end>
    1516:	83 ec       	ldi	r24, 0xC3	; 195
    1518:	99 e0       	ldi	r25, 0x09	; 9
    151a:	01 97       	sbiw	r24, 0x01	; 1
    151c:	f1 f7       	brne	.-4      	; 0x151a <m_wii_open+0x160>
    151e:	00 c0       	rjmp	.+0      	; 0x1520 <m_wii_open+0x166>
    1520:	00 00       	nop
    1522:	88 e5       	ldi	r24, 0x58	; 88
    1524:	0e 94 2b 09 	call	0x1256	; 0x1256 <start_write>
    1528:	88 23       	and	r24, r24
    152a:	09 f4       	brne	.+2      	; 0x152e <m_wii_open+0x174>
    152c:	43 c0       	rjmp	.+134    	; 0x15b4 <m_wii_open+0x1fa>
    152e:	80 e3       	ldi	r24, 0x30	; 48
    1530:	0e 94 02 09 	call	0x1204	; 0x1204 <send_byte>
    1534:	88 23       	and	r24, r24
    1536:	09 f4       	brne	.+2      	; 0x153a <m_wii_open+0x180>
    1538:	3f c0       	rjmp	.+126    	; 0x15b8 <m_wii_open+0x1fe>
    153a:	88 e0       	ldi	r24, 0x08	; 8
    153c:	0e 94 02 09 	call	0x1204	; 0x1204 <send_byte>
    1540:	88 23       	and	r24, r24
    1542:	e1 f1       	breq	.+120    	; 0x15bc <m_wii_open+0x202>
    1544:	0e 94 44 09 	call	0x1288	; 0x1288 <end>
    1548:	83 ec       	ldi	r24, 0xC3	; 195
    154a:	99 e0       	ldi	r25, 0x09	; 9
    154c:	01 97       	sbiw	r24, 0x01	; 1
    154e:	f1 f7       	brne	.-4      	; 0x154c <m_wii_open+0x192>
    1550:	00 c0       	rjmp	.+0      	; 0x1552 <m_wii_open+0x198>
    1552:	00 00       	nop
    1554:	81 e0       	ldi	r24, 0x01	; 1
    1556:	08 95       	ret
    1558:	80 e0       	ldi	r24, 0x00	; 0
    155a:	08 95       	ret
    155c:	80 e0       	ldi	r24, 0x00	; 0
    155e:	08 95       	ret
    1560:	80 e0       	ldi	r24, 0x00	; 0
    1562:	08 95       	ret
    1564:	80 e0       	ldi	r24, 0x00	; 0
    1566:	08 95       	ret
    1568:	80 e0       	ldi	r24, 0x00	; 0
    156a:	08 95       	ret
    156c:	80 e0       	ldi	r24, 0x00	; 0
    156e:	08 95       	ret
    1570:	80 e0       	ldi	r24, 0x00	; 0
    1572:	08 95       	ret
    1574:	80 e0       	ldi	r24, 0x00	; 0
    1576:	08 95       	ret
    1578:	80 e0       	ldi	r24, 0x00	; 0
    157a:	08 95       	ret
    157c:	80 e0       	ldi	r24, 0x00	; 0
    157e:	08 95       	ret
    1580:	80 e0       	ldi	r24, 0x00	; 0
    1582:	08 95       	ret
    1584:	80 e0       	ldi	r24, 0x00	; 0
    1586:	08 95       	ret
    1588:	80 e0       	ldi	r24, 0x00	; 0
    158a:	08 95       	ret
    158c:	80 e0       	ldi	r24, 0x00	; 0
    158e:	08 95       	ret
    1590:	80 e0       	ldi	r24, 0x00	; 0
    1592:	08 95       	ret
    1594:	80 e0       	ldi	r24, 0x00	; 0
    1596:	08 95       	ret
    1598:	80 e0       	ldi	r24, 0x00	; 0
    159a:	08 95       	ret
    159c:	80 e0       	ldi	r24, 0x00	; 0
    159e:	08 95       	ret
    15a0:	80 e0       	ldi	r24, 0x00	; 0
    15a2:	08 95       	ret
    15a4:	80 e0       	ldi	r24, 0x00	; 0
    15a6:	08 95       	ret
    15a8:	80 e0       	ldi	r24, 0x00	; 0
    15aa:	08 95       	ret
    15ac:	80 e0       	ldi	r24, 0x00	; 0
    15ae:	08 95       	ret
    15b0:	80 e0       	ldi	r24, 0x00	; 0
    15b2:	08 95       	ret
    15b4:	80 e0       	ldi	r24, 0x00	; 0
    15b6:	08 95       	ret
    15b8:	80 e0       	ldi	r24, 0x00	; 0
    15ba:	08 95       	ret
    15bc:	80 e0       	ldi	r24, 0x00	; 0
    15be:	08 95       	ret

000015c0 <__subsf3>:
    15c0:	50 58       	subi	r21, 0x80	; 128

000015c2 <__addsf3>:
    15c2:	bb 27       	eor	r27, r27
    15c4:	aa 27       	eor	r26, r26
    15c6:	0e d0       	rcall	.+28     	; 0x15e4 <__addsf3x>
    15c8:	27 c2       	rjmp	.+1102   	; 0x1a18 <__fp_round>
    15ca:	f0 d1       	rcall	.+992    	; 0x19ac <__fp_pscA>
    15cc:	30 f0       	brcs	.+12     	; 0x15da <__addsf3+0x18>
    15ce:	f5 d1       	rcall	.+1002   	; 0x19ba <__fp_pscB>
    15d0:	20 f0       	brcs	.+8      	; 0x15da <__addsf3+0x18>
    15d2:	31 f4       	brne	.+12     	; 0x15e0 <__addsf3+0x1e>
    15d4:	9f 3f       	cpi	r25, 0xFF	; 255
    15d6:	11 f4       	brne	.+4      	; 0x15dc <__addsf3+0x1a>
    15d8:	1e f4       	brtc	.+6      	; 0x15e0 <__addsf3+0x1e>
    15da:	c0 c1       	rjmp	.+896    	; 0x195c <__fp_nan>
    15dc:	0e f4       	brtc	.+2      	; 0x15e0 <__addsf3+0x1e>
    15de:	e0 95       	com	r30
    15e0:	e7 fb       	bst	r30, 7
    15e2:	b6 c1       	rjmp	.+876    	; 0x1950 <__fp_inf>

000015e4 <__addsf3x>:
    15e4:	e9 2f       	mov	r30, r25
    15e6:	3a d2       	rcall	.+1140   	; 0x1a5c <__fp_split3>
    15e8:	80 f3       	brcs	.-32     	; 0x15ca <__addsf3+0x8>
    15ea:	ba 17       	cp	r27, r26
    15ec:	62 07       	cpc	r22, r18
    15ee:	73 07       	cpc	r23, r19
    15f0:	84 07       	cpc	r24, r20
    15f2:	95 07       	cpc	r25, r21
    15f4:	18 f0       	brcs	.+6      	; 0x15fc <__addsf3x+0x18>
    15f6:	71 f4       	brne	.+28     	; 0x1614 <__addsf3x+0x30>
    15f8:	9e f5       	brtc	.+102    	; 0x1660 <__addsf3x+0x7c>
    15fa:	52 c2       	rjmp	.+1188   	; 0x1aa0 <__fp_zero>
    15fc:	0e f4       	brtc	.+2      	; 0x1600 <__addsf3x+0x1c>
    15fe:	e0 95       	com	r30
    1600:	0b 2e       	mov	r0, r27
    1602:	ba 2f       	mov	r27, r26
    1604:	a0 2d       	mov	r26, r0
    1606:	0b 01       	movw	r0, r22
    1608:	b9 01       	movw	r22, r18
    160a:	90 01       	movw	r18, r0
    160c:	0c 01       	movw	r0, r24
    160e:	ca 01       	movw	r24, r20
    1610:	a0 01       	movw	r20, r0
    1612:	11 24       	eor	r1, r1
    1614:	ff 27       	eor	r31, r31
    1616:	59 1b       	sub	r21, r25
    1618:	99 f0       	breq	.+38     	; 0x1640 <__addsf3x+0x5c>
    161a:	59 3f       	cpi	r21, 0xF9	; 249
    161c:	50 f4       	brcc	.+20     	; 0x1632 <__addsf3x+0x4e>
    161e:	50 3e       	cpi	r21, 0xE0	; 224
    1620:	68 f1       	brcs	.+90     	; 0x167c <__addsf3x+0x98>
    1622:	1a 16       	cp	r1, r26
    1624:	f0 40       	sbci	r31, 0x00	; 0
    1626:	a2 2f       	mov	r26, r18
    1628:	23 2f       	mov	r18, r19
    162a:	34 2f       	mov	r19, r20
    162c:	44 27       	eor	r20, r20
    162e:	58 5f       	subi	r21, 0xF8	; 248
    1630:	f3 cf       	rjmp	.-26     	; 0x1618 <__addsf3x+0x34>
    1632:	46 95       	lsr	r20
    1634:	37 95       	ror	r19
    1636:	27 95       	ror	r18
    1638:	a7 95       	ror	r26
    163a:	f0 40       	sbci	r31, 0x00	; 0
    163c:	53 95       	inc	r21
    163e:	c9 f7       	brne	.-14     	; 0x1632 <__addsf3x+0x4e>
    1640:	7e f4       	brtc	.+30     	; 0x1660 <__addsf3x+0x7c>
    1642:	1f 16       	cp	r1, r31
    1644:	ba 0b       	sbc	r27, r26
    1646:	62 0b       	sbc	r22, r18
    1648:	73 0b       	sbc	r23, r19
    164a:	84 0b       	sbc	r24, r20
    164c:	ba f0       	brmi	.+46     	; 0x167c <__addsf3x+0x98>
    164e:	91 50       	subi	r25, 0x01	; 1
    1650:	a1 f0       	breq	.+40     	; 0x167a <__addsf3x+0x96>
    1652:	ff 0f       	add	r31, r31
    1654:	bb 1f       	adc	r27, r27
    1656:	66 1f       	adc	r22, r22
    1658:	77 1f       	adc	r23, r23
    165a:	88 1f       	adc	r24, r24
    165c:	c2 f7       	brpl	.-16     	; 0x164e <__addsf3x+0x6a>
    165e:	0e c0       	rjmp	.+28     	; 0x167c <__addsf3x+0x98>
    1660:	ba 0f       	add	r27, r26
    1662:	62 1f       	adc	r22, r18
    1664:	73 1f       	adc	r23, r19
    1666:	84 1f       	adc	r24, r20
    1668:	48 f4       	brcc	.+18     	; 0x167c <__addsf3x+0x98>
    166a:	87 95       	ror	r24
    166c:	77 95       	ror	r23
    166e:	67 95       	ror	r22
    1670:	b7 95       	ror	r27
    1672:	f7 95       	ror	r31
    1674:	9e 3f       	cpi	r25, 0xFE	; 254
    1676:	08 f0       	brcs	.+2      	; 0x167a <__addsf3x+0x96>
    1678:	b3 cf       	rjmp	.-154    	; 0x15e0 <__addsf3+0x1e>
    167a:	93 95       	inc	r25
    167c:	88 0f       	add	r24, r24
    167e:	08 f0       	brcs	.+2      	; 0x1682 <__addsf3x+0x9e>
    1680:	99 27       	eor	r25, r25
    1682:	ee 0f       	add	r30, r30
    1684:	97 95       	ror	r25
    1686:	87 95       	ror	r24
    1688:	08 95       	ret
    168a:	90 d1       	rcall	.+800    	; 0x19ac <__fp_pscA>
    168c:	58 f0       	brcs	.+22     	; 0x16a4 <__addsf3x+0xc0>
    168e:	80 e8       	ldi	r24, 0x80	; 128
    1690:	91 e0       	ldi	r25, 0x01	; 1
    1692:	09 f4       	brne	.+2      	; 0x1696 <__addsf3x+0xb2>
    1694:	9e ef       	ldi	r25, 0xFE	; 254
    1696:	91 d1       	rcall	.+802    	; 0x19ba <__fp_pscB>
    1698:	28 f0       	brcs	.+10     	; 0x16a4 <__addsf3x+0xc0>
    169a:	40 e8       	ldi	r20, 0x80	; 128
    169c:	51 e0       	ldi	r21, 0x01	; 1
    169e:	59 f4       	brne	.+22     	; 0x16b6 <atan2+0xe>
    16a0:	5e ef       	ldi	r21, 0xFE	; 254
    16a2:	09 c0       	rjmp	.+18     	; 0x16b6 <atan2+0xe>
    16a4:	5b c1       	rjmp	.+694    	; 0x195c <__fp_nan>
    16a6:	fc c1       	rjmp	.+1016   	; 0x1aa0 <__fp_zero>

000016a8 <atan2>:
    16a8:	e9 2f       	mov	r30, r25
    16aa:	e0 78       	andi	r30, 0x80	; 128
    16ac:	d7 d1       	rcall	.+942    	; 0x1a5c <__fp_split3>
    16ae:	68 f3       	brcs	.-38     	; 0x168a <__addsf3x+0xa6>
    16b0:	09 2e       	mov	r0, r25
    16b2:	05 2a       	or	r0, r21
    16b4:	c1 f3       	breq	.-16     	; 0x16a6 <__addsf3x+0xc2>
    16b6:	26 17       	cp	r18, r22
    16b8:	37 07       	cpc	r19, r23
    16ba:	48 07       	cpc	r20, r24
    16bc:	59 07       	cpc	r21, r25
    16be:	38 f0       	brcs	.+14     	; 0x16ce <atan2+0x26>
    16c0:	0e 2e       	mov	r0, r30
    16c2:	07 f8       	bld	r0, 7
    16c4:	e0 25       	eor	r30, r0
    16c6:	69 f0       	breq	.+26     	; 0x16e2 <atan2+0x3a>
    16c8:	e0 25       	eor	r30, r0
    16ca:	e0 64       	ori	r30, 0x40	; 64
    16cc:	0a c0       	rjmp	.+20     	; 0x16e2 <atan2+0x3a>
    16ce:	ef 63       	ori	r30, 0x3F	; 63
    16d0:	07 f8       	bld	r0, 7
    16d2:	00 94       	com	r0
    16d4:	07 fa       	bst	r0, 7
    16d6:	db 01       	movw	r26, r22
    16d8:	b9 01       	movw	r22, r18
    16da:	9d 01       	movw	r18, r26
    16dc:	dc 01       	movw	r26, r24
    16de:	ca 01       	movw	r24, r20
    16e0:	ad 01       	movw	r20, r26
    16e2:	ef 93       	push	r30
    16e4:	4a d0       	rcall	.+148    	; 0x177a <__divsf3_pse>
    16e6:	98 d1       	rcall	.+816    	; 0x1a18 <__fp_round>
    16e8:	0a d0       	rcall	.+20     	; 0x16fe <atan>
    16ea:	5f 91       	pop	r21
    16ec:	55 23       	and	r21, r21
    16ee:	31 f0       	breq	.+12     	; 0x16fc <atan2+0x54>
    16f0:	2b ed       	ldi	r18, 0xDB	; 219
    16f2:	3f e0       	ldi	r19, 0x0F	; 15
    16f4:	49 e4       	ldi	r20, 0x49	; 73
    16f6:	50 fd       	sbrc	r21, 0
    16f8:	49 ec       	ldi	r20, 0xC9	; 201
    16fa:	63 cf       	rjmp	.-314    	; 0x15c2 <__addsf3>
    16fc:	08 95       	ret

000016fe <atan>:
    16fe:	df 93       	push	r29
    1700:	dd 27       	eor	r29, r29
    1702:	b9 2f       	mov	r27, r25
    1704:	bf 77       	andi	r27, 0x7F	; 127
    1706:	40 e8       	ldi	r20, 0x80	; 128
    1708:	5f e3       	ldi	r21, 0x3F	; 63
    170a:	16 16       	cp	r1, r22
    170c:	17 06       	cpc	r1, r23
    170e:	48 07       	cpc	r20, r24
    1710:	5b 07       	cpc	r21, r27
    1712:	10 f4       	brcc	.+4      	; 0x1718 <atan+0x1a>
    1714:	d9 2f       	mov	r29, r25
    1716:	cf d1       	rcall	.+926    	; 0x1ab6 <inverse>
    1718:	9f 93       	push	r25
    171a:	8f 93       	push	r24
    171c:	7f 93       	push	r23
    171e:	6f 93       	push	r22
    1720:	7c d2       	rcall	.+1272   	; 0x1c1a <square>
    1722:	ec ea       	ldi	r30, 0xAC	; 172
    1724:	f0 e0       	ldi	r31, 0x00	; 0
    1726:	1d d1       	rcall	.+570    	; 0x1962 <__fp_powser>
    1728:	77 d1       	rcall	.+750    	; 0x1a18 <__fp_round>
    172a:	2f 91       	pop	r18
    172c:	3f 91       	pop	r19
    172e:	4f 91       	pop	r20
    1730:	5f 91       	pop	r21
    1732:	d4 d1       	rcall	.+936    	; 0x1adc <__mulsf3x>
    1734:	dd 23       	and	r29, r29
    1736:	49 f0       	breq	.+18     	; 0x174a <atan+0x4c>
    1738:	90 58       	subi	r25, 0x80	; 128
    173a:	a2 ea       	ldi	r26, 0xA2	; 162
    173c:	2a ed       	ldi	r18, 0xDA	; 218
    173e:	3f e0       	ldi	r19, 0x0F	; 15
    1740:	49 ec       	ldi	r20, 0xC9	; 201
    1742:	5f e3       	ldi	r21, 0x3F	; 63
    1744:	d0 78       	andi	r29, 0x80	; 128
    1746:	5d 27       	eor	r21, r29
    1748:	4d df       	rcall	.-358    	; 0x15e4 <__addsf3x>
    174a:	df 91       	pop	r29
    174c:	65 c1       	rjmp	.+714    	; 0x1a18 <__fp_round>

0000174e <__cmpsf2>:
    174e:	dc d0       	rcall	.+440    	; 0x1908 <__fp_cmp>
    1750:	08 f4       	brcc	.+2      	; 0x1754 <__cmpsf2+0x6>
    1752:	81 e0       	ldi	r24, 0x01	; 1
    1754:	08 95       	ret

00001756 <cos>:
    1756:	39 d1       	rcall	.+626    	; 0x19ca <__fp_rempio2>
    1758:	e3 95       	inc	r30
    175a:	6f c1       	rjmp	.+734    	; 0x1a3a <__fp_sinus>

0000175c <__divsf3>:
    175c:	0c d0       	rcall	.+24     	; 0x1776 <__divsf3x>
    175e:	5c c1       	rjmp	.+696    	; 0x1a18 <__fp_round>
    1760:	2c d1       	rcall	.+600    	; 0x19ba <__fp_pscB>
    1762:	40 f0       	brcs	.+16     	; 0x1774 <__divsf3+0x18>
    1764:	23 d1       	rcall	.+582    	; 0x19ac <__fp_pscA>
    1766:	30 f0       	brcs	.+12     	; 0x1774 <__divsf3+0x18>
    1768:	21 f4       	brne	.+8      	; 0x1772 <__divsf3+0x16>
    176a:	5f 3f       	cpi	r21, 0xFF	; 255
    176c:	19 f0       	breq	.+6      	; 0x1774 <__divsf3+0x18>
    176e:	f0 c0       	rjmp	.+480    	; 0x1950 <__fp_inf>
    1770:	51 11       	cpse	r21, r1
    1772:	97 c1       	rjmp	.+814    	; 0x1aa2 <__fp_szero>
    1774:	f3 c0       	rjmp	.+486    	; 0x195c <__fp_nan>

00001776 <__divsf3x>:
    1776:	72 d1       	rcall	.+740    	; 0x1a5c <__fp_split3>
    1778:	98 f3       	brcs	.-26     	; 0x1760 <__divsf3+0x4>

0000177a <__divsf3_pse>:
    177a:	99 23       	and	r25, r25
    177c:	c9 f3       	breq	.-14     	; 0x1770 <__divsf3+0x14>
    177e:	55 23       	and	r21, r21
    1780:	b1 f3       	breq	.-20     	; 0x176e <__divsf3+0x12>
    1782:	95 1b       	sub	r25, r21
    1784:	55 0b       	sbc	r21, r21
    1786:	bb 27       	eor	r27, r27
    1788:	aa 27       	eor	r26, r26
    178a:	62 17       	cp	r22, r18
    178c:	73 07       	cpc	r23, r19
    178e:	84 07       	cpc	r24, r20
    1790:	38 f0       	brcs	.+14     	; 0x17a0 <__divsf3_pse+0x26>
    1792:	9f 5f       	subi	r25, 0xFF	; 255
    1794:	5f 4f       	sbci	r21, 0xFF	; 255
    1796:	22 0f       	add	r18, r18
    1798:	33 1f       	adc	r19, r19
    179a:	44 1f       	adc	r20, r20
    179c:	aa 1f       	adc	r26, r26
    179e:	a9 f3       	breq	.-22     	; 0x178a <__divsf3_pse+0x10>
    17a0:	33 d0       	rcall	.+102    	; 0x1808 <__divsf3_pse+0x8e>
    17a2:	0e 2e       	mov	r0, r30
    17a4:	3a f0       	brmi	.+14     	; 0x17b4 <__divsf3_pse+0x3a>
    17a6:	e0 e8       	ldi	r30, 0x80	; 128
    17a8:	30 d0       	rcall	.+96     	; 0x180a <__divsf3_pse+0x90>
    17aa:	91 50       	subi	r25, 0x01	; 1
    17ac:	50 40       	sbci	r21, 0x00	; 0
    17ae:	e6 95       	lsr	r30
    17b0:	00 1c       	adc	r0, r0
    17b2:	ca f7       	brpl	.-14     	; 0x17a6 <__divsf3_pse+0x2c>
    17b4:	29 d0       	rcall	.+82     	; 0x1808 <__divsf3_pse+0x8e>
    17b6:	fe 2f       	mov	r31, r30
    17b8:	27 d0       	rcall	.+78     	; 0x1808 <__divsf3_pse+0x8e>
    17ba:	66 0f       	add	r22, r22
    17bc:	77 1f       	adc	r23, r23
    17be:	88 1f       	adc	r24, r24
    17c0:	bb 1f       	adc	r27, r27
    17c2:	26 17       	cp	r18, r22
    17c4:	37 07       	cpc	r19, r23
    17c6:	48 07       	cpc	r20, r24
    17c8:	ab 07       	cpc	r26, r27
    17ca:	b0 e8       	ldi	r27, 0x80	; 128
    17cc:	09 f0       	breq	.+2      	; 0x17d0 <__divsf3_pse+0x56>
    17ce:	bb 0b       	sbc	r27, r27
    17d0:	80 2d       	mov	r24, r0
    17d2:	bf 01       	movw	r22, r30
    17d4:	ff 27       	eor	r31, r31
    17d6:	93 58       	subi	r25, 0x83	; 131
    17d8:	5f 4f       	sbci	r21, 0xFF	; 255
    17da:	2a f0       	brmi	.+10     	; 0x17e6 <__divsf3_pse+0x6c>
    17dc:	9e 3f       	cpi	r25, 0xFE	; 254
    17de:	51 05       	cpc	r21, r1
    17e0:	68 f0       	brcs	.+26     	; 0x17fc <__divsf3_pse+0x82>
    17e2:	b6 c0       	rjmp	.+364    	; 0x1950 <__fp_inf>
    17e4:	5e c1       	rjmp	.+700    	; 0x1aa2 <__fp_szero>
    17e6:	5f 3f       	cpi	r21, 0xFF	; 255
    17e8:	ec f3       	brlt	.-6      	; 0x17e4 <__divsf3_pse+0x6a>
    17ea:	98 3e       	cpi	r25, 0xE8	; 232
    17ec:	dc f3       	brlt	.-10     	; 0x17e4 <__divsf3_pse+0x6a>
    17ee:	86 95       	lsr	r24
    17f0:	77 95       	ror	r23
    17f2:	67 95       	ror	r22
    17f4:	b7 95       	ror	r27
    17f6:	f7 95       	ror	r31
    17f8:	9f 5f       	subi	r25, 0xFF	; 255
    17fa:	c9 f7       	brne	.-14     	; 0x17ee <__divsf3_pse+0x74>
    17fc:	88 0f       	add	r24, r24
    17fe:	91 1d       	adc	r25, r1
    1800:	96 95       	lsr	r25
    1802:	87 95       	ror	r24
    1804:	97 f9       	bld	r25, 7
    1806:	08 95       	ret
    1808:	e1 e0       	ldi	r30, 0x01	; 1
    180a:	66 0f       	add	r22, r22
    180c:	77 1f       	adc	r23, r23
    180e:	88 1f       	adc	r24, r24
    1810:	bb 1f       	adc	r27, r27
    1812:	62 17       	cp	r22, r18
    1814:	73 07       	cpc	r23, r19
    1816:	84 07       	cpc	r24, r20
    1818:	ba 07       	cpc	r27, r26
    181a:	20 f0       	brcs	.+8      	; 0x1824 <__divsf3_pse+0xaa>
    181c:	62 1b       	sub	r22, r18
    181e:	73 0b       	sbc	r23, r19
    1820:	84 0b       	sbc	r24, r20
    1822:	ba 0b       	sbc	r27, r26
    1824:	ee 1f       	adc	r30, r30
    1826:	88 f7       	brcc	.-30     	; 0x180a <__divsf3_pse+0x90>
    1828:	e0 95       	com	r30
    182a:	08 95       	ret

0000182c <__fixsfsi>:
    182c:	04 d0       	rcall	.+8      	; 0x1836 <__fixunssfsi>
    182e:	68 94       	set
    1830:	b1 11       	cpse	r27, r1
    1832:	37 c1       	rjmp	.+622    	; 0x1aa2 <__fp_szero>
    1834:	08 95       	ret

00001836 <__fixunssfsi>:
    1836:	1a d1       	rcall	.+564    	; 0x1a6c <__fp_splitA>
    1838:	88 f0       	brcs	.+34     	; 0x185c <__fixunssfsi+0x26>
    183a:	9f 57       	subi	r25, 0x7F	; 127
    183c:	90 f0       	brcs	.+36     	; 0x1862 <__fixunssfsi+0x2c>
    183e:	b9 2f       	mov	r27, r25
    1840:	99 27       	eor	r25, r25
    1842:	b7 51       	subi	r27, 0x17	; 23
    1844:	a0 f0       	brcs	.+40     	; 0x186e <__fixunssfsi+0x38>
    1846:	d1 f0       	breq	.+52     	; 0x187c <__fixunssfsi+0x46>
    1848:	66 0f       	add	r22, r22
    184a:	77 1f       	adc	r23, r23
    184c:	88 1f       	adc	r24, r24
    184e:	99 1f       	adc	r25, r25
    1850:	1a f0       	brmi	.+6      	; 0x1858 <__fixunssfsi+0x22>
    1852:	ba 95       	dec	r27
    1854:	c9 f7       	brne	.-14     	; 0x1848 <__fixunssfsi+0x12>
    1856:	12 c0       	rjmp	.+36     	; 0x187c <__fixunssfsi+0x46>
    1858:	b1 30       	cpi	r27, 0x01	; 1
    185a:	81 f0       	breq	.+32     	; 0x187c <__fixunssfsi+0x46>
    185c:	21 d1       	rcall	.+578    	; 0x1aa0 <__fp_zero>
    185e:	b1 e0       	ldi	r27, 0x01	; 1
    1860:	08 95       	ret
    1862:	1e c1       	rjmp	.+572    	; 0x1aa0 <__fp_zero>
    1864:	67 2f       	mov	r22, r23
    1866:	78 2f       	mov	r23, r24
    1868:	88 27       	eor	r24, r24
    186a:	b8 5f       	subi	r27, 0xF8	; 248
    186c:	39 f0       	breq	.+14     	; 0x187c <__fixunssfsi+0x46>
    186e:	b9 3f       	cpi	r27, 0xF9	; 249
    1870:	cc f3       	brlt	.-14     	; 0x1864 <__fixunssfsi+0x2e>
    1872:	86 95       	lsr	r24
    1874:	77 95       	ror	r23
    1876:	67 95       	ror	r22
    1878:	b3 95       	inc	r27
    187a:	d9 f7       	brne	.-10     	; 0x1872 <__fixunssfsi+0x3c>
    187c:	3e f4       	brtc	.+14     	; 0x188c <__fixunssfsi+0x56>
    187e:	90 95       	com	r25
    1880:	80 95       	com	r24
    1882:	70 95       	com	r23
    1884:	61 95       	neg	r22
    1886:	7f 4f       	sbci	r23, 0xFF	; 255
    1888:	8f 4f       	sbci	r24, 0xFF	; 255
    188a:	9f 4f       	sbci	r25, 0xFF	; 255
    188c:	08 95       	ret

0000188e <__floatunsisf>:
    188e:	e8 94       	clt
    1890:	09 c0       	rjmp	.+18     	; 0x18a4 <__floatsisf+0x12>

00001892 <__floatsisf>:
    1892:	97 fb       	bst	r25, 7
    1894:	3e f4       	brtc	.+14     	; 0x18a4 <__floatsisf+0x12>
    1896:	90 95       	com	r25
    1898:	80 95       	com	r24
    189a:	70 95       	com	r23
    189c:	61 95       	neg	r22
    189e:	7f 4f       	sbci	r23, 0xFF	; 255
    18a0:	8f 4f       	sbci	r24, 0xFF	; 255
    18a2:	9f 4f       	sbci	r25, 0xFF	; 255
    18a4:	99 23       	and	r25, r25
    18a6:	a9 f0       	breq	.+42     	; 0x18d2 <__floatsisf+0x40>
    18a8:	f9 2f       	mov	r31, r25
    18aa:	96 e9       	ldi	r25, 0x96	; 150
    18ac:	bb 27       	eor	r27, r27
    18ae:	93 95       	inc	r25
    18b0:	f6 95       	lsr	r31
    18b2:	87 95       	ror	r24
    18b4:	77 95       	ror	r23
    18b6:	67 95       	ror	r22
    18b8:	b7 95       	ror	r27
    18ba:	f1 11       	cpse	r31, r1
    18bc:	f8 cf       	rjmp	.-16     	; 0x18ae <__floatsisf+0x1c>
    18be:	fa f4       	brpl	.+62     	; 0x18fe <__floatsisf+0x6c>
    18c0:	bb 0f       	add	r27, r27
    18c2:	11 f4       	brne	.+4      	; 0x18c8 <__floatsisf+0x36>
    18c4:	60 ff       	sbrs	r22, 0
    18c6:	1b c0       	rjmp	.+54     	; 0x18fe <__floatsisf+0x6c>
    18c8:	6f 5f       	subi	r22, 0xFF	; 255
    18ca:	7f 4f       	sbci	r23, 0xFF	; 255
    18cc:	8f 4f       	sbci	r24, 0xFF	; 255
    18ce:	9f 4f       	sbci	r25, 0xFF	; 255
    18d0:	16 c0       	rjmp	.+44     	; 0x18fe <__floatsisf+0x6c>
    18d2:	88 23       	and	r24, r24
    18d4:	11 f0       	breq	.+4      	; 0x18da <__floatsisf+0x48>
    18d6:	96 e9       	ldi	r25, 0x96	; 150
    18d8:	11 c0       	rjmp	.+34     	; 0x18fc <__floatsisf+0x6a>
    18da:	77 23       	and	r23, r23
    18dc:	21 f0       	breq	.+8      	; 0x18e6 <__floatsisf+0x54>
    18de:	9e e8       	ldi	r25, 0x8E	; 142
    18e0:	87 2f       	mov	r24, r23
    18e2:	76 2f       	mov	r23, r22
    18e4:	05 c0       	rjmp	.+10     	; 0x18f0 <__floatsisf+0x5e>
    18e6:	66 23       	and	r22, r22
    18e8:	71 f0       	breq	.+28     	; 0x1906 <__floatsisf+0x74>
    18ea:	96 e8       	ldi	r25, 0x86	; 134
    18ec:	86 2f       	mov	r24, r22
    18ee:	70 e0       	ldi	r23, 0x00	; 0
    18f0:	60 e0       	ldi	r22, 0x00	; 0
    18f2:	2a f0       	brmi	.+10     	; 0x18fe <__floatsisf+0x6c>
    18f4:	9a 95       	dec	r25
    18f6:	66 0f       	add	r22, r22
    18f8:	77 1f       	adc	r23, r23
    18fa:	88 1f       	adc	r24, r24
    18fc:	da f7       	brpl	.-10     	; 0x18f4 <__floatsisf+0x62>
    18fe:	88 0f       	add	r24, r24
    1900:	96 95       	lsr	r25
    1902:	87 95       	ror	r24
    1904:	97 f9       	bld	r25, 7
    1906:	08 95       	ret

00001908 <__fp_cmp>:
    1908:	99 0f       	add	r25, r25
    190a:	00 08       	sbc	r0, r0
    190c:	55 0f       	add	r21, r21
    190e:	aa 0b       	sbc	r26, r26
    1910:	e0 e8       	ldi	r30, 0x80	; 128
    1912:	fe ef       	ldi	r31, 0xFE	; 254
    1914:	16 16       	cp	r1, r22
    1916:	17 06       	cpc	r1, r23
    1918:	e8 07       	cpc	r30, r24
    191a:	f9 07       	cpc	r31, r25
    191c:	c0 f0       	brcs	.+48     	; 0x194e <__fp_cmp+0x46>
    191e:	12 16       	cp	r1, r18
    1920:	13 06       	cpc	r1, r19
    1922:	e4 07       	cpc	r30, r20
    1924:	f5 07       	cpc	r31, r21
    1926:	98 f0       	brcs	.+38     	; 0x194e <__fp_cmp+0x46>
    1928:	62 1b       	sub	r22, r18
    192a:	73 0b       	sbc	r23, r19
    192c:	84 0b       	sbc	r24, r20
    192e:	95 0b       	sbc	r25, r21
    1930:	39 f4       	brne	.+14     	; 0x1940 <__fp_cmp+0x38>
    1932:	0a 26       	eor	r0, r26
    1934:	61 f0       	breq	.+24     	; 0x194e <__fp_cmp+0x46>
    1936:	23 2b       	or	r18, r19
    1938:	24 2b       	or	r18, r20
    193a:	25 2b       	or	r18, r21
    193c:	21 f4       	brne	.+8      	; 0x1946 <__fp_cmp+0x3e>
    193e:	08 95       	ret
    1940:	0a 26       	eor	r0, r26
    1942:	09 f4       	brne	.+2      	; 0x1946 <__fp_cmp+0x3e>
    1944:	a1 40       	sbci	r26, 0x01	; 1
    1946:	a6 95       	lsr	r26
    1948:	8f ef       	ldi	r24, 0xFF	; 255
    194a:	81 1d       	adc	r24, r1
    194c:	81 1d       	adc	r24, r1
    194e:	08 95       	ret

00001950 <__fp_inf>:
    1950:	97 f9       	bld	r25, 7
    1952:	9f 67       	ori	r25, 0x7F	; 127
    1954:	80 e8       	ldi	r24, 0x80	; 128
    1956:	70 e0       	ldi	r23, 0x00	; 0
    1958:	60 e0       	ldi	r22, 0x00	; 0
    195a:	08 95       	ret

0000195c <__fp_nan>:
    195c:	9f ef       	ldi	r25, 0xFF	; 255
    195e:	80 ec       	ldi	r24, 0xC0	; 192
    1960:	08 95       	ret

00001962 <__fp_powser>:
    1962:	df 93       	push	r29
    1964:	cf 93       	push	r28
    1966:	1f 93       	push	r17
    1968:	0f 93       	push	r16
    196a:	ff 92       	push	r15
    196c:	ef 92       	push	r14
    196e:	df 92       	push	r13
    1970:	7b 01       	movw	r14, r22
    1972:	8c 01       	movw	r16, r24
    1974:	68 94       	set
    1976:	05 c0       	rjmp	.+10     	; 0x1982 <__fp_powser+0x20>
    1978:	da 2e       	mov	r13, r26
    197a:	ef 01       	movw	r28, r30
    197c:	af d0       	rcall	.+350    	; 0x1adc <__mulsf3x>
    197e:	fe 01       	movw	r30, r28
    1980:	e8 94       	clt
    1982:	a5 91       	lpm	r26, Z+
    1984:	25 91       	lpm	r18, Z+
    1986:	35 91       	lpm	r19, Z+
    1988:	45 91       	lpm	r20, Z+
    198a:	55 91       	lpm	r21, Z+
    198c:	ae f3       	brts	.-22     	; 0x1978 <__fp_powser+0x16>
    198e:	ef 01       	movw	r28, r30
    1990:	29 de       	rcall	.-942    	; 0x15e4 <__addsf3x>
    1992:	fe 01       	movw	r30, r28
    1994:	97 01       	movw	r18, r14
    1996:	a8 01       	movw	r20, r16
    1998:	da 94       	dec	r13
    199a:	79 f7       	brne	.-34     	; 0x197a <__fp_powser+0x18>
    199c:	df 90       	pop	r13
    199e:	ef 90       	pop	r14
    19a0:	ff 90       	pop	r15
    19a2:	0f 91       	pop	r16
    19a4:	1f 91       	pop	r17
    19a6:	cf 91       	pop	r28
    19a8:	df 91       	pop	r29
    19aa:	08 95       	ret

000019ac <__fp_pscA>:
    19ac:	00 24       	eor	r0, r0
    19ae:	0a 94       	dec	r0
    19b0:	16 16       	cp	r1, r22
    19b2:	17 06       	cpc	r1, r23
    19b4:	18 06       	cpc	r1, r24
    19b6:	09 06       	cpc	r0, r25
    19b8:	08 95       	ret

000019ba <__fp_pscB>:
    19ba:	00 24       	eor	r0, r0
    19bc:	0a 94       	dec	r0
    19be:	12 16       	cp	r1, r18
    19c0:	13 06       	cpc	r1, r19
    19c2:	14 06       	cpc	r1, r20
    19c4:	05 06       	cpc	r0, r21
    19c6:	08 95       	ret
    19c8:	c9 cf       	rjmp	.-110    	; 0x195c <__fp_nan>

000019ca <__fp_rempio2>:
    19ca:	50 d0       	rcall	.+160    	; 0x1a6c <__fp_splitA>
    19cc:	e8 f3       	brcs	.-6      	; 0x19c8 <__fp_pscB+0xe>
    19ce:	e8 94       	clt
    19d0:	e0 e0       	ldi	r30, 0x00	; 0
    19d2:	bb 27       	eor	r27, r27
    19d4:	9f 57       	subi	r25, 0x7F	; 127
    19d6:	f0 f0       	brcs	.+60     	; 0x1a14 <__fp_rempio2+0x4a>
    19d8:	2a ed       	ldi	r18, 0xDA	; 218
    19da:	3f e0       	ldi	r19, 0x0F	; 15
    19dc:	49 ec       	ldi	r20, 0xC9	; 201
    19de:	06 c0       	rjmp	.+12     	; 0x19ec <__fp_rempio2+0x22>
    19e0:	ee 0f       	add	r30, r30
    19e2:	bb 0f       	add	r27, r27
    19e4:	66 1f       	adc	r22, r22
    19e6:	77 1f       	adc	r23, r23
    19e8:	88 1f       	adc	r24, r24
    19ea:	28 f0       	brcs	.+10     	; 0x19f6 <__fp_rempio2+0x2c>
    19ec:	b2 3a       	cpi	r27, 0xA2	; 162
    19ee:	62 07       	cpc	r22, r18
    19f0:	73 07       	cpc	r23, r19
    19f2:	84 07       	cpc	r24, r20
    19f4:	28 f0       	brcs	.+10     	; 0x1a00 <__fp_rempio2+0x36>
    19f6:	b2 5a       	subi	r27, 0xA2	; 162
    19f8:	62 0b       	sbc	r22, r18
    19fa:	73 0b       	sbc	r23, r19
    19fc:	84 0b       	sbc	r24, r20
    19fe:	e3 95       	inc	r30
    1a00:	9a 95       	dec	r25
    1a02:	72 f7       	brpl	.-36     	; 0x19e0 <__fp_rempio2+0x16>
    1a04:	80 38       	cpi	r24, 0x80	; 128
    1a06:	30 f4       	brcc	.+12     	; 0x1a14 <__fp_rempio2+0x4a>
    1a08:	9a 95       	dec	r25
    1a0a:	bb 0f       	add	r27, r27
    1a0c:	66 1f       	adc	r22, r22
    1a0e:	77 1f       	adc	r23, r23
    1a10:	88 1f       	adc	r24, r24
    1a12:	d2 f7       	brpl	.-12     	; 0x1a08 <__fp_rempio2+0x3e>
    1a14:	90 48       	sbci	r25, 0x80	; 128
    1a16:	06 c1       	rjmp	.+524    	; 0x1c24 <__fp_mpack_finite>

00001a18 <__fp_round>:
    1a18:	09 2e       	mov	r0, r25
    1a1a:	03 94       	inc	r0
    1a1c:	00 0c       	add	r0, r0
    1a1e:	11 f4       	brne	.+4      	; 0x1a24 <__fp_round+0xc>
    1a20:	88 23       	and	r24, r24
    1a22:	52 f0       	brmi	.+20     	; 0x1a38 <__fp_round+0x20>
    1a24:	bb 0f       	add	r27, r27
    1a26:	40 f4       	brcc	.+16     	; 0x1a38 <__fp_round+0x20>
    1a28:	bf 2b       	or	r27, r31
    1a2a:	11 f4       	brne	.+4      	; 0x1a30 <__fp_round+0x18>
    1a2c:	60 ff       	sbrs	r22, 0
    1a2e:	04 c0       	rjmp	.+8      	; 0x1a38 <__fp_round+0x20>
    1a30:	6f 5f       	subi	r22, 0xFF	; 255
    1a32:	7f 4f       	sbci	r23, 0xFF	; 255
    1a34:	8f 4f       	sbci	r24, 0xFF	; 255
    1a36:	9f 4f       	sbci	r25, 0xFF	; 255
    1a38:	08 95       	ret

00001a3a <__fp_sinus>:
    1a3a:	ef 93       	push	r30
    1a3c:	e0 ff       	sbrs	r30, 0
    1a3e:	06 c0       	rjmp	.+12     	; 0x1a4c <__fp_sinus+0x12>
    1a40:	a2 ea       	ldi	r26, 0xA2	; 162
    1a42:	2a ed       	ldi	r18, 0xDA	; 218
    1a44:	3f e0       	ldi	r19, 0x0F	; 15
    1a46:	49 ec       	ldi	r20, 0xC9	; 201
    1a48:	5f eb       	ldi	r21, 0xBF	; 191
    1a4a:	cc dd       	rcall	.-1128   	; 0x15e4 <__addsf3x>
    1a4c:	e5 df       	rcall	.-54     	; 0x1a18 <__fp_round>
    1a4e:	0f 90       	pop	r0
    1a50:	03 94       	inc	r0
    1a52:	01 fc       	sbrc	r0, 1
    1a54:	90 58       	subi	r25, 0x80	; 128
    1a56:	e9 ed       	ldi	r30, 0xD9	; 217
    1a58:	f0 e0       	ldi	r31, 0x00	; 0
    1a5a:	f7 c0       	rjmp	.+494    	; 0x1c4a <__fp_powsodd>

00001a5c <__fp_split3>:
    1a5c:	57 fd       	sbrc	r21, 7
    1a5e:	90 58       	subi	r25, 0x80	; 128
    1a60:	44 0f       	add	r20, r20
    1a62:	55 1f       	adc	r21, r21
    1a64:	59 f0       	breq	.+22     	; 0x1a7c <__fp_splitA+0x10>
    1a66:	5f 3f       	cpi	r21, 0xFF	; 255
    1a68:	71 f0       	breq	.+28     	; 0x1a86 <__fp_splitA+0x1a>
    1a6a:	47 95       	ror	r20

00001a6c <__fp_splitA>:
    1a6c:	88 0f       	add	r24, r24
    1a6e:	97 fb       	bst	r25, 7
    1a70:	99 1f       	adc	r25, r25
    1a72:	61 f0       	breq	.+24     	; 0x1a8c <__fp_splitA+0x20>
    1a74:	9f 3f       	cpi	r25, 0xFF	; 255
    1a76:	79 f0       	breq	.+30     	; 0x1a96 <__fp_splitA+0x2a>
    1a78:	87 95       	ror	r24
    1a7a:	08 95       	ret
    1a7c:	12 16       	cp	r1, r18
    1a7e:	13 06       	cpc	r1, r19
    1a80:	14 06       	cpc	r1, r20
    1a82:	55 1f       	adc	r21, r21
    1a84:	f2 cf       	rjmp	.-28     	; 0x1a6a <__fp_split3+0xe>
    1a86:	46 95       	lsr	r20
    1a88:	f1 df       	rcall	.-30     	; 0x1a6c <__fp_splitA>
    1a8a:	08 c0       	rjmp	.+16     	; 0x1a9c <__fp_splitA+0x30>
    1a8c:	16 16       	cp	r1, r22
    1a8e:	17 06       	cpc	r1, r23
    1a90:	18 06       	cpc	r1, r24
    1a92:	99 1f       	adc	r25, r25
    1a94:	f1 cf       	rjmp	.-30     	; 0x1a78 <__fp_splitA+0xc>
    1a96:	86 95       	lsr	r24
    1a98:	71 05       	cpc	r23, r1
    1a9a:	61 05       	cpc	r22, r1
    1a9c:	08 94       	sec
    1a9e:	08 95       	ret

00001aa0 <__fp_zero>:
    1aa0:	e8 94       	clt

00001aa2 <__fp_szero>:
    1aa2:	bb 27       	eor	r27, r27
    1aa4:	66 27       	eor	r22, r22
    1aa6:	77 27       	eor	r23, r23
    1aa8:	cb 01       	movw	r24, r22
    1aaa:	97 f9       	bld	r25, 7
    1aac:	08 95       	ret

00001aae <__gesf2>:
    1aae:	2c df       	rcall	.-424    	; 0x1908 <__fp_cmp>
    1ab0:	08 f4       	brcc	.+2      	; 0x1ab4 <__gesf2+0x6>
    1ab2:	8f ef       	ldi	r24, 0xFF	; 255
    1ab4:	08 95       	ret

00001ab6 <inverse>:
    1ab6:	9b 01       	movw	r18, r22
    1ab8:	ac 01       	movw	r20, r24
    1aba:	60 e0       	ldi	r22, 0x00	; 0
    1abc:	70 e0       	ldi	r23, 0x00	; 0
    1abe:	80 e8       	ldi	r24, 0x80	; 128
    1ac0:	9f e3       	ldi	r25, 0x3F	; 63
    1ac2:	4c ce       	rjmp	.-872    	; 0x175c <__divsf3>

00001ac4 <__mulsf3>:
    1ac4:	0b d0       	rcall	.+22     	; 0x1adc <__mulsf3x>
    1ac6:	a8 cf       	rjmp	.-176    	; 0x1a18 <__fp_round>
    1ac8:	71 df       	rcall	.-286    	; 0x19ac <__fp_pscA>
    1aca:	28 f0       	brcs	.+10     	; 0x1ad6 <__mulsf3+0x12>
    1acc:	76 df       	rcall	.-276    	; 0x19ba <__fp_pscB>
    1ace:	18 f0       	brcs	.+6      	; 0x1ad6 <__mulsf3+0x12>
    1ad0:	95 23       	and	r25, r21
    1ad2:	09 f0       	breq	.+2      	; 0x1ad6 <__mulsf3+0x12>
    1ad4:	3d cf       	rjmp	.-390    	; 0x1950 <__fp_inf>
    1ad6:	42 cf       	rjmp	.-380    	; 0x195c <__fp_nan>
    1ad8:	11 24       	eor	r1, r1
    1ada:	e3 cf       	rjmp	.-58     	; 0x1aa2 <__fp_szero>

00001adc <__mulsf3x>:
    1adc:	bf df       	rcall	.-130    	; 0x1a5c <__fp_split3>
    1ade:	a0 f3       	brcs	.-24     	; 0x1ac8 <__mulsf3+0x4>

00001ae0 <__mulsf3_pse>:
    1ae0:	95 9f       	mul	r25, r21
    1ae2:	d1 f3       	breq	.-12     	; 0x1ad8 <__mulsf3+0x14>
    1ae4:	95 0f       	add	r25, r21
    1ae6:	50 e0       	ldi	r21, 0x00	; 0
    1ae8:	55 1f       	adc	r21, r21
    1aea:	62 9f       	mul	r22, r18
    1aec:	f0 01       	movw	r30, r0
    1aee:	72 9f       	mul	r23, r18
    1af0:	bb 27       	eor	r27, r27
    1af2:	f0 0d       	add	r31, r0
    1af4:	b1 1d       	adc	r27, r1
    1af6:	63 9f       	mul	r22, r19
    1af8:	aa 27       	eor	r26, r26
    1afa:	f0 0d       	add	r31, r0
    1afc:	b1 1d       	adc	r27, r1
    1afe:	aa 1f       	adc	r26, r26
    1b00:	64 9f       	mul	r22, r20
    1b02:	66 27       	eor	r22, r22
    1b04:	b0 0d       	add	r27, r0
    1b06:	a1 1d       	adc	r26, r1
    1b08:	66 1f       	adc	r22, r22
    1b0a:	82 9f       	mul	r24, r18
    1b0c:	22 27       	eor	r18, r18
    1b0e:	b0 0d       	add	r27, r0
    1b10:	a1 1d       	adc	r26, r1
    1b12:	62 1f       	adc	r22, r18
    1b14:	73 9f       	mul	r23, r19
    1b16:	b0 0d       	add	r27, r0
    1b18:	a1 1d       	adc	r26, r1
    1b1a:	62 1f       	adc	r22, r18
    1b1c:	83 9f       	mul	r24, r19
    1b1e:	a0 0d       	add	r26, r0
    1b20:	61 1d       	adc	r22, r1
    1b22:	22 1f       	adc	r18, r18
    1b24:	74 9f       	mul	r23, r20
    1b26:	33 27       	eor	r19, r19
    1b28:	a0 0d       	add	r26, r0
    1b2a:	61 1d       	adc	r22, r1
    1b2c:	23 1f       	adc	r18, r19
    1b2e:	84 9f       	mul	r24, r20
    1b30:	60 0d       	add	r22, r0
    1b32:	21 1d       	adc	r18, r1
    1b34:	82 2f       	mov	r24, r18
    1b36:	76 2f       	mov	r23, r22
    1b38:	6a 2f       	mov	r22, r26
    1b3a:	11 24       	eor	r1, r1
    1b3c:	9f 57       	subi	r25, 0x7F	; 127
    1b3e:	50 40       	sbci	r21, 0x00	; 0
    1b40:	8a f0       	brmi	.+34     	; 0x1b64 <__mulsf3_pse+0x84>
    1b42:	e1 f0       	breq	.+56     	; 0x1b7c <__mulsf3_pse+0x9c>
    1b44:	88 23       	and	r24, r24
    1b46:	4a f0       	brmi	.+18     	; 0x1b5a <__mulsf3_pse+0x7a>
    1b48:	ee 0f       	add	r30, r30
    1b4a:	ff 1f       	adc	r31, r31
    1b4c:	bb 1f       	adc	r27, r27
    1b4e:	66 1f       	adc	r22, r22
    1b50:	77 1f       	adc	r23, r23
    1b52:	88 1f       	adc	r24, r24
    1b54:	91 50       	subi	r25, 0x01	; 1
    1b56:	50 40       	sbci	r21, 0x00	; 0
    1b58:	a9 f7       	brne	.-22     	; 0x1b44 <__mulsf3_pse+0x64>
    1b5a:	9e 3f       	cpi	r25, 0xFE	; 254
    1b5c:	51 05       	cpc	r21, r1
    1b5e:	70 f0       	brcs	.+28     	; 0x1b7c <__mulsf3_pse+0x9c>
    1b60:	f7 ce       	rjmp	.-530    	; 0x1950 <__fp_inf>
    1b62:	9f cf       	rjmp	.-194    	; 0x1aa2 <__fp_szero>
    1b64:	5f 3f       	cpi	r21, 0xFF	; 255
    1b66:	ec f3       	brlt	.-6      	; 0x1b62 <__mulsf3_pse+0x82>
    1b68:	98 3e       	cpi	r25, 0xE8	; 232
    1b6a:	dc f3       	brlt	.-10     	; 0x1b62 <__mulsf3_pse+0x82>
    1b6c:	86 95       	lsr	r24
    1b6e:	77 95       	ror	r23
    1b70:	67 95       	ror	r22
    1b72:	b7 95       	ror	r27
    1b74:	f7 95       	ror	r31
    1b76:	e7 95       	ror	r30
    1b78:	9f 5f       	subi	r25, 0xFF	; 255
    1b7a:	c1 f7       	brne	.-16     	; 0x1b6c <__mulsf3_pse+0x8c>
    1b7c:	fe 2b       	or	r31, r30
    1b7e:	88 0f       	add	r24, r24
    1b80:	91 1d       	adc	r25, r1
    1b82:	96 95       	lsr	r25
    1b84:	87 95       	ror	r24
    1b86:	97 f9       	bld	r25, 7
    1b88:	08 95       	ret

00001b8a <sin>:
    1b8a:	9f 93       	push	r25
    1b8c:	1e df       	rcall	.-452    	; 0x19ca <__fp_rempio2>
    1b8e:	0f 90       	pop	r0
    1b90:	07 fc       	sbrc	r0, 7
    1b92:	ee 5f       	subi	r30, 0xFE	; 254
    1b94:	52 cf       	rjmp	.-348    	; 0x1a3a <__fp_sinus>
    1b96:	11 f4       	brne	.+4      	; 0x1b9c <sin+0x12>
    1b98:	0e f4       	brtc	.+2      	; 0x1b9c <sin+0x12>
    1b9a:	e0 ce       	rjmp	.-576    	; 0x195c <__fp_nan>
    1b9c:	41 c0       	rjmp	.+130    	; 0x1c20 <__fp_mpack>

00001b9e <sqrt>:
    1b9e:	66 df       	rcall	.-308    	; 0x1a6c <__fp_splitA>
    1ba0:	d0 f3       	brcs	.-12     	; 0x1b96 <sin+0xc>
    1ba2:	99 23       	and	r25, r25
    1ba4:	d9 f3       	breq	.-10     	; 0x1b9c <sin+0x12>
    1ba6:	ce f3       	brts	.-14     	; 0x1b9a <sin+0x10>
    1ba8:	9f 57       	subi	r25, 0x7F	; 127
    1baa:	55 0b       	sbc	r21, r21
    1bac:	87 ff       	sbrs	r24, 7
    1bae:	46 d0       	rcall	.+140    	; 0x1c3c <__fp_norm2>
    1bb0:	00 24       	eor	r0, r0
    1bb2:	a0 e6       	ldi	r26, 0x60	; 96
    1bb4:	40 ea       	ldi	r20, 0xA0	; 160
    1bb6:	90 01       	movw	r18, r0
    1bb8:	80 58       	subi	r24, 0x80	; 128
    1bba:	56 95       	lsr	r21
    1bbc:	97 95       	ror	r25
    1bbe:	28 f4       	brcc	.+10     	; 0x1bca <sqrt+0x2c>
    1bc0:	80 5c       	subi	r24, 0xC0	; 192
    1bc2:	66 0f       	add	r22, r22
    1bc4:	77 1f       	adc	r23, r23
    1bc6:	88 1f       	adc	r24, r24
    1bc8:	20 f0       	brcs	.+8      	; 0x1bd2 <sqrt+0x34>
    1bca:	26 17       	cp	r18, r22
    1bcc:	37 07       	cpc	r19, r23
    1bce:	48 07       	cpc	r20, r24
    1bd0:	30 f4       	brcc	.+12     	; 0x1bde <sqrt+0x40>
    1bd2:	62 1b       	sub	r22, r18
    1bd4:	73 0b       	sbc	r23, r19
    1bd6:	84 0b       	sbc	r24, r20
    1bd8:	20 29       	or	r18, r0
    1bda:	31 29       	or	r19, r1
    1bdc:	4a 2b       	or	r20, r26
    1bde:	a6 95       	lsr	r26
    1be0:	17 94       	ror	r1
    1be2:	07 94       	ror	r0
    1be4:	20 25       	eor	r18, r0
    1be6:	31 25       	eor	r19, r1
    1be8:	4a 27       	eor	r20, r26
    1bea:	58 f7       	brcc	.-42     	; 0x1bc2 <sqrt+0x24>
    1bec:	66 0f       	add	r22, r22
    1bee:	77 1f       	adc	r23, r23
    1bf0:	88 1f       	adc	r24, r24
    1bf2:	20 f0       	brcs	.+8      	; 0x1bfc <sqrt+0x5e>
    1bf4:	26 17       	cp	r18, r22
    1bf6:	37 07       	cpc	r19, r23
    1bf8:	48 07       	cpc	r20, r24
    1bfa:	30 f4       	brcc	.+12     	; 0x1c08 <sqrt+0x6a>
    1bfc:	62 0b       	sbc	r22, r18
    1bfe:	73 0b       	sbc	r23, r19
    1c00:	84 0b       	sbc	r24, r20
    1c02:	20 0d       	add	r18, r0
    1c04:	31 1d       	adc	r19, r1
    1c06:	41 1d       	adc	r20, r1
    1c08:	a0 95       	com	r26
    1c0a:	81 f7       	brne	.-32     	; 0x1bec <sqrt+0x4e>
    1c0c:	b9 01       	movw	r22, r18
    1c0e:	84 2f       	mov	r24, r20
    1c10:	91 58       	subi	r25, 0x81	; 129
    1c12:	88 0f       	add	r24, r24
    1c14:	96 95       	lsr	r25
    1c16:	87 95       	ror	r24
    1c18:	08 95       	ret

00001c1a <square>:
    1c1a:	9b 01       	movw	r18, r22
    1c1c:	ac 01       	movw	r20, r24
    1c1e:	52 cf       	rjmp	.-348    	; 0x1ac4 <__mulsf3>

00001c20 <__fp_mpack>:
    1c20:	9f 3f       	cpi	r25, 0xFF	; 255
    1c22:	31 f0       	breq	.+12     	; 0x1c30 <__fp_mpack_finite+0xc>

00001c24 <__fp_mpack_finite>:
    1c24:	91 50       	subi	r25, 0x01	; 1
    1c26:	20 f4       	brcc	.+8      	; 0x1c30 <__fp_mpack_finite+0xc>
    1c28:	87 95       	ror	r24
    1c2a:	77 95       	ror	r23
    1c2c:	67 95       	ror	r22
    1c2e:	b7 95       	ror	r27
    1c30:	88 0f       	add	r24, r24
    1c32:	91 1d       	adc	r25, r1
    1c34:	96 95       	lsr	r25
    1c36:	87 95       	ror	r24
    1c38:	97 f9       	bld	r25, 7
    1c3a:	08 95       	ret

00001c3c <__fp_norm2>:
    1c3c:	91 50       	subi	r25, 0x01	; 1
    1c3e:	50 40       	sbci	r21, 0x00	; 0
    1c40:	66 0f       	add	r22, r22
    1c42:	77 1f       	adc	r23, r23
    1c44:	88 1f       	adc	r24, r24
    1c46:	d2 f7       	brpl	.-12     	; 0x1c3c <__fp_norm2>
    1c48:	08 95       	ret

00001c4a <__fp_powsodd>:
    1c4a:	9f 93       	push	r25
    1c4c:	8f 93       	push	r24
    1c4e:	7f 93       	push	r23
    1c50:	6f 93       	push	r22
    1c52:	ff 93       	push	r31
    1c54:	ef 93       	push	r30
    1c56:	9b 01       	movw	r18, r22
    1c58:	ac 01       	movw	r20, r24
    1c5a:	34 df       	rcall	.-408    	; 0x1ac4 <__mulsf3>
    1c5c:	ef 91       	pop	r30
    1c5e:	ff 91       	pop	r31
    1c60:	80 de       	rcall	.-768    	; 0x1962 <__fp_powser>
    1c62:	2f 91       	pop	r18
    1c64:	3f 91       	pop	r19
    1c66:	4f 91       	pop	r20
    1c68:	5f 91       	pop	r21
    1c6a:	2c cf       	rjmp	.-424    	; 0x1ac4 <__mulsf3>

00001c6c <itoa>:
    1c6c:	fb 01       	movw	r30, r22
    1c6e:	9f 01       	movw	r18, r30
    1c70:	e8 94       	clt
    1c72:	42 30       	cpi	r20, 0x02	; 2
    1c74:	c4 f0       	brlt	.+48     	; 0x1ca6 <itoa+0x3a>
    1c76:	45 32       	cpi	r20, 0x25	; 37
    1c78:	b4 f4       	brge	.+44     	; 0x1ca6 <itoa+0x3a>
    1c7a:	4a 30       	cpi	r20, 0x0A	; 10
    1c7c:	29 f4       	brne	.+10     	; 0x1c88 <itoa+0x1c>
    1c7e:	97 fb       	bst	r25, 7
    1c80:	1e f4       	brtc	.+6      	; 0x1c88 <itoa+0x1c>
    1c82:	90 95       	com	r25
    1c84:	81 95       	neg	r24
    1c86:	9f 4f       	sbci	r25, 0xFF	; 255
    1c88:	64 2f       	mov	r22, r20
    1c8a:	77 27       	eor	r23, r23
    1c8c:	0e 94 67 0e 	call	0x1cce	; 0x1cce <__udivmodhi4>
    1c90:	80 5d       	subi	r24, 0xD0	; 208
    1c92:	8a 33       	cpi	r24, 0x3A	; 58
    1c94:	0c f0       	brlt	.+2      	; 0x1c98 <itoa+0x2c>
    1c96:	89 5d       	subi	r24, 0xD9	; 217
    1c98:	81 93       	st	Z+, r24
    1c9a:	cb 01       	movw	r24, r22
    1c9c:	00 97       	sbiw	r24, 0x00	; 0
    1c9e:	a1 f7       	brne	.-24     	; 0x1c88 <itoa+0x1c>
    1ca0:	16 f4       	brtc	.+4      	; 0x1ca6 <itoa+0x3a>
    1ca2:	5d e2       	ldi	r21, 0x2D	; 45
    1ca4:	51 93       	st	Z+, r21
    1ca6:	10 82       	st	Z, r1
    1ca8:	c9 01       	movw	r24, r18
    1caa:	0c 94 57 0e 	jmp	0x1cae	; 0x1cae <strrev>

00001cae <strrev>:
    1cae:	dc 01       	movw	r26, r24
    1cb0:	fc 01       	movw	r30, r24
    1cb2:	67 2f       	mov	r22, r23
    1cb4:	71 91       	ld	r23, Z+
    1cb6:	77 23       	and	r23, r23
    1cb8:	e1 f7       	brne	.-8      	; 0x1cb2 <strrev+0x4>
    1cba:	32 97       	sbiw	r30, 0x02	; 2
    1cbc:	04 c0       	rjmp	.+8      	; 0x1cc6 <strrev+0x18>
    1cbe:	7c 91       	ld	r23, X
    1cc0:	6d 93       	st	X+, r22
    1cc2:	70 83       	st	Z, r23
    1cc4:	62 91       	ld	r22, -Z
    1cc6:	ae 17       	cp	r26, r30
    1cc8:	bf 07       	cpc	r27, r31
    1cca:	c8 f3       	brcs	.-14     	; 0x1cbe <strrev+0x10>
    1ccc:	08 95       	ret

00001cce <__udivmodhi4>:
    1cce:	aa 1b       	sub	r26, r26
    1cd0:	bb 1b       	sub	r27, r27
    1cd2:	51 e1       	ldi	r21, 0x11	; 17
    1cd4:	07 c0       	rjmp	.+14     	; 0x1ce4 <__udivmodhi4_ep>

00001cd6 <__udivmodhi4_loop>:
    1cd6:	aa 1f       	adc	r26, r26
    1cd8:	bb 1f       	adc	r27, r27
    1cda:	a6 17       	cp	r26, r22
    1cdc:	b7 07       	cpc	r27, r23
    1cde:	10 f0       	brcs	.+4      	; 0x1ce4 <__udivmodhi4_ep>
    1ce0:	a6 1b       	sub	r26, r22
    1ce2:	b7 0b       	sbc	r27, r23

00001ce4 <__udivmodhi4_ep>:
    1ce4:	88 1f       	adc	r24, r24
    1ce6:	99 1f       	adc	r25, r25
    1ce8:	5a 95       	dec	r21
    1cea:	a9 f7       	brne	.-22     	; 0x1cd6 <__udivmodhi4_loop>
    1cec:	80 95       	com	r24
    1cee:	90 95       	com	r25
    1cf0:	bc 01       	movw	r22, r24
    1cf2:	cd 01       	movw	r24, r26
    1cf4:	08 95       	ret

00001cf6 <_exit>:
    1cf6:	f8 94       	cli

00001cf8 <__stop_program>:
    1cf8:	ff cf       	rjmp	.-2      	; 0x1cf8 <__stop_program>
