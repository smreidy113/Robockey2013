
LocalTest.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000014  00800100  000026fa  0000278e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000026fa  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000068  00800114  00800114  000027a2  2**0
                  ALLOC
  3 .stab         0000387c  00000000  00000000  000027a4  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00001166  00000000  00000000  00006020  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      0000002f  00000000  00000000  00007186  2**0
                  CONTENTS, READONLY
  6 .debug_aranges 000001e8  00000000  00000000  000071b5  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   000020d6  00000000  00000000  0000739d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00000861  00000000  00000000  00009473  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00000da9  00000000  00000000  00009cd4  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  000005fc  00000000  00000000  0000aa80  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    000006ff  00000000  00000000  0000b07c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    00002916  00000000  00000000  0000b77b  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000200  00000000  00000000  0000e091  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 d6 00 	jmp	0x1ac	; 0x1ac <__ctors_end>
       4:	0c 94 f3 00 	jmp	0x1e6	; 0x1e6 <__bad_interrupt>
       8:	0c 94 f3 00 	jmp	0x1e6	; 0x1e6 <__bad_interrupt>
       c:	0c 94 f3 00 	jmp	0x1e6	; 0x1e6 <__bad_interrupt>
      10:	0c 94 f3 00 	jmp	0x1e6	; 0x1e6 <__bad_interrupt>
      14:	0c 94 f3 00 	jmp	0x1e6	; 0x1e6 <__bad_interrupt>
      18:	0c 94 f3 00 	jmp	0x1e6	; 0x1e6 <__bad_interrupt>
      1c:	0c 94 f3 00 	jmp	0x1e6	; 0x1e6 <__bad_interrupt>
      20:	0c 94 f3 00 	jmp	0x1e6	; 0x1e6 <__bad_interrupt>
      24:	0c 94 f3 00 	jmp	0x1e6	; 0x1e6 <__bad_interrupt>
      28:	0c 94 da 0b 	jmp	0x17b4	; 0x17b4 <__vector_10>
      2c:	0c 94 18 0c 	jmp	0x1830	; 0x1830 <__vector_11>
      30:	0c 94 f3 00 	jmp	0x1e6	; 0x1e6 <__bad_interrupt>
      34:	0c 94 f3 00 	jmp	0x1e6	; 0x1e6 <__bad_interrupt>
      38:	0c 94 f3 00 	jmp	0x1e6	; 0x1e6 <__bad_interrupt>
      3c:	0c 94 f3 00 	jmp	0x1e6	; 0x1e6 <__bad_interrupt>
      40:	0c 94 f3 00 	jmp	0x1e6	; 0x1e6 <__bad_interrupt>
      44:	0c 94 f3 00 	jmp	0x1e6	; 0x1e6 <__bad_interrupt>
      48:	0c 94 f3 00 	jmp	0x1e6	; 0x1e6 <__bad_interrupt>
      4c:	0c 94 f3 00 	jmp	0x1e6	; 0x1e6 <__bad_interrupt>
      50:	0c 94 f3 00 	jmp	0x1e6	; 0x1e6 <__bad_interrupt>
      54:	0c 94 f3 00 	jmp	0x1e6	; 0x1e6 <__bad_interrupt>
      58:	0c 94 f3 00 	jmp	0x1e6	; 0x1e6 <__bad_interrupt>
      5c:	0c 94 f3 00 	jmp	0x1e6	; 0x1e6 <__bad_interrupt>
      60:	0c 94 f3 00 	jmp	0x1e6	; 0x1e6 <__bad_interrupt>
      64:	0c 94 f3 00 	jmp	0x1e6	; 0x1e6 <__bad_interrupt>
      68:	0c 94 f3 00 	jmp	0x1e6	; 0x1e6 <__bad_interrupt>
      6c:	0c 94 f3 00 	jmp	0x1e6	; 0x1e6 <__bad_interrupt>
      70:	0c 94 f3 00 	jmp	0x1e6	; 0x1e6 <__bad_interrupt>
      74:	0c 94 f3 00 	jmp	0x1e6	; 0x1e6 <__bad_interrupt>
      78:	0c 94 f3 00 	jmp	0x1e6	; 0x1e6 <__bad_interrupt>
      7c:	0c 94 f3 00 	jmp	0x1e6	; 0x1e6 <__bad_interrupt>
      80:	0c 94 f3 00 	jmp	0x1e6	; 0x1e6 <__bad_interrupt>
      84:	0c 94 f3 00 	jmp	0x1e6	; 0x1e6 <__bad_interrupt>
      88:	0c 94 f3 00 	jmp	0x1e6	; 0x1e6 <__bad_interrupt>
      8c:	0c 94 f3 00 	jmp	0x1e6	; 0x1e6 <__bad_interrupt>
      90:	0c 94 f3 00 	jmp	0x1e6	; 0x1e6 <__bad_interrupt>
      94:	0c 94 f3 00 	jmp	0x1e6	; 0x1e6 <__bad_interrupt>
      98:	0c 94 f3 00 	jmp	0x1e6	; 0x1e6 <__bad_interrupt>
      9c:	0c 94 f3 00 	jmp	0x1e6	; 0x1e6 <__bad_interrupt>
      a0:	0c 94 f3 00 	jmp	0x1e6	; 0x1e6 <__bad_interrupt>
      a4:	0c 94 f3 00 	jmp	0x1e6	; 0x1e6 <__bad_interrupt>
      a8:	0c 94 f3 00 	jmp	0x1e6	; 0x1e6 <__bad_interrupt>
      ac:	08 4a       	sbci	r16, 0xA8	; 168
      ae:	d7 3b       	cpi	r29, 0xB7	; 183
      b0:	3b ce       	rjmp	.-906    	; 0xfffffd28 <__eeprom_end+0xff7efd28>
      b2:	01 6e       	ori	r16, 0xE1	; 225
      b4:	84 bc       	out	0x24, r8	; 36
      b6:	bf fd       	.word	0xfdbf	; ????
      b8:	c1 2f       	mov	r28, r17
      ba:	3d 6c       	ori	r19, 0xCD	; 205
      bc:	74 31       	cpi	r23, 0x14	; 20
      be:	9a bd       	out	0x2a, r25	; 42
      c0:	56 83       	std	Z+6, r21	; 0x06
      c2:	3d da       	rcall	.-2950   	; 0xfffff53e <__eeprom_end+0xff7ef53e>
      c4:	3d 00       	.word	0x003d	; ????
      c6:	c7 7f       	andi	r28, 0xF7	; 247
      c8:	11 be       	out	0x31, r1	; 49
      ca:	d9 e4       	ldi	r29, 0x49	; 73
      cc:	bb 4c       	sbci	r27, 0xCB	; 203
      ce:	3e 91       	ld	r19, -X
      d0:	6b aa       	std	Y+51, r6	; 0x33
      d2:	aa be       	out	0x3a, r10	; 58
      d4:	00 00       	nop
      d6:	00 80       	ld	r0, Z
      d8:	3f 05       	cpc	r19, r15
      da:	a8 4c       	sbci	r26, 0xC8	; 200
      dc:	cd b2       	in	r12, 0x1d	; 29
      de:	d4 4e       	sbci	r29, 0xE4	; 228
      e0:	b9 38       	cpi	r27, 0x89	; 137
      e2:	36 a9       	ldd	r19, Z+54	; 0x36
      e4:	02 0c       	add	r0, r2
      e6:	50 b9       	out	0x00, r21	; 0
      e8:	91 86       	std	Z+9, r9	; 0x09
      ea:	88 08       	sbc	r8, r8
      ec:	3c a6       	std	Y+44, r3	; 0x2c
      ee:	aa aa       	std	Y+50, r10	; 0x32
      f0:	2a be       	out	0x3a, r2	; 58
      f2:	00 00       	nop
      f4:	00 80       	ld	r0, Z
      f6:	3f 0a       	sbc	r3, r31

000000f7 <__c.1837>:
      f7:	0a 00                                               ..

000000f9 <descriptor_list>:
      f9:	00 01 00 00 2d 01 12 00 02 00 00 3f 01 43 00 03     ....-......?.C..
     109:	00 00 82 01 04 01 03 09 04 86 01 12 02 03 09 04     ................
     119:	9a 01 06 03 03 09 04 a2 01 08                       ..........

00000123 <endpoint_config_table>:
     123:	00 01 c1 12 01 80 36 01 81 36                       ......6..6

0000012d <device_descriptor>:
     12d:	12 01 00 02 02 00 00 10 c0 16 7a 04 00 01 01 02     ..........z.....
     13d:	03 01                                               ..

0000013f <config1_descriptor>:
     13f:	09 02 43 00 02 01 00 c0 32 09 04 00 00 01 02 02     ..C.....2.......
     14f:	01 00 05 24 00 10 01 05 24 01 01 01 04 24 02 06     ...$....$....$..
     15f:	05 24 06 00 01 07 05 82 03 10 00 40 09 04 01 00     .$.........@....
     16f:	02 0a 00 00 00 07 05 03 02 40 00 00 07 05 84 02     .........@......
     17f:	40 00 00                                            @..

00000182 <string0>:
     182:	04 03 09 04                                         ....

00000186 <string1>:
     186:	12 03 4a 00 2e 00 20 00 46 00 69 00 65 00 6e 00     ..J... .F.i.e.n.
     196:	65 00 00 00                                         e...

0000019a <string2>:
     19a:	06 03 4d 00 32 00 00 00                             ..M.2...

000001a2 <string3>:
     1a2:	08 03 34 00 31 00 30 00 00 00                       ..4.1.0...

000001ac <__ctors_end>:
     1ac:	11 24       	eor	r1, r1
     1ae:	1f be       	out	0x3f, r1	; 63
     1b0:	cf ef       	ldi	r28, 0xFF	; 255
     1b2:	da e0       	ldi	r29, 0x0A	; 10
     1b4:	de bf       	out	0x3e, r29	; 62
     1b6:	cd bf       	out	0x3d, r28	; 61

000001b8 <__do_copy_data>:
     1b8:	11 e0       	ldi	r17, 0x01	; 1
     1ba:	a0 e0       	ldi	r26, 0x00	; 0
     1bc:	b1 e0       	ldi	r27, 0x01	; 1
     1be:	ea ef       	ldi	r30, 0xFA	; 250
     1c0:	f6 e2       	ldi	r31, 0x26	; 38
     1c2:	02 c0       	rjmp	.+4      	; 0x1c8 <__do_copy_data+0x10>
     1c4:	05 90       	lpm	r0, Z+
     1c6:	0d 92       	st	X+, r0
     1c8:	a4 31       	cpi	r26, 0x14	; 20
     1ca:	b1 07       	cpc	r27, r17
     1cc:	d9 f7       	brne	.-10     	; 0x1c4 <__do_copy_data+0xc>

000001ce <__do_clear_bss>:
     1ce:	21 e0       	ldi	r18, 0x01	; 1
     1d0:	a4 e1       	ldi	r26, 0x14	; 20
     1d2:	b1 e0       	ldi	r27, 0x01	; 1
     1d4:	01 c0       	rjmp	.+2      	; 0x1d8 <.do_clear_bss_start>

000001d6 <.do_clear_bss_loop>:
     1d6:	1d 92       	st	X+, r1

000001d8 <.do_clear_bss_start>:
     1d8:	ac 37       	cpi	r26, 0x7C	; 124
     1da:	b2 07       	cpc	r27, r18
     1dc:	e1 f7       	brne	.-8      	; 0x1d6 <.do_clear_bss_loop>
     1de:	0e 94 f5 00 	call	0x1ea	; 0x1ea <main>
     1e2:	0c 94 7b 13 	jmp	0x26f6	; 0x26f6 <_exit>

000001e6 <__bad_interrupt>:
     1e6:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001ea <main>:


 int main(void){
	 
	 //MATLAB PLOTTING STUFFS*****************************************************************
	m_clockdivide(0);
     1ea:	e1 e6       	ldi	r30, 0x61	; 97
     1ec:	f0 e0       	ldi	r31, 0x00	; 0
     1ee:	80 e8       	ldi	r24, 0x80	; 128
     1f0:	80 83       	st	Z, r24
     1f2:	10 82       	st	Z, r1
		 
	long count = 0;
	
	m_red(ON);
     1f4:	6e 9a       	sbi	0x0d, 6	; 13
     1f6:	76 98       	cbi	0x0e, 6	; 14
	m_green(ON);
     1f8:	6a 9a       	sbi	0x0d, 2	; 13
     1fa:	72 98       	cbi	0x0e, 2	; 14

	m_bus_init();
     1fc:	0e 94 3a 01 	call	0x274	; 0x274 <m_bus_init>
	m_wii_open();
     200:	0e 94 dd 0e 	call	0x1dba	; 0x1dba <m_wii_open>
	m_usb_init(); // connect usb
     204:	0e 94 62 0b 	call	0x16c4	; 0x16c4 <m_usb_init>
	while(!m_usb_isconnected()){};  //wait for connection
     208:	0e 94 7b 0b 	call	0x16f6	; 0x16f6 <m_usb_isconnected>
     20c:	88 23       	and	r24, r24
     20e:	e1 f3       	breq	.-8      	; 0x208 <main+0x1e>
		
	local_init();
     210:	0e 94 0e 04 	call	0x81c	; 0x81c <local_init>

	m_red(OFF);
     214:	6e 9a       	sbi	0x0d, 6	; 13
     216:	76 9a       	sbi	0x0e, 6	; 14
	m_green(OFF);
     218:	6a 9a       	sbi	0x0d, 2	; 13
     21a:	72 9a       	sbi	0x0e, 2	; 14
 #define CLOCK 0
 
 //long count = 0;


 int main(void){
     21c:	00 e8       	ldi	r16, 0x80	; 128
     21e:	11 e0       	ldi	r17, 0x01	; 1
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     220:	2f ef       	ldi	r18, 0xFF	; 255
     222:	84 e3       	ldi	r24, 0x34	; 52
     224:	9c e0       	ldi	r25, 0x0C	; 12
     226:	21 50       	subi	r18, 0x01	; 1
     228:	80 40       	sbci	r24, 0x00	; 0
     22a:	90 40       	sbci	r25, 0x00	; 0
     22c:	e1 f7       	brne	.-8      	; 0x226 <main+0x3c>
     22e:	00 c0       	rjmp	.+0      	; 0x230 <main+0x46>
     230:	00 00       	nop
	i = 0;
	*/
	
	while(1){
		m_wait(250);
		m_red(ON);
     232:	6e 9a       	sbi	0x0d, 6	; 13
     234:	76 98       	cbi	0x0e, 6	; 14
		//m_green(OFF);
		localize(data);
     236:	80 e6       	ldi	r24, 0x60	; 96
     238:	91 e0       	ldi	r25, 0x01	; 1
     23a:	0e 94 18 04 	call	0x830	; 0x830 <localize>
		m_red(OFF);
     23e:	6e 9a       	sbi	0x0d, 6	; 13
     240:	76 9a       	sbi	0x0e, 6	; 14
     242:	c0 e6       	ldi	r28, 0x60	; 96
     244:	d1 e0       	ldi	r29, 0x01	; 1
			//m_wii_read(blobs);
			/*data[0] = 50;
			data[1] = 50;*/
			//m_usb_tx_string("hi");
			for (i = 0 ; i < 8 ; i++){
			m_usb_tx_int((int)data[i]);
     246:	69 91       	ld	r22, Y+
     248:	79 91       	ld	r23, Y+
     24a:	89 91       	ld	r24, Y+
     24c:	99 91       	ld	r25, Y+
     24e:	0e 94 16 11 	call	0x222c	; 0x222c <__fixsfsi>
     252:	cb 01       	movw	r24, r22
     254:	0e 94 ba 0d 	call	0x1b74	; 0x1b74 <m_usb_tx_int>
			m_usb_tx_char('\t');
     258:	89 e0       	ldi	r24, 0x09	; 9
     25a:	0e 94 7e 0b 	call	0x16fc	; 0x16fc <m_usb_tx_char>
			*/
			//m_wii_read(blobs);
			/*data[0] = 50;
			data[1] = 50;*/
			//m_usb_tx_string("hi");
			for (i = 0 ; i < 8 ; i++){
     25e:	c0 17       	cp	r28, r16
     260:	d1 07       	cpc	r29, r17
     262:	89 f7       	brne	.-30     	; 0x246 <main+0x5c>
			m_usb_tx_char('\t');

			}
			//m_usb_tx_int((int)(data[7]-data[2]));
			//m_usb_tx_int((int)(data[2]));
			m_usb_tx_string("\n");
     264:	87 ef       	ldi	r24, 0xF7	; 247
     266:	90 e0       	ldi	r25, 0x00	; 0
     268:	0e 94 a0 0d 	call	0x1b40	; 0x1b40 <print_P>
			m_usb_tx_char('\n');  //MATLAB serial command reads 1 line at a time
     26c:	8a e0       	ldi	r24, 0x0A	; 10
     26e:	0e 94 7e 0b 	call	0x16fc	; 0x16fc <m_usb_tx_char>
			m_usb_tx_int(data[6]);
			m_usb_tx_string("\tangle: ");
			m_usb_tx_int((int) (((float) atan2(((double) (data[3]-data[4])),((double) (data[5]-data[6])))) * 180.0 / 3.14));
			m_usb_tx_string("\n");*/
		}
	}	 
     272:	d6 cf       	rjmp	.-84     	; 0x220 <main+0x36>

00000274 <m_bus_init>:
     274:	58 9a       	sbi	0x0b, 0	; 11
     276:	59 9a       	sbi	0x0b, 1	; 11
     278:	5a 9a       	sbi	0x0b, 2	; 11
     27a:	8c e0       	ldi	r24, 0x0C	; 12
     27c:	80 93 b8 00 	sts	0x00B8, r24
     280:	e9 e6       	ldi	r30, 0x69	; 105
     282:	f0 e0       	ldi	r31, 0x00	; 0
     284:	80 81       	ld	r24, Z
     286:	80 62       	ori	r24, 0x20	; 32
     288:	80 83       	st	Z, r24
     28a:	80 81       	ld	r24, Z
     28c:	8f 7e       	andi	r24, 0xEF	; 239
     28e:	80 83       	st	Z, r24
     290:	ea 9a       	sbi	0x1d, 2	; 29
     292:	78 94       	sei
     294:	08 95       	ret

00000296 <getData>:
int far1 = 0, far2 = 0, close1 = 0, close2 = 0;

int numlost = 0;
int recalibrate = 0;

unsigned char getData(unsigned int* x, unsigned int* y) {
     296:	0f 93       	push	r16
     298:	1f 93       	push	r17
     29a:	cf 93       	push	r28
     29c:	df 93       	push	r29
     29e:	8c 01       	movw	r16, r24
     2a0:	eb 01       	movw	r28, r22
	m_wii_read(blobs);
     2a2:	84 e4       	ldi	r24, 0x44	; 68
     2a4:	91 e0       	ldi	r25, 0x01	; 1
     2a6:	0e 94 48 0e 	call	0x1c90	; 0x1c90 <m_wii_read>
	x[0] = blobs[0];
     2aa:	80 91 44 01 	lds	r24, 0x0144
     2ae:	90 91 45 01 	lds	r25, 0x0145
     2b2:	f8 01       	movw	r30, r16
     2b4:	91 83       	std	Z+1, r25	; 0x01
     2b6:	80 83       	st	Z, r24
	x[1] = blobs[3];
     2b8:	80 91 4a 01 	lds	r24, 0x014A
     2bc:	90 91 4b 01 	lds	r25, 0x014B
     2c0:	93 83       	std	Z+3, r25	; 0x03
     2c2:	82 83       	std	Z+2, r24	; 0x02
	x[2] = blobs[6];
     2c4:	80 91 50 01 	lds	r24, 0x0150
     2c8:	90 91 51 01 	lds	r25, 0x0151
     2cc:	95 83       	std	Z+5, r25	; 0x05
     2ce:	84 83       	std	Z+4, r24	; 0x04
	x[3] = blobs[9];
     2d0:	80 91 56 01 	lds	r24, 0x0156
     2d4:	90 91 57 01 	lds	r25, 0x0157
     2d8:	97 83       	std	Z+7, r25	; 0x07
     2da:	86 83       	std	Z+6, r24	; 0x06
	y[0] = blobs[1];
     2dc:	80 91 46 01 	lds	r24, 0x0146
     2e0:	90 91 47 01 	lds	r25, 0x0147
     2e4:	99 83       	std	Y+1, r25	; 0x01
     2e6:	88 83       	st	Y, r24
	y[1] = blobs[4];
     2e8:	80 91 4c 01 	lds	r24, 0x014C
     2ec:	90 91 4d 01 	lds	r25, 0x014D
     2f0:	9b 83       	std	Y+3, r25	; 0x03
     2f2:	8a 83       	std	Y+2, r24	; 0x02
	y[2] = blobs[7];
     2f4:	80 91 52 01 	lds	r24, 0x0152
     2f8:	90 91 53 01 	lds	r25, 0x0153
     2fc:	9d 83       	std	Y+5, r25	; 0x05
     2fe:	8c 83       	std	Y+4, r24	; 0x04
	y[3] = blobs[10];
     300:	80 91 58 01 	lds	r24, 0x0158
     304:	90 91 59 01 	lds	r25, 0x0159
     308:	9f 83       	std	Y+7, r25	; 0x07
     30a:	8e 83       	std	Y+6, r24	; 0x06
	return 1;
} 
     30c:	81 e0       	ldi	r24, 0x01	; 1
     30e:	df 91       	pop	r29
     310:	cf 91       	pop	r28
     312:	1f 91       	pop	r17
     314:	0f 91       	pop	r16
     316:	08 95       	ret

00000318 <determine_blobs>:

unsigned char determine_blobs() {
     318:	2f 92       	push	r2
     31a:	3f 92       	push	r3
     31c:	4f 92       	push	r4
     31e:	5f 92       	push	r5
     320:	6f 92       	push	r6
     322:	7f 92       	push	r7
     324:	8f 92       	push	r8
     326:	9f 92       	push	r9
     328:	af 92       	push	r10
     32a:	bf 92       	push	r11
     32c:	cf 92       	push	r12
     32e:	df 92       	push	r13
     330:	ef 92       	push	r14
     332:	ff 92       	push	r15
     334:	0f 93       	push	r16
     336:	1f 93       	push	r17
     338:	cf 93       	push	r28
     33a:	df 93       	push	r29
     33c:	cd b7       	in	r28, 0x3d	; 61
     33e:	de b7       	in	r29, 0x3e	; 62
     340:	6c 97       	sbiw	r28, 0x1c	; 28
     342:	0f b6       	in	r0, 0x3f	; 63
     344:	f8 94       	cli
     346:	de bf       	out	0x3e, r29	; 62
     348:	0f be       	out	0x3f, r0	; 63
     34a:	cd bf       	out	0x3d, r28	; 61
	int exit = 0;
	distmax = 0;
     34c:	10 92 24 01 	sts	0x0124, r1
     350:	10 92 25 01 	sts	0x0125, r1
     354:	10 92 26 01 	sts	0x0126, r1
     358:	10 92 27 01 	sts	0x0127, r1
	distmin = 30000;
     35c:	80 e0       	ldi	r24, 0x00	; 0
     35e:	90 e6       	ldi	r25, 0x60	; 96
     360:	aa ee       	ldi	r26, 0xEA	; 234
     362:	b6 e4       	ldi	r27, 0x46	; 70
     364:	80 93 00 01 	sts	0x0100, r24
     368:	90 93 01 01 	sts	0x0101, r25
     36c:	a0 93 02 01 	sts	0x0102, r26
     370:	b0 93 03 01 	sts	0x0103, r27
	while (exit == 0) {
		getData(x, y);
		if (x[0] < 1023 && x[1] < 1023 && x[2] < 1023 && x[3] < 1023) {
     374:	0f 2e       	mov	r0, r31
     376:	f6 e3       	ldi	r31, 0x36	; 54
     378:	cf 2e       	mov	r12, r31
     37a:	f1 e0       	ldi	r31, 0x01	; 1
     37c:	df 2e       	mov	r13, r31
     37e:	f0 2d       	mov	r31, r0
     380:	08 e3       	ldi	r16, 0x38	; 56
     382:	11 e0       	ldi	r17, 0x01	; 1
     384:	0f 2e       	mov	r0, r31
     386:	fa e3       	ldi	r31, 0x3A	; 58
     388:	ef 2e       	mov	r14, r31
     38a:	f1 e0       	ldi	r31, 0x01	; 1
     38c:	ff 2e       	mov	r15, r31
     38e:	f0 2d       	mov	r31, r0
unsigned char determine_blobs() {
	int exit = 0;
	distmax = 0;
	distmin = 30000;
	while (exit == 0) {
		getData(x, y);
     390:	6c e2       	ldi	r22, 0x2C	; 44
     392:	71 e0       	ldi	r23, 0x01	; 1
     394:	84 e3       	ldi	r24, 0x34	; 52
     396:	91 e0       	ldi	r25, 0x01	; 1
     398:	0e 94 4b 01 	call	0x296	; 0x296 <getData>
		if (x[0] < 1023 && x[1] < 1023 && x[2] < 1023 && x[3] < 1023) {
     39c:	80 91 34 01 	lds	r24, 0x0134
     3a0:	90 91 35 01 	lds	r25, 0x0135
     3a4:	8f 3f       	cpi	r24, 0xFF	; 255
     3a6:	93 40       	sbci	r25, 0x03	; 3
     3a8:	98 f7       	brcc	.-26     	; 0x390 <determine_blobs+0x78>
     3aa:	f6 01       	movw	r30, r12
     3ac:	80 81       	ld	r24, Z
     3ae:	91 81       	ldd	r25, Z+1	; 0x01
     3b0:	8f 3f       	cpi	r24, 0xFF	; 255
     3b2:	93 40       	sbci	r25, 0x03	; 3
     3b4:	68 f7       	brcc	.-38     	; 0x390 <determine_blobs+0x78>
     3b6:	f8 01       	movw	r30, r16
     3b8:	80 81       	ld	r24, Z
     3ba:	91 81       	ldd	r25, Z+1	; 0x01
     3bc:	8f 3f       	cpi	r24, 0xFF	; 255
     3be:	93 40       	sbci	r25, 0x03	; 3
     3c0:	38 f7       	brcc	.-50     	; 0x390 <determine_blobs+0x78>
     3c2:	f7 01       	movw	r30, r14
     3c4:	80 81       	ld	r24, Z
     3c6:	91 81       	ldd	r25, Z+1	; 0x01
     3c8:	8f 3f       	cpi	r24, 0xFF	; 255
     3ca:	93 40       	sbci	r25, 0x03	; 3
     3cc:	08 f7       	brcc	.-62     	; 0x390 <determine_blobs+0x78>
     3ce:	80 90 28 01 	lds	r8, 0x0128
     3d2:	90 90 29 01 	lds	r9, 0x0129
     3d6:	a0 90 2a 01 	lds	r10, 0x012A
     3da:	b0 90 2b 01 	lds	r11, 0x012B
     3de:	20 91 24 01 	lds	r18, 0x0124
     3e2:	29 83       	std	Y+1, r18	; 0x01
     3e4:	30 91 25 01 	lds	r19, 0x0125
     3e8:	3a 83       	std	Y+2, r19	; 0x02
     3ea:	40 91 26 01 	lds	r20, 0x0126
     3ee:	4b 83       	std	Y+3, r20	; 0x03
     3f0:	50 91 27 01 	lds	r21, 0x0127
     3f4:	5c 83       	std	Y+4, r21	; 0x04
     3f6:	60 91 1e 01 	lds	r22, 0x011E
     3fa:	6b 8b       	std	Y+19, r22	; 0x13
     3fc:	70 91 1f 01 	lds	r23, 0x011F
     400:	7c 8b       	std	Y+20, r23	; 0x14
     402:	80 91 1c 01 	lds	r24, 0x011C
     406:	89 8b       	std	Y+17, r24	; 0x11
     408:	90 91 1d 01 	lds	r25, 0x011D
     40c:	9a 8b       	std	Y+18, r25	; 0x12
     40e:	e0 91 20 01 	lds	r30, 0x0120
     412:	ed 8b       	std	Y+21, r30	; 0x15
     414:	f0 91 21 01 	lds	r31, 0x0121
     418:	fe 8b       	std	Y+22, r31	; 0x16
     41a:	20 91 22 01 	lds	r18, 0x0122
     41e:	2f 8b       	std	Y+23, r18	; 0x17
     420:	30 91 23 01 	lds	r19, 0x0123
     424:	38 8f       	std	Y+24, r19	; 0x18
     426:	40 91 00 01 	lds	r20, 0x0100
     42a:	4d 83       	std	Y+5, r20	; 0x05
     42c:	50 91 01 01 	lds	r21, 0x0101
     430:	5e 83       	std	Y+6, r21	; 0x06
     432:	20 90 02 01 	lds	r2, 0x0102
     436:	30 90 03 01 	lds	r3, 0x0103
     43a:	60 91 1a 01 	lds	r22, 0x011A
     43e:	69 8f       	std	Y+25, r22	; 0x19
     440:	70 91 1b 01 	lds	r23, 0x011B
     444:	7a 8f       	std	Y+26, r23	; 0x1a
     446:	80 91 18 01 	lds	r24, 0x0118
     44a:	90 91 19 01 	lds	r25, 0x0119
     44e:	98 8b       	std	Y+16, r25	; 0x10
     450:	8f 87       	std	Y+15, r24	; 0x0f
     452:	18 86       	std	Y+8, r1	; 0x08
     454:	1f 82       	std	Y+7, r1	; 0x07
     456:	c1 2c       	mov	r12, r1
     458:	d1 2c       	mov	r13, r1
     45a:	b9 c0       	rjmp	.+370    	; 0x5ce <determine_blobs+0x2b6>
			exit = 1;
			for (int i = 0; i < 4; i++) {
				for (int j = i; j < 4; j++) {
					if (i == j) continue;
     45c:	eb 8d       	ldd	r30, Y+27	; 0x1b
     45e:	fc 8d       	ldd	r31, Y+28	; 0x1c
     460:	e4 15       	cp	r30, r4
     462:	f5 05       	cpc	r31, r5
     464:	09 f4       	brne	.+2      	; 0x468 <determine_blobs+0x150>
     466:	9c c0       	rjmp	.+312    	; 0x5a0 <determine_blobs+0x288>
					dist = sqrt(((float)x[i]-(float)x[j])*((float)x[i]-(float)x[j])+((float)y[i]-(float)y[j])*((float)y[i]-(float)y[j]));
     468:	e9 85       	ldd	r30, Y+9	; 0x09
     46a:	fa 85       	ldd	r31, Y+10	; 0x0a
     46c:	60 81       	ld	r22, Z
     46e:	71 81       	ldd	r23, Z+1	; 0x01
     470:	80 e0       	ldi	r24, 0x00	; 0
     472:	90 e0       	ldi	r25, 0x00	; 0
     474:	0e 94 47 11 	call	0x228e	; 0x228e <__floatunsisf>
     478:	6b 01       	movw	r12, r22
     47a:	7c 01       	movw	r14, r24
     47c:	f3 01       	movw	r30, r6
     47e:	60 81       	ld	r22, Z
     480:	71 81       	ldd	r23, Z+1	; 0x01
     482:	80 e0       	ldi	r24, 0x00	; 0
     484:	90 e0       	ldi	r25, 0x00	; 0
     486:	0e 94 47 11 	call	0x228e	; 0x228e <__floatunsisf>
     48a:	9b 01       	movw	r18, r22
     48c:	ac 01       	movw	r20, r24
     48e:	c7 01       	movw	r24, r14
     490:	b6 01       	movw	r22, r12
     492:	0e 94 e0 0f 	call	0x1fc0	; 0x1fc0 <__subsf3>
     496:	c6 2e       	mov	r12, r22
     498:	d7 2e       	mov	r13, r23
     49a:	e8 2e       	mov	r14, r24
     49c:	f9 2e       	mov	r15, r25
     49e:	eb 85       	ldd	r30, Y+11	; 0x0b
     4a0:	fc 85       	ldd	r31, Y+12	; 0x0c
     4a2:	60 81       	ld	r22, Z
     4a4:	71 81       	ldd	r23, Z+1	; 0x01
     4a6:	80 e0       	ldi	r24, 0x00	; 0
     4a8:	90 e0       	ldi	r25, 0x00	; 0
     4aa:	0e 94 47 11 	call	0x228e	; 0x228e <__floatunsisf>
     4ae:	4b 01       	movw	r8, r22
     4b0:	5c 01       	movw	r10, r24
     4b2:	f8 01       	movw	r30, r16
     4b4:	60 81       	ld	r22, Z
     4b6:	71 81       	ldd	r23, Z+1	; 0x01
     4b8:	80 e0       	ldi	r24, 0x00	; 0
     4ba:	90 e0       	ldi	r25, 0x00	; 0
     4bc:	0e 94 47 11 	call	0x228e	; 0x228e <__floatunsisf>
     4c0:	9b 01       	movw	r18, r22
     4c2:	ac 01       	movw	r20, r24
     4c4:	c5 01       	movw	r24, r10
     4c6:	b4 01       	movw	r22, r8
     4c8:	0e 94 e0 0f 	call	0x1fc0	; 0x1fc0 <__subsf3>
     4cc:	86 2e       	mov	r8, r22
     4ce:	97 2e       	mov	r9, r23
     4d0:	a8 2e       	mov	r10, r24
     4d2:	b9 2e       	mov	r11, r25
     4d4:	2c 2d       	mov	r18, r12
     4d6:	3d 2d       	mov	r19, r13
     4d8:	4e 2d       	mov	r20, r14
     4da:	5f 2d       	mov	r21, r15
     4dc:	6c 2d       	mov	r22, r12
     4de:	7d 2d       	mov	r23, r13
     4e0:	8e 2d       	mov	r24, r14
     4e2:	9f 2d       	mov	r25, r15
     4e4:	0e 94 62 12 	call	0x24c4	; 0x24c4 <__mulsf3>
     4e8:	6b 01       	movw	r12, r22
     4ea:	7c 01       	movw	r14, r24
     4ec:	28 2d       	mov	r18, r8
     4ee:	39 2d       	mov	r19, r9
     4f0:	4a 2d       	mov	r20, r10
     4f2:	5b 2d       	mov	r21, r11
     4f4:	68 2d       	mov	r22, r8
     4f6:	79 2d       	mov	r23, r9
     4f8:	8a 2d       	mov	r24, r10
     4fa:	9b 2d       	mov	r25, r11
     4fc:	0e 94 62 12 	call	0x24c4	; 0x24c4 <__mulsf3>
     500:	9b 01       	movw	r18, r22
     502:	ac 01       	movw	r20, r24
     504:	c7 01       	movw	r24, r14
     506:	b6 01       	movw	r22, r12
     508:	0e 94 e1 0f 	call	0x1fc2	; 0x1fc2 <__addsf3>
     50c:	0e 94 cf 12 	call	0x259e	; 0x259e <sqrt>
     510:	86 2e       	mov	r8, r22
     512:	97 2e       	mov	r9, r23
     514:	a8 2e       	mov	r10, r24
     516:	b9 2e       	mov	r11, r25
					if (dist > distmax) {
     518:	79 81       	ldd	r23, Y+1	; 0x01
     51a:	6a 81       	ldd	r22, Y+2	; 0x02
     51c:	9b 81       	ldd	r25, Y+3	; 0x03
     51e:	8c 81       	ldd	r24, Y+4	; 0x04
     520:	27 2f       	mov	r18, r23
     522:	36 2f       	mov	r19, r22
     524:	49 2f       	mov	r20, r25
     526:	58 2f       	mov	r21, r24
     528:	68 2d       	mov	r22, r8
     52a:	79 2d       	mov	r23, r9
     52c:	8a 2d       	mov	r24, r10
     52e:	9b 2d       	mov	r25, r11
     530:	0e 94 57 12 	call	0x24ae	; 0x24ae <__gesf2>
     534:	18 16       	cp	r1, r24
     536:	d4 f4       	brge	.+52     	; 0x56c <determine_blobs+0x254>
						distmax = dist;
						far1 = i;
						far2 = j;
						dcenter = dist / 2.0;
     538:	20 e0       	ldi	r18, 0x00	; 0
     53a:	30 e0       	ldi	r19, 0x00	; 0
     53c:	40 e0       	ldi	r20, 0x00	; 0
     53e:	5f e3       	ldi	r21, 0x3F	; 63
     540:	68 2d       	mov	r22, r8
     542:	79 2d       	mov	r23, r9
     544:	8a 2d       	mov	r24, r10
     546:	9b 2d       	mov	r25, r11
     548:	0e 94 62 12 	call	0x24c4	; 0x24c4 <__mulsf3>
     54c:	6d 8b       	std	Y+21, r22	; 0x15
     54e:	7e 8b       	std	Y+22, r23	; 0x16
     550:	8f 8b       	std	Y+23, r24	; 0x17
     552:	98 8f       	std	Y+24, r25	; 0x18
					if (i == j) continue;
					dist = sqrt(((float)x[i]-(float)x[j])*((float)x[i]-(float)x[j])+((float)y[i]-(float)y[j])*((float)y[i]-(float)y[j]));
					if (dist > distmax) {
						distmax = dist;
						far1 = i;
						far2 = j;
     554:	fb 8d       	ldd	r31, Y+27	; 0x1b
     556:	f9 8b       	std	Y+17, r31	; 0x11
     558:	2c 8d       	ldd	r18, Y+28	; 0x1c
     55a:	2a 8b       	std	Y+18, r18	; 0x12
				for (int j = i; j < 4; j++) {
					if (i == j) continue;
					dist = sqrt(((float)x[i]-(float)x[j])*((float)x[i]-(float)x[j])+((float)y[i]-(float)y[j])*((float)y[i]-(float)y[j]));
					if (dist > distmax) {
						distmax = dist;
						far1 = i;
     55c:	3d 85       	ldd	r19, Y+13	; 0x0d
     55e:	3b 8b       	std	Y+19, r19	; 0x13
     560:	4e 85       	ldd	r20, Y+14	; 0x0e
     562:	4c 8b       	std	Y+20, r20	; 0x14
			for (int i = 0; i < 4; i++) {
				for (int j = i; j < 4; j++) {
					if (i == j) continue;
					dist = sqrt(((float)x[i]-(float)x[j])*((float)x[i]-(float)x[j])+((float)y[i]-(float)y[j])*((float)y[i]-(float)y[j]));
					if (dist > distmax) {
						distmax = dist;
     564:	89 82       	std	Y+1, r8	; 0x01
     566:	9a 82       	std	Y+2, r9	; 0x02
     568:	ab 82       	std	Y+3, r10	; 0x03
     56a:	bc 82       	std	Y+4, r11	; 0x04
						far1 = i;
						far2 = j;
						dcenter = dist / 2.0;
					}
					if (dist < distmin) {
     56c:	7d 81       	ldd	r23, Y+5	; 0x05
     56e:	6e 81       	ldd	r22, Y+6	; 0x06
     570:	27 2f       	mov	r18, r23
     572:	36 2f       	mov	r19, r22
     574:	42 2d       	mov	r20, r2
     576:	53 2d       	mov	r21, r3
     578:	68 2d       	mov	r22, r8
     57a:	79 2d       	mov	r23, r9
     57c:	8a 2d       	mov	r24, r10
     57e:	9b 2d       	mov	r25, r11
     580:	0e 94 a7 10 	call	0x214e	; 0x214e <__cmpsf2>
     584:	88 23       	and	r24, r24
     586:	64 f4       	brge	.+24     	; 0x5a0 <determine_blobs+0x288>
						distmin = dist;
						close1 = i;
						close2 = j;
     588:	6b 8d       	ldd	r22, Y+27	; 0x1b
     58a:	7c 8d       	ldd	r23, Y+28	; 0x1c
     58c:	78 8b       	std	Y+16, r23	; 0x10
     58e:	6f 87       	std	Y+15, r22	; 0x0f
						far2 = j;
						dcenter = dist / 2.0;
					}
					if (dist < distmin) {
						distmin = dist;
						close1 = i;
     590:	7d 85       	ldd	r23, Y+13	; 0x0d
     592:	79 8f       	std	Y+25, r23	; 0x19
     594:	8e 85       	ldd	r24, Y+14	; 0x0e
     596:	8a 8f       	std	Y+26, r24	; 0x1a
						far1 = i;
						far2 = j;
						dcenter = dist / 2.0;
					}
					if (dist < distmin) {
						distmin = dist;
     598:	8d 82       	std	Y+5, r8	; 0x05
     59a:	9e 82       	std	Y+6, r9	; 0x06
     59c:	2a 2c       	mov	r2, r10
     59e:	3b 2c       	mov	r3, r11
     5a0:	92 e0       	ldi	r25, 0x02	; 2
     5a2:	69 0e       	add	r6, r25
     5a4:	71 1c       	adc	r7, r1
     5a6:	0e 5f       	subi	r16, 0xFE	; 254
     5a8:	1f 4f       	sbci	r17, 0xFF	; 255
	while (exit == 0) {
		getData(x, y);
		if (x[0] < 1023 && x[1] < 1023 && x[2] < 1023 && x[3] < 1023) {
			exit = 1;
			for (int i = 0; i < 4; i++) {
				for (int j = i; j < 4; j++) {
     5aa:	eb 8d       	ldd	r30, Y+27	; 0x1b
     5ac:	fc 8d       	ldd	r31, Y+28	; 0x1c
     5ae:	31 96       	adiw	r30, 0x01	; 1
     5b0:	fc 8f       	std	Y+28, r31	; 0x1c
     5b2:	eb 8f       	std	Y+27, r30	; 0x1b
     5b4:	34 97       	sbiw	r30, 0x04	; 4
     5b6:	09 f0       	breq	.+2      	; 0x5ba <determine_blobs+0x2a2>
     5b8:	51 cf       	rjmp	.-350    	; 0x45c <determine_blobs+0x144>
	distmin = 30000;
	while (exit == 0) {
		getData(x, y);
		if (x[0] < 1023 && x[1] < 1023 && x[2] < 1023 && x[3] < 1023) {
			exit = 1;
			for (int i = 0; i < 4; i++) {
     5ba:	2f 81       	ldd	r18, Y+7	; 0x07
     5bc:	38 85       	ldd	r19, Y+8	; 0x08
     5be:	2f 5f       	subi	r18, 0xFF	; 255
     5c0:	3f 4f       	sbci	r19, 0xFF	; 255
     5c2:	38 87       	std	Y+8, r19	; 0x08
     5c4:	2f 83       	std	Y+7, r18	; 0x07
     5c6:	69 01       	movw	r12, r18
     5c8:	24 30       	cpi	r18, 0x04	; 4
     5ca:	31 05       	cpc	r19, r1
     5cc:	39 f1       	breq	.+78     	; 0x61c <determine_blobs+0x304>
				for (int j = i; j < 4; j++) {
     5ce:	34 e0       	ldi	r19, 0x04	; 4
     5d0:	c3 16       	cp	r12, r19
     5d2:	d1 04       	cpc	r13, r1
     5d4:	94 f7       	brge	.-28     	; 0x5ba <determine_blobs+0x2a2>
					if (i == j) continue;
					dist = sqrt(((float)x[i]-(float)x[j])*((float)x[i]-(float)x[j])+((float)y[i]-(float)y[j])*((float)y[i]-(float)y[j]));
     5d6:	86 01       	movw	r16, r12
     5d8:	0f 5f       	subi	r16, 0xFF	; 255
     5da:	1f 4f       	sbci	r17, 0xFF	; 255
	y[2] = blobs[7];
	y[3] = blobs[10];
	return 1;
} 

unsigned char determine_blobs() {
     5dc:	00 0f       	add	r16, r16
     5de:	11 1f       	adc	r17, r17
     5e0:	0f 2e       	mov	r0, r31
     5e2:	f4 e3       	ldi	r31, 0x34	; 52
     5e4:	ef 2e       	mov	r14, r31
     5e6:	f1 e0       	ldi	r31, 0x01	; 1
     5e8:	ff 2e       	mov	r15, r31
     5ea:	f0 2d       	mov	r31, r0
     5ec:	e0 0e       	add	r14, r16
     5ee:	f1 1e       	adc	r15, r17
     5f0:	04 5d       	subi	r16, 0xD4	; 212
     5f2:	1e 4f       	sbci	r17, 0xFE	; 254
		if (x[0] < 1023 && x[1] < 1023 && x[2] < 1023 && x[3] < 1023) {
			exit = 1;
			for (int i = 0; i < 4; i++) {
				for (int j = i; j < 4; j++) {
					if (i == j) continue;
					dist = sqrt(((float)x[i]-(float)x[j])*((float)x[i]-(float)x[j])+((float)y[i]-(float)y[j])*((float)y[i]-(float)y[j]));
     5f4:	c6 01       	movw	r24, r12
     5f6:	88 0f       	add	r24, r24
     5f8:	99 1f       	adc	r25, r25
     5fa:	ac 01       	movw	r20, r24
     5fc:	4c 5c       	subi	r20, 0xCC	; 204
     5fe:	5e 4f       	sbci	r21, 0xFE	; 254
     600:	5a 87       	std	Y+10, r21	; 0x0a
     602:	49 87       	std	Y+9, r20	; 0x09
     604:	bc 01       	movw	r22, r24
     606:	64 5d       	subi	r22, 0xD4	; 212
     608:	7e 4f       	sbci	r23, 0xFE	; 254
     60a:	7c 87       	std	Y+12, r23	; 0x0c
     60c:	6b 87       	std	Y+11, r22	; 0x0b
						far2 = j;
						dcenter = dist / 2.0;
					}
					if (dist < distmin) {
						distmin = dist;
						close1 = i;
     60e:	cd 86       	std	Y+13, r12	; 0x0d
     610:	de 86       	std	Y+14, r13	; 0x0e
     612:	dc 8e       	std	Y+28, r13	; 0x1c
     614:	cb 8e       	std	Y+27, r12	; 0x1b
     616:	26 01       	movw	r4, r12
     618:	37 01       	movw	r6, r14
     61a:	c7 cf       	rjmp	.-114    	; 0x5aa <determine_blobs+0x292>
     61c:	88 2d       	mov	r24, r8
     61e:	99 2d       	mov	r25, r9
     620:	aa 2d       	mov	r26, r10
     622:	bb 2d       	mov	r27, r11
     624:	80 93 28 01 	sts	0x0128, r24
     628:	90 93 29 01 	sts	0x0129, r25
     62c:	a0 93 2a 01 	sts	0x012A, r26
     630:	b0 93 2b 01 	sts	0x012B, r27
     634:	59 81       	ldd	r21, Y+1	; 0x01
     636:	4a 81       	ldd	r20, Y+2	; 0x02
     638:	3b 81       	ldd	r19, Y+3	; 0x03
     63a:	2c 81       	ldd	r18, Y+4	; 0x04
     63c:	85 2f       	mov	r24, r21
     63e:	94 2f       	mov	r25, r20
     640:	a3 2f       	mov	r26, r19
     642:	b2 2f       	mov	r27, r18
     644:	80 93 24 01 	sts	0x0124, r24
     648:	90 93 25 01 	sts	0x0125, r25
     64c:	a0 93 26 01 	sts	0x0126, r26
     650:	b0 93 27 01 	sts	0x0127, r27
     654:	7b 89       	ldd	r23, Y+19	; 0x13
     656:	70 93 1e 01 	sts	0x011E, r23
     65a:	8c 89       	ldd	r24, Y+20	; 0x14
     65c:	80 93 1f 01 	sts	0x011F, r24
     660:	99 89       	ldd	r25, Y+17	; 0x11
     662:	90 93 1c 01 	sts	0x011C, r25
     666:	ea 89       	ldd	r30, Y+18	; 0x12
     668:	e0 93 1d 01 	sts	0x011D, r30
     66c:	5d 89       	ldd	r21, Y+21	; 0x15
     66e:	4e 89       	ldd	r20, Y+22	; 0x16
     670:	3f 89       	ldd	r19, Y+23	; 0x17
     672:	28 8d       	ldd	r18, Y+24	; 0x18
     674:	85 2f       	mov	r24, r21
     676:	94 2f       	mov	r25, r20
     678:	a3 2f       	mov	r26, r19
     67a:	b2 2f       	mov	r27, r18
     67c:	80 93 20 01 	sts	0x0120, r24
     680:	90 93 21 01 	sts	0x0121, r25
     684:	a0 93 22 01 	sts	0x0122, r26
     688:	b0 93 23 01 	sts	0x0123, r27
     68c:	5d 81       	ldd	r21, Y+5	; 0x05
     68e:	4e 81       	ldd	r20, Y+6	; 0x06
     690:	85 2f       	mov	r24, r21
     692:	94 2f       	mov	r25, r20
     694:	a2 2d       	mov	r26, r2
     696:	b3 2d       	mov	r27, r3
     698:	80 93 00 01 	sts	0x0100, r24
     69c:	90 93 01 01 	sts	0x0101, r25
     6a0:	a0 93 02 01 	sts	0x0102, r26
     6a4:	b0 93 03 01 	sts	0x0103, r27
     6a8:	f9 8d       	ldd	r31, Y+25	; 0x19
     6aa:	f0 93 1a 01 	sts	0x011A, r31
     6ae:	2a 8d       	ldd	r18, Y+26	; 0x1a
     6b0:	20 93 1b 01 	sts	0x011B, r18
     6b4:	3f 85       	ldd	r19, Y+15	; 0x0f
     6b6:	30 93 18 01 	sts	0x0118, r19
     6ba:	48 89       	ldd	r20, Y+16	; 0x10
     6bc:	40 93 19 01 	sts	0x0119, r20
						close2 = j;
					}
				}
			}
			if (far1 == close1) {
     6c0:	80 91 1e 01 	lds	r24, 0x011E
     6c4:	90 91 1f 01 	lds	r25, 0x011F
     6c8:	20 91 1a 01 	lds	r18, 0x011A
     6cc:	30 91 1b 01 	lds	r19, 0x011B
     6d0:	82 17       	cp	r24, r18
     6d2:	93 07       	cpc	r25, r19
     6d4:	19 f5       	brne	.+70     	; 0x71c <determine_blobs+0x404>
				top = far1;
     6d6:	90 93 43 01 	sts	0x0143, r25
     6da:	80 93 42 01 	sts	0x0142, r24
				bottom = far2;
     6de:	40 91 1c 01 	lds	r20, 0x011C
     6e2:	50 91 1d 01 	lds	r21, 0x011D
     6e6:	50 93 41 01 	sts	0x0141, r21
     6ea:	40 93 40 01 	sts	0x0140, r20
				right = close2;
     6ee:	20 91 18 01 	lds	r18, 0x0118
     6f2:	30 91 19 01 	lds	r19, 0x0119
     6f6:	30 93 3d 01 	sts	0x013D, r19
     6fa:	20 93 3c 01 	sts	0x013C, r18
				//left + top + bottom + right = 1 + 2 + 3 + 4 = 10
				left = 9 - top - bottom - right;
     6fe:	69 e0       	ldi	r22, 0x09	; 9
     700:	70 e0       	ldi	r23, 0x00	; 0
     702:	fb 01       	movw	r30, r22
     704:	e8 1b       	sub	r30, r24
     706:	f9 0b       	sbc	r31, r25
     708:	cf 01       	movw	r24, r30
     70a:	84 1b       	sub	r24, r20
     70c:	95 0b       	sbc	r25, r21
     70e:	82 1b       	sub	r24, r18
     710:	93 0b       	sbc	r25, r19
     712:	90 93 3f 01 	sts	0x013F, r25
     716:	80 93 3e 01 	sts	0x013E, r24
     71a:	66 c0       	rjmp	.+204    	; 0x7e8 <determine_blobs+0x4d0>
			}
			else if (far1 == close2) {
     71c:	4f 85       	ldd	r20, Y+15	; 0x0f
     71e:	58 89       	ldd	r21, Y+16	; 0x10
     720:	84 17       	cp	r24, r20
     722:	95 07       	cpc	r25, r21
     724:	f9 f4       	brne	.+62     	; 0x764 <determine_blobs+0x44c>
				top = far1;
     726:	90 93 43 01 	sts	0x0143, r25
     72a:	80 93 42 01 	sts	0x0142, r24
				bottom = far2;
     72e:	40 91 1c 01 	lds	r20, 0x011C
     732:	50 91 1d 01 	lds	r21, 0x011D
     736:	50 93 41 01 	sts	0x0141, r21
     73a:	40 93 40 01 	sts	0x0140, r20
				right = close1;
     73e:	30 93 3d 01 	sts	0x013D, r19
     742:	20 93 3c 01 	sts	0x013C, r18
				left = 9 - top - bottom - right;
     746:	69 e0       	ldi	r22, 0x09	; 9
     748:	70 e0       	ldi	r23, 0x00	; 0
     74a:	fb 01       	movw	r30, r22
     74c:	e8 1b       	sub	r30, r24
     74e:	f9 0b       	sbc	r31, r25
     750:	cf 01       	movw	r24, r30
     752:	84 1b       	sub	r24, r20
     754:	95 0b       	sbc	r25, r21
     756:	82 1b       	sub	r24, r18
     758:	93 0b       	sbc	r25, r19
     75a:	90 93 3f 01 	sts	0x013F, r25
     75e:	80 93 3e 01 	sts	0x013E, r24
     762:	42 c0       	rjmp	.+132    	; 0x7e8 <determine_blobs+0x4d0>
			}
			else if (far2 == close1) {
     764:	40 91 1c 01 	lds	r20, 0x011C
     768:	50 91 1d 01 	lds	r21, 0x011D
     76c:	24 17       	cp	r18, r20
     76e:	35 07       	cpc	r19, r21
     770:	01 f5       	brne	.+64     	; 0x7b2 <determine_blobs+0x49a>
				top = far2;
     772:	30 93 43 01 	sts	0x0143, r19
     776:	20 93 42 01 	sts	0x0142, r18
				bottom = far1;
     77a:	90 93 41 01 	sts	0x0141, r25
     77e:	80 93 40 01 	sts	0x0140, r24
				right = close2;
     782:	4f 85       	ldd	r20, Y+15	; 0x0f
     784:	58 89       	ldd	r21, Y+16	; 0x10
     786:	50 93 3d 01 	sts	0x013D, r21
     78a:	40 93 3c 01 	sts	0x013C, r20
				left = 9 - top - bottom - right;
     78e:	49 e0       	ldi	r20, 0x09	; 9
     790:	50 e0       	ldi	r21, 0x00	; 0
     792:	ba 01       	movw	r22, r20
     794:	62 1b       	sub	r22, r18
     796:	73 0b       	sbc	r23, r19
     798:	fb 01       	movw	r30, r22
     79a:	e8 1b       	sub	r30, r24
     79c:	f9 0b       	sbc	r31, r25
     79e:	cf 01       	movw	r24, r30
     7a0:	2f 85       	ldd	r18, Y+15	; 0x0f
     7a2:	38 89       	ldd	r19, Y+16	; 0x10
     7a4:	82 1b       	sub	r24, r18
     7a6:	93 0b       	sbc	r25, r19
     7a8:	90 93 3f 01 	sts	0x013F, r25
     7ac:	80 93 3e 01 	sts	0x013E, r24
     7b0:	1b c0       	rjmp	.+54     	; 0x7e8 <determine_blobs+0x4d0>
			}
			else {
				top = far2;
     7b2:	50 93 43 01 	sts	0x0143, r21
     7b6:	40 93 42 01 	sts	0x0142, r20
				bottom = far1;
     7ba:	90 93 41 01 	sts	0x0141, r25
     7be:	80 93 40 01 	sts	0x0140, r24
				right = close1;
     7c2:	30 93 3d 01 	sts	0x013D, r19
     7c6:	20 93 3c 01 	sts	0x013C, r18
				left = 9 - top - bottom - right;
     7ca:	69 e0       	ldi	r22, 0x09	; 9
     7cc:	70 e0       	ldi	r23, 0x00	; 0
     7ce:	fb 01       	movw	r30, r22
     7d0:	e4 1b       	sub	r30, r20
     7d2:	f5 0b       	sbc	r31, r21
     7d4:	bf 01       	movw	r22, r30
     7d6:	68 1b       	sub	r22, r24
     7d8:	79 0b       	sbc	r23, r25
     7da:	cb 01       	movw	r24, r22
     7dc:	82 1b       	sub	r24, r18
     7de:	93 0b       	sbc	r25, r19
     7e0:	90 93 3f 01 	sts	0x013F, r25
     7e4:	80 93 3e 01 	sts	0x013E, r24
			}
		}
	}
	return 1;
}
     7e8:	81 e0       	ldi	r24, 0x01	; 1
     7ea:	6c 96       	adiw	r28, 0x1c	; 28
     7ec:	0f b6       	in	r0, 0x3f	; 63
     7ee:	f8 94       	cli
     7f0:	de bf       	out	0x3e, r29	; 62
     7f2:	0f be       	out	0x3f, r0	; 63
     7f4:	cd bf       	out	0x3d, r28	; 61
     7f6:	df 91       	pop	r29
     7f8:	cf 91       	pop	r28
     7fa:	1f 91       	pop	r17
     7fc:	0f 91       	pop	r16
     7fe:	ff 90       	pop	r15
     800:	ef 90       	pop	r14
     802:	df 90       	pop	r13
     804:	cf 90       	pop	r12
     806:	bf 90       	pop	r11
     808:	af 90       	pop	r10
     80a:	9f 90       	pop	r9
     80c:	8f 90       	pop	r8
     80e:	7f 90       	pop	r7
     810:	6f 90       	pop	r6
     812:	5f 90       	pop	r5
     814:	4f 90       	pop	r4
     816:	3f 90       	pop	r3
     818:	2f 90       	pop	r2
     81a:	08 95       	ret

0000081c <local_init>:

unsigned char local_init() {
	m_wii_open();
     81c:	0e 94 dd 0e 	call	0x1dba	; 0x1dba <m_wii_open>
	
	m_wii_read(blobs);
     820:	84 e4       	ldi	r24, 0x44	; 68
     822:	91 e0       	ldi	r25, 0x01	; 1
     824:	0e 94 48 0e 	call	0x1c90	; 0x1c90 <m_wii_read>
	

	//Determine indices of all top, bottom, left, right points
	determine_blobs();
     828:	0e 94 8c 01 	call	0x318	; 0x318 <determine_blobs>
	
	return 1;
}
     82c:	81 e0       	ldi	r24, 0x01	; 1
     82e:	08 95       	ret

00000830 <localize>:
	data[0] = blobs[0];
	data[1] = blobs[1];
	data[2] = 1.0;
}

unsigned char localize (float* data) {
     830:	2f 92       	push	r2
     832:	3f 92       	push	r3
     834:	4f 92       	push	r4
     836:	5f 92       	push	r5
     838:	6f 92       	push	r6
     83a:	7f 92       	push	r7
     83c:	8f 92       	push	r8
     83e:	9f 92       	push	r9
     840:	af 92       	push	r10
     842:	bf 92       	push	r11
     844:	cf 92       	push	r12
     846:	df 92       	push	r13
     848:	ef 92       	push	r14
     84a:	ff 92       	push	r15
     84c:	0f 93       	push	r16
     84e:	1f 93       	push	r17
     850:	cf 93       	push	r28
     852:	df 93       	push	r29
     854:	cd b7       	in	r28, 0x3d	; 61
     856:	de b7       	in	r29, 0x3e	; 62
     858:	6a 97       	sbiw	r28, 0x1a	; 26
     85a:	0f b6       	in	r0, 0x3f	; 63
     85c:	f8 94       	cli
     85e:	de bf       	out	0x3e, r29	; 62
     860:	0f be       	out	0x3f, r0	; 63
     862:	cd bf       	out	0x3d, r28	; 61
     864:	1c 01       	movw	r2, r24
	//m_wii_read(blobs);
	//determine_blobs();
	getData(x,y);
     866:	6c e2       	ldi	r22, 0x2C	; 44
     868:	71 e0       	ldi	r23, 0x01	; 1
     86a:	84 e3       	ldi	r24, 0x34	; 52
     86c:	91 e0       	ldi	r25, 0x01	; 1
     86e:	0e 94 4b 01 	call	0x296	; 0x296 <getData>
	numlost = 0;
     872:	10 92 17 01 	sts	0x0117, r1
     876:	10 92 16 01 	sts	0x0116, r1
	
	if (recalibrate == 1) {
     87a:	80 91 14 01 	lds	r24, 0x0114
     87e:	90 91 15 01 	lds	r25, 0x0115
     882:	01 97       	sbiw	r24, 0x01	; 1
     884:	09 f0       	breq	.+2      	; 0x888 <localize+0x58>
     886:	fc c6       	rjmp	.+3576   	; 0x1680 <__stack+0xb81>
		determine_blobs();
     888:	0e 94 8c 01 	call	0x318	; 0x318 <determine_blobs>
		recalibrate = 0;
     88c:	10 92 15 01 	sts	0x0115, r1
     890:	10 92 14 01 	sts	0x0114, r1
     894:	f5 c6       	rjmp	.+3562   	; 0x1680 <__stack+0xb81>
	float theta_top_right = (float) atan2((double) 11.655, (double) (14.5+8.741));
	float theta_bottom_left = (float) atan2((double)10.563, (double) (14.5+2.483));
	float theta_bottom_right = (float) atan2((double) 11.655, (double) (14.5-8.741));

	for (int i = 0; i < 4; i++) {
		if (x[i] >= 1023) numlost++;
     896:	21 91       	ld	r18, Z+
     898:	31 91       	ld	r19, Z+
     89a:	2f 3f       	cpi	r18, 0xFF	; 255
     89c:	33 40       	sbci	r19, 0x03	; 3
     89e:	08 f0       	brcs	.+2      	; 0x8a2 <localize+0x72>
     8a0:	01 96       	adiw	r24, 0x01	; 1
	float theta_top_left= (float) atan2((double) (14.5-2.483), (double) 10.563);
	float theta_top_right = (float) atan2((double) 11.655, (double) (14.5+8.741));
	float theta_bottom_left = (float) atan2((double)10.563, (double) (14.5+2.483));
	float theta_bottom_right = (float) atan2((double) 11.655, (double) (14.5-8.741));

	for (int i = 0; i < 4; i++) {
     8a2:	e4 17       	cp	r30, r20
     8a4:	f5 07       	cpc	r31, r21
     8a6:	b9 f7       	brne	.-18     	; 0x896 <localize+0x66>
     8a8:	80 93 16 01 	sts	0x0116, r24
     8ac:	90 93 17 01 	sts	0x0117, r25
		if (x[i] >= 1023) numlost++;
	}
	
	if (numlost >= 2) {
     8b0:	02 97       	sbiw	r24, 0x02	; 2
     8b2:	44 f0       	brlt	.+16     	; 0x8c4 <localize+0x94>
		recalibrate = 1;
     8b4:	81 e0       	ldi	r24, 0x01	; 1
     8b6:	90 e0       	ldi	r25, 0x00	; 0
     8b8:	90 93 15 01 	sts	0x0115, r25
     8bc:	80 93 14 01 	sts	0x0114, r24
		return 0;
     8c0:	80 e0       	ldi	r24, 0x00	; 0
     8c2:	e7 c6       	rjmp	.+3534   	; 0x1692 <__stack+0xb93>
	}
	
	if (x[top] < 1023 && x[bottom] < 1023) {
     8c4:	a0 90 42 01 	lds	r10, 0x0142
     8c8:	b0 90 43 01 	lds	r11, 0x0143
     8cc:	f5 01       	movw	r30, r10
     8ce:	ee 0f       	add	r30, r30
     8d0:	ff 1f       	adc	r31, r31
     8d2:	ec 5c       	subi	r30, 0xCC	; 204
     8d4:	fe 4f       	sbci	r31, 0xFE	; 254
     8d6:	80 81       	ld	r24, Z
     8d8:	91 81       	ldd	r25, Z+1	; 0x01
     8da:	9e 8b       	std	Y+22, r25	; 0x16
     8dc:	8d 8b       	std	Y+21, r24	; 0x15
     8de:	8f 3f       	cpi	r24, 0xFF	; 255
     8e0:	e3 e0       	ldi	r30, 0x03	; 3
     8e2:	9e 07       	cpc	r25, r30
     8e4:	08 f0       	brcs	.+2      	; 0x8e8 <localize+0xb8>
     8e6:	2b c4       	rjmp	.+2134   	; 0x113e <__stack+0x63f>
     8e8:	e0 90 40 01 	lds	r14, 0x0140
     8ec:	f0 90 41 01 	lds	r15, 0x0141
     8f0:	f7 01       	movw	r30, r14
     8f2:	ee 0f       	add	r30, r30
     8f4:	ff 1f       	adc	r31, r31
     8f6:	ec 5c       	subi	r30, 0xCC	; 204
     8f8:	fe 4f       	sbci	r31, 0xFE	; 254
     8fa:	00 81       	ld	r16, Z
     8fc:	11 81       	ldd	r17, Z+1	; 0x01
     8fe:	0f 3f       	cpi	r16, 0xFF	; 255
     900:	f3 e0       	ldi	r31, 0x03	; 3
     902:	1f 07       	cpc	r17, r31
     904:	08 f0       	brcs	.+2      	; 0x908 <localize+0xd8>
     906:	7c c1       	rjmp	.+760    	; 0xc00 <__stack+0x101>
		//calculate and store pixel-space position and orientation
		posx = (float) (float)(x[top]+x[bottom])/2.0 - rcenterx;
     908:	40 90 08 01 	lds	r4, 0x0108
     90c:	50 90 09 01 	lds	r5, 0x0109
     910:	60 90 0a 01 	lds	r6, 0x010A
     914:	70 90 0b 01 	lds	r7, 0x010B
     918:	bc 01       	movw	r22, r24
     91a:	60 0f       	add	r22, r16
     91c:	71 1f       	adc	r23, r17
     91e:	80 e0       	ldi	r24, 0x00	; 0
     920:	90 e0       	ldi	r25, 0x00	; 0
     922:	0e 94 47 11 	call	0x228e	; 0x228e <__floatunsisf>
     926:	20 e0       	ldi	r18, 0x00	; 0
     928:	30 e0       	ldi	r19, 0x00	; 0
     92a:	40 e0       	ldi	r20, 0x00	; 0
     92c:	5f e3       	ldi	r21, 0x3F	; 63
     92e:	0e 94 62 12 	call	0x24c4	; 0x24c4 <__mulsf3>
     932:	a3 01       	movw	r20, r6
     934:	92 01       	movw	r18, r4
     936:	0e 94 e0 0f 	call	0x1fc0	; 0x1fc0 <__subsf3>
     93a:	69 83       	std	Y+1, r22	; 0x01
     93c:	7d 83       	std	Y+5, r23	; 0x05
     93e:	8a 87       	std	Y+10, r24	; 0x0a
     940:	99 87       	std	Y+9, r25	; 0x09
		posy = (float) (float)(y[top]+y[bottom])/2.0 - rcentery;
     942:	f5 01       	movw	r30, r10
     944:	ee 0f       	add	r30, r30
     946:	ff 1f       	adc	r31, r31
     948:	e4 5d       	subi	r30, 0xD4	; 212
     94a:	fe 4f       	sbci	r31, 0xFE	; 254
     94c:	c0 80       	ld	r12, Z
     94e:	d1 80       	ldd	r13, Z+1	; 0x01
     950:	f7 01       	movw	r30, r14
     952:	ee 0f       	add	r30, r30
     954:	ff 1f       	adc	r31, r31
     956:	e4 5d       	subi	r30, 0xD4	; 212
     958:	fe 4f       	sbci	r31, 0xFE	; 254
     95a:	e0 80       	ld	r14, Z
     95c:	f1 80       	ldd	r15, Z+1	; 0x01
     95e:	b7 01       	movw	r22, r14
     960:	6c 0d       	add	r22, r12
     962:	7d 1d       	adc	r23, r13
     964:	80 e0       	ldi	r24, 0x00	; 0
     966:	90 e0       	ldi	r25, 0x00	; 0
     968:	0e 94 47 11 	call	0x228e	; 0x228e <__floatunsisf>
     96c:	20 e0       	ldi	r18, 0x00	; 0
     96e:	30 e0       	ldi	r19, 0x00	; 0
     970:	40 e0       	ldi	r20, 0x00	; 0
     972:	5f e3       	ldi	r21, 0x3F	; 63
     974:	0e 94 62 12 	call	0x24c4	; 0x24c4 <__mulsf3>
     978:	20 91 04 01 	lds	r18, 0x0104
     97c:	30 91 05 01 	lds	r19, 0x0105
     980:	40 91 06 01 	lds	r20, 0x0106
     984:	50 91 07 01 	lds	r21, 0x0107
     988:	0e 94 e0 0f 	call	0x1fc0	; 0x1fc0 <__subsf3>
     98c:	6e 87       	std	Y+14, r22	; 0x0e
     98e:	7a 8b       	std	Y+18, r23	; 0x12
     990:	8b 8b       	std	Y+19, r24	; 0x13
     992:	9c 8b       	std	Y+20, r25	; 0x14
		
		
		//calculate and store angle
		angle = (float) atan2(((double) ((float)x[top]-(float)x[bottom])),((double) ((float)y[top]-(float)y[bottom])));
     994:	b6 01       	movw	r22, r12
     996:	80 e0       	ldi	r24, 0x00	; 0
     998:	90 e0       	ldi	r25, 0x00	; 0
     99a:	0e 94 47 11 	call	0x228e	; 0x228e <__floatunsisf>
     99e:	4b 01       	movw	r8, r22
     9a0:	5c 01       	movw	r10, r24
     9a2:	b7 01       	movw	r22, r14
     9a4:	80 e0       	ldi	r24, 0x00	; 0
     9a6:	90 e0       	ldi	r25, 0x00	; 0
     9a8:	0e 94 47 11 	call	0x228e	; 0x228e <__floatunsisf>
     9ac:	9b 01       	movw	r18, r22
     9ae:	ac 01       	movw	r20, r24
     9b0:	c5 01       	movw	r24, r10
     9b2:	b4 01       	movw	r22, r8
     9b4:	0e 94 e0 0f 	call	0x1fc0	; 0x1fc0 <__subsf3>
     9b8:	6b 01       	movw	r12, r22
     9ba:	7c 01       	movw	r14, r24
     9bc:	2d 89       	ldd	r18, Y+21	; 0x15
     9be:	3e 89       	ldd	r19, Y+22	; 0x16
     9c0:	b9 01       	movw	r22, r18
     9c2:	80 e0       	ldi	r24, 0x00	; 0
     9c4:	90 e0       	ldi	r25, 0x00	; 0
     9c6:	0e 94 47 11 	call	0x228e	; 0x228e <__floatunsisf>
     9ca:	4b 01       	movw	r8, r22
     9cc:	5c 01       	movw	r10, r24
     9ce:	b8 01       	movw	r22, r16
     9d0:	80 e0       	ldi	r24, 0x00	; 0
     9d2:	90 e0       	ldi	r25, 0x00	; 0
     9d4:	0e 94 47 11 	call	0x228e	; 0x228e <__floatunsisf>
     9d8:	9b 01       	movw	r18, r22
     9da:	ac 01       	movw	r20, r24
     9dc:	c5 01       	movw	r24, r10
     9de:	b4 01       	movw	r22, r8
     9e0:	0e 94 e0 0f 	call	0x1fc0	; 0x1fc0 <__subsf3>
     9e4:	a7 01       	movw	r20, r14
     9e6:	96 01       	movw	r18, r12
     9e8:	0e 94 54 10 	call	0x20a8	; 0x20a8 <atan2>
     9ec:	4b 01       	movw	r8, r22
     9ee:	5c 01       	movw	r10, r24
		phi = ((float) atan2((double) posy, (double) posx));
     9f0:	79 81       	ldd	r23, Y+1	; 0x01
     9f2:	6d 81       	ldd	r22, Y+5	; 0x05
     9f4:	9a 85       	ldd	r25, Y+10	; 0x0a
     9f6:	89 85       	ldd	r24, Y+9	; 0x09
     9f8:	27 2f       	mov	r18, r23
     9fa:	36 2f       	mov	r19, r22
     9fc:	49 2f       	mov	r20, r25
     9fe:	58 2f       	mov	r21, r24
     a00:	be 85       	ldd	r27, Y+14	; 0x0e
     a02:	aa 89       	ldd	r26, Y+18	; 0x12
     a04:	eb 89       	ldd	r30, Y+19	; 0x13
     a06:	1c 89       	ldd	r17, Y+20	; 0x14
     a08:	6b 2f       	mov	r22, r27
     a0a:	7a 2f       	mov	r23, r26
     a0c:	8e 2f       	mov	r24, r30
     a0e:	91 2f       	mov	r25, r17
     a10:	0e 94 54 10 	call	0x20a8	; 0x20a8 <atan2>
     a14:	6b 01       	movw	r12, r22
     a16:	7c 01       	movw	r14, r24
		
		r = (float) sqrt((double)(posx*posx + posy*posy));
     a18:	79 81       	ldd	r23, Y+1	; 0x01
     a1a:	6d 81       	ldd	r22, Y+5	; 0x05
     a1c:	9a 85       	ldd	r25, Y+10	; 0x0a
     a1e:	89 85       	ldd	r24, Y+9	; 0x09
     a20:	27 2f       	mov	r18, r23
     a22:	36 2f       	mov	r19, r22
     a24:	49 2f       	mov	r20, r25
     a26:	58 2f       	mov	r21, r24
     a28:	67 2f       	mov	r22, r23
     a2a:	73 2f       	mov	r23, r19
     a2c:	89 2f       	mov	r24, r25
     a2e:	95 2f       	mov	r25, r21
     a30:	0e 94 62 12 	call	0x24c4	; 0x24c4 <__mulsf3>
     a34:	6d 8b       	std	Y+21, r22	; 0x15
     a36:	7e 8b       	std	Y+22, r23	; 0x16
     a38:	8f 8b       	std	Y+23, r24	; 0x17
     a3a:	98 8f       	std	Y+24, r25	; 0x18
     a3c:	7e 85       	ldd	r23, Y+14	; 0x0e
     a3e:	6a 89       	ldd	r22, Y+18	; 0x12
     a40:	9b 89       	ldd	r25, Y+19	; 0x13
     a42:	8c 89       	ldd	r24, Y+20	; 0x14
     a44:	27 2f       	mov	r18, r23
     a46:	36 2f       	mov	r19, r22
     a48:	49 2f       	mov	r20, r25
     a4a:	58 2f       	mov	r21, r24
     a4c:	67 2f       	mov	r22, r23
     a4e:	73 2f       	mov	r23, r19
     a50:	89 2f       	mov	r24, r25
     a52:	95 2f       	mov	r25, r21
     a54:	0e 94 62 12 	call	0x24c4	; 0x24c4 <__mulsf3>
     a58:	9b 01       	movw	r18, r22
     a5a:	ac 01       	movw	r20, r24
     a5c:	6d 89       	ldd	r22, Y+21	; 0x15
     a5e:	7e 89       	ldd	r23, Y+22	; 0x16
     a60:	8f 89       	ldd	r24, Y+23	; 0x17
     a62:	98 8d       	ldd	r25, Y+24	; 0x18
     a64:	0e 94 e1 0f 	call	0x1fc2	; 0x1fc2 <__addsf3>
     a68:	0e 94 cf 12 	call	0x259e	; 0x259e <sqrt>
     a6c:	6d 8b       	std	Y+21, r22	; 0x15
     a6e:	7e 8b       	std	Y+22, r23	; 0x16
     a70:	8f 8b       	std	Y+23, r24	; 0x17
     a72:	98 8f       	std	Y+24, r25	; 0x18
		
		
		
		data[0] = rcenterx + r * (float) cos((double) (((3 * 3.14)/2) - angle - phi));
     a74:	a5 01       	movw	r20, r10
     a76:	94 01       	movw	r18, r8
     a78:	62 e5       	ldi	r22, 0x52	; 82
     a7a:	78 eb       	ldi	r23, 0xB8	; 184
     a7c:	86 e9       	ldi	r24, 0x96	; 150
     a7e:	90 e4       	ldi	r25, 0x40	; 64
     a80:	0e 94 e0 0f 	call	0x1fc0	; 0x1fc0 <__subsf3>
     a84:	a7 01       	movw	r20, r14
     a86:	96 01       	movw	r18, r12
     a88:	0e 94 e0 0f 	call	0x1fc0	; 0x1fc0 <__subsf3>
     a8c:	69 8f       	std	Y+25, r22	; 0x19
     a8e:	7a 8f       	std	Y+26, r23	; 0x1a
     a90:	18 2f       	mov	r17, r24
     a92:	09 2f       	mov	r16, r25
     a94:	81 2f       	mov	r24, r17
     a96:	90 2f       	mov	r25, r16
     a98:	0e 94 ab 10 	call	0x2156	; 0x2156 <cos>
     a9c:	2d 89       	ldd	r18, Y+21	; 0x15
     a9e:	3e 89       	ldd	r19, Y+22	; 0x16
     aa0:	4f 89       	ldd	r20, Y+23	; 0x17
     aa2:	58 8d       	ldd	r21, Y+24	; 0x18
     aa4:	0e 94 62 12 	call	0x24c4	; 0x24c4 <__mulsf3>
     aa8:	9b 01       	movw	r18, r22
     aaa:	ac 01       	movw	r20, r24
     aac:	c3 01       	movw	r24, r6
     aae:	b2 01       	movw	r22, r4
     ab0:	0e 94 e1 0f 	call	0x1fc2	; 0x1fc2 <__addsf3>
     ab4:	f1 01       	movw	r30, r2
     ab6:	60 83       	st	Z, r22
     ab8:	71 83       	std	Z+1, r23	; 0x01
     aba:	82 83       	std	Z+2, r24	; 0x02
     abc:	93 83       	std	Z+3, r25	; 0x03
		data[1] = rcentery + r * (float) sin((double) (((3 * 3.14)/2) - angle - phi));
     abe:	59 8d       	ldd	r21, Y+25	; 0x19
     ac0:	4a 8d       	ldd	r20, Y+26	; 0x1a
     ac2:	65 2f       	mov	r22, r21
     ac4:	74 2f       	mov	r23, r20
     ac6:	81 2f       	mov	r24, r17
     ac8:	90 2f       	mov	r25, r16
     aca:	0e 94 c5 12 	call	0x258a	; 0x258a <sin>
     ace:	2d 89       	ldd	r18, Y+21	; 0x15
     ad0:	3e 89       	ldd	r19, Y+22	; 0x16
     ad2:	4f 89       	ldd	r20, Y+23	; 0x17
     ad4:	58 8d       	ldd	r21, Y+24	; 0x18
     ad6:	0e 94 62 12 	call	0x24c4	; 0x24c4 <__mulsf3>
     ada:	20 91 04 01 	lds	r18, 0x0104
     ade:	30 91 05 01 	lds	r19, 0x0105
     ae2:	40 91 06 01 	lds	r20, 0x0106
     ae6:	50 91 07 01 	lds	r21, 0x0107
     aea:	0e 94 e1 0f 	call	0x1fc2	; 0x1fc2 <__addsf3>
     aee:	f1 01       	movw	r30, r2
     af0:	64 83       	std	Z+4, r22	; 0x04
     af2:	75 83       	std	Z+5, r23	; 0x05
     af4:	86 83       	std	Z+6, r24	; 0x06
     af6:	97 83       	std	Z+7, r25	; 0x07
		data[2] = angle * 180.0 / 3.14;
     af8:	20 e0       	ldi	r18, 0x00	; 0
     afa:	30 e0       	ldi	r19, 0x00	; 0
     afc:	44 e3       	ldi	r20, 0x34	; 52
     afe:	53 e4       	ldi	r21, 0x43	; 67
     b00:	c5 01       	movw	r24, r10
     b02:	b4 01       	movw	r22, r8
     b04:	0e 94 62 12 	call	0x24c4	; 0x24c4 <__mulsf3>
     b08:	23 ec       	ldi	r18, 0xC3	; 195
     b0a:	35 ef       	ldi	r19, 0xF5	; 245
     b0c:	48 e4       	ldi	r20, 0x48	; 72
     b0e:	50 e4       	ldi	r21, 0x40	; 64
     b10:	0e 94 ae 10 	call	0x215c	; 0x215c <__divsf3>
     b14:	f1 01       	movw	r30, r2
     b16:	60 87       	std	Z+8, r22	; 0x08
     b18:	71 87       	std	Z+9, r23	; 0x09
     b1a:	82 87       	std	Z+10, r24	; 0x0a
     b1c:	93 87       	std	Z+11, r25	; 0x0b
		data[3] = x[top];
     b1e:	00 91 42 01 	lds	r16, 0x0142
     b22:	10 91 43 01 	lds	r17, 0x0143
     b26:	00 0f       	add	r16, r16
     b28:	11 1f       	adc	r17, r17
     b2a:	f8 01       	movw	r30, r16
     b2c:	ec 5c       	subi	r30, 0xCC	; 204
     b2e:	fe 4f       	sbci	r31, 0xFE	; 254
     b30:	60 81       	ld	r22, Z
     b32:	71 81       	ldd	r23, Z+1	; 0x01
     b34:	80 e0       	ldi	r24, 0x00	; 0
     b36:	90 e0       	ldi	r25, 0x00	; 0
     b38:	0e 94 47 11 	call	0x228e	; 0x228e <__floatunsisf>
     b3c:	f1 01       	movw	r30, r2
     b3e:	64 87       	std	Z+12, r22	; 0x0c
     b40:	75 87       	std	Z+13, r23	; 0x0d
     b42:	86 87       	std	Z+14, r24	; 0x0e
     b44:	97 87       	std	Z+15, r25	; 0x0f
		data[4] = x[bottom];
     b46:	a0 90 40 01 	lds	r10, 0x0140
     b4a:	b0 90 41 01 	lds	r11, 0x0141
     b4e:	aa 0c       	add	r10, r10
     b50:	bb 1c       	adc	r11, r11
     b52:	f5 01       	movw	r30, r10
     b54:	ec 5c       	subi	r30, 0xCC	; 204
     b56:	fe 4f       	sbci	r31, 0xFE	; 254
     b58:	60 81       	ld	r22, Z
     b5a:	71 81       	ldd	r23, Z+1	; 0x01
     b5c:	80 e0       	ldi	r24, 0x00	; 0
     b5e:	90 e0       	ldi	r25, 0x00	; 0
     b60:	0e 94 47 11 	call	0x228e	; 0x228e <__floatunsisf>
     b64:	f1 01       	movw	r30, r2
     b66:	60 8b       	std	Z+16, r22	; 0x10
     b68:	71 8b       	std	Z+17, r23	; 0x11
     b6a:	82 8b       	std	Z+18, r24	; 0x12
     b6c:	93 8b       	std	Z+19, r25	; 0x13
		data[5] = y[top];
     b6e:	f8 01       	movw	r30, r16
     b70:	e4 5d       	subi	r30, 0xD4	; 212
     b72:	fe 4f       	sbci	r31, 0xFE	; 254
     b74:	60 81       	ld	r22, Z
     b76:	71 81       	ldd	r23, Z+1	; 0x01
     b78:	80 e0       	ldi	r24, 0x00	; 0
     b7a:	90 e0       	ldi	r25, 0x00	; 0
     b7c:	0e 94 47 11 	call	0x228e	; 0x228e <__floatunsisf>
     b80:	f1 01       	movw	r30, r2
     b82:	64 8b       	std	Z+20, r22	; 0x14
     b84:	75 8b       	std	Z+21, r23	; 0x15
     b86:	86 8b       	std	Z+22, r24	; 0x16
     b88:	97 8b       	std	Z+23, r25	; 0x17
		data[6] = y[bottom];
     b8a:	f5 01       	movw	r30, r10
     b8c:	e4 5d       	subi	r30, 0xD4	; 212
     b8e:	fe 4f       	sbci	r31, 0xFE	; 254
     b90:	60 81       	ld	r22, Z
     b92:	71 81       	ldd	r23, Z+1	; 0x01
     b94:	80 e0       	ldi	r24, 0x00	; 0
     b96:	90 e0       	ldi	r25, 0x00	; 0
     b98:	0e 94 47 11 	call	0x228e	; 0x228e <__floatunsisf>
     b9c:	f1 01       	movw	r30, r2
     b9e:	60 8f       	std	Z+24, r22	; 0x18
     ba0:	71 8f       	std	Z+25, r23	; 0x19
     ba2:	82 8f       	std	Z+26, r24	; 0x1a
     ba4:	93 8f       	std	Z+27, r25	; 0x1b
		data[7] = phi * 180.0 / 3.14;
     ba6:	20 e0       	ldi	r18, 0x00	; 0
     ba8:	30 e0       	ldi	r19, 0x00	; 0
     baa:	44 e3       	ldi	r20, 0x34	; 52
     bac:	53 e4       	ldi	r21, 0x43	; 67
     bae:	c7 01       	movw	r24, r14
     bb0:	b6 01       	movw	r22, r12
     bb2:	0e 94 62 12 	call	0x24c4	; 0x24c4 <__mulsf3>
     bb6:	23 ec       	ldi	r18, 0xC3	; 195
     bb8:	35 ef       	ldi	r19, 0xF5	; 245
     bba:	48 e4       	ldi	r20, 0x48	; 72
     bbc:	50 e4       	ldi	r21, 0x40	; 64
     bbe:	0e 94 ae 10 	call	0x215c	; 0x215c <__divsf3>
     bc2:	f1 01       	movw	r30, r2
     bc4:	64 8f       	std	Z+28, r22	; 0x1c
     bc6:	75 8f       	std	Z+29, r23	; 0x1d
     bc8:	86 8f       	std	Z+30, r24	; 0x1e
     bca:	97 8f       	std	Z+31, r25	; 0x1f
		data[8] = posx;
     bcc:	59 81       	ldd	r21, Y+1	; 0x01
     bce:	4d 81       	ldd	r20, Y+5	; 0x05
     bd0:	3a 85       	ldd	r19, Y+10	; 0x0a
     bd2:	29 85       	ldd	r18, Y+9	; 0x09
     bd4:	85 2f       	mov	r24, r21
     bd6:	94 2f       	mov	r25, r20
     bd8:	a3 2f       	mov	r26, r19
     bda:	b2 2f       	mov	r27, r18
     bdc:	80 a3       	std	Z+32, r24	; 0x20
     bde:	91 a3       	std	Z+33, r25	; 0x21
     be0:	a2 a3       	std	Z+34, r26	; 0x22
     be2:	b3 a3       	std	Z+35, r27	; 0x23
		data[9] = posy;
     be4:	5e 85       	ldd	r21, Y+14	; 0x0e
     be6:	4a 89       	ldd	r20, Y+18	; 0x12
     be8:	3b 89       	ldd	r19, Y+19	; 0x13
     bea:	2c 89       	ldd	r18, Y+20	; 0x14
     bec:	85 2f       	mov	r24, r21
     bee:	94 2f       	mov	r25, r20
     bf0:	a3 2f       	mov	r26, r19
     bf2:	b2 2f       	mov	r27, r18
     bf4:	84 a3       	std	Z+36, r24	; 0x24
     bf6:	95 a3       	std	Z+37, r25	; 0x25
     bf8:	a6 a3       	std	Z+38, r26	; 0x26
     bfa:	b7 a3       	std	Z+39, r27	; 0x27
		return 1;
     bfc:	81 e0       	ldi	r24, 0x01	; 1
     bfe:	49 c5       	rjmp	.+2706   	; 0x1692 <__stack+0xb93>
	}
	
	else if (x[top] < 1023 && x[left] < 1023) {
     c00:	e0 90 3e 01 	lds	r14, 0x013E
     c04:	f0 90 3f 01 	lds	r15, 0x013F
     c08:	f7 01       	movw	r30, r14
     c0a:	ee 0f       	add	r30, r30
     c0c:	ff 1f       	adc	r31, r31
     c0e:	ec 5c       	subi	r30, 0xCC	; 204
     c10:	fe 4f       	sbci	r31, 0xFE	; 254
     c12:	c0 80       	ld	r12, Z
     c14:	d1 80       	ldd	r13, Z+1	; 0x01
     c16:	ff ef       	ldi	r31, 0xFF	; 255
     c18:	cf 16       	cp	r12, r31
     c1a:	f3 e0       	ldi	r31, 0x03	; 3
     c1c:	df 06       	cpc	r13, r31
     c1e:	08 f0       	brcs	.+2      	; 0xc22 <__stack+0x123>
     c20:	3c c1       	rjmp	.+632    	; 0xe9a <__stack+0x39b>
		beta = (float) atan2(((double) ((float)x[top]-(float)x[left])), ((double) ((float)y[top]-(float)y[left])));
     c22:	f5 01       	movw	r30, r10
     c24:	ee 0f       	add	r30, r30
     c26:	ff 1f       	adc	r31, r31
     c28:	e4 5d       	subi	r30, 0xD4	; 212
     c2a:	fe 4f       	sbci	r31, 0xFE	; 254
     c2c:	60 81       	ld	r22, Z
     c2e:	71 81       	ldd	r23, Z+1	; 0x01
     c30:	80 e0       	ldi	r24, 0x00	; 0
     c32:	90 e0       	ldi	r25, 0x00	; 0
     c34:	0e 94 47 11 	call	0x228e	; 0x228e <__floatunsisf>
     c38:	4b 01       	movw	r8, r22
     c3a:	5c 01       	movw	r10, r24
     c3c:	2d 89       	ldd	r18, Y+21	; 0x15
     c3e:	3e 89       	ldd	r19, Y+22	; 0x16
     c40:	b9 01       	movw	r22, r18
     c42:	80 e0       	ldi	r24, 0x00	; 0
     c44:	90 e0       	ldi	r25, 0x00	; 0
     c46:	0e 94 47 11 	call	0x228e	; 0x228e <__floatunsisf>
     c4a:	2b 01       	movw	r4, r22
     c4c:	3c 01       	movw	r6, r24
     c4e:	f7 01       	movw	r30, r14
     c50:	ee 0f       	add	r30, r30
     c52:	ff 1f       	adc	r31, r31
     c54:	e4 5d       	subi	r30, 0xD4	; 212
     c56:	fe 4f       	sbci	r31, 0xFE	; 254
     c58:	60 81       	ld	r22, Z
     c5a:	71 81       	ldd	r23, Z+1	; 0x01
     c5c:	80 e0       	ldi	r24, 0x00	; 0
     c5e:	90 e0       	ldi	r25, 0x00	; 0
     c60:	0e 94 47 11 	call	0x228e	; 0x228e <__floatunsisf>
     c64:	9b 01       	movw	r18, r22
     c66:	ac 01       	movw	r20, r24
     c68:	c5 01       	movw	r24, r10
     c6a:	b4 01       	movw	r22, r8
     c6c:	0e 94 e0 0f 	call	0x1fc0	; 0x1fc0 <__subsf3>
     c70:	69 83       	std	Y+1, r22	; 0x01
     c72:	7a 83       	std	Y+2, r23	; 0x02
     c74:	8b 83       	std	Y+3, r24	; 0x03
     c76:	9c 83       	std	Y+4, r25	; 0x04
     c78:	b6 01       	movw	r22, r12
     c7a:	80 e0       	ldi	r24, 0x00	; 0
     c7c:	90 e0       	ldi	r25, 0x00	; 0
     c7e:	0e 94 47 11 	call	0x228e	; 0x228e <__floatunsisf>
     c82:	9b 01       	movw	r18, r22
     c84:	ac 01       	movw	r20, r24
     c86:	c3 01       	movw	r24, r6
     c88:	b2 01       	movw	r22, r4
     c8a:	0e 94 e0 0f 	call	0x1fc0	; 0x1fc0 <__subsf3>
     c8e:	29 81       	ldd	r18, Y+1	; 0x01
     c90:	3a 81       	ldd	r19, Y+2	; 0x02
     c92:	4b 81       	ldd	r20, Y+3	; 0x03
     c94:	5c 81       	ldd	r21, Y+4	; 0x04
     c96:	0e 94 54 10 	call	0x20a8	; 0x20a8 <atan2>
     c9a:	69 83       	std	Y+1, r22	; 0x01
     c9c:	7a 83       	std	Y+2, r23	; 0x02
     c9e:	8b 83       	std	Y+3, r24	; 0x03
     ca0:	9c 83       	std	Y+4, r25	; 0x04
		
		//this theta is constant, considering defining it as such
		//to save calculation time
		posx = rcenterx - (128.0/1023.0)*((float)x[top]-dcenter * (float)sin((double) (theta_top_left-beta)));
     ca2:	c0 90 08 01 	lds	r12, 0x0108
     ca6:	d0 90 09 01 	lds	r13, 0x0109
     caa:	e0 90 0a 01 	lds	r14, 0x010A
     cae:	f0 90 0b 01 	lds	r15, 0x010B
     cb2:	9b 01       	movw	r18, r22
     cb4:	ac 01       	movw	r20, r24
     cb6:	6d e1       	ldi	r22, 0x1D	; 29
     cb8:	76 e8       	ldi	r23, 0x86	; 134
     cba:	89 e5       	ldi	r24, 0x59	; 89
     cbc:	9f e3       	ldi	r25, 0x3F	; 63
     cbe:	0e 94 e0 0f 	call	0x1fc0	; 0x1fc0 <__subsf3>
     cc2:	6a 87       	std	Y+10, r22	; 0x0a
     cc4:	79 87       	std	Y+9, r23	; 0x09
     cc6:	8e 87       	std	Y+14, r24	; 0x0e
     cc8:	9a 8b       	std	Y+18, r25	; 0x12
     cca:	0e 94 c5 12 	call	0x258a	; 0x258a <sin>
     cce:	20 91 20 01 	lds	r18, 0x0120
     cd2:	30 91 21 01 	lds	r19, 0x0121
     cd6:	40 91 22 01 	lds	r20, 0x0122
     cda:	50 91 23 01 	lds	r21, 0x0123
     cde:	2d 83       	std	Y+5, r18	; 0x05
     ce0:	3e 83       	std	Y+6, r19	; 0x06
     ce2:	4f 83       	std	Y+7, r20	; 0x07
     ce4:	58 87       	std	Y+8, r21	; 0x08
     ce6:	0e 94 62 12 	call	0x24c4	; 0x24c4 <__mulsf3>
     cea:	9b 01       	movw	r18, r22
     cec:	ac 01       	movw	r20, r24
     cee:	c3 01       	movw	r24, r6
     cf0:	b2 01       	movw	r22, r4
     cf2:	0e 94 e0 0f 	call	0x1fc0	; 0x1fc0 <__subsf3>
     cf6:	28 e0       	ldi	r18, 0x08	; 8
     cf8:	30 e2       	ldi	r19, 0x20	; 32
     cfa:	40 e0       	ldi	r20, 0x00	; 0
     cfc:	5e e3       	ldi	r21, 0x3E	; 62
     cfe:	0e 94 62 12 	call	0x24c4	; 0x24c4 <__mulsf3>
     d02:	9b 01       	movw	r18, r22
     d04:	ac 01       	movw	r20, r24
     d06:	c7 01       	movw	r24, r14
     d08:	b6 01       	movw	r22, r12
     d0a:	0e 94 e0 0f 	call	0x1fc0	; 0x1fc0 <__subsf3>
     d0e:	6b 8b       	std	Y+19, r22	; 0x13
     d10:	7c 8b       	std	Y+20, r23	; 0x14
     d12:	18 2f       	mov	r17, r24
     d14:	09 2f       	mov	r16, r25
		posy = rcentery - (96.0/1023.0)*((float)y[top]+0.5*dcenter * (float)cos((double) (theta_top_left-beta)));
     d16:	5a 85       	ldd	r21, Y+10	; 0x0a
     d18:	49 85       	ldd	r20, Y+9	; 0x09
     d1a:	3e 85       	ldd	r19, Y+14	; 0x0e
     d1c:	2a 89       	ldd	r18, Y+18	; 0x12
     d1e:	65 2f       	mov	r22, r21
     d20:	74 2f       	mov	r23, r20
     d22:	83 2f       	mov	r24, r19
     d24:	92 2f       	mov	r25, r18
     d26:	0e 94 ab 10 	call	0x2156	; 0x2156 <cos>
     d2a:	2b 01       	movw	r4, r22
     d2c:	3c 01       	movw	r6, r24
     d2e:	20 e0       	ldi	r18, 0x00	; 0
     d30:	30 e0       	ldi	r19, 0x00	; 0
     d32:	40 e0       	ldi	r20, 0x00	; 0
     d34:	5f e3       	ldi	r21, 0x3F	; 63
     d36:	6d 81       	ldd	r22, Y+5	; 0x05
     d38:	7e 81       	ldd	r23, Y+6	; 0x06
     d3a:	8f 81       	ldd	r24, Y+7	; 0x07
     d3c:	98 85       	ldd	r25, Y+8	; 0x08
     d3e:	0e 94 62 12 	call	0x24c4	; 0x24c4 <__mulsf3>
     d42:	a3 01       	movw	r20, r6
     d44:	92 01       	movw	r18, r4
     d46:	0e 94 62 12 	call	0x24c4	; 0x24c4 <__mulsf3>
     d4a:	9b 01       	movw	r18, r22
     d4c:	ac 01       	movw	r20, r24
     d4e:	c5 01       	movw	r24, r10
     d50:	b4 01       	movw	r22, r8
     d52:	0e 94 e1 0f 	call	0x1fc2	; 0x1fc2 <__addsf3>
     d56:	2c e0       	ldi	r18, 0x0C	; 12
     d58:	30 e3       	ldi	r19, 0x30	; 48
     d5a:	40 ec       	ldi	r20, 0xC0	; 192
     d5c:	5d e3       	ldi	r21, 0x3D	; 61
     d5e:	0e 94 62 12 	call	0x24c4	; 0x24c4 <__mulsf3>
     d62:	9b 01       	movw	r18, r22
     d64:	ac 01       	movw	r20, r24
     d66:	60 91 04 01 	lds	r22, 0x0104
     d6a:	70 91 05 01 	lds	r23, 0x0105
     d6e:	80 91 06 01 	lds	r24, 0x0106
     d72:	90 91 07 01 	lds	r25, 0x0107
     d76:	0e 94 e0 0f 	call	0x1fc0	; 0x1fc0 <__subsf3>
     d7a:	86 2e       	mov	r8, r22
     d7c:	97 2e       	mov	r9, r23
     d7e:	a8 2e       	mov	r10, r24
     d80:	b9 2e       	mov	r11, r25
		
		angle = theta_top_left + beta;
     d82:	2d e1       	ldi	r18, 0x1D	; 29
     d84:	36 e8       	ldi	r19, 0x86	; 134
     d86:	49 e5       	ldi	r20, 0x59	; 89
     d88:	5f e3       	ldi	r21, 0x3F	; 63
     d8a:	69 81       	ldd	r22, Y+1	; 0x01
     d8c:	7a 81       	ldd	r23, Y+2	; 0x02
     d8e:	8b 81       	ldd	r24, Y+3	; 0x03
     d90:	9c 81       	ldd	r25, Y+4	; 0x04
     d92:	0e 94 e1 0f 	call	0x1fc2	; 0x1fc2 <__addsf3>
     d96:	69 83       	std	Y+1, r22	; 0x01
     d98:	7d 83       	std	Y+5, r23	; 0x05
     d9a:	8a 87       	std	Y+10, r24	; 0x0a
     d9c:	99 87       	std	Y+9, r25	; 0x09
		phi = -1.0 * (float) atan2((double)posy, (double)posx);
     d9e:	7b 89       	ldd	r23, Y+19	; 0x13
     da0:	6c 89       	ldd	r22, Y+20	; 0x14
     da2:	27 2f       	mov	r18, r23
     da4:	36 2f       	mov	r19, r22
     da6:	41 2f       	mov	r20, r17
     da8:	50 2f       	mov	r21, r16
     daa:	68 2d       	mov	r22, r8
     dac:	79 2d       	mov	r23, r9
     dae:	8a 2d       	mov	r24, r10
     db0:	9b 2d       	mov	r25, r11
     db2:	0e 94 54 10 	call	0x20a8	; 0x20a8 <atan2>
     db6:	2b 01       	movw	r4, r22
     db8:	3c 01       	movw	r6, r24
		
		r = (float) sqrt((double)((posx*posx)+(posy*posy)));
     dba:	7b 89       	ldd	r23, Y+19	; 0x13
     dbc:	6c 89       	ldd	r22, Y+20	; 0x14
     dbe:	27 2f       	mov	r18, r23
     dc0:	36 2f       	mov	r19, r22
     dc2:	41 2f       	mov	r20, r17
     dc4:	50 2f       	mov	r21, r16
     dc6:	67 2f       	mov	r22, r23
     dc8:	73 2f       	mov	r23, r19
     dca:	81 2f       	mov	r24, r17
     dcc:	90 2f       	mov	r25, r16
     dce:	0e 94 62 12 	call	0x24c4	; 0x24c4 <__mulsf3>
     dd2:	6e 87       	std	Y+14, r22	; 0x0e
     dd4:	7f 87       	std	Y+15, r23	; 0x0f
     dd6:	88 8b       	std	Y+16, r24	; 0x10
     dd8:	99 8b       	std	Y+17, r25	; 0x11
     dda:	28 2d       	mov	r18, r8
     ddc:	39 2d       	mov	r19, r9
     dde:	4a 2d       	mov	r20, r10
     de0:	5b 2d       	mov	r21, r11
     de2:	68 2d       	mov	r22, r8
     de4:	79 2d       	mov	r23, r9
     de6:	8a 2d       	mov	r24, r10
     de8:	9b 2d       	mov	r25, r11
     dea:	0e 94 62 12 	call	0x24c4	; 0x24c4 <__mulsf3>
     dee:	9b 01       	movw	r18, r22
     df0:	ac 01       	movw	r20, r24
     df2:	6e 85       	ldd	r22, Y+14	; 0x0e
     df4:	7f 85       	ldd	r23, Y+15	; 0x0f
     df6:	88 89       	ldd	r24, Y+16	; 0x10
     df8:	99 89       	ldd	r25, Y+17	; 0x11
     dfa:	0e 94 e1 0f 	call	0x1fc2	; 0x1fc2 <__addsf3>
     dfe:	0e 94 cf 12 	call	0x259e	; 0x259e <sqrt>
     e02:	4b 01       	movw	r8, r22
     e04:	5c 01       	movw	r10, r24
		
		data[0] = rcenterx - r * (float)cos((double) (angle-phi));
     e06:	a3 01       	movw	r20, r6
     e08:	92 01       	movw	r18, r4
     e0a:	b9 81       	ldd	r27, Y+1	; 0x01
     e0c:	ad 81       	ldd	r26, Y+5	; 0x05
     e0e:	ea 85       	ldd	r30, Y+10	; 0x0a
     e10:	19 85       	ldd	r17, Y+9	; 0x09
     e12:	6b 2f       	mov	r22, r27
     e14:	7a 2f       	mov	r23, r26
     e16:	8e 2f       	mov	r24, r30
     e18:	91 2f       	mov	r25, r17
     e1a:	0e 94 e1 0f 	call	0x1fc2	; 0x1fc2 <__addsf3>
     e1e:	06 2f       	mov	r16, r22
     e20:	17 2f       	mov	r17, r23
     e22:	68 2e       	mov	r6, r24
     e24:	79 2e       	mov	r7, r25
     e26:	0e 94 ab 10 	call	0x2156	; 0x2156 <cos>
     e2a:	a5 01       	movw	r20, r10
     e2c:	94 01       	movw	r18, r8
     e2e:	0e 94 62 12 	call	0x24c4	; 0x24c4 <__mulsf3>
     e32:	9b 01       	movw	r18, r22
     e34:	ac 01       	movw	r20, r24
     e36:	c7 01       	movw	r24, r14
     e38:	b6 01       	movw	r22, r12
     e3a:	0e 94 e0 0f 	call	0x1fc0	; 0x1fc0 <__subsf3>
     e3e:	f1 01       	movw	r30, r2
     e40:	60 83       	st	Z, r22
     e42:	71 83       	std	Z+1, r23	; 0x01
     e44:	82 83       	std	Z+2, r24	; 0x02
     e46:	93 83       	std	Z+3, r25	; 0x03
		data[1] = rcentery - r * (float)sin((double) (angle-phi));
     e48:	60 2f       	mov	r22, r16
     e4a:	71 2f       	mov	r23, r17
     e4c:	86 2d       	mov	r24, r6
     e4e:	97 2d       	mov	r25, r7
     e50:	0e 94 c5 12 	call	0x258a	; 0x258a <sin>
     e54:	a5 01       	movw	r20, r10
     e56:	94 01       	movw	r18, r8
     e58:	0e 94 62 12 	call	0x24c4	; 0x24c4 <__mulsf3>
     e5c:	9b 01       	movw	r18, r22
     e5e:	ac 01       	movw	r20, r24
     e60:	60 91 04 01 	lds	r22, 0x0104
     e64:	70 91 05 01 	lds	r23, 0x0105
     e68:	80 91 06 01 	lds	r24, 0x0106
     e6c:	90 91 07 01 	lds	r25, 0x0107
     e70:	0e 94 e0 0f 	call	0x1fc0	; 0x1fc0 <__subsf3>
     e74:	f1 01       	movw	r30, r2
     e76:	64 83       	std	Z+4, r22	; 0x04
     e78:	75 83       	std	Z+5, r23	; 0x05
     e7a:	86 83       	std	Z+6, r24	; 0x06
     e7c:	97 83       	std	Z+7, r25	; 0x07
		data[2] = angle;
     e7e:	59 81       	ldd	r21, Y+1	; 0x01
     e80:	4d 81       	ldd	r20, Y+5	; 0x05
     e82:	3a 85       	ldd	r19, Y+10	; 0x0a
     e84:	29 85       	ldd	r18, Y+9	; 0x09
     e86:	85 2f       	mov	r24, r21
     e88:	94 2f       	mov	r25, r20
     e8a:	a3 2f       	mov	r26, r19
     e8c:	b2 2f       	mov	r27, r18
     e8e:	80 87       	std	Z+8, r24	; 0x08
     e90:	91 87       	std	Z+9, r25	; 0x09
     e92:	a2 87       	std	Z+10, r26	; 0x0a
     e94:	b3 87       	std	Z+11, r27	; 0x0b
		return 1;
     e96:	81 e0       	ldi	r24, 0x01	; 1
     e98:	fc c3       	rjmp	.+2040   	; 0x1692 <__stack+0xb93>
	}
	
	else if (x[top] < 1023 && x[right] < 1023) {
     e9a:	e0 90 3c 01 	lds	r14, 0x013C
     e9e:	f0 90 3d 01 	lds	r15, 0x013D
     ea2:	f7 01       	movw	r30, r14
     ea4:	ee 0f       	add	r30, r30
     ea6:	ff 1f       	adc	r31, r31
     ea8:	ec 5c       	subi	r30, 0xCC	; 204
     eaa:	fe 4f       	sbci	r31, 0xFE	; 254
     eac:	00 81       	ld	r16, Z
     eae:	11 81       	ldd	r17, Z+1	; 0x01
     eb0:	0f 3f       	cpi	r16, 0xFF	; 255
     eb2:	f3 e0       	ldi	r31, 0x03	; 3
     eb4:	1f 07       	cpc	r17, r31
     eb6:	08 f0       	brcs	.+2      	; 0xeba <__stack+0x3bb>
     eb8:	dd c3       	rjmp	.+1978   	; 0x1674 <__stack+0xb75>
		beta = (float)atan2((double) ((float)x[top]-(float)x[right]),((double) (float)y[top]-(float)y[right]));
     eba:	f5 01       	movw	r30, r10
     ebc:	ee 0f       	add	r30, r30
     ebe:	ff 1f       	adc	r31, r31
     ec0:	e4 5d       	subi	r30, 0xD4	; 212
     ec2:	fe 4f       	sbci	r31, 0xFE	; 254
     ec4:	60 81       	ld	r22, Z
     ec6:	71 81       	ldd	r23, Z+1	; 0x01
     ec8:	80 e0       	ldi	r24, 0x00	; 0
     eca:	90 e0       	ldi	r25, 0x00	; 0
     ecc:	0e 94 47 11 	call	0x228e	; 0x228e <__floatunsisf>
     ed0:	4b 01       	movw	r8, r22
     ed2:	5c 01       	movw	r10, r24
     ed4:	2d 89       	ldd	r18, Y+21	; 0x15
     ed6:	3e 89       	ldd	r19, Y+22	; 0x16
     ed8:	b9 01       	movw	r22, r18
     eda:	80 e0       	ldi	r24, 0x00	; 0
     edc:	90 e0       	ldi	r25, 0x00	; 0
     ede:	0e 94 47 11 	call	0x228e	; 0x228e <__floatunsisf>
     ee2:	2b 01       	movw	r4, r22
     ee4:	3c 01       	movw	r6, r24
     ee6:	f7 01       	movw	r30, r14
     ee8:	ee 0f       	add	r30, r30
     eea:	ff 1f       	adc	r31, r31
     eec:	e4 5d       	subi	r30, 0xD4	; 212
     eee:	fe 4f       	sbci	r31, 0xFE	; 254
     ef0:	60 81       	ld	r22, Z
     ef2:	71 81       	ldd	r23, Z+1	; 0x01
     ef4:	80 e0       	ldi	r24, 0x00	; 0
     ef6:	90 e0       	ldi	r25, 0x00	; 0
     ef8:	0e 94 47 11 	call	0x228e	; 0x228e <__floatunsisf>
     efc:	9b 01       	movw	r18, r22
     efe:	ac 01       	movw	r20, r24
     f00:	c5 01       	movw	r24, r10
     f02:	b4 01       	movw	r22, r8
     f04:	0e 94 e0 0f 	call	0x1fc0	; 0x1fc0 <__subsf3>
     f08:	6b 01       	movw	r12, r22
     f0a:	7c 01       	movw	r14, r24
     f0c:	b8 01       	movw	r22, r16
     f0e:	80 e0       	ldi	r24, 0x00	; 0
     f10:	90 e0       	ldi	r25, 0x00	; 0
     f12:	0e 94 47 11 	call	0x228e	; 0x228e <__floatunsisf>
     f16:	9b 01       	movw	r18, r22
     f18:	ac 01       	movw	r20, r24
     f1a:	c3 01       	movw	r24, r6
     f1c:	b2 01       	movw	r22, r4
     f1e:	0e 94 e0 0f 	call	0x1fc0	; 0x1fc0 <__subsf3>
     f22:	a7 01       	movw	r20, r14
     f24:	96 01       	movw	r18, r12
     f26:	0e 94 54 10 	call	0x20a8	; 0x20a8 <atan2>
     f2a:	69 83       	std	Y+1, r22	; 0x01
     f2c:	7a 83       	std	Y+2, r23	; 0x02
     f2e:	8b 83       	std	Y+3, r24	; 0x03
     f30:	9c 83       	std	Y+4, r25	; 0x04

		posx = rcenterx - (128.0/1023.0)*((float)x[top]+0.5*dcenter * (float)sin((double) (theta_top_right-beta)));
     f32:	c0 90 08 01 	lds	r12, 0x0108
     f36:	d0 90 09 01 	lds	r13, 0x0109
     f3a:	e0 90 0a 01 	lds	r14, 0x010A
     f3e:	f0 90 0b 01 	lds	r15, 0x010B
     f42:	20 e0       	ldi	r18, 0x00	; 0
     f44:	30 e0       	ldi	r19, 0x00	; 0
     f46:	40 e0       	ldi	r20, 0x00	; 0
     f48:	5f e3       	ldi	r21, 0x3F	; 63
     f4a:	60 91 20 01 	lds	r22, 0x0120
     f4e:	70 91 21 01 	lds	r23, 0x0121
     f52:	80 91 22 01 	lds	r24, 0x0122
     f56:	90 91 23 01 	lds	r25, 0x0123
     f5a:	0e 94 62 12 	call	0x24c4	; 0x24c4 <__mulsf3>
     f5e:	6d 83       	std	Y+5, r22	; 0x05
     f60:	7a 87       	std	Y+10, r23	; 0x0a
     f62:	89 87       	std	Y+9, r24	; 0x09
     f64:	9e 87       	std	Y+14, r25	; 0x0e
     f66:	29 81       	ldd	r18, Y+1	; 0x01
     f68:	3a 81       	ldd	r19, Y+2	; 0x02
     f6a:	4b 81       	ldd	r20, Y+3	; 0x03
     f6c:	5c 81       	ldd	r21, Y+4	; 0x04
     f6e:	67 ec       	ldi	r22, 0xC7	; 199
     f70:	7e ef       	ldi	r23, 0xFE	; 254
     f72:	8d ee       	ldi	r24, 0xED	; 237
     f74:	9e e3       	ldi	r25, 0x3E	; 62
     f76:	0e 94 e0 0f 	call	0x1fc0	; 0x1fc0 <__subsf3>
     f7a:	6c 8b       	std	Y+20, r22	; 0x14
     f7c:	7d 8b       	std	Y+21, r23	; 0x15
     f7e:	8a 8b       	std	Y+18, r24	; 0x12
     f80:	9b 8b       	std	Y+19, r25	; 0x13
     f82:	0e 94 c5 12 	call	0x258a	; 0x258a <sin>
     f86:	9b 01       	movw	r18, r22
     f88:	ac 01       	movw	r20, r24
     f8a:	bd 81       	ldd	r27, Y+5	; 0x05
     f8c:	aa 85       	ldd	r26, Y+10	; 0x0a
     f8e:	19 85       	ldd	r17, Y+9	; 0x09
     f90:	0e 85       	ldd	r16, Y+14	; 0x0e
     f92:	6b 2f       	mov	r22, r27
     f94:	7a 2f       	mov	r23, r26
     f96:	81 2f       	mov	r24, r17
     f98:	90 2f       	mov	r25, r16
     f9a:	0e 94 62 12 	call	0x24c4	; 0x24c4 <__mulsf3>
     f9e:	9b 01       	movw	r18, r22
     fa0:	ac 01       	movw	r20, r24
     fa2:	c3 01       	movw	r24, r6
     fa4:	b2 01       	movw	r22, r4
     fa6:	0e 94 e1 0f 	call	0x1fc2	; 0x1fc2 <__addsf3>
     faa:	28 e0       	ldi	r18, 0x08	; 8
     fac:	30 e2       	ldi	r19, 0x20	; 32
     fae:	40 e0       	ldi	r20, 0x00	; 0
     fb0:	5e e3       	ldi	r21, 0x3E	; 62
     fb2:	0e 94 62 12 	call	0x24c4	; 0x24c4 <__mulsf3>
     fb6:	9b 01       	movw	r18, r22
     fb8:	ac 01       	movw	r20, r24
     fba:	c7 01       	movw	r24, r14
     fbc:	b6 01       	movw	r22, r12
     fbe:	0e 94 e0 0f 	call	0x1fc0	; 0x1fc0 <__subsf3>
     fc2:	66 2e       	mov	r6, r22
     fc4:	77 2e       	mov	r7, r23
     fc6:	08 2f       	mov	r16, r24
     fc8:	19 2f       	mov	r17, r25
		posy = rcentery - (96.0/1023.0)*((float)y[top]-0.5*dcenter * (float)cos((double)  (theta_top_right-beta)));
     fca:	5c 89       	ldd	r21, Y+20	; 0x14
     fcc:	4d 89       	ldd	r20, Y+21	; 0x15
     fce:	3a 89       	ldd	r19, Y+18	; 0x12
     fd0:	2b 89       	ldd	r18, Y+19	; 0x13
     fd2:	65 2f       	mov	r22, r21
     fd4:	74 2f       	mov	r23, r20
     fd6:	83 2f       	mov	r24, r19
     fd8:	92 2f       	mov	r25, r18
     fda:	0e 94 ab 10 	call	0x2156	; 0x2156 <cos>
     fde:	9b 01       	movw	r18, r22
     fe0:	ac 01       	movw	r20, r24
     fe2:	bd 81       	ldd	r27, Y+5	; 0x05
     fe4:	aa 85       	ldd	r26, Y+10	; 0x0a
     fe6:	e9 85       	ldd	r30, Y+9	; 0x09
     fe8:	5e 84       	ldd	r5, Y+14	; 0x0e
     fea:	6b 2f       	mov	r22, r27
     fec:	7a 2f       	mov	r23, r26
     fee:	8e 2f       	mov	r24, r30
     ff0:	95 2d       	mov	r25, r5
     ff2:	0e 94 62 12 	call	0x24c4	; 0x24c4 <__mulsf3>
     ff6:	9b 01       	movw	r18, r22
     ff8:	ac 01       	movw	r20, r24
     ffa:	c5 01       	movw	r24, r10
     ffc:	b4 01       	movw	r22, r8
     ffe:	0e 94 e0 0f 	call	0x1fc0	; 0x1fc0 <__subsf3>
    1002:	2c e0       	ldi	r18, 0x0C	; 12
    1004:	30 e3       	ldi	r19, 0x30	; 48
    1006:	40 ec       	ldi	r20, 0xC0	; 192
    1008:	5d e3       	ldi	r21, 0x3D	; 61
    100a:	0e 94 62 12 	call	0x24c4	; 0x24c4 <__mulsf3>
    100e:	9b 01       	movw	r18, r22
    1010:	ac 01       	movw	r20, r24
    1012:	60 91 04 01 	lds	r22, 0x0104
    1016:	70 91 05 01 	lds	r23, 0x0105
    101a:	80 91 06 01 	lds	r24, 0x0106
    101e:	90 91 07 01 	lds	r25, 0x0107
    1022:	0e 94 e0 0f 	call	0x1fc0	; 0x1fc0 <__subsf3>
    1026:	a6 2e       	mov	r10, r22
    1028:	b7 2e       	mov	r11, r23
    102a:	8e 87       	std	Y+14, r24	; 0x0e
    102c:	99 87       	std	Y+9, r25	; 0x09
		
		angle = -1.0 * theta_top_right - beta;
    102e:	29 81       	ldd	r18, Y+1	; 0x01
    1030:	3a 81       	ldd	r19, Y+2	; 0x02
    1032:	4b 81       	ldd	r20, Y+3	; 0x03
    1034:	5c 81       	ldd	r21, Y+4	; 0x04
    1036:	67 ec       	ldi	r22, 0xC7	; 199
    1038:	7e ef       	ldi	r23, 0xFE	; 254
    103a:	8d ee       	ldi	r24, 0xED	; 237
    103c:	9e eb       	ldi	r25, 0xBE	; 190
    103e:	0e 94 e0 0f 	call	0x1fc0	; 0x1fc0 <__subsf3>
    1042:	69 83       	std	Y+1, r22	; 0x01
    1044:	7d 83       	std	Y+5, r23	; 0x05
    1046:	48 2e       	mov	r4, r24
    1048:	59 2e       	mov	r5, r25
		phi = -1.0 * (float) atan2((double)posy,(double)posx);
    104a:	26 2d       	mov	r18, r6
    104c:	37 2d       	mov	r19, r7
    104e:	40 2f       	mov	r20, r16
    1050:	51 2f       	mov	r21, r17
    1052:	fe 85       	ldd	r31, Y+14	; 0x0e
    1054:	e9 85       	ldd	r30, Y+9	; 0x09
    1056:	6a 2d       	mov	r22, r10
    1058:	7b 2d       	mov	r23, r11
    105a:	8f 2f       	mov	r24, r31
    105c:	9e 2f       	mov	r25, r30
    105e:	0e 94 54 10 	call	0x20a8	; 0x20a8 <atan2>
    1062:	6a 87       	std	Y+10, r22	; 0x0a
    1064:	7b 87       	std	Y+11, r23	; 0x0b
    1066:	8c 87       	std	Y+12, r24	; 0x0c
    1068:	9d 87       	std	Y+13, r25	; 0x0d
		
		r = (float) sqrt((double) ((posx*posx)+(posy*posy)));
    106a:	26 2d       	mov	r18, r6
    106c:	37 2d       	mov	r19, r7
    106e:	40 2f       	mov	r20, r16
    1070:	51 2f       	mov	r21, r17
    1072:	66 2d       	mov	r22, r6
    1074:	77 2d       	mov	r23, r7
    1076:	80 2f       	mov	r24, r16
    1078:	91 2f       	mov	r25, r17
    107a:	0e 94 62 12 	call	0x24c4	; 0x24c4 <__mulsf3>
    107e:	3b 01       	movw	r6, r22
    1080:	4c 01       	movw	r8, r24
    1082:	9e 85       	ldd	r25, Y+14	; 0x0e
    1084:	89 85       	ldd	r24, Y+9	; 0x09
    1086:	2a 2d       	mov	r18, r10
    1088:	3b 2d       	mov	r19, r11
    108a:	49 2f       	mov	r20, r25
    108c:	58 2f       	mov	r21, r24
    108e:	6a 2d       	mov	r22, r10
    1090:	7b 2d       	mov	r23, r11
    1092:	89 2f       	mov	r24, r25
    1094:	95 2f       	mov	r25, r21
    1096:	0e 94 62 12 	call	0x24c4	; 0x24c4 <__mulsf3>
    109a:	9b 01       	movw	r18, r22
    109c:	ac 01       	movw	r20, r24
    109e:	c4 01       	movw	r24, r8
    10a0:	b3 01       	movw	r22, r6
    10a2:	0e 94 e1 0f 	call	0x1fc2	; 0x1fc2 <__addsf3>
    10a6:	0e 94 cf 12 	call	0x259e	; 0x259e <sqrt>
    10aa:	4b 01       	movw	r8, r22
    10ac:	5c 01       	movw	r10, r24
		
		data[0] = rcenterx - r * (float)cos((double) (angle - phi));
    10ae:	2a 85       	ldd	r18, Y+10	; 0x0a
    10b0:	3b 85       	ldd	r19, Y+11	; 0x0b
    10b2:	4c 85       	ldd	r20, Y+12	; 0x0c
    10b4:	5d 85       	ldd	r21, Y+13	; 0x0d
    10b6:	b9 81       	ldd	r27, Y+1	; 0x01
    10b8:	ad 81       	ldd	r26, Y+5	; 0x05
    10ba:	6b 2f       	mov	r22, r27
    10bc:	7a 2f       	mov	r23, r26
    10be:	84 2d       	mov	r24, r4
    10c0:	95 2d       	mov	r25, r5
    10c2:	0e 94 e1 0f 	call	0x1fc2	; 0x1fc2 <__addsf3>
    10c6:	06 2f       	mov	r16, r22
    10c8:	17 2f       	mov	r17, r23
    10ca:	68 2e       	mov	r6, r24
    10cc:	79 2e       	mov	r7, r25
    10ce:	0e 94 ab 10 	call	0x2156	; 0x2156 <cos>
    10d2:	a5 01       	movw	r20, r10
    10d4:	94 01       	movw	r18, r8
    10d6:	0e 94 62 12 	call	0x24c4	; 0x24c4 <__mulsf3>
    10da:	9b 01       	movw	r18, r22
    10dc:	ac 01       	movw	r20, r24
    10de:	c7 01       	movw	r24, r14
    10e0:	b6 01       	movw	r22, r12
    10e2:	0e 94 e0 0f 	call	0x1fc0	; 0x1fc0 <__subsf3>
    10e6:	f1 01       	movw	r30, r2
    10e8:	60 83       	st	Z, r22
    10ea:	71 83       	std	Z+1, r23	; 0x01
    10ec:	82 83       	std	Z+2, r24	; 0x02
    10ee:	93 83       	std	Z+3, r25	; 0x03
		data[1] = rcentery - r * (float)sin((double) (angle - phi));
    10f0:	60 2f       	mov	r22, r16
    10f2:	71 2f       	mov	r23, r17
    10f4:	86 2d       	mov	r24, r6
    10f6:	97 2d       	mov	r25, r7
    10f8:	0e 94 c5 12 	call	0x258a	; 0x258a <sin>
    10fc:	a5 01       	movw	r20, r10
    10fe:	94 01       	movw	r18, r8
    1100:	0e 94 62 12 	call	0x24c4	; 0x24c4 <__mulsf3>
    1104:	9b 01       	movw	r18, r22
    1106:	ac 01       	movw	r20, r24
    1108:	60 91 04 01 	lds	r22, 0x0104
    110c:	70 91 05 01 	lds	r23, 0x0105
    1110:	80 91 06 01 	lds	r24, 0x0106
    1114:	90 91 07 01 	lds	r25, 0x0107
    1118:	0e 94 e0 0f 	call	0x1fc0	; 0x1fc0 <__subsf3>
    111c:	f1 01       	movw	r30, r2
    111e:	64 83       	std	Z+4, r22	; 0x04
    1120:	75 83       	std	Z+5, r23	; 0x05
    1122:	86 83       	std	Z+6, r24	; 0x06
    1124:	97 83       	std	Z+7, r25	; 0x07
		data[2] = angle;
    1126:	59 81       	ldd	r21, Y+1	; 0x01
    1128:	4d 81       	ldd	r20, Y+5	; 0x05
    112a:	85 2f       	mov	r24, r21
    112c:	94 2f       	mov	r25, r20
    112e:	a4 2d       	mov	r26, r4
    1130:	b5 2d       	mov	r27, r5
    1132:	80 87       	std	Z+8, r24	; 0x08
    1134:	91 87       	std	Z+9, r25	; 0x09
    1136:	a2 87       	std	Z+10, r26	; 0x0a
    1138:	b3 87       	std	Z+11, r27	; 0x0b
		return 1;
    113a:	81 e0       	ldi	r24, 0x01	; 1
    113c:	aa c2       	rjmp	.+1364   	; 0x1692 <__stack+0xb93>
	}
	
	else if (x[bottom] < 1023 && x[left] < 1023) {
    113e:	80 91 40 01 	lds	r24, 0x0140
    1142:	90 91 41 01 	lds	r25, 0x0141
    1146:	fc 01       	movw	r30, r24
    1148:	ee 0f       	add	r30, r30
    114a:	ff 1f       	adc	r31, r31
    114c:	ec 5c       	subi	r30, 0xCC	; 204
    114e:	fe 4f       	sbci	r31, 0xFE	; 254
    1150:	60 80       	ld	r6, Z
    1152:	71 80       	ldd	r7, Z+1	; 0x01
    1154:	ff ef       	ldi	r31, 0xFF	; 255
    1156:	6f 16       	cp	r6, r31
    1158:	f3 e0       	ldi	r31, 0x03	; 3
    115a:	7f 06       	cpc	r7, r31
    115c:	08 f0       	brcs	.+2      	; 0x1160 <__stack+0x661>
    115e:	8c c2       	rjmp	.+1304   	; 0x1678 <__stack+0xb79>
    1160:	e0 90 3e 01 	lds	r14, 0x013E
    1164:	f0 90 3f 01 	lds	r15, 0x013F
    1168:	f7 01       	movw	r30, r14
    116a:	ee 0f       	add	r30, r30
    116c:	ff 1f       	adc	r31, r31
    116e:	ec 5c       	subi	r30, 0xCC	; 204
    1170:	fe 4f       	sbci	r31, 0xFE	; 254
    1172:	c0 80       	ld	r12, Z
    1174:	d1 80       	ldd	r13, Z+1	; 0x01
    1176:	2f ef       	ldi	r18, 0xFF	; 255
    1178:	c2 16       	cp	r12, r18
    117a:	23 e0       	ldi	r18, 0x03	; 3
    117c:	d2 06       	cpc	r13, r18
    117e:	08 f0       	brcs	.+2      	; 0x1182 <__stack+0x683>
    1180:	32 c1       	rjmp	.+612    	; 0x13e6 <__stack+0x8e7>
		beta = (float)atan2((double) ((float)x[bottom]-(float)x[left]),(double) ((float)y[bottom]-(float)y[left]));
    1182:	fc 01       	movw	r30, r24
    1184:	ee 0f       	add	r30, r30
    1186:	ff 1f       	adc	r31, r31
    1188:	e4 5d       	subi	r30, 0xD4	; 212
    118a:	fe 4f       	sbci	r31, 0xFE	; 254
    118c:	60 81       	ld	r22, Z
    118e:	71 81       	ldd	r23, Z+1	; 0x01
    1190:	80 e0       	ldi	r24, 0x00	; 0
    1192:	90 e0       	ldi	r25, 0x00	; 0
    1194:	0e 94 47 11 	call	0x228e	; 0x228e <__floatunsisf>
    1198:	4b 01       	movw	r8, r22
    119a:	5c 01       	movw	r10, r24
    119c:	b3 01       	movw	r22, r6
    119e:	80 e0       	ldi	r24, 0x00	; 0
    11a0:	90 e0       	ldi	r25, 0x00	; 0
    11a2:	0e 94 47 11 	call	0x228e	; 0x228e <__floatunsisf>
    11a6:	2b 01       	movw	r4, r22
    11a8:	3c 01       	movw	r6, r24
    11aa:	f7 01       	movw	r30, r14
    11ac:	ee 0f       	add	r30, r30
    11ae:	ff 1f       	adc	r31, r31
    11b0:	e4 5d       	subi	r30, 0xD4	; 212
    11b2:	fe 4f       	sbci	r31, 0xFE	; 254
    11b4:	60 81       	ld	r22, Z
    11b6:	71 81       	ldd	r23, Z+1	; 0x01
    11b8:	80 e0       	ldi	r24, 0x00	; 0
    11ba:	90 e0       	ldi	r25, 0x00	; 0
    11bc:	0e 94 47 11 	call	0x228e	; 0x228e <__floatunsisf>
    11c0:	9b 01       	movw	r18, r22
    11c2:	ac 01       	movw	r20, r24
    11c4:	c5 01       	movw	r24, r10
    11c6:	b4 01       	movw	r22, r8
    11c8:	0e 94 e0 0f 	call	0x1fc0	; 0x1fc0 <__subsf3>
    11cc:	69 83       	std	Y+1, r22	; 0x01
    11ce:	7a 83       	std	Y+2, r23	; 0x02
    11d0:	8b 83       	std	Y+3, r24	; 0x03
    11d2:	9c 83       	std	Y+4, r25	; 0x04
    11d4:	b6 01       	movw	r22, r12
    11d6:	80 e0       	ldi	r24, 0x00	; 0
    11d8:	90 e0       	ldi	r25, 0x00	; 0
    11da:	0e 94 47 11 	call	0x228e	; 0x228e <__floatunsisf>
    11de:	9b 01       	movw	r18, r22
    11e0:	ac 01       	movw	r20, r24
    11e2:	c3 01       	movw	r24, r6
    11e4:	b2 01       	movw	r22, r4
    11e6:	0e 94 e0 0f 	call	0x1fc0	; 0x1fc0 <__subsf3>
    11ea:	29 81       	ldd	r18, Y+1	; 0x01
    11ec:	3a 81       	ldd	r19, Y+2	; 0x02
    11ee:	4b 81       	ldd	r20, Y+3	; 0x03
    11f0:	5c 81       	ldd	r21, Y+4	; 0x04
    11f2:	0e 94 54 10 	call	0x20a8	; 0x20a8 <atan2>
    11f6:	69 83       	std	Y+1, r22	; 0x01
    11f8:	7a 83       	std	Y+2, r23	; 0x02
    11fa:	8b 83       	std	Y+3, r24	; 0x03
    11fc:	9c 83       	std	Y+4, r25	; 0x04

		posx = rcenterx - (128.0/1023.0)*((float)x[bottom]+dcenter*(float)sin((double) (theta_bottom_left-beta)));
    11fe:	c0 90 08 01 	lds	r12, 0x0108
    1202:	d0 90 09 01 	lds	r13, 0x0109
    1206:	e0 90 0a 01 	lds	r14, 0x010A
    120a:	f0 90 0b 01 	lds	r15, 0x010B
    120e:	9b 01       	movw	r18, r22
    1210:	ac 01       	movw	r20, r24
    1212:	6b e9       	ldi	r22, 0x9B	; 155
    1214:	71 e7       	ldi	r23, 0x71	; 113
    1216:	8e e0       	ldi	r24, 0x0E	; 14
    1218:	9f e3       	ldi	r25, 0x3F	; 63
    121a:	0e 94 e0 0f 	call	0x1fc0	; 0x1fc0 <__subsf3>
    121e:	6a 87       	std	Y+10, r22	; 0x0a
    1220:	79 87       	std	Y+9, r23	; 0x09
    1222:	8e 87       	std	Y+14, r24	; 0x0e
    1224:	9a 8b       	std	Y+18, r25	; 0x12
    1226:	0e 94 c5 12 	call	0x258a	; 0x258a <sin>
    122a:	20 91 20 01 	lds	r18, 0x0120
    122e:	30 91 21 01 	lds	r19, 0x0121
    1232:	40 91 22 01 	lds	r20, 0x0122
    1236:	50 91 23 01 	lds	r21, 0x0123
    123a:	2d 83       	std	Y+5, r18	; 0x05
    123c:	3e 83       	std	Y+6, r19	; 0x06
    123e:	4f 83       	std	Y+7, r20	; 0x07
    1240:	58 87       	std	Y+8, r21	; 0x08
    1242:	0e 94 62 12 	call	0x24c4	; 0x24c4 <__mulsf3>
    1246:	9b 01       	movw	r18, r22
    1248:	ac 01       	movw	r20, r24
    124a:	c3 01       	movw	r24, r6
    124c:	b2 01       	movw	r22, r4
    124e:	0e 94 e1 0f 	call	0x1fc2	; 0x1fc2 <__addsf3>
    1252:	28 e0       	ldi	r18, 0x08	; 8
    1254:	30 e2       	ldi	r19, 0x20	; 32
    1256:	40 e0       	ldi	r20, 0x00	; 0
    1258:	5e e3       	ldi	r21, 0x3E	; 62
    125a:	0e 94 62 12 	call	0x24c4	; 0x24c4 <__mulsf3>
    125e:	9b 01       	movw	r18, r22
    1260:	ac 01       	movw	r20, r24
    1262:	c7 01       	movw	r24, r14
    1264:	b6 01       	movw	r22, r12
    1266:	0e 94 e0 0f 	call	0x1fc0	; 0x1fc0 <__subsf3>
    126a:	6c 8b       	std	Y+20, r22	; 0x14
    126c:	7b 8b       	std	Y+19, r23	; 0x13
    126e:	18 2f       	mov	r17, r24
    1270:	09 2f       	mov	r16, r25
		posy = rcentery - (96.0/1023.0)*((float)y[bottom]-dcenter*(float)cos((double) (theta_bottom_left-beta)));
    1272:	5a 85       	ldd	r21, Y+10	; 0x0a
    1274:	49 85       	ldd	r20, Y+9	; 0x09
    1276:	3e 85       	ldd	r19, Y+14	; 0x0e
    1278:	2a 89       	ldd	r18, Y+18	; 0x12
    127a:	65 2f       	mov	r22, r21
    127c:	74 2f       	mov	r23, r20
    127e:	83 2f       	mov	r24, r19
    1280:	92 2f       	mov	r25, r18
    1282:	0e 94 ab 10 	call	0x2156	; 0x2156 <cos>
    1286:	9b 01       	movw	r18, r22
    1288:	ac 01       	movw	r20, r24
    128a:	6d 81       	ldd	r22, Y+5	; 0x05
    128c:	7e 81       	ldd	r23, Y+6	; 0x06
    128e:	8f 81       	ldd	r24, Y+7	; 0x07
    1290:	98 85       	ldd	r25, Y+8	; 0x08
    1292:	0e 94 62 12 	call	0x24c4	; 0x24c4 <__mulsf3>
    1296:	9b 01       	movw	r18, r22
    1298:	ac 01       	movw	r20, r24
    129a:	c5 01       	movw	r24, r10
    129c:	b4 01       	movw	r22, r8
    129e:	0e 94 e0 0f 	call	0x1fc0	; 0x1fc0 <__subsf3>
    12a2:	2c e0       	ldi	r18, 0x0C	; 12
    12a4:	30 e3       	ldi	r19, 0x30	; 48
    12a6:	40 ec       	ldi	r20, 0xC0	; 192
    12a8:	5d e3       	ldi	r21, 0x3D	; 61
    12aa:	0e 94 62 12 	call	0x24c4	; 0x24c4 <__mulsf3>
    12ae:	9b 01       	movw	r18, r22
    12b0:	ac 01       	movw	r20, r24
    12b2:	60 91 04 01 	lds	r22, 0x0104
    12b6:	70 91 05 01 	lds	r23, 0x0105
    12ba:	80 91 06 01 	lds	r24, 0x0106
    12be:	90 91 07 01 	lds	r25, 0x0107
    12c2:	0e 94 e0 0f 	call	0x1fc0	; 0x1fc0 <__subsf3>
    12c6:	86 2e       	mov	r8, r22
    12c8:	97 2e       	mov	r9, r23
    12ca:	a8 2e       	mov	r10, r24
    12cc:	b9 2e       	mov	r11, r25
		
		angle = -1.0 *3.14/2.0 + theta_bottom_left - beta;
    12ce:	29 81       	ldd	r18, Y+1	; 0x01
    12d0:	3a 81       	ldd	r19, Y+2	; 0x02
    12d2:	4b 81       	ldd	r20, Y+3	; 0x03
    12d4:	5c 81       	ldd	r21, Y+4	; 0x04
    12d6:	66 ef       	ldi	r22, 0xF6	; 246
    12d8:	7c eb       	ldi	r23, 0xBC	; 188
    12da:	81 e8       	ldi	r24, 0x81	; 129
    12dc:	9f eb       	ldi	r25, 0xBF	; 191
    12de:	0e 94 e0 0f 	call	0x1fc0	; 0x1fc0 <__subsf3>
    12e2:	69 83       	std	Y+1, r22	; 0x01
    12e4:	7d 83       	std	Y+5, r23	; 0x05
    12e6:	8a 87       	std	Y+10, r24	; 0x0a
    12e8:	99 87       	std	Y+9, r25	; 0x09
		phi = -1.0 * (float)atan2((double)posy,(double)posx);
    12ea:	7c 89       	ldd	r23, Y+20	; 0x14
    12ec:	6b 89       	ldd	r22, Y+19	; 0x13
    12ee:	27 2f       	mov	r18, r23
    12f0:	36 2f       	mov	r19, r22
    12f2:	41 2f       	mov	r20, r17
    12f4:	50 2f       	mov	r21, r16
    12f6:	68 2d       	mov	r22, r8
    12f8:	79 2d       	mov	r23, r9
    12fa:	8a 2d       	mov	r24, r10
    12fc:	9b 2d       	mov	r25, r11
    12fe:	0e 94 54 10 	call	0x20a8	; 0x20a8 <atan2>
    1302:	2b 01       	movw	r4, r22
    1304:	3c 01       	movw	r6, r24
		
		r = (float)sqrt((double) ((posx*posx)+(posy*posy)));
    1306:	7c 89       	ldd	r23, Y+20	; 0x14
    1308:	6b 89       	ldd	r22, Y+19	; 0x13
    130a:	27 2f       	mov	r18, r23
    130c:	36 2f       	mov	r19, r22
    130e:	41 2f       	mov	r20, r17
    1310:	50 2f       	mov	r21, r16
    1312:	67 2f       	mov	r22, r23
    1314:	73 2f       	mov	r23, r19
    1316:	81 2f       	mov	r24, r17
    1318:	90 2f       	mov	r25, r16
    131a:	0e 94 62 12 	call	0x24c4	; 0x24c4 <__mulsf3>
    131e:	6e 87       	std	Y+14, r22	; 0x0e
    1320:	7f 87       	std	Y+15, r23	; 0x0f
    1322:	88 8b       	std	Y+16, r24	; 0x10
    1324:	99 8b       	std	Y+17, r25	; 0x11
    1326:	28 2d       	mov	r18, r8
    1328:	39 2d       	mov	r19, r9
    132a:	4a 2d       	mov	r20, r10
    132c:	5b 2d       	mov	r21, r11
    132e:	68 2d       	mov	r22, r8
    1330:	79 2d       	mov	r23, r9
    1332:	8a 2d       	mov	r24, r10
    1334:	9b 2d       	mov	r25, r11
    1336:	0e 94 62 12 	call	0x24c4	; 0x24c4 <__mulsf3>
    133a:	9b 01       	movw	r18, r22
    133c:	ac 01       	movw	r20, r24
    133e:	6e 85       	ldd	r22, Y+14	; 0x0e
    1340:	7f 85       	ldd	r23, Y+15	; 0x0f
    1342:	88 89       	ldd	r24, Y+16	; 0x10
    1344:	99 89       	ldd	r25, Y+17	; 0x11
    1346:	0e 94 e1 0f 	call	0x1fc2	; 0x1fc2 <__addsf3>
    134a:	0e 94 cf 12 	call	0x259e	; 0x259e <sqrt>
    134e:	4b 01       	movw	r8, r22
    1350:	5c 01       	movw	r10, r24
		
		data[0] = rcenterx - r * (float)cos((double) (angle - phi));
    1352:	a3 01       	movw	r20, r6
    1354:	92 01       	movw	r18, r4
    1356:	b9 81       	ldd	r27, Y+1	; 0x01
    1358:	ad 81       	ldd	r26, Y+5	; 0x05
    135a:	ea 85       	ldd	r30, Y+10	; 0x0a
    135c:	19 85       	ldd	r17, Y+9	; 0x09
    135e:	6b 2f       	mov	r22, r27
    1360:	7a 2f       	mov	r23, r26
    1362:	8e 2f       	mov	r24, r30
    1364:	91 2f       	mov	r25, r17
    1366:	0e 94 e1 0f 	call	0x1fc2	; 0x1fc2 <__addsf3>
    136a:	06 2f       	mov	r16, r22
    136c:	17 2f       	mov	r17, r23
    136e:	68 2e       	mov	r6, r24
    1370:	79 2e       	mov	r7, r25
    1372:	0e 94 ab 10 	call	0x2156	; 0x2156 <cos>
    1376:	a5 01       	movw	r20, r10
    1378:	94 01       	movw	r18, r8
    137a:	0e 94 62 12 	call	0x24c4	; 0x24c4 <__mulsf3>
    137e:	9b 01       	movw	r18, r22
    1380:	ac 01       	movw	r20, r24
    1382:	c7 01       	movw	r24, r14
    1384:	b6 01       	movw	r22, r12
    1386:	0e 94 e0 0f 	call	0x1fc0	; 0x1fc0 <__subsf3>
    138a:	f1 01       	movw	r30, r2
    138c:	60 83       	st	Z, r22
    138e:	71 83       	std	Z+1, r23	; 0x01
    1390:	82 83       	std	Z+2, r24	; 0x02
    1392:	93 83       	std	Z+3, r25	; 0x03
		data[1] = rcentery - r * (float)sin((double) (angle - phi));
    1394:	60 2f       	mov	r22, r16
    1396:	71 2f       	mov	r23, r17
    1398:	86 2d       	mov	r24, r6
    139a:	97 2d       	mov	r25, r7
    139c:	0e 94 c5 12 	call	0x258a	; 0x258a <sin>
    13a0:	a5 01       	movw	r20, r10
    13a2:	94 01       	movw	r18, r8
    13a4:	0e 94 62 12 	call	0x24c4	; 0x24c4 <__mulsf3>
    13a8:	9b 01       	movw	r18, r22
    13aa:	ac 01       	movw	r20, r24
    13ac:	60 91 04 01 	lds	r22, 0x0104
    13b0:	70 91 05 01 	lds	r23, 0x0105
    13b4:	80 91 06 01 	lds	r24, 0x0106
    13b8:	90 91 07 01 	lds	r25, 0x0107
    13bc:	0e 94 e0 0f 	call	0x1fc0	; 0x1fc0 <__subsf3>
    13c0:	f1 01       	movw	r30, r2
    13c2:	64 83       	std	Z+4, r22	; 0x04
    13c4:	75 83       	std	Z+5, r23	; 0x05
    13c6:	86 83       	std	Z+6, r24	; 0x06
    13c8:	97 83       	std	Z+7, r25	; 0x07
		data[2] = angle;
    13ca:	59 81       	ldd	r21, Y+1	; 0x01
    13cc:	4d 81       	ldd	r20, Y+5	; 0x05
    13ce:	3a 85       	ldd	r19, Y+10	; 0x0a
    13d0:	29 85       	ldd	r18, Y+9	; 0x09
    13d2:	85 2f       	mov	r24, r21
    13d4:	94 2f       	mov	r25, r20
    13d6:	a3 2f       	mov	r26, r19
    13d8:	b2 2f       	mov	r27, r18
    13da:	80 87       	std	Z+8, r24	; 0x08
    13dc:	91 87       	std	Z+9, r25	; 0x09
    13de:	a2 87       	std	Z+10, r26	; 0x0a
    13e0:	b3 87       	std	Z+11, r27	; 0x0b
		return 1;
    13e2:	81 e0       	ldi	r24, 0x01	; 1
    13e4:	56 c1       	rjmp	.+684    	; 0x1692 <__stack+0xb93>
	}
	
	else if (x[bottom] < 1023 && x[right] < 1023) {
    13e6:	e0 90 3c 01 	lds	r14, 0x013C
    13ea:	f0 90 3d 01 	lds	r15, 0x013D
    13ee:	f7 01       	movw	r30, r14
    13f0:	ee 0f       	add	r30, r30
    13f2:	ff 1f       	adc	r31, r31
    13f4:	ec 5c       	subi	r30, 0xCC	; 204
    13f6:	fe 4f       	sbci	r31, 0xFE	; 254
    13f8:	00 81       	ld	r16, Z
    13fa:	11 81       	ldd	r17, Z+1	; 0x01
    13fc:	0f 3f       	cpi	r16, 0xFF	; 255
    13fe:	f3 e0       	ldi	r31, 0x03	; 3
    1400:	1f 07       	cpc	r17, r31
    1402:	08 f0       	brcs	.+2      	; 0x1406 <__stack+0x907>
    1404:	3b c1       	rjmp	.+630    	; 0x167c <__stack+0xb7d>
		beta = (float)atan2((double) ((float)x[bottom]-(float)x[right]), (double) ((float)y[bottom]-(float)y[right]));
    1406:	fc 01       	movw	r30, r24
    1408:	ee 0f       	add	r30, r30
    140a:	ff 1f       	adc	r31, r31
    140c:	e4 5d       	subi	r30, 0xD4	; 212
    140e:	fe 4f       	sbci	r31, 0xFE	; 254
    1410:	60 81       	ld	r22, Z
    1412:	71 81       	ldd	r23, Z+1	; 0x01
    1414:	80 e0       	ldi	r24, 0x00	; 0
    1416:	90 e0       	ldi	r25, 0x00	; 0
    1418:	0e 94 47 11 	call	0x228e	; 0x228e <__floatunsisf>
    141c:	4b 01       	movw	r8, r22
    141e:	5c 01       	movw	r10, r24
    1420:	b3 01       	movw	r22, r6
    1422:	80 e0       	ldi	r24, 0x00	; 0
    1424:	90 e0       	ldi	r25, 0x00	; 0
    1426:	0e 94 47 11 	call	0x228e	; 0x228e <__floatunsisf>
    142a:	2b 01       	movw	r4, r22
    142c:	3c 01       	movw	r6, r24
    142e:	f7 01       	movw	r30, r14
    1430:	ee 0f       	add	r30, r30
    1432:	ff 1f       	adc	r31, r31
    1434:	e4 5d       	subi	r30, 0xD4	; 212
    1436:	fe 4f       	sbci	r31, 0xFE	; 254
    1438:	60 81       	ld	r22, Z
    143a:	71 81       	ldd	r23, Z+1	; 0x01
    143c:	80 e0       	ldi	r24, 0x00	; 0
    143e:	90 e0       	ldi	r25, 0x00	; 0
    1440:	0e 94 47 11 	call	0x228e	; 0x228e <__floatunsisf>
    1444:	9b 01       	movw	r18, r22
    1446:	ac 01       	movw	r20, r24
    1448:	c5 01       	movw	r24, r10
    144a:	b4 01       	movw	r22, r8
    144c:	0e 94 e0 0f 	call	0x1fc0	; 0x1fc0 <__subsf3>
    1450:	6b 01       	movw	r12, r22
    1452:	7c 01       	movw	r14, r24
    1454:	b8 01       	movw	r22, r16
    1456:	80 e0       	ldi	r24, 0x00	; 0
    1458:	90 e0       	ldi	r25, 0x00	; 0
    145a:	0e 94 47 11 	call	0x228e	; 0x228e <__floatunsisf>
    145e:	9b 01       	movw	r18, r22
    1460:	ac 01       	movw	r20, r24
    1462:	c3 01       	movw	r24, r6
    1464:	b2 01       	movw	r22, r4
    1466:	0e 94 e0 0f 	call	0x1fc0	; 0x1fc0 <__subsf3>
    146a:	a7 01       	movw	r20, r14
    146c:	96 01       	movw	r18, r12
    146e:	0e 94 54 10 	call	0x20a8	; 0x20a8 <atan2>
    1472:	69 83       	std	Y+1, r22	; 0x01
    1474:	7a 83       	std	Y+2, r23	; 0x02
    1476:	8b 83       	std	Y+3, r24	; 0x03
    1478:	9c 83       	std	Y+4, r25	; 0x04

		posx = rcenterx - (128.0/1023.0)*((float)x[bottom]+0.5*dcenter*(float)sin((double) (theta_bottom_right-beta)));
    147a:	c0 90 08 01 	lds	r12, 0x0108
    147e:	d0 90 09 01 	lds	r13, 0x0109
    1482:	e0 90 0a 01 	lds	r14, 0x010A
    1486:	f0 90 0b 01 	lds	r15, 0x010B
    148a:	20 e0       	ldi	r18, 0x00	; 0
    148c:	30 e0       	ldi	r19, 0x00	; 0
    148e:	40 e0       	ldi	r20, 0x00	; 0
    1490:	5f e3       	ldi	r21, 0x3F	; 63
    1492:	60 91 20 01 	lds	r22, 0x0120
    1496:	70 91 21 01 	lds	r23, 0x0121
    149a:	80 91 22 01 	lds	r24, 0x0122
    149e:	90 91 23 01 	lds	r25, 0x0123
    14a2:	0e 94 62 12 	call	0x24c4	; 0x24c4 <__mulsf3>
    14a6:	6c 8b       	std	Y+20, r22	; 0x14
    14a8:	79 87       	std	Y+9, r23	; 0x09
    14aa:	8e 87       	std	Y+14, r24	; 0x0e
    14ac:	9a 8b       	std	Y+18, r25	; 0x12
    14ae:	29 81       	ldd	r18, Y+1	; 0x01
    14b0:	3a 81       	ldd	r19, Y+2	; 0x02
    14b2:	4b 81       	ldd	r20, Y+3	; 0x03
    14b4:	5c 81       	ldd	r21, Y+4	; 0x04
    14b6:	6b e7       	ldi	r22, 0x7B	; 123
    14b8:	71 e5       	ldi	r23, 0x51	; 81
    14ba:	8e e8       	ldi	r24, 0x8E	; 142
    14bc:	9f e3       	ldi	r25, 0x3F	; 63
    14be:	0e 94 e0 0f 	call	0x1fc0	; 0x1fc0 <__subsf3>
    14c2:	6b 8b       	std	Y+19, r22	; 0x13
    14c4:	79 83       	std	Y+1, r23	; 0x01
    14c6:	8d 83       	std	Y+5, r24	; 0x05
    14c8:	9a 87       	std	Y+10, r25	; 0x0a
    14ca:	0e 94 c5 12 	call	0x258a	; 0x258a <sin>
    14ce:	9b 01       	movw	r18, r22
    14d0:	ac 01       	movw	r20, r24
    14d2:	bc 89       	ldd	r27, Y+20	; 0x14
    14d4:	a9 85       	ldd	r26, Y+9	; 0x09
    14d6:	1e 85       	ldd	r17, Y+14	; 0x0e
    14d8:	0a 89       	ldd	r16, Y+18	; 0x12
    14da:	6b 2f       	mov	r22, r27
    14dc:	7a 2f       	mov	r23, r26
    14de:	81 2f       	mov	r24, r17
    14e0:	90 2f       	mov	r25, r16
    14e2:	0e 94 62 12 	call	0x24c4	; 0x24c4 <__mulsf3>
    14e6:	9b 01       	movw	r18, r22
    14e8:	ac 01       	movw	r20, r24
    14ea:	c3 01       	movw	r24, r6
    14ec:	b2 01       	movw	r22, r4
    14ee:	0e 94 e1 0f 	call	0x1fc2	; 0x1fc2 <__addsf3>
    14f2:	28 e0       	ldi	r18, 0x08	; 8
    14f4:	30 e2       	ldi	r19, 0x20	; 32
    14f6:	40 e0       	ldi	r20, 0x00	; 0
    14f8:	5e e3       	ldi	r21, 0x3E	; 62
    14fa:	0e 94 62 12 	call	0x24c4	; 0x24c4 <__mulsf3>
    14fe:	9b 01       	movw	r18, r22
    1500:	ac 01       	movw	r20, r24
    1502:	c7 01       	movw	r24, r14
    1504:	b6 01       	movw	r22, r12
    1506:	0e 94 e0 0f 	call	0x1fc0	; 0x1fc0 <__subsf3>
    150a:	66 2e       	mov	r6, r22
    150c:	77 2e       	mov	r7, r23
    150e:	08 2f       	mov	r16, r24
    1510:	19 2f       	mov	r17, r25
		posy = rcentery - (96.0/1023.0)*(y[bottom]-0.5*dcenter*(float)cos((double) (theta_bottom_right-beta)));
    1512:	5b 89       	ldd	r21, Y+19	; 0x13
    1514:	49 81       	ldd	r20, Y+1	; 0x01
    1516:	3d 81       	ldd	r19, Y+5	; 0x05
    1518:	2a 85       	ldd	r18, Y+10	; 0x0a
    151a:	65 2f       	mov	r22, r21
    151c:	74 2f       	mov	r23, r20
    151e:	83 2f       	mov	r24, r19
    1520:	92 2f       	mov	r25, r18
    1522:	0e 94 ab 10 	call	0x2156	; 0x2156 <cos>
    1526:	9b 01       	movw	r18, r22
    1528:	ac 01       	movw	r20, r24
    152a:	bc 89       	ldd	r27, Y+20	; 0x14
    152c:	a9 85       	ldd	r26, Y+9	; 0x09
    152e:	5e 84       	ldd	r5, Y+14	; 0x0e
    1530:	4a 88       	ldd	r4, Y+18	; 0x12
    1532:	6b 2f       	mov	r22, r27
    1534:	7a 2f       	mov	r23, r26
    1536:	85 2d       	mov	r24, r5
    1538:	94 2d       	mov	r25, r4
    153a:	0e 94 62 12 	call	0x24c4	; 0x24c4 <__mulsf3>
    153e:	9b 01       	movw	r18, r22
    1540:	ac 01       	movw	r20, r24
    1542:	c5 01       	movw	r24, r10
    1544:	b4 01       	movw	r22, r8
    1546:	0e 94 e0 0f 	call	0x1fc0	; 0x1fc0 <__subsf3>
    154a:	2c e0       	ldi	r18, 0x0C	; 12
    154c:	30 e3       	ldi	r19, 0x30	; 48
    154e:	40 ec       	ldi	r20, 0xC0	; 192
    1550:	5d e3       	ldi	r21, 0x3D	; 61
    1552:	0e 94 62 12 	call	0x24c4	; 0x24c4 <__mulsf3>
    1556:	9b 01       	movw	r18, r22
    1558:	ac 01       	movw	r20, r24
    155a:	60 91 04 01 	lds	r22, 0x0104
    155e:	70 91 05 01 	lds	r23, 0x0105
    1562:	80 91 06 01 	lds	r24, 0x0106
    1566:	90 91 07 01 	lds	r25, 0x0107
    156a:	0e 94 e0 0f 	call	0x1fc0	; 0x1fc0 <__subsf3>
    156e:	69 87       	std	Y+9, r22	; 0x09
    1570:	47 2e       	mov	r4, r23
    1572:	58 2e       	mov	r5, r24
    1574:	9a 8b       	std	Y+18, r25	; 0x12
		
		angle = theta_bottom_right - beta;
		phi = -1.0 * (float)atan2((double)posy,(double)posx);
    1576:	26 2d       	mov	r18, r6
    1578:	37 2d       	mov	r19, r7
    157a:	40 2f       	mov	r20, r16
    157c:	51 2f       	mov	r21, r17
    157e:	b9 85       	ldd	r27, Y+9	; 0x09
    1580:	ea 89       	ldd	r30, Y+18	; 0x12
    1582:	6b 2f       	mov	r22, r27
    1584:	74 2d       	mov	r23, r4
    1586:	85 2d       	mov	r24, r5
    1588:	9e 2f       	mov	r25, r30
    158a:	0e 94 54 10 	call	0x20a8	; 0x20a8 <atan2>
    158e:	4b 01       	movw	r8, r22
    1590:	5c 01       	movw	r10, r24
		
		r = (float)sqrt((double) ((posx*posx)+(posy*posy)));
    1592:	26 2d       	mov	r18, r6
    1594:	37 2d       	mov	r19, r7
    1596:	40 2f       	mov	r20, r16
    1598:	51 2f       	mov	r21, r17
    159a:	66 2d       	mov	r22, r6
    159c:	77 2d       	mov	r23, r7
    159e:	80 2f       	mov	r24, r16
    15a0:	91 2f       	mov	r25, r17
    15a2:	0e 94 62 12 	call	0x24c4	; 0x24c4 <__mulsf3>
    15a6:	6e 87       	std	Y+14, r22	; 0x0e
    15a8:	7f 87       	std	Y+15, r23	; 0x0f
    15aa:	88 8b       	std	Y+16, r24	; 0x10
    15ac:	99 8b       	std	Y+17, r25	; 0x11
    15ae:	79 85       	ldd	r23, Y+9	; 0x09
    15b0:	8a 89       	ldd	r24, Y+18	; 0x12
    15b2:	27 2f       	mov	r18, r23
    15b4:	34 2d       	mov	r19, r4
    15b6:	45 2d       	mov	r20, r5
    15b8:	58 2f       	mov	r21, r24
    15ba:	67 2f       	mov	r22, r23
    15bc:	74 2d       	mov	r23, r4
    15be:	85 2d       	mov	r24, r5
    15c0:	95 2f       	mov	r25, r21
    15c2:	0e 94 62 12 	call	0x24c4	; 0x24c4 <__mulsf3>
    15c6:	9b 01       	movw	r18, r22
    15c8:	ac 01       	movw	r20, r24
    15ca:	6e 85       	ldd	r22, Y+14	; 0x0e
    15cc:	7f 85       	ldd	r23, Y+15	; 0x0f
    15ce:	88 89       	ldd	r24, Y+16	; 0x10
    15d0:	99 89       	ldd	r25, Y+17	; 0x11
    15d2:	0e 94 e1 0f 	call	0x1fc2	; 0x1fc2 <__addsf3>
    15d6:	0e 94 cf 12 	call	0x259e	; 0x259e <sqrt>
    15da:	2b 01       	movw	r4, r22
    15dc:	3c 01       	movw	r6, r24
		
		data[0] = rcenterx - r * (float)cos((double)(angle - phi));
    15de:	a5 01       	movw	r20, r10
    15e0:	94 01       	movw	r18, r8
    15e2:	bb 89       	ldd	r27, Y+19	; 0x13
    15e4:	a9 81       	ldd	r26, Y+1	; 0x01
    15e6:	ed 81       	ldd	r30, Y+5	; 0x05
    15e8:	1a 85       	ldd	r17, Y+10	; 0x0a
    15ea:	6b 2f       	mov	r22, r27
    15ec:	7a 2f       	mov	r23, r26
    15ee:	8e 2f       	mov	r24, r30
    15f0:	91 2f       	mov	r25, r17
    15f2:	0e 94 e1 0f 	call	0x1fc2	; 0x1fc2 <__addsf3>
    15f6:	b6 2e       	mov	r11, r22
    15f8:	07 2f       	mov	r16, r23
    15fa:	18 2f       	mov	r17, r24
    15fc:	a9 2e       	mov	r10, r25
    15fe:	81 2f       	mov	r24, r17
    1600:	0e 94 ab 10 	call	0x2156	; 0x2156 <cos>
    1604:	a3 01       	movw	r20, r6
    1606:	92 01       	movw	r18, r4
    1608:	0e 94 62 12 	call	0x24c4	; 0x24c4 <__mulsf3>
    160c:	9b 01       	movw	r18, r22
    160e:	ac 01       	movw	r20, r24
    1610:	c7 01       	movw	r24, r14
    1612:	b6 01       	movw	r22, r12
    1614:	0e 94 e0 0f 	call	0x1fc0	; 0x1fc0 <__subsf3>
    1618:	f1 01       	movw	r30, r2
    161a:	60 83       	st	Z, r22
    161c:	71 83       	std	Z+1, r23	; 0x01
    161e:	82 83       	std	Z+2, r24	; 0x02
    1620:	93 83       	std	Z+3, r25	; 0x03
		data[1] = rcentery - r * (float)sin((double)(angle - phi));
    1622:	6b 2d       	mov	r22, r11
    1624:	70 2f       	mov	r23, r16
    1626:	81 2f       	mov	r24, r17
    1628:	9a 2d       	mov	r25, r10
    162a:	0e 94 c5 12 	call	0x258a	; 0x258a <sin>
    162e:	a3 01       	movw	r20, r6
    1630:	92 01       	movw	r18, r4
    1632:	0e 94 62 12 	call	0x24c4	; 0x24c4 <__mulsf3>
    1636:	9b 01       	movw	r18, r22
    1638:	ac 01       	movw	r20, r24
    163a:	60 91 04 01 	lds	r22, 0x0104
    163e:	70 91 05 01 	lds	r23, 0x0105
    1642:	80 91 06 01 	lds	r24, 0x0106
    1646:	90 91 07 01 	lds	r25, 0x0107
    164a:	0e 94 e0 0f 	call	0x1fc0	; 0x1fc0 <__subsf3>
    164e:	f1 01       	movw	r30, r2
    1650:	64 83       	std	Z+4, r22	; 0x04
    1652:	75 83       	std	Z+5, r23	; 0x05
    1654:	86 83       	std	Z+6, r24	; 0x06
    1656:	97 83       	std	Z+7, r25	; 0x07
		data[2] = angle;
    1658:	5b 89       	ldd	r21, Y+19	; 0x13
    165a:	49 81       	ldd	r20, Y+1	; 0x01
    165c:	3d 81       	ldd	r19, Y+5	; 0x05
    165e:	2a 85       	ldd	r18, Y+10	; 0x0a
    1660:	85 2f       	mov	r24, r21
    1662:	94 2f       	mov	r25, r20
    1664:	a3 2f       	mov	r26, r19
    1666:	b2 2f       	mov	r27, r18
    1668:	80 87       	std	Z+8, r24	; 0x08
    166a:	91 87       	std	Z+9, r25	; 0x09
    166c:	a2 87       	std	Z+10, r26	; 0x0a
    166e:	b3 87       	std	Z+11, r27	; 0x0b
		return 1;
    1670:	81 e0       	ldi	r24, 0x01	; 1
    1672:	0f c0       	rjmp	.+30     	; 0x1692 <__stack+0xb93>
	}
	
	return 0;
    1674:	80 e0       	ldi	r24, 0x00	; 0
    1676:	0d c0       	rjmp	.+26     	; 0x1692 <__stack+0xb93>
    1678:	80 e0       	ldi	r24, 0x00	; 0
    167a:	0b c0       	rjmp	.+22     	; 0x1692 <__stack+0xb93>
    167c:	80 e0       	ldi	r24, 0x00	; 0
    167e:	09 c0       	rjmp	.+18     	; 0x1692 <__stack+0xb93>
    1680:	80 91 16 01 	lds	r24, 0x0116
    1684:	90 91 17 01 	lds	r25, 0x0117
    1688:	e4 e3       	ldi	r30, 0x34	; 52
    168a:	f1 e0       	ldi	r31, 0x01	; 1
	data[0] = blobs[0];
	data[1] = blobs[1];
	data[2] = 1.0;
}

unsigned char localize (float* data) {
    168c:	4c e3       	ldi	r20, 0x3C	; 60
    168e:	51 e0       	ldi	r21, 0x01	; 1
    1690:	02 c9       	rjmp	.-3580   	; 0x896 <localize+0x66>
		data[2] = angle;
		return 1;
	}
	
	return 0;
    1692:	6a 96       	adiw	r28, 0x1a	; 26
    1694:	0f b6       	in	r0, 0x3f	; 63
    1696:	f8 94       	cli
    1698:	de bf       	out	0x3e, r29	; 62
    169a:	0f be       	out	0x3f, r0	; 63
    169c:	cd bf       	out	0x3d, r28	; 61
    169e:	df 91       	pop	r29
    16a0:	cf 91       	pop	r28
    16a2:	1f 91       	pop	r17
    16a4:	0f 91       	pop	r16
    16a6:	ff 90       	pop	r15
    16a8:	ef 90       	pop	r14
    16aa:	df 90       	pop	r13
    16ac:	cf 90       	pop	r12
    16ae:	bf 90       	pop	r11
    16b0:	af 90       	pop	r10
    16b2:	9f 90       	pop	r9
    16b4:	8f 90       	pop	r8
    16b6:	7f 90       	pop	r7
    16b8:	6f 90       	pop	r6
    16ba:	5f 90       	pop	r5
    16bc:	4f 90       	pop	r4
    16be:	3f 90       	pop	r3
    16c0:	2f 90       	pop	r2
    16c2:	08 95       	ret

000016c4 <m_usb_init>:
    16c4:	81 e0       	ldi	r24, 0x01	; 1
    16c6:	80 93 d7 00 	sts	0x00D7, r24
    16ca:	80 ea       	ldi	r24, 0xA0	; 160
    16cc:	80 93 d8 00 	sts	0x00D8, r24
    16d0:	82 e1       	ldi	r24, 0x12	; 18
    16d2:	89 bd       	out	0x29, r24	; 41
    16d4:	09 b4       	in	r0, 0x29	; 41
    16d6:	00 fe       	sbrs	r0, 0
    16d8:	fd cf       	rjmp	.-6      	; 0x16d4 <m_usb_init+0x10>
    16da:	80 e9       	ldi	r24, 0x90	; 144
    16dc:	80 93 d8 00 	sts	0x00D8, r24
    16e0:	10 92 e0 00 	sts	0x00E0, r1
    16e4:	10 92 5d 01 	sts	0x015D, r1
    16e8:	10 92 5e 01 	sts	0x015E, r1
    16ec:	8c e0       	ldi	r24, 0x0C	; 12
    16ee:	80 93 e2 00 	sts	0x00E2, r24
    16f2:	78 94       	sei
    16f4:	08 95       	ret

000016f6 <m_usb_isconnected>:
    16f6:	80 91 5d 01 	lds	r24, 0x015D
    16fa:	08 95       	ret

000016fc <m_usb_tx_char>:
    16fc:	cf 93       	push	r28
    16fe:	df 93       	push	r29
    1700:	90 91 5d 01 	lds	r25, 0x015D
    1704:	99 23       	and	r25, r25
    1706:	09 f4       	brne	.+2      	; 0x170a <m_usb_tx_char+0xe>
    1708:	4d c0       	rjmp	.+154    	; 0x17a4 <m_usb_tx_char+0xa8>
    170a:	9f b7       	in	r25, 0x3f	; 63
    170c:	f8 94       	cli
    170e:	24 e0       	ldi	r18, 0x04	; 4
    1710:	20 93 e9 00 	sts	0x00E9, r18
    1714:	20 91 5f 01 	lds	r18, 0x015F
    1718:	22 23       	and	r18, r18
    171a:	49 f0       	breq	.+18     	; 0x172e <m_usb_tx_char+0x32>
    171c:	20 91 e8 00 	lds	r18, 0x00E8
    1720:	25 fd       	sbrc	r18, 5
    1722:	03 c0       	rjmp	.+6      	; 0x172a <m_usb_tx_char+0x2e>
    1724:	9f bf       	out	0x3f, r25	; 63
    1726:	8f ef       	ldi	r24, 0xFF	; 255
    1728:	42 c0       	rjmp	.+132    	; 0x17ae <m_usb_tx_char+0xb2>
    172a:	10 92 5f 01 	sts	0x015F, r1
    172e:	30 91 e4 00 	lds	r19, 0x00E4
    1732:	37 5e       	subi	r19, 0xE7	; 231
    1734:	20 91 e8 00 	lds	r18, 0x00E8
    1738:	25 fd       	sbrc	r18, 5
    173a:	25 c0       	rjmp	.+74     	; 0x1786 <m_usb_tx_char+0x8a>
    173c:	9f bf       	out	0x3f, r25	; 63
    173e:	90 91 e4 00 	lds	r25, 0x00E4
    1742:	93 17       	cp	r25, r19
    1744:	49 f0       	breq	.+18     	; 0x1758 <m_usb_tx_char+0x5c>
    1746:	90 91 5d 01 	lds	r25, 0x015D
    174a:	91 11       	cpse	r25, r1
    174c:	0f c0       	rjmp	.+30     	; 0x176c <m_usb_tx_char+0x70>
    174e:	2c c0       	rjmp	.+88     	; 0x17a8 <m_usb_tx_char+0xac>
    1750:	9f bf       	out	0x3f, r25	; 63
    1752:	98 81       	ld	r25, Y
    1754:	93 13       	cpse	r25, r19
    1756:	05 c0       	rjmp	.+10     	; 0x1762 <m_usb_tx_char+0x66>
    1758:	81 e0       	ldi	r24, 0x01	; 1
    175a:	80 93 5f 01 	sts	0x015F, r24
    175e:	8f ef       	ldi	r24, 0xFF	; 255
    1760:	26 c0       	rjmp	.+76     	; 0x17ae <m_usb_tx_char+0xb2>
    1762:	90 91 5d 01 	lds	r25, 0x015D
    1766:	91 11       	cpse	r25, r1
    1768:	08 c0       	rjmp	.+16     	; 0x177a <m_usb_tx_char+0x7e>
    176a:	20 c0       	rjmp	.+64     	; 0x17ac <m_usb_tx_char+0xb0>
    176c:	a9 ee       	ldi	r26, 0xE9	; 233
    176e:	b0 e0       	ldi	r27, 0x00	; 0
    1770:	44 e0       	ldi	r20, 0x04	; 4
    1772:	e8 ee       	ldi	r30, 0xE8	; 232
    1774:	f0 e0       	ldi	r31, 0x00	; 0
    1776:	c4 ee       	ldi	r28, 0xE4	; 228
    1778:	d0 e0       	ldi	r29, 0x00	; 0
    177a:	9f b7       	in	r25, 0x3f	; 63
    177c:	f8 94       	cli
    177e:	4c 93       	st	X, r20
    1780:	20 81       	ld	r18, Z
    1782:	25 ff       	sbrs	r18, 5
    1784:	e5 cf       	rjmp	.-54     	; 0x1750 <m_usb_tx_char+0x54>
    1786:	80 93 f1 00 	sts	0x00F1, r24
    178a:	80 91 e8 00 	lds	r24, 0x00E8
    178e:	85 fd       	sbrc	r24, 5
    1790:	03 c0       	rjmp	.+6      	; 0x1798 <m_usb_tx_char+0x9c>
    1792:	8a e3       	ldi	r24, 0x3A	; 58
    1794:	80 93 e8 00 	sts	0x00E8, r24
    1798:	85 e0       	ldi	r24, 0x05	; 5
    179a:	80 93 5c 01 	sts	0x015C, r24
    179e:	9f bf       	out	0x3f, r25	; 63
    17a0:	80 e0       	ldi	r24, 0x00	; 0
    17a2:	05 c0       	rjmp	.+10     	; 0x17ae <m_usb_tx_char+0xb2>
    17a4:	8f ef       	ldi	r24, 0xFF	; 255
    17a6:	03 c0       	rjmp	.+6      	; 0x17ae <m_usb_tx_char+0xb2>
    17a8:	8f ef       	ldi	r24, 0xFF	; 255
    17aa:	01 c0       	rjmp	.+2      	; 0x17ae <m_usb_tx_char+0xb2>
    17ac:	8f ef       	ldi	r24, 0xFF	; 255
    17ae:	df 91       	pop	r29
    17b0:	cf 91       	pop	r28
    17b2:	08 95       	ret

000017b4 <__vector_10>:
    17b4:	1f 92       	push	r1
    17b6:	0f 92       	push	r0
    17b8:	0f b6       	in	r0, 0x3f	; 63
    17ba:	0f 92       	push	r0
    17bc:	11 24       	eor	r1, r1
    17be:	8f 93       	push	r24
    17c0:	9f 93       	push	r25
    17c2:	ef 93       	push	r30
    17c4:	ff 93       	push	r31
    17c6:	e1 ee       	ldi	r30, 0xE1	; 225
    17c8:	f0 e0       	ldi	r31, 0x00	; 0
    17ca:	80 81       	ld	r24, Z
    17cc:	10 82       	st	Z, r1
    17ce:	83 ff       	sbrs	r24, 3
    17d0:	11 c0       	rjmp	.+34     	; 0x17f4 <__vector_10+0x40>
    17d2:	10 92 e9 00 	sts	0x00E9, r1
    17d6:	91 e0       	ldi	r25, 0x01	; 1
    17d8:	90 93 eb 00 	sts	0x00EB, r25
    17dc:	10 92 ec 00 	sts	0x00EC, r1
    17e0:	92 e1       	ldi	r25, 0x12	; 18
    17e2:	90 93 ed 00 	sts	0x00ED, r25
    17e6:	98 e0       	ldi	r25, 0x08	; 8
    17e8:	90 93 f0 00 	sts	0x00F0, r25
    17ec:	10 92 5d 01 	sts	0x015D, r1
    17f0:	10 92 5e 01 	sts	0x015E, r1
    17f4:	82 ff       	sbrs	r24, 2
    17f6:	13 c0       	rjmp	.+38     	; 0x181e <__vector_10+0x6a>
    17f8:	80 91 5d 01 	lds	r24, 0x015D
    17fc:	88 23       	and	r24, r24
    17fe:	79 f0       	breq	.+30     	; 0x181e <__vector_10+0x6a>
    1800:	80 91 5c 01 	lds	r24, 0x015C
    1804:	88 23       	and	r24, r24
    1806:	59 f0       	breq	.+22     	; 0x181e <__vector_10+0x6a>
    1808:	81 50       	subi	r24, 0x01	; 1
    180a:	80 93 5c 01 	sts	0x015C, r24
    180e:	81 11       	cpse	r24, r1
    1810:	06 c0       	rjmp	.+12     	; 0x181e <__vector_10+0x6a>
    1812:	84 e0       	ldi	r24, 0x04	; 4
    1814:	80 93 e9 00 	sts	0x00E9, r24
    1818:	8a e3       	ldi	r24, 0x3A	; 58
    181a:	80 93 e8 00 	sts	0x00E8, r24
    181e:	ff 91       	pop	r31
    1820:	ef 91       	pop	r30
    1822:	9f 91       	pop	r25
    1824:	8f 91       	pop	r24
    1826:	0f 90       	pop	r0
    1828:	0f be       	out	0x3f, r0	; 63
    182a:	0f 90       	pop	r0
    182c:	1f 90       	pop	r1
    182e:	18 95       	reti

00001830 <__vector_11>:
    1830:	1f 92       	push	r1
    1832:	0f 92       	push	r0
    1834:	0f b6       	in	r0, 0x3f	; 63
    1836:	0f 92       	push	r0
    1838:	11 24       	eor	r1, r1
    183a:	0f 93       	push	r16
    183c:	1f 93       	push	r17
    183e:	2f 93       	push	r18
    1840:	3f 93       	push	r19
    1842:	4f 93       	push	r20
    1844:	5f 93       	push	r21
    1846:	6f 93       	push	r22
    1848:	7f 93       	push	r23
    184a:	8f 93       	push	r24
    184c:	9f 93       	push	r25
    184e:	af 93       	push	r26
    1850:	bf 93       	push	r27
    1852:	cf 93       	push	r28
    1854:	df 93       	push	r29
    1856:	ef 93       	push	r30
    1858:	ff 93       	push	r31
    185a:	10 92 e9 00 	sts	0x00E9, r1
    185e:	80 91 e8 00 	lds	r24, 0x00E8
    1862:	83 ff       	sbrs	r24, 3
    1864:	51 c1       	rjmp	.+674    	; 0x1b08 <__vector_11+0x2d8>
    1866:	e1 ef       	ldi	r30, 0xF1	; 241
    1868:	f0 e0       	ldi	r31, 0x00	; 0
    186a:	70 81       	ld	r23, Z
    186c:	40 81       	ld	r20, Z
    186e:	20 81       	ld	r18, Z
    1870:	30 81       	ld	r19, Z
    1872:	93 2f       	mov	r25, r19
    1874:	80 e0       	ldi	r24, 0x00	; 0
    1876:	dc 01       	movw	r26, r24
    1878:	a2 2b       	or	r26, r18
    187a:	9d 01       	movw	r18, r26
    187c:	50 81       	ld	r21, Z
    187e:	60 81       	ld	r22, Z
    1880:	96 2f       	mov	r25, r22
    1882:	80 e0       	ldi	r24, 0x00	; 0
    1884:	85 2b       	or	r24, r21
    1886:	a0 81       	ld	r26, Z
    1888:	b0 81       	ld	r27, Z
    188a:	52 ef       	ldi	r21, 0xF2	; 242
    188c:	50 93 e8 00 	sts	0x00E8, r21
    1890:	46 30       	cpi	r20, 0x06	; 6
    1892:	09 f0       	breq	.+2      	; 0x1896 <__vector_11+0x66>
    1894:	5c c0       	rjmp	.+184    	; 0x194e <__vector_11+0x11e>
    1896:	04 c0       	rjmp	.+8      	; 0x18a0 <__vector_11+0x70>
    1898:	81 e2       	ldi	r24, 0x21	; 33
    189a:	80 93 eb 00 	sts	0x00EB, r24
    189e:	3b c1       	rjmp	.+630    	; 0x1b16 <__vector_11+0x2e6>
    18a0:	c6 e0       	ldi	r28, 0x06	; 6
    18a2:	49 ef       	ldi	r20, 0xF9	; 249
    18a4:	50 e0       	ldi	r21, 0x00	; 0
    18a6:	fa 01       	movw	r30, r20
    18a8:	65 91       	lpm	r22, Z+
    18aa:	74 91       	lpm	r23, Z
    18ac:	26 17       	cp	r18, r22
    18ae:	37 07       	cpc	r19, r23
    18b0:	19 f0       	breq	.+6      	; 0x18b8 <__vector_11+0x88>
    18b2:	49 5f       	subi	r20, 0xF9	; 249
    18b4:	5f 4f       	sbci	r21, 0xFF	; 255
    18b6:	20 c0       	rjmp	.+64     	; 0x18f8 <__vector_11+0xc8>
    18b8:	fa 01       	movw	r30, r20
    18ba:	32 96       	adiw	r30, 0x02	; 2
    18bc:	65 91       	lpm	r22, Z+
    18be:	74 91       	lpm	r23, Z
    18c0:	86 17       	cp	r24, r22
    18c2:	97 07       	cpc	r25, r23
    18c4:	19 f0       	breq	.+6      	; 0x18cc <__vector_11+0x9c>
    18c6:	49 5f       	subi	r20, 0xF9	; 249
    18c8:	5f 4f       	sbci	r21, 0xFF	; 255
    18ca:	16 c0       	rjmp	.+44     	; 0x18f8 <__vector_11+0xc8>
    18cc:	fa 01       	movw	r30, r20
    18ce:	34 96       	adiw	r30, 0x04	; 4
    18d0:	85 91       	lpm	r24, Z+
    18d2:	94 91       	lpm	r25, Z
    18d4:	28 2f       	mov	r18, r24
    18d6:	39 2f       	mov	r19, r25
    18d8:	fa 01       	movw	r30, r20
    18da:	36 96       	adiw	r30, 0x06	; 6
    18dc:	44 91       	lpm	r20, Z
    18de:	9b 2f       	mov	r25, r27
    18e0:	80 e0       	ldi	r24, 0x00	; 0
    18e2:	8a 2b       	or	r24, r26
    18e4:	8f 3f       	cpi	r24, 0xFF	; 255
    18e6:	91 05       	cpc	r25, r1
    18e8:	19 f0       	breq	.+6      	; 0x18f0 <__vector_11+0xc0>
    18ea:	10 f0       	brcs	.+4      	; 0x18f0 <__vector_11+0xc0>
    18ec:	8f ef       	ldi	r24, 0xFF	; 255
    18ee:	90 e0       	ldi	r25, 0x00	; 0
    18f0:	84 17       	cp	r24, r20
    18f2:	28 f4       	brcc	.+10     	; 0x18fe <__vector_11+0xce>
    18f4:	48 2f       	mov	r20, r24
    18f6:	03 c0       	rjmp	.+6      	; 0x18fe <__vector_11+0xce>
    18f8:	c1 50       	subi	r28, 0x01	; 1
    18fa:	a9 f6       	brne	.-86     	; 0x18a6 <__vector_11+0x76>
    18fc:	cd cf       	rjmp	.-102    	; 0x1898 <__vector_11+0x68>
    18fe:	c8 ee       	ldi	r28, 0xE8	; 232
    1900:	d0 e0       	ldi	r29, 0x00	; 0
    1902:	7e ef       	ldi	r23, 0xFE	; 254
    1904:	a1 ef       	ldi	r26, 0xF1	; 241
    1906:	b0 e0       	ldi	r27, 0x00	; 0
    1908:	10 e1       	ldi	r17, 0x10	; 16
    190a:	88 81       	ld	r24, Y
    190c:	98 2f       	mov	r25, r24
    190e:	95 70       	andi	r25, 0x05	; 5
    1910:	e1 f3       	breq	.-8      	; 0x190a <__vector_11+0xda>
    1912:	82 fd       	sbrc	r24, 2
    1914:	00 c1       	rjmp	.+512    	; 0x1b16 <__vector_11+0x2e6>
    1916:	64 2f       	mov	r22, r20
    1918:	41 31       	cpi	r20, 0x11	; 17
    191a:	08 f0       	brcs	.+2      	; 0x191e <__vector_11+0xee>
    191c:	61 2f       	mov	r22, r17
    191e:	66 23       	and	r22, r22
    1920:	09 f4       	brne	.+2      	; 0x1924 <__vector_11+0xf4>
    1922:	f6 c0       	rjmp	.+492    	; 0x1b10 <__vector_11+0x2e0>
    1924:	c9 01       	movw	r24, r18
    1926:	56 2f       	mov	r21, r22
    1928:	fc 01       	movw	r30, r24
    192a:	01 96       	adiw	r24, 0x01	; 1
    192c:	e4 91       	lpm	r30, Z
    192e:	ec 93       	st	X, r30
    1930:	51 50       	subi	r21, 0x01	; 1
    1932:	d1 f7       	brne	.-12     	; 0x1928 <__vector_11+0xf8>
    1934:	86 2f       	mov	r24, r22
    1936:	81 50       	subi	r24, 0x01	; 1
    1938:	90 e0       	ldi	r25, 0x00	; 0
    193a:	01 96       	adiw	r24, 0x01	; 1
    193c:	28 0f       	add	r18, r24
    193e:	39 1f       	adc	r19, r25
    1940:	46 1b       	sub	r20, r22
    1942:	78 83       	st	Y, r23
    1944:	41 11       	cpse	r20, r1
    1946:	e1 cf       	rjmp	.-62     	; 0x190a <__vector_11+0xda>
    1948:	60 31       	cpi	r22, 0x10	; 16
    194a:	f9 f2       	breq	.-66     	; 0x190a <__vector_11+0xda>
    194c:	e4 c0       	rjmp	.+456    	; 0x1b16 <__vector_11+0x2e6>
    194e:	45 30       	cpi	r20, 0x05	; 5
    1950:	61 f4       	brne	.+24     	; 0x196a <__vector_11+0x13a>
    1952:	8e ef       	ldi	r24, 0xFE	; 254
    1954:	80 93 e8 00 	sts	0x00E8, r24
    1958:	e8 ee       	ldi	r30, 0xE8	; 232
    195a:	f0 e0       	ldi	r31, 0x00	; 0
    195c:	80 81       	ld	r24, Z
    195e:	80 ff       	sbrs	r24, 0
    1960:	fd cf       	rjmp	.-6      	; 0x195c <__vector_11+0x12c>
    1962:	20 68       	ori	r18, 0x80	; 128
    1964:	20 93 e3 00 	sts	0x00E3, r18
    1968:	d6 c0       	rjmp	.+428    	; 0x1b16 <__vector_11+0x2e6>
    196a:	49 30       	cpi	r20, 0x09	; 9
    196c:	a1 f5       	brne	.+104    	; 0x19d6 <__vector_11+0x1a6>
    196e:	71 11       	cpse	r23, r1
    1970:	5b c0       	rjmp	.+182    	; 0x1a28 <__vector_11+0x1f8>
    1972:	20 93 5d 01 	sts	0x015D, r18
    1976:	10 92 5e 01 	sts	0x015E, r1
    197a:	10 92 5c 01 	sts	0x015C, r1
    197e:	8e ef       	ldi	r24, 0xFE	; 254
    1980:	80 93 e8 00 	sts	0x00E8, r24
    1984:	11 e0       	ldi	r17, 0x01	; 1
    1986:	83 e2       	ldi	r24, 0x23	; 35
    1988:	91 e0       	ldi	r25, 0x01	; 1
    198a:	c9 ee       	ldi	r28, 0xE9	; 233
    198c:	d0 e0       	ldi	r29, 0x00	; 0
    198e:	ab ee       	ldi	r26, 0xEB	; 235
    1990:	b0 e0       	ldi	r27, 0x00	; 0
    1992:	6c ee       	ldi	r22, 0xEC	; 236
    1994:	70 e0       	ldi	r23, 0x00	; 0
    1996:	4d ee       	ldi	r20, 0xED	; 237
    1998:	50 e0       	ldi	r21, 0x00	; 0
    199a:	18 83       	st	Y, r17
    199c:	9c 01       	movw	r18, r24
    199e:	2f 5f       	subi	r18, 0xFF	; 255
    19a0:	3f 4f       	sbci	r19, 0xFF	; 255
    19a2:	fc 01       	movw	r30, r24
    19a4:	04 91       	lpm	r16, Z
    19a6:	0c 93       	st	X, r16
    19a8:	00 23       	and	r16, r16
    19aa:	59 f0       	breq	.+22     	; 0x19c2 <__vector_11+0x192>
    19ac:	f9 01       	movw	r30, r18
    19ae:	24 91       	lpm	r18, Z
    19b0:	fb 01       	movw	r30, r22
    19b2:	20 83       	st	Z, r18
    19b4:	fc 01       	movw	r30, r24
    19b6:	32 96       	adiw	r30, 0x02	; 2
    19b8:	03 96       	adiw	r24, 0x03	; 3
    19ba:	24 91       	lpm	r18, Z
    19bc:	fa 01       	movw	r30, r20
    19be:	20 83       	st	Z, r18
    19c0:	01 c0       	rjmp	.+2      	; 0x19c4 <__vector_11+0x194>
    19c2:	c9 01       	movw	r24, r18
    19c4:	1f 5f       	subi	r17, 0xFF	; 255
    19c6:	15 30       	cpi	r17, 0x05	; 5
    19c8:	41 f7       	brne	.-48     	; 0x199a <__vector_11+0x16a>
    19ca:	ea ee       	ldi	r30, 0xEA	; 234
    19cc:	f0 e0       	ldi	r31, 0x00	; 0
    19ce:	8e e1       	ldi	r24, 0x1E	; 30
    19d0:	80 83       	st	Z, r24
    19d2:	10 82       	st	Z, r1
    19d4:	a0 c0       	rjmp	.+320    	; 0x1b16 <__vector_11+0x2e6>
    19d6:	48 30       	cpi	r20, 0x08	; 8
    19d8:	81 f4       	brne	.+32     	; 0x19fa <__vector_11+0x1ca>
    19da:	70 38       	cpi	r23, 0x80	; 128
    19dc:	09 f0       	breq	.+2      	; 0x19e0 <__vector_11+0x1b0>
    19de:	3f c0       	rjmp	.+126    	; 0x1a5e <__vector_11+0x22e>
    19e0:	e8 ee       	ldi	r30, 0xE8	; 232
    19e2:	f0 e0       	ldi	r31, 0x00	; 0
    19e4:	80 81       	ld	r24, Z
    19e6:	80 ff       	sbrs	r24, 0
    19e8:	fd cf       	rjmp	.-6      	; 0x19e4 <__vector_11+0x1b4>
    19ea:	80 91 5d 01 	lds	r24, 0x015D
    19ee:	80 93 f1 00 	sts	0x00F1, r24
    19f2:	8e ef       	ldi	r24, 0xFE	; 254
    19f4:	80 93 e8 00 	sts	0x00E8, r24
    19f8:	8e c0       	rjmp	.+284    	; 0x1b16 <__vector_11+0x2e6>
    19fa:	41 32       	cpi	r20, 0x21	; 33
    19fc:	a9 f4       	brne	.+42     	; 0x1a28 <__vector_11+0x1f8>
    19fe:	71 3a       	cpi	r23, 0xA1	; 161
    1a00:	f1 f5       	brne	.+124    	; 0x1a7e <__vector_11+0x24e>
    1a02:	e8 ee       	ldi	r30, 0xE8	; 232
    1a04:	f0 e0       	ldi	r31, 0x00	; 0
    1a06:	80 81       	ld	r24, Z
    1a08:	80 ff       	sbrs	r24, 0
    1a0a:	fd cf       	rjmp	.-6      	; 0x1a06 <__vector_11+0x1d6>
    1a0c:	ec e0       	ldi	r30, 0x0C	; 12
    1a0e:	f1 e0       	ldi	r31, 0x01	; 1
    1a10:	a1 ef       	ldi	r26, 0xF1	; 241
    1a12:	b0 e0       	ldi	r27, 0x00	; 0
    1a14:	81 91       	ld	r24, Z+
    1a16:	8c 93       	st	X, r24
    1a18:	41 e0       	ldi	r20, 0x01	; 1
    1a1a:	e3 31       	cpi	r30, 0x13	; 19
    1a1c:	f4 07       	cpc	r31, r20
    1a1e:	d1 f7       	brne	.-12     	; 0x1a14 <__vector_11+0x1e4>
    1a20:	8e ef       	ldi	r24, 0xFE	; 254
    1a22:	80 93 e8 00 	sts	0x00E8, r24
    1a26:	77 c0       	rjmp	.+238    	; 0x1b16 <__vector_11+0x2e6>
    1a28:	40 32       	cpi	r20, 0x20	; 32
    1a2a:	c9 f4       	brne	.+50     	; 0x1a5e <__vector_11+0x22e>
    1a2c:	71 32       	cpi	r23, 0x21	; 33
    1a2e:	09 f0       	breq	.+2      	; 0x1a32 <__vector_11+0x202>
    1a30:	6b c0       	rjmp	.+214    	; 0x1b08 <__vector_11+0x2d8>
    1a32:	e8 ee       	ldi	r30, 0xE8	; 232
    1a34:	f0 e0       	ldi	r31, 0x00	; 0
    1a36:	80 81       	ld	r24, Z
    1a38:	82 ff       	sbrs	r24, 2
    1a3a:	fd cf       	rjmp	.-6      	; 0x1a36 <__vector_11+0x206>
    1a3c:	ec e0       	ldi	r30, 0x0C	; 12
    1a3e:	f1 e0       	ldi	r31, 0x01	; 1
    1a40:	a1 ef       	ldi	r26, 0xF1	; 241
    1a42:	b0 e0       	ldi	r27, 0x00	; 0
    1a44:	8c 91       	ld	r24, X
    1a46:	81 93       	st	Z+, r24
    1a48:	51 e0       	ldi	r21, 0x01	; 1
    1a4a:	e3 31       	cpi	r30, 0x13	; 19
    1a4c:	f5 07       	cpc	r31, r21
    1a4e:	d1 f7       	brne	.-12     	; 0x1a44 <__vector_11+0x214>
    1a50:	e8 ee       	ldi	r30, 0xE8	; 232
    1a52:	f0 e0       	ldi	r31, 0x00	; 0
    1a54:	8b ef       	ldi	r24, 0xFB	; 251
    1a56:	80 83       	st	Z, r24
    1a58:	8e ef       	ldi	r24, 0xFE	; 254
    1a5a:	80 83       	st	Z, r24
    1a5c:	5c c0       	rjmp	.+184    	; 0x1b16 <__vector_11+0x2e6>
    1a5e:	42 32       	cpi	r20, 0x22	; 34
    1a60:	71 f4       	brne	.+28     	; 0x1a7e <__vector_11+0x24e>
    1a62:	71 32       	cpi	r23, 0x21	; 33
    1a64:	09 f0       	breq	.+2      	; 0x1a68 <__vector_11+0x238>
    1a66:	50 c0       	rjmp	.+160    	; 0x1b08 <__vector_11+0x2d8>
    1a68:	20 93 5e 01 	sts	0x015E, r18
    1a6c:	e8 ee       	ldi	r30, 0xE8	; 232
    1a6e:	f0 e0       	ldi	r31, 0x00	; 0
    1a70:	80 81       	ld	r24, Z
    1a72:	80 ff       	sbrs	r24, 0
    1a74:	fd cf       	rjmp	.-6      	; 0x1a70 <__vector_11+0x240>
    1a76:	8e ef       	ldi	r24, 0xFE	; 254
    1a78:	80 93 e8 00 	sts	0x00E8, r24
    1a7c:	4c c0       	rjmp	.+152    	; 0x1b16 <__vector_11+0x2e6>
    1a7e:	41 11       	cpse	r20, r1
    1a80:	1a c0       	rjmp	.+52     	; 0x1ab6 <__vector_11+0x286>
    1a82:	e8 ee       	ldi	r30, 0xE8	; 232
    1a84:	f0 e0       	ldi	r31, 0x00	; 0
    1a86:	20 81       	ld	r18, Z
    1a88:	20 ff       	sbrs	r18, 0
    1a8a:	fd cf       	rjmp	.-6      	; 0x1a86 <__vector_11+0x256>
    1a8c:	72 38       	cpi	r23, 0x82	; 130
    1a8e:	51 f4       	brne	.+20     	; 0x1aa4 <__vector_11+0x274>
    1a90:	e9 ee       	ldi	r30, 0xE9	; 233
    1a92:	f0 e0       	ldi	r31, 0x00	; 0
    1a94:	80 83       	st	Z, r24
    1a96:	80 91 eb 00 	lds	r24, 0x00EB
    1a9a:	85 fb       	bst	r24, 5
    1a9c:	88 27       	eor	r24, r24
    1a9e:	80 f9       	bld	r24, 0
    1aa0:	10 82       	st	Z, r1
    1aa2:	01 c0       	rjmp	.+2      	; 0x1aa6 <__vector_11+0x276>
    1aa4:	80 e0       	ldi	r24, 0x00	; 0
    1aa6:	e1 ef       	ldi	r30, 0xF1	; 241
    1aa8:	f0 e0       	ldi	r31, 0x00	; 0
    1aaa:	80 83       	st	Z, r24
    1aac:	10 82       	st	Z, r1
    1aae:	8e ef       	ldi	r24, 0xFE	; 254
    1ab0:	80 93 e8 00 	sts	0x00E8, r24
    1ab4:	30 c0       	rjmp	.+96     	; 0x1b16 <__vector_11+0x2e6>
    1ab6:	41 30       	cpi	r20, 0x01	; 1
    1ab8:	11 f0       	breq	.+4      	; 0x1abe <__vector_11+0x28e>
    1aba:	43 30       	cpi	r20, 0x03	; 3
    1abc:	29 f5       	brne	.+74     	; 0x1b08 <__vector_11+0x2d8>
    1abe:	72 30       	cpi	r23, 0x02	; 2
    1ac0:	19 f5       	brne	.+70     	; 0x1b08 <__vector_11+0x2d8>
    1ac2:	23 2b       	or	r18, r19
    1ac4:	09 f5       	brne	.+66     	; 0x1b08 <__vector_11+0x2d8>
    1ac6:	8f 77       	andi	r24, 0x7F	; 127
    1ac8:	99 27       	eor	r25, r25
    1aca:	38 2f       	mov	r19, r24
    1acc:	31 50       	subi	r19, 0x01	; 1
    1ace:	34 30       	cpi	r19, 0x04	; 4
    1ad0:	d8 f4       	brcc	.+54     	; 0x1b08 <__vector_11+0x2d8>
    1ad2:	3e ef       	ldi	r19, 0xFE	; 254
    1ad4:	30 93 e8 00 	sts	0x00E8, r19
    1ad8:	80 93 e9 00 	sts	0x00E9, r24
    1adc:	43 30       	cpi	r20, 0x03	; 3
    1ade:	21 f4       	brne	.+8      	; 0x1ae8 <__vector_11+0x2b8>
    1ae0:	81 e2       	ldi	r24, 0x21	; 33
    1ae2:	80 93 eb 00 	sts	0x00EB, r24
    1ae6:	17 c0       	rjmp	.+46     	; 0x1b16 <__vector_11+0x2e6>
    1ae8:	99 e1       	ldi	r25, 0x19	; 25
    1aea:	90 93 eb 00 	sts	0x00EB, r25
    1aee:	21 e0       	ldi	r18, 0x01	; 1
    1af0:	30 e0       	ldi	r19, 0x00	; 0
    1af2:	d9 01       	movw	r26, r18
    1af4:	02 c0       	rjmp	.+4      	; 0x1afa <__vector_11+0x2ca>
    1af6:	aa 0f       	add	r26, r26
    1af8:	bb 1f       	adc	r27, r27
    1afa:	8a 95       	dec	r24
    1afc:	e2 f7       	brpl	.-8      	; 0x1af6 <__vector_11+0x2c6>
    1afe:	ea ee       	ldi	r30, 0xEA	; 234
    1b00:	f0 e0       	ldi	r31, 0x00	; 0
    1b02:	a0 83       	st	Z, r26
    1b04:	10 82       	st	Z, r1
    1b06:	07 c0       	rjmp	.+14     	; 0x1b16 <__vector_11+0x2e6>
    1b08:	81 e2       	ldi	r24, 0x21	; 33
    1b0a:	80 93 eb 00 	sts	0x00EB, r24
    1b0e:	03 c0       	rjmp	.+6      	; 0x1b16 <__vector_11+0x2e6>
    1b10:	78 83       	st	Y, r23
    1b12:	41 11       	cpse	r20, r1
    1b14:	fa ce       	rjmp	.-524    	; 0x190a <__vector_11+0xda>
    1b16:	ff 91       	pop	r31
    1b18:	ef 91       	pop	r30
    1b1a:	df 91       	pop	r29
    1b1c:	cf 91       	pop	r28
    1b1e:	bf 91       	pop	r27
    1b20:	af 91       	pop	r26
    1b22:	9f 91       	pop	r25
    1b24:	8f 91       	pop	r24
    1b26:	7f 91       	pop	r23
    1b28:	6f 91       	pop	r22
    1b2a:	5f 91       	pop	r21
    1b2c:	4f 91       	pop	r20
    1b2e:	3f 91       	pop	r19
    1b30:	2f 91       	pop	r18
    1b32:	1f 91       	pop	r17
    1b34:	0f 91       	pop	r16
    1b36:	0f 90       	pop	r0
    1b38:	0f be       	out	0x3f, r0	; 63
    1b3a:	0f 90       	pop	r0
    1b3c:	1f 90       	pop	r1
    1b3e:	18 95       	reti

00001b40 <print_P>:
    1b40:	1f 93       	push	r17
    1b42:	cf 93       	push	r28
    1b44:	df 93       	push	r29
    1b46:	ec 01       	movw	r28, r24
    1b48:	21 96       	adiw	r28, 0x01	; 1
    1b4a:	fc 01       	movw	r30, r24
    1b4c:	14 91       	lpm	r17, Z
    1b4e:	11 23       	and	r17, r17
    1b50:	69 f0       	breq	.+26     	; 0x1b6c <print_P+0x2c>
    1b52:	1a 30       	cpi	r17, 0x0A	; 10
    1b54:	19 f4       	brne	.+6      	; 0x1b5c <print_P+0x1c>
    1b56:	8d e0       	ldi	r24, 0x0D	; 13
    1b58:	0e 94 7e 0b 	call	0x16fc	; 0x16fc <m_usb_tx_char>
    1b5c:	81 2f       	mov	r24, r17
    1b5e:	0e 94 7e 0b 	call	0x16fc	; 0x16fc <m_usb_tx_char>
    1b62:	fe 01       	movw	r30, r28
    1b64:	21 96       	adiw	r28, 0x01	; 1
    1b66:	14 91       	lpm	r17, Z
    1b68:	11 11       	cpse	r17, r1
    1b6a:	f3 cf       	rjmp	.-26     	; 0x1b52 <print_P+0x12>
    1b6c:	df 91       	pop	r29
    1b6e:	cf 91       	pop	r28
    1b70:	1f 91       	pop	r17
    1b72:	08 95       	ret

00001b74 <m_usb_tx_int>:
    1b74:	ef 92       	push	r14
    1b76:	ff 92       	push	r15
    1b78:	0f 93       	push	r16
    1b7a:	1f 93       	push	r17
    1b7c:	cf 93       	push	r28
    1b7e:	df 93       	push	r29
    1b80:	cd b7       	in	r28, 0x3d	; 61
    1b82:	de b7       	in	r29, 0x3e	; 62
    1b84:	27 97       	sbiw	r28, 0x07	; 7
    1b86:	0f b6       	in	r0, 0x3f	; 63
    1b88:	f8 94       	cli
    1b8a:	de bf       	out	0x3e, r29	; 62
    1b8c:	0f be       	out	0x3f, r0	; 63
    1b8e:	cd bf       	out	0x3d, r28	; 61
    1b90:	8e 01       	movw	r16, r28
    1b92:	0f 5f       	subi	r16, 0xFF	; 255
    1b94:	1f 4f       	sbci	r17, 0xFF	; 255
    1b96:	27 e0       	ldi	r18, 0x07	; 7
    1b98:	f8 01       	movw	r30, r16
    1b9a:	11 92       	st	Z+, r1
    1b9c:	2a 95       	dec	r18
    1b9e:	e9 f7       	brne	.-6      	; 0x1b9a <m_usb_tx_int+0x26>
    1ba0:	4a e0       	ldi	r20, 0x0A	; 10
    1ba2:	50 e0       	ldi	r21, 0x00	; 0
    1ba4:	b8 01       	movw	r22, r16
    1ba6:	0e 94 36 13 	call	0x266c	; 0x266c <itoa>
    1baa:	7e 01       	movw	r14, r28
    1bac:	f8 e0       	ldi	r31, 0x08	; 8
    1bae:	ef 0e       	add	r14, r31
    1bb0:	f1 1c       	adc	r15, r1
    1bb2:	f8 01       	movw	r30, r16
    1bb4:	81 91       	ld	r24, Z+
    1bb6:	8f 01       	movw	r16, r30
    1bb8:	81 11       	cpse	r24, r1
    1bba:	0e 94 7e 0b 	call	0x16fc	; 0x16fc <m_usb_tx_char>
    1bbe:	0e 15       	cp	r16, r14
    1bc0:	1f 05       	cpc	r17, r15
    1bc2:	b9 f7       	brne	.-18     	; 0x1bb2 <m_usb_tx_int+0x3e>
    1bc4:	27 96       	adiw	r28, 0x07	; 7
    1bc6:	0f b6       	in	r0, 0x3f	; 63
    1bc8:	f8 94       	cli
    1bca:	de bf       	out	0x3e, r29	; 62
    1bcc:	0f be       	out	0x3f, r0	; 63
    1bce:	cd bf       	out	0x3d, r28	; 61
    1bd0:	df 91       	pop	r29
    1bd2:	cf 91       	pop	r28
    1bd4:	1f 91       	pop	r17
    1bd6:	0f 91       	pop	r16
    1bd8:	ff 90       	pop	r15
    1bda:	ef 90       	pop	r14
    1bdc:	08 95       	ret

00001bde <twi_wait>:
    1bde:	20 e0       	ldi	r18, 0x00	; 0
    1be0:	30 e0       	ldi	r19, 0x00	; 0
    1be2:	ec eb       	ldi	r30, 0xBC	; 188
    1be4:	f0 e0       	ldi	r31, 0x00	; 0
    1be6:	80 81       	ld	r24, Z
    1be8:	88 23       	and	r24, r24
    1bea:	34 f0       	brlt	.+12     	; 0x1bf8 <twi_wait+0x1a>
    1bec:	2f 5f       	subi	r18, 0xFF	; 255
    1bee:	3f 4f       	sbci	r19, 0xFF	; 255
    1bf0:	29 3e       	cpi	r18, 0xE9	; 233
    1bf2:	83 e0       	ldi	r24, 0x03	; 3
    1bf4:	38 07       	cpc	r19, r24
    1bf6:	b9 f7       	brne	.-18     	; 0x1be6 <twi_wait+0x8>
    1bf8:	81 e0       	ldi	r24, 0x01	; 1
    1bfa:	28 3e       	cpi	r18, 0xE8	; 232
    1bfc:	33 40       	sbci	r19, 0x03	; 3
    1bfe:	09 f4       	brne	.+2      	; 0x1c02 <twi_wait+0x24>
    1c00:	80 e0       	ldi	r24, 0x00	; 0
    1c02:	08 95       	ret

00001c04 <send_byte>:
    1c04:	80 93 bb 00 	sts	0x00BB, r24
    1c08:	84 e8       	ldi	r24, 0x84	; 132
    1c0a:	80 93 bc 00 	sts	0x00BC, r24
    1c0e:	0e 94 ef 0d 	call	0x1bde	; 0x1bde <twi_wait>
    1c12:	88 23       	and	r24, r24
    1c14:	21 f0       	breq	.+8      	; 0x1c1e <send_byte+0x1a>
    1c16:	80 91 b9 00 	lds	r24, 0x00B9
    1c1a:	88 7f       	andi	r24, 0xF8	; 248
    1c1c:	08 95       	ret
    1c1e:	80 e0       	ldi	r24, 0x00	; 0
    1c20:	08 95       	ret

00001c22 <start_read>:
    1c22:	cf 93       	push	r28
    1c24:	c8 2f       	mov	r28, r24
    1c26:	94 ea       	ldi	r25, 0xA4	; 164
    1c28:	90 93 bc 00 	sts	0x00BC, r25
    1c2c:	0e 94 ef 0d 	call	0x1bde	; 0x1bde <twi_wait>
    1c30:	88 23       	and	r24, r24
    1c32:	61 f0       	breq	.+24     	; 0x1c4c <start_read+0x2a>
    1c34:	8c 2f       	mov	r24, r28
    1c36:	88 0f       	add	r24, r24
    1c38:	8f 5f       	subi	r24, 0xFF	; 255
    1c3a:	0e 94 02 0e 	call	0x1c04	; 0x1c04 <send_byte>
    1c3e:	88 34       	cpi	r24, 0x48	; 72
    1c40:	39 f4       	brne	.+14     	; 0x1c50 <start_read+0x2e>
    1c42:	84 e9       	ldi	r24, 0x94	; 148
    1c44:	80 93 bc 00 	sts	0x00BC, r24
    1c48:	80 e0       	ldi	r24, 0x00	; 0
    1c4a:	03 c0       	rjmp	.+6      	; 0x1c52 <start_read+0x30>
    1c4c:	80 e0       	ldi	r24, 0x00	; 0
    1c4e:	01 c0       	rjmp	.+2      	; 0x1c52 <start_read+0x30>
    1c50:	81 e0       	ldi	r24, 0x01	; 1
    1c52:	cf 91       	pop	r28
    1c54:	08 95       	ret

00001c56 <start_write>:
    1c56:	cf 93       	push	r28
    1c58:	c8 2f       	mov	r28, r24
    1c5a:	94 ea       	ldi	r25, 0xA4	; 164
    1c5c:	90 93 bc 00 	sts	0x00BC, r25
    1c60:	0e 94 ef 0d 	call	0x1bde	; 0x1bde <twi_wait>
    1c64:	88 23       	and	r24, r24
    1c66:	59 f0       	breq	.+22     	; 0x1c7e <start_write+0x28>
    1c68:	8c 2f       	mov	r24, r28
    1c6a:	88 0f       	add	r24, r24
    1c6c:	0e 94 02 0e 	call	0x1c04	; 0x1c04 <send_byte>
    1c70:	80 32       	cpi	r24, 0x20	; 32
    1c72:	39 f4       	brne	.+14     	; 0x1c82 <start_write+0x2c>
    1c74:	84 e9       	ldi	r24, 0x94	; 148
    1c76:	80 93 bc 00 	sts	0x00BC, r24
    1c7a:	80 e0       	ldi	r24, 0x00	; 0
    1c7c:	03 c0       	rjmp	.+6      	; 0x1c84 <start_write+0x2e>
    1c7e:	80 e0       	ldi	r24, 0x00	; 0
    1c80:	01 c0       	rjmp	.+2      	; 0x1c84 <start_write+0x2e>
    1c82:	81 e0       	ldi	r24, 0x01	; 1
    1c84:	cf 91       	pop	r28
    1c86:	08 95       	ret

00001c88 <end>:
    1c88:	84 e9       	ldi	r24, 0x94	; 148
    1c8a:	80 93 bc 00 	sts	0x00BC, r24
    1c8e:	08 95       	ret

00001c90 <m_wii_read>:
    1c90:	ef 92       	push	r14
    1c92:	ff 92       	push	r15
    1c94:	0f 93       	push	r16
    1c96:	1f 93       	push	r17
    1c98:	cf 93       	push	r28
    1c9a:	df 93       	push	r29
    1c9c:	cd b7       	in	r28, 0x3d	; 61
    1c9e:	de b7       	in	r29, 0x3e	; 62
    1ca0:	60 97       	sbiw	r28, 0x10	; 16
    1ca2:	0f b6       	in	r0, 0x3f	; 63
    1ca4:	f8 94       	cli
    1ca6:	de bf       	out	0x3e, r29	; 62
    1ca8:	0f be       	out	0x3f, r0	; 63
    1caa:	cd bf       	out	0x3d, r28	; 61
    1cac:	e8 2e       	mov	r14, r24
    1cae:	f9 2e       	mov	r15, r25
    1cb0:	fe 01       	movw	r30, r28
    1cb2:	31 96       	adiw	r30, 0x01	; 1
    1cb4:	80 e1       	ldi	r24, 0x10	; 16
    1cb6:	df 01       	movw	r26, r30
    1cb8:	1d 92       	st	X+, r1
    1cba:	8a 95       	dec	r24
    1cbc:	e9 f7       	brne	.-6      	; 0x1cb8 <m_wii_read+0x28>
    1cbe:	88 e5       	ldi	r24, 0x58	; 88
    1cc0:	0e 94 2b 0e 	call	0x1c56	; 0x1c56 <start_write>
    1cc4:	88 23       	and	r24, r24
    1cc6:	09 f4       	brne	.+2      	; 0x1cca <m_wii_read+0x3a>
    1cc8:	66 c0       	rjmp	.+204    	; 0x1d96 <m_wii_read+0x106>
    1cca:	86 e3       	ldi	r24, 0x36	; 54
    1ccc:	0e 94 02 0e 	call	0x1c04	; 0x1c04 <send_byte>
    1cd0:	88 23       	and	r24, r24
    1cd2:	09 f4       	brne	.+2      	; 0x1cd6 <m_wii_read+0x46>
    1cd4:	62 c0       	rjmp	.+196    	; 0x1d9a <m_wii_read+0x10a>
    1cd6:	0e 94 44 0e 	call	0x1c88	; 0x1c88 <end>
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

    1cda:	b8 e0       	ldi	r27, 0x08	; 8
    1cdc:	ba 95       	dec	r27
    1cde:	f1 f7       	brne	.-4      	; 0x1cdc <m_wii_read+0x4c>
    1ce0:	00 00       	nop
    1ce2:	88 e5       	ldi	r24, 0x58	; 88
    1ce4:	0e 94 11 0e 	call	0x1c22	; 0x1c22 <start_read>
    1ce8:	88 23       	and	r24, r24
    1cea:	09 f4       	brne	.+2      	; 0x1cee <m_wii_read+0x5e>
    1cec:	58 c0       	rjmp	.+176    	; 0x1d9e <m_wii_read+0x10e>
    1cee:	ae 01       	movw	r20, r28
    1cf0:	4f 5f       	subi	r20, 0xFF	; 255
    1cf2:	5f 4f       	sbci	r21, 0xFF	; 255
    1cf4:	8e 01       	movw	r16, r28
    1cf6:	00 5f       	subi	r16, 0xF0	; 240
    1cf8:	1f 4f       	sbci	r17, 0xFF	; 255
    1cfa:	ec eb       	ldi	r30, 0xBC	; 188
    1cfc:	f0 e0       	ldi	r31, 0x00	; 0
    1cfe:	94 ec       	ldi	r25, 0xC4	; 196
    1d00:	2b eb       	ldi	r18, 0xBB	; 187
    1d02:	30 e0       	ldi	r19, 0x00	; 0
    1d04:	90 83       	st	Z, r25
    1d06:	80 81       	ld	r24, Z
    1d08:	88 23       	and	r24, r24
    1d0a:	ec f7       	brge	.-6      	; 0x1d06 <m_wii_read+0x76>
    1d0c:	d9 01       	movw	r26, r18
    1d0e:	8c 91       	ld	r24, X
    1d10:	da 01       	movw	r26, r20
    1d12:	8d 93       	st	X+, r24
    1d14:	ad 01       	movw	r20, r26
    1d16:	a0 17       	cp	r26, r16
    1d18:	b1 07       	cpc	r27, r17
    1d1a:	a1 f7       	brne	.-24     	; 0x1d04 <m_wii_read+0x74>
    1d1c:	84 e8       	ldi	r24, 0x84	; 132
    1d1e:	80 93 bc 00 	sts	0x00BC, r24
    1d22:	ec eb       	ldi	r30, 0xBC	; 188
    1d24:	f0 e0       	ldi	r31, 0x00	; 0
    1d26:	80 81       	ld	r24, Z
    1d28:	88 23       	and	r24, r24
    1d2a:	ec f7       	brge	.-6      	; 0x1d26 <m_wii_read+0x96>
    1d2c:	80 91 bb 00 	lds	r24, 0x00BB
    1d30:	88 8b       	std	Y+16, r24	; 0x10
    1d32:	0e 94 44 0e 	call	0x1c88	; 0x1c88 <end>
    1d36:	de 01       	movw	r26, r28
    1d38:	14 96       	adiw	r26, 0x04	; 4
    1d3a:	6e 2d       	mov	r22, r14
    1d3c:	7f 2d       	mov	r23, r15
    1d3e:	4c 91       	ld	r20, X
    1d40:	24 2f       	mov	r18, r20
    1d42:	20 73       	andi	r18, 0x30	; 48
    1d44:	cd 01       	movw	r24, r26
    1d46:	02 97       	sbiw	r24, 0x02	; 2
    1d48:	fc 01       	movw	r30, r24
    1d4a:	80 81       	ld	r24, Z
    1d4c:	90 e0       	ldi	r25, 0x00	; 0
    1d4e:	f0 e1       	ldi	r31, 0x10	; 16
    1d50:	2f 9f       	mul	r18, r31
    1d52:	80 0d       	add	r24, r0
    1d54:	91 1d       	adc	r25, r1
    1d56:	11 24       	eor	r1, r1
    1d58:	fb 01       	movw	r30, r22
    1d5a:	91 83       	std	Z+1, r25	; 0x01
    1d5c:	80 83       	st	Z, r24
    1d5e:	84 2f       	mov	r24, r20
    1d60:	80 7c       	andi	r24, 0xC0	; 192
    1d62:	90 e0       	ldi	r25, 0x00	; 0
    1d64:	88 0f       	add	r24, r24
    1d66:	99 1f       	adc	r25, r25
    1d68:	88 0f       	add	r24, r24
    1d6a:	99 1f       	adc	r25, r25
    1d6c:	9d 01       	movw	r18, r26
    1d6e:	21 50       	subi	r18, 0x01	; 1
    1d70:	31 09       	sbc	r19, r1
    1d72:	f9 01       	movw	r30, r18
    1d74:	20 81       	ld	r18, Z
    1d76:	82 0f       	add	r24, r18
    1d78:	91 1d       	adc	r25, r1
    1d7a:	fb 01       	movw	r30, r22
    1d7c:	93 83       	std	Z+3, r25	; 0x03
    1d7e:	82 83       	std	Z+2, r24	; 0x02
    1d80:	4f 70       	andi	r20, 0x0F	; 15
    1d82:	44 83       	std	Z+4, r20	; 0x04
    1d84:	15 82       	std	Z+5, r1	; 0x05
    1d86:	13 96       	adiw	r26, 0x03	; 3
    1d88:	6a 5f       	subi	r22, 0xFA	; 250
    1d8a:	7f 4f       	sbci	r23, 0xFF	; 255
    1d8c:	0a 17       	cp	r16, r26
    1d8e:	1b 07       	cpc	r17, r27
    1d90:	b1 f6       	brne	.-84     	; 0x1d3e <m_wii_read+0xae>
    1d92:	81 e0       	ldi	r24, 0x01	; 1
    1d94:	05 c0       	rjmp	.+10     	; 0x1da0 <m_wii_read+0x110>
    1d96:	80 e0       	ldi	r24, 0x00	; 0
    1d98:	03 c0       	rjmp	.+6      	; 0x1da0 <m_wii_read+0x110>
    1d9a:	80 e0       	ldi	r24, 0x00	; 0
    1d9c:	01 c0       	rjmp	.+2      	; 0x1da0 <m_wii_read+0x110>
    1d9e:	80 e0       	ldi	r24, 0x00	; 0
    1da0:	60 96       	adiw	r28, 0x10	; 16
    1da2:	0f b6       	in	r0, 0x3f	; 63
    1da4:	f8 94       	cli
    1da6:	de bf       	out	0x3e, r29	; 62
    1da8:	0f be       	out	0x3f, r0	; 63
    1daa:	cd bf       	out	0x3d, r28	; 61
    1dac:	df 91       	pop	r29
    1dae:	cf 91       	pop	r28
    1db0:	1f 91       	pop	r17
    1db2:	0f 91       	pop	r16
    1db4:	ff 90       	pop	r15
    1db6:	ef 90       	pop	r14
    1db8:	08 95       	ret

00001dba <m_wii_open>:
    1dba:	0e 94 3a 01 	call	0x274	; 0x274 <m_bus_init>
    1dbe:	88 e5       	ldi	r24, 0x58	; 88
    1dc0:	0e 94 2b 0e 	call	0x1c56	; 0x1c56 <start_write>
    1dc4:	88 23       	and	r24, r24
    1dc6:	09 f4       	brne	.+2      	; 0x1dca <m_wii_open+0x10>
    1dc8:	c7 c0       	rjmp	.+398    	; 0x1f58 <m_wii_open+0x19e>
    1dca:	80 e3       	ldi	r24, 0x30	; 48
    1dcc:	0e 94 02 0e 	call	0x1c04	; 0x1c04 <send_byte>
    1dd0:	88 23       	and	r24, r24
    1dd2:	09 f4       	brne	.+2      	; 0x1dd6 <m_wii_open+0x1c>
    1dd4:	c3 c0       	rjmp	.+390    	; 0x1f5c <m_wii_open+0x1a2>
    1dd6:	81 e0       	ldi	r24, 0x01	; 1
    1dd8:	0e 94 02 0e 	call	0x1c04	; 0x1c04 <send_byte>
    1ddc:	88 23       	and	r24, r24
    1dde:	09 f4       	brne	.+2      	; 0x1de2 <m_wii_open+0x28>
    1de0:	bf c0       	rjmp	.+382    	; 0x1f60 <m_wii_open+0x1a6>
    1de2:	0e 94 44 0e 	call	0x1c88	; 0x1c88 <end>
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

    1de6:	83 ec       	ldi	r24, 0xC3	; 195
    1de8:	99 e0       	ldi	r25, 0x09	; 9
    1dea:	01 97       	sbiw	r24, 0x01	; 1
    1dec:	f1 f7       	brne	.-4      	; 0x1dea <m_wii_open+0x30>
    1dee:	00 c0       	rjmp	.+0      	; 0x1df0 <m_wii_open+0x36>
    1df0:	00 00       	nop
    1df2:	88 e5       	ldi	r24, 0x58	; 88
    1df4:	0e 94 2b 0e 	call	0x1c56	; 0x1c56 <start_write>
    1df8:	88 23       	and	r24, r24
    1dfa:	09 f4       	brne	.+2      	; 0x1dfe <m_wii_open+0x44>
    1dfc:	b3 c0       	rjmp	.+358    	; 0x1f64 <m_wii_open+0x1aa>
    1dfe:	80 e0       	ldi	r24, 0x00	; 0
    1e00:	0e 94 02 0e 	call	0x1c04	; 0x1c04 <send_byte>
    1e04:	88 23       	and	r24, r24
    1e06:	09 f4       	brne	.+2      	; 0x1e0a <m_wii_open+0x50>
    1e08:	af c0       	rjmp	.+350    	; 0x1f68 <m_wii_open+0x1ae>
    1e0a:	80 e0       	ldi	r24, 0x00	; 0
    1e0c:	0e 94 02 0e 	call	0x1c04	; 0x1c04 <send_byte>
    1e10:	88 23       	and	r24, r24
    1e12:	09 f4       	brne	.+2      	; 0x1e16 <m_wii_open+0x5c>
    1e14:	ab c0       	rjmp	.+342    	; 0x1f6c <m_wii_open+0x1b2>
    1e16:	80 e0       	ldi	r24, 0x00	; 0
    1e18:	0e 94 02 0e 	call	0x1c04	; 0x1c04 <send_byte>
    1e1c:	88 23       	and	r24, r24
    1e1e:	09 f4       	brne	.+2      	; 0x1e22 <m_wii_open+0x68>
    1e20:	a7 c0       	rjmp	.+334    	; 0x1f70 <m_wii_open+0x1b6>
    1e22:	80 e0       	ldi	r24, 0x00	; 0
    1e24:	0e 94 02 0e 	call	0x1c04	; 0x1c04 <send_byte>
    1e28:	88 23       	and	r24, r24
    1e2a:	09 f4       	brne	.+2      	; 0x1e2e <m_wii_open+0x74>
    1e2c:	a3 c0       	rjmp	.+326    	; 0x1f74 <m_wii_open+0x1ba>
    1e2e:	80 e0       	ldi	r24, 0x00	; 0
    1e30:	0e 94 02 0e 	call	0x1c04	; 0x1c04 <send_byte>
    1e34:	88 23       	and	r24, r24
    1e36:	09 f4       	brne	.+2      	; 0x1e3a <m_wii_open+0x80>
    1e38:	9f c0       	rjmp	.+318    	; 0x1f78 <m_wii_open+0x1be>
    1e3a:	80 e0       	ldi	r24, 0x00	; 0
    1e3c:	0e 94 02 0e 	call	0x1c04	; 0x1c04 <send_byte>
    1e40:	88 23       	and	r24, r24
    1e42:	09 f4       	brne	.+2      	; 0x1e46 <m_wii_open+0x8c>
    1e44:	9b c0       	rjmp	.+310    	; 0x1f7c <m_wii_open+0x1c2>
    1e46:	80 e0       	ldi	r24, 0x00	; 0
    1e48:	0e 94 02 0e 	call	0x1c04	; 0x1c04 <send_byte>
    1e4c:	88 23       	and	r24, r24
    1e4e:	09 f4       	brne	.+2      	; 0x1e52 <m_wii_open+0x98>
    1e50:	97 c0       	rjmp	.+302    	; 0x1f80 <m_wii_open+0x1c6>
    1e52:	80 e9       	ldi	r24, 0x90	; 144
    1e54:	0e 94 02 0e 	call	0x1c04	; 0x1c04 <send_byte>
    1e58:	88 23       	and	r24, r24
    1e5a:	09 f4       	brne	.+2      	; 0x1e5e <m_wii_open+0xa4>
    1e5c:	93 c0       	rjmp	.+294    	; 0x1f84 <m_wii_open+0x1ca>
    1e5e:	0e 94 44 0e 	call	0x1c88	; 0x1c88 <end>
    1e62:	83 ec       	ldi	r24, 0xC3	; 195
    1e64:	99 e0       	ldi	r25, 0x09	; 9
    1e66:	01 97       	sbiw	r24, 0x01	; 1
    1e68:	f1 f7       	brne	.-4      	; 0x1e66 <m_wii_open+0xac>
    1e6a:	00 c0       	rjmp	.+0      	; 0x1e6c <m_wii_open+0xb2>
    1e6c:	00 00       	nop
    1e6e:	88 e5       	ldi	r24, 0x58	; 88
    1e70:	0e 94 2b 0e 	call	0x1c56	; 0x1c56 <start_write>
    1e74:	88 23       	and	r24, r24
    1e76:	09 f4       	brne	.+2      	; 0x1e7a <m_wii_open+0xc0>
    1e78:	87 c0       	rjmp	.+270    	; 0x1f88 <m_wii_open+0x1ce>
    1e7a:	87 e0       	ldi	r24, 0x07	; 7
    1e7c:	0e 94 02 0e 	call	0x1c04	; 0x1c04 <send_byte>
    1e80:	88 23       	and	r24, r24
    1e82:	09 f4       	brne	.+2      	; 0x1e86 <m_wii_open+0xcc>
    1e84:	83 c0       	rjmp	.+262    	; 0x1f8c <m_wii_open+0x1d2>
    1e86:	80 e0       	ldi	r24, 0x00	; 0
    1e88:	0e 94 02 0e 	call	0x1c04	; 0x1c04 <send_byte>
    1e8c:	88 23       	and	r24, r24
    1e8e:	09 f4       	brne	.+2      	; 0x1e92 <m_wii_open+0xd8>
    1e90:	7f c0       	rjmp	.+254    	; 0x1f90 <m_wii_open+0x1d6>
    1e92:	81 e4       	ldi	r24, 0x41	; 65
    1e94:	0e 94 02 0e 	call	0x1c04	; 0x1c04 <send_byte>
    1e98:	88 23       	and	r24, r24
    1e9a:	09 f4       	brne	.+2      	; 0x1e9e <m_wii_open+0xe4>
    1e9c:	7b c0       	rjmp	.+246    	; 0x1f94 <m_wii_open+0x1da>
    1e9e:	0e 94 44 0e 	call	0x1c88	; 0x1c88 <end>
    1ea2:	83 ec       	ldi	r24, 0xC3	; 195
    1ea4:	99 e0       	ldi	r25, 0x09	; 9
    1ea6:	01 97       	sbiw	r24, 0x01	; 1
    1ea8:	f1 f7       	brne	.-4      	; 0x1ea6 <m_wii_open+0xec>
    1eaa:	00 c0       	rjmp	.+0      	; 0x1eac <m_wii_open+0xf2>
    1eac:	00 00       	nop
    1eae:	88 e5       	ldi	r24, 0x58	; 88
    1eb0:	0e 94 2b 0e 	call	0x1c56	; 0x1c56 <start_write>
    1eb4:	88 23       	and	r24, r24
    1eb6:	09 f4       	brne	.+2      	; 0x1eba <m_wii_open+0x100>
    1eb8:	6f c0       	rjmp	.+222    	; 0x1f98 <m_wii_open+0x1de>
    1eba:	8a e1       	ldi	r24, 0x1A	; 26
    1ebc:	0e 94 02 0e 	call	0x1c04	; 0x1c04 <send_byte>
    1ec0:	88 23       	and	r24, r24
    1ec2:	09 f4       	brne	.+2      	; 0x1ec6 <m_wii_open+0x10c>
    1ec4:	6b c0       	rjmp	.+214    	; 0x1f9c <m_wii_open+0x1e2>
    1ec6:	80 e4       	ldi	r24, 0x40	; 64
    1ec8:	0e 94 02 0e 	call	0x1c04	; 0x1c04 <send_byte>
    1ecc:	88 23       	and	r24, r24
    1ece:	09 f4       	brne	.+2      	; 0x1ed2 <m_wii_open+0x118>
    1ed0:	67 c0       	rjmp	.+206    	; 0x1fa0 <m_wii_open+0x1e6>
    1ed2:	80 e0       	ldi	r24, 0x00	; 0
    1ed4:	0e 94 02 0e 	call	0x1c04	; 0x1c04 <send_byte>
    1ed8:	88 23       	and	r24, r24
    1eda:	09 f4       	brne	.+2      	; 0x1ede <m_wii_open+0x124>
    1edc:	63 c0       	rjmp	.+198    	; 0x1fa4 <m_wii_open+0x1ea>
    1ede:	0e 94 44 0e 	call	0x1c88	; 0x1c88 <end>
    1ee2:	83 ec       	ldi	r24, 0xC3	; 195
    1ee4:	99 e0       	ldi	r25, 0x09	; 9
    1ee6:	01 97       	sbiw	r24, 0x01	; 1
    1ee8:	f1 f7       	brne	.-4      	; 0x1ee6 <m_wii_open+0x12c>
    1eea:	00 c0       	rjmp	.+0      	; 0x1eec <m_wii_open+0x132>
    1eec:	00 00       	nop
    1eee:	88 e5       	ldi	r24, 0x58	; 88
    1ef0:	0e 94 2b 0e 	call	0x1c56	; 0x1c56 <start_write>
    1ef4:	88 23       	and	r24, r24
    1ef6:	09 f4       	brne	.+2      	; 0x1efa <m_wii_open+0x140>
    1ef8:	57 c0       	rjmp	.+174    	; 0x1fa8 <m_wii_open+0x1ee>
    1efa:	83 e3       	ldi	r24, 0x33	; 51
    1efc:	0e 94 02 0e 	call	0x1c04	; 0x1c04 <send_byte>
    1f00:	88 23       	and	r24, r24
    1f02:	09 f4       	brne	.+2      	; 0x1f06 <m_wii_open+0x14c>
    1f04:	53 c0       	rjmp	.+166    	; 0x1fac <m_wii_open+0x1f2>
    1f06:	83 e0       	ldi	r24, 0x03	; 3
    1f08:	0e 94 02 0e 	call	0x1c04	; 0x1c04 <send_byte>
    1f0c:	88 23       	and	r24, r24
    1f0e:	09 f4       	brne	.+2      	; 0x1f12 <m_wii_open+0x158>
    1f10:	4f c0       	rjmp	.+158    	; 0x1fb0 <m_wii_open+0x1f6>
    1f12:	0e 94 44 0e 	call	0x1c88	; 0x1c88 <end>
    1f16:	83 ec       	ldi	r24, 0xC3	; 195
    1f18:	99 e0       	ldi	r25, 0x09	; 9
    1f1a:	01 97       	sbiw	r24, 0x01	; 1
    1f1c:	f1 f7       	brne	.-4      	; 0x1f1a <m_wii_open+0x160>
    1f1e:	00 c0       	rjmp	.+0      	; 0x1f20 <m_wii_open+0x166>
    1f20:	00 00       	nop
    1f22:	88 e5       	ldi	r24, 0x58	; 88
    1f24:	0e 94 2b 0e 	call	0x1c56	; 0x1c56 <start_write>
    1f28:	88 23       	and	r24, r24
    1f2a:	09 f4       	brne	.+2      	; 0x1f2e <m_wii_open+0x174>
    1f2c:	43 c0       	rjmp	.+134    	; 0x1fb4 <m_wii_open+0x1fa>
    1f2e:	80 e3       	ldi	r24, 0x30	; 48
    1f30:	0e 94 02 0e 	call	0x1c04	; 0x1c04 <send_byte>
    1f34:	88 23       	and	r24, r24
    1f36:	09 f4       	brne	.+2      	; 0x1f3a <m_wii_open+0x180>
    1f38:	3f c0       	rjmp	.+126    	; 0x1fb8 <m_wii_open+0x1fe>
    1f3a:	88 e0       	ldi	r24, 0x08	; 8
    1f3c:	0e 94 02 0e 	call	0x1c04	; 0x1c04 <send_byte>
    1f40:	88 23       	and	r24, r24
    1f42:	e1 f1       	breq	.+120    	; 0x1fbc <m_wii_open+0x202>
    1f44:	0e 94 44 0e 	call	0x1c88	; 0x1c88 <end>
    1f48:	83 ec       	ldi	r24, 0xC3	; 195
    1f4a:	99 e0       	ldi	r25, 0x09	; 9
    1f4c:	01 97       	sbiw	r24, 0x01	; 1
    1f4e:	f1 f7       	brne	.-4      	; 0x1f4c <m_wii_open+0x192>
    1f50:	00 c0       	rjmp	.+0      	; 0x1f52 <m_wii_open+0x198>
    1f52:	00 00       	nop
    1f54:	81 e0       	ldi	r24, 0x01	; 1
    1f56:	08 95       	ret
    1f58:	80 e0       	ldi	r24, 0x00	; 0
    1f5a:	08 95       	ret
    1f5c:	80 e0       	ldi	r24, 0x00	; 0
    1f5e:	08 95       	ret
    1f60:	80 e0       	ldi	r24, 0x00	; 0
    1f62:	08 95       	ret
    1f64:	80 e0       	ldi	r24, 0x00	; 0
    1f66:	08 95       	ret
    1f68:	80 e0       	ldi	r24, 0x00	; 0
    1f6a:	08 95       	ret
    1f6c:	80 e0       	ldi	r24, 0x00	; 0
    1f6e:	08 95       	ret
    1f70:	80 e0       	ldi	r24, 0x00	; 0
    1f72:	08 95       	ret
    1f74:	80 e0       	ldi	r24, 0x00	; 0
    1f76:	08 95       	ret
    1f78:	80 e0       	ldi	r24, 0x00	; 0
    1f7a:	08 95       	ret
    1f7c:	80 e0       	ldi	r24, 0x00	; 0
    1f7e:	08 95       	ret
    1f80:	80 e0       	ldi	r24, 0x00	; 0
    1f82:	08 95       	ret
    1f84:	80 e0       	ldi	r24, 0x00	; 0
    1f86:	08 95       	ret
    1f88:	80 e0       	ldi	r24, 0x00	; 0
    1f8a:	08 95       	ret
    1f8c:	80 e0       	ldi	r24, 0x00	; 0
    1f8e:	08 95       	ret
    1f90:	80 e0       	ldi	r24, 0x00	; 0
    1f92:	08 95       	ret
    1f94:	80 e0       	ldi	r24, 0x00	; 0
    1f96:	08 95       	ret
    1f98:	80 e0       	ldi	r24, 0x00	; 0
    1f9a:	08 95       	ret
    1f9c:	80 e0       	ldi	r24, 0x00	; 0
    1f9e:	08 95       	ret
    1fa0:	80 e0       	ldi	r24, 0x00	; 0
    1fa2:	08 95       	ret
    1fa4:	80 e0       	ldi	r24, 0x00	; 0
    1fa6:	08 95       	ret
    1fa8:	80 e0       	ldi	r24, 0x00	; 0
    1faa:	08 95       	ret
    1fac:	80 e0       	ldi	r24, 0x00	; 0
    1fae:	08 95       	ret
    1fb0:	80 e0       	ldi	r24, 0x00	; 0
    1fb2:	08 95       	ret
    1fb4:	80 e0       	ldi	r24, 0x00	; 0
    1fb6:	08 95       	ret
    1fb8:	80 e0       	ldi	r24, 0x00	; 0
    1fba:	08 95       	ret
    1fbc:	80 e0       	ldi	r24, 0x00	; 0
    1fbe:	08 95       	ret

00001fc0 <__subsf3>:
    1fc0:	50 58       	subi	r21, 0x80	; 128

00001fc2 <__addsf3>:
    1fc2:	bb 27       	eor	r27, r27
    1fc4:	aa 27       	eor	r26, r26
    1fc6:	0e d0       	rcall	.+28     	; 0x1fe4 <__addsf3x>
    1fc8:	27 c2       	rjmp	.+1102   	; 0x2418 <__fp_round>
    1fca:	f0 d1       	rcall	.+992    	; 0x23ac <__fp_pscA>
    1fcc:	30 f0       	brcs	.+12     	; 0x1fda <__addsf3+0x18>
    1fce:	f5 d1       	rcall	.+1002   	; 0x23ba <__fp_pscB>
    1fd0:	20 f0       	brcs	.+8      	; 0x1fda <__addsf3+0x18>
    1fd2:	31 f4       	brne	.+12     	; 0x1fe0 <__addsf3+0x1e>
    1fd4:	9f 3f       	cpi	r25, 0xFF	; 255
    1fd6:	11 f4       	brne	.+4      	; 0x1fdc <__addsf3+0x1a>
    1fd8:	1e f4       	brtc	.+6      	; 0x1fe0 <__addsf3+0x1e>
    1fda:	c0 c1       	rjmp	.+896    	; 0x235c <__fp_nan>
    1fdc:	0e f4       	brtc	.+2      	; 0x1fe0 <__addsf3+0x1e>
    1fde:	e0 95       	com	r30
    1fe0:	e7 fb       	bst	r30, 7
    1fe2:	b6 c1       	rjmp	.+876    	; 0x2350 <__fp_inf>

00001fe4 <__addsf3x>:
    1fe4:	e9 2f       	mov	r30, r25
    1fe6:	3a d2       	rcall	.+1140   	; 0x245c <__fp_split3>
    1fe8:	80 f3       	brcs	.-32     	; 0x1fca <__addsf3+0x8>
    1fea:	ba 17       	cp	r27, r26
    1fec:	62 07       	cpc	r22, r18
    1fee:	73 07       	cpc	r23, r19
    1ff0:	84 07       	cpc	r24, r20
    1ff2:	95 07       	cpc	r25, r21
    1ff4:	18 f0       	brcs	.+6      	; 0x1ffc <__addsf3x+0x18>
    1ff6:	71 f4       	brne	.+28     	; 0x2014 <__addsf3x+0x30>
    1ff8:	9e f5       	brtc	.+102    	; 0x2060 <__addsf3x+0x7c>
    1ffa:	52 c2       	rjmp	.+1188   	; 0x24a0 <__fp_zero>
    1ffc:	0e f4       	brtc	.+2      	; 0x2000 <__addsf3x+0x1c>
    1ffe:	e0 95       	com	r30
    2000:	0b 2e       	mov	r0, r27
    2002:	ba 2f       	mov	r27, r26
    2004:	a0 2d       	mov	r26, r0
    2006:	0b 01       	movw	r0, r22
    2008:	b9 01       	movw	r22, r18
    200a:	90 01       	movw	r18, r0
    200c:	0c 01       	movw	r0, r24
    200e:	ca 01       	movw	r24, r20
    2010:	a0 01       	movw	r20, r0
    2012:	11 24       	eor	r1, r1
    2014:	ff 27       	eor	r31, r31
    2016:	59 1b       	sub	r21, r25
    2018:	99 f0       	breq	.+38     	; 0x2040 <__addsf3x+0x5c>
    201a:	59 3f       	cpi	r21, 0xF9	; 249
    201c:	50 f4       	brcc	.+20     	; 0x2032 <__addsf3x+0x4e>
    201e:	50 3e       	cpi	r21, 0xE0	; 224
    2020:	68 f1       	brcs	.+90     	; 0x207c <__addsf3x+0x98>
    2022:	1a 16       	cp	r1, r26
    2024:	f0 40       	sbci	r31, 0x00	; 0
    2026:	a2 2f       	mov	r26, r18
    2028:	23 2f       	mov	r18, r19
    202a:	34 2f       	mov	r19, r20
    202c:	44 27       	eor	r20, r20
    202e:	58 5f       	subi	r21, 0xF8	; 248
    2030:	f3 cf       	rjmp	.-26     	; 0x2018 <__addsf3x+0x34>
    2032:	46 95       	lsr	r20
    2034:	37 95       	ror	r19
    2036:	27 95       	ror	r18
    2038:	a7 95       	ror	r26
    203a:	f0 40       	sbci	r31, 0x00	; 0
    203c:	53 95       	inc	r21
    203e:	c9 f7       	brne	.-14     	; 0x2032 <__addsf3x+0x4e>
    2040:	7e f4       	brtc	.+30     	; 0x2060 <__addsf3x+0x7c>
    2042:	1f 16       	cp	r1, r31
    2044:	ba 0b       	sbc	r27, r26
    2046:	62 0b       	sbc	r22, r18
    2048:	73 0b       	sbc	r23, r19
    204a:	84 0b       	sbc	r24, r20
    204c:	ba f0       	brmi	.+46     	; 0x207c <__addsf3x+0x98>
    204e:	91 50       	subi	r25, 0x01	; 1
    2050:	a1 f0       	breq	.+40     	; 0x207a <__addsf3x+0x96>
    2052:	ff 0f       	add	r31, r31
    2054:	bb 1f       	adc	r27, r27
    2056:	66 1f       	adc	r22, r22
    2058:	77 1f       	adc	r23, r23
    205a:	88 1f       	adc	r24, r24
    205c:	c2 f7       	brpl	.-16     	; 0x204e <__addsf3x+0x6a>
    205e:	0e c0       	rjmp	.+28     	; 0x207c <__addsf3x+0x98>
    2060:	ba 0f       	add	r27, r26
    2062:	62 1f       	adc	r22, r18
    2064:	73 1f       	adc	r23, r19
    2066:	84 1f       	adc	r24, r20
    2068:	48 f4       	brcc	.+18     	; 0x207c <__addsf3x+0x98>
    206a:	87 95       	ror	r24
    206c:	77 95       	ror	r23
    206e:	67 95       	ror	r22
    2070:	b7 95       	ror	r27
    2072:	f7 95       	ror	r31
    2074:	9e 3f       	cpi	r25, 0xFE	; 254
    2076:	08 f0       	brcs	.+2      	; 0x207a <__addsf3x+0x96>
    2078:	b3 cf       	rjmp	.-154    	; 0x1fe0 <__addsf3+0x1e>
    207a:	93 95       	inc	r25
    207c:	88 0f       	add	r24, r24
    207e:	08 f0       	brcs	.+2      	; 0x2082 <__addsf3x+0x9e>
    2080:	99 27       	eor	r25, r25
    2082:	ee 0f       	add	r30, r30
    2084:	97 95       	ror	r25
    2086:	87 95       	ror	r24
    2088:	08 95       	ret
    208a:	90 d1       	rcall	.+800    	; 0x23ac <__fp_pscA>
    208c:	58 f0       	brcs	.+22     	; 0x20a4 <__addsf3x+0xc0>
    208e:	80 e8       	ldi	r24, 0x80	; 128
    2090:	91 e0       	ldi	r25, 0x01	; 1
    2092:	09 f4       	brne	.+2      	; 0x2096 <__addsf3x+0xb2>
    2094:	9e ef       	ldi	r25, 0xFE	; 254
    2096:	91 d1       	rcall	.+802    	; 0x23ba <__fp_pscB>
    2098:	28 f0       	brcs	.+10     	; 0x20a4 <__addsf3x+0xc0>
    209a:	40 e8       	ldi	r20, 0x80	; 128
    209c:	51 e0       	ldi	r21, 0x01	; 1
    209e:	59 f4       	brne	.+22     	; 0x20b6 <atan2+0xe>
    20a0:	5e ef       	ldi	r21, 0xFE	; 254
    20a2:	09 c0       	rjmp	.+18     	; 0x20b6 <atan2+0xe>
    20a4:	5b c1       	rjmp	.+694    	; 0x235c <__fp_nan>
    20a6:	fc c1       	rjmp	.+1016   	; 0x24a0 <__fp_zero>

000020a8 <atan2>:
    20a8:	e9 2f       	mov	r30, r25
    20aa:	e0 78       	andi	r30, 0x80	; 128
    20ac:	d7 d1       	rcall	.+942    	; 0x245c <__fp_split3>
    20ae:	68 f3       	brcs	.-38     	; 0x208a <__addsf3x+0xa6>
    20b0:	09 2e       	mov	r0, r25
    20b2:	05 2a       	or	r0, r21
    20b4:	c1 f3       	breq	.-16     	; 0x20a6 <__addsf3x+0xc2>
    20b6:	26 17       	cp	r18, r22
    20b8:	37 07       	cpc	r19, r23
    20ba:	48 07       	cpc	r20, r24
    20bc:	59 07       	cpc	r21, r25
    20be:	38 f0       	brcs	.+14     	; 0x20ce <atan2+0x26>
    20c0:	0e 2e       	mov	r0, r30
    20c2:	07 f8       	bld	r0, 7
    20c4:	e0 25       	eor	r30, r0
    20c6:	69 f0       	breq	.+26     	; 0x20e2 <atan2+0x3a>
    20c8:	e0 25       	eor	r30, r0
    20ca:	e0 64       	ori	r30, 0x40	; 64
    20cc:	0a c0       	rjmp	.+20     	; 0x20e2 <atan2+0x3a>
    20ce:	ef 63       	ori	r30, 0x3F	; 63
    20d0:	07 f8       	bld	r0, 7
    20d2:	00 94       	com	r0
    20d4:	07 fa       	bst	r0, 7
    20d6:	db 01       	movw	r26, r22
    20d8:	b9 01       	movw	r22, r18
    20da:	9d 01       	movw	r18, r26
    20dc:	dc 01       	movw	r26, r24
    20de:	ca 01       	movw	r24, r20
    20e0:	ad 01       	movw	r20, r26
    20e2:	ef 93       	push	r30
    20e4:	4a d0       	rcall	.+148    	; 0x217a <__divsf3_pse>
    20e6:	98 d1       	rcall	.+816    	; 0x2418 <__fp_round>
    20e8:	0a d0       	rcall	.+20     	; 0x20fe <atan>
    20ea:	5f 91       	pop	r21
    20ec:	55 23       	and	r21, r21
    20ee:	31 f0       	breq	.+12     	; 0x20fc <atan2+0x54>
    20f0:	2b ed       	ldi	r18, 0xDB	; 219
    20f2:	3f e0       	ldi	r19, 0x0F	; 15
    20f4:	49 e4       	ldi	r20, 0x49	; 73
    20f6:	50 fd       	sbrc	r21, 0
    20f8:	49 ec       	ldi	r20, 0xC9	; 201
    20fa:	63 cf       	rjmp	.-314    	; 0x1fc2 <__addsf3>
    20fc:	08 95       	ret

000020fe <atan>:
    20fe:	df 93       	push	r29
    2100:	dd 27       	eor	r29, r29
    2102:	b9 2f       	mov	r27, r25
    2104:	bf 77       	andi	r27, 0x7F	; 127
    2106:	40 e8       	ldi	r20, 0x80	; 128
    2108:	5f e3       	ldi	r21, 0x3F	; 63
    210a:	16 16       	cp	r1, r22
    210c:	17 06       	cpc	r1, r23
    210e:	48 07       	cpc	r20, r24
    2110:	5b 07       	cpc	r21, r27
    2112:	10 f4       	brcc	.+4      	; 0x2118 <atan+0x1a>
    2114:	d9 2f       	mov	r29, r25
    2116:	cf d1       	rcall	.+926    	; 0x24b6 <inverse>
    2118:	9f 93       	push	r25
    211a:	8f 93       	push	r24
    211c:	7f 93       	push	r23
    211e:	6f 93       	push	r22
    2120:	7c d2       	rcall	.+1272   	; 0x261a <square>
    2122:	ec ea       	ldi	r30, 0xAC	; 172
    2124:	f0 e0       	ldi	r31, 0x00	; 0
    2126:	1d d1       	rcall	.+570    	; 0x2362 <__fp_powser>
    2128:	77 d1       	rcall	.+750    	; 0x2418 <__fp_round>
    212a:	2f 91       	pop	r18
    212c:	3f 91       	pop	r19
    212e:	4f 91       	pop	r20
    2130:	5f 91       	pop	r21
    2132:	d4 d1       	rcall	.+936    	; 0x24dc <__mulsf3x>
    2134:	dd 23       	and	r29, r29
    2136:	49 f0       	breq	.+18     	; 0x214a <atan+0x4c>
    2138:	90 58       	subi	r25, 0x80	; 128
    213a:	a2 ea       	ldi	r26, 0xA2	; 162
    213c:	2a ed       	ldi	r18, 0xDA	; 218
    213e:	3f e0       	ldi	r19, 0x0F	; 15
    2140:	49 ec       	ldi	r20, 0xC9	; 201
    2142:	5f e3       	ldi	r21, 0x3F	; 63
    2144:	d0 78       	andi	r29, 0x80	; 128
    2146:	5d 27       	eor	r21, r29
    2148:	4d df       	rcall	.-358    	; 0x1fe4 <__addsf3x>
    214a:	df 91       	pop	r29
    214c:	65 c1       	rjmp	.+714    	; 0x2418 <__fp_round>

0000214e <__cmpsf2>:
    214e:	dc d0       	rcall	.+440    	; 0x2308 <__fp_cmp>
    2150:	08 f4       	brcc	.+2      	; 0x2154 <__cmpsf2+0x6>
    2152:	81 e0       	ldi	r24, 0x01	; 1
    2154:	08 95       	ret

00002156 <cos>:
    2156:	39 d1       	rcall	.+626    	; 0x23ca <__fp_rempio2>
    2158:	e3 95       	inc	r30
    215a:	6f c1       	rjmp	.+734    	; 0x243a <__fp_sinus>

0000215c <__divsf3>:
    215c:	0c d0       	rcall	.+24     	; 0x2176 <__divsf3x>
    215e:	5c c1       	rjmp	.+696    	; 0x2418 <__fp_round>
    2160:	2c d1       	rcall	.+600    	; 0x23ba <__fp_pscB>
    2162:	40 f0       	brcs	.+16     	; 0x2174 <__divsf3+0x18>
    2164:	23 d1       	rcall	.+582    	; 0x23ac <__fp_pscA>
    2166:	30 f0       	brcs	.+12     	; 0x2174 <__divsf3+0x18>
    2168:	21 f4       	brne	.+8      	; 0x2172 <__divsf3+0x16>
    216a:	5f 3f       	cpi	r21, 0xFF	; 255
    216c:	19 f0       	breq	.+6      	; 0x2174 <__divsf3+0x18>
    216e:	f0 c0       	rjmp	.+480    	; 0x2350 <__fp_inf>
    2170:	51 11       	cpse	r21, r1
    2172:	97 c1       	rjmp	.+814    	; 0x24a2 <__fp_szero>
    2174:	f3 c0       	rjmp	.+486    	; 0x235c <__fp_nan>

00002176 <__divsf3x>:
    2176:	72 d1       	rcall	.+740    	; 0x245c <__fp_split3>
    2178:	98 f3       	brcs	.-26     	; 0x2160 <__divsf3+0x4>

0000217a <__divsf3_pse>:
    217a:	99 23       	and	r25, r25
    217c:	c9 f3       	breq	.-14     	; 0x2170 <__divsf3+0x14>
    217e:	55 23       	and	r21, r21
    2180:	b1 f3       	breq	.-20     	; 0x216e <__divsf3+0x12>
    2182:	95 1b       	sub	r25, r21
    2184:	55 0b       	sbc	r21, r21
    2186:	bb 27       	eor	r27, r27
    2188:	aa 27       	eor	r26, r26
    218a:	62 17       	cp	r22, r18
    218c:	73 07       	cpc	r23, r19
    218e:	84 07       	cpc	r24, r20
    2190:	38 f0       	brcs	.+14     	; 0x21a0 <__divsf3_pse+0x26>
    2192:	9f 5f       	subi	r25, 0xFF	; 255
    2194:	5f 4f       	sbci	r21, 0xFF	; 255
    2196:	22 0f       	add	r18, r18
    2198:	33 1f       	adc	r19, r19
    219a:	44 1f       	adc	r20, r20
    219c:	aa 1f       	adc	r26, r26
    219e:	a9 f3       	breq	.-22     	; 0x218a <__divsf3_pse+0x10>
    21a0:	33 d0       	rcall	.+102    	; 0x2208 <__divsf3_pse+0x8e>
    21a2:	0e 2e       	mov	r0, r30
    21a4:	3a f0       	brmi	.+14     	; 0x21b4 <__divsf3_pse+0x3a>
    21a6:	e0 e8       	ldi	r30, 0x80	; 128
    21a8:	30 d0       	rcall	.+96     	; 0x220a <__divsf3_pse+0x90>
    21aa:	91 50       	subi	r25, 0x01	; 1
    21ac:	50 40       	sbci	r21, 0x00	; 0
    21ae:	e6 95       	lsr	r30
    21b0:	00 1c       	adc	r0, r0
    21b2:	ca f7       	brpl	.-14     	; 0x21a6 <__divsf3_pse+0x2c>
    21b4:	29 d0       	rcall	.+82     	; 0x2208 <__divsf3_pse+0x8e>
    21b6:	fe 2f       	mov	r31, r30
    21b8:	27 d0       	rcall	.+78     	; 0x2208 <__divsf3_pse+0x8e>
    21ba:	66 0f       	add	r22, r22
    21bc:	77 1f       	adc	r23, r23
    21be:	88 1f       	adc	r24, r24
    21c0:	bb 1f       	adc	r27, r27
    21c2:	26 17       	cp	r18, r22
    21c4:	37 07       	cpc	r19, r23
    21c6:	48 07       	cpc	r20, r24
    21c8:	ab 07       	cpc	r26, r27
    21ca:	b0 e8       	ldi	r27, 0x80	; 128
    21cc:	09 f0       	breq	.+2      	; 0x21d0 <__divsf3_pse+0x56>
    21ce:	bb 0b       	sbc	r27, r27
    21d0:	80 2d       	mov	r24, r0
    21d2:	bf 01       	movw	r22, r30
    21d4:	ff 27       	eor	r31, r31
    21d6:	93 58       	subi	r25, 0x83	; 131
    21d8:	5f 4f       	sbci	r21, 0xFF	; 255
    21da:	2a f0       	brmi	.+10     	; 0x21e6 <__divsf3_pse+0x6c>
    21dc:	9e 3f       	cpi	r25, 0xFE	; 254
    21de:	51 05       	cpc	r21, r1
    21e0:	68 f0       	brcs	.+26     	; 0x21fc <__divsf3_pse+0x82>
    21e2:	b6 c0       	rjmp	.+364    	; 0x2350 <__fp_inf>
    21e4:	5e c1       	rjmp	.+700    	; 0x24a2 <__fp_szero>
    21e6:	5f 3f       	cpi	r21, 0xFF	; 255
    21e8:	ec f3       	brlt	.-6      	; 0x21e4 <__divsf3_pse+0x6a>
    21ea:	98 3e       	cpi	r25, 0xE8	; 232
    21ec:	dc f3       	brlt	.-10     	; 0x21e4 <__divsf3_pse+0x6a>
    21ee:	86 95       	lsr	r24
    21f0:	77 95       	ror	r23
    21f2:	67 95       	ror	r22
    21f4:	b7 95       	ror	r27
    21f6:	f7 95       	ror	r31
    21f8:	9f 5f       	subi	r25, 0xFF	; 255
    21fa:	c9 f7       	brne	.-14     	; 0x21ee <__divsf3_pse+0x74>
    21fc:	88 0f       	add	r24, r24
    21fe:	91 1d       	adc	r25, r1
    2200:	96 95       	lsr	r25
    2202:	87 95       	ror	r24
    2204:	97 f9       	bld	r25, 7
    2206:	08 95       	ret
    2208:	e1 e0       	ldi	r30, 0x01	; 1
    220a:	66 0f       	add	r22, r22
    220c:	77 1f       	adc	r23, r23
    220e:	88 1f       	adc	r24, r24
    2210:	bb 1f       	adc	r27, r27
    2212:	62 17       	cp	r22, r18
    2214:	73 07       	cpc	r23, r19
    2216:	84 07       	cpc	r24, r20
    2218:	ba 07       	cpc	r27, r26
    221a:	20 f0       	brcs	.+8      	; 0x2224 <__divsf3_pse+0xaa>
    221c:	62 1b       	sub	r22, r18
    221e:	73 0b       	sbc	r23, r19
    2220:	84 0b       	sbc	r24, r20
    2222:	ba 0b       	sbc	r27, r26
    2224:	ee 1f       	adc	r30, r30
    2226:	88 f7       	brcc	.-30     	; 0x220a <__divsf3_pse+0x90>
    2228:	e0 95       	com	r30
    222a:	08 95       	ret

0000222c <__fixsfsi>:
    222c:	04 d0       	rcall	.+8      	; 0x2236 <__fixunssfsi>
    222e:	68 94       	set
    2230:	b1 11       	cpse	r27, r1
    2232:	37 c1       	rjmp	.+622    	; 0x24a2 <__fp_szero>
    2234:	08 95       	ret

00002236 <__fixunssfsi>:
    2236:	1a d1       	rcall	.+564    	; 0x246c <__fp_splitA>
    2238:	88 f0       	brcs	.+34     	; 0x225c <__fixunssfsi+0x26>
    223a:	9f 57       	subi	r25, 0x7F	; 127
    223c:	90 f0       	brcs	.+36     	; 0x2262 <__fixunssfsi+0x2c>
    223e:	b9 2f       	mov	r27, r25
    2240:	99 27       	eor	r25, r25
    2242:	b7 51       	subi	r27, 0x17	; 23
    2244:	a0 f0       	brcs	.+40     	; 0x226e <__fixunssfsi+0x38>
    2246:	d1 f0       	breq	.+52     	; 0x227c <__fixunssfsi+0x46>
    2248:	66 0f       	add	r22, r22
    224a:	77 1f       	adc	r23, r23
    224c:	88 1f       	adc	r24, r24
    224e:	99 1f       	adc	r25, r25
    2250:	1a f0       	brmi	.+6      	; 0x2258 <__fixunssfsi+0x22>
    2252:	ba 95       	dec	r27
    2254:	c9 f7       	brne	.-14     	; 0x2248 <__fixunssfsi+0x12>
    2256:	12 c0       	rjmp	.+36     	; 0x227c <__fixunssfsi+0x46>
    2258:	b1 30       	cpi	r27, 0x01	; 1
    225a:	81 f0       	breq	.+32     	; 0x227c <__fixunssfsi+0x46>
    225c:	21 d1       	rcall	.+578    	; 0x24a0 <__fp_zero>
    225e:	b1 e0       	ldi	r27, 0x01	; 1
    2260:	08 95       	ret
    2262:	1e c1       	rjmp	.+572    	; 0x24a0 <__fp_zero>
    2264:	67 2f       	mov	r22, r23
    2266:	78 2f       	mov	r23, r24
    2268:	88 27       	eor	r24, r24
    226a:	b8 5f       	subi	r27, 0xF8	; 248
    226c:	39 f0       	breq	.+14     	; 0x227c <__fixunssfsi+0x46>
    226e:	b9 3f       	cpi	r27, 0xF9	; 249
    2270:	cc f3       	brlt	.-14     	; 0x2264 <__fixunssfsi+0x2e>
    2272:	86 95       	lsr	r24
    2274:	77 95       	ror	r23
    2276:	67 95       	ror	r22
    2278:	b3 95       	inc	r27
    227a:	d9 f7       	brne	.-10     	; 0x2272 <__fixunssfsi+0x3c>
    227c:	3e f4       	brtc	.+14     	; 0x228c <__fixunssfsi+0x56>
    227e:	90 95       	com	r25
    2280:	80 95       	com	r24
    2282:	70 95       	com	r23
    2284:	61 95       	neg	r22
    2286:	7f 4f       	sbci	r23, 0xFF	; 255
    2288:	8f 4f       	sbci	r24, 0xFF	; 255
    228a:	9f 4f       	sbci	r25, 0xFF	; 255
    228c:	08 95       	ret

0000228e <__floatunsisf>:
    228e:	e8 94       	clt
    2290:	09 c0       	rjmp	.+18     	; 0x22a4 <__floatsisf+0x12>

00002292 <__floatsisf>:
    2292:	97 fb       	bst	r25, 7
    2294:	3e f4       	brtc	.+14     	; 0x22a4 <__floatsisf+0x12>
    2296:	90 95       	com	r25
    2298:	80 95       	com	r24
    229a:	70 95       	com	r23
    229c:	61 95       	neg	r22
    229e:	7f 4f       	sbci	r23, 0xFF	; 255
    22a0:	8f 4f       	sbci	r24, 0xFF	; 255
    22a2:	9f 4f       	sbci	r25, 0xFF	; 255
    22a4:	99 23       	and	r25, r25
    22a6:	a9 f0       	breq	.+42     	; 0x22d2 <__floatsisf+0x40>
    22a8:	f9 2f       	mov	r31, r25
    22aa:	96 e9       	ldi	r25, 0x96	; 150
    22ac:	bb 27       	eor	r27, r27
    22ae:	93 95       	inc	r25
    22b0:	f6 95       	lsr	r31
    22b2:	87 95       	ror	r24
    22b4:	77 95       	ror	r23
    22b6:	67 95       	ror	r22
    22b8:	b7 95       	ror	r27
    22ba:	f1 11       	cpse	r31, r1
    22bc:	f8 cf       	rjmp	.-16     	; 0x22ae <__floatsisf+0x1c>
    22be:	fa f4       	brpl	.+62     	; 0x22fe <__floatsisf+0x6c>
    22c0:	bb 0f       	add	r27, r27
    22c2:	11 f4       	brne	.+4      	; 0x22c8 <__floatsisf+0x36>
    22c4:	60 ff       	sbrs	r22, 0
    22c6:	1b c0       	rjmp	.+54     	; 0x22fe <__floatsisf+0x6c>
    22c8:	6f 5f       	subi	r22, 0xFF	; 255
    22ca:	7f 4f       	sbci	r23, 0xFF	; 255
    22cc:	8f 4f       	sbci	r24, 0xFF	; 255
    22ce:	9f 4f       	sbci	r25, 0xFF	; 255
    22d0:	16 c0       	rjmp	.+44     	; 0x22fe <__floatsisf+0x6c>
    22d2:	88 23       	and	r24, r24
    22d4:	11 f0       	breq	.+4      	; 0x22da <__floatsisf+0x48>
    22d6:	96 e9       	ldi	r25, 0x96	; 150
    22d8:	11 c0       	rjmp	.+34     	; 0x22fc <__floatsisf+0x6a>
    22da:	77 23       	and	r23, r23
    22dc:	21 f0       	breq	.+8      	; 0x22e6 <__floatsisf+0x54>
    22de:	9e e8       	ldi	r25, 0x8E	; 142
    22e0:	87 2f       	mov	r24, r23
    22e2:	76 2f       	mov	r23, r22
    22e4:	05 c0       	rjmp	.+10     	; 0x22f0 <__floatsisf+0x5e>
    22e6:	66 23       	and	r22, r22
    22e8:	71 f0       	breq	.+28     	; 0x2306 <__floatsisf+0x74>
    22ea:	96 e8       	ldi	r25, 0x86	; 134
    22ec:	86 2f       	mov	r24, r22
    22ee:	70 e0       	ldi	r23, 0x00	; 0
    22f0:	60 e0       	ldi	r22, 0x00	; 0
    22f2:	2a f0       	brmi	.+10     	; 0x22fe <__floatsisf+0x6c>
    22f4:	9a 95       	dec	r25
    22f6:	66 0f       	add	r22, r22
    22f8:	77 1f       	adc	r23, r23
    22fa:	88 1f       	adc	r24, r24
    22fc:	da f7       	brpl	.-10     	; 0x22f4 <__floatsisf+0x62>
    22fe:	88 0f       	add	r24, r24
    2300:	96 95       	lsr	r25
    2302:	87 95       	ror	r24
    2304:	97 f9       	bld	r25, 7
    2306:	08 95       	ret

00002308 <__fp_cmp>:
    2308:	99 0f       	add	r25, r25
    230a:	00 08       	sbc	r0, r0
    230c:	55 0f       	add	r21, r21
    230e:	aa 0b       	sbc	r26, r26
    2310:	e0 e8       	ldi	r30, 0x80	; 128
    2312:	fe ef       	ldi	r31, 0xFE	; 254
    2314:	16 16       	cp	r1, r22
    2316:	17 06       	cpc	r1, r23
    2318:	e8 07       	cpc	r30, r24
    231a:	f9 07       	cpc	r31, r25
    231c:	c0 f0       	brcs	.+48     	; 0x234e <__fp_cmp+0x46>
    231e:	12 16       	cp	r1, r18
    2320:	13 06       	cpc	r1, r19
    2322:	e4 07       	cpc	r30, r20
    2324:	f5 07       	cpc	r31, r21
    2326:	98 f0       	brcs	.+38     	; 0x234e <__fp_cmp+0x46>
    2328:	62 1b       	sub	r22, r18
    232a:	73 0b       	sbc	r23, r19
    232c:	84 0b       	sbc	r24, r20
    232e:	95 0b       	sbc	r25, r21
    2330:	39 f4       	brne	.+14     	; 0x2340 <__fp_cmp+0x38>
    2332:	0a 26       	eor	r0, r26
    2334:	61 f0       	breq	.+24     	; 0x234e <__fp_cmp+0x46>
    2336:	23 2b       	or	r18, r19
    2338:	24 2b       	or	r18, r20
    233a:	25 2b       	or	r18, r21
    233c:	21 f4       	brne	.+8      	; 0x2346 <__fp_cmp+0x3e>
    233e:	08 95       	ret
    2340:	0a 26       	eor	r0, r26
    2342:	09 f4       	brne	.+2      	; 0x2346 <__fp_cmp+0x3e>
    2344:	a1 40       	sbci	r26, 0x01	; 1
    2346:	a6 95       	lsr	r26
    2348:	8f ef       	ldi	r24, 0xFF	; 255
    234a:	81 1d       	adc	r24, r1
    234c:	81 1d       	adc	r24, r1
    234e:	08 95       	ret

00002350 <__fp_inf>:
    2350:	97 f9       	bld	r25, 7
    2352:	9f 67       	ori	r25, 0x7F	; 127
    2354:	80 e8       	ldi	r24, 0x80	; 128
    2356:	70 e0       	ldi	r23, 0x00	; 0
    2358:	60 e0       	ldi	r22, 0x00	; 0
    235a:	08 95       	ret

0000235c <__fp_nan>:
    235c:	9f ef       	ldi	r25, 0xFF	; 255
    235e:	80 ec       	ldi	r24, 0xC0	; 192
    2360:	08 95       	ret

00002362 <__fp_powser>:
    2362:	df 93       	push	r29
    2364:	cf 93       	push	r28
    2366:	1f 93       	push	r17
    2368:	0f 93       	push	r16
    236a:	ff 92       	push	r15
    236c:	ef 92       	push	r14
    236e:	df 92       	push	r13
    2370:	7b 01       	movw	r14, r22
    2372:	8c 01       	movw	r16, r24
    2374:	68 94       	set
    2376:	05 c0       	rjmp	.+10     	; 0x2382 <__fp_powser+0x20>
    2378:	da 2e       	mov	r13, r26
    237a:	ef 01       	movw	r28, r30
    237c:	af d0       	rcall	.+350    	; 0x24dc <__mulsf3x>
    237e:	fe 01       	movw	r30, r28
    2380:	e8 94       	clt
    2382:	a5 91       	lpm	r26, Z+
    2384:	25 91       	lpm	r18, Z+
    2386:	35 91       	lpm	r19, Z+
    2388:	45 91       	lpm	r20, Z+
    238a:	55 91       	lpm	r21, Z+
    238c:	ae f3       	brts	.-22     	; 0x2378 <__fp_powser+0x16>
    238e:	ef 01       	movw	r28, r30
    2390:	29 de       	rcall	.-942    	; 0x1fe4 <__addsf3x>
    2392:	fe 01       	movw	r30, r28
    2394:	97 01       	movw	r18, r14
    2396:	a8 01       	movw	r20, r16
    2398:	da 94       	dec	r13
    239a:	79 f7       	brne	.-34     	; 0x237a <__fp_powser+0x18>
    239c:	df 90       	pop	r13
    239e:	ef 90       	pop	r14
    23a0:	ff 90       	pop	r15
    23a2:	0f 91       	pop	r16
    23a4:	1f 91       	pop	r17
    23a6:	cf 91       	pop	r28
    23a8:	df 91       	pop	r29
    23aa:	08 95       	ret

000023ac <__fp_pscA>:
    23ac:	00 24       	eor	r0, r0
    23ae:	0a 94       	dec	r0
    23b0:	16 16       	cp	r1, r22
    23b2:	17 06       	cpc	r1, r23
    23b4:	18 06       	cpc	r1, r24
    23b6:	09 06       	cpc	r0, r25
    23b8:	08 95       	ret

000023ba <__fp_pscB>:
    23ba:	00 24       	eor	r0, r0
    23bc:	0a 94       	dec	r0
    23be:	12 16       	cp	r1, r18
    23c0:	13 06       	cpc	r1, r19
    23c2:	14 06       	cpc	r1, r20
    23c4:	05 06       	cpc	r0, r21
    23c6:	08 95       	ret
    23c8:	c9 cf       	rjmp	.-110    	; 0x235c <__fp_nan>

000023ca <__fp_rempio2>:
    23ca:	50 d0       	rcall	.+160    	; 0x246c <__fp_splitA>
    23cc:	e8 f3       	brcs	.-6      	; 0x23c8 <__fp_pscB+0xe>
    23ce:	e8 94       	clt
    23d0:	e0 e0       	ldi	r30, 0x00	; 0
    23d2:	bb 27       	eor	r27, r27
    23d4:	9f 57       	subi	r25, 0x7F	; 127
    23d6:	f0 f0       	brcs	.+60     	; 0x2414 <__fp_rempio2+0x4a>
    23d8:	2a ed       	ldi	r18, 0xDA	; 218
    23da:	3f e0       	ldi	r19, 0x0F	; 15
    23dc:	49 ec       	ldi	r20, 0xC9	; 201
    23de:	06 c0       	rjmp	.+12     	; 0x23ec <__fp_rempio2+0x22>
    23e0:	ee 0f       	add	r30, r30
    23e2:	bb 0f       	add	r27, r27
    23e4:	66 1f       	adc	r22, r22
    23e6:	77 1f       	adc	r23, r23
    23e8:	88 1f       	adc	r24, r24
    23ea:	28 f0       	brcs	.+10     	; 0x23f6 <__fp_rempio2+0x2c>
    23ec:	b2 3a       	cpi	r27, 0xA2	; 162
    23ee:	62 07       	cpc	r22, r18
    23f0:	73 07       	cpc	r23, r19
    23f2:	84 07       	cpc	r24, r20
    23f4:	28 f0       	brcs	.+10     	; 0x2400 <__fp_rempio2+0x36>
    23f6:	b2 5a       	subi	r27, 0xA2	; 162
    23f8:	62 0b       	sbc	r22, r18
    23fa:	73 0b       	sbc	r23, r19
    23fc:	84 0b       	sbc	r24, r20
    23fe:	e3 95       	inc	r30
    2400:	9a 95       	dec	r25
    2402:	72 f7       	brpl	.-36     	; 0x23e0 <__fp_rempio2+0x16>
    2404:	80 38       	cpi	r24, 0x80	; 128
    2406:	30 f4       	brcc	.+12     	; 0x2414 <__fp_rempio2+0x4a>
    2408:	9a 95       	dec	r25
    240a:	bb 0f       	add	r27, r27
    240c:	66 1f       	adc	r22, r22
    240e:	77 1f       	adc	r23, r23
    2410:	88 1f       	adc	r24, r24
    2412:	d2 f7       	brpl	.-12     	; 0x2408 <__fp_rempio2+0x3e>
    2414:	90 48       	sbci	r25, 0x80	; 128
    2416:	06 c1       	rjmp	.+524    	; 0x2624 <__fp_mpack_finite>

00002418 <__fp_round>:
    2418:	09 2e       	mov	r0, r25
    241a:	03 94       	inc	r0
    241c:	00 0c       	add	r0, r0
    241e:	11 f4       	brne	.+4      	; 0x2424 <__fp_round+0xc>
    2420:	88 23       	and	r24, r24
    2422:	52 f0       	brmi	.+20     	; 0x2438 <__fp_round+0x20>
    2424:	bb 0f       	add	r27, r27
    2426:	40 f4       	brcc	.+16     	; 0x2438 <__fp_round+0x20>
    2428:	bf 2b       	or	r27, r31
    242a:	11 f4       	brne	.+4      	; 0x2430 <__fp_round+0x18>
    242c:	60 ff       	sbrs	r22, 0
    242e:	04 c0       	rjmp	.+8      	; 0x2438 <__fp_round+0x20>
    2430:	6f 5f       	subi	r22, 0xFF	; 255
    2432:	7f 4f       	sbci	r23, 0xFF	; 255
    2434:	8f 4f       	sbci	r24, 0xFF	; 255
    2436:	9f 4f       	sbci	r25, 0xFF	; 255
    2438:	08 95       	ret

0000243a <__fp_sinus>:
    243a:	ef 93       	push	r30
    243c:	e0 ff       	sbrs	r30, 0
    243e:	06 c0       	rjmp	.+12     	; 0x244c <__fp_sinus+0x12>
    2440:	a2 ea       	ldi	r26, 0xA2	; 162
    2442:	2a ed       	ldi	r18, 0xDA	; 218
    2444:	3f e0       	ldi	r19, 0x0F	; 15
    2446:	49 ec       	ldi	r20, 0xC9	; 201
    2448:	5f eb       	ldi	r21, 0xBF	; 191
    244a:	cc dd       	rcall	.-1128   	; 0x1fe4 <__addsf3x>
    244c:	e5 df       	rcall	.-54     	; 0x2418 <__fp_round>
    244e:	0f 90       	pop	r0
    2450:	03 94       	inc	r0
    2452:	01 fc       	sbrc	r0, 1
    2454:	90 58       	subi	r25, 0x80	; 128
    2456:	e9 ed       	ldi	r30, 0xD9	; 217
    2458:	f0 e0       	ldi	r31, 0x00	; 0
    245a:	f7 c0       	rjmp	.+494    	; 0x264a <__fp_powsodd>

0000245c <__fp_split3>:
    245c:	57 fd       	sbrc	r21, 7
    245e:	90 58       	subi	r25, 0x80	; 128
    2460:	44 0f       	add	r20, r20
    2462:	55 1f       	adc	r21, r21
    2464:	59 f0       	breq	.+22     	; 0x247c <__fp_splitA+0x10>
    2466:	5f 3f       	cpi	r21, 0xFF	; 255
    2468:	71 f0       	breq	.+28     	; 0x2486 <__fp_splitA+0x1a>
    246a:	47 95       	ror	r20

0000246c <__fp_splitA>:
    246c:	88 0f       	add	r24, r24
    246e:	97 fb       	bst	r25, 7
    2470:	99 1f       	adc	r25, r25
    2472:	61 f0       	breq	.+24     	; 0x248c <__fp_splitA+0x20>
    2474:	9f 3f       	cpi	r25, 0xFF	; 255
    2476:	79 f0       	breq	.+30     	; 0x2496 <__fp_splitA+0x2a>
    2478:	87 95       	ror	r24
    247a:	08 95       	ret
    247c:	12 16       	cp	r1, r18
    247e:	13 06       	cpc	r1, r19
    2480:	14 06       	cpc	r1, r20
    2482:	55 1f       	adc	r21, r21
    2484:	f2 cf       	rjmp	.-28     	; 0x246a <__fp_split3+0xe>
    2486:	46 95       	lsr	r20
    2488:	f1 df       	rcall	.-30     	; 0x246c <__fp_splitA>
    248a:	08 c0       	rjmp	.+16     	; 0x249c <__fp_splitA+0x30>
    248c:	16 16       	cp	r1, r22
    248e:	17 06       	cpc	r1, r23
    2490:	18 06       	cpc	r1, r24
    2492:	99 1f       	adc	r25, r25
    2494:	f1 cf       	rjmp	.-30     	; 0x2478 <__fp_splitA+0xc>
    2496:	86 95       	lsr	r24
    2498:	71 05       	cpc	r23, r1
    249a:	61 05       	cpc	r22, r1
    249c:	08 94       	sec
    249e:	08 95       	ret

000024a0 <__fp_zero>:
    24a0:	e8 94       	clt

000024a2 <__fp_szero>:
    24a2:	bb 27       	eor	r27, r27
    24a4:	66 27       	eor	r22, r22
    24a6:	77 27       	eor	r23, r23
    24a8:	cb 01       	movw	r24, r22
    24aa:	97 f9       	bld	r25, 7
    24ac:	08 95       	ret

000024ae <__gesf2>:
    24ae:	2c df       	rcall	.-424    	; 0x2308 <__fp_cmp>
    24b0:	08 f4       	brcc	.+2      	; 0x24b4 <__gesf2+0x6>
    24b2:	8f ef       	ldi	r24, 0xFF	; 255
    24b4:	08 95       	ret

000024b6 <inverse>:
    24b6:	9b 01       	movw	r18, r22
    24b8:	ac 01       	movw	r20, r24
    24ba:	60 e0       	ldi	r22, 0x00	; 0
    24bc:	70 e0       	ldi	r23, 0x00	; 0
    24be:	80 e8       	ldi	r24, 0x80	; 128
    24c0:	9f e3       	ldi	r25, 0x3F	; 63
    24c2:	4c ce       	rjmp	.-872    	; 0x215c <__divsf3>

000024c4 <__mulsf3>:
    24c4:	0b d0       	rcall	.+22     	; 0x24dc <__mulsf3x>
    24c6:	a8 cf       	rjmp	.-176    	; 0x2418 <__fp_round>
    24c8:	71 df       	rcall	.-286    	; 0x23ac <__fp_pscA>
    24ca:	28 f0       	brcs	.+10     	; 0x24d6 <__mulsf3+0x12>
    24cc:	76 df       	rcall	.-276    	; 0x23ba <__fp_pscB>
    24ce:	18 f0       	brcs	.+6      	; 0x24d6 <__mulsf3+0x12>
    24d0:	95 23       	and	r25, r21
    24d2:	09 f0       	breq	.+2      	; 0x24d6 <__mulsf3+0x12>
    24d4:	3d cf       	rjmp	.-390    	; 0x2350 <__fp_inf>
    24d6:	42 cf       	rjmp	.-380    	; 0x235c <__fp_nan>
    24d8:	11 24       	eor	r1, r1
    24da:	e3 cf       	rjmp	.-58     	; 0x24a2 <__fp_szero>

000024dc <__mulsf3x>:
    24dc:	bf df       	rcall	.-130    	; 0x245c <__fp_split3>
    24de:	a0 f3       	brcs	.-24     	; 0x24c8 <__mulsf3+0x4>

000024e0 <__mulsf3_pse>:
    24e0:	95 9f       	mul	r25, r21
    24e2:	d1 f3       	breq	.-12     	; 0x24d8 <__mulsf3+0x14>
    24e4:	95 0f       	add	r25, r21
    24e6:	50 e0       	ldi	r21, 0x00	; 0
    24e8:	55 1f       	adc	r21, r21
    24ea:	62 9f       	mul	r22, r18
    24ec:	f0 01       	movw	r30, r0
    24ee:	72 9f       	mul	r23, r18
    24f0:	bb 27       	eor	r27, r27
    24f2:	f0 0d       	add	r31, r0
    24f4:	b1 1d       	adc	r27, r1
    24f6:	63 9f       	mul	r22, r19
    24f8:	aa 27       	eor	r26, r26
    24fa:	f0 0d       	add	r31, r0
    24fc:	b1 1d       	adc	r27, r1
    24fe:	aa 1f       	adc	r26, r26
    2500:	64 9f       	mul	r22, r20
    2502:	66 27       	eor	r22, r22
    2504:	b0 0d       	add	r27, r0
    2506:	a1 1d       	adc	r26, r1
    2508:	66 1f       	adc	r22, r22
    250a:	82 9f       	mul	r24, r18
    250c:	22 27       	eor	r18, r18
    250e:	b0 0d       	add	r27, r0
    2510:	a1 1d       	adc	r26, r1
    2512:	62 1f       	adc	r22, r18
    2514:	73 9f       	mul	r23, r19
    2516:	b0 0d       	add	r27, r0
    2518:	a1 1d       	adc	r26, r1
    251a:	62 1f       	adc	r22, r18
    251c:	83 9f       	mul	r24, r19
    251e:	a0 0d       	add	r26, r0
    2520:	61 1d       	adc	r22, r1
    2522:	22 1f       	adc	r18, r18
    2524:	74 9f       	mul	r23, r20
    2526:	33 27       	eor	r19, r19
    2528:	a0 0d       	add	r26, r0
    252a:	61 1d       	adc	r22, r1
    252c:	23 1f       	adc	r18, r19
    252e:	84 9f       	mul	r24, r20
    2530:	60 0d       	add	r22, r0
    2532:	21 1d       	adc	r18, r1
    2534:	82 2f       	mov	r24, r18
    2536:	76 2f       	mov	r23, r22
    2538:	6a 2f       	mov	r22, r26
    253a:	11 24       	eor	r1, r1
    253c:	9f 57       	subi	r25, 0x7F	; 127
    253e:	50 40       	sbci	r21, 0x00	; 0
    2540:	8a f0       	brmi	.+34     	; 0x2564 <__mulsf3_pse+0x84>
    2542:	e1 f0       	breq	.+56     	; 0x257c <__mulsf3_pse+0x9c>
    2544:	88 23       	and	r24, r24
    2546:	4a f0       	brmi	.+18     	; 0x255a <__mulsf3_pse+0x7a>
    2548:	ee 0f       	add	r30, r30
    254a:	ff 1f       	adc	r31, r31
    254c:	bb 1f       	adc	r27, r27
    254e:	66 1f       	adc	r22, r22
    2550:	77 1f       	adc	r23, r23
    2552:	88 1f       	adc	r24, r24
    2554:	91 50       	subi	r25, 0x01	; 1
    2556:	50 40       	sbci	r21, 0x00	; 0
    2558:	a9 f7       	brne	.-22     	; 0x2544 <__mulsf3_pse+0x64>
    255a:	9e 3f       	cpi	r25, 0xFE	; 254
    255c:	51 05       	cpc	r21, r1
    255e:	70 f0       	brcs	.+28     	; 0x257c <__mulsf3_pse+0x9c>
    2560:	f7 ce       	rjmp	.-530    	; 0x2350 <__fp_inf>
    2562:	9f cf       	rjmp	.-194    	; 0x24a2 <__fp_szero>
    2564:	5f 3f       	cpi	r21, 0xFF	; 255
    2566:	ec f3       	brlt	.-6      	; 0x2562 <__mulsf3_pse+0x82>
    2568:	98 3e       	cpi	r25, 0xE8	; 232
    256a:	dc f3       	brlt	.-10     	; 0x2562 <__mulsf3_pse+0x82>
    256c:	86 95       	lsr	r24
    256e:	77 95       	ror	r23
    2570:	67 95       	ror	r22
    2572:	b7 95       	ror	r27
    2574:	f7 95       	ror	r31
    2576:	e7 95       	ror	r30
    2578:	9f 5f       	subi	r25, 0xFF	; 255
    257a:	c1 f7       	brne	.-16     	; 0x256c <__mulsf3_pse+0x8c>
    257c:	fe 2b       	or	r31, r30
    257e:	88 0f       	add	r24, r24
    2580:	91 1d       	adc	r25, r1
    2582:	96 95       	lsr	r25
    2584:	87 95       	ror	r24
    2586:	97 f9       	bld	r25, 7
    2588:	08 95       	ret

0000258a <sin>:
    258a:	9f 93       	push	r25
    258c:	1e df       	rcall	.-452    	; 0x23ca <__fp_rempio2>
    258e:	0f 90       	pop	r0
    2590:	07 fc       	sbrc	r0, 7
    2592:	ee 5f       	subi	r30, 0xFE	; 254
    2594:	52 cf       	rjmp	.-348    	; 0x243a <__fp_sinus>
    2596:	11 f4       	brne	.+4      	; 0x259c <sin+0x12>
    2598:	0e f4       	brtc	.+2      	; 0x259c <sin+0x12>
    259a:	e0 ce       	rjmp	.-576    	; 0x235c <__fp_nan>
    259c:	41 c0       	rjmp	.+130    	; 0x2620 <__fp_mpack>

0000259e <sqrt>:
    259e:	66 df       	rcall	.-308    	; 0x246c <__fp_splitA>
    25a0:	d0 f3       	brcs	.-12     	; 0x2596 <sin+0xc>
    25a2:	99 23       	and	r25, r25
    25a4:	d9 f3       	breq	.-10     	; 0x259c <sin+0x12>
    25a6:	ce f3       	brts	.-14     	; 0x259a <sin+0x10>
    25a8:	9f 57       	subi	r25, 0x7F	; 127
    25aa:	55 0b       	sbc	r21, r21
    25ac:	87 ff       	sbrs	r24, 7
    25ae:	46 d0       	rcall	.+140    	; 0x263c <__fp_norm2>
    25b0:	00 24       	eor	r0, r0
    25b2:	a0 e6       	ldi	r26, 0x60	; 96
    25b4:	40 ea       	ldi	r20, 0xA0	; 160
    25b6:	90 01       	movw	r18, r0
    25b8:	80 58       	subi	r24, 0x80	; 128
    25ba:	56 95       	lsr	r21
    25bc:	97 95       	ror	r25
    25be:	28 f4       	brcc	.+10     	; 0x25ca <sqrt+0x2c>
    25c0:	80 5c       	subi	r24, 0xC0	; 192
    25c2:	66 0f       	add	r22, r22
    25c4:	77 1f       	adc	r23, r23
    25c6:	88 1f       	adc	r24, r24
    25c8:	20 f0       	brcs	.+8      	; 0x25d2 <sqrt+0x34>
    25ca:	26 17       	cp	r18, r22
    25cc:	37 07       	cpc	r19, r23
    25ce:	48 07       	cpc	r20, r24
    25d0:	30 f4       	brcc	.+12     	; 0x25de <sqrt+0x40>
    25d2:	62 1b       	sub	r22, r18
    25d4:	73 0b       	sbc	r23, r19
    25d6:	84 0b       	sbc	r24, r20
    25d8:	20 29       	or	r18, r0
    25da:	31 29       	or	r19, r1
    25dc:	4a 2b       	or	r20, r26
    25de:	a6 95       	lsr	r26
    25e0:	17 94       	ror	r1
    25e2:	07 94       	ror	r0
    25e4:	20 25       	eor	r18, r0
    25e6:	31 25       	eor	r19, r1
    25e8:	4a 27       	eor	r20, r26
    25ea:	58 f7       	brcc	.-42     	; 0x25c2 <sqrt+0x24>
    25ec:	66 0f       	add	r22, r22
    25ee:	77 1f       	adc	r23, r23
    25f0:	88 1f       	adc	r24, r24
    25f2:	20 f0       	brcs	.+8      	; 0x25fc <sqrt+0x5e>
    25f4:	26 17       	cp	r18, r22
    25f6:	37 07       	cpc	r19, r23
    25f8:	48 07       	cpc	r20, r24
    25fa:	30 f4       	brcc	.+12     	; 0x2608 <sqrt+0x6a>
    25fc:	62 0b       	sbc	r22, r18
    25fe:	73 0b       	sbc	r23, r19
    2600:	84 0b       	sbc	r24, r20
    2602:	20 0d       	add	r18, r0
    2604:	31 1d       	adc	r19, r1
    2606:	41 1d       	adc	r20, r1
    2608:	a0 95       	com	r26
    260a:	81 f7       	brne	.-32     	; 0x25ec <sqrt+0x4e>
    260c:	b9 01       	movw	r22, r18
    260e:	84 2f       	mov	r24, r20
    2610:	91 58       	subi	r25, 0x81	; 129
    2612:	88 0f       	add	r24, r24
    2614:	96 95       	lsr	r25
    2616:	87 95       	ror	r24
    2618:	08 95       	ret

0000261a <square>:
    261a:	9b 01       	movw	r18, r22
    261c:	ac 01       	movw	r20, r24
    261e:	52 cf       	rjmp	.-348    	; 0x24c4 <__mulsf3>

00002620 <__fp_mpack>:
    2620:	9f 3f       	cpi	r25, 0xFF	; 255
    2622:	31 f0       	breq	.+12     	; 0x2630 <__fp_mpack_finite+0xc>

00002624 <__fp_mpack_finite>:
    2624:	91 50       	subi	r25, 0x01	; 1
    2626:	20 f4       	brcc	.+8      	; 0x2630 <__fp_mpack_finite+0xc>
    2628:	87 95       	ror	r24
    262a:	77 95       	ror	r23
    262c:	67 95       	ror	r22
    262e:	b7 95       	ror	r27
    2630:	88 0f       	add	r24, r24
    2632:	91 1d       	adc	r25, r1
    2634:	96 95       	lsr	r25
    2636:	87 95       	ror	r24
    2638:	97 f9       	bld	r25, 7
    263a:	08 95       	ret

0000263c <__fp_norm2>:
    263c:	91 50       	subi	r25, 0x01	; 1
    263e:	50 40       	sbci	r21, 0x00	; 0
    2640:	66 0f       	add	r22, r22
    2642:	77 1f       	adc	r23, r23
    2644:	88 1f       	adc	r24, r24
    2646:	d2 f7       	brpl	.-12     	; 0x263c <__fp_norm2>
    2648:	08 95       	ret

0000264a <__fp_powsodd>:
    264a:	9f 93       	push	r25
    264c:	8f 93       	push	r24
    264e:	7f 93       	push	r23
    2650:	6f 93       	push	r22
    2652:	ff 93       	push	r31
    2654:	ef 93       	push	r30
    2656:	9b 01       	movw	r18, r22
    2658:	ac 01       	movw	r20, r24
    265a:	34 df       	rcall	.-408    	; 0x24c4 <__mulsf3>
    265c:	ef 91       	pop	r30
    265e:	ff 91       	pop	r31
    2660:	80 de       	rcall	.-768    	; 0x2362 <__fp_powser>
    2662:	2f 91       	pop	r18
    2664:	3f 91       	pop	r19
    2666:	4f 91       	pop	r20
    2668:	5f 91       	pop	r21
    266a:	2c cf       	rjmp	.-424    	; 0x24c4 <__mulsf3>

0000266c <itoa>:
    266c:	fb 01       	movw	r30, r22
    266e:	9f 01       	movw	r18, r30
    2670:	e8 94       	clt
    2672:	42 30       	cpi	r20, 0x02	; 2
    2674:	c4 f0       	brlt	.+48     	; 0x26a6 <itoa+0x3a>
    2676:	45 32       	cpi	r20, 0x25	; 37
    2678:	b4 f4       	brge	.+44     	; 0x26a6 <itoa+0x3a>
    267a:	4a 30       	cpi	r20, 0x0A	; 10
    267c:	29 f4       	brne	.+10     	; 0x2688 <itoa+0x1c>
    267e:	97 fb       	bst	r25, 7
    2680:	1e f4       	brtc	.+6      	; 0x2688 <itoa+0x1c>
    2682:	90 95       	com	r25
    2684:	81 95       	neg	r24
    2686:	9f 4f       	sbci	r25, 0xFF	; 255
    2688:	64 2f       	mov	r22, r20
    268a:	77 27       	eor	r23, r23
    268c:	0e 94 67 13 	call	0x26ce	; 0x26ce <__udivmodhi4>
    2690:	80 5d       	subi	r24, 0xD0	; 208
    2692:	8a 33       	cpi	r24, 0x3A	; 58
    2694:	0c f0       	brlt	.+2      	; 0x2698 <itoa+0x2c>
    2696:	89 5d       	subi	r24, 0xD9	; 217
    2698:	81 93       	st	Z+, r24
    269a:	cb 01       	movw	r24, r22
    269c:	00 97       	sbiw	r24, 0x00	; 0
    269e:	a1 f7       	brne	.-24     	; 0x2688 <itoa+0x1c>
    26a0:	16 f4       	brtc	.+4      	; 0x26a6 <itoa+0x3a>
    26a2:	5d e2       	ldi	r21, 0x2D	; 45
    26a4:	51 93       	st	Z+, r21
    26a6:	10 82       	st	Z, r1
    26a8:	c9 01       	movw	r24, r18
    26aa:	0c 94 57 13 	jmp	0x26ae	; 0x26ae <strrev>

000026ae <strrev>:
    26ae:	dc 01       	movw	r26, r24
    26b0:	fc 01       	movw	r30, r24
    26b2:	67 2f       	mov	r22, r23
    26b4:	71 91       	ld	r23, Z+
    26b6:	77 23       	and	r23, r23
    26b8:	e1 f7       	brne	.-8      	; 0x26b2 <strrev+0x4>
    26ba:	32 97       	sbiw	r30, 0x02	; 2
    26bc:	04 c0       	rjmp	.+8      	; 0x26c6 <strrev+0x18>
    26be:	7c 91       	ld	r23, X
    26c0:	6d 93       	st	X+, r22
    26c2:	70 83       	st	Z, r23
    26c4:	62 91       	ld	r22, -Z
    26c6:	ae 17       	cp	r26, r30
    26c8:	bf 07       	cpc	r27, r31
    26ca:	c8 f3       	brcs	.-14     	; 0x26be <strrev+0x10>
    26cc:	08 95       	ret

000026ce <__udivmodhi4>:
    26ce:	aa 1b       	sub	r26, r26
    26d0:	bb 1b       	sub	r27, r27
    26d2:	51 e1       	ldi	r21, 0x11	; 17
    26d4:	07 c0       	rjmp	.+14     	; 0x26e4 <__udivmodhi4_ep>

000026d6 <__udivmodhi4_loop>:
    26d6:	aa 1f       	adc	r26, r26
    26d8:	bb 1f       	adc	r27, r27
    26da:	a6 17       	cp	r26, r22
    26dc:	b7 07       	cpc	r27, r23
    26de:	10 f0       	brcs	.+4      	; 0x26e4 <__udivmodhi4_ep>
    26e0:	a6 1b       	sub	r26, r22
    26e2:	b7 0b       	sbc	r27, r23

000026e4 <__udivmodhi4_ep>:
    26e4:	88 1f       	adc	r24, r24
    26e6:	99 1f       	adc	r25, r25
    26e8:	5a 95       	dec	r21
    26ea:	a9 f7       	brne	.-22     	; 0x26d6 <__udivmodhi4_loop>
    26ec:	80 95       	com	r24
    26ee:	90 95       	com	r25
    26f0:	bc 01       	movw	r22, r24
    26f2:	cd 01       	movw	r24, r26
    26f4:	08 95       	ret

000026f6 <_exit>:
    26f6:	f8 94       	cli

000026f8 <__stop_program>:
    26f8:	ff cf       	rjmp	.-2      	; 0x26f8 <__stop_program>
