
LocalTest.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000c  00800100  00001da8  00001e3c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001da8  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000006e  0080010c  0080010c  00001e48  2**0
                  ALLOC
  3 .stab         0000387c  00000000  00000000  00001e48  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00001166  00000000  00000000  000056c4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      0000002f  00000000  00000000  0000682a  2**0
                  CONTENTS, READONLY
  6 .debug_aranges 000001e8  00000000  00000000  00006859  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00001ebf  00000000  00000000  00006a41  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00000804  00000000  00000000  00008900  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00000c9b  00000000  00000000  00009104  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000604  00000000  00000000  00009da0  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    000006fb  00000000  00000000  0000a3a4  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    000025c0  00000000  00000000  0000aa9f  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000200  00000000  00000000  0000d05f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 d5 00 	jmp	0x1aa	; 0x1aa <__ctors_end>
       4:	0c 94 f2 00 	jmp	0x1e4	; 0x1e4 <__bad_interrupt>
       8:	0c 94 f2 00 	jmp	0x1e4	; 0x1e4 <__bad_interrupt>
       c:	0c 94 f2 00 	jmp	0x1e4	; 0x1e4 <__bad_interrupt>
      10:	0c 94 f2 00 	jmp	0x1e4	; 0x1e4 <__bad_interrupt>
      14:	0c 94 f2 00 	jmp	0x1e4	; 0x1e4 <__bad_interrupt>
      18:	0c 94 f2 00 	jmp	0x1e4	; 0x1e4 <__bad_interrupt>
      1c:	0c 94 f2 00 	jmp	0x1e4	; 0x1e4 <__bad_interrupt>
      20:	0c 94 f2 00 	jmp	0x1e4	; 0x1e4 <__bad_interrupt>
      24:	0c 94 f2 00 	jmp	0x1e4	; 0x1e4 <__bad_interrupt>
      28:	0c 94 4b 07 	jmp	0xe96	; 0xe96 <__vector_10>
      2c:	0c 94 89 07 	jmp	0xf12	; 0xf12 <__vector_11>
      30:	0c 94 f2 00 	jmp	0x1e4	; 0x1e4 <__bad_interrupt>
      34:	0c 94 f2 00 	jmp	0x1e4	; 0x1e4 <__bad_interrupt>
      38:	0c 94 f2 00 	jmp	0x1e4	; 0x1e4 <__bad_interrupt>
      3c:	0c 94 f2 00 	jmp	0x1e4	; 0x1e4 <__bad_interrupt>
      40:	0c 94 f2 00 	jmp	0x1e4	; 0x1e4 <__bad_interrupt>
      44:	0c 94 f2 00 	jmp	0x1e4	; 0x1e4 <__bad_interrupt>
      48:	0c 94 f2 00 	jmp	0x1e4	; 0x1e4 <__bad_interrupt>
      4c:	0c 94 f2 00 	jmp	0x1e4	; 0x1e4 <__bad_interrupt>
      50:	0c 94 f2 00 	jmp	0x1e4	; 0x1e4 <__bad_interrupt>
      54:	0c 94 f2 00 	jmp	0x1e4	; 0x1e4 <__bad_interrupt>
      58:	0c 94 f2 00 	jmp	0x1e4	; 0x1e4 <__bad_interrupt>
      5c:	0c 94 f2 00 	jmp	0x1e4	; 0x1e4 <__bad_interrupt>
      60:	0c 94 f2 00 	jmp	0x1e4	; 0x1e4 <__bad_interrupt>
      64:	0c 94 f2 00 	jmp	0x1e4	; 0x1e4 <__bad_interrupt>
      68:	0c 94 f2 00 	jmp	0x1e4	; 0x1e4 <__bad_interrupt>
      6c:	0c 94 f2 00 	jmp	0x1e4	; 0x1e4 <__bad_interrupt>
      70:	0c 94 f2 00 	jmp	0x1e4	; 0x1e4 <__bad_interrupt>
      74:	0c 94 f2 00 	jmp	0x1e4	; 0x1e4 <__bad_interrupt>
      78:	0c 94 f2 00 	jmp	0x1e4	; 0x1e4 <__bad_interrupt>
      7c:	0c 94 f2 00 	jmp	0x1e4	; 0x1e4 <__bad_interrupt>
      80:	0c 94 f2 00 	jmp	0x1e4	; 0x1e4 <__bad_interrupt>
      84:	0c 94 f2 00 	jmp	0x1e4	; 0x1e4 <__bad_interrupt>
      88:	0c 94 f2 00 	jmp	0x1e4	; 0x1e4 <__bad_interrupt>
      8c:	0c 94 f2 00 	jmp	0x1e4	; 0x1e4 <__bad_interrupt>
      90:	0c 94 f2 00 	jmp	0x1e4	; 0x1e4 <__bad_interrupt>
      94:	0c 94 f2 00 	jmp	0x1e4	; 0x1e4 <__bad_interrupt>
      98:	0c 94 f2 00 	jmp	0x1e4	; 0x1e4 <__bad_interrupt>
      9c:	0c 94 f2 00 	jmp	0x1e4	; 0x1e4 <__bad_interrupt>
      a0:	0c 94 f2 00 	jmp	0x1e4	; 0x1e4 <__bad_interrupt>
      a4:	0c 94 f2 00 	jmp	0x1e4	; 0x1e4 <__bad_interrupt>
      a8:	0c 94 f2 00 	jmp	0x1e4	; 0x1e4 <__bad_interrupt>
      ac:	08 4a       	sbci	r16, 0xA8	; 168
      ae:	d7 3b       	cpi	r29, 0xB7	; 183
      b0:	3b ce       	rjmp	.-906    	; 0xfffffd28 <__eeprom_end+0xff7efd28>
      b2:	01 6e       	ori	r16, 0xE1	; 225
      b4:	84 bc       	out	0x24, r8	; 36
      b6:	bf fd       	.word	0xfdbf	; ????
      b8:	c1 2f       	mov	r28, r17
      ba:	3d 6c       	ori	r19, 0xCD	; 205
      bc:	74 31       	cpi	r23, 0x14	; 20
      be:	9a bd       	out	0x2a, r25	; 42
      c0:	56 83       	std	Z+6, r21	; 0x06
      c2:	3d da       	rcall	.-2950   	; 0xfffff53e <__eeprom_end+0xff7ef53e>
      c4:	3d 00       	.word	0x003d	; ????
      c6:	c7 7f       	andi	r28, 0xF7	; 247
      c8:	11 be       	out	0x31, r1	; 49
      ca:	d9 e4       	ldi	r29, 0x49	; 73
      cc:	bb 4c       	sbci	r27, 0xCB	; 203
      ce:	3e 91       	ld	r19, -X
      d0:	6b aa       	std	Y+51, r6	; 0x33
      d2:	aa be       	out	0x3a, r10	; 58
      d4:	00 00       	nop
      d6:	00 80       	ld	r0, Z
      d8:	3f 05       	cpc	r19, r15
      da:	a8 4c       	sbci	r26, 0xC8	; 200
      dc:	cd b2       	in	r12, 0x1d	; 29
      de:	d4 4e       	sbci	r29, 0xE4	; 228
      e0:	b9 38       	cpi	r27, 0x89	; 137
      e2:	36 a9       	ldd	r19, Z+54	; 0x36
      e4:	02 0c       	add	r0, r2
      e6:	50 b9       	out	0x00, r21	; 0
      e8:	91 86       	std	Z+9, r9	; 0x09
      ea:	88 08       	sbc	r8, r8
      ec:	3c a6       	std	Y+44, r3	; 0x2c
      ee:	aa aa       	std	Y+50, r10	; 0x32
      f0:	2a be       	out	0x3a, r2	; 58
      f2:	00 00       	nop
      f4:	00 80       	ld	r0, Z
      f6:	3f 00       	.word	0x003f	; ????

000000f7 <descriptor_list>:
      f7:	00 01 00 00 2b 01 12 00 02 00 00 3d 01 43 00 03     ....+......=.C..
     107:	00 00 80 01 04 01 03 09 04 84 01 12 02 03 09 04     ................
     117:	98 01 06 03 03 09 04 a0 01 08                       ..........

00000121 <endpoint_config_table>:
     121:	00 01 c1 12 01 80 36 01 81 36                       ......6..6

0000012b <device_descriptor>:
     12b:	12 01 00 02 02 00 00 10 c0 16 7a 04 00 01 01 02     ..........z.....
     13b:	03 01                                               ..

0000013d <config1_descriptor>:
     13d:	09 02 43 00 02 01 00 c0 32 09 04 00 00 01 02 02     ..C.....2.......
     14d:	01 00 05 24 00 10 01 05 24 01 01 01 04 24 02 06     ...$....$....$..
     15d:	05 24 06 00 01 07 05 82 03 10 00 40 09 04 01 00     .$.........@....
     16d:	02 0a 00 00 00 07 05 03 02 40 00 00 07 05 84 02     .........@......
     17d:	40 00 00                                            @..

00000180 <string0>:
     180:	04 03 09 04                                         ....

00000184 <string1>:
     184:	12 03 4a 00 2e 00 20 00 46 00 69 00 65 00 6e 00     ..J... .F.i.e.n.
     194:	65 00 00 00                                         e...

00000198 <string2>:
     198:	06 03 4d 00 32 00 00 00                             ..M.2...

000001a0 <string3>:
     1a0:	08 03 34 00 31 00 30 00 00 00                       ..4.1.0...

000001aa <__ctors_end>:
     1aa:	11 24       	eor	r1, r1
     1ac:	1f be       	out	0x3f, r1	; 63
     1ae:	cf ef       	ldi	r28, 0xFF	; 255
     1b0:	da e0       	ldi	r29, 0x0A	; 10
     1b2:	de bf       	out	0x3e, r29	; 62
     1b4:	cd bf       	out	0x3d, r28	; 61

000001b6 <__do_copy_data>:
     1b6:	11 e0       	ldi	r17, 0x01	; 1
     1b8:	a0 e0       	ldi	r26, 0x00	; 0
     1ba:	b1 e0       	ldi	r27, 0x01	; 1
     1bc:	e8 ea       	ldi	r30, 0xA8	; 168
     1be:	fd e1       	ldi	r31, 0x1D	; 29
     1c0:	02 c0       	rjmp	.+4      	; 0x1c6 <__do_copy_data+0x10>
     1c2:	05 90       	lpm	r0, Z+
     1c4:	0d 92       	st	X+, r0
     1c6:	ac 30       	cpi	r26, 0x0C	; 12
     1c8:	b1 07       	cpc	r27, r17
     1ca:	d9 f7       	brne	.-10     	; 0x1c2 <__do_copy_data+0xc>

000001cc <__do_clear_bss>:
     1cc:	21 e0       	ldi	r18, 0x01	; 1
     1ce:	ac e0       	ldi	r26, 0x0C	; 12
     1d0:	b1 e0       	ldi	r27, 0x01	; 1
     1d2:	01 c0       	rjmp	.+2      	; 0x1d6 <.do_clear_bss_start>

000001d4 <.do_clear_bss_loop>:
     1d4:	1d 92       	st	X+, r1

000001d6 <.do_clear_bss_start>:
     1d6:	aa 37       	cpi	r26, 0x7A	; 122
     1d8:	b2 07       	cpc	r27, r18
     1da:	e1 f7       	brne	.-8      	; 0x1d4 <.do_clear_bss_loop>
     1dc:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <main>
     1e0:	0c 94 d2 0e 	jmp	0x1da4	; 0x1da4 <_exit>

000001e4 <__bad_interrupt>:
     1e4:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001e8 <main>:


 int main(void){
	 
	 //MATLAB PLOTTING STUFFS*****************************************************************
	m_clockdivide(0);
     1e8:	e1 e6       	ldi	r30, 0x61	; 97
     1ea:	f0 e0       	ldi	r31, 0x00	; 0
     1ec:	80 e8       	ldi	r24, 0x80	; 128
     1ee:	80 83       	st	Z, r24
     1f0:	10 82       	st	Z, r1
		 
	long count = 0;
	
	m_red(ON);
     1f2:	6e 9a       	sbi	0x0d, 6	; 13
     1f4:	76 98       	cbi	0x0e, 6	; 14
	m_green(ON);
     1f6:	6a 9a       	sbi	0x0d, 2	; 13
     1f8:	72 98       	cbi	0x0e, 2	; 14

	m_bus_init();
     1fa:	0e 94 3b 01 	call	0x276	; 0x276 <m_bus_init>
	m_wii_open();
     1fe:	0e 94 34 0a 	call	0x1468	; 0x1468 <m_wii_open>
	calibrate();
     202:	0e 94 0f 04 	call	0x81e	; 0x81e <calibrate>
	m_usb_init(); // connect usb
     206:	0e 94 90 06 	call	0xd20	; 0xd20 <m_usb_init>
	while(!m_usb_isconnected()){};  //wait for connection
     20a:	0e 94 a9 06 	call	0xd52	; 0xd52 <m_usb_isconnected>
     20e:	88 23       	and	r24, r24
     210:	e1 f3       	breq	.-8      	; 0x20a <main+0x22>

	m_red(OFF);
     212:	6e 9a       	sbi	0x0d, 6	; 13
     214:	76 9a       	sbi	0x0e, 6	; 14
	m_green(OFF);
     216:	6a 9a       	sbi	0x0d, 2	; 13
     218:	72 9a       	sbi	0x0e, 2	; 14
 #define CLOCK 0
 
 //long count = 0;


 int main(void){
     21a:	0e e8       	ldi	r16, 0x8E	; 142
     21c:	11 e0       	ldi	r17, 0x01	; 1
	char rx_buffer; //computer interactions
	
	int i;
	while(1){

		m_red(ON);
     21e:	6e 9a       	sbi	0x0d, 6	; 13
     220:	76 98       	cbi	0x0e, 6	; 14
		m_green(OFF);
     222:	6a 9a       	sbi	0x0d, 2	; 13
     224:	72 9a       	sbi	0x0e, 2	; 14
		localize(data);
     226:	86 e5       	ldi	r24, 0x56	; 86
     228:	91 e0       	ldi	r25, 0x01	; 1
     22a:	0e 94 64 04 	call	0x8c8	; 0x8c8 <localize>
		m_red(OFF);
     22e:	6e 9a       	sbi	0x0d, 6	; 13
     230:	76 9a       	sbi	0x0e, 6	; 14
		m_green(ON);
     232:	6a 9a       	sbi	0x0d, 2	; 13
     234:	72 98       	cbi	0x0e, 2	; 14

		while(!m_usb_rx_available());  	//wait for an indication from the computer
     236:	0e 94 ca 06 	call	0xd94	; 0xd94 <m_usb_rx_available>
     23a:	88 23       	and	r24, r24
     23c:	e1 f3       	breq	.-8      	; 0x236 <main+0x4e>
		rx_buffer = m_usb_rx_char();  	//grab the computer packet
     23e:	0e 94 ac 06 	call	0xd58	; 0xd58 <m_usb_rx_char>
     242:	c8 2f       	mov	r28, r24

		m_usb_rx_flush();  				//clear buffer
     244:	0e 94 d9 06 	call	0xdb2	; 0xdb2 <m_usb_rx_flush>

		if(rx_buffer == 1) {  			//computer wants ir buffer
     248:	c1 30       	cpi	r28, 0x01	; 1
     24a:	49 f7       	brne	.-46     	; 0x21e <main+0x36>
     24c:	c6 e5       	ldi	r28, 0x56	; 86
     24e:	d1 e0       	ldi	r29, 0x01	; 1
			//write ir buffer as concatenated hex:  i.e. f0f1f4f5		

			for (i = 0 ; i < 14 ; i++){
			m_usb_tx_int((int)data[i]);
     250:	69 91       	ld	r22, Y+
     252:	79 91       	ld	r23, Y+
     254:	89 91       	ld	r24, Y+
     256:	99 91       	ld	r25, Y+
     258:	0e 94 6d 0c 	call	0x18da	; 0x18da <__fixsfsi>
     25c:	cb 01       	movw	r24, r22
     25e:	0e 94 11 09 	call	0x1222	; 0x1222 <m_usb_tx_int>
			m_usb_tx_char('\t');
     262:	89 e0       	ldi	r24, 0x09	; 9
     264:	0e 94 ef 06 	call	0xdde	; 0xdde <m_usb_tx_char>
		m_usb_rx_flush();  				//clear buffer

		if(rx_buffer == 1) {  			//computer wants ir buffer
			//write ir buffer as concatenated hex:  i.e. f0f1f4f5		

			for (i = 0 ; i < 14 ; i++){
     268:	c0 17       	cp	r28, r16
     26a:	d1 07       	cpc	r29, r17
     26c:	89 f7       	brne	.-30     	; 0x250 <main+0x68>
			m_usb_tx_int((int)data[i]);
			m_usb_tx_char('\t');

			}

			m_usb_tx_char('\n');  //MATLAB serial command reads 1 line at a time
     26e:	8a e0       	ldi	r24, 0x0A	; 10
     270:	0e 94 ef 06 	call	0xdde	; 0xdde <m_usb_tx_char>
     274:	d4 cf       	rjmp	.-88     	; 0x21e <main+0x36>

00000276 <m_bus_init>:
     276:	58 9a       	sbi	0x0b, 0	; 11
     278:	59 9a       	sbi	0x0b, 1	; 11
     27a:	5a 9a       	sbi	0x0b, 2	; 11
     27c:	8c e0       	ldi	r24, 0x0C	; 12
     27e:	80 93 b8 00 	sts	0x00B8, r24
     282:	e9 e6       	ldi	r30, 0x69	; 105
     284:	f0 e0       	ldi	r31, 0x00	; 0
     286:	80 81       	ld	r24, Z
     288:	80 62       	ori	r24, 0x20	; 32
     28a:	80 83       	st	Z, r24
     28c:	80 81       	ld	r24, Z
     28e:	8f 7e       	andi	r24, 0xEF	; 239
     290:	80 83       	st	Z, r24
     292:	ea 9a       	sbi	0x1d, 2	; 29
     294:	78 94       	sei
     296:	08 95       	ret

00000298 <getData>:
int far1 = 0, far2 = 0, close1 = 0, close2 = 0;

int numlost = 0;
int recalibrate = 0;

unsigned char getData(unsigned int* x, unsigned int* y) {
     298:	0f 93       	push	r16
     29a:	1f 93       	push	r17
     29c:	cf 93       	push	r28
     29e:	df 93       	push	r29
     2a0:	8c 01       	movw	r16, r24
     2a2:	eb 01       	movw	r28, r22
	m_wii_read(blobs);
     2a4:	8a e3       	ldi	r24, 0x3A	; 58
     2a6:	91 e0       	ldi	r25, 0x01	; 1
     2a8:	0e 94 9f 09 	call	0x133e	; 0x133e <m_wii_read>
	x[0] = blobs[0];
     2ac:	80 91 3a 01 	lds	r24, 0x013A
     2b0:	90 91 3b 01 	lds	r25, 0x013B
     2b4:	f8 01       	movw	r30, r16
     2b6:	91 83       	std	Z+1, r25	; 0x01
     2b8:	80 83       	st	Z, r24
	x[1] = blobs[3];
     2ba:	80 91 40 01 	lds	r24, 0x0140
     2be:	90 91 41 01 	lds	r25, 0x0141
     2c2:	93 83       	std	Z+3, r25	; 0x03
     2c4:	82 83       	std	Z+2, r24	; 0x02
	x[2] = blobs[6];
     2c6:	80 91 46 01 	lds	r24, 0x0146
     2ca:	90 91 47 01 	lds	r25, 0x0147
     2ce:	95 83       	std	Z+5, r25	; 0x05
     2d0:	84 83       	std	Z+4, r24	; 0x04
	x[3] = blobs[9];
     2d2:	80 91 4c 01 	lds	r24, 0x014C
     2d6:	90 91 4d 01 	lds	r25, 0x014D
     2da:	97 83       	std	Z+7, r25	; 0x07
     2dc:	86 83       	std	Z+6, r24	; 0x06
	y[0] = blobs[1];
     2de:	80 91 3c 01 	lds	r24, 0x013C
     2e2:	90 91 3d 01 	lds	r25, 0x013D
     2e6:	99 83       	std	Y+1, r25	; 0x01
     2e8:	88 83       	st	Y, r24
	y[1] = blobs[4];
     2ea:	80 91 42 01 	lds	r24, 0x0142
     2ee:	90 91 43 01 	lds	r25, 0x0143
     2f2:	9b 83       	std	Y+3, r25	; 0x03
     2f4:	8a 83       	std	Y+2, r24	; 0x02
	y[2] = blobs[7];
     2f6:	80 91 48 01 	lds	r24, 0x0148
     2fa:	90 91 49 01 	lds	r25, 0x0149
     2fe:	9d 83       	std	Y+5, r25	; 0x05
     300:	8c 83       	std	Y+4, r24	; 0x04
	y[3] = blobs[10];
     302:	80 91 4e 01 	lds	r24, 0x014E
     306:	90 91 4f 01 	lds	r25, 0x014F
     30a:	9f 83       	std	Y+7, r25	; 0x07
     30c:	8e 83       	std	Y+6, r24	; 0x06
	return 1;
} 
     30e:	81 e0       	ldi	r24, 0x01	; 1
     310:	df 91       	pop	r29
     312:	cf 91       	pop	r28
     314:	1f 91       	pop	r17
     316:	0f 91       	pop	r16
     318:	08 95       	ret

0000031a <determine_blobs>:

unsigned char determine_blobs() {
     31a:	2f 92       	push	r2
     31c:	3f 92       	push	r3
     31e:	4f 92       	push	r4
     320:	5f 92       	push	r5
     322:	6f 92       	push	r6
     324:	7f 92       	push	r7
     326:	8f 92       	push	r8
     328:	9f 92       	push	r9
     32a:	af 92       	push	r10
     32c:	bf 92       	push	r11
     32e:	cf 92       	push	r12
     330:	df 92       	push	r13
     332:	ef 92       	push	r14
     334:	ff 92       	push	r15
     336:	0f 93       	push	r16
     338:	1f 93       	push	r17
     33a:	cf 93       	push	r28
     33c:	df 93       	push	r29
     33e:	cd b7       	in	r28, 0x3d	; 61
     340:	de b7       	in	r29, 0x3e	; 62
     342:	6c 97       	sbiw	r28, 0x1c	; 28
     344:	0f b6       	in	r0, 0x3f	; 63
     346:	f8 94       	cli
     348:	de bf       	out	0x3e, r29	; 62
     34a:	0f be       	out	0x3f, r0	; 63
     34c:	cd bf       	out	0x3d, r28	; 61
	int exit = 0;
	distmax = 0;
     34e:	10 92 1a 01 	sts	0x011A, r1
     352:	10 92 1b 01 	sts	0x011B, r1
     356:	10 92 1c 01 	sts	0x011C, r1
     35a:	10 92 1d 01 	sts	0x011D, r1
	distmin = 30000;
     35e:	80 e0       	ldi	r24, 0x00	; 0
     360:	90 e6       	ldi	r25, 0x60	; 96
     362:	aa ee       	ldi	r26, 0xEA	; 234
     364:	b6 e4       	ldi	r27, 0x46	; 70
     366:	80 93 00 01 	sts	0x0100, r24
     36a:	90 93 01 01 	sts	0x0101, r25
     36e:	a0 93 02 01 	sts	0x0102, r26
     372:	b0 93 03 01 	sts	0x0103, r27
	while (exit == 0) {
		getData(x, y);
		if (x[0] < 1023 && x[1] < 1023 && x[2] < 1023 && x[3] < 1023) {
     376:	0f 2e       	mov	r0, r31
     378:	fc e2       	ldi	r31, 0x2C	; 44
     37a:	cf 2e       	mov	r12, r31
     37c:	f1 e0       	ldi	r31, 0x01	; 1
     37e:	df 2e       	mov	r13, r31
     380:	f0 2d       	mov	r31, r0
     382:	0e e2       	ldi	r16, 0x2E	; 46
     384:	11 e0       	ldi	r17, 0x01	; 1
     386:	0f 2e       	mov	r0, r31
     388:	f0 e3       	ldi	r31, 0x30	; 48
     38a:	ef 2e       	mov	r14, r31
     38c:	f1 e0       	ldi	r31, 0x01	; 1
     38e:	ff 2e       	mov	r15, r31
     390:	f0 2d       	mov	r31, r0
unsigned char determine_blobs() {
	int exit = 0;
	distmax = 0;
	distmin = 30000;
	while (exit == 0) {
		getData(x, y);
     392:	62 e2       	ldi	r22, 0x22	; 34
     394:	71 e0       	ldi	r23, 0x01	; 1
     396:	8a e2       	ldi	r24, 0x2A	; 42
     398:	91 e0       	ldi	r25, 0x01	; 1
     39a:	0e 94 4c 01 	call	0x298	; 0x298 <getData>
		if (x[0] < 1023 && x[1] < 1023 && x[2] < 1023 && x[3] < 1023) {
     39e:	80 91 2a 01 	lds	r24, 0x012A
     3a2:	90 91 2b 01 	lds	r25, 0x012B
     3a6:	8f 3f       	cpi	r24, 0xFF	; 255
     3a8:	93 40       	sbci	r25, 0x03	; 3
     3aa:	98 f7       	brcc	.-26     	; 0x392 <determine_blobs+0x78>
     3ac:	f6 01       	movw	r30, r12
     3ae:	80 81       	ld	r24, Z
     3b0:	91 81       	ldd	r25, Z+1	; 0x01
     3b2:	8f 3f       	cpi	r24, 0xFF	; 255
     3b4:	93 40       	sbci	r25, 0x03	; 3
     3b6:	68 f7       	brcc	.-38     	; 0x392 <determine_blobs+0x78>
     3b8:	f8 01       	movw	r30, r16
     3ba:	80 81       	ld	r24, Z
     3bc:	91 81       	ldd	r25, Z+1	; 0x01
     3be:	8f 3f       	cpi	r24, 0xFF	; 255
     3c0:	93 40       	sbci	r25, 0x03	; 3
     3c2:	38 f7       	brcc	.-50     	; 0x392 <determine_blobs+0x78>
     3c4:	f7 01       	movw	r30, r14
     3c6:	80 81       	ld	r24, Z
     3c8:	91 81       	ldd	r25, Z+1	; 0x01
     3ca:	8f 3f       	cpi	r24, 0xFF	; 255
     3cc:	93 40       	sbci	r25, 0x03	; 3
     3ce:	08 f7       	brcc	.-62     	; 0x392 <determine_blobs+0x78>
     3d0:	80 90 1e 01 	lds	r8, 0x011E
     3d4:	90 90 1f 01 	lds	r9, 0x011F
     3d8:	a0 90 20 01 	lds	r10, 0x0120
     3dc:	b0 90 21 01 	lds	r11, 0x0121
     3e0:	20 91 1a 01 	lds	r18, 0x011A
     3e4:	29 83       	std	Y+1, r18	; 0x01
     3e6:	30 91 1b 01 	lds	r19, 0x011B
     3ea:	3a 83       	std	Y+2, r19	; 0x02
     3ec:	40 91 1c 01 	lds	r20, 0x011C
     3f0:	4b 83       	std	Y+3, r20	; 0x03
     3f2:	50 91 1d 01 	lds	r21, 0x011D
     3f6:	5c 83       	std	Y+4, r21	; 0x04
     3f8:	60 91 14 01 	lds	r22, 0x0114
     3fc:	6b 8b       	std	Y+19, r22	; 0x13
     3fe:	70 91 15 01 	lds	r23, 0x0115
     402:	7c 8b       	std	Y+20, r23	; 0x14
     404:	80 91 12 01 	lds	r24, 0x0112
     408:	89 8b       	std	Y+17, r24	; 0x11
     40a:	90 91 13 01 	lds	r25, 0x0113
     40e:	9a 8b       	std	Y+18, r25	; 0x12
     410:	e0 91 16 01 	lds	r30, 0x0116
     414:	ed 8b       	std	Y+21, r30	; 0x15
     416:	f0 91 17 01 	lds	r31, 0x0117
     41a:	fe 8b       	std	Y+22, r31	; 0x16
     41c:	20 91 18 01 	lds	r18, 0x0118
     420:	2f 8b       	std	Y+23, r18	; 0x17
     422:	30 91 19 01 	lds	r19, 0x0119
     426:	38 8f       	std	Y+24, r19	; 0x18
     428:	40 91 00 01 	lds	r20, 0x0100
     42c:	4d 83       	std	Y+5, r20	; 0x05
     42e:	50 91 01 01 	lds	r21, 0x0101
     432:	5e 83       	std	Y+6, r21	; 0x06
     434:	20 90 02 01 	lds	r2, 0x0102
     438:	30 90 03 01 	lds	r3, 0x0103
     43c:	60 91 10 01 	lds	r22, 0x0110
     440:	69 8f       	std	Y+25, r22	; 0x19
     442:	70 91 11 01 	lds	r23, 0x0111
     446:	7a 8f       	std	Y+26, r23	; 0x1a
     448:	80 91 0e 01 	lds	r24, 0x010E
     44c:	90 91 0f 01 	lds	r25, 0x010F
     450:	98 8b       	std	Y+16, r25	; 0x10
     452:	8f 87       	std	Y+15, r24	; 0x0f
     454:	18 86       	std	Y+8, r1	; 0x08
     456:	1f 82       	std	Y+7, r1	; 0x07
     458:	c1 2c       	mov	r12, r1
     45a:	d1 2c       	mov	r13, r1
     45c:	b9 c0       	rjmp	.+370    	; 0x5d0 <determine_blobs+0x2b6>
			exit = 1;
			for (int i = 0; i < 4; i++) {
				for (int j = i; j < 4; j++) {
					if (i == j) continue;
     45e:	eb 8d       	ldd	r30, Y+27	; 0x1b
     460:	fc 8d       	ldd	r31, Y+28	; 0x1c
     462:	e4 15       	cp	r30, r4
     464:	f5 05       	cpc	r31, r5
     466:	09 f4       	brne	.+2      	; 0x46a <determine_blobs+0x150>
     468:	9c c0       	rjmp	.+312    	; 0x5a2 <determine_blobs+0x288>
					dist = sqrt(((float)x[i]-(float)x[j])*((float)x[i]-(float)x[j])+((float)y[i]-(float)y[j])*((float)y[i]-(float)y[j]));
     46a:	e9 85       	ldd	r30, Y+9	; 0x09
     46c:	fa 85       	ldd	r31, Y+10	; 0x0a
     46e:	60 81       	ld	r22, Z
     470:	71 81       	ldd	r23, Z+1	; 0x01
     472:	80 e0       	ldi	r24, 0x00	; 0
     474:	90 e0       	ldi	r25, 0x00	; 0
     476:	0e 94 9e 0c 	call	0x193c	; 0x193c <__floatunsisf>
     47a:	6b 01       	movw	r12, r22
     47c:	7c 01       	movw	r14, r24
     47e:	f3 01       	movw	r30, r6
     480:	60 81       	ld	r22, Z
     482:	71 81       	ldd	r23, Z+1	; 0x01
     484:	80 e0       	ldi	r24, 0x00	; 0
     486:	90 e0       	ldi	r25, 0x00	; 0
     488:	0e 94 9e 0c 	call	0x193c	; 0x193c <__floatunsisf>
     48c:	9b 01       	movw	r18, r22
     48e:	ac 01       	movw	r20, r24
     490:	c7 01       	movw	r24, r14
     492:	b6 01       	movw	r22, r12
     494:	0e 94 37 0b 	call	0x166e	; 0x166e <__subsf3>
     498:	c6 2e       	mov	r12, r22
     49a:	d7 2e       	mov	r13, r23
     49c:	e8 2e       	mov	r14, r24
     49e:	f9 2e       	mov	r15, r25
     4a0:	eb 85       	ldd	r30, Y+11	; 0x0b
     4a2:	fc 85       	ldd	r31, Y+12	; 0x0c
     4a4:	60 81       	ld	r22, Z
     4a6:	71 81       	ldd	r23, Z+1	; 0x01
     4a8:	80 e0       	ldi	r24, 0x00	; 0
     4aa:	90 e0       	ldi	r25, 0x00	; 0
     4ac:	0e 94 9e 0c 	call	0x193c	; 0x193c <__floatunsisf>
     4b0:	4b 01       	movw	r8, r22
     4b2:	5c 01       	movw	r10, r24
     4b4:	f8 01       	movw	r30, r16
     4b6:	60 81       	ld	r22, Z
     4b8:	71 81       	ldd	r23, Z+1	; 0x01
     4ba:	80 e0       	ldi	r24, 0x00	; 0
     4bc:	90 e0       	ldi	r25, 0x00	; 0
     4be:	0e 94 9e 0c 	call	0x193c	; 0x193c <__floatunsisf>
     4c2:	9b 01       	movw	r18, r22
     4c4:	ac 01       	movw	r20, r24
     4c6:	c5 01       	movw	r24, r10
     4c8:	b4 01       	movw	r22, r8
     4ca:	0e 94 37 0b 	call	0x166e	; 0x166e <__subsf3>
     4ce:	86 2e       	mov	r8, r22
     4d0:	97 2e       	mov	r9, r23
     4d2:	a8 2e       	mov	r10, r24
     4d4:	b9 2e       	mov	r11, r25
     4d6:	2c 2d       	mov	r18, r12
     4d8:	3d 2d       	mov	r19, r13
     4da:	4e 2d       	mov	r20, r14
     4dc:	5f 2d       	mov	r21, r15
     4de:	6c 2d       	mov	r22, r12
     4e0:	7d 2d       	mov	r23, r13
     4e2:	8e 2d       	mov	r24, r14
     4e4:	9f 2d       	mov	r25, r15
     4e6:	0e 94 b9 0d 	call	0x1b72	; 0x1b72 <__mulsf3>
     4ea:	6b 01       	movw	r12, r22
     4ec:	7c 01       	movw	r14, r24
     4ee:	28 2d       	mov	r18, r8
     4f0:	39 2d       	mov	r19, r9
     4f2:	4a 2d       	mov	r20, r10
     4f4:	5b 2d       	mov	r21, r11
     4f6:	68 2d       	mov	r22, r8
     4f8:	79 2d       	mov	r23, r9
     4fa:	8a 2d       	mov	r24, r10
     4fc:	9b 2d       	mov	r25, r11
     4fe:	0e 94 b9 0d 	call	0x1b72	; 0x1b72 <__mulsf3>
     502:	9b 01       	movw	r18, r22
     504:	ac 01       	movw	r20, r24
     506:	c7 01       	movw	r24, r14
     508:	b6 01       	movw	r22, r12
     50a:	0e 94 38 0b 	call	0x1670	; 0x1670 <__addsf3>
     50e:	0e 94 26 0e 	call	0x1c4c	; 0x1c4c <sqrt>
     512:	86 2e       	mov	r8, r22
     514:	97 2e       	mov	r9, r23
     516:	a8 2e       	mov	r10, r24
     518:	b9 2e       	mov	r11, r25
					if (dist > distmax) {
     51a:	79 81       	ldd	r23, Y+1	; 0x01
     51c:	6a 81       	ldd	r22, Y+2	; 0x02
     51e:	9b 81       	ldd	r25, Y+3	; 0x03
     520:	8c 81       	ldd	r24, Y+4	; 0x04
     522:	27 2f       	mov	r18, r23
     524:	36 2f       	mov	r19, r22
     526:	49 2f       	mov	r20, r25
     528:	58 2f       	mov	r21, r24
     52a:	68 2d       	mov	r22, r8
     52c:	79 2d       	mov	r23, r9
     52e:	8a 2d       	mov	r24, r10
     530:	9b 2d       	mov	r25, r11
     532:	0e 94 ae 0d 	call	0x1b5c	; 0x1b5c <__gesf2>
     536:	18 16       	cp	r1, r24
     538:	d4 f4       	brge	.+52     	; 0x56e <determine_blobs+0x254>
						distmax = dist;
						far1 = i;
						far2 = j;
						dcenter = dist / 2.0;
     53a:	20 e0       	ldi	r18, 0x00	; 0
     53c:	30 e0       	ldi	r19, 0x00	; 0
     53e:	40 e0       	ldi	r20, 0x00	; 0
     540:	5f e3       	ldi	r21, 0x3F	; 63
     542:	68 2d       	mov	r22, r8
     544:	79 2d       	mov	r23, r9
     546:	8a 2d       	mov	r24, r10
     548:	9b 2d       	mov	r25, r11
     54a:	0e 94 b9 0d 	call	0x1b72	; 0x1b72 <__mulsf3>
     54e:	6d 8b       	std	Y+21, r22	; 0x15
     550:	7e 8b       	std	Y+22, r23	; 0x16
     552:	8f 8b       	std	Y+23, r24	; 0x17
     554:	98 8f       	std	Y+24, r25	; 0x18
					if (i == j) continue;
					dist = sqrt(((float)x[i]-(float)x[j])*((float)x[i]-(float)x[j])+((float)y[i]-(float)y[j])*((float)y[i]-(float)y[j]));
					if (dist > distmax) {
						distmax = dist;
						far1 = i;
						far2 = j;
     556:	fb 8d       	ldd	r31, Y+27	; 0x1b
     558:	f9 8b       	std	Y+17, r31	; 0x11
     55a:	2c 8d       	ldd	r18, Y+28	; 0x1c
     55c:	2a 8b       	std	Y+18, r18	; 0x12
				for (int j = i; j < 4; j++) {
					if (i == j) continue;
					dist = sqrt(((float)x[i]-(float)x[j])*((float)x[i]-(float)x[j])+((float)y[i]-(float)y[j])*((float)y[i]-(float)y[j]));
					if (dist > distmax) {
						distmax = dist;
						far1 = i;
     55e:	3d 85       	ldd	r19, Y+13	; 0x0d
     560:	3b 8b       	std	Y+19, r19	; 0x13
     562:	4e 85       	ldd	r20, Y+14	; 0x0e
     564:	4c 8b       	std	Y+20, r20	; 0x14
			for (int i = 0; i < 4; i++) {
				for (int j = i; j < 4; j++) {
					if (i == j) continue;
					dist = sqrt(((float)x[i]-(float)x[j])*((float)x[i]-(float)x[j])+((float)y[i]-(float)y[j])*((float)y[i]-(float)y[j]));
					if (dist > distmax) {
						distmax = dist;
     566:	89 82       	std	Y+1, r8	; 0x01
     568:	9a 82       	std	Y+2, r9	; 0x02
     56a:	ab 82       	std	Y+3, r10	; 0x03
     56c:	bc 82       	std	Y+4, r11	; 0x04
						far1 = i;
						far2 = j;
						dcenter = dist / 2.0;
					}
					if (dist < distmin) {
     56e:	7d 81       	ldd	r23, Y+5	; 0x05
     570:	6e 81       	ldd	r22, Y+6	; 0x06
     572:	27 2f       	mov	r18, r23
     574:	36 2f       	mov	r19, r22
     576:	42 2d       	mov	r20, r2
     578:	53 2d       	mov	r21, r3
     57a:	68 2d       	mov	r22, r8
     57c:	79 2d       	mov	r23, r9
     57e:	8a 2d       	mov	r24, r10
     580:	9b 2d       	mov	r25, r11
     582:	0e 94 fe 0b 	call	0x17fc	; 0x17fc <__cmpsf2>
     586:	88 23       	and	r24, r24
     588:	64 f4       	brge	.+24     	; 0x5a2 <determine_blobs+0x288>
						distmin = dist;
						close1 = i;
						close2 = j;
     58a:	6b 8d       	ldd	r22, Y+27	; 0x1b
     58c:	7c 8d       	ldd	r23, Y+28	; 0x1c
     58e:	78 8b       	std	Y+16, r23	; 0x10
     590:	6f 87       	std	Y+15, r22	; 0x0f
						far2 = j;
						dcenter = dist / 2.0;
					}
					if (dist < distmin) {
						distmin = dist;
						close1 = i;
     592:	7d 85       	ldd	r23, Y+13	; 0x0d
     594:	79 8f       	std	Y+25, r23	; 0x19
     596:	8e 85       	ldd	r24, Y+14	; 0x0e
     598:	8a 8f       	std	Y+26, r24	; 0x1a
						far1 = i;
						far2 = j;
						dcenter = dist / 2.0;
					}
					if (dist < distmin) {
						distmin = dist;
     59a:	8d 82       	std	Y+5, r8	; 0x05
     59c:	9e 82       	std	Y+6, r9	; 0x06
     59e:	2a 2c       	mov	r2, r10
     5a0:	3b 2c       	mov	r3, r11
     5a2:	92 e0       	ldi	r25, 0x02	; 2
     5a4:	69 0e       	add	r6, r25
     5a6:	71 1c       	adc	r7, r1
     5a8:	0e 5f       	subi	r16, 0xFE	; 254
     5aa:	1f 4f       	sbci	r17, 0xFF	; 255
	while (exit == 0) {
		getData(x, y);
		if (x[0] < 1023 && x[1] < 1023 && x[2] < 1023 && x[3] < 1023) {
			exit = 1;
			for (int i = 0; i < 4; i++) {
				for (int j = i; j < 4; j++) {
     5ac:	eb 8d       	ldd	r30, Y+27	; 0x1b
     5ae:	fc 8d       	ldd	r31, Y+28	; 0x1c
     5b0:	31 96       	adiw	r30, 0x01	; 1
     5b2:	fc 8f       	std	Y+28, r31	; 0x1c
     5b4:	eb 8f       	std	Y+27, r30	; 0x1b
     5b6:	34 97       	sbiw	r30, 0x04	; 4
     5b8:	09 f0       	breq	.+2      	; 0x5bc <determine_blobs+0x2a2>
     5ba:	51 cf       	rjmp	.-350    	; 0x45e <determine_blobs+0x144>
	distmin = 30000;
	while (exit == 0) {
		getData(x, y);
		if (x[0] < 1023 && x[1] < 1023 && x[2] < 1023 && x[3] < 1023) {
			exit = 1;
			for (int i = 0; i < 4; i++) {
     5bc:	2f 81       	ldd	r18, Y+7	; 0x07
     5be:	38 85       	ldd	r19, Y+8	; 0x08
     5c0:	2f 5f       	subi	r18, 0xFF	; 255
     5c2:	3f 4f       	sbci	r19, 0xFF	; 255
     5c4:	38 87       	std	Y+8, r19	; 0x08
     5c6:	2f 83       	std	Y+7, r18	; 0x07
     5c8:	69 01       	movw	r12, r18
     5ca:	24 30       	cpi	r18, 0x04	; 4
     5cc:	31 05       	cpc	r19, r1
     5ce:	39 f1       	breq	.+78     	; 0x61e <determine_blobs+0x304>
				for (int j = i; j < 4; j++) {
     5d0:	34 e0       	ldi	r19, 0x04	; 4
     5d2:	c3 16       	cp	r12, r19
     5d4:	d1 04       	cpc	r13, r1
     5d6:	94 f7       	brge	.-28     	; 0x5bc <determine_blobs+0x2a2>
					if (i == j) continue;
					dist = sqrt(((float)x[i]-(float)x[j])*((float)x[i]-(float)x[j])+((float)y[i]-(float)y[j])*((float)y[i]-(float)y[j]));
     5d8:	86 01       	movw	r16, r12
     5da:	0f 5f       	subi	r16, 0xFF	; 255
     5dc:	1f 4f       	sbci	r17, 0xFF	; 255
	y[2] = blobs[7];
	y[3] = blobs[10];
	return 1;
} 

unsigned char determine_blobs() {
     5de:	00 0f       	add	r16, r16
     5e0:	11 1f       	adc	r17, r17
     5e2:	0f 2e       	mov	r0, r31
     5e4:	fa e2       	ldi	r31, 0x2A	; 42
     5e6:	ef 2e       	mov	r14, r31
     5e8:	f1 e0       	ldi	r31, 0x01	; 1
     5ea:	ff 2e       	mov	r15, r31
     5ec:	f0 2d       	mov	r31, r0
     5ee:	e0 0e       	add	r14, r16
     5f0:	f1 1e       	adc	r15, r17
     5f2:	0e 5d       	subi	r16, 0xDE	; 222
     5f4:	1e 4f       	sbci	r17, 0xFE	; 254
		if (x[0] < 1023 && x[1] < 1023 && x[2] < 1023 && x[3] < 1023) {
			exit = 1;
			for (int i = 0; i < 4; i++) {
				for (int j = i; j < 4; j++) {
					if (i == j) continue;
					dist = sqrt(((float)x[i]-(float)x[j])*((float)x[i]-(float)x[j])+((float)y[i]-(float)y[j])*((float)y[i]-(float)y[j]));
     5f6:	c6 01       	movw	r24, r12
     5f8:	88 0f       	add	r24, r24
     5fa:	99 1f       	adc	r25, r25
     5fc:	ac 01       	movw	r20, r24
     5fe:	46 5d       	subi	r20, 0xD6	; 214
     600:	5e 4f       	sbci	r21, 0xFE	; 254
     602:	5a 87       	std	Y+10, r21	; 0x0a
     604:	49 87       	std	Y+9, r20	; 0x09
     606:	bc 01       	movw	r22, r24
     608:	6e 5d       	subi	r22, 0xDE	; 222
     60a:	7e 4f       	sbci	r23, 0xFE	; 254
     60c:	7c 87       	std	Y+12, r23	; 0x0c
     60e:	6b 87       	std	Y+11, r22	; 0x0b
						far2 = j;
						dcenter = dist / 2.0;
					}
					if (dist < distmin) {
						distmin = dist;
						close1 = i;
     610:	cd 86       	std	Y+13, r12	; 0x0d
     612:	de 86       	std	Y+14, r13	; 0x0e
     614:	dc 8e       	std	Y+28, r13	; 0x1c
     616:	cb 8e       	std	Y+27, r12	; 0x1b
     618:	26 01       	movw	r4, r12
     61a:	37 01       	movw	r6, r14
     61c:	c7 cf       	rjmp	.-114    	; 0x5ac <determine_blobs+0x292>
     61e:	88 2d       	mov	r24, r8
     620:	99 2d       	mov	r25, r9
     622:	aa 2d       	mov	r26, r10
     624:	bb 2d       	mov	r27, r11
     626:	80 93 1e 01 	sts	0x011E, r24
     62a:	90 93 1f 01 	sts	0x011F, r25
     62e:	a0 93 20 01 	sts	0x0120, r26
     632:	b0 93 21 01 	sts	0x0121, r27
     636:	59 81       	ldd	r21, Y+1	; 0x01
     638:	4a 81       	ldd	r20, Y+2	; 0x02
     63a:	3b 81       	ldd	r19, Y+3	; 0x03
     63c:	2c 81       	ldd	r18, Y+4	; 0x04
     63e:	85 2f       	mov	r24, r21
     640:	94 2f       	mov	r25, r20
     642:	a3 2f       	mov	r26, r19
     644:	b2 2f       	mov	r27, r18
     646:	80 93 1a 01 	sts	0x011A, r24
     64a:	90 93 1b 01 	sts	0x011B, r25
     64e:	a0 93 1c 01 	sts	0x011C, r26
     652:	b0 93 1d 01 	sts	0x011D, r27
     656:	7b 89       	ldd	r23, Y+19	; 0x13
     658:	70 93 14 01 	sts	0x0114, r23
     65c:	8c 89       	ldd	r24, Y+20	; 0x14
     65e:	80 93 15 01 	sts	0x0115, r24
     662:	99 89       	ldd	r25, Y+17	; 0x11
     664:	90 93 12 01 	sts	0x0112, r25
     668:	ea 89       	ldd	r30, Y+18	; 0x12
     66a:	e0 93 13 01 	sts	0x0113, r30
     66e:	5d 89       	ldd	r21, Y+21	; 0x15
     670:	4e 89       	ldd	r20, Y+22	; 0x16
     672:	3f 89       	ldd	r19, Y+23	; 0x17
     674:	28 8d       	ldd	r18, Y+24	; 0x18
     676:	85 2f       	mov	r24, r21
     678:	94 2f       	mov	r25, r20
     67a:	a3 2f       	mov	r26, r19
     67c:	b2 2f       	mov	r27, r18
     67e:	80 93 16 01 	sts	0x0116, r24
     682:	90 93 17 01 	sts	0x0117, r25
     686:	a0 93 18 01 	sts	0x0118, r26
     68a:	b0 93 19 01 	sts	0x0119, r27
     68e:	5d 81       	ldd	r21, Y+5	; 0x05
     690:	4e 81       	ldd	r20, Y+6	; 0x06
     692:	85 2f       	mov	r24, r21
     694:	94 2f       	mov	r25, r20
     696:	a2 2d       	mov	r26, r2
     698:	b3 2d       	mov	r27, r3
     69a:	80 93 00 01 	sts	0x0100, r24
     69e:	90 93 01 01 	sts	0x0101, r25
     6a2:	a0 93 02 01 	sts	0x0102, r26
     6a6:	b0 93 03 01 	sts	0x0103, r27
     6aa:	f9 8d       	ldd	r31, Y+25	; 0x19
     6ac:	f0 93 10 01 	sts	0x0110, r31
     6b0:	2a 8d       	ldd	r18, Y+26	; 0x1a
     6b2:	20 93 11 01 	sts	0x0111, r18
     6b6:	3f 85       	ldd	r19, Y+15	; 0x0f
     6b8:	30 93 0e 01 	sts	0x010E, r19
     6bc:	48 89       	ldd	r20, Y+16	; 0x10
     6be:	40 93 0f 01 	sts	0x010F, r20
						close2 = j;
					}
				}
			}
			if (far1 == close1) {
     6c2:	80 91 14 01 	lds	r24, 0x0114
     6c6:	90 91 15 01 	lds	r25, 0x0115
     6ca:	20 91 10 01 	lds	r18, 0x0110
     6ce:	30 91 11 01 	lds	r19, 0x0111
     6d2:	82 17       	cp	r24, r18
     6d4:	93 07       	cpc	r25, r19
     6d6:	19 f5       	brne	.+70     	; 0x71e <determine_blobs+0x404>
				top = far1;
     6d8:	90 93 39 01 	sts	0x0139, r25
     6dc:	80 93 38 01 	sts	0x0138, r24
				bottom = far2;
     6e0:	40 91 12 01 	lds	r20, 0x0112
     6e4:	50 91 13 01 	lds	r21, 0x0113
     6e8:	50 93 37 01 	sts	0x0137, r21
     6ec:	40 93 36 01 	sts	0x0136, r20
				right = close2;
     6f0:	20 91 0e 01 	lds	r18, 0x010E
     6f4:	30 91 0f 01 	lds	r19, 0x010F
     6f8:	30 93 33 01 	sts	0x0133, r19
     6fc:	20 93 32 01 	sts	0x0132, r18
				//left + top + bottom + right = 1 + 2 + 3 + 4 = 10
				left = 9 - top - bottom - right;
     700:	69 e0       	ldi	r22, 0x09	; 9
     702:	70 e0       	ldi	r23, 0x00	; 0
     704:	fb 01       	movw	r30, r22
     706:	e8 1b       	sub	r30, r24
     708:	f9 0b       	sbc	r31, r25
     70a:	cf 01       	movw	r24, r30
     70c:	84 1b       	sub	r24, r20
     70e:	95 0b       	sbc	r25, r21
     710:	82 1b       	sub	r24, r18
     712:	93 0b       	sbc	r25, r19
     714:	90 93 35 01 	sts	0x0135, r25
     718:	80 93 34 01 	sts	0x0134, r24
     71c:	66 c0       	rjmp	.+204    	; 0x7ea <determine_blobs+0x4d0>
			}
			else if (far1 == close2) {
     71e:	4f 85       	ldd	r20, Y+15	; 0x0f
     720:	58 89       	ldd	r21, Y+16	; 0x10
     722:	84 17       	cp	r24, r20
     724:	95 07       	cpc	r25, r21
     726:	f9 f4       	brne	.+62     	; 0x766 <determine_blobs+0x44c>
				top = far1;
     728:	90 93 39 01 	sts	0x0139, r25
     72c:	80 93 38 01 	sts	0x0138, r24
				bottom = far2;
     730:	40 91 12 01 	lds	r20, 0x0112
     734:	50 91 13 01 	lds	r21, 0x0113
     738:	50 93 37 01 	sts	0x0137, r21
     73c:	40 93 36 01 	sts	0x0136, r20
				right = close1;
     740:	30 93 33 01 	sts	0x0133, r19
     744:	20 93 32 01 	sts	0x0132, r18
				left = 9 - top - bottom - right;
     748:	69 e0       	ldi	r22, 0x09	; 9
     74a:	70 e0       	ldi	r23, 0x00	; 0
     74c:	fb 01       	movw	r30, r22
     74e:	e8 1b       	sub	r30, r24
     750:	f9 0b       	sbc	r31, r25
     752:	cf 01       	movw	r24, r30
     754:	84 1b       	sub	r24, r20
     756:	95 0b       	sbc	r25, r21
     758:	82 1b       	sub	r24, r18
     75a:	93 0b       	sbc	r25, r19
     75c:	90 93 35 01 	sts	0x0135, r25
     760:	80 93 34 01 	sts	0x0134, r24
     764:	42 c0       	rjmp	.+132    	; 0x7ea <determine_blobs+0x4d0>
			}
			else if (far2 == close1) {
     766:	40 91 12 01 	lds	r20, 0x0112
     76a:	50 91 13 01 	lds	r21, 0x0113
     76e:	24 17       	cp	r18, r20
     770:	35 07       	cpc	r19, r21
     772:	01 f5       	brne	.+64     	; 0x7b4 <determine_blobs+0x49a>
				top = far2;
     774:	30 93 39 01 	sts	0x0139, r19
     778:	20 93 38 01 	sts	0x0138, r18
				bottom = far1;
     77c:	90 93 37 01 	sts	0x0137, r25
     780:	80 93 36 01 	sts	0x0136, r24
				right = close2;
     784:	4f 85       	ldd	r20, Y+15	; 0x0f
     786:	58 89       	ldd	r21, Y+16	; 0x10
     788:	50 93 33 01 	sts	0x0133, r21
     78c:	40 93 32 01 	sts	0x0132, r20
				left = 9 - top - bottom - right;
     790:	49 e0       	ldi	r20, 0x09	; 9
     792:	50 e0       	ldi	r21, 0x00	; 0
     794:	ba 01       	movw	r22, r20
     796:	62 1b       	sub	r22, r18
     798:	73 0b       	sbc	r23, r19
     79a:	fb 01       	movw	r30, r22
     79c:	e8 1b       	sub	r30, r24
     79e:	f9 0b       	sbc	r31, r25
     7a0:	cf 01       	movw	r24, r30
     7a2:	2f 85       	ldd	r18, Y+15	; 0x0f
     7a4:	38 89       	ldd	r19, Y+16	; 0x10
     7a6:	82 1b       	sub	r24, r18
     7a8:	93 0b       	sbc	r25, r19
     7aa:	90 93 35 01 	sts	0x0135, r25
     7ae:	80 93 34 01 	sts	0x0134, r24
     7b2:	1b c0       	rjmp	.+54     	; 0x7ea <determine_blobs+0x4d0>
			}
			else {
				top = far2;
     7b4:	50 93 39 01 	sts	0x0139, r21
     7b8:	40 93 38 01 	sts	0x0138, r20
				bottom = far1;
     7bc:	90 93 37 01 	sts	0x0137, r25
     7c0:	80 93 36 01 	sts	0x0136, r24
				right = close1;
     7c4:	30 93 33 01 	sts	0x0133, r19
     7c8:	20 93 32 01 	sts	0x0132, r18
				left = 9 - top - bottom - right;
     7cc:	69 e0       	ldi	r22, 0x09	; 9
     7ce:	70 e0       	ldi	r23, 0x00	; 0
     7d0:	fb 01       	movw	r30, r22
     7d2:	e4 1b       	sub	r30, r20
     7d4:	f5 0b       	sbc	r31, r21
     7d6:	bf 01       	movw	r22, r30
     7d8:	68 1b       	sub	r22, r24
     7da:	79 0b       	sbc	r23, r25
     7dc:	cb 01       	movw	r24, r22
     7de:	82 1b       	sub	r24, r18
     7e0:	93 0b       	sbc	r25, r19
     7e2:	90 93 35 01 	sts	0x0135, r25
     7e6:	80 93 34 01 	sts	0x0134, r24
			}
		}
	}
	return 1;
}
     7ea:	81 e0       	ldi	r24, 0x01	; 1
     7ec:	6c 96       	adiw	r28, 0x1c	; 28
     7ee:	0f b6       	in	r0, 0x3f	; 63
     7f0:	f8 94       	cli
     7f2:	de bf       	out	0x3e, r29	; 62
     7f4:	0f be       	out	0x3f, r0	; 63
     7f6:	cd bf       	out	0x3d, r28	; 61
     7f8:	df 91       	pop	r29
     7fa:	cf 91       	pop	r28
     7fc:	1f 91       	pop	r17
     7fe:	0f 91       	pop	r16
     800:	ff 90       	pop	r15
     802:	ef 90       	pop	r14
     804:	df 90       	pop	r13
     806:	cf 90       	pop	r12
     808:	bf 90       	pop	r11
     80a:	af 90       	pop	r10
     80c:	9f 90       	pop	r9
     80e:	8f 90       	pop	r8
     810:	7f 90       	pop	r7
     812:	6f 90       	pop	r6
     814:	5f 90       	pop	r5
     816:	4f 90       	pop	r4
     818:	3f 90       	pop	r3
     81a:	2f 90       	pop	r2
     81c:	08 95       	ret

0000081e <calibrate>:

unsigned char calibrate() {
     81e:	0f 93       	push	r16
     820:	1f 93       	push	r17
     822:	cf 93       	push	r28
     824:	df 93       	push	r29
	m_wii_open();
     826:	0e 94 34 0a 	call	0x1468	; 0x1468 <m_wii_open>
	determine_blobs();
     82a:	0e 94 8d 01 	call	0x31a	; 0x31a <determine_blobs>
	rcenterx = (float) ((float)(x[top]+x[bottom]))/2.0;
     82e:	c0 91 38 01 	lds	r28, 0x0138
     832:	d0 91 39 01 	lds	r29, 0x0139
     836:	00 91 36 01 	lds	r16, 0x0136
     83a:	10 91 37 01 	lds	r17, 0x0137
     83e:	00 0f       	add	r16, r16
     840:	11 1f       	adc	r17, r17
     842:	d8 01       	movw	r26, r16
     844:	a6 5d       	subi	r26, 0xD6	; 214
     846:	be 4f       	sbci	r27, 0xFE	; 254
     848:	cc 0f       	add	r28, r28
     84a:	dd 1f       	adc	r29, r29
     84c:	fe 01       	movw	r30, r28
     84e:	e6 5d       	subi	r30, 0xD6	; 214
     850:	fe 4f       	sbci	r31, 0xFE	; 254
     852:	6d 91       	ld	r22, X+
     854:	7c 91       	ld	r23, X
     856:	80 81       	ld	r24, Z
     858:	91 81       	ldd	r25, Z+1	; 0x01
     85a:	68 0f       	add	r22, r24
     85c:	79 1f       	adc	r23, r25
     85e:	80 e0       	ldi	r24, 0x00	; 0
     860:	90 e0       	ldi	r25, 0x00	; 0
     862:	0e 94 9e 0c 	call	0x193c	; 0x193c <__floatunsisf>
     866:	20 e0       	ldi	r18, 0x00	; 0
     868:	30 e0       	ldi	r19, 0x00	; 0
     86a:	40 e0       	ldi	r20, 0x00	; 0
     86c:	5f e3       	ldi	r21, 0x3F	; 63
     86e:	0e 94 b9 0d 	call	0x1b72	; 0x1b72 <__mulsf3>
     872:	60 93 72 01 	sts	0x0172, r22
     876:	70 93 73 01 	sts	0x0173, r23
     87a:	80 93 74 01 	sts	0x0174, r24
     87e:	90 93 75 01 	sts	0x0175, r25
	rcentery = (float) ((float)(y[top]+y[bottom]))/2.0;
     882:	f8 01       	movw	r30, r16
     884:	ee 5d       	subi	r30, 0xDE	; 222
     886:	fe 4f       	sbci	r31, 0xFE	; 254
     888:	ce 5d       	subi	r28, 0xDE	; 222
     88a:	de 4f       	sbci	r29, 0xFE	; 254
     88c:	60 81       	ld	r22, Z
     88e:	71 81       	ldd	r23, Z+1	; 0x01
     890:	88 81       	ld	r24, Y
     892:	99 81       	ldd	r25, Y+1	; 0x01
     894:	68 0f       	add	r22, r24
     896:	79 1f       	adc	r23, r25
     898:	80 e0       	ldi	r24, 0x00	; 0
     89a:	90 e0       	ldi	r25, 0x00	; 0
     89c:	0e 94 9e 0c 	call	0x193c	; 0x193c <__floatunsisf>
     8a0:	20 e0       	ldi	r18, 0x00	; 0
     8a2:	30 e0       	ldi	r19, 0x00	; 0
     8a4:	40 e0       	ldi	r20, 0x00	; 0
     8a6:	5f e3       	ldi	r21, 0x3F	; 63
     8a8:	0e 94 b9 0d 	call	0x1b72	; 0x1b72 <__mulsf3>
     8ac:	60 93 76 01 	sts	0x0176, r22
     8b0:	70 93 77 01 	sts	0x0177, r23
     8b4:	80 93 78 01 	sts	0x0178, r24
     8b8:	90 93 79 01 	sts	0x0179, r25
	
	return 1;
}
     8bc:	81 e0       	ldi	r24, 0x01	; 1
     8be:	df 91       	pop	r29
     8c0:	cf 91       	pop	r28
     8c2:	1f 91       	pop	r17
     8c4:	0f 91       	pop	r16
     8c6:	08 95       	ret

000008c8 <localize>:
	data[1] = blobs[1];
	data[2] = 1.0;
}
*/

unsigned char localize (float* data) {
     8c8:	2f 92       	push	r2
     8ca:	3f 92       	push	r3
     8cc:	4f 92       	push	r4
     8ce:	5f 92       	push	r5
     8d0:	6f 92       	push	r6
     8d2:	7f 92       	push	r7
     8d4:	8f 92       	push	r8
     8d6:	9f 92       	push	r9
     8d8:	af 92       	push	r10
     8da:	bf 92       	push	r11
     8dc:	cf 92       	push	r12
     8de:	df 92       	push	r13
     8e0:	ef 92       	push	r14
     8e2:	ff 92       	push	r15
     8e4:	0f 93       	push	r16
     8e6:	1f 93       	push	r17
     8e8:	cf 93       	push	r28
     8ea:	df 93       	push	r29
     8ec:	cd b7       	in	r28, 0x3d	; 61
     8ee:	de b7       	in	r29, 0x3e	; 62
     8f0:	2e 97       	sbiw	r28, 0x0e	; 14
     8f2:	0f b6       	in	r0, 0x3f	; 63
     8f4:	f8 94       	cli
     8f6:	de bf       	out	0x3e, r29	; 62
     8f8:	0f be       	out	0x3f, r0	; 63
     8fa:	cd bf       	out	0x3d, r28	; 61
     8fc:	1c 01       	movw	r2, r24
	numlost = 0;
     8fe:	10 92 0d 01 	sts	0x010D, r1
     902:	10 92 0c 01 	sts	0x010C, r1
	
	//if (recalibrate == 1) {
		determine_blobs();
     906:	0e 94 8d 01 	call	0x31a	; 0x31a <determine_blobs>
	//if (numlost >= 2) {
		//recalibrate = 1;
		//return 0;
	//}
	
	if (x[top] < 1023 && x[bottom] < 1023) {
     90a:	00 91 38 01 	lds	r16, 0x0138
     90e:	10 91 39 01 	lds	r17, 0x0139
     912:	f8 01       	movw	r30, r16
     914:	ee 0f       	add	r30, r30
     916:	ff 1f       	adc	r31, r31
     918:	e6 5d       	subi	r30, 0xD6	; 214
     91a:	fe 4f       	sbci	r31, 0xFE	; 254
     91c:	a0 80       	ld	r10, Z
     91e:	b1 80       	ldd	r11, Z+1	; 0x01
     920:	2f ef       	ldi	r18, 0xFF	; 255
     922:	a2 16       	cp	r10, r18
     924:	23 e0       	ldi	r18, 0x03	; 3
     926:	b2 06       	cpc	r11, r18
     928:	08 f0       	brcs	.+2      	; 0x92c <localize+0x64>
     92a:	e1 c1       	rjmp	.+962    	; 0xcee <__stack+0x1ef>
     92c:	c0 90 36 01 	lds	r12, 0x0136
     930:	d0 90 37 01 	lds	r13, 0x0137
     934:	f6 01       	movw	r30, r12
     936:	ee 0f       	add	r30, r30
     938:	ff 1f       	adc	r31, r31
     93a:	e6 5d       	subi	r30, 0xD6	; 214
     93c:	fe 4f       	sbci	r31, 0xFE	; 254
     93e:	e0 80       	ld	r14, Z
     940:	f1 80       	ldd	r15, Z+1	; 0x01
     942:	3f ef       	ldi	r19, 0xFF	; 255
     944:	e3 16       	cp	r14, r19
     946:	33 e0       	ldi	r19, 0x03	; 3
     948:	f3 06       	cpc	r15, r19
     94a:	08 f0       	brcs	.+2      	; 0x94e <localize+0x86>
     94c:	d0 c1       	rjmp	.+928    	; 0xcee <__stack+0x1ef>
		//calculate and store pixel-space position and orientation
		posx = (float) ((float)(x[top]+x[bottom]))/2.0 - rcenterx;
     94e:	40 90 72 01 	lds	r4, 0x0172
     952:	50 90 73 01 	lds	r5, 0x0173
     956:	60 90 74 01 	lds	r6, 0x0174
     95a:	70 90 75 01 	lds	r7, 0x0175
     95e:	b7 01       	movw	r22, r14
     960:	6a 0d       	add	r22, r10
     962:	7b 1d       	adc	r23, r11
     964:	80 e0       	ldi	r24, 0x00	; 0
     966:	90 e0       	ldi	r25, 0x00	; 0
     968:	0e 94 9e 0c 	call	0x193c	; 0x193c <__floatunsisf>
     96c:	20 e0       	ldi	r18, 0x00	; 0
     96e:	30 e0       	ldi	r19, 0x00	; 0
     970:	40 e0       	ldi	r20, 0x00	; 0
     972:	5f e3       	ldi	r21, 0x3F	; 63
     974:	0e 94 b9 0d 	call	0x1b72	; 0x1b72 <__mulsf3>
     978:	a3 01       	movw	r20, r6
     97a:	92 01       	movw	r18, r4
     97c:	0e 94 37 0b 	call	0x166e	; 0x166e <__subsf3>
     980:	6d 83       	std	Y+5, r22	; 0x05
     982:	7e 83       	std	Y+6, r23	; 0x06
     984:	8f 83       	std	Y+7, r24	; 0x07
     986:	98 87       	std	Y+8, r25	; 0x08
		posy = (float) ((float)(y[top]+y[bottom]))/2.0 - rcentery;
     988:	f8 01       	movw	r30, r16
     98a:	ee 0f       	add	r30, r30
     98c:	ff 1f       	adc	r31, r31
     98e:	ee 5d       	subi	r30, 0xDE	; 222
     990:	fe 4f       	sbci	r31, 0xFE	; 254
     992:	80 81       	ld	r24, Z
     994:	91 81       	ldd	r25, Z+1	; 0x01
     996:	9a 83       	std	Y+2, r25	; 0x02
     998:	89 83       	std	Y+1, r24	; 0x01
     99a:	f6 01       	movw	r30, r12
     99c:	ee 0f       	add	r30, r30
     99e:	ff 1f       	adc	r31, r31
     9a0:	ee 5d       	subi	r30, 0xDE	; 222
     9a2:	fe 4f       	sbci	r31, 0xFE	; 254
     9a4:	00 81       	ld	r16, Z
     9a6:	11 81       	ldd	r17, Z+1	; 0x01
     9a8:	bc 01       	movw	r22, r24
     9aa:	60 0f       	add	r22, r16
     9ac:	71 1f       	adc	r23, r17
     9ae:	80 e0       	ldi	r24, 0x00	; 0
     9b0:	90 e0       	ldi	r25, 0x00	; 0
     9b2:	0e 94 9e 0c 	call	0x193c	; 0x193c <__floatunsisf>
     9b6:	20 e0       	ldi	r18, 0x00	; 0
     9b8:	30 e0       	ldi	r19, 0x00	; 0
     9ba:	40 e0       	ldi	r20, 0x00	; 0
     9bc:	5f e3       	ldi	r21, 0x3F	; 63
     9be:	0e 94 b9 0d 	call	0x1b72	; 0x1b72 <__mulsf3>
     9c2:	20 91 76 01 	lds	r18, 0x0176
     9c6:	30 91 77 01 	lds	r19, 0x0177
     9ca:	40 91 78 01 	lds	r20, 0x0178
     9ce:	50 91 79 01 	lds	r21, 0x0179
     9d2:	0e 94 37 0b 	call	0x166e	; 0x166e <__subsf3>
     9d6:	69 87       	std	Y+9, r22	; 0x09
     9d8:	7a 87       	std	Y+10, r23	; 0x0a
     9da:	8b 87       	std	Y+11, r24	; 0x0b
     9dc:	9c 87       	std	Y+12, r25	; 0x0c
		
		
		//calculate and store angle
		angle = -1.0*(float) atan2(((double) ((float)y[top]-(float)y[bottom])),((double) ((float)x[top]-(float)x[bottom])));
     9de:	b5 01       	movw	r22, r10
     9e0:	80 e0       	ldi	r24, 0x00	; 0
     9e2:	90 e0       	ldi	r25, 0x00	; 0
     9e4:	0e 94 9e 0c 	call	0x193c	; 0x193c <__floatunsisf>
     9e8:	4b 01       	movw	r8, r22
     9ea:	5c 01       	movw	r10, r24
     9ec:	b7 01       	movw	r22, r14
     9ee:	80 e0       	ldi	r24, 0x00	; 0
     9f0:	90 e0       	ldi	r25, 0x00	; 0
     9f2:	0e 94 9e 0c 	call	0x193c	; 0x193c <__floatunsisf>
     9f6:	9b 01       	movw	r18, r22
     9f8:	ac 01       	movw	r20, r24
     9fa:	c5 01       	movw	r24, r10
     9fc:	b4 01       	movw	r22, r8
     9fe:	0e 94 37 0b 	call	0x166e	; 0x166e <__subsf3>
     a02:	6b 01       	movw	r12, r22
     a04:	7c 01       	movw	r14, r24
     a06:	a9 81       	ldd	r26, Y+1	; 0x01
     a08:	ba 81       	ldd	r27, Y+2	; 0x02
     a0a:	bd 01       	movw	r22, r26
     a0c:	80 e0       	ldi	r24, 0x00	; 0
     a0e:	90 e0       	ldi	r25, 0x00	; 0
     a10:	0e 94 9e 0c 	call	0x193c	; 0x193c <__floatunsisf>
     a14:	4b 01       	movw	r8, r22
     a16:	5c 01       	movw	r10, r24
     a18:	b8 01       	movw	r22, r16
     a1a:	80 e0       	ldi	r24, 0x00	; 0
     a1c:	90 e0       	ldi	r25, 0x00	; 0
     a1e:	0e 94 9e 0c 	call	0x193c	; 0x193c <__floatunsisf>
     a22:	9b 01       	movw	r18, r22
     a24:	ac 01       	movw	r20, r24
     a26:	c5 01       	movw	r24, r10
     a28:	b4 01       	movw	r22, r8
     a2a:	0e 94 37 0b 	call	0x166e	; 0x166e <__subsf3>
     a2e:	a7 01       	movw	r20, r14
     a30:	96 01       	movw	r18, r12
     a32:	0e 94 ab 0b 	call	0x1756	; 0x1756 <atan2>
     a36:	4b 01       	movw	r8, r22
     a38:	5c 01       	movw	r10, r24
		phi = ((float) atan2((double) posy, (double) posx));
     a3a:	7d 81       	ldd	r23, Y+5	; 0x05
     a3c:	6e 81       	ldd	r22, Y+6	; 0x06
     a3e:	9f 81       	ldd	r25, Y+7	; 0x07
     a40:	88 85       	ldd	r24, Y+8	; 0x08
     a42:	27 2f       	mov	r18, r23
     a44:	36 2f       	mov	r19, r22
     a46:	49 2f       	mov	r20, r25
     a48:	58 2f       	mov	r21, r24
     a4a:	b9 85       	ldd	r27, Y+9	; 0x09
     a4c:	aa 85       	ldd	r26, Y+10	; 0x0a
     a4e:	eb 85       	ldd	r30, Y+11	; 0x0b
     a50:	1c 85       	ldd	r17, Y+12	; 0x0c
     a52:	6b 2f       	mov	r22, r27
     a54:	7a 2f       	mov	r23, r26
     a56:	8e 2f       	mov	r24, r30
     a58:	91 2f       	mov	r25, r17
     a5a:	0e 94 ab 0b 	call	0x1756	; 0x1756 <atan2>
     a5e:	6b 01       	movw	r12, r22
     a60:	7c 01       	movw	r14, r24
		
		r = (float) sqrt((double)((posx)*(posx) + (posy)*(posy)));
     a62:	7d 81       	ldd	r23, Y+5	; 0x05
     a64:	6e 81       	ldd	r22, Y+6	; 0x06
     a66:	9f 81       	ldd	r25, Y+7	; 0x07
     a68:	88 85       	ldd	r24, Y+8	; 0x08
     a6a:	27 2f       	mov	r18, r23
     a6c:	36 2f       	mov	r19, r22
     a6e:	49 2f       	mov	r20, r25
     a70:	58 2f       	mov	r21, r24
     a72:	67 2f       	mov	r22, r23
     a74:	73 2f       	mov	r23, r19
     a76:	89 2f       	mov	r24, r25
     a78:	95 2f       	mov	r25, r21
     a7a:	0e 94 b9 0d 	call	0x1b72	; 0x1b72 <__mulsf3>
     a7e:	69 83       	std	Y+1, r22	; 0x01
     a80:	7a 83       	std	Y+2, r23	; 0x02
     a82:	8b 83       	std	Y+3, r24	; 0x03
     a84:	9c 83       	std	Y+4, r25	; 0x04
     a86:	79 85       	ldd	r23, Y+9	; 0x09
     a88:	6a 85       	ldd	r22, Y+10	; 0x0a
     a8a:	9b 85       	ldd	r25, Y+11	; 0x0b
     a8c:	8c 85       	ldd	r24, Y+12	; 0x0c
     a8e:	27 2f       	mov	r18, r23
     a90:	36 2f       	mov	r19, r22
     a92:	49 2f       	mov	r20, r25
     a94:	58 2f       	mov	r21, r24
     a96:	67 2f       	mov	r22, r23
     a98:	73 2f       	mov	r23, r19
     a9a:	89 2f       	mov	r24, r25
     a9c:	95 2f       	mov	r25, r21
     a9e:	0e 94 b9 0d 	call	0x1b72	; 0x1b72 <__mulsf3>
     aa2:	9b 01       	movw	r18, r22
     aa4:	ac 01       	movw	r20, r24
     aa6:	69 81       	ldd	r22, Y+1	; 0x01
     aa8:	7a 81       	ldd	r23, Y+2	; 0x02
     aaa:	8b 81       	ldd	r24, Y+3	; 0x03
     aac:	9c 81       	ldd	r25, Y+4	; 0x04
     aae:	0e 94 38 0b 	call	0x1670	; 0x1670 <__addsf3>
     ab2:	0e 94 26 0e 	call	0x1c4c	; 0x1c4c <sqrt>
     ab6:	69 83       	std	Y+1, r22	; 0x01
     ab8:	7a 83       	std	Y+2, r23	; 0x02
     aba:	8b 83       	std	Y+3, r24	; 0x03
     abc:	9c 83       	std	Y+4, r25	; 0x04
		
		

		data[0] = (rcenterx + r * (float) cos((double) (((3 * 3.14)/2) - angle - phi)));
     abe:	22 e5       	ldi	r18, 0x52	; 82
     ac0:	38 eb       	ldi	r19, 0xB8	; 184
     ac2:	46 e9       	ldi	r20, 0x96	; 150
     ac4:	50 e4       	ldi	r21, 0x40	; 64
     ac6:	c5 01       	movw	r24, r10
     ac8:	b4 01       	movw	r22, r8
     aca:	0e 94 38 0b 	call	0x1670	; 0x1670 <__addsf3>
     ace:	a7 01       	movw	r20, r14
     ad0:	96 01       	movw	r18, r12
     ad2:	0e 94 37 0b 	call	0x166e	; 0x166e <__subsf3>
     ad6:	6e 87       	std	Y+14, r22	; 0x0e
     ad8:	7d 87       	std	Y+13, r23	; 0x0d
     ada:	18 2f       	mov	r17, r24
     adc:	09 2f       	mov	r16, r25
     ade:	81 2f       	mov	r24, r17
     ae0:	90 2f       	mov	r25, r16
     ae2:	0e 94 02 0c 	call	0x1804	; 0x1804 <cos>
     ae6:	29 81       	ldd	r18, Y+1	; 0x01
     ae8:	3a 81       	ldd	r19, Y+2	; 0x02
     aea:	4b 81       	ldd	r20, Y+3	; 0x03
     aec:	5c 81       	ldd	r21, Y+4	; 0x04
     aee:	0e 94 b9 0d 	call	0x1b72	; 0x1b72 <__mulsf3>
     af2:	9b 01       	movw	r18, r22
     af4:	ac 01       	movw	r20, r24
     af6:	c3 01       	movw	r24, r6
     af8:	b2 01       	movw	r22, r4
     afa:	0e 94 38 0b 	call	0x1670	; 0x1670 <__addsf3>
     afe:	f1 01       	movw	r30, r2
     b00:	60 83       	st	Z, r22
     b02:	71 83       	std	Z+1, r23	; 0x01
     b04:	82 83       	std	Z+2, r24	; 0x02
     b06:	93 83       	std	Z+3, r25	; 0x03
		data[1] = rcentery + r * (float) sin((double) (((3 * 3.14)/2) - angle - phi));
     b08:	5e 85       	ldd	r21, Y+14	; 0x0e
     b0a:	4d 85       	ldd	r20, Y+13	; 0x0d
     b0c:	65 2f       	mov	r22, r21
     b0e:	74 2f       	mov	r23, r20
     b10:	81 2f       	mov	r24, r17
     b12:	90 2f       	mov	r25, r16
     b14:	0e 94 1c 0e 	call	0x1c38	; 0x1c38 <sin>
     b18:	29 81       	ldd	r18, Y+1	; 0x01
     b1a:	3a 81       	ldd	r19, Y+2	; 0x02
     b1c:	4b 81       	ldd	r20, Y+3	; 0x03
     b1e:	5c 81       	ldd	r21, Y+4	; 0x04
     b20:	0e 94 b9 0d 	call	0x1b72	; 0x1b72 <__mulsf3>
     b24:	20 91 76 01 	lds	r18, 0x0176
     b28:	30 91 77 01 	lds	r19, 0x0177
     b2c:	40 91 78 01 	lds	r20, 0x0178
     b30:	50 91 79 01 	lds	r21, 0x0179
     b34:	0e 94 38 0b 	call	0x1670	; 0x1670 <__addsf3>
     b38:	d1 01       	movw	r26, r2
     b3a:	14 96       	adiw	r26, 0x04	; 4
     b3c:	6d 93       	st	X+, r22
     b3e:	7d 93       	st	X+, r23
     b40:	8d 93       	st	X+, r24
     b42:	9c 93       	st	X, r25
     b44:	17 97       	sbiw	r26, 0x07	; 7
		posx = (float) ((float)(x[top]+x[bottom]))/2.0 - rcenterx;
		posy = (float) ((float)(y[top]+y[bottom]))/2.0 - rcentery;
		
		
		//calculate and store angle
		angle = -1.0*(float) atan2(((double) ((float)y[top]-(float)y[bottom])),((double) ((float)x[top]-(float)x[bottom])));
     b46:	c5 01       	movw	r24, r10
     b48:	b4 01       	movw	r22, r8
     b4a:	90 58       	subi	r25, 0x80	; 128

		data[0] = (rcenterx + r * (float) cos((double) (((3 * 3.14)/2) - angle - phi)));
		data[1] = rcentery + r * (float) sin((double) (((3 * 3.14)/2) - angle - phi));
		//data[0] = posx- r*(float)cos((double)phi);
		//data[1] = posy- r*(float)sin((double)phi);
		data[2] = angle * 180.0 / 3.14;
     b4c:	20 e0       	ldi	r18, 0x00	; 0
     b4e:	30 e0       	ldi	r19, 0x00	; 0
     b50:	44 e3       	ldi	r20, 0x34	; 52
     b52:	53 e4       	ldi	r21, 0x43	; 67
     b54:	0e 94 b9 0d 	call	0x1b72	; 0x1b72 <__mulsf3>
     b58:	23 ec       	ldi	r18, 0xC3	; 195
     b5a:	35 ef       	ldi	r19, 0xF5	; 245
     b5c:	48 e4       	ldi	r20, 0x48	; 72
     b5e:	50 e4       	ldi	r21, 0x40	; 64
     b60:	0e 94 05 0c 	call	0x180a	; 0x180a <__divsf3>
     b64:	f1 01       	movw	r30, r2
     b66:	60 87       	std	Z+8, r22	; 0x08
     b68:	71 87       	std	Z+9, r23	; 0x09
     b6a:	82 87       	std	Z+10, r24	; 0x0a
     b6c:	93 87       	std	Z+11, r25	; 0x0b
		data[3] = x[top];
     b6e:	00 91 38 01 	lds	r16, 0x0138
     b72:	10 91 39 01 	lds	r17, 0x0139
     b76:	00 0f       	add	r16, r16
     b78:	11 1f       	adc	r17, r17
     b7a:	f8 01       	movw	r30, r16
     b7c:	e6 5d       	subi	r30, 0xD6	; 214
     b7e:	fe 4f       	sbci	r31, 0xFE	; 254
     b80:	60 81       	ld	r22, Z
     b82:	71 81       	ldd	r23, Z+1	; 0x01
     b84:	80 e0       	ldi	r24, 0x00	; 0
     b86:	90 e0       	ldi	r25, 0x00	; 0
     b88:	0e 94 9e 0c 	call	0x193c	; 0x193c <__floatunsisf>
     b8c:	d1 01       	movw	r26, r2
     b8e:	1c 96       	adiw	r26, 0x0c	; 12
     b90:	6d 93       	st	X+, r22
     b92:	7d 93       	st	X+, r23
     b94:	8d 93       	st	X+, r24
     b96:	9c 93       	st	X, r25
     b98:	1f 97       	sbiw	r26, 0x0f	; 15
		data[4] = y[top];
     b9a:	f8 01       	movw	r30, r16
     b9c:	ee 5d       	subi	r30, 0xDE	; 222
     b9e:	fe 4f       	sbci	r31, 0xFE	; 254
     ba0:	60 81       	ld	r22, Z
     ba2:	71 81       	ldd	r23, Z+1	; 0x01
     ba4:	80 e0       	ldi	r24, 0x00	; 0
     ba6:	90 e0       	ldi	r25, 0x00	; 0
     ba8:	0e 94 9e 0c 	call	0x193c	; 0x193c <__floatunsisf>
     bac:	f1 01       	movw	r30, r2
     bae:	60 8b       	std	Z+16, r22	; 0x10
     bb0:	71 8b       	std	Z+17, r23	; 0x11
     bb2:	82 8b       	std	Z+18, r24	; 0x12
     bb4:	93 8b       	std	Z+19, r25	; 0x13
		data[5] = x[bottom];
     bb6:	00 91 36 01 	lds	r16, 0x0136
     bba:	10 91 37 01 	lds	r17, 0x0137
     bbe:	00 0f       	add	r16, r16
     bc0:	11 1f       	adc	r17, r17
     bc2:	f8 01       	movw	r30, r16
     bc4:	e6 5d       	subi	r30, 0xD6	; 214
     bc6:	fe 4f       	sbci	r31, 0xFE	; 254
     bc8:	60 81       	ld	r22, Z
     bca:	71 81       	ldd	r23, Z+1	; 0x01
     bcc:	80 e0       	ldi	r24, 0x00	; 0
     bce:	90 e0       	ldi	r25, 0x00	; 0
     bd0:	0e 94 9e 0c 	call	0x193c	; 0x193c <__floatunsisf>
     bd4:	d1 01       	movw	r26, r2
     bd6:	54 96       	adiw	r26, 0x14	; 20
     bd8:	6d 93       	st	X+, r22
     bda:	7d 93       	st	X+, r23
     bdc:	8d 93       	st	X+, r24
     bde:	9c 93       	st	X, r25
     be0:	57 97       	sbiw	r26, 0x17	; 23
		data[6] = y[bottom];
     be2:	f8 01       	movw	r30, r16
     be4:	ee 5d       	subi	r30, 0xDE	; 222
     be6:	fe 4f       	sbci	r31, 0xFE	; 254
     be8:	60 81       	ld	r22, Z
     bea:	71 81       	ldd	r23, Z+1	; 0x01
     bec:	80 e0       	ldi	r24, 0x00	; 0
     bee:	90 e0       	ldi	r25, 0x00	; 0
     bf0:	0e 94 9e 0c 	call	0x193c	; 0x193c <__floatunsisf>
     bf4:	f1 01       	movw	r30, r2
     bf6:	60 8f       	std	Z+24, r22	; 0x18
     bf8:	71 8f       	std	Z+25, r23	; 0x19
     bfa:	82 8f       	std	Z+26, r24	; 0x1a
     bfc:	93 8f       	std	Z+27, r25	; 0x1b
		data[7] = x[right];
     bfe:	00 91 32 01 	lds	r16, 0x0132
     c02:	10 91 33 01 	lds	r17, 0x0133
     c06:	00 0f       	add	r16, r16
     c08:	11 1f       	adc	r17, r17
     c0a:	f8 01       	movw	r30, r16
     c0c:	e6 5d       	subi	r30, 0xD6	; 214
     c0e:	fe 4f       	sbci	r31, 0xFE	; 254
     c10:	60 81       	ld	r22, Z
     c12:	71 81       	ldd	r23, Z+1	; 0x01
     c14:	80 e0       	ldi	r24, 0x00	; 0
     c16:	90 e0       	ldi	r25, 0x00	; 0
     c18:	0e 94 9e 0c 	call	0x193c	; 0x193c <__floatunsisf>
     c1c:	d1 01       	movw	r26, r2
     c1e:	5c 96       	adiw	r26, 0x1c	; 28
     c20:	6d 93       	st	X+, r22
     c22:	7d 93       	st	X+, r23
     c24:	8d 93       	st	X+, r24
     c26:	9c 93       	st	X, r25
     c28:	5f 97       	sbiw	r26, 0x1f	; 31
		data[8] = y[right];
     c2a:	f8 01       	movw	r30, r16
     c2c:	ee 5d       	subi	r30, 0xDE	; 222
     c2e:	fe 4f       	sbci	r31, 0xFE	; 254
     c30:	60 81       	ld	r22, Z
     c32:	71 81       	ldd	r23, Z+1	; 0x01
     c34:	80 e0       	ldi	r24, 0x00	; 0
     c36:	90 e0       	ldi	r25, 0x00	; 0
     c38:	0e 94 9e 0c 	call	0x193c	; 0x193c <__floatunsisf>
     c3c:	f1 01       	movw	r30, r2
     c3e:	60 a3       	std	Z+32, r22	; 0x20
     c40:	71 a3       	std	Z+33, r23	; 0x21
     c42:	82 a3       	std	Z+34, r24	; 0x22
     c44:	93 a3       	std	Z+35, r25	; 0x23
		data[9] = x[left];
     c46:	00 91 34 01 	lds	r16, 0x0134
     c4a:	10 91 35 01 	lds	r17, 0x0135
     c4e:	00 0f       	add	r16, r16
     c50:	11 1f       	adc	r17, r17
     c52:	f8 01       	movw	r30, r16
     c54:	e6 5d       	subi	r30, 0xD6	; 214
     c56:	fe 4f       	sbci	r31, 0xFE	; 254
     c58:	60 81       	ld	r22, Z
     c5a:	71 81       	ldd	r23, Z+1	; 0x01
     c5c:	80 e0       	ldi	r24, 0x00	; 0
     c5e:	90 e0       	ldi	r25, 0x00	; 0
     c60:	0e 94 9e 0c 	call	0x193c	; 0x193c <__floatunsisf>
     c64:	d1 01       	movw	r26, r2
     c66:	94 96       	adiw	r26, 0x24	; 36
     c68:	6d 93       	st	X+, r22
     c6a:	7d 93       	st	X+, r23
     c6c:	8d 93       	st	X+, r24
     c6e:	9c 93       	st	X, r25
     c70:	97 97       	sbiw	r26, 0x27	; 39
		data[10] = y[left];
     c72:	f8 01       	movw	r30, r16
     c74:	ee 5d       	subi	r30, 0xDE	; 222
     c76:	fe 4f       	sbci	r31, 0xFE	; 254
     c78:	60 81       	ld	r22, Z
     c7a:	71 81       	ldd	r23, Z+1	; 0x01
     c7c:	80 e0       	ldi	r24, 0x00	; 0
     c7e:	90 e0       	ldi	r25, 0x00	; 0
     c80:	0e 94 9e 0c 	call	0x193c	; 0x193c <__floatunsisf>
     c84:	f1 01       	movw	r30, r2
     c86:	60 a7       	std	Z+40, r22	; 0x28
     c88:	71 a7       	std	Z+41, r23	; 0x29
     c8a:	82 a7       	std	Z+42, r24	; 0x2a
     c8c:	93 a7       	std	Z+43, r25	; 0x2b
		data[11] = phi * 180.0 / 3.14;
     c8e:	20 e0       	ldi	r18, 0x00	; 0
     c90:	30 e0       	ldi	r19, 0x00	; 0
     c92:	44 e3       	ldi	r20, 0x34	; 52
     c94:	53 e4       	ldi	r21, 0x43	; 67
     c96:	c7 01       	movw	r24, r14
     c98:	b6 01       	movw	r22, r12
     c9a:	0e 94 b9 0d 	call	0x1b72	; 0x1b72 <__mulsf3>
     c9e:	23 ec       	ldi	r18, 0xC3	; 195
     ca0:	35 ef       	ldi	r19, 0xF5	; 245
     ca2:	48 e4       	ldi	r20, 0x48	; 72
     ca4:	50 e4       	ldi	r21, 0x40	; 64
     ca6:	0e 94 05 0c 	call	0x180a	; 0x180a <__divsf3>
     caa:	d1 01       	movw	r26, r2
     cac:	9c 96       	adiw	r26, 0x2c	; 44
     cae:	6d 93       	st	X+, r22
     cb0:	7d 93       	st	X+, r23
     cb2:	8d 93       	st	X+, r24
     cb4:	9c 93       	st	X, r25
     cb6:	9f 97       	sbiw	r26, 0x2f	; 47
		data[12] = posx;
     cb8:	5d 81       	ldd	r21, Y+5	; 0x05
     cba:	4e 81       	ldd	r20, Y+6	; 0x06
     cbc:	3f 81       	ldd	r19, Y+7	; 0x07
     cbe:	28 85       	ldd	r18, Y+8	; 0x08
     cc0:	85 2f       	mov	r24, r21
     cc2:	94 2f       	mov	r25, r20
     cc4:	a3 2f       	mov	r26, r19
     cc6:	b2 2f       	mov	r27, r18
     cc8:	f1 01       	movw	r30, r2
     cca:	80 ab       	std	Z+48, r24	; 0x30
     ccc:	91 ab       	std	Z+49, r25	; 0x31
     cce:	a2 ab       	std	Z+50, r26	; 0x32
     cd0:	b3 ab       	std	Z+51, r27	; 0x33
		data[13] = posy;
     cd2:	59 85       	ldd	r21, Y+9	; 0x09
     cd4:	4a 85       	ldd	r20, Y+10	; 0x0a
     cd6:	3b 85       	ldd	r19, Y+11	; 0x0b
     cd8:	2c 85       	ldd	r18, Y+12	; 0x0c
     cda:	85 2f       	mov	r24, r21
     cdc:	94 2f       	mov	r25, r20
     cde:	a3 2f       	mov	r26, r19
     ce0:	b2 2f       	mov	r27, r18
     ce2:	84 ab       	std	Z+52, r24	; 0x34
     ce4:	95 ab       	std	Z+53, r25	; 0x35
     ce6:	a6 ab       	std	Z+54, r26	; 0x36
     ce8:	b7 ab       	std	Z+55, r27	; 0x37
		
		return 1;
     cea:	81 e0       	ldi	r24, 0x01	; 1
     cec:	00 c0       	rjmp	.+0      	; 0xcee <__stack+0x1ef>
		return 1;
	}
	
	return 0;
	*/
     cee:	2e 96       	adiw	r28, 0x0e	; 14
     cf0:	0f b6       	in	r0, 0x3f	; 63
     cf2:	f8 94       	cli
     cf4:	de bf       	out	0x3e, r29	; 62
     cf6:	0f be       	out	0x3f, r0	; 63
     cf8:	cd bf       	out	0x3d, r28	; 61
     cfa:	df 91       	pop	r29
     cfc:	cf 91       	pop	r28
     cfe:	1f 91       	pop	r17
     d00:	0f 91       	pop	r16
     d02:	ff 90       	pop	r15
     d04:	ef 90       	pop	r14
     d06:	df 90       	pop	r13
     d08:	cf 90       	pop	r12
     d0a:	bf 90       	pop	r11
     d0c:	af 90       	pop	r10
     d0e:	9f 90       	pop	r9
     d10:	8f 90       	pop	r8
     d12:	7f 90       	pop	r7
     d14:	6f 90       	pop	r6
     d16:	5f 90       	pop	r5
     d18:	4f 90       	pop	r4
     d1a:	3f 90       	pop	r3
     d1c:	2f 90       	pop	r2
     d1e:	08 95       	ret

00000d20 <m_usb_init>:
     d20:	81 e0       	ldi	r24, 0x01	; 1
     d22:	80 93 d7 00 	sts	0x00D7, r24
     d26:	80 ea       	ldi	r24, 0xA0	; 160
     d28:	80 93 d8 00 	sts	0x00D8, r24
     d2c:	82 e1       	ldi	r24, 0x12	; 18
     d2e:	89 bd       	out	0x29, r24	; 41
     d30:	09 b4       	in	r0, 0x29	; 41
     d32:	00 fe       	sbrs	r0, 0
     d34:	fd cf       	rjmp	.-6      	; 0xd30 <m_usb_init+0x10>
     d36:	80 e9       	ldi	r24, 0x90	; 144
     d38:	80 93 d8 00 	sts	0x00D8, r24
     d3c:	10 92 e0 00 	sts	0x00E0, r1
     d40:	10 92 53 01 	sts	0x0153, r1
     d44:	10 92 54 01 	sts	0x0154, r1
     d48:	8c e0       	ldi	r24, 0x0C	; 12
     d4a:	80 93 e2 00 	sts	0x00E2, r24
     d4e:	78 94       	sei
     d50:	08 95       	ret

00000d52 <m_usb_isconnected>:
     d52:	80 91 53 01 	lds	r24, 0x0153
     d56:	08 95       	ret

00000d58 <m_usb_rx_char>:
     d58:	9f b7       	in	r25, 0x3f	; 63
     d5a:	f8 94       	cli
     d5c:	80 91 53 01 	lds	r24, 0x0153
     d60:	81 11       	cpse	r24, r1
     d62:	03 c0       	rjmp	.+6      	; 0xd6a <m_usb_rx_char+0x12>
     d64:	9f bf       	out	0x3f, r25	; 63
     d66:	8f ef       	ldi	r24, 0xFF	; 255
     d68:	08 95       	ret
     d6a:	83 e0       	ldi	r24, 0x03	; 3
     d6c:	80 93 e9 00 	sts	0x00E9, r24
     d70:	80 91 e8 00 	lds	r24, 0x00E8
     d74:	85 fd       	sbrc	r24, 5
     d76:	03 c0       	rjmp	.+6      	; 0xd7e <m_usb_rx_char+0x26>
     d78:	9f bf       	out	0x3f, r25	; 63
     d7a:	8f ef       	ldi	r24, 0xFF	; 255
     d7c:	08 95       	ret
     d7e:	80 91 f1 00 	lds	r24, 0x00F1
     d82:	20 91 e8 00 	lds	r18, 0x00E8
     d86:	25 fd       	sbrc	r18, 5
     d88:	03 c0       	rjmp	.+6      	; 0xd90 <m_usb_rx_char+0x38>
     d8a:	2b e6       	ldi	r18, 0x6B	; 107
     d8c:	20 93 e8 00 	sts	0x00E8, r18
     d90:	9f bf       	out	0x3f, r25	; 63
     d92:	08 95       	ret

00000d94 <m_usb_rx_available>:
     d94:	9f b7       	in	r25, 0x3f	; 63
     d96:	f8 94       	cli
     d98:	80 91 53 01 	lds	r24, 0x0153
     d9c:	88 23       	and	r24, r24
     d9e:	31 f0       	breq	.+12     	; 0xdac <m_usb_rx_available+0x18>
     da0:	83 e0       	ldi	r24, 0x03	; 3
     da2:	80 93 e9 00 	sts	0x00E9, r24
     da6:	80 91 f2 00 	lds	r24, 0x00F2
     daa:	01 c0       	rjmp	.+2      	; 0xdae <m_usb_rx_available+0x1a>
     dac:	80 e0       	ldi	r24, 0x00	; 0
     dae:	9f bf       	out	0x3f, r25	; 63
     db0:	08 95       	ret

00000db2 <m_usb_rx_flush>:
     db2:	80 91 53 01 	lds	r24, 0x0153
     db6:	88 23       	and	r24, r24
     db8:	89 f0       	breq	.+34     	; 0xddc <m_usb_rx_flush+0x2a>
     dba:	2f b7       	in	r18, 0x3f	; 63
     dbc:	f8 94       	cli
     dbe:	83 e0       	ldi	r24, 0x03	; 3
     dc0:	80 93 e9 00 	sts	0x00E9, r24
     dc4:	80 91 e8 00 	lds	r24, 0x00E8
     dc8:	85 ff       	sbrs	r24, 5
     dca:	07 c0       	rjmp	.+14     	; 0xdda <m_usb_rx_flush+0x28>
     dcc:	e8 ee       	ldi	r30, 0xE8	; 232
     dce:	f0 e0       	ldi	r31, 0x00	; 0
     dd0:	9b e6       	ldi	r25, 0x6B	; 107
     dd2:	90 83       	st	Z, r25
     dd4:	80 81       	ld	r24, Z
     dd6:	85 fd       	sbrc	r24, 5
     dd8:	fc cf       	rjmp	.-8      	; 0xdd2 <m_usb_rx_flush+0x20>
     dda:	2f bf       	out	0x3f, r18	; 63
     ddc:	08 95       	ret

00000dde <m_usb_tx_char>:
     dde:	cf 93       	push	r28
     de0:	df 93       	push	r29
     de2:	90 91 53 01 	lds	r25, 0x0153
     de6:	99 23       	and	r25, r25
     de8:	09 f4       	brne	.+2      	; 0xdec <m_usb_tx_char+0xe>
     dea:	4d c0       	rjmp	.+154    	; 0xe86 <m_usb_tx_char+0xa8>
     dec:	9f b7       	in	r25, 0x3f	; 63
     dee:	f8 94       	cli
     df0:	24 e0       	ldi	r18, 0x04	; 4
     df2:	20 93 e9 00 	sts	0x00E9, r18
     df6:	20 91 55 01 	lds	r18, 0x0155
     dfa:	22 23       	and	r18, r18
     dfc:	49 f0       	breq	.+18     	; 0xe10 <m_usb_tx_char+0x32>
     dfe:	20 91 e8 00 	lds	r18, 0x00E8
     e02:	25 fd       	sbrc	r18, 5
     e04:	03 c0       	rjmp	.+6      	; 0xe0c <m_usb_tx_char+0x2e>
     e06:	9f bf       	out	0x3f, r25	; 63
     e08:	8f ef       	ldi	r24, 0xFF	; 255
     e0a:	42 c0       	rjmp	.+132    	; 0xe90 <m_usb_tx_char+0xb2>
     e0c:	10 92 55 01 	sts	0x0155, r1
     e10:	30 91 e4 00 	lds	r19, 0x00E4
     e14:	37 5e       	subi	r19, 0xE7	; 231
     e16:	20 91 e8 00 	lds	r18, 0x00E8
     e1a:	25 fd       	sbrc	r18, 5
     e1c:	25 c0       	rjmp	.+74     	; 0xe68 <m_usb_tx_char+0x8a>
     e1e:	9f bf       	out	0x3f, r25	; 63
     e20:	90 91 e4 00 	lds	r25, 0x00E4
     e24:	93 17       	cp	r25, r19
     e26:	49 f0       	breq	.+18     	; 0xe3a <m_usb_tx_char+0x5c>
     e28:	90 91 53 01 	lds	r25, 0x0153
     e2c:	91 11       	cpse	r25, r1
     e2e:	0f c0       	rjmp	.+30     	; 0xe4e <m_usb_tx_char+0x70>
     e30:	2c c0       	rjmp	.+88     	; 0xe8a <m_usb_tx_char+0xac>
     e32:	9f bf       	out	0x3f, r25	; 63
     e34:	98 81       	ld	r25, Y
     e36:	93 13       	cpse	r25, r19
     e38:	05 c0       	rjmp	.+10     	; 0xe44 <m_usb_tx_char+0x66>
     e3a:	81 e0       	ldi	r24, 0x01	; 1
     e3c:	80 93 55 01 	sts	0x0155, r24
     e40:	8f ef       	ldi	r24, 0xFF	; 255
     e42:	26 c0       	rjmp	.+76     	; 0xe90 <m_usb_tx_char+0xb2>
     e44:	90 91 53 01 	lds	r25, 0x0153
     e48:	91 11       	cpse	r25, r1
     e4a:	08 c0       	rjmp	.+16     	; 0xe5c <m_usb_tx_char+0x7e>
     e4c:	20 c0       	rjmp	.+64     	; 0xe8e <m_usb_tx_char+0xb0>
     e4e:	a9 ee       	ldi	r26, 0xE9	; 233
     e50:	b0 e0       	ldi	r27, 0x00	; 0
     e52:	44 e0       	ldi	r20, 0x04	; 4
     e54:	e8 ee       	ldi	r30, 0xE8	; 232
     e56:	f0 e0       	ldi	r31, 0x00	; 0
     e58:	c4 ee       	ldi	r28, 0xE4	; 228
     e5a:	d0 e0       	ldi	r29, 0x00	; 0
     e5c:	9f b7       	in	r25, 0x3f	; 63
     e5e:	f8 94       	cli
     e60:	4c 93       	st	X, r20
     e62:	20 81       	ld	r18, Z
     e64:	25 ff       	sbrs	r18, 5
     e66:	e5 cf       	rjmp	.-54     	; 0xe32 <m_usb_tx_char+0x54>
     e68:	80 93 f1 00 	sts	0x00F1, r24
     e6c:	80 91 e8 00 	lds	r24, 0x00E8
     e70:	85 fd       	sbrc	r24, 5
     e72:	03 c0       	rjmp	.+6      	; 0xe7a <m_usb_tx_char+0x9c>
     e74:	8a e3       	ldi	r24, 0x3A	; 58
     e76:	80 93 e8 00 	sts	0x00E8, r24
     e7a:	85 e0       	ldi	r24, 0x05	; 5
     e7c:	80 93 52 01 	sts	0x0152, r24
     e80:	9f bf       	out	0x3f, r25	; 63
     e82:	80 e0       	ldi	r24, 0x00	; 0
     e84:	05 c0       	rjmp	.+10     	; 0xe90 <m_usb_tx_char+0xb2>
     e86:	8f ef       	ldi	r24, 0xFF	; 255
     e88:	03 c0       	rjmp	.+6      	; 0xe90 <m_usb_tx_char+0xb2>
     e8a:	8f ef       	ldi	r24, 0xFF	; 255
     e8c:	01 c0       	rjmp	.+2      	; 0xe90 <m_usb_tx_char+0xb2>
     e8e:	8f ef       	ldi	r24, 0xFF	; 255
     e90:	df 91       	pop	r29
     e92:	cf 91       	pop	r28
     e94:	08 95       	ret

00000e96 <__vector_10>:
     e96:	1f 92       	push	r1
     e98:	0f 92       	push	r0
     e9a:	0f b6       	in	r0, 0x3f	; 63
     e9c:	0f 92       	push	r0
     e9e:	11 24       	eor	r1, r1
     ea0:	8f 93       	push	r24
     ea2:	9f 93       	push	r25
     ea4:	ef 93       	push	r30
     ea6:	ff 93       	push	r31
     ea8:	e1 ee       	ldi	r30, 0xE1	; 225
     eaa:	f0 e0       	ldi	r31, 0x00	; 0
     eac:	80 81       	ld	r24, Z
     eae:	10 82       	st	Z, r1
     eb0:	83 ff       	sbrs	r24, 3
     eb2:	11 c0       	rjmp	.+34     	; 0xed6 <__vector_10+0x40>
     eb4:	10 92 e9 00 	sts	0x00E9, r1
     eb8:	91 e0       	ldi	r25, 0x01	; 1
     eba:	90 93 eb 00 	sts	0x00EB, r25
     ebe:	10 92 ec 00 	sts	0x00EC, r1
     ec2:	92 e1       	ldi	r25, 0x12	; 18
     ec4:	90 93 ed 00 	sts	0x00ED, r25
     ec8:	98 e0       	ldi	r25, 0x08	; 8
     eca:	90 93 f0 00 	sts	0x00F0, r25
     ece:	10 92 53 01 	sts	0x0153, r1
     ed2:	10 92 54 01 	sts	0x0154, r1
     ed6:	82 ff       	sbrs	r24, 2
     ed8:	13 c0       	rjmp	.+38     	; 0xf00 <__vector_10+0x6a>
     eda:	80 91 53 01 	lds	r24, 0x0153
     ede:	88 23       	and	r24, r24
     ee0:	79 f0       	breq	.+30     	; 0xf00 <__vector_10+0x6a>
     ee2:	80 91 52 01 	lds	r24, 0x0152
     ee6:	88 23       	and	r24, r24
     ee8:	59 f0       	breq	.+22     	; 0xf00 <__vector_10+0x6a>
     eea:	81 50       	subi	r24, 0x01	; 1
     eec:	80 93 52 01 	sts	0x0152, r24
     ef0:	81 11       	cpse	r24, r1
     ef2:	06 c0       	rjmp	.+12     	; 0xf00 <__vector_10+0x6a>
     ef4:	84 e0       	ldi	r24, 0x04	; 4
     ef6:	80 93 e9 00 	sts	0x00E9, r24
     efa:	8a e3       	ldi	r24, 0x3A	; 58
     efc:	80 93 e8 00 	sts	0x00E8, r24
     f00:	ff 91       	pop	r31
     f02:	ef 91       	pop	r30
     f04:	9f 91       	pop	r25
     f06:	8f 91       	pop	r24
     f08:	0f 90       	pop	r0
     f0a:	0f be       	out	0x3f, r0	; 63
     f0c:	0f 90       	pop	r0
     f0e:	1f 90       	pop	r1
     f10:	18 95       	reti

00000f12 <__vector_11>:
     f12:	1f 92       	push	r1
     f14:	0f 92       	push	r0
     f16:	0f b6       	in	r0, 0x3f	; 63
     f18:	0f 92       	push	r0
     f1a:	11 24       	eor	r1, r1
     f1c:	0f 93       	push	r16
     f1e:	1f 93       	push	r17
     f20:	2f 93       	push	r18
     f22:	3f 93       	push	r19
     f24:	4f 93       	push	r20
     f26:	5f 93       	push	r21
     f28:	6f 93       	push	r22
     f2a:	7f 93       	push	r23
     f2c:	8f 93       	push	r24
     f2e:	9f 93       	push	r25
     f30:	af 93       	push	r26
     f32:	bf 93       	push	r27
     f34:	cf 93       	push	r28
     f36:	df 93       	push	r29
     f38:	ef 93       	push	r30
     f3a:	ff 93       	push	r31
     f3c:	10 92 e9 00 	sts	0x00E9, r1
     f40:	80 91 e8 00 	lds	r24, 0x00E8
     f44:	83 ff       	sbrs	r24, 3
     f46:	51 c1       	rjmp	.+674    	; 0x11ea <__vector_11+0x2d8>
     f48:	e1 ef       	ldi	r30, 0xF1	; 241
     f4a:	f0 e0       	ldi	r31, 0x00	; 0
     f4c:	70 81       	ld	r23, Z
     f4e:	40 81       	ld	r20, Z
     f50:	20 81       	ld	r18, Z
     f52:	30 81       	ld	r19, Z
     f54:	93 2f       	mov	r25, r19
     f56:	80 e0       	ldi	r24, 0x00	; 0
     f58:	dc 01       	movw	r26, r24
     f5a:	a2 2b       	or	r26, r18
     f5c:	9d 01       	movw	r18, r26
     f5e:	50 81       	ld	r21, Z
     f60:	60 81       	ld	r22, Z
     f62:	96 2f       	mov	r25, r22
     f64:	80 e0       	ldi	r24, 0x00	; 0
     f66:	85 2b       	or	r24, r21
     f68:	a0 81       	ld	r26, Z
     f6a:	b0 81       	ld	r27, Z
     f6c:	52 ef       	ldi	r21, 0xF2	; 242
     f6e:	50 93 e8 00 	sts	0x00E8, r21
     f72:	46 30       	cpi	r20, 0x06	; 6
     f74:	09 f0       	breq	.+2      	; 0xf78 <__vector_11+0x66>
     f76:	5c c0       	rjmp	.+184    	; 0x1030 <__vector_11+0x11e>
     f78:	04 c0       	rjmp	.+8      	; 0xf82 <__vector_11+0x70>
     f7a:	81 e2       	ldi	r24, 0x21	; 33
     f7c:	80 93 eb 00 	sts	0x00EB, r24
     f80:	3b c1       	rjmp	.+630    	; 0x11f8 <__vector_11+0x2e6>
     f82:	c6 e0       	ldi	r28, 0x06	; 6
     f84:	47 ef       	ldi	r20, 0xF7	; 247
     f86:	50 e0       	ldi	r21, 0x00	; 0
     f88:	fa 01       	movw	r30, r20
     f8a:	65 91       	lpm	r22, Z+
     f8c:	74 91       	lpm	r23, Z
     f8e:	26 17       	cp	r18, r22
     f90:	37 07       	cpc	r19, r23
     f92:	19 f0       	breq	.+6      	; 0xf9a <__vector_11+0x88>
     f94:	49 5f       	subi	r20, 0xF9	; 249
     f96:	5f 4f       	sbci	r21, 0xFF	; 255
     f98:	20 c0       	rjmp	.+64     	; 0xfda <__vector_11+0xc8>
     f9a:	fa 01       	movw	r30, r20
     f9c:	32 96       	adiw	r30, 0x02	; 2
     f9e:	65 91       	lpm	r22, Z+
     fa0:	74 91       	lpm	r23, Z
     fa2:	86 17       	cp	r24, r22
     fa4:	97 07       	cpc	r25, r23
     fa6:	19 f0       	breq	.+6      	; 0xfae <__vector_11+0x9c>
     fa8:	49 5f       	subi	r20, 0xF9	; 249
     faa:	5f 4f       	sbci	r21, 0xFF	; 255
     fac:	16 c0       	rjmp	.+44     	; 0xfda <__vector_11+0xc8>
     fae:	fa 01       	movw	r30, r20
     fb0:	34 96       	adiw	r30, 0x04	; 4
     fb2:	85 91       	lpm	r24, Z+
     fb4:	94 91       	lpm	r25, Z
     fb6:	28 2f       	mov	r18, r24
     fb8:	39 2f       	mov	r19, r25
     fba:	fa 01       	movw	r30, r20
     fbc:	36 96       	adiw	r30, 0x06	; 6
     fbe:	44 91       	lpm	r20, Z
     fc0:	9b 2f       	mov	r25, r27
     fc2:	80 e0       	ldi	r24, 0x00	; 0
     fc4:	8a 2b       	or	r24, r26
     fc6:	8f 3f       	cpi	r24, 0xFF	; 255
     fc8:	91 05       	cpc	r25, r1
     fca:	19 f0       	breq	.+6      	; 0xfd2 <__vector_11+0xc0>
     fcc:	10 f0       	brcs	.+4      	; 0xfd2 <__vector_11+0xc0>
     fce:	8f ef       	ldi	r24, 0xFF	; 255
     fd0:	90 e0       	ldi	r25, 0x00	; 0
     fd2:	84 17       	cp	r24, r20
     fd4:	28 f4       	brcc	.+10     	; 0xfe0 <__vector_11+0xce>
     fd6:	48 2f       	mov	r20, r24
     fd8:	03 c0       	rjmp	.+6      	; 0xfe0 <__vector_11+0xce>
     fda:	c1 50       	subi	r28, 0x01	; 1
     fdc:	a9 f6       	brne	.-86     	; 0xf88 <__vector_11+0x76>
     fde:	cd cf       	rjmp	.-102    	; 0xf7a <__vector_11+0x68>
     fe0:	c8 ee       	ldi	r28, 0xE8	; 232
     fe2:	d0 e0       	ldi	r29, 0x00	; 0
     fe4:	7e ef       	ldi	r23, 0xFE	; 254
     fe6:	a1 ef       	ldi	r26, 0xF1	; 241
     fe8:	b0 e0       	ldi	r27, 0x00	; 0
     fea:	10 e1       	ldi	r17, 0x10	; 16
     fec:	88 81       	ld	r24, Y
     fee:	98 2f       	mov	r25, r24
     ff0:	95 70       	andi	r25, 0x05	; 5
     ff2:	e1 f3       	breq	.-8      	; 0xfec <__vector_11+0xda>
     ff4:	82 fd       	sbrc	r24, 2
     ff6:	00 c1       	rjmp	.+512    	; 0x11f8 <__vector_11+0x2e6>
     ff8:	64 2f       	mov	r22, r20
     ffa:	41 31       	cpi	r20, 0x11	; 17
     ffc:	08 f0       	brcs	.+2      	; 0x1000 <__vector_11+0xee>
     ffe:	61 2f       	mov	r22, r17
    1000:	66 23       	and	r22, r22
    1002:	09 f4       	brne	.+2      	; 0x1006 <__vector_11+0xf4>
    1004:	f6 c0       	rjmp	.+492    	; 0x11f2 <__vector_11+0x2e0>
    1006:	c9 01       	movw	r24, r18
    1008:	56 2f       	mov	r21, r22
    100a:	fc 01       	movw	r30, r24
    100c:	01 96       	adiw	r24, 0x01	; 1
    100e:	e4 91       	lpm	r30, Z
    1010:	ec 93       	st	X, r30
    1012:	51 50       	subi	r21, 0x01	; 1
    1014:	d1 f7       	brne	.-12     	; 0x100a <__vector_11+0xf8>
    1016:	86 2f       	mov	r24, r22
    1018:	81 50       	subi	r24, 0x01	; 1
    101a:	90 e0       	ldi	r25, 0x00	; 0
    101c:	01 96       	adiw	r24, 0x01	; 1
    101e:	28 0f       	add	r18, r24
    1020:	39 1f       	adc	r19, r25
    1022:	46 1b       	sub	r20, r22
    1024:	78 83       	st	Y, r23
    1026:	41 11       	cpse	r20, r1
    1028:	e1 cf       	rjmp	.-62     	; 0xfec <__vector_11+0xda>
    102a:	60 31       	cpi	r22, 0x10	; 16
    102c:	f9 f2       	breq	.-66     	; 0xfec <__vector_11+0xda>
    102e:	e4 c0       	rjmp	.+456    	; 0x11f8 <__vector_11+0x2e6>
    1030:	45 30       	cpi	r20, 0x05	; 5
    1032:	61 f4       	brne	.+24     	; 0x104c <__vector_11+0x13a>
    1034:	8e ef       	ldi	r24, 0xFE	; 254
    1036:	80 93 e8 00 	sts	0x00E8, r24
    103a:	e8 ee       	ldi	r30, 0xE8	; 232
    103c:	f0 e0       	ldi	r31, 0x00	; 0
    103e:	80 81       	ld	r24, Z
    1040:	80 ff       	sbrs	r24, 0
    1042:	fd cf       	rjmp	.-6      	; 0x103e <__vector_11+0x12c>
    1044:	20 68       	ori	r18, 0x80	; 128
    1046:	20 93 e3 00 	sts	0x00E3, r18
    104a:	d6 c0       	rjmp	.+428    	; 0x11f8 <__vector_11+0x2e6>
    104c:	49 30       	cpi	r20, 0x09	; 9
    104e:	a1 f5       	brne	.+104    	; 0x10b8 <__vector_11+0x1a6>
    1050:	71 11       	cpse	r23, r1
    1052:	5b c0       	rjmp	.+182    	; 0x110a <__vector_11+0x1f8>
    1054:	20 93 53 01 	sts	0x0153, r18
    1058:	10 92 54 01 	sts	0x0154, r1
    105c:	10 92 52 01 	sts	0x0152, r1
    1060:	8e ef       	ldi	r24, 0xFE	; 254
    1062:	80 93 e8 00 	sts	0x00E8, r24
    1066:	11 e0       	ldi	r17, 0x01	; 1
    1068:	81 e2       	ldi	r24, 0x21	; 33
    106a:	91 e0       	ldi	r25, 0x01	; 1
    106c:	c9 ee       	ldi	r28, 0xE9	; 233
    106e:	d0 e0       	ldi	r29, 0x00	; 0
    1070:	ab ee       	ldi	r26, 0xEB	; 235
    1072:	b0 e0       	ldi	r27, 0x00	; 0
    1074:	6c ee       	ldi	r22, 0xEC	; 236
    1076:	70 e0       	ldi	r23, 0x00	; 0
    1078:	4d ee       	ldi	r20, 0xED	; 237
    107a:	50 e0       	ldi	r21, 0x00	; 0
    107c:	18 83       	st	Y, r17
    107e:	9c 01       	movw	r18, r24
    1080:	2f 5f       	subi	r18, 0xFF	; 255
    1082:	3f 4f       	sbci	r19, 0xFF	; 255
    1084:	fc 01       	movw	r30, r24
    1086:	04 91       	lpm	r16, Z
    1088:	0c 93       	st	X, r16
    108a:	00 23       	and	r16, r16
    108c:	59 f0       	breq	.+22     	; 0x10a4 <__vector_11+0x192>
    108e:	f9 01       	movw	r30, r18
    1090:	24 91       	lpm	r18, Z
    1092:	fb 01       	movw	r30, r22
    1094:	20 83       	st	Z, r18
    1096:	fc 01       	movw	r30, r24
    1098:	32 96       	adiw	r30, 0x02	; 2
    109a:	03 96       	adiw	r24, 0x03	; 3
    109c:	24 91       	lpm	r18, Z
    109e:	fa 01       	movw	r30, r20
    10a0:	20 83       	st	Z, r18
    10a2:	01 c0       	rjmp	.+2      	; 0x10a6 <__vector_11+0x194>
    10a4:	c9 01       	movw	r24, r18
    10a6:	1f 5f       	subi	r17, 0xFF	; 255
    10a8:	15 30       	cpi	r17, 0x05	; 5
    10aa:	41 f7       	brne	.-48     	; 0x107c <__vector_11+0x16a>
    10ac:	ea ee       	ldi	r30, 0xEA	; 234
    10ae:	f0 e0       	ldi	r31, 0x00	; 0
    10b0:	8e e1       	ldi	r24, 0x1E	; 30
    10b2:	80 83       	st	Z, r24
    10b4:	10 82       	st	Z, r1
    10b6:	a0 c0       	rjmp	.+320    	; 0x11f8 <__vector_11+0x2e6>
    10b8:	48 30       	cpi	r20, 0x08	; 8
    10ba:	81 f4       	brne	.+32     	; 0x10dc <__vector_11+0x1ca>
    10bc:	70 38       	cpi	r23, 0x80	; 128
    10be:	09 f0       	breq	.+2      	; 0x10c2 <__vector_11+0x1b0>
    10c0:	3f c0       	rjmp	.+126    	; 0x1140 <__vector_11+0x22e>
    10c2:	e8 ee       	ldi	r30, 0xE8	; 232
    10c4:	f0 e0       	ldi	r31, 0x00	; 0
    10c6:	80 81       	ld	r24, Z
    10c8:	80 ff       	sbrs	r24, 0
    10ca:	fd cf       	rjmp	.-6      	; 0x10c6 <__vector_11+0x1b4>
    10cc:	80 91 53 01 	lds	r24, 0x0153
    10d0:	80 93 f1 00 	sts	0x00F1, r24
    10d4:	8e ef       	ldi	r24, 0xFE	; 254
    10d6:	80 93 e8 00 	sts	0x00E8, r24
    10da:	8e c0       	rjmp	.+284    	; 0x11f8 <__vector_11+0x2e6>
    10dc:	41 32       	cpi	r20, 0x21	; 33
    10de:	a9 f4       	brne	.+42     	; 0x110a <__vector_11+0x1f8>
    10e0:	71 3a       	cpi	r23, 0xA1	; 161
    10e2:	f1 f5       	brne	.+124    	; 0x1160 <__vector_11+0x24e>
    10e4:	e8 ee       	ldi	r30, 0xE8	; 232
    10e6:	f0 e0       	ldi	r31, 0x00	; 0
    10e8:	80 81       	ld	r24, Z
    10ea:	80 ff       	sbrs	r24, 0
    10ec:	fd cf       	rjmp	.-6      	; 0x10e8 <__vector_11+0x1d6>
    10ee:	e4 e0       	ldi	r30, 0x04	; 4
    10f0:	f1 e0       	ldi	r31, 0x01	; 1
    10f2:	a1 ef       	ldi	r26, 0xF1	; 241
    10f4:	b0 e0       	ldi	r27, 0x00	; 0
    10f6:	81 91       	ld	r24, Z+
    10f8:	8c 93       	st	X, r24
    10fa:	41 e0       	ldi	r20, 0x01	; 1
    10fc:	eb 30       	cpi	r30, 0x0B	; 11
    10fe:	f4 07       	cpc	r31, r20
    1100:	d1 f7       	brne	.-12     	; 0x10f6 <__vector_11+0x1e4>
    1102:	8e ef       	ldi	r24, 0xFE	; 254
    1104:	80 93 e8 00 	sts	0x00E8, r24
    1108:	77 c0       	rjmp	.+238    	; 0x11f8 <__vector_11+0x2e6>
    110a:	40 32       	cpi	r20, 0x20	; 32
    110c:	c9 f4       	brne	.+50     	; 0x1140 <__vector_11+0x22e>
    110e:	71 32       	cpi	r23, 0x21	; 33
    1110:	09 f0       	breq	.+2      	; 0x1114 <__vector_11+0x202>
    1112:	6b c0       	rjmp	.+214    	; 0x11ea <__vector_11+0x2d8>
    1114:	e8 ee       	ldi	r30, 0xE8	; 232
    1116:	f0 e0       	ldi	r31, 0x00	; 0
    1118:	80 81       	ld	r24, Z
    111a:	82 ff       	sbrs	r24, 2
    111c:	fd cf       	rjmp	.-6      	; 0x1118 <__vector_11+0x206>
    111e:	e4 e0       	ldi	r30, 0x04	; 4
    1120:	f1 e0       	ldi	r31, 0x01	; 1
    1122:	a1 ef       	ldi	r26, 0xF1	; 241
    1124:	b0 e0       	ldi	r27, 0x00	; 0
    1126:	8c 91       	ld	r24, X
    1128:	81 93       	st	Z+, r24
    112a:	51 e0       	ldi	r21, 0x01	; 1
    112c:	eb 30       	cpi	r30, 0x0B	; 11
    112e:	f5 07       	cpc	r31, r21
    1130:	d1 f7       	brne	.-12     	; 0x1126 <__vector_11+0x214>
    1132:	e8 ee       	ldi	r30, 0xE8	; 232
    1134:	f0 e0       	ldi	r31, 0x00	; 0
    1136:	8b ef       	ldi	r24, 0xFB	; 251
    1138:	80 83       	st	Z, r24
    113a:	8e ef       	ldi	r24, 0xFE	; 254
    113c:	80 83       	st	Z, r24
    113e:	5c c0       	rjmp	.+184    	; 0x11f8 <__vector_11+0x2e6>
    1140:	42 32       	cpi	r20, 0x22	; 34
    1142:	71 f4       	brne	.+28     	; 0x1160 <__vector_11+0x24e>
    1144:	71 32       	cpi	r23, 0x21	; 33
    1146:	09 f0       	breq	.+2      	; 0x114a <__vector_11+0x238>
    1148:	50 c0       	rjmp	.+160    	; 0x11ea <__vector_11+0x2d8>
    114a:	20 93 54 01 	sts	0x0154, r18
    114e:	e8 ee       	ldi	r30, 0xE8	; 232
    1150:	f0 e0       	ldi	r31, 0x00	; 0
    1152:	80 81       	ld	r24, Z
    1154:	80 ff       	sbrs	r24, 0
    1156:	fd cf       	rjmp	.-6      	; 0x1152 <__vector_11+0x240>
    1158:	8e ef       	ldi	r24, 0xFE	; 254
    115a:	80 93 e8 00 	sts	0x00E8, r24
    115e:	4c c0       	rjmp	.+152    	; 0x11f8 <__vector_11+0x2e6>
    1160:	41 11       	cpse	r20, r1
    1162:	1a c0       	rjmp	.+52     	; 0x1198 <__vector_11+0x286>
    1164:	e8 ee       	ldi	r30, 0xE8	; 232
    1166:	f0 e0       	ldi	r31, 0x00	; 0
    1168:	20 81       	ld	r18, Z
    116a:	20 ff       	sbrs	r18, 0
    116c:	fd cf       	rjmp	.-6      	; 0x1168 <__vector_11+0x256>
    116e:	72 38       	cpi	r23, 0x82	; 130
    1170:	51 f4       	brne	.+20     	; 0x1186 <__vector_11+0x274>
    1172:	e9 ee       	ldi	r30, 0xE9	; 233
    1174:	f0 e0       	ldi	r31, 0x00	; 0
    1176:	80 83       	st	Z, r24
    1178:	80 91 eb 00 	lds	r24, 0x00EB
    117c:	85 fb       	bst	r24, 5
    117e:	88 27       	eor	r24, r24
    1180:	80 f9       	bld	r24, 0
    1182:	10 82       	st	Z, r1
    1184:	01 c0       	rjmp	.+2      	; 0x1188 <__vector_11+0x276>
    1186:	80 e0       	ldi	r24, 0x00	; 0
    1188:	e1 ef       	ldi	r30, 0xF1	; 241
    118a:	f0 e0       	ldi	r31, 0x00	; 0
    118c:	80 83       	st	Z, r24
    118e:	10 82       	st	Z, r1
    1190:	8e ef       	ldi	r24, 0xFE	; 254
    1192:	80 93 e8 00 	sts	0x00E8, r24
    1196:	30 c0       	rjmp	.+96     	; 0x11f8 <__vector_11+0x2e6>
    1198:	41 30       	cpi	r20, 0x01	; 1
    119a:	11 f0       	breq	.+4      	; 0x11a0 <__vector_11+0x28e>
    119c:	43 30       	cpi	r20, 0x03	; 3
    119e:	29 f5       	brne	.+74     	; 0x11ea <__vector_11+0x2d8>
    11a0:	72 30       	cpi	r23, 0x02	; 2
    11a2:	19 f5       	brne	.+70     	; 0x11ea <__vector_11+0x2d8>
    11a4:	23 2b       	or	r18, r19
    11a6:	09 f5       	brne	.+66     	; 0x11ea <__vector_11+0x2d8>
    11a8:	8f 77       	andi	r24, 0x7F	; 127
    11aa:	99 27       	eor	r25, r25
    11ac:	38 2f       	mov	r19, r24
    11ae:	31 50       	subi	r19, 0x01	; 1
    11b0:	34 30       	cpi	r19, 0x04	; 4
    11b2:	d8 f4       	brcc	.+54     	; 0x11ea <__vector_11+0x2d8>
    11b4:	3e ef       	ldi	r19, 0xFE	; 254
    11b6:	30 93 e8 00 	sts	0x00E8, r19
    11ba:	80 93 e9 00 	sts	0x00E9, r24
    11be:	43 30       	cpi	r20, 0x03	; 3
    11c0:	21 f4       	brne	.+8      	; 0x11ca <__vector_11+0x2b8>
    11c2:	81 e2       	ldi	r24, 0x21	; 33
    11c4:	80 93 eb 00 	sts	0x00EB, r24
    11c8:	17 c0       	rjmp	.+46     	; 0x11f8 <__vector_11+0x2e6>
    11ca:	99 e1       	ldi	r25, 0x19	; 25
    11cc:	90 93 eb 00 	sts	0x00EB, r25
    11d0:	21 e0       	ldi	r18, 0x01	; 1
    11d2:	30 e0       	ldi	r19, 0x00	; 0
    11d4:	d9 01       	movw	r26, r18
    11d6:	02 c0       	rjmp	.+4      	; 0x11dc <__vector_11+0x2ca>
    11d8:	aa 0f       	add	r26, r26
    11da:	bb 1f       	adc	r27, r27
    11dc:	8a 95       	dec	r24
    11de:	e2 f7       	brpl	.-8      	; 0x11d8 <__vector_11+0x2c6>
    11e0:	ea ee       	ldi	r30, 0xEA	; 234
    11e2:	f0 e0       	ldi	r31, 0x00	; 0
    11e4:	a0 83       	st	Z, r26
    11e6:	10 82       	st	Z, r1
    11e8:	07 c0       	rjmp	.+14     	; 0x11f8 <__vector_11+0x2e6>
    11ea:	81 e2       	ldi	r24, 0x21	; 33
    11ec:	80 93 eb 00 	sts	0x00EB, r24
    11f0:	03 c0       	rjmp	.+6      	; 0x11f8 <__vector_11+0x2e6>
    11f2:	78 83       	st	Y, r23
    11f4:	41 11       	cpse	r20, r1
    11f6:	fa ce       	rjmp	.-524    	; 0xfec <__vector_11+0xda>
    11f8:	ff 91       	pop	r31
    11fa:	ef 91       	pop	r30
    11fc:	df 91       	pop	r29
    11fe:	cf 91       	pop	r28
    1200:	bf 91       	pop	r27
    1202:	af 91       	pop	r26
    1204:	9f 91       	pop	r25
    1206:	8f 91       	pop	r24
    1208:	7f 91       	pop	r23
    120a:	6f 91       	pop	r22
    120c:	5f 91       	pop	r21
    120e:	4f 91       	pop	r20
    1210:	3f 91       	pop	r19
    1212:	2f 91       	pop	r18
    1214:	1f 91       	pop	r17
    1216:	0f 91       	pop	r16
    1218:	0f 90       	pop	r0
    121a:	0f be       	out	0x3f, r0	; 63
    121c:	0f 90       	pop	r0
    121e:	1f 90       	pop	r1
    1220:	18 95       	reti

00001222 <m_usb_tx_int>:
    1222:	ef 92       	push	r14
    1224:	ff 92       	push	r15
    1226:	0f 93       	push	r16
    1228:	1f 93       	push	r17
    122a:	cf 93       	push	r28
    122c:	df 93       	push	r29
    122e:	cd b7       	in	r28, 0x3d	; 61
    1230:	de b7       	in	r29, 0x3e	; 62
    1232:	27 97       	sbiw	r28, 0x07	; 7
    1234:	0f b6       	in	r0, 0x3f	; 63
    1236:	f8 94       	cli
    1238:	de bf       	out	0x3e, r29	; 62
    123a:	0f be       	out	0x3f, r0	; 63
    123c:	cd bf       	out	0x3d, r28	; 61
    123e:	8e 01       	movw	r16, r28
    1240:	0f 5f       	subi	r16, 0xFF	; 255
    1242:	1f 4f       	sbci	r17, 0xFF	; 255
    1244:	27 e0       	ldi	r18, 0x07	; 7
    1246:	f8 01       	movw	r30, r16
    1248:	11 92       	st	Z+, r1
    124a:	2a 95       	dec	r18
    124c:	e9 f7       	brne	.-6      	; 0x1248 <m_usb_tx_int+0x26>
    124e:	4a e0       	ldi	r20, 0x0A	; 10
    1250:	50 e0       	ldi	r21, 0x00	; 0
    1252:	b8 01       	movw	r22, r16
    1254:	0e 94 8d 0e 	call	0x1d1a	; 0x1d1a <itoa>
    1258:	7e 01       	movw	r14, r28
    125a:	f8 e0       	ldi	r31, 0x08	; 8
    125c:	ef 0e       	add	r14, r31
    125e:	f1 1c       	adc	r15, r1
    1260:	f8 01       	movw	r30, r16
    1262:	81 91       	ld	r24, Z+
    1264:	8f 01       	movw	r16, r30
    1266:	81 11       	cpse	r24, r1
    1268:	0e 94 ef 06 	call	0xdde	; 0xdde <m_usb_tx_char>
    126c:	0e 15       	cp	r16, r14
    126e:	1f 05       	cpc	r17, r15
    1270:	b9 f7       	brne	.-18     	; 0x1260 <m_usb_tx_int+0x3e>
    1272:	27 96       	adiw	r28, 0x07	; 7
    1274:	0f b6       	in	r0, 0x3f	; 63
    1276:	f8 94       	cli
    1278:	de bf       	out	0x3e, r29	; 62
    127a:	0f be       	out	0x3f, r0	; 63
    127c:	cd bf       	out	0x3d, r28	; 61
    127e:	df 91       	pop	r29
    1280:	cf 91       	pop	r28
    1282:	1f 91       	pop	r17
    1284:	0f 91       	pop	r16
    1286:	ff 90       	pop	r15
    1288:	ef 90       	pop	r14
    128a:	08 95       	ret

0000128c <twi_wait>:
    128c:	20 e0       	ldi	r18, 0x00	; 0
    128e:	30 e0       	ldi	r19, 0x00	; 0
    1290:	ec eb       	ldi	r30, 0xBC	; 188
    1292:	f0 e0       	ldi	r31, 0x00	; 0
    1294:	80 81       	ld	r24, Z
    1296:	88 23       	and	r24, r24
    1298:	34 f0       	brlt	.+12     	; 0x12a6 <twi_wait+0x1a>
    129a:	2f 5f       	subi	r18, 0xFF	; 255
    129c:	3f 4f       	sbci	r19, 0xFF	; 255
    129e:	29 3e       	cpi	r18, 0xE9	; 233
    12a0:	83 e0       	ldi	r24, 0x03	; 3
    12a2:	38 07       	cpc	r19, r24
    12a4:	b9 f7       	brne	.-18     	; 0x1294 <twi_wait+0x8>
    12a6:	81 e0       	ldi	r24, 0x01	; 1
    12a8:	28 3e       	cpi	r18, 0xE8	; 232
    12aa:	33 40       	sbci	r19, 0x03	; 3
    12ac:	09 f4       	brne	.+2      	; 0x12b0 <twi_wait+0x24>
    12ae:	80 e0       	ldi	r24, 0x00	; 0
    12b0:	08 95       	ret

000012b2 <send_byte>:
    12b2:	80 93 bb 00 	sts	0x00BB, r24
    12b6:	84 e8       	ldi	r24, 0x84	; 132
    12b8:	80 93 bc 00 	sts	0x00BC, r24
    12bc:	0e 94 46 09 	call	0x128c	; 0x128c <twi_wait>
    12c0:	88 23       	and	r24, r24
    12c2:	21 f0       	breq	.+8      	; 0x12cc <send_byte+0x1a>
    12c4:	80 91 b9 00 	lds	r24, 0x00B9
    12c8:	88 7f       	andi	r24, 0xF8	; 248
    12ca:	08 95       	ret
    12cc:	80 e0       	ldi	r24, 0x00	; 0
    12ce:	08 95       	ret

000012d0 <start_read>:
    12d0:	cf 93       	push	r28
    12d2:	c8 2f       	mov	r28, r24
    12d4:	94 ea       	ldi	r25, 0xA4	; 164
    12d6:	90 93 bc 00 	sts	0x00BC, r25
    12da:	0e 94 46 09 	call	0x128c	; 0x128c <twi_wait>
    12de:	88 23       	and	r24, r24
    12e0:	61 f0       	breq	.+24     	; 0x12fa <start_read+0x2a>
    12e2:	8c 2f       	mov	r24, r28
    12e4:	88 0f       	add	r24, r24
    12e6:	8f 5f       	subi	r24, 0xFF	; 255
    12e8:	0e 94 59 09 	call	0x12b2	; 0x12b2 <send_byte>
    12ec:	88 34       	cpi	r24, 0x48	; 72
    12ee:	39 f4       	brne	.+14     	; 0x12fe <start_read+0x2e>
    12f0:	84 e9       	ldi	r24, 0x94	; 148
    12f2:	80 93 bc 00 	sts	0x00BC, r24
    12f6:	80 e0       	ldi	r24, 0x00	; 0
    12f8:	03 c0       	rjmp	.+6      	; 0x1300 <start_read+0x30>
    12fa:	80 e0       	ldi	r24, 0x00	; 0
    12fc:	01 c0       	rjmp	.+2      	; 0x1300 <start_read+0x30>
    12fe:	81 e0       	ldi	r24, 0x01	; 1
    1300:	cf 91       	pop	r28
    1302:	08 95       	ret

00001304 <start_write>:
    1304:	cf 93       	push	r28
    1306:	c8 2f       	mov	r28, r24
    1308:	94 ea       	ldi	r25, 0xA4	; 164
    130a:	90 93 bc 00 	sts	0x00BC, r25
    130e:	0e 94 46 09 	call	0x128c	; 0x128c <twi_wait>
    1312:	88 23       	and	r24, r24
    1314:	59 f0       	breq	.+22     	; 0x132c <start_write+0x28>
    1316:	8c 2f       	mov	r24, r28
    1318:	88 0f       	add	r24, r24
    131a:	0e 94 59 09 	call	0x12b2	; 0x12b2 <send_byte>
    131e:	80 32       	cpi	r24, 0x20	; 32
    1320:	39 f4       	brne	.+14     	; 0x1330 <start_write+0x2c>
    1322:	84 e9       	ldi	r24, 0x94	; 148
    1324:	80 93 bc 00 	sts	0x00BC, r24
    1328:	80 e0       	ldi	r24, 0x00	; 0
    132a:	03 c0       	rjmp	.+6      	; 0x1332 <start_write+0x2e>
    132c:	80 e0       	ldi	r24, 0x00	; 0
    132e:	01 c0       	rjmp	.+2      	; 0x1332 <start_write+0x2e>
    1330:	81 e0       	ldi	r24, 0x01	; 1
    1332:	cf 91       	pop	r28
    1334:	08 95       	ret

00001336 <end>:
    1336:	84 e9       	ldi	r24, 0x94	; 148
    1338:	80 93 bc 00 	sts	0x00BC, r24
    133c:	08 95       	ret

0000133e <m_wii_read>:
    133e:	ef 92       	push	r14
    1340:	ff 92       	push	r15
    1342:	0f 93       	push	r16
    1344:	1f 93       	push	r17
    1346:	cf 93       	push	r28
    1348:	df 93       	push	r29
    134a:	cd b7       	in	r28, 0x3d	; 61
    134c:	de b7       	in	r29, 0x3e	; 62
    134e:	60 97       	sbiw	r28, 0x10	; 16
    1350:	0f b6       	in	r0, 0x3f	; 63
    1352:	f8 94       	cli
    1354:	de bf       	out	0x3e, r29	; 62
    1356:	0f be       	out	0x3f, r0	; 63
    1358:	cd bf       	out	0x3d, r28	; 61
    135a:	e8 2e       	mov	r14, r24
    135c:	f9 2e       	mov	r15, r25
    135e:	fe 01       	movw	r30, r28
    1360:	31 96       	adiw	r30, 0x01	; 1
    1362:	80 e1       	ldi	r24, 0x10	; 16
    1364:	df 01       	movw	r26, r30
    1366:	1d 92       	st	X+, r1
    1368:	8a 95       	dec	r24
    136a:	e9 f7       	brne	.-6      	; 0x1366 <m_wii_read+0x28>
    136c:	88 e5       	ldi	r24, 0x58	; 88
    136e:	0e 94 82 09 	call	0x1304	; 0x1304 <start_write>
    1372:	88 23       	and	r24, r24
    1374:	09 f4       	brne	.+2      	; 0x1378 <m_wii_read+0x3a>
    1376:	66 c0       	rjmp	.+204    	; 0x1444 <m_wii_read+0x106>
    1378:	86 e3       	ldi	r24, 0x36	; 54
    137a:	0e 94 59 09 	call	0x12b2	; 0x12b2 <send_byte>
    137e:	88 23       	and	r24, r24
    1380:	09 f4       	brne	.+2      	; 0x1384 <m_wii_read+0x46>
    1382:	62 c0       	rjmp	.+196    	; 0x1448 <m_wii_read+0x10a>
    1384:	0e 94 9b 09 	call	0x1336	; 0x1336 <end>
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

    1388:	b8 e0       	ldi	r27, 0x08	; 8
    138a:	ba 95       	dec	r27
    138c:	f1 f7       	brne	.-4      	; 0x138a <m_wii_read+0x4c>
    138e:	00 00       	nop
    1390:	88 e5       	ldi	r24, 0x58	; 88
    1392:	0e 94 68 09 	call	0x12d0	; 0x12d0 <start_read>
    1396:	88 23       	and	r24, r24
    1398:	09 f4       	brne	.+2      	; 0x139c <m_wii_read+0x5e>
    139a:	58 c0       	rjmp	.+176    	; 0x144c <m_wii_read+0x10e>
    139c:	ae 01       	movw	r20, r28
    139e:	4f 5f       	subi	r20, 0xFF	; 255
    13a0:	5f 4f       	sbci	r21, 0xFF	; 255
    13a2:	8e 01       	movw	r16, r28
    13a4:	00 5f       	subi	r16, 0xF0	; 240
    13a6:	1f 4f       	sbci	r17, 0xFF	; 255
    13a8:	ec eb       	ldi	r30, 0xBC	; 188
    13aa:	f0 e0       	ldi	r31, 0x00	; 0
    13ac:	94 ec       	ldi	r25, 0xC4	; 196
    13ae:	2b eb       	ldi	r18, 0xBB	; 187
    13b0:	30 e0       	ldi	r19, 0x00	; 0
    13b2:	90 83       	st	Z, r25
    13b4:	80 81       	ld	r24, Z
    13b6:	88 23       	and	r24, r24
    13b8:	ec f7       	brge	.-6      	; 0x13b4 <m_wii_read+0x76>
    13ba:	d9 01       	movw	r26, r18
    13bc:	8c 91       	ld	r24, X
    13be:	da 01       	movw	r26, r20
    13c0:	8d 93       	st	X+, r24
    13c2:	ad 01       	movw	r20, r26
    13c4:	a0 17       	cp	r26, r16
    13c6:	b1 07       	cpc	r27, r17
    13c8:	a1 f7       	brne	.-24     	; 0x13b2 <m_wii_read+0x74>
    13ca:	84 e8       	ldi	r24, 0x84	; 132
    13cc:	80 93 bc 00 	sts	0x00BC, r24
    13d0:	ec eb       	ldi	r30, 0xBC	; 188
    13d2:	f0 e0       	ldi	r31, 0x00	; 0
    13d4:	80 81       	ld	r24, Z
    13d6:	88 23       	and	r24, r24
    13d8:	ec f7       	brge	.-6      	; 0x13d4 <m_wii_read+0x96>
    13da:	80 91 bb 00 	lds	r24, 0x00BB
    13de:	88 8b       	std	Y+16, r24	; 0x10
    13e0:	0e 94 9b 09 	call	0x1336	; 0x1336 <end>
    13e4:	de 01       	movw	r26, r28
    13e6:	14 96       	adiw	r26, 0x04	; 4
    13e8:	6e 2d       	mov	r22, r14
    13ea:	7f 2d       	mov	r23, r15
    13ec:	4c 91       	ld	r20, X
    13ee:	24 2f       	mov	r18, r20
    13f0:	20 73       	andi	r18, 0x30	; 48
    13f2:	cd 01       	movw	r24, r26
    13f4:	02 97       	sbiw	r24, 0x02	; 2
    13f6:	fc 01       	movw	r30, r24
    13f8:	80 81       	ld	r24, Z
    13fa:	90 e0       	ldi	r25, 0x00	; 0
    13fc:	f0 e1       	ldi	r31, 0x10	; 16
    13fe:	2f 9f       	mul	r18, r31
    1400:	80 0d       	add	r24, r0
    1402:	91 1d       	adc	r25, r1
    1404:	11 24       	eor	r1, r1
    1406:	fb 01       	movw	r30, r22
    1408:	91 83       	std	Z+1, r25	; 0x01
    140a:	80 83       	st	Z, r24
    140c:	84 2f       	mov	r24, r20
    140e:	80 7c       	andi	r24, 0xC0	; 192
    1410:	90 e0       	ldi	r25, 0x00	; 0
    1412:	88 0f       	add	r24, r24
    1414:	99 1f       	adc	r25, r25
    1416:	88 0f       	add	r24, r24
    1418:	99 1f       	adc	r25, r25
    141a:	9d 01       	movw	r18, r26
    141c:	21 50       	subi	r18, 0x01	; 1
    141e:	31 09       	sbc	r19, r1
    1420:	f9 01       	movw	r30, r18
    1422:	20 81       	ld	r18, Z
    1424:	82 0f       	add	r24, r18
    1426:	91 1d       	adc	r25, r1
    1428:	fb 01       	movw	r30, r22
    142a:	93 83       	std	Z+3, r25	; 0x03
    142c:	82 83       	std	Z+2, r24	; 0x02
    142e:	4f 70       	andi	r20, 0x0F	; 15
    1430:	44 83       	std	Z+4, r20	; 0x04
    1432:	15 82       	std	Z+5, r1	; 0x05
    1434:	13 96       	adiw	r26, 0x03	; 3
    1436:	6a 5f       	subi	r22, 0xFA	; 250
    1438:	7f 4f       	sbci	r23, 0xFF	; 255
    143a:	0a 17       	cp	r16, r26
    143c:	1b 07       	cpc	r17, r27
    143e:	b1 f6       	brne	.-84     	; 0x13ec <m_wii_read+0xae>
    1440:	81 e0       	ldi	r24, 0x01	; 1
    1442:	05 c0       	rjmp	.+10     	; 0x144e <m_wii_read+0x110>
    1444:	80 e0       	ldi	r24, 0x00	; 0
    1446:	03 c0       	rjmp	.+6      	; 0x144e <m_wii_read+0x110>
    1448:	80 e0       	ldi	r24, 0x00	; 0
    144a:	01 c0       	rjmp	.+2      	; 0x144e <m_wii_read+0x110>
    144c:	80 e0       	ldi	r24, 0x00	; 0
    144e:	60 96       	adiw	r28, 0x10	; 16
    1450:	0f b6       	in	r0, 0x3f	; 63
    1452:	f8 94       	cli
    1454:	de bf       	out	0x3e, r29	; 62
    1456:	0f be       	out	0x3f, r0	; 63
    1458:	cd bf       	out	0x3d, r28	; 61
    145a:	df 91       	pop	r29
    145c:	cf 91       	pop	r28
    145e:	1f 91       	pop	r17
    1460:	0f 91       	pop	r16
    1462:	ff 90       	pop	r15
    1464:	ef 90       	pop	r14
    1466:	08 95       	ret

00001468 <m_wii_open>:
    1468:	0e 94 3b 01 	call	0x276	; 0x276 <m_bus_init>
    146c:	88 e5       	ldi	r24, 0x58	; 88
    146e:	0e 94 82 09 	call	0x1304	; 0x1304 <start_write>
    1472:	88 23       	and	r24, r24
    1474:	09 f4       	brne	.+2      	; 0x1478 <m_wii_open+0x10>
    1476:	c7 c0       	rjmp	.+398    	; 0x1606 <m_wii_open+0x19e>
    1478:	80 e3       	ldi	r24, 0x30	; 48
    147a:	0e 94 59 09 	call	0x12b2	; 0x12b2 <send_byte>
    147e:	88 23       	and	r24, r24
    1480:	09 f4       	brne	.+2      	; 0x1484 <m_wii_open+0x1c>
    1482:	c3 c0       	rjmp	.+390    	; 0x160a <m_wii_open+0x1a2>
    1484:	81 e0       	ldi	r24, 0x01	; 1
    1486:	0e 94 59 09 	call	0x12b2	; 0x12b2 <send_byte>
    148a:	88 23       	and	r24, r24
    148c:	09 f4       	brne	.+2      	; 0x1490 <m_wii_open+0x28>
    148e:	bf c0       	rjmp	.+382    	; 0x160e <m_wii_open+0x1a6>
    1490:	0e 94 9b 09 	call	0x1336	; 0x1336 <end>
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

    1494:	83 ec       	ldi	r24, 0xC3	; 195
    1496:	99 e0       	ldi	r25, 0x09	; 9
    1498:	01 97       	sbiw	r24, 0x01	; 1
    149a:	f1 f7       	brne	.-4      	; 0x1498 <m_wii_open+0x30>
    149c:	00 c0       	rjmp	.+0      	; 0x149e <m_wii_open+0x36>
    149e:	00 00       	nop
    14a0:	88 e5       	ldi	r24, 0x58	; 88
    14a2:	0e 94 82 09 	call	0x1304	; 0x1304 <start_write>
    14a6:	88 23       	and	r24, r24
    14a8:	09 f4       	brne	.+2      	; 0x14ac <m_wii_open+0x44>
    14aa:	b3 c0       	rjmp	.+358    	; 0x1612 <m_wii_open+0x1aa>
    14ac:	80 e0       	ldi	r24, 0x00	; 0
    14ae:	0e 94 59 09 	call	0x12b2	; 0x12b2 <send_byte>
    14b2:	88 23       	and	r24, r24
    14b4:	09 f4       	brne	.+2      	; 0x14b8 <m_wii_open+0x50>
    14b6:	af c0       	rjmp	.+350    	; 0x1616 <m_wii_open+0x1ae>
    14b8:	80 e0       	ldi	r24, 0x00	; 0
    14ba:	0e 94 59 09 	call	0x12b2	; 0x12b2 <send_byte>
    14be:	88 23       	and	r24, r24
    14c0:	09 f4       	brne	.+2      	; 0x14c4 <m_wii_open+0x5c>
    14c2:	ab c0       	rjmp	.+342    	; 0x161a <m_wii_open+0x1b2>
    14c4:	80 e0       	ldi	r24, 0x00	; 0
    14c6:	0e 94 59 09 	call	0x12b2	; 0x12b2 <send_byte>
    14ca:	88 23       	and	r24, r24
    14cc:	09 f4       	brne	.+2      	; 0x14d0 <m_wii_open+0x68>
    14ce:	a7 c0       	rjmp	.+334    	; 0x161e <m_wii_open+0x1b6>
    14d0:	80 e0       	ldi	r24, 0x00	; 0
    14d2:	0e 94 59 09 	call	0x12b2	; 0x12b2 <send_byte>
    14d6:	88 23       	and	r24, r24
    14d8:	09 f4       	brne	.+2      	; 0x14dc <m_wii_open+0x74>
    14da:	a3 c0       	rjmp	.+326    	; 0x1622 <m_wii_open+0x1ba>
    14dc:	80 e0       	ldi	r24, 0x00	; 0
    14de:	0e 94 59 09 	call	0x12b2	; 0x12b2 <send_byte>
    14e2:	88 23       	and	r24, r24
    14e4:	09 f4       	brne	.+2      	; 0x14e8 <m_wii_open+0x80>
    14e6:	9f c0       	rjmp	.+318    	; 0x1626 <m_wii_open+0x1be>
    14e8:	80 e0       	ldi	r24, 0x00	; 0
    14ea:	0e 94 59 09 	call	0x12b2	; 0x12b2 <send_byte>
    14ee:	88 23       	and	r24, r24
    14f0:	09 f4       	brne	.+2      	; 0x14f4 <m_wii_open+0x8c>
    14f2:	9b c0       	rjmp	.+310    	; 0x162a <m_wii_open+0x1c2>
    14f4:	80 e0       	ldi	r24, 0x00	; 0
    14f6:	0e 94 59 09 	call	0x12b2	; 0x12b2 <send_byte>
    14fa:	88 23       	and	r24, r24
    14fc:	09 f4       	brne	.+2      	; 0x1500 <m_wii_open+0x98>
    14fe:	97 c0       	rjmp	.+302    	; 0x162e <m_wii_open+0x1c6>
    1500:	80 e9       	ldi	r24, 0x90	; 144
    1502:	0e 94 59 09 	call	0x12b2	; 0x12b2 <send_byte>
    1506:	88 23       	and	r24, r24
    1508:	09 f4       	brne	.+2      	; 0x150c <m_wii_open+0xa4>
    150a:	93 c0       	rjmp	.+294    	; 0x1632 <m_wii_open+0x1ca>
    150c:	0e 94 9b 09 	call	0x1336	; 0x1336 <end>
    1510:	83 ec       	ldi	r24, 0xC3	; 195
    1512:	99 e0       	ldi	r25, 0x09	; 9
    1514:	01 97       	sbiw	r24, 0x01	; 1
    1516:	f1 f7       	brne	.-4      	; 0x1514 <m_wii_open+0xac>
    1518:	00 c0       	rjmp	.+0      	; 0x151a <m_wii_open+0xb2>
    151a:	00 00       	nop
    151c:	88 e5       	ldi	r24, 0x58	; 88
    151e:	0e 94 82 09 	call	0x1304	; 0x1304 <start_write>
    1522:	88 23       	and	r24, r24
    1524:	09 f4       	brne	.+2      	; 0x1528 <m_wii_open+0xc0>
    1526:	87 c0       	rjmp	.+270    	; 0x1636 <m_wii_open+0x1ce>
    1528:	87 e0       	ldi	r24, 0x07	; 7
    152a:	0e 94 59 09 	call	0x12b2	; 0x12b2 <send_byte>
    152e:	88 23       	and	r24, r24
    1530:	09 f4       	brne	.+2      	; 0x1534 <m_wii_open+0xcc>
    1532:	83 c0       	rjmp	.+262    	; 0x163a <m_wii_open+0x1d2>
    1534:	80 e0       	ldi	r24, 0x00	; 0
    1536:	0e 94 59 09 	call	0x12b2	; 0x12b2 <send_byte>
    153a:	88 23       	and	r24, r24
    153c:	09 f4       	brne	.+2      	; 0x1540 <m_wii_open+0xd8>
    153e:	7f c0       	rjmp	.+254    	; 0x163e <m_wii_open+0x1d6>
    1540:	81 e4       	ldi	r24, 0x41	; 65
    1542:	0e 94 59 09 	call	0x12b2	; 0x12b2 <send_byte>
    1546:	88 23       	and	r24, r24
    1548:	09 f4       	brne	.+2      	; 0x154c <m_wii_open+0xe4>
    154a:	7b c0       	rjmp	.+246    	; 0x1642 <m_wii_open+0x1da>
    154c:	0e 94 9b 09 	call	0x1336	; 0x1336 <end>
    1550:	83 ec       	ldi	r24, 0xC3	; 195
    1552:	99 e0       	ldi	r25, 0x09	; 9
    1554:	01 97       	sbiw	r24, 0x01	; 1
    1556:	f1 f7       	brne	.-4      	; 0x1554 <m_wii_open+0xec>
    1558:	00 c0       	rjmp	.+0      	; 0x155a <m_wii_open+0xf2>
    155a:	00 00       	nop
    155c:	88 e5       	ldi	r24, 0x58	; 88
    155e:	0e 94 82 09 	call	0x1304	; 0x1304 <start_write>
    1562:	88 23       	and	r24, r24
    1564:	09 f4       	brne	.+2      	; 0x1568 <m_wii_open+0x100>
    1566:	6f c0       	rjmp	.+222    	; 0x1646 <m_wii_open+0x1de>
    1568:	8a e1       	ldi	r24, 0x1A	; 26
    156a:	0e 94 59 09 	call	0x12b2	; 0x12b2 <send_byte>
    156e:	88 23       	and	r24, r24
    1570:	09 f4       	brne	.+2      	; 0x1574 <m_wii_open+0x10c>
    1572:	6b c0       	rjmp	.+214    	; 0x164a <m_wii_open+0x1e2>
    1574:	80 e4       	ldi	r24, 0x40	; 64
    1576:	0e 94 59 09 	call	0x12b2	; 0x12b2 <send_byte>
    157a:	88 23       	and	r24, r24
    157c:	09 f4       	brne	.+2      	; 0x1580 <m_wii_open+0x118>
    157e:	67 c0       	rjmp	.+206    	; 0x164e <m_wii_open+0x1e6>
    1580:	80 e0       	ldi	r24, 0x00	; 0
    1582:	0e 94 59 09 	call	0x12b2	; 0x12b2 <send_byte>
    1586:	88 23       	and	r24, r24
    1588:	09 f4       	brne	.+2      	; 0x158c <m_wii_open+0x124>
    158a:	63 c0       	rjmp	.+198    	; 0x1652 <m_wii_open+0x1ea>
    158c:	0e 94 9b 09 	call	0x1336	; 0x1336 <end>
    1590:	83 ec       	ldi	r24, 0xC3	; 195
    1592:	99 e0       	ldi	r25, 0x09	; 9
    1594:	01 97       	sbiw	r24, 0x01	; 1
    1596:	f1 f7       	brne	.-4      	; 0x1594 <m_wii_open+0x12c>
    1598:	00 c0       	rjmp	.+0      	; 0x159a <m_wii_open+0x132>
    159a:	00 00       	nop
    159c:	88 e5       	ldi	r24, 0x58	; 88
    159e:	0e 94 82 09 	call	0x1304	; 0x1304 <start_write>
    15a2:	88 23       	and	r24, r24
    15a4:	09 f4       	brne	.+2      	; 0x15a8 <m_wii_open+0x140>
    15a6:	57 c0       	rjmp	.+174    	; 0x1656 <m_wii_open+0x1ee>
    15a8:	83 e3       	ldi	r24, 0x33	; 51
    15aa:	0e 94 59 09 	call	0x12b2	; 0x12b2 <send_byte>
    15ae:	88 23       	and	r24, r24
    15b0:	09 f4       	brne	.+2      	; 0x15b4 <m_wii_open+0x14c>
    15b2:	53 c0       	rjmp	.+166    	; 0x165a <m_wii_open+0x1f2>
    15b4:	83 e0       	ldi	r24, 0x03	; 3
    15b6:	0e 94 59 09 	call	0x12b2	; 0x12b2 <send_byte>
    15ba:	88 23       	and	r24, r24
    15bc:	09 f4       	brne	.+2      	; 0x15c0 <m_wii_open+0x158>
    15be:	4f c0       	rjmp	.+158    	; 0x165e <m_wii_open+0x1f6>
    15c0:	0e 94 9b 09 	call	0x1336	; 0x1336 <end>
    15c4:	83 ec       	ldi	r24, 0xC3	; 195
    15c6:	99 e0       	ldi	r25, 0x09	; 9
    15c8:	01 97       	sbiw	r24, 0x01	; 1
    15ca:	f1 f7       	brne	.-4      	; 0x15c8 <m_wii_open+0x160>
    15cc:	00 c0       	rjmp	.+0      	; 0x15ce <m_wii_open+0x166>
    15ce:	00 00       	nop
    15d0:	88 e5       	ldi	r24, 0x58	; 88
    15d2:	0e 94 82 09 	call	0x1304	; 0x1304 <start_write>
    15d6:	88 23       	and	r24, r24
    15d8:	09 f4       	brne	.+2      	; 0x15dc <m_wii_open+0x174>
    15da:	43 c0       	rjmp	.+134    	; 0x1662 <m_wii_open+0x1fa>
    15dc:	80 e3       	ldi	r24, 0x30	; 48
    15de:	0e 94 59 09 	call	0x12b2	; 0x12b2 <send_byte>
    15e2:	88 23       	and	r24, r24
    15e4:	09 f4       	brne	.+2      	; 0x15e8 <m_wii_open+0x180>
    15e6:	3f c0       	rjmp	.+126    	; 0x1666 <m_wii_open+0x1fe>
    15e8:	88 e0       	ldi	r24, 0x08	; 8
    15ea:	0e 94 59 09 	call	0x12b2	; 0x12b2 <send_byte>
    15ee:	88 23       	and	r24, r24
    15f0:	e1 f1       	breq	.+120    	; 0x166a <m_wii_open+0x202>
    15f2:	0e 94 9b 09 	call	0x1336	; 0x1336 <end>
    15f6:	83 ec       	ldi	r24, 0xC3	; 195
    15f8:	99 e0       	ldi	r25, 0x09	; 9
    15fa:	01 97       	sbiw	r24, 0x01	; 1
    15fc:	f1 f7       	brne	.-4      	; 0x15fa <m_wii_open+0x192>
    15fe:	00 c0       	rjmp	.+0      	; 0x1600 <m_wii_open+0x198>
    1600:	00 00       	nop
    1602:	81 e0       	ldi	r24, 0x01	; 1
    1604:	08 95       	ret
    1606:	80 e0       	ldi	r24, 0x00	; 0
    1608:	08 95       	ret
    160a:	80 e0       	ldi	r24, 0x00	; 0
    160c:	08 95       	ret
    160e:	80 e0       	ldi	r24, 0x00	; 0
    1610:	08 95       	ret
    1612:	80 e0       	ldi	r24, 0x00	; 0
    1614:	08 95       	ret
    1616:	80 e0       	ldi	r24, 0x00	; 0
    1618:	08 95       	ret
    161a:	80 e0       	ldi	r24, 0x00	; 0
    161c:	08 95       	ret
    161e:	80 e0       	ldi	r24, 0x00	; 0
    1620:	08 95       	ret
    1622:	80 e0       	ldi	r24, 0x00	; 0
    1624:	08 95       	ret
    1626:	80 e0       	ldi	r24, 0x00	; 0
    1628:	08 95       	ret
    162a:	80 e0       	ldi	r24, 0x00	; 0
    162c:	08 95       	ret
    162e:	80 e0       	ldi	r24, 0x00	; 0
    1630:	08 95       	ret
    1632:	80 e0       	ldi	r24, 0x00	; 0
    1634:	08 95       	ret
    1636:	80 e0       	ldi	r24, 0x00	; 0
    1638:	08 95       	ret
    163a:	80 e0       	ldi	r24, 0x00	; 0
    163c:	08 95       	ret
    163e:	80 e0       	ldi	r24, 0x00	; 0
    1640:	08 95       	ret
    1642:	80 e0       	ldi	r24, 0x00	; 0
    1644:	08 95       	ret
    1646:	80 e0       	ldi	r24, 0x00	; 0
    1648:	08 95       	ret
    164a:	80 e0       	ldi	r24, 0x00	; 0
    164c:	08 95       	ret
    164e:	80 e0       	ldi	r24, 0x00	; 0
    1650:	08 95       	ret
    1652:	80 e0       	ldi	r24, 0x00	; 0
    1654:	08 95       	ret
    1656:	80 e0       	ldi	r24, 0x00	; 0
    1658:	08 95       	ret
    165a:	80 e0       	ldi	r24, 0x00	; 0
    165c:	08 95       	ret
    165e:	80 e0       	ldi	r24, 0x00	; 0
    1660:	08 95       	ret
    1662:	80 e0       	ldi	r24, 0x00	; 0
    1664:	08 95       	ret
    1666:	80 e0       	ldi	r24, 0x00	; 0
    1668:	08 95       	ret
    166a:	80 e0       	ldi	r24, 0x00	; 0
    166c:	08 95       	ret

0000166e <__subsf3>:
    166e:	50 58       	subi	r21, 0x80	; 128

00001670 <__addsf3>:
    1670:	bb 27       	eor	r27, r27
    1672:	aa 27       	eor	r26, r26
    1674:	0e d0       	rcall	.+28     	; 0x1692 <__addsf3x>
    1676:	27 c2       	rjmp	.+1102   	; 0x1ac6 <__fp_round>
    1678:	f0 d1       	rcall	.+992    	; 0x1a5a <__fp_pscA>
    167a:	30 f0       	brcs	.+12     	; 0x1688 <__addsf3+0x18>
    167c:	f5 d1       	rcall	.+1002   	; 0x1a68 <__fp_pscB>
    167e:	20 f0       	brcs	.+8      	; 0x1688 <__addsf3+0x18>
    1680:	31 f4       	brne	.+12     	; 0x168e <__addsf3+0x1e>
    1682:	9f 3f       	cpi	r25, 0xFF	; 255
    1684:	11 f4       	brne	.+4      	; 0x168a <__addsf3+0x1a>
    1686:	1e f4       	brtc	.+6      	; 0x168e <__addsf3+0x1e>
    1688:	c0 c1       	rjmp	.+896    	; 0x1a0a <__fp_nan>
    168a:	0e f4       	brtc	.+2      	; 0x168e <__addsf3+0x1e>
    168c:	e0 95       	com	r30
    168e:	e7 fb       	bst	r30, 7
    1690:	b6 c1       	rjmp	.+876    	; 0x19fe <__fp_inf>

00001692 <__addsf3x>:
    1692:	e9 2f       	mov	r30, r25
    1694:	3a d2       	rcall	.+1140   	; 0x1b0a <__fp_split3>
    1696:	80 f3       	brcs	.-32     	; 0x1678 <__addsf3+0x8>
    1698:	ba 17       	cp	r27, r26
    169a:	62 07       	cpc	r22, r18
    169c:	73 07       	cpc	r23, r19
    169e:	84 07       	cpc	r24, r20
    16a0:	95 07       	cpc	r25, r21
    16a2:	18 f0       	brcs	.+6      	; 0x16aa <__addsf3x+0x18>
    16a4:	71 f4       	brne	.+28     	; 0x16c2 <__addsf3x+0x30>
    16a6:	9e f5       	brtc	.+102    	; 0x170e <__addsf3x+0x7c>
    16a8:	52 c2       	rjmp	.+1188   	; 0x1b4e <__fp_zero>
    16aa:	0e f4       	brtc	.+2      	; 0x16ae <__addsf3x+0x1c>
    16ac:	e0 95       	com	r30
    16ae:	0b 2e       	mov	r0, r27
    16b0:	ba 2f       	mov	r27, r26
    16b2:	a0 2d       	mov	r26, r0
    16b4:	0b 01       	movw	r0, r22
    16b6:	b9 01       	movw	r22, r18
    16b8:	90 01       	movw	r18, r0
    16ba:	0c 01       	movw	r0, r24
    16bc:	ca 01       	movw	r24, r20
    16be:	a0 01       	movw	r20, r0
    16c0:	11 24       	eor	r1, r1
    16c2:	ff 27       	eor	r31, r31
    16c4:	59 1b       	sub	r21, r25
    16c6:	99 f0       	breq	.+38     	; 0x16ee <__addsf3x+0x5c>
    16c8:	59 3f       	cpi	r21, 0xF9	; 249
    16ca:	50 f4       	brcc	.+20     	; 0x16e0 <__addsf3x+0x4e>
    16cc:	50 3e       	cpi	r21, 0xE0	; 224
    16ce:	68 f1       	brcs	.+90     	; 0x172a <__addsf3x+0x98>
    16d0:	1a 16       	cp	r1, r26
    16d2:	f0 40       	sbci	r31, 0x00	; 0
    16d4:	a2 2f       	mov	r26, r18
    16d6:	23 2f       	mov	r18, r19
    16d8:	34 2f       	mov	r19, r20
    16da:	44 27       	eor	r20, r20
    16dc:	58 5f       	subi	r21, 0xF8	; 248
    16de:	f3 cf       	rjmp	.-26     	; 0x16c6 <__addsf3x+0x34>
    16e0:	46 95       	lsr	r20
    16e2:	37 95       	ror	r19
    16e4:	27 95       	ror	r18
    16e6:	a7 95       	ror	r26
    16e8:	f0 40       	sbci	r31, 0x00	; 0
    16ea:	53 95       	inc	r21
    16ec:	c9 f7       	brne	.-14     	; 0x16e0 <__addsf3x+0x4e>
    16ee:	7e f4       	brtc	.+30     	; 0x170e <__addsf3x+0x7c>
    16f0:	1f 16       	cp	r1, r31
    16f2:	ba 0b       	sbc	r27, r26
    16f4:	62 0b       	sbc	r22, r18
    16f6:	73 0b       	sbc	r23, r19
    16f8:	84 0b       	sbc	r24, r20
    16fa:	ba f0       	brmi	.+46     	; 0x172a <__addsf3x+0x98>
    16fc:	91 50       	subi	r25, 0x01	; 1
    16fe:	a1 f0       	breq	.+40     	; 0x1728 <__addsf3x+0x96>
    1700:	ff 0f       	add	r31, r31
    1702:	bb 1f       	adc	r27, r27
    1704:	66 1f       	adc	r22, r22
    1706:	77 1f       	adc	r23, r23
    1708:	88 1f       	adc	r24, r24
    170a:	c2 f7       	brpl	.-16     	; 0x16fc <__addsf3x+0x6a>
    170c:	0e c0       	rjmp	.+28     	; 0x172a <__addsf3x+0x98>
    170e:	ba 0f       	add	r27, r26
    1710:	62 1f       	adc	r22, r18
    1712:	73 1f       	adc	r23, r19
    1714:	84 1f       	adc	r24, r20
    1716:	48 f4       	brcc	.+18     	; 0x172a <__addsf3x+0x98>
    1718:	87 95       	ror	r24
    171a:	77 95       	ror	r23
    171c:	67 95       	ror	r22
    171e:	b7 95       	ror	r27
    1720:	f7 95       	ror	r31
    1722:	9e 3f       	cpi	r25, 0xFE	; 254
    1724:	08 f0       	brcs	.+2      	; 0x1728 <__addsf3x+0x96>
    1726:	b3 cf       	rjmp	.-154    	; 0x168e <__addsf3+0x1e>
    1728:	93 95       	inc	r25
    172a:	88 0f       	add	r24, r24
    172c:	08 f0       	brcs	.+2      	; 0x1730 <__addsf3x+0x9e>
    172e:	99 27       	eor	r25, r25
    1730:	ee 0f       	add	r30, r30
    1732:	97 95       	ror	r25
    1734:	87 95       	ror	r24
    1736:	08 95       	ret
    1738:	90 d1       	rcall	.+800    	; 0x1a5a <__fp_pscA>
    173a:	58 f0       	brcs	.+22     	; 0x1752 <__addsf3x+0xc0>
    173c:	80 e8       	ldi	r24, 0x80	; 128
    173e:	91 e0       	ldi	r25, 0x01	; 1
    1740:	09 f4       	brne	.+2      	; 0x1744 <__addsf3x+0xb2>
    1742:	9e ef       	ldi	r25, 0xFE	; 254
    1744:	91 d1       	rcall	.+802    	; 0x1a68 <__fp_pscB>
    1746:	28 f0       	brcs	.+10     	; 0x1752 <__addsf3x+0xc0>
    1748:	40 e8       	ldi	r20, 0x80	; 128
    174a:	51 e0       	ldi	r21, 0x01	; 1
    174c:	59 f4       	brne	.+22     	; 0x1764 <atan2+0xe>
    174e:	5e ef       	ldi	r21, 0xFE	; 254
    1750:	09 c0       	rjmp	.+18     	; 0x1764 <atan2+0xe>
    1752:	5b c1       	rjmp	.+694    	; 0x1a0a <__fp_nan>
    1754:	fc c1       	rjmp	.+1016   	; 0x1b4e <__fp_zero>

00001756 <atan2>:
    1756:	e9 2f       	mov	r30, r25
    1758:	e0 78       	andi	r30, 0x80	; 128
    175a:	d7 d1       	rcall	.+942    	; 0x1b0a <__fp_split3>
    175c:	68 f3       	brcs	.-38     	; 0x1738 <__addsf3x+0xa6>
    175e:	09 2e       	mov	r0, r25
    1760:	05 2a       	or	r0, r21
    1762:	c1 f3       	breq	.-16     	; 0x1754 <__addsf3x+0xc2>
    1764:	26 17       	cp	r18, r22
    1766:	37 07       	cpc	r19, r23
    1768:	48 07       	cpc	r20, r24
    176a:	59 07       	cpc	r21, r25
    176c:	38 f0       	brcs	.+14     	; 0x177c <atan2+0x26>
    176e:	0e 2e       	mov	r0, r30
    1770:	07 f8       	bld	r0, 7
    1772:	e0 25       	eor	r30, r0
    1774:	69 f0       	breq	.+26     	; 0x1790 <atan2+0x3a>
    1776:	e0 25       	eor	r30, r0
    1778:	e0 64       	ori	r30, 0x40	; 64
    177a:	0a c0       	rjmp	.+20     	; 0x1790 <atan2+0x3a>
    177c:	ef 63       	ori	r30, 0x3F	; 63
    177e:	07 f8       	bld	r0, 7
    1780:	00 94       	com	r0
    1782:	07 fa       	bst	r0, 7
    1784:	db 01       	movw	r26, r22
    1786:	b9 01       	movw	r22, r18
    1788:	9d 01       	movw	r18, r26
    178a:	dc 01       	movw	r26, r24
    178c:	ca 01       	movw	r24, r20
    178e:	ad 01       	movw	r20, r26
    1790:	ef 93       	push	r30
    1792:	4a d0       	rcall	.+148    	; 0x1828 <__divsf3_pse>
    1794:	98 d1       	rcall	.+816    	; 0x1ac6 <__fp_round>
    1796:	0a d0       	rcall	.+20     	; 0x17ac <atan>
    1798:	5f 91       	pop	r21
    179a:	55 23       	and	r21, r21
    179c:	31 f0       	breq	.+12     	; 0x17aa <atan2+0x54>
    179e:	2b ed       	ldi	r18, 0xDB	; 219
    17a0:	3f e0       	ldi	r19, 0x0F	; 15
    17a2:	49 e4       	ldi	r20, 0x49	; 73
    17a4:	50 fd       	sbrc	r21, 0
    17a6:	49 ec       	ldi	r20, 0xC9	; 201
    17a8:	63 cf       	rjmp	.-314    	; 0x1670 <__addsf3>
    17aa:	08 95       	ret

000017ac <atan>:
    17ac:	df 93       	push	r29
    17ae:	dd 27       	eor	r29, r29
    17b0:	b9 2f       	mov	r27, r25
    17b2:	bf 77       	andi	r27, 0x7F	; 127
    17b4:	40 e8       	ldi	r20, 0x80	; 128
    17b6:	5f e3       	ldi	r21, 0x3F	; 63
    17b8:	16 16       	cp	r1, r22
    17ba:	17 06       	cpc	r1, r23
    17bc:	48 07       	cpc	r20, r24
    17be:	5b 07       	cpc	r21, r27
    17c0:	10 f4       	brcc	.+4      	; 0x17c6 <atan+0x1a>
    17c2:	d9 2f       	mov	r29, r25
    17c4:	cf d1       	rcall	.+926    	; 0x1b64 <inverse>
    17c6:	9f 93       	push	r25
    17c8:	8f 93       	push	r24
    17ca:	7f 93       	push	r23
    17cc:	6f 93       	push	r22
    17ce:	7c d2       	rcall	.+1272   	; 0x1cc8 <square>
    17d0:	ec ea       	ldi	r30, 0xAC	; 172
    17d2:	f0 e0       	ldi	r31, 0x00	; 0
    17d4:	1d d1       	rcall	.+570    	; 0x1a10 <__fp_powser>
    17d6:	77 d1       	rcall	.+750    	; 0x1ac6 <__fp_round>
    17d8:	2f 91       	pop	r18
    17da:	3f 91       	pop	r19
    17dc:	4f 91       	pop	r20
    17de:	5f 91       	pop	r21
    17e0:	d4 d1       	rcall	.+936    	; 0x1b8a <__mulsf3x>
    17e2:	dd 23       	and	r29, r29
    17e4:	49 f0       	breq	.+18     	; 0x17f8 <atan+0x4c>
    17e6:	90 58       	subi	r25, 0x80	; 128
    17e8:	a2 ea       	ldi	r26, 0xA2	; 162
    17ea:	2a ed       	ldi	r18, 0xDA	; 218
    17ec:	3f e0       	ldi	r19, 0x0F	; 15
    17ee:	49 ec       	ldi	r20, 0xC9	; 201
    17f0:	5f e3       	ldi	r21, 0x3F	; 63
    17f2:	d0 78       	andi	r29, 0x80	; 128
    17f4:	5d 27       	eor	r21, r29
    17f6:	4d df       	rcall	.-358    	; 0x1692 <__addsf3x>
    17f8:	df 91       	pop	r29
    17fa:	65 c1       	rjmp	.+714    	; 0x1ac6 <__fp_round>

000017fc <__cmpsf2>:
    17fc:	dc d0       	rcall	.+440    	; 0x19b6 <__fp_cmp>
    17fe:	08 f4       	brcc	.+2      	; 0x1802 <__cmpsf2+0x6>
    1800:	81 e0       	ldi	r24, 0x01	; 1
    1802:	08 95       	ret

00001804 <cos>:
    1804:	39 d1       	rcall	.+626    	; 0x1a78 <__fp_rempio2>
    1806:	e3 95       	inc	r30
    1808:	6f c1       	rjmp	.+734    	; 0x1ae8 <__fp_sinus>

0000180a <__divsf3>:
    180a:	0c d0       	rcall	.+24     	; 0x1824 <__divsf3x>
    180c:	5c c1       	rjmp	.+696    	; 0x1ac6 <__fp_round>
    180e:	2c d1       	rcall	.+600    	; 0x1a68 <__fp_pscB>
    1810:	40 f0       	brcs	.+16     	; 0x1822 <__divsf3+0x18>
    1812:	23 d1       	rcall	.+582    	; 0x1a5a <__fp_pscA>
    1814:	30 f0       	brcs	.+12     	; 0x1822 <__divsf3+0x18>
    1816:	21 f4       	brne	.+8      	; 0x1820 <__divsf3+0x16>
    1818:	5f 3f       	cpi	r21, 0xFF	; 255
    181a:	19 f0       	breq	.+6      	; 0x1822 <__divsf3+0x18>
    181c:	f0 c0       	rjmp	.+480    	; 0x19fe <__fp_inf>
    181e:	51 11       	cpse	r21, r1
    1820:	97 c1       	rjmp	.+814    	; 0x1b50 <__fp_szero>
    1822:	f3 c0       	rjmp	.+486    	; 0x1a0a <__fp_nan>

00001824 <__divsf3x>:
    1824:	72 d1       	rcall	.+740    	; 0x1b0a <__fp_split3>
    1826:	98 f3       	brcs	.-26     	; 0x180e <__divsf3+0x4>

00001828 <__divsf3_pse>:
    1828:	99 23       	and	r25, r25
    182a:	c9 f3       	breq	.-14     	; 0x181e <__divsf3+0x14>
    182c:	55 23       	and	r21, r21
    182e:	b1 f3       	breq	.-20     	; 0x181c <__divsf3+0x12>
    1830:	95 1b       	sub	r25, r21
    1832:	55 0b       	sbc	r21, r21
    1834:	bb 27       	eor	r27, r27
    1836:	aa 27       	eor	r26, r26
    1838:	62 17       	cp	r22, r18
    183a:	73 07       	cpc	r23, r19
    183c:	84 07       	cpc	r24, r20
    183e:	38 f0       	brcs	.+14     	; 0x184e <__divsf3_pse+0x26>
    1840:	9f 5f       	subi	r25, 0xFF	; 255
    1842:	5f 4f       	sbci	r21, 0xFF	; 255
    1844:	22 0f       	add	r18, r18
    1846:	33 1f       	adc	r19, r19
    1848:	44 1f       	adc	r20, r20
    184a:	aa 1f       	adc	r26, r26
    184c:	a9 f3       	breq	.-22     	; 0x1838 <__divsf3_pse+0x10>
    184e:	33 d0       	rcall	.+102    	; 0x18b6 <__divsf3_pse+0x8e>
    1850:	0e 2e       	mov	r0, r30
    1852:	3a f0       	brmi	.+14     	; 0x1862 <__divsf3_pse+0x3a>
    1854:	e0 e8       	ldi	r30, 0x80	; 128
    1856:	30 d0       	rcall	.+96     	; 0x18b8 <__divsf3_pse+0x90>
    1858:	91 50       	subi	r25, 0x01	; 1
    185a:	50 40       	sbci	r21, 0x00	; 0
    185c:	e6 95       	lsr	r30
    185e:	00 1c       	adc	r0, r0
    1860:	ca f7       	brpl	.-14     	; 0x1854 <__divsf3_pse+0x2c>
    1862:	29 d0       	rcall	.+82     	; 0x18b6 <__divsf3_pse+0x8e>
    1864:	fe 2f       	mov	r31, r30
    1866:	27 d0       	rcall	.+78     	; 0x18b6 <__divsf3_pse+0x8e>
    1868:	66 0f       	add	r22, r22
    186a:	77 1f       	adc	r23, r23
    186c:	88 1f       	adc	r24, r24
    186e:	bb 1f       	adc	r27, r27
    1870:	26 17       	cp	r18, r22
    1872:	37 07       	cpc	r19, r23
    1874:	48 07       	cpc	r20, r24
    1876:	ab 07       	cpc	r26, r27
    1878:	b0 e8       	ldi	r27, 0x80	; 128
    187a:	09 f0       	breq	.+2      	; 0x187e <__divsf3_pse+0x56>
    187c:	bb 0b       	sbc	r27, r27
    187e:	80 2d       	mov	r24, r0
    1880:	bf 01       	movw	r22, r30
    1882:	ff 27       	eor	r31, r31
    1884:	93 58       	subi	r25, 0x83	; 131
    1886:	5f 4f       	sbci	r21, 0xFF	; 255
    1888:	2a f0       	brmi	.+10     	; 0x1894 <__divsf3_pse+0x6c>
    188a:	9e 3f       	cpi	r25, 0xFE	; 254
    188c:	51 05       	cpc	r21, r1
    188e:	68 f0       	brcs	.+26     	; 0x18aa <__divsf3_pse+0x82>
    1890:	b6 c0       	rjmp	.+364    	; 0x19fe <__fp_inf>
    1892:	5e c1       	rjmp	.+700    	; 0x1b50 <__fp_szero>
    1894:	5f 3f       	cpi	r21, 0xFF	; 255
    1896:	ec f3       	brlt	.-6      	; 0x1892 <__divsf3_pse+0x6a>
    1898:	98 3e       	cpi	r25, 0xE8	; 232
    189a:	dc f3       	brlt	.-10     	; 0x1892 <__divsf3_pse+0x6a>
    189c:	86 95       	lsr	r24
    189e:	77 95       	ror	r23
    18a0:	67 95       	ror	r22
    18a2:	b7 95       	ror	r27
    18a4:	f7 95       	ror	r31
    18a6:	9f 5f       	subi	r25, 0xFF	; 255
    18a8:	c9 f7       	brne	.-14     	; 0x189c <__divsf3_pse+0x74>
    18aa:	88 0f       	add	r24, r24
    18ac:	91 1d       	adc	r25, r1
    18ae:	96 95       	lsr	r25
    18b0:	87 95       	ror	r24
    18b2:	97 f9       	bld	r25, 7
    18b4:	08 95       	ret
    18b6:	e1 e0       	ldi	r30, 0x01	; 1
    18b8:	66 0f       	add	r22, r22
    18ba:	77 1f       	adc	r23, r23
    18bc:	88 1f       	adc	r24, r24
    18be:	bb 1f       	adc	r27, r27
    18c0:	62 17       	cp	r22, r18
    18c2:	73 07       	cpc	r23, r19
    18c4:	84 07       	cpc	r24, r20
    18c6:	ba 07       	cpc	r27, r26
    18c8:	20 f0       	brcs	.+8      	; 0x18d2 <__divsf3_pse+0xaa>
    18ca:	62 1b       	sub	r22, r18
    18cc:	73 0b       	sbc	r23, r19
    18ce:	84 0b       	sbc	r24, r20
    18d0:	ba 0b       	sbc	r27, r26
    18d2:	ee 1f       	adc	r30, r30
    18d4:	88 f7       	brcc	.-30     	; 0x18b8 <__divsf3_pse+0x90>
    18d6:	e0 95       	com	r30
    18d8:	08 95       	ret

000018da <__fixsfsi>:
    18da:	04 d0       	rcall	.+8      	; 0x18e4 <__fixunssfsi>
    18dc:	68 94       	set
    18de:	b1 11       	cpse	r27, r1
    18e0:	37 c1       	rjmp	.+622    	; 0x1b50 <__fp_szero>
    18e2:	08 95       	ret

000018e4 <__fixunssfsi>:
    18e4:	1a d1       	rcall	.+564    	; 0x1b1a <__fp_splitA>
    18e6:	88 f0       	brcs	.+34     	; 0x190a <__fixunssfsi+0x26>
    18e8:	9f 57       	subi	r25, 0x7F	; 127
    18ea:	90 f0       	brcs	.+36     	; 0x1910 <__fixunssfsi+0x2c>
    18ec:	b9 2f       	mov	r27, r25
    18ee:	99 27       	eor	r25, r25
    18f0:	b7 51       	subi	r27, 0x17	; 23
    18f2:	a0 f0       	brcs	.+40     	; 0x191c <__fixunssfsi+0x38>
    18f4:	d1 f0       	breq	.+52     	; 0x192a <__fixunssfsi+0x46>
    18f6:	66 0f       	add	r22, r22
    18f8:	77 1f       	adc	r23, r23
    18fa:	88 1f       	adc	r24, r24
    18fc:	99 1f       	adc	r25, r25
    18fe:	1a f0       	brmi	.+6      	; 0x1906 <__fixunssfsi+0x22>
    1900:	ba 95       	dec	r27
    1902:	c9 f7       	brne	.-14     	; 0x18f6 <__fixunssfsi+0x12>
    1904:	12 c0       	rjmp	.+36     	; 0x192a <__fixunssfsi+0x46>
    1906:	b1 30       	cpi	r27, 0x01	; 1
    1908:	81 f0       	breq	.+32     	; 0x192a <__fixunssfsi+0x46>
    190a:	21 d1       	rcall	.+578    	; 0x1b4e <__fp_zero>
    190c:	b1 e0       	ldi	r27, 0x01	; 1
    190e:	08 95       	ret
    1910:	1e c1       	rjmp	.+572    	; 0x1b4e <__fp_zero>
    1912:	67 2f       	mov	r22, r23
    1914:	78 2f       	mov	r23, r24
    1916:	88 27       	eor	r24, r24
    1918:	b8 5f       	subi	r27, 0xF8	; 248
    191a:	39 f0       	breq	.+14     	; 0x192a <__fixunssfsi+0x46>
    191c:	b9 3f       	cpi	r27, 0xF9	; 249
    191e:	cc f3       	brlt	.-14     	; 0x1912 <__fixunssfsi+0x2e>
    1920:	86 95       	lsr	r24
    1922:	77 95       	ror	r23
    1924:	67 95       	ror	r22
    1926:	b3 95       	inc	r27
    1928:	d9 f7       	brne	.-10     	; 0x1920 <__fixunssfsi+0x3c>
    192a:	3e f4       	brtc	.+14     	; 0x193a <__fixunssfsi+0x56>
    192c:	90 95       	com	r25
    192e:	80 95       	com	r24
    1930:	70 95       	com	r23
    1932:	61 95       	neg	r22
    1934:	7f 4f       	sbci	r23, 0xFF	; 255
    1936:	8f 4f       	sbci	r24, 0xFF	; 255
    1938:	9f 4f       	sbci	r25, 0xFF	; 255
    193a:	08 95       	ret

0000193c <__floatunsisf>:
    193c:	e8 94       	clt
    193e:	09 c0       	rjmp	.+18     	; 0x1952 <__floatsisf+0x12>

00001940 <__floatsisf>:
    1940:	97 fb       	bst	r25, 7
    1942:	3e f4       	brtc	.+14     	; 0x1952 <__floatsisf+0x12>
    1944:	90 95       	com	r25
    1946:	80 95       	com	r24
    1948:	70 95       	com	r23
    194a:	61 95       	neg	r22
    194c:	7f 4f       	sbci	r23, 0xFF	; 255
    194e:	8f 4f       	sbci	r24, 0xFF	; 255
    1950:	9f 4f       	sbci	r25, 0xFF	; 255
    1952:	99 23       	and	r25, r25
    1954:	a9 f0       	breq	.+42     	; 0x1980 <__floatsisf+0x40>
    1956:	f9 2f       	mov	r31, r25
    1958:	96 e9       	ldi	r25, 0x96	; 150
    195a:	bb 27       	eor	r27, r27
    195c:	93 95       	inc	r25
    195e:	f6 95       	lsr	r31
    1960:	87 95       	ror	r24
    1962:	77 95       	ror	r23
    1964:	67 95       	ror	r22
    1966:	b7 95       	ror	r27
    1968:	f1 11       	cpse	r31, r1
    196a:	f8 cf       	rjmp	.-16     	; 0x195c <__floatsisf+0x1c>
    196c:	fa f4       	brpl	.+62     	; 0x19ac <__floatsisf+0x6c>
    196e:	bb 0f       	add	r27, r27
    1970:	11 f4       	brne	.+4      	; 0x1976 <__floatsisf+0x36>
    1972:	60 ff       	sbrs	r22, 0
    1974:	1b c0       	rjmp	.+54     	; 0x19ac <__floatsisf+0x6c>
    1976:	6f 5f       	subi	r22, 0xFF	; 255
    1978:	7f 4f       	sbci	r23, 0xFF	; 255
    197a:	8f 4f       	sbci	r24, 0xFF	; 255
    197c:	9f 4f       	sbci	r25, 0xFF	; 255
    197e:	16 c0       	rjmp	.+44     	; 0x19ac <__floatsisf+0x6c>
    1980:	88 23       	and	r24, r24
    1982:	11 f0       	breq	.+4      	; 0x1988 <__floatsisf+0x48>
    1984:	96 e9       	ldi	r25, 0x96	; 150
    1986:	11 c0       	rjmp	.+34     	; 0x19aa <__floatsisf+0x6a>
    1988:	77 23       	and	r23, r23
    198a:	21 f0       	breq	.+8      	; 0x1994 <__floatsisf+0x54>
    198c:	9e e8       	ldi	r25, 0x8E	; 142
    198e:	87 2f       	mov	r24, r23
    1990:	76 2f       	mov	r23, r22
    1992:	05 c0       	rjmp	.+10     	; 0x199e <__floatsisf+0x5e>
    1994:	66 23       	and	r22, r22
    1996:	71 f0       	breq	.+28     	; 0x19b4 <__floatsisf+0x74>
    1998:	96 e8       	ldi	r25, 0x86	; 134
    199a:	86 2f       	mov	r24, r22
    199c:	70 e0       	ldi	r23, 0x00	; 0
    199e:	60 e0       	ldi	r22, 0x00	; 0
    19a0:	2a f0       	brmi	.+10     	; 0x19ac <__floatsisf+0x6c>
    19a2:	9a 95       	dec	r25
    19a4:	66 0f       	add	r22, r22
    19a6:	77 1f       	adc	r23, r23
    19a8:	88 1f       	adc	r24, r24
    19aa:	da f7       	brpl	.-10     	; 0x19a2 <__floatsisf+0x62>
    19ac:	88 0f       	add	r24, r24
    19ae:	96 95       	lsr	r25
    19b0:	87 95       	ror	r24
    19b2:	97 f9       	bld	r25, 7
    19b4:	08 95       	ret

000019b6 <__fp_cmp>:
    19b6:	99 0f       	add	r25, r25
    19b8:	00 08       	sbc	r0, r0
    19ba:	55 0f       	add	r21, r21
    19bc:	aa 0b       	sbc	r26, r26
    19be:	e0 e8       	ldi	r30, 0x80	; 128
    19c0:	fe ef       	ldi	r31, 0xFE	; 254
    19c2:	16 16       	cp	r1, r22
    19c4:	17 06       	cpc	r1, r23
    19c6:	e8 07       	cpc	r30, r24
    19c8:	f9 07       	cpc	r31, r25
    19ca:	c0 f0       	brcs	.+48     	; 0x19fc <__fp_cmp+0x46>
    19cc:	12 16       	cp	r1, r18
    19ce:	13 06       	cpc	r1, r19
    19d0:	e4 07       	cpc	r30, r20
    19d2:	f5 07       	cpc	r31, r21
    19d4:	98 f0       	brcs	.+38     	; 0x19fc <__fp_cmp+0x46>
    19d6:	62 1b       	sub	r22, r18
    19d8:	73 0b       	sbc	r23, r19
    19da:	84 0b       	sbc	r24, r20
    19dc:	95 0b       	sbc	r25, r21
    19de:	39 f4       	brne	.+14     	; 0x19ee <__fp_cmp+0x38>
    19e0:	0a 26       	eor	r0, r26
    19e2:	61 f0       	breq	.+24     	; 0x19fc <__fp_cmp+0x46>
    19e4:	23 2b       	or	r18, r19
    19e6:	24 2b       	or	r18, r20
    19e8:	25 2b       	or	r18, r21
    19ea:	21 f4       	brne	.+8      	; 0x19f4 <__fp_cmp+0x3e>
    19ec:	08 95       	ret
    19ee:	0a 26       	eor	r0, r26
    19f0:	09 f4       	brne	.+2      	; 0x19f4 <__fp_cmp+0x3e>
    19f2:	a1 40       	sbci	r26, 0x01	; 1
    19f4:	a6 95       	lsr	r26
    19f6:	8f ef       	ldi	r24, 0xFF	; 255
    19f8:	81 1d       	adc	r24, r1
    19fa:	81 1d       	adc	r24, r1
    19fc:	08 95       	ret

000019fe <__fp_inf>:
    19fe:	97 f9       	bld	r25, 7
    1a00:	9f 67       	ori	r25, 0x7F	; 127
    1a02:	80 e8       	ldi	r24, 0x80	; 128
    1a04:	70 e0       	ldi	r23, 0x00	; 0
    1a06:	60 e0       	ldi	r22, 0x00	; 0
    1a08:	08 95       	ret

00001a0a <__fp_nan>:
    1a0a:	9f ef       	ldi	r25, 0xFF	; 255
    1a0c:	80 ec       	ldi	r24, 0xC0	; 192
    1a0e:	08 95       	ret

00001a10 <__fp_powser>:
    1a10:	df 93       	push	r29
    1a12:	cf 93       	push	r28
    1a14:	1f 93       	push	r17
    1a16:	0f 93       	push	r16
    1a18:	ff 92       	push	r15
    1a1a:	ef 92       	push	r14
    1a1c:	df 92       	push	r13
    1a1e:	7b 01       	movw	r14, r22
    1a20:	8c 01       	movw	r16, r24
    1a22:	68 94       	set
    1a24:	05 c0       	rjmp	.+10     	; 0x1a30 <__fp_powser+0x20>
    1a26:	da 2e       	mov	r13, r26
    1a28:	ef 01       	movw	r28, r30
    1a2a:	af d0       	rcall	.+350    	; 0x1b8a <__mulsf3x>
    1a2c:	fe 01       	movw	r30, r28
    1a2e:	e8 94       	clt
    1a30:	a5 91       	lpm	r26, Z+
    1a32:	25 91       	lpm	r18, Z+
    1a34:	35 91       	lpm	r19, Z+
    1a36:	45 91       	lpm	r20, Z+
    1a38:	55 91       	lpm	r21, Z+
    1a3a:	ae f3       	brts	.-22     	; 0x1a26 <__fp_powser+0x16>
    1a3c:	ef 01       	movw	r28, r30
    1a3e:	29 de       	rcall	.-942    	; 0x1692 <__addsf3x>
    1a40:	fe 01       	movw	r30, r28
    1a42:	97 01       	movw	r18, r14
    1a44:	a8 01       	movw	r20, r16
    1a46:	da 94       	dec	r13
    1a48:	79 f7       	brne	.-34     	; 0x1a28 <__fp_powser+0x18>
    1a4a:	df 90       	pop	r13
    1a4c:	ef 90       	pop	r14
    1a4e:	ff 90       	pop	r15
    1a50:	0f 91       	pop	r16
    1a52:	1f 91       	pop	r17
    1a54:	cf 91       	pop	r28
    1a56:	df 91       	pop	r29
    1a58:	08 95       	ret

00001a5a <__fp_pscA>:
    1a5a:	00 24       	eor	r0, r0
    1a5c:	0a 94       	dec	r0
    1a5e:	16 16       	cp	r1, r22
    1a60:	17 06       	cpc	r1, r23
    1a62:	18 06       	cpc	r1, r24
    1a64:	09 06       	cpc	r0, r25
    1a66:	08 95       	ret

00001a68 <__fp_pscB>:
    1a68:	00 24       	eor	r0, r0
    1a6a:	0a 94       	dec	r0
    1a6c:	12 16       	cp	r1, r18
    1a6e:	13 06       	cpc	r1, r19
    1a70:	14 06       	cpc	r1, r20
    1a72:	05 06       	cpc	r0, r21
    1a74:	08 95       	ret
    1a76:	c9 cf       	rjmp	.-110    	; 0x1a0a <__fp_nan>

00001a78 <__fp_rempio2>:
    1a78:	50 d0       	rcall	.+160    	; 0x1b1a <__fp_splitA>
    1a7a:	e8 f3       	brcs	.-6      	; 0x1a76 <__fp_pscB+0xe>
    1a7c:	e8 94       	clt
    1a7e:	e0 e0       	ldi	r30, 0x00	; 0
    1a80:	bb 27       	eor	r27, r27
    1a82:	9f 57       	subi	r25, 0x7F	; 127
    1a84:	f0 f0       	brcs	.+60     	; 0x1ac2 <__fp_rempio2+0x4a>
    1a86:	2a ed       	ldi	r18, 0xDA	; 218
    1a88:	3f e0       	ldi	r19, 0x0F	; 15
    1a8a:	49 ec       	ldi	r20, 0xC9	; 201
    1a8c:	06 c0       	rjmp	.+12     	; 0x1a9a <__fp_rempio2+0x22>
    1a8e:	ee 0f       	add	r30, r30
    1a90:	bb 0f       	add	r27, r27
    1a92:	66 1f       	adc	r22, r22
    1a94:	77 1f       	adc	r23, r23
    1a96:	88 1f       	adc	r24, r24
    1a98:	28 f0       	brcs	.+10     	; 0x1aa4 <__fp_rempio2+0x2c>
    1a9a:	b2 3a       	cpi	r27, 0xA2	; 162
    1a9c:	62 07       	cpc	r22, r18
    1a9e:	73 07       	cpc	r23, r19
    1aa0:	84 07       	cpc	r24, r20
    1aa2:	28 f0       	brcs	.+10     	; 0x1aae <__fp_rempio2+0x36>
    1aa4:	b2 5a       	subi	r27, 0xA2	; 162
    1aa6:	62 0b       	sbc	r22, r18
    1aa8:	73 0b       	sbc	r23, r19
    1aaa:	84 0b       	sbc	r24, r20
    1aac:	e3 95       	inc	r30
    1aae:	9a 95       	dec	r25
    1ab0:	72 f7       	brpl	.-36     	; 0x1a8e <__fp_rempio2+0x16>
    1ab2:	80 38       	cpi	r24, 0x80	; 128
    1ab4:	30 f4       	brcc	.+12     	; 0x1ac2 <__fp_rempio2+0x4a>
    1ab6:	9a 95       	dec	r25
    1ab8:	bb 0f       	add	r27, r27
    1aba:	66 1f       	adc	r22, r22
    1abc:	77 1f       	adc	r23, r23
    1abe:	88 1f       	adc	r24, r24
    1ac0:	d2 f7       	brpl	.-12     	; 0x1ab6 <__fp_rempio2+0x3e>
    1ac2:	90 48       	sbci	r25, 0x80	; 128
    1ac4:	06 c1       	rjmp	.+524    	; 0x1cd2 <__fp_mpack_finite>

00001ac6 <__fp_round>:
    1ac6:	09 2e       	mov	r0, r25
    1ac8:	03 94       	inc	r0
    1aca:	00 0c       	add	r0, r0
    1acc:	11 f4       	brne	.+4      	; 0x1ad2 <__fp_round+0xc>
    1ace:	88 23       	and	r24, r24
    1ad0:	52 f0       	brmi	.+20     	; 0x1ae6 <__fp_round+0x20>
    1ad2:	bb 0f       	add	r27, r27
    1ad4:	40 f4       	brcc	.+16     	; 0x1ae6 <__fp_round+0x20>
    1ad6:	bf 2b       	or	r27, r31
    1ad8:	11 f4       	brne	.+4      	; 0x1ade <__fp_round+0x18>
    1ada:	60 ff       	sbrs	r22, 0
    1adc:	04 c0       	rjmp	.+8      	; 0x1ae6 <__fp_round+0x20>
    1ade:	6f 5f       	subi	r22, 0xFF	; 255
    1ae0:	7f 4f       	sbci	r23, 0xFF	; 255
    1ae2:	8f 4f       	sbci	r24, 0xFF	; 255
    1ae4:	9f 4f       	sbci	r25, 0xFF	; 255
    1ae6:	08 95       	ret

00001ae8 <__fp_sinus>:
    1ae8:	ef 93       	push	r30
    1aea:	e0 ff       	sbrs	r30, 0
    1aec:	06 c0       	rjmp	.+12     	; 0x1afa <__fp_sinus+0x12>
    1aee:	a2 ea       	ldi	r26, 0xA2	; 162
    1af0:	2a ed       	ldi	r18, 0xDA	; 218
    1af2:	3f e0       	ldi	r19, 0x0F	; 15
    1af4:	49 ec       	ldi	r20, 0xC9	; 201
    1af6:	5f eb       	ldi	r21, 0xBF	; 191
    1af8:	cc dd       	rcall	.-1128   	; 0x1692 <__addsf3x>
    1afa:	e5 df       	rcall	.-54     	; 0x1ac6 <__fp_round>
    1afc:	0f 90       	pop	r0
    1afe:	03 94       	inc	r0
    1b00:	01 fc       	sbrc	r0, 1
    1b02:	90 58       	subi	r25, 0x80	; 128
    1b04:	e9 ed       	ldi	r30, 0xD9	; 217
    1b06:	f0 e0       	ldi	r31, 0x00	; 0
    1b08:	f7 c0       	rjmp	.+494    	; 0x1cf8 <__fp_powsodd>

00001b0a <__fp_split3>:
    1b0a:	57 fd       	sbrc	r21, 7
    1b0c:	90 58       	subi	r25, 0x80	; 128
    1b0e:	44 0f       	add	r20, r20
    1b10:	55 1f       	adc	r21, r21
    1b12:	59 f0       	breq	.+22     	; 0x1b2a <__fp_splitA+0x10>
    1b14:	5f 3f       	cpi	r21, 0xFF	; 255
    1b16:	71 f0       	breq	.+28     	; 0x1b34 <__fp_splitA+0x1a>
    1b18:	47 95       	ror	r20

00001b1a <__fp_splitA>:
    1b1a:	88 0f       	add	r24, r24
    1b1c:	97 fb       	bst	r25, 7
    1b1e:	99 1f       	adc	r25, r25
    1b20:	61 f0       	breq	.+24     	; 0x1b3a <__fp_splitA+0x20>
    1b22:	9f 3f       	cpi	r25, 0xFF	; 255
    1b24:	79 f0       	breq	.+30     	; 0x1b44 <__fp_splitA+0x2a>
    1b26:	87 95       	ror	r24
    1b28:	08 95       	ret
    1b2a:	12 16       	cp	r1, r18
    1b2c:	13 06       	cpc	r1, r19
    1b2e:	14 06       	cpc	r1, r20
    1b30:	55 1f       	adc	r21, r21
    1b32:	f2 cf       	rjmp	.-28     	; 0x1b18 <__fp_split3+0xe>
    1b34:	46 95       	lsr	r20
    1b36:	f1 df       	rcall	.-30     	; 0x1b1a <__fp_splitA>
    1b38:	08 c0       	rjmp	.+16     	; 0x1b4a <__fp_splitA+0x30>
    1b3a:	16 16       	cp	r1, r22
    1b3c:	17 06       	cpc	r1, r23
    1b3e:	18 06       	cpc	r1, r24
    1b40:	99 1f       	adc	r25, r25
    1b42:	f1 cf       	rjmp	.-30     	; 0x1b26 <__fp_splitA+0xc>
    1b44:	86 95       	lsr	r24
    1b46:	71 05       	cpc	r23, r1
    1b48:	61 05       	cpc	r22, r1
    1b4a:	08 94       	sec
    1b4c:	08 95       	ret

00001b4e <__fp_zero>:
    1b4e:	e8 94       	clt

00001b50 <__fp_szero>:
    1b50:	bb 27       	eor	r27, r27
    1b52:	66 27       	eor	r22, r22
    1b54:	77 27       	eor	r23, r23
    1b56:	cb 01       	movw	r24, r22
    1b58:	97 f9       	bld	r25, 7
    1b5a:	08 95       	ret

00001b5c <__gesf2>:
    1b5c:	2c df       	rcall	.-424    	; 0x19b6 <__fp_cmp>
    1b5e:	08 f4       	brcc	.+2      	; 0x1b62 <__gesf2+0x6>
    1b60:	8f ef       	ldi	r24, 0xFF	; 255
    1b62:	08 95       	ret

00001b64 <inverse>:
    1b64:	9b 01       	movw	r18, r22
    1b66:	ac 01       	movw	r20, r24
    1b68:	60 e0       	ldi	r22, 0x00	; 0
    1b6a:	70 e0       	ldi	r23, 0x00	; 0
    1b6c:	80 e8       	ldi	r24, 0x80	; 128
    1b6e:	9f e3       	ldi	r25, 0x3F	; 63
    1b70:	4c ce       	rjmp	.-872    	; 0x180a <__divsf3>

00001b72 <__mulsf3>:
    1b72:	0b d0       	rcall	.+22     	; 0x1b8a <__mulsf3x>
    1b74:	a8 cf       	rjmp	.-176    	; 0x1ac6 <__fp_round>
    1b76:	71 df       	rcall	.-286    	; 0x1a5a <__fp_pscA>
    1b78:	28 f0       	brcs	.+10     	; 0x1b84 <__mulsf3+0x12>
    1b7a:	76 df       	rcall	.-276    	; 0x1a68 <__fp_pscB>
    1b7c:	18 f0       	brcs	.+6      	; 0x1b84 <__mulsf3+0x12>
    1b7e:	95 23       	and	r25, r21
    1b80:	09 f0       	breq	.+2      	; 0x1b84 <__mulsf3+0x12>
    1b82:	3d cf       	rjmp	.-390    	; 0x19fe <__fp_inf>
    1b84:	42 cf       	rjmp	.-380    	; 0x1a0a <__fp_nan>
    1b86:	11 24       	eor	r1, r1
    1b88:	e3 cf       	rjmp	.-58     	; 0x1b50 <__fp_szero>

00001b8a <__mulsf3x>:
    1b8a:	bf df       	rcall	.-130    	; 0x1b0a <__fp_split3>
    1b8c:	a0 f3       	brcs	.-24     	; 0x1b76 <__mulsf3+0x4>

00001b8e <__mulsf3_pse>:
    1b8e:	95 9f       	mul	r25, r21
    1b90:	d1 f3       	breq	.-12     	; 0x1b86 <__mulsf3+0x14>
    1b92:	95 0f       	add	r25, r21
    1b94:	50 e0       	ldi	r21, 0x00	; 0
    1b96:	55 1f       	adc	r21, r21
    1b98:	62 9f       	mul	r22, r18
    1b9a:	f0 01       	movw	r30, r0
    1b9c:	72 9f       	mul	r23, r18
    1b9e:	bb 27       	eor	r27, r27
    1ba0:	f0 0d       	add	r31, r0
    1ba2:	b1 1d       	adc	r27, r1
    1ba4:	63 9f       	mul	r22, r19
    1ba6:	aa 27       	eor	r26, r26
    1ba8:	f0 0d       	add	r31, r0
    1baa:	b1 1d       	adc	r27, r1
    1bac:	aa 1f       	adc	r26, r26
    1bae:	64 9f       	mul	r22, r20
    1bb0:	66 27       	eor	r22, r22
    1bb2:	b0 0d       	add	r27, r0
    1bb4:	a1 1d       	adc	r26, r1
    1bb6:	66 1f       	adc	r22, r22
    1bb8:	82 9f       	mul	r24, r18
    1bba:	22 27       	eor	r18, r18
    1bbc:	b0 0d       	add	r27, r0
    1bbe:	a1 1d       	adc	r26, r1
    1bc0:	62 1f       	adc	r22, r18
    1bc2:	73 9f       	mul	r23, r19
    1bc4:	b0 0d       	add	r27, r0
    1bc6:	a1 1d       	adc	r26, r1
    1bc8:	62 1f       	adc	r22, r18
    1bca:	83 9f       	mul	r24, r19
    1bcc:	a0 0d       	add	r26, r0
    1bce:	61 1d       	adc	r22, r1
    1bd0:	22 1f       	adc	r18, r18
    1bd2:	74 9f       	mul	r23, r20
    1bd4:	33 27       	eor	r19, r19
    1bd6:	a0 0d       	add	r26, r0
    1bd8:	61 1d       	adc	r22, r1
    1bda:	23 1f       	adc	r18, r19
    1bdc:	84 9f       	mul	r24, r20
    1bde:	60 0d       	add	r22, r0
    1be0:	21 1d       	adc	r18, r1
    1be2:	82 2f       	mov	r24, r18
    1be4:	76 2f       	mov	r23, r22
    1be6:	6a 2f       	mov	r22, r26
    1be8:	11 24       	eor	r1, r1
    1bea:	9f 57       	subi	r25, 0x7F	; 127
    1bec:	50 40       	sbci	r21, 0x00	; 0
    1bee:	8a f0       	brmi	.+34     	; 0x1c12 <__mulsf3_pse+0x84>
    1bf0:	e1 f0       	breq	.+56     	; 0x1c2a <__mulsf3_pse+0x9c>
    1bf2:	88 23       	and	r24, r24
    1bf4:	4a f0       	brmi	.+18     	; 0x1c08 <__mulsf3_pse+0x7a>
    1bf6:	ee 0f       	add	r30, r30
    1bf8:	ff 1f       	adc	r31, r31
    1bfa:	bb 1f       	adc	r27, r27
    1bfc:	66 1f       	adc	r22, r22
    1bfe:	77 1f       	adc	r23, r23
    1c00:	88 1f       	adc	r24, r24
    1c02:	91 50       	subi	r25, 0x01	; 1
    1c04:	50 40       	sbci	r21, 0x00	; 0
    1c06:	a9 f7       	brne	.-22     	; 0x1bf2 <__mulsf3_pse+0x64>
    1c08:	9e 3f       	cpi	r25, 0xFE	; 254
    1c0a:	51 05       	cpc	r21, r1
    1c0c:	70 f0       	brcs	.+28     	; 0x1c2a <__mulsf3_pse+0x9c>
    1c0e:	f7 ce       	rjmp	.-530    	; 0x19fe <__fp_inf>
    1c10:	9f cf       	rjmp	.-194    	; 0x1b50 <__fp_szero>
    1c12:	5f 3f       	cpi	r21, 0xFF	; 255
    1c14:	ec f3       	brlt	.-6      	; 0x1c10 <__mulsf3_pse+0x82>
    1c16:	98 3e       	cpi	r25, 0xE8	; 232
    1c18:	dc f3       	brlt	.-10     	; 0x1c10 <__mulsf3_pse+0x82>
    1c1a:	86 95       	lsr	r24
    1c1c:	77 95       	ror	r23
    1c1e:	67 95       	ror	r22
    1c20:	b7 95       	ror	r27
    1c22:	f7 95       	ror	r31
    1c24:	e7 95       	ror	r30
    1c26:	9f 5f       	subi	r25, 0xFF	; 255
    1c28:	c1 f7       	brne	.-16     	; 0x1c1a <__mulsf3_pse+0x8c>
    1c2a:	fe 2b       	or	r31, r30
    1c2c:	88 0f       	add	r24, r24
    1c2e:	91 1d       	adc	r25, r1
    1c30:	96 95       	lsr	r25
    1c32:	87 95       	ror	r24
    1c34:	97 f9       	bld	r25, 7
    1c36:	08 95       	ret

00001c38 <sin>:
    1c38:	9f 93       	push	r25
    1c3a:	1e df       	rcall	.-452    	; 0x1a78 <__fp_rempio2>
    1c3c:	0f 90       	pop	r0
    1c3e:	07 fc       	sbrc	r0, 7
    1c40:	ee 5f       	subi	r30, 0xFE	; 254
    1c42:	52 cf       	rjmp	.-348    	; 0x1ae8 <__fp_sinus>
    1c44:	11 f4       	brne	.+4      	; 0x1c4a <sin+0x12>
    1c46:	0e f4       	brtc	.+2      	; 0x1c4a <sin+0x12>
    1c48:	e0 ce       	rjmp	.-576    	; 0x1a0a <__fp_nan>
    1c4a:	41 c0       	rjmp	.+130    	; 0x1cce <__fp_mpack>

00001c4c <sqrt>:
    1c4c:	66 df       	rcall	.-308    	; 0x1b1a <__fp_splitA>
    1c4e:	d0 f3       	brcs	.-12     	; 0x1c44 <sin+0xc>
    1c50:	99 23       	and	r25, r25
    1c52:	d9 f3       	breq	.-10     	; 0x1c4a <sin+0x12>
    1c54:	ce f3       	brts	.-14     	; 0x1c48 <sin+0x10>
    1c56:	9f 57       	subi	r25, 0x7F	; 127
    1c58:	55 0b       	sbc	r21, r21
    1c5a:	87 ff       	sbrs	r24, 7
    1c5c:	46 d0       	rcall	.+140    	; 0x1cea <__fp_norm2>
    1c5e:	00 24       	eor	r0, r0
    1c60:	a0 e6       	ldi	r26, 0x60	; 96
    1c62:	40 ea       	ldi	r20, 0xA0	; 160
    1c64:	90 01       	movw	r18, r0
    1c66:	80 58       	subi	r24, 0x80	; 128
    1c68:	56 95       	lsr	r21
    1c6a:	97 95       	ror	r25
    1c6c:	28 f4       	brcc	.+10     	; 0x1c78 <sqrt+0x2c>
    1c6e:	80 5c       	subi	r24, 0xC0	; 192
    1c70:	66 0f       	add	r22, r22
    1c72:	77 1f       	adc	r23, r23
    1c74:	88 1f       	adc	r24, r24
    1c76:	20 f0       	brcs	.+8      	; 0x1c80 <sqrt+0x34>
    1c78:	26 17       	cp	r18, r22
    1c7a:	37 07       	cpc	r19, r23
    1c7c:	48 07       	cpc	r20, r24
    1c7e:	30 f4       	brcc	.+12     	; 0x1c8c <sqrt+0x40>
    1c80:	62 1b       	sub	r22, r18
    1c82:	73 0b       	sbc	r23, r19
    1c84:	84 0b       	sbc	r24, r20
    1c86:	20 29       	or	r18, r0
    1c88:	31 29       	or	r19, r1
    1c8a:	4a 2b       	or	r20, r26
    1c8c:	a6 95       	lsr	r26
    1c8e:	17 94       	ror	r1
    1c90:	07 94       	ror	r0
    1c92:	20 25       	eor	r18, r0
    1c94:	31 25       	eor	r19, r1
    1c96:	4a 27       	eor	r20, r26
    1c98:	58 f7       	brcc	.-42     	; 0x1c70 <sqrt+0x24>
    1c9a:	66 0f       	add	r22, r22
    1c9c:	77 1f       	adc	r23, r23
    1c9e:	88 1f       	adc	r24, r24
    1ca0:	20 f0       	brcs	.+8      	; 0x1caa <sqrt+0x5e>
    1ca2:	26 17       	cp	r18, r22
    1ca4:	37 07       	cpc	r19, r23
    1ca6:	48 07       	cpc	r20, r24
    1ca8:	30 f4       	brcc	.+12     	; 0x1cb6 <sqrt+0x6a>
    1caa:	62 0b       	sbc	r22, r18
    1cac:	73 0b       	sbc	r23, r19
    1cae:	84 0b       	sbc	r24, r20
    1cb0:	20 0d       	add	r18, r0
    1cb2:	31 1d       	adc	r19, r1
    1cb4:	41 1d       	adc	r20, r1
    1cb6:	a0 95       	com	r26
    1cb8:	81 f7       	brne	.-32     	; 0x1c9a <sqrt+0x4e>
    1cba:	b9 01       	movw	r22, r18
    1cbc:	84 2f       	mov	r24, r20
    1cbe:	91 58       	subi	r25, 0x81	; 129
    1cc0:	88 0f       	add	r24, r24
    1cc2:	96 95       	lsr	r25
    1cc4:	87 95       	ror	r24
    1cc6:	08 95       	ret

00001cc8 <square>:
    1cc8:	9b 01       	movw	r18, r22
    1cca:	ac 01       	movw	r20, r24
    1ccc:	52 cf       	rjmp	.-348    	; 0x1b72 <__mulsf3>

00001cce <__fp_mpack>:
    1cce:	9f 3f       	cpi	r25, 0xFF	; 255
    1cd0:	31 f0       	breq	.+12     	; 0x1cde <__fp_mpack_finite+0xc>

00001cd2 <__fp_mpack_finite>:
    1cd2:	91 50       	subi	r25, 0x01	; 1
    1cd4:	20 f4       	brcc	.+8      	; 0x1cde <__fp_mpack_finite+0xc>
    1cd6:	87 95       	ror	r24
    1cd8:	77 95       	ror	r23
    1cda:	67 95       	ror	r22
    1cdc:	b7 95       	ror	r27
    1cde:	88 0f       	add	r24, r24
    1ce0:	91 1d       	adc	r25, r1
    1ce2:	96 95       	lsr	r25
    1ce4:	87 95       	ror	r24
    1ce6:	97 f9       	bld	r25, 7
    1ce8:	08 95       	ret

00001cea <__fp_norm2>:
    1cea:	91 50       	subi	r25, 0x01	; 1
    1cec:	50 40       	sbci	r21, 0x00	; 0
    1cee:	66 0f       	add	r22, r22
    1cf0:	77 1f       	adc	r23, r23
    1cf2:	88 1f       	adc	r24, r24
    1cf4:	d2 f7       	brpl	.-12     	; 0x1cea <__fp_norm2>
    1cf6:	08 95       	ret

00001cf8 <__fp_powsodd>:
    1cf8:	9f 93       	push	r25
    1cfa:	8f 93       	push	r24
    1cfc:	7f 93       	push	r23
    1cfe:	6f 93       	push	r22
    1d00:	ff 93       	push	r31
    1d02:	ef 93       	push	r30
    1d04:	9b 01       	movw	r18, r22
    1d06:	ac 01       	movw	r20, r24
    1d08:	34 df       	rcall	.-408    	; 0x1b72 <__mulsf3>
    1d0a:	ef 91       	pop	r30
    1d0c:	ff 91       	pop	r31
    1d0e:	80 de       	rcall	.-768    	; 0x1a10 <__fp_powser>
    1d10:	2f 91       	pop	r18
    1d12:	3f 91       	pop	r19
    1d14:	4f 91       	pop	r20
    1d16:	5f 91       	pop	r21
    1d18:	2c cf       	rjmp	.-424    	; 0x1b72 <__mulsf3>

00001d1a <itoa>:
    1d1a:	fb 01       	movw	r30, r22
    1d1c:	9f 01       	movw	r18, r30
    1d1e:	e8 94       	clt
    1d20:	42 30       	cpi	r20, 0x02	; 2
    1d22:	c4 f0       	brlt	.+48     	; 0x1d54 <itoa+0x3a>
    1d24:	45 32       	cpi	r20, 0x25	; 37
    1d26:	b4 f4       	brge	.+44     	; 0x1d54 <itoa+0x3a>
    1d28:	4a 30       	cpi	r20, 0x0A	; 10
    1d2a:	29 f4       	brne	.+10     	; 0x1d36 <itoa+0x1c>
    1d2c:	97 fb       	bst	r25, 7
    1d2e:	1e f4       	brtc	.+6      	; 0x1d36 <itoa+0x1c>
    1d30:	90 95       	com	r25
    1d32:	81 95       	neg	r24
    1d34:	9f 4f       	sbci	r25, 0xFF	; 255
    1d36:	64 2f       	mov	r22, r20
    1d38:	77 27       	eor	r23, r23
    1d3a:	0e 94 be 0e 	call	0x1d7c	; 0x1d7c <__udivmodhi4>
    1d3e:	80 5d       	subi	r24, 0xD0	; 208
    1d40:	8a 33       	cpi	r24, 0x3A	; 58
    1d42:	0c f0       	brlt	.+2      	; 0x1d46 <itoa+0x2c>
    1d44:	89 5d       	subi	r24, 0xD9	; 217
    1d46:	81 93       	st	Z+, r24
    1d48:	cb 01       	movw	r24, r22
    1d4a:	00 97       	sbiw	r24, 0x00	; 0
    1d4c:	a1 f7       	brne	.-24     	; 0x1d36 <itoa+0x1c>
    1d4e:	16 f4       	brtc	.+4      	; 0x1d54 <itoa+0x3a>
    1d50:	5d e2       	ldi	r21, 0x2D	; 45
    1d52:	51 93       	st	Z+, r21
    1d54:	10 82       	st	Z, r1
    1d56:	c9 01       	movw	r24, r18
    1d58:	0c 94 ae 0e 	jmp	0x1d5c	; 0x1d5c <strrev>

00001d5c <strrev>:
    1d5c:	dc 01       	movw	r26, r24
    1d5e:	fc 01       	movw	r30, r24
    1d60:	67 2f       	mov	r22, r23
    1d62:	71 91       	ld	r23, Z+
    1d64:	77 23       	and	r23, r23
    1d66:	e1 f7       	brne	.-8      	; 0x1d60 <strrev+0x4>
    1d68:	32 97       	sbiw	r30, 0x02	; 2
    1d6a:	04 c0       	rjmp	.+8      	; 0x1d74 <strrev+0x18>
    1d6c:	7c 91       	ld	r23, X
    1d6e:	6d 93       	st	X+, r22
    1d70:	70 83       	st	Z, r23
    1d72:	62 91       	ld	r22, -Z
    1d74:	ae 17       	cp	r26, r30
    1d76:	bf 07       	cpc	r27, r31
    1d78:	c8 f3       	brcs	.-14     	; 0x1d6c <strrev+0x10>
    1d7a:	08 95       	ret

00001d7c <__udivmodhi4>:
    1d7c:	aa 1b       	sub	r26, r26
    1d7e:	bb 1b       	sub	r27, r27
    1d80:	51 e1       	ldi	r21, 0x11	; 17
    1d82:	07 c0       	rjmp	.+14     	; 0x1d92 <__udivmodhi4_ep>

00001d84 <__udivmodhi4_loop>:
    1d84:	aa 1f       	adc	r26, r26
    1d86:	bb 1f       	adc	r27, r27
    1d88:	a6 17       	cp	r26, r22
    1d8a:	b7 07       	cpc	r27, r23
    1d8c:	10 f0       	brcs	.+4      	; 0x1d92 <__udivmodhi4_ep>
    1d8e:	a6 1b       	sub	r26, r22
    1d90:	b7 0b       	sbc	r27, r23

00001d92 <__udivmodhi4_ep>:
    1d92:	88 1f       	adc	r24, r24
    1d94:	99 1f       	adc	r25, r25
    1d96:	5a 95       	dec	r21
    1d98:	a9 f7       	brne	.-22     	; 0x1d84 <__udivmodhi4_loop>
    1d9a:	80 95       	com	r24
    1d9c:	90 95       	com	r25
    1d9e:	bc 01       	movw	r22, r24
    1da0:	cd 01       	movw	r24, r26
    1da2:	08 95       	ret

00001da4 <_exit>:
    1da4:	f8 94       	cli

00001da6 <__stop_program>:
    1da6:	ff cf       	rjmp	.-2      	; 0x1da6 <__stop_program>
