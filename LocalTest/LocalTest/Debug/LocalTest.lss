
LocalTest.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000014  00800100  00002e9c  00002f30  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00002e9c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000000b7  00800114  00800114  00002f44  2**0
                  ALLOC
  3 .stab         00004068  00000000  00000000  00002f44  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      000012b9  00000000  00000000  00006fac  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      0000002f  00000000  00000000  00008265  2**0
                  CONTENTS, READONLY
  6 .debug_aranges 000002b8  00000000  00000000  00008294  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00002ae6  00000000  00000000  0000854c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00000ae4  00000000  00000000  0000b032  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   000012a5  00000000  00000000  0000bb16  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000904  00000000  00000000  0000cdbc  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    000008c7  00000000  00000000  0000d6c0  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    0000323a  00000000  00000000  0000df87  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 000002c0  00000000  00000000  000111c1  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__ctors_end>
       4:	0c 94 06 01 	jmp	0x20c	; 0x20c <__bad_interrupt>
       8:	0c 94 06 01 	jmp	0x20c	; 0x20c <__bad_interrupt>
       c:	0c 94 62 07 	jmp	0xec4	; 0xec4 <__vector_3>
      10:	0c 94 06 01 	jmp	0x20c	; 0x20c <__bad_interrupt>
      14:	0c 94 06 01 	jmp	0x20c	; 0x20c <__bad_interrupt>
      18:	0c 94 06 01 	jmp	0x20c	; 0x20c <__bad_interrupt>
      1c:	0c 94 06 01 	jmp	0x20c	; 0x20c <__bad_interrupt>
      20:	0c 94 06 01 	jmp	0x20c	; 0x20c <__bad_interrupt>
      24:	0c 94 06 01 	jmp	0x20c	; 0x20c <__bad_interrupt>
      28:	0c 94 17 0f 	jmp	0x1e2e	; 0x1e2e <__vector_10>
      2c:	0c 94 55 0f 	jmp	0x1eaa	; 0x1eaa <__vector_11>
      30:	0c 94 06 01 	jmp	0x20c	; 0x20c <__bad_interrupt>
      34:	0c 94 06 01 	jmp	0x20c	; 0x20c <__bad_interrupt>
      38:	0c 94 06 01 	jmp	0x20c	; 0x20c <__bad_interrupt>
      3c:	0c 94 06 01 	jmp	0x20c	; 0x20c <__bad_interrupt>
      40:	0c 94 06 01 	jmp	0x20c	; 0x20c <__bad_interrupt>
      44:	0c 94 06 01 	jmp	0x20c	; 0x20c <__bad_interrupt>
      48:	0c 94 06 01 	jmp	0x20c	; 0x20c <__bad_interrupt>
      4c:	0c 94 06 01 	jmp	0x20c	; 0x20c <__bad_interrupt>
      50:	0c 94 06 01 	jmp	0x20c	; 0x20c <__bad_interrupt>
      54:	0c 94 06 01 	jmp	0x20c	; 0x20c <__bad_interrupt>
      58:	0c 94 06 01 	jmp	0x20c	; 0x20c <__bad_interrupt>
      5c:	0c 94 06 01 	jmp	0x20c	; 0x20c <__bad_interrupt>
      60:	0c 94 06 01 	jmp	0x20c	; 0x20c <__bad_interrupt>
      64:	0c 94 06 01 	jmp	0x20c	; 0x20c <__bad_interrupt>
      68:	0c 94 06 01 	jmp	0x20c	; 0x20c <__bad_interrupt>
      6c:	0c 94 06 01 	jmp	0x20c	; 0x20c <__bad_interrupt>
      70:	0c 94 06 01 	jmp	0x20c	; 0x20c <__bad_interrupt>
      74:	0c 94 94 07 	jmp	0xf28	; 0xf28 <__vector_29>
      78:	0c 94 06 01 	jmp	0x20c	; 0x20c <__bad_interrupt>
      7c:	0c 94 06 01 	jmp	0x20c	; 0x20c <__bad_interrupt>
      80:	0c 94 06 01 	jmp	0x20c	; 0x20c <__bad_interrupt>
      84:	0c 94 06 01 	jmp	0x20c	; 0x20c <__bad_interrupt>
      88:	0c 94 06 01 	jmp	0x20c	; 0x20c <__bad_interrupt>
      8c:	0c 94 06 01 	jmp	0x20c	; 0x20c <__bad_interrupt>
      90:	0c 94 06 01 	jmp	0x20c	; 0x20c <__bad_interrupt>
      94:	0c 94 06 01 	jmp	0x20c	; 0x20c <__bad_interrupt>
      98:	0c 94 06 01 	jmp	0x20c	; 0x20c <__bad_interrupt>
      9c:	0c 94 06 01 	jmp	0x20c	; 0x20c <__bad_interrupt>
      a0:	0c 94 06 01 	jmp	0x20c	; 0x20c <__bad_interrupt>
      a4:	0c 94 06 01 	jmp	0x20c	; 0x20c <__bad_interrupt>
      a8:	0c 94 06 01 	jmp	0x20c	; 0x20c <__bad_interrupt>
      ac:	08 4a       	sbci	r16, 0xA8	; 168
      ae:	d7 3b       	cpi	r29, 0xB7	; 183
      b0:	3b ce       	rjmp	.-906    	; 0xfffffd28 <__eeprom_end+0xff7efd28>
      b2:	01 6e       	ori	r16, 0xE1	; 225
      b4:	84 bc       	out	0x24, r8	; 36
      b6:	bf fd       	.word	0xfdbf	; ????
      b8:	c1 2f       	mov	r28, r17
      ba:	3d 6c       	ori	r19, 0xCD	; 205
      bc:	74 31       	cpi	r23, 0x14	; 20
      be:	9a bd       	out	0x2a, r25	; 42
      c0:	56 83       	std	Z+6, r21	; 0x06
      c2:	3d da       	rcall	.-2950   	; 0xfffff53e <__eeprom_end+0xff7ef53e>
      c4:	3d 00       	.word	0x003d	; ????
      c6:	c7 7f       	andi	r28, 0xF7	; 247
      c8:	11 be       	out	0x31, r1	; 49
      ca:	d9 e4       	ldi	r29, 0x49	; 73
      cc:	bb 4c       	sbci	r27, 0xCB	; 203
      ce:	3e 91       	ld	r19, -X
      d0:	6b aa       	std	Y+51, r6	; 0x33
      d2:	aa be       	out	0x3a, r10	; 58
      d4:	00 00       	nop
      d6:	00 80       	ld	r0, Z
      d8:	3f 07       	cpc	r19, r31
      da:	63 42       	sbci	r22, 0x23	; 35
      dc:	36 b7       	in	r19, 0x36	; 54
      de:	9b d8       	rcall	.-3786   	; 0xfffff216 <__eeprom_end+0xff7ef216>
      e0:	a7 1a       	sub	r10, r23
      e2:	39 68       	ori	r19, 0x89	; 137
      e4:	56 18       	sub	r5, r6
      e6:	ae ba       	out	0x1e, r10	; 30
      e8:	ab 55       	subi	r26, 0x5B	; 91
      ea:	8c 1d       	adc	r24, r12
      ec:	3c b7       	in	r19, 0x3c	; 60
      ee:	cc 57       	subi	r28, 0x7C	; 124
      f0:	63 bd       	out	0x23, r22	; 35
      f2:	6d ed       	ldi	r22, 0xDD	; 221
      f4:	fd 75       	andi	r31, 0x5D	; 93
      f6:	3e f6       	brtc	.-114    	; 0x86 <__SREG__+0x47>
      f8:	17 72       	andi	r17, 0x27	; 39
      fa:	31 bf       	out	0x31, r19	; 49
      fc:	00 00       	nop
      fe:	00 80       	ld	r0, Z
     100:	3f 05       	cpc	r19, r15
     102:	a8 4c       	sbci	r26, 0xC8	; 200
     104:	cd b2       	in	r12, 0x1d	; 29
     106:	d4 4e       	sbci	r29, 0xE4	; 228
     108:	b9 38       	cpi	r27, 0x89	; 137
     10a:	36 a9       	ldd	r19, Z+54	; 0x36
     10c:	02 0c       	add	r0, r2
     10e:	50 b9       	out	0x00, r21	; 0
     110:	91 86       	std	Z+9, r9	; 0x09
     112:	88 08       	sbc	r8, r8
     114:	3c a6       	std	Y+44, r3	; 0x2c
     116:	aa aa       	std	Y+50, r10	; 0x32
     118:	2a be       	out	0x3a, r2	; 58
     11a:	00 00       	nop
     11c:	00 80       	ld	r0, Z
     11e:	3f 00       	.word	0x003f	; ????

0000011f <descriptor_list>:
     11f:	00 01 00 00 53 01 12 00 02 00 00 65 01 43 00 03     ....S......e.C..
     12f:	00 00 a8 01 04 01 03 09 04 ac 01 12 02 03 09 04     ................
     13f:	c0 01 06 03 03 09 04 c8 01 08                       ..........

00000149 <endpoint_config_table>:
     149:	00 01 c1 12 01 80 36 01 81 36                       ......6..6

00000153 <device_descriptor>:
     153:	12 01 00 02 02 00 00 10 c0 16 7a 04 00 01 01 02     ..........z.....
     163:	03 01                                               ..

00000165 <config1_descriptor>:
     165:	09 02 43 00 02 01 00 c0 32 09 04 00 00 01 02 02     ..C.....2.......
     175:	01 00 05 24 00 10 01 05 24 01 01 01 04 24 02 06     ...$....$....$..
     185:	05 24 06 00 01 07 05 82 03 10 00 40 09 04 01 00     .$.........@....
     195:	02 0a 00 00 00 07 05 03 02 40 00 00 07 05 84 02     .........@......
     1a5:	40 00 00                                            @..

000001a8 <string0>:
     1a8:	04 03 09 04                                         ....

000001ac <string1>:
     1ac:	12 03 4a 00 2e 00 20 00 46 00 69 00 65 00 6e 00     ..J... .F.i.e.n.
     1bc:	65 00 00 00                                         e...

000001c0 <string2>:
     1c0:	06 03 4d 00 32 00 00 00                             ..M.2...

000001c8 <string3>:
     1c8:	08 03 34 00 31 00 30 00 00 00                       ..4.1.0...

000001d2 <__ctors_end>:
     1d2:	11 24       	eor	r1, r1
     1d4:	1f be       	out	0x3f, r1	; 63
     1d6:	cf ef       	ldi	r28, 0xFF	; 255
     1d8:	da e0       	ldi	r29, 0x0A	; 10
     1da:	de bf       	out	0x3e, r29	; 62
     1dc:	cd bf       	out	0x3d, r28	; 61

000001de <__do_copy_data>:
     1de:	11 e0       	ldi	r17, 0x01	; 1
     1e0:	a0 e0       	ldi	r26, 0x00	; 0
     1e2:	b1 e0       	ldi	r27, 0x01	; 1
     1e4:	ec e9       	ldi	r30, 0x9C	; 156
     1e6:	fe e2       	ldi	r31, 0x2E	; 46
     1e8:	02 c0       	rjmp	.+4      	; 0x1ee <__do_copy_data+0x10>
     1ea:	05 90       	lpm	r0, Z+
     1ec:	0d 92       	st	X+, r0
     1ee:	a4 31       	cpi	r26, 0x14	; 20
     1f0:	b1 07       	cpc	r27, r17
     1f2:	d9 f7       	brne	.-10     	; 0x1ea <__do_copy_data+0xc>

000001f4 <__do_clear_bss>:
     1f4:	21 e0       	ldi	r18, 0x01	; 1
     1f6:	a4 e1       	ldi	r26, 0x14	; 20
     1f8:	b1 e0       	ldi	r27, 0x01	; 1
     1fa:	01 c0       	rjmp	.+2      	; 0x1fe <.do_clear_bss_start>

000001fc <.do_clear_bss_loop>:
     1fc:	1d 92       	st	X+, r1

000001fe <.do_clear_bss_start>:
     1fe:	ab 3c       	cpi	r26, 0xCB	; 203
     200:	b2 07       	cpc	r27, r18
     202:	e1 f7       	brne	.-8      	; 0x1fc <.do_clear_bss_loop>
     204:	0e 94 f8 05 	call	0xbf0	; 0xbf0 <main>
     208:	0c 94 4c 17 	jmp	0x2e98	; 0x2e98 <_exit>

0000020c <__bad_interrupt>:
     20c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000210 <chooseInput>:

int i = 0;
int ADCarr[7] = {0, 0, 0, 0, 0, 0, 0};

void chooseInput(int i) {
	switch (i) {
     210:	83 30       	cpi	r24, 0x03	; 3
     212:	91 05       	cpc	r25, r1
     214:	09 f4       	brne	.+2      	; 0x218 <chooseInput+0x8>
     216:	45 c0       	rjmp	.+138    	; 0x2a2 <chooseInput+0x92>
     218:	3c f4       	brge	.+14     	; 0x228 <chooseInput+0x18>
     21a:	81 30       	cpi	r24, 0x01	; 1
     21c:	91 05       	cpc	r25, r1
     21e:	f9 f0       	breq	.+62     	; 0x25e <chooseInput+0x4e>
     220:	7c f5       	brge	.+94     	; 0x280 <chooseInput+0x70>
     222:	89 2b       	or	r24, r25
     224:	59 f0       	breq	.+22     	; 0x23c <chooseInput+0x2c>
     226:	08 95       	ret
     228:	85 30       	cpi	r24, 0x05	; 5
     22a:	91 05       	cpc	r25, r1
     22c:	09 f4       	brne	.+2      	; 0x230 <chooseInput+0x20>
     22e:	5b c0       	rjmp	.+182    	; 0x2e6 <chooseInput+0xd6>
     230:	0c f4       	brge	.+2      	; 0x234 <chooseInput+0x24>
     232:	48 c0       	rjmp	.+144    	; 0x2c4 <chooseInput+0xb4>
     234:	06 97       	sbiw	r24, 0x06	; 6
     236:	09 f0       	breq	.+2      	; 0x23a <chooseInput+0x2a>
     238:	77 c0       	rjmp	.+238    	; 0x328 <chooseInput+0x118>
     23a:	66 c0       	rjmp	.+204    	; 0x308 <chooseInput+0xf8>
		case 0:
		clear(ADCSRB, MUX5);//Set analog input (F0)
     23c:	eb e7       	ldi	r30, 0x7B	; 123
     23e:	f0 e0       	ldi	r31, 0x00	; 0
     240:	80 81       	ld	r24, Z
     242:	8f 7d       	andi	r24, 0xDF	; 223
     244:	80 83       	st	Z, r24
		clear(ADMUX, MUX2);	//^
     246:	ec e7       	ldi	r30, 0x7C	; 124
     248:	f0 e0       	ldi	r31, 0x00	; 0
     24a:	80 81       	ld	r24, Z
     24c:	8b 7f       	andi	r24, 0xFB	; 251
     24e:	80 83       	st	Z, r24
		clear(ADMUX, MUX1);	//^
     250:	80 81       	ld	r24, Z
     252:	8d 7f       	andi	r24, 0xFD	; 253
     254:	80 83       	st	Z, r24
		clear(ADMUX, MUX0);	//^
     256:	80 81       	ld	r24, Z
     258:	8e 7f       	andi	r24, 0xFE	; 254
     25a:	80 83       	st	Z, r24

		break;
     25c:	08 95       	ret
		case 1:
		clear(ADCSRB, MUX5);//Set analog input (F1)
     25e:	eb e7       	ldi	r30, 0x7B	; 123
     260:	f0 e0       	ldi	r31, 0x00	; 0
     262:	80 81       	ld	r24, Z
     264:	8f 7d       	andi	r24, 0xDF	; 223
     266:	80 83       	st	Z, r24
		clear(ADMUX, MUX2);	//^
     268:	ec e7       	ldi	r30, 0x7C	; 124
     26a:	f0 e0       	ldi	r31, 0x00	; 0
     26c:	80 81       	ld	r24, Z
     26e:	8b 7f       	andi	r24, 0xFB	; 251
     270:	80 83       	st	Z, r24
		clear(ADMUX, MUX1);	//^
     272:	80 81       	ld	r24, Z
     274:	8d 7f       	andi	r24, 0xFD	; 253
     276:	80 83       	st	Z, r24
		set(ADMUX, MUX0);	//^
     278:	80 81       	ld	r24, Z
     27a:	81 60       	ori	r24, 0x01	; 1
     27c:	80 83       	st	Z, r24

		break;
     27e:	08 95       	ret
		case 2:
		clear(ADCSRB, MUX5);//Set analog input (F4)
     280:	eb e7       	ldi	r30, 0x7B	; 123
     282:	f0 e0       	ldi	r31, 0x00	; 0
     284:	80 81       	ld	r24, Z
     286:	8f 7d       	andi	r24, 0xDF	; 223
     288:	80 83       	st	Z, r24
		set(ADMUX, MUX2);	//^
     28a:	ec e7       	ldi	r30, 0x7C	; 124
     28c:	f0 e0       	ldi	r31, 0x00	; 0
     28e:	80 81       	ld	r24, Z
     290:	84 60       	ori	r24, 0x04	; 4
     292:	80 83       	st	Z, r24
		clear(ADMUX, MUX1);	//^
     294:	80 81       	ld	r24, Z
     296:	8d 7f       	andi	r24, 0xFD	; 253
     298:	80 83       	st	Z, r24
		clear(ADMUX, MUX0);	//^
     29a:	80 81       	ld	r24, Z
     29c:	8e 7f       	andi	r24, 0xFE	; 254
     29e:	80 83       	st	Z, r24

		break;
     2a0:	08 95       	ret
		case 3:

		clear(ADCSRB, MUX5);//Set analog input (F5)
     2a2:	eb e7       	ldi	r30, 0x7B	; 123
     2a4:	f0 e0       	ldi	r31, 0x00	; 0
     2a6:	80 81       	ld	r24, Z
     2a8:	8f 7d       	andi	r24, 0xDF	; 223
     2aa:	80 83       	st	Z, r24
		set(ADMUX, MUX2);	//^
     2ac:	ec e7       	ldi	r30, 0x7C	; 124
     2ae:	f0 e0       	ldi	r31, 0x00	; 0
     2b0:	80 81       	ld	r24, Z
     2b2:	84 60       	ori	r24, 0x04	; 4
     2b4:	80 83       	st	Z, r24
		clear(ADMUX, MUX1);	//^
     2b6:	80 81       	ld	r24, Z
     2b8:	8d 7f       	andi	r24, 0xFD	; 253
     2ba:	80 83       	st	Z, r24
		set(ADMUX, MUX0);	//^
     2bc:	80 81       	ld	r24, Z
     2be:	81 60       	ori	r24, 0x01	; 1
     2c0:	80 83       	st	Z, r24
		break;
     2c2:	08 95       	ret
		case 4:
		clear(ADCSRB, MUX5);//Set analog input (F6)
     2c4:	eb e7       	ldi	r30, 0x7B	; 123
     2c6:	f0 e0       	ldi	r31, 0x00	; 0
     2c8:	80 81       	ld	r24, Z
     2ca:	8f 7d       	andi	r24, 0xDF	; 223
     2cc:	80 83       	st	Z, r24
		set(ADMUX, MUX2);	//^
     2ce:	ec e7       	ldi	r30, 0x7C	; 124
     2d0:	f0 e0       	ldi	r31, 0x00	; 0
     2d2:	80 81       	ld	r24, Z
     2d4:	84 60       	ori	r24, 0x04	; 4
     2d6:	80 83       	st	Z, r24
		set(ADMUX, MUX1);	//^
     2d8:	80 81       	ld	r24, Z
     2da:	82 60       	ori	r24, 0x02	; 2
     2dc:	80 83       	st	Z, r24
		clear(ADMUX, MUX0);	//^
     2de:	80 81       	ld	r24, Z
     2e0:	8e 7f       	andi	r24, 0xFE	; 254
     2e2:	80 83       	st	Z, r24
		break;
     2e4:	08 95       	ret
		case 5:
		set(ADCSRB, MUX5);//Set analog input (D4)
     2e6:	eb e7       	ldi	r30, 0x7B	; 123
     2e8:	f0 e0       	ldi	r31, 0x00	; 0
     2ea:	80 81       	ld	r24, Z
     2ec:	80 62       	ori	r24, 0x20	; 32
     2ee:	80 83       	st	Z, r24
		clear(ADMUX, MUX2);	//^
     2f0:	ec e7       	ldi	r30, 0x7C	; 124
     2f2:	f0 e0       	ldi	r31, 0x00	; 0
     2f4:	80 81       	ld	r24, Z
     2f6:	8b 7f       	andi	r24, 0xFB	; 251
     2f8:	80 83       	st	Z, r24
		clear(ADMUX, MUX1);	//^
     2fa:	80 81       	ld	r24, Z
     2fc:	8d 7f       	andi	r24, 0xFD	; 253
     2fe:	80 83       	st	Z, r24
		clear(ADMUX, MUX0);	//^
     300:	80 81       	ld	r24, Z
     302:	8e 7f       	andi	r24, 0xFE	; 254
     304:	80 83       	st	Z, r24
		break;
     306:	08 95       	ret
		case 6:
		set(ADCSRB, MUX5);//Set analog input (D6)
     308:	eb e7       	ldi	r30, 0x7B	; 123
     30a:	f0 e0       	ldi	r31, 0x00	; 0
     30c:	80 81       	ld	r24, Z
     30e:	80 62       	ori	r24, 0x20	; 32
     310:	80 83       	st	Z, r24
		clear(ADMUX, MUX2);	//^
     312:	ec e7       	ldi	r30, 0x7C	; 124
     314:	f0 e0       	ldi	r31, 0x00	; 0
     316:	80 81       	ld	r24, Z
     318:	8b 7f       	andi	r24, 0xFB	; 251
     31a:	80 83       	st	Z, r24
		clear(ADMUX, MUX1);	//^
     31c:	80 81       	ld	r24, Z
     31e:	8d 7f       	andi	r24, 0xFD	; 253
     320:	80 83       	st	Z, r24
		set(ADMUX, MUX0);	//^
     322:	80 81       	ld	r24, Z
     324:	81 60       	ori	r24, 0x01	; 1
     326:	80 83       	st	Z, r24
     328:	08 95       	ret

0000032a <getADC>:
int ADC5 = 0;
int ADC6 = 0;
int conversion = 0;

void getADC() {
	if (conversion) {
     32a:	80 91 14 01 	lds	r24, 0x0114
     32e:	90 91 15 01 	lds	r25, 0x0115
     332:	89 2b       	or	r24, r25
     334:	09 f4       	brne	.+2      	; 0x338 <getADC+0xe>
     336:	55 c0       	rjmp	.+170    	; 0x3e2 <getADC+0xb8>
		switch (flag) {
     338:	80 91 32 01 	lds	r24, 0x0132
     33c:	90 91 33 01 	lds	r25, 0x0133
     340:	83 30       	cpi	r24, 0x03	; 3
     342:	91 05       	cpc	r25, r1
     344:	59 f1       	breq	.+86     	; 0x39c <getADC+0x72>
     346:	3c f4       	brge	.+14     	; 0x356 <getADC+0x2c>
     348:	81 30       	cpi	r24, 0x01	; 1
     34a:	91 05       	cpc	r25, r1
     34c:	a9 f0       	breq	.+42     	; 0x378 <getADC+0x4e>
     34e:	ec f4       	brge	.+58     	; 0x38a <getADC+0x60>
     350:	89 2b       	or	r24, r25
     352:	49 f0       	breq	.+18     	; 0x366 <getADC+0x3c>
     354:	46 c0       	rjmp	.+140    	; 0x3e2 <getADC+0xb8>
     356:	85 30       	cpi	r24, 0x05	; 5
     358:	91 05       	cpc	r25, r1
     35a:	91 f1       	breq	.+100    	; 0x3c0 <getADC+0x96>
     35c:	44 f1       	brlt	.+80     	; 0x3ae <getADC+0x84>
     35e:	06 97       	sbiw	r24, 0x06	; 6
     360:	09 f0       	breq	.+2      	; 0x364 <getADC+0x3a>
     362:	3f c0       	rjmp	.+126    	; 0x3e2 <getADC+0xb8>
     364:	36 c0       	rjmp	.+108    	; 0x3d2 <getADC+0xa8>
			case 0:
			ADC0 = ADC;
     366:	80 91 78 00 	lds	r24, 0x0078
     36a:	90 91 79 00 	lds	r25, 0x0079
     36e:	90 93 23 01 	sts	0x0123, r25
     372:	80 93 22 01 	sts	0x0122, r24
			break;
     376:	35 c0       	rjmp	.+106    	; 0x3e2 <getADC+0xb8>
			case 1:
			ADC1 = ADC;
     378:	80 91 78 00 	lds	r24, 0x0078
     37c:	90 91 79 00 	lds	r25, 0x0079
     380:	90 93 21 01 	sts	0x0121, r25
     384:	80 93 20 01 	sts	0x0120, r24
			break;
     388:	2c c0       	rjmp	.+88     	; 0x3e2 <getADC+0xb8>
			case 2:
			ADC2 = ADC;
     38a:	80 91 78 00 	lds	r24, 0x0078
     38e:	90 91 79 00 	lds	r25, 0x0079
     392:	90 93 1f 01 	sts	0x011F, r25
     396:	80 93 1e 01 	sts	0x011E, r24
			break;
     39a:	23 c0       	rjmp	.+70     	; 0x3e2 <getADC+0xb8>
			case 3:
			ADC3 = ADC;
     39c:	80 91 78 00 	lds	r24, 0x0078
     3a0:	90 91 79 00 	lds	r25, 0x0079
     3a4:	90 93 1d 01 	sts	0x011D, r25
     3a8:	80 93 1c 01 	sts	0x011C, r24
			break;
     3ac:	1a c0       	rjmp	.+52     	; 0x3e2 <getADC+0xb8>
			case 4:
			ADC4 = ADC;
     3ae:	80 91 78 00 	lds	r24, 0x0078
     3b2:	90 91 79 00 	lds	r25, 0x0079
     3b6:	90 93 1b 01 	sts	0x011B, r25
     3ba:	80 93 1a 01 	sts	0x011A, r24
			break;
     3be:	11 c0       	rjmp	.+34     	; 0x3e2 <getADC+0xb8>
			case 5:
			ADC5 = ADC;
     3c0:	80 91 78 00 	lds	r24, 0x0078
     3c4:	90 91 79 00 	lds	r25, 0x0079
     3c8:	90 93 19 01 	sts	0x0119, r25
     3cc:	80 93 18 01 	sts	0x0118, r24
			break;
     3d0:	08 c0       	rjmp	.+16     	; 0x3e2 <getADC+0xb8>
			case 6:
			ADC6 = ADC;
     3d2:	80 91 78 00 	lds	r24, 0x0078
     3d6:	90 91 79 00 	lds	r25, 0x0079
     3da:	90 93 17 01 	sts	0x0117, r25
     3de:	80 93 16 01 	sts	0x0116, r24
			break;
		}
	}
	clear(ADCSRA, ADEN);	//Enable/Start conversion
     3e2:	ea e7       	ldi	r30, 0x7A	; 122
     3e4:	f0 e0       	ldi	r31, 0x00	; 0
     3e6:	80 81       	ld	r24, Z
     3e8:	8f 77       	andi	r24, 0x7F	; 127
     3ea:	80 83       	st	Z, r24
	clear(ADCSRA, ADSC);	//^
     3ec:	80 81       	ld	r24, Z
     3ee:	8f 7b       	andi	r24, 0xBF	; 191
     3f0:	80 83       	st	Z, r24
	clear(ADCSRA, ADATE);
     3f2:	80 81       	ld	r24, Z
     3f4:	8f 7d       	andi	r24, 0xDF	; 223
     3f6:	80 83       	st	Z, r24
	clear(ADCSRA, ADIF);
     3f8:	80 81       	ld	r24, Z
     3fa:	8f 7e       	andi	r24, 0xEF	; 239
     3fc:	80 83       	st	Z, r24
	if (flag >= 0 && flag < 7) {
     3fe:	80 91 32 01 	lds	r24, 0x0132
     402:	90 91 33 01 	lds	r25, 0x0133
     406:	87 30       	cpi	r24, 0x07	; 7
     408:	91 05       	cpc	r25, r1
     40a:	58 f4       	brcc	.+22     	; 0x422 <getADC+0xf8>
		flag = (flag + 1) % 7;
     40c:	01 96       	adiw	r24, 0x01	; 1
     40e:	67 e0       	ldi	r22, 0x07	; 7
     410:	70 e0       	ldi	r23, 0x00	; 0
     412:	0e 94 f3 16 	call	0x2de6	; 0x2de6 <__divmodhi4>
     416:	80 93 32 01 	sts	0x0132, r24
     41a:	90 93 33 01 	sts	0x0133, r25
		chooseInput(flag);
     41e:	0e 94 08 01 	call	0x210	; 0x210 <chooseInput>
	}
	set(ADCSRA, ADATE);	//Set trigger to free-running mode
     422:	ea e7       	ldi	r30, 0x7A	; 122
     424:	f0 e0       	ldi	r31, 0x00	; 0
     426:	80 81       	ld	r24, Z
     428:	80 62       	ori	r24, 0x20	; 32
     42a:	80 83       	st	Z, r24
	set(ADCSRA, ADEN);	//Enable/Start conversion
     42c:	80 81       	ld	r24, Z
     42e:	80 68       	ori	r24, 0x80	; 128
     430:	80 83       	st	Z, r24
	set(ADCSRA, ADSC);	//^
     432:	80 81       	ld	r24, Z
     434:	80 64       	ori	r24, 0x40	; 64
     436:	80 83       	st	Z, r24
	
	set(ADCSRA, ADIF);	//Enable reading results
     438:	80 81       	ld	r24, Z
     43a:	80 61       	ori	r24, 0x10	; 16
     43c:	80 83       	st	Z, r24
	conversion = 0;
     43e:	10 92 15 01 	sts	0x0115, r1
     442:	10 92 14 01 	sts	0x0114, r1
	ADCarr[0] = ADC0;
     446:	80 91 22 01 	lds	r24, 0x0122
     44a:	90 91 23 01 	lds	r25, 0x0123
     44e:	90 93 25 01 	sts	0x0125, r25
     452:	80 93 24 01 	sts	0x0124, r24
	ADCarr[1] = ADC1;
     456:	80 91 20 01 	lds	r24, 0x0120
     45a:	90 91 21 01 	lds	r25, 0x0121
     45e:	90 93 27 01 	sts	0x0127, r25
     462:	80 93 26 01 	sts	0x0126, r24
	ADCarr[2] = ADC2;
     466:	80 91 1e 01 	lds	r24, 0x011E
     46a:	90 91 1f 01 	lds	r25, 0x011F
     46e:	90 93 29 01 	sts	0x0129, r25
     472:	80 93 28 01 	sts	0x0128, r24
	ADCarr[3] = ADC3;
     476:	80 91 1c 01 	lds	r24, 0x011C
     47a:	90 91 1d 01 	lds	r25, 0x011D
     47e:	90 93 2b 01 	sts	0x012B, r25
     482:	80 93 2a 01 	sts	0x012A, r24
	ADCarr[4] = ADC4;
     486:	80 91 1a 01 	lds	r24, 0x011A
     48a:	90 91 1b 01 	lds	r25, 0x011B
     48e:	90 93 2d 01 	sts	0x012D, r25
     492:	80 93 2c 01 	sts	0x012C, r24
	ADCarr[5] = ADC5;
     496:	80 91 18 01 	lds	r24, 0x0118
     49a:	90 91 19 01 	lds	r25, 0x0119
     49e:	90 93 2f 01 	sts	0x012F, r25
     4a2:	80 93 2e 01 	sts	0x012E, r24
	ADCarr[6] = ADC6;
     4a6:	80 91 16 01 	lds	r24, 0x0116
     4aa:	90 91 17 01 	lds	r25, 0x0117
     4ae:	90 93 31 01 	sts	0x0131, r25
     4b2:	80 93 30 01 	sts	0x0130, r24
     4b6:	08 95       	ret

000004b8 <reportADC>:
	
	
	
}

void reportADC() {
     4b8:	cf 92       	push	r12
     4ba:	df 92       	push	r13
     4bc:	ef 92       	push	r14
     4be:	ff 92       	push	r15
     4c0:	cf 93       	push	r28
     4c2:	df 93       	push	r29
	set(DDRF,7);
     4c4:	87 9a       	sbi	0x10, 7	; 16
	m_red(ON);
     4c6:	6e 9a       	sbi	0x0d, 6	; 13
     4c8:	76 98       	cbi	0x0e, 6	; 14
	m_green(ON);
     4ca:	6a 9a       	sbi	0x0d, 2	; 13
     4cc:	72 98       	cbi	0x0e, 2	; 14

	m_usb_init(); // connect usb
     4ce:	0e 94 6b 0e 	call	0x1cd6	; 0x1cd6 <m_usb_init>
	while(!m_usb_isconnected());  //wait for connection
     4d2:	0e 94 84 0e 	call	0x1d08	; 0x1d08 <m_usb_isconnected>
     4d6:	88 23       	and	r24, r24
     4d8:	e1 f3       	breq	.-8      	; 0x4d2 <reportADC+0x1a>

	m_red(OFF);
     4da:	6e 9a       	sbi	0x0d, 6	; 13
     4dc:	76 9a       	sbi	0x0e, 6	; 14
	m_green(OFF);
     4de:	6a 9a       	sbi	0x0d, 2	; 13
     4e0:	72 9a       	sbi	0x0e, 2	; 14
	float diff = 0.0;

	
	
//while(1) {
	getADC();
     4e2:	0e 94 95 01 	call	0x32a	; 0x32a <getADC>
     4e6:	e4 e2       	ldi	r30, 0x24	; 36
     4e8:	f1 e0       	ldi	r31, 0x01	; 1
	index = 0;
	maxval = 0;
	//m_green(TOGGLE);
	for(int i = 0; i < 7; i++) {
     4ea:	80 e0       	ldi	r24, 0x00	; 0
     4ec:	90 e0       	ldi	r25, 0x00	; 0
	
	
//while(1) {
	getADC();
	index = 0;
	maxval = 0;
     4ee:	40 e0       	ldi	r20, 0x00	; 0
     4f0:	50 e0       	ldi	r21, 0x00	; 0

	
	
//while(1) {
	getADC();
	index = 0;
     4f2:	c0 e0       	ldi	r28, 0x00	; 0
     4f4:	d0 e0       	ldi	r29, 0x00	; 0
	maxval = 0;
	//m_green(TOGGLE);
	for(int i = 0; i < 7; i++) {
		if (ADCarr[i] > maxval) {
     4f6:	21 91       	ld	r18, Z+
     4f8:	31 91       	ld	r19, Z+
     4fa:	42 17       	cp	r20, r18
     4fc:	53 07       	cpc	r21, r19
     4fe:	14 f4       	brge	.+4      	; 0x504 <reportADC+0x4c>
			index = i;
			maxval = ADCarr[i];
     500:	a9 01       	movw	r20, r18
	getADC();
	index = 0;
	maxval = 0;
	//m_green(TOGGLE);
	for(int i = 0; i < 7; i++) {
		if (ADCarr[i] > maxval) {
     502:	ec 01       	movw	r28, r24
//while(1) {
	getADC();
	index = 0;
	maxval = 0;
	//m_green(TOGGLE);
	for(int i = 0; i < 7; i++) {
     504:	01 96       	adiw	r24, 0x01	; 1
     506:	87 30       	cpi	r24, 0x07	; 7
     508:	91 05       	cpc	r25, r1
     50a:	a9 f7       	brne	.-22     	; 0x4f6 <reportADC+0x3e>
		if (ADCarr[i] > maxval) {
			index = i;
			maxval = ADCarr[i];
		}
	}
	switch (index) {
     50c:	20 97       	sbiw	r28, 0x00	; 0
     50e:	29 f0       	breq	.+10     	; 0x51a <reportADC+0x62>
     510:	c6 30       	cpi	r28, 0x06	; 6
     512:	d1 05       	cpc	r29, r1
     514:	09 f0       	breq	.+2      	; 0x518 <reportADC+0x60>
     516:	4b c0       	rjmp	.+150    	; 0x5ae <reportADC+0xf6>
     518:	25 c0       	rjmp	.+74     	; 0x564 <reportADC+0xac>
		case 0:
		diff = ADCarr[0] - ADCarr[6];
     51a:	60 91 24 01 	lds	r22, 0x0124
     51e:	70 91 25 01 	lds	r23, 0x0125
     522:	80 91 30 01 	lds	r24, 0x0130
     526:	90 91 31 01 	lds	r25, 0x0131
     52a:	68 1b       	sub	r22, r24
     52c:	79 0b       	sbc	r23, r25
     52e:	88 27       	eor	r24, r24
     530:	77 fd       	sbrc	r23, 7
     532:	80 95       	com	r24
     534:	98 2f       	mov	r25, r24
     536:	0e 94 9d 14 	call	0x293a	; 0x293a <__floatsisf>
		deg = exp(-1.0*fabs(((float)diff))/400.0);
     53a:	dc 01       	movw	r26, r24
     53c:	cb 01       	movw	r24, r22
     53e:	bf 77       	andi	r27, 0x7F	; 127
     540:	bc 01       	movw	r22, r24
     542:	cd 01       	movw	r24, r26
     544:	90 58       	subi	r25, 0x80	; 128
     546:	20 e0       	ldi	r18, 0x00	; 0
     548:	30 e0       	ldi	r19, 0x00	; 0
     54a:	48 ec       	ldi	r20, 0xC8	; 200
     54c:	53 e4       	ldi	r21, 0x43	; 67
     54e:	0e 94 d1 13 	call	0x27a2	; 0x27a2 <__divsf3>
     552:	0e 94 3e 14 	call	0x287c	; 0x287c <exp>
     556:	6b 01       	movw	r12, r22
     558:	7c 01       	movw	r14, r24
		m_green(ON);
     55a:	6a 9a       	sbi	0x0d, 2	; 13
     55c:	72 98       	cbi	0x0e, 2	; 14
		m_red(OFF);
     55e:	6e 9a       	sbi	0x0d, 6	; 13
     560:	76 9a       	sbi	0x0e, 6	; 14
     562:	2c c0       	rjmp	.+88     	; 0x5bc <reportADC+0x104>
		break;
		case 6:
		diff = ADCarr[6] - ADCarr[0];
     564:	60 91 30 01 	lds	r22, 0x0130
     568:	70 91 31 01 	lds	r23, 0x0131
     56c:	80 91 24 01 	lds	r24, 0x0124
     570:	90 91 25 01 	lds	r25, 0x0125
     574:	68 1b       	sub	r22, r24
     576:	79 0b       	sbc	r23, r25
     578:	88 27       	eor	r24, r24
     57a:	77 fd       	sbrc	r23, 7
     57c:	80 95       	com	r24
     57e:	98 2f       	mov	r25, r24
     580:	0e 94 9d 14 	call	0x293a	; 0x293a <__floatsisf>
		deg = exp(-1.0*fabs(((float)diff))/400.0);
     584:	dc 01       	movw	r26, r24
     586:	cb 01       	movw	r24, r22
     588:	bf 77       	andi	r27, 0x7F	; 127
     58a:	bc 01       	movw	r22, r24
     58c:	cd 01       	movw	r24, r26
     58e:	90 58       	subi	r25, 0x80	; 128
     590:	20 e0       	ldi	r18, 0x00	; 0
     592:	30 e0       	ldi	r19, 0x00	; 0
     594:	48 ec       	ldi	r20, 0xC8	; 200
     596:	53 e4       	ldi	r21, 0x43	; 67
     598:	0e 94 d1 13 	call	0x27a2	; 0x27a2 <__divsf3>
     59c:	0e 94 3e 14 	call	0x287c	; 0x287c <exp>
     5a0:	6b 01       	movw	r12, r22
     5a2:	7c 01       	movw	r14, r24
		m_green(OFF);
     5a4:	6a 9a       	sbi	0x0d, 2	; 13
     5a6:	72 9a       	sbi	0x0e, 2	; 14
		m_red(ON);
     5a8:	6e 9a       	sbi	0x0d, 6	; 13
     5aa:	76 98       	cbi	0x0e, 6	; 14
     5ac:	07 c0       	rjmp	.+14     	; 0x5bc <reportADC+0x104>
		break;
		default:
		m_green(ON);
     5ae:	6a 9a       	sbi	0x0d, 2	; 13
     5b0:	72 98       	cbi	0x0e, 2	; 14
		m_red(ON);
     5b2:	6e 9a       	sbi	0x0d, 6	; 13
     5b4:	76 98       	cbi	0x0e, 6	; 14
	m_green(OFF);

	char rx_buffer; //computer interactions
	int index = 0;
	int maxval = 0;
	float deg = 0.0;
     5b6:	c1 2c       	mov	r12, r1
     5b8:	d1 2c       	mov	r13, r1
     5ba:	76 01       	movw	r14, r12
	//while(!m_usb_rx_available());  	//wait for an indication from the computer
		//rx_buffer = m_usb_rx_char();  	//grab the computer packet

		//m_usb_rx_flush();  				//clear buffer

		toggle(PORTF,7);
     5bc:	81 b3       	in	r24, 0x11	; 17
     5be:	80 58       	subi	r24, 0x80	; 128
     5c0:	81 bb       	out	0x11, r24	; 17
		//if(rx_buffer == 1) {  			//computer wants ir buffer
			//write ir buffer as concatenated hex:  i.e. f0f1f4f5
			m_usb_tx_int(ADCarr[0]);
     5c2:	80 91 24 01 	lds	r24, 0x0124
     5c6:	90 91 25 01 	lds	r25, 0x0125
     5ca:	0e 94 dd 10 	call	0x21ba	; 0x21ba <m_usb_tx_int>
			m_usb_tx_char('\t');
     5ce:	89 e0       	ldi	r24, 0x09	; 9
     5d0:	0e 94 bb 0e 	call	0x1d76	; 0x1d76 <m_usb_tx_char>
			m_usb_tx_int(ADCarr[1]);
     5d4:	80 91 26 01 	lds	r24, 0x0126
     5d8:	90 91 27 01 	lds	r25, 0x0127
     5dc:	0e 94 dd 10 	call	0x21ba	; 0x21ba <m_usb_tx_int>
			m_usb_tx_char('\t');
     5e0:	89 e0       	ldi	r24, 0x09	; 9
     5e2:	0e 94 bb 0e 	call	0x1d76	; 0x1d76 <m_usb_tx_char>
			m_usb_tx_int(ADCarr[2]);
     5e6:	80 91 28 01 	lds	r24, 0x0128
     5ea:	90 91 29 01 	lds	r25, 0x0129
     5ee:	0e 94 dd 10 	call	0x21ba	; 0x21ba <m_usb_tx_int>
			m_usb_tx_char('\t');
     5f2:	89 e0       	ldi	r24, 0x09	; 9
     5f4:	0e 94 bb 0e 	call	0x1d76	; 0x1d76 <m_usb_tx_char>
			m_usb_tx_int(ADCarr[3]);
     5f8:	80 91 2a 01 	lds	r24, 0x012A
     5fc:	90 91 2b 01 	lds	r25, 0x012B
     600:	0e 94 dd 10 	call	0x21ba	; 0x21ba <m_usb_tx_int>
			m_usb_tx_char('\t');
     604:	89 e0       	ldi	r24, 0x09	; 9
     606:	0e 94 bb 0e 	call	0x1d76	; 0x1d76 <m_usb_tx_char>
			m_usb_tx_int(ADCarr[4]);
     60a:	80 91 2c 01 	lds	r24, 0x012C
     60e:	90 91 2d 01 	lds	r25, 0x012D
     612:	0e 94 dd 10 	call	0x21ba	; 0x21ba <m_usb_tx_int>
			m_usb_tx_char('\t');
     616:	89 e0       	ldi	r24, 0x09	; 9
     618:	0e 94 bb 0e 	call	0x1d76	; 0x1d76 <m_usb_tx_char>
			m_usb_tx_int(ADCarr[5]);
     61c:	80 91 2e 01 	lds	r24, 0x012E
     620:	90 91 2f 01 	lds	r25, 0x012F
     624:	0e 94 dd 10 	call	0x21ba	; 0x21ba <m_usb_tx_int>
			m_usb_tx_char('\t');
     628:	89 e0       	ldi	r24, 0x09	; 9
     62a:	0e 94 bb 0e 	call	0x1d76	; 0x1d76 <m_usb_tx_char>
			m_usb_tx_int(ADCarr[6]);
     62e:	80 91 30 01 	lds	r24, 0x0130
     632:	90 91 31 01 	lds	r25, 0x0131
     636:	0e 94 dd 10 	call	0x21ba	; 0x21ba <m_usb_tx_int>
			m_usb_tx_char('\t');
     63a:	89 e0       	ldi	r24, 0x09	; 9
     63c:	0e 94 bb 0e 	call	0x1d76	; 0x1d76 <m_usb_tx_char>
			m_usb_tx_int(index);
     640:	ce 01       	movw	r24, r28
     642:	0e 94 dd 10 	call	0x21ba	; 0x21ba <m_usb_tx_int>
			m_usb_tx_char('\t');
     646:	89 e0       	ldi	r24, 0x09	; 9
     648:	0e 94 bb 0e 	call	0x1d76	; 0x1d76 <m_usb_tx_char>
			m_usb_tx_int((int)(deg*100));
     64c:	20 e0       	ldi	r18, 0x00	; 0
     64e:	30 e0       	ldi	r19, 0x00	; 0
     650:	48 ec       	ldi	r20, 0xC8	; 200
     652:	52 e4       	ldi	r21, 0x42	; 66
     654:	c7 01       	movw	r24, r14
     656:	b6 01       	movw	r22, r12
     658:	0e 94 1f 16 	call	0x2c3e	; 0x2c3e <__mulsf3>
     65c:	0e 94 6a 14 	call	0x28d4	; 0x28d4 <__fixsfsi>
     660:	cb 01       	movw	r24, r22
     662:	0e 94 dd 10 	call	0x21ba	; 0x21ba <m_usb_tx_int>
			m_usb_tx_char('\t');
     666:	89 e0       	ldi	r24, 0x09	; 9
     668:	0e 94 bb 0e 	call	0x1d76	; 0x1d76 <m_usb_tx_char>

		//}
		m_usb_tx_char('\n');  //MATLAB serial command reads 1 line at a time
     66c:	8a e0       	ldi	r24, 0x0A	; 10
     66e:	0e 94 bb 0e 	call	0x1d76	; 0x1d76 <m_usb_tx_char>
		//}
}
     672:	df 91       	pop	r29
     674:	cf 91       	pop	r28
     676:	ff 90       	pop	r15
     678:	ef 90       	pop	r14
     67a:	df 90       	pop	r13
     67c:	cf 90       	pop	r12
     67e:	08 95       	ret

00000680 <turn>:
		clear(PORTB,2);
		set(PORTB,3);
	}
}

void turn(int dir,float speed, float degree) {
     680:	8f 92       	push	r8
     682:	9f 92       	push	r9
     684:	af 92       	push	r10
     686:	bf 92       	push	r11
     688:	cf 92       	push	r12
     68a:	df 92       	push	r13
     68c:	ef 92       	push	r14
     68e:	ff 92       	push	r15
     690:	0f 93       	push	r16
     692:	1f 93       	push	r17
     694:	cf 93       	push	r28
     696:	df 93       	push	r29
     698:	6a 01       	movw	r12, r20
     69a:	7b 01       	movw	r14, r22
     69c:	48 01       	movw	r8, r16
     69e:	59 01       	movw	r10, r18
	set(PORTB,2);
     6a0:	2a 9a       	sbi	0x05, 2	; 5
	set(PORTB,3);
     6a2:	2b 9a       	sbi	0x05, 3	; 5
	if (dir == LEFT) {
     6a4:	81 30       	cpi	r24, 0x01	; 1
     6a6:	91 05       	cpc	r25, r1
     6a8:	81 f5       	brne	.+96     	; 0x70a <turn+0x8a>
		OCR3A = (unsigned int) ((float)ICR3 * speed);
     6aa:	60 91 96 00 	lds	r22, 0x0096
     6ae:	70 91 97 00 	lds	r23, 0x0097
     6b2:	80 e0       	ldi	r24, 0x00	; 0
     6b4:	90 e0       	ldi	r25, 0x00	; 0
     6b6:	0e 94 9b 14 	call	0x2936	; 0x2936 <__floatunsisf>
     6ba:	a7 01       	movw	r20, r14
     6bc:	96 01       	movw	r18, r12
     6be:	0e 94 1f 16 	call	0x2c3e	; 0x2c3e <__mulsf3>
     6c2:	0e 94 6f 14 	call	0x28de	; 0x28de <__fixunssfsi>
     6c6:	70 93 99 00 	sts	0x0099, r23
     6ca:	60 93 98 00 	sts	0x0098, r22
		OCR1B = (unsigned int) (degree * speed * OCR1A);
     6ce:	c0 91 88 00 	lds	r28, 0x0088
     6d2:	d0 91 89 00 	lds	r29, 0x0089
     6d6:	a7 01       	movw	r20, r14
     6d8:	96 01       	movw	r18, r12
     6da:	c5 01       	movw	r24, r10
     6dc:	b4 01       	movw	r22, r8
     6de:	0e 94 1f 16 	call	0x2c3e	; 0x2c3e <__mulsf3>
     6e2:	6b 01       	movw	r12, r22
     6e4:	7c 01       	movw	r14, r24
     6e6:	be 01       	movw	r22, r28
     6e8:	80 e0       	ldi	r24, 0x00	; 0
     6ea:	90 e0       	ldi	r25, 0x00	; 0
     6ec:	0e 94 9b 14 	call	0x2936	; 0x2936 <__floatunsisf>
     6f0:	9b 01       	movw	r18, r22
     6f2:	ac 01       	movw	r20, r24
     6f4:	c7 01       	movw	r24, r14
     6f6:	b6 01       	movw	r22, r12
     6f8:	0e 94 1f 16 	call	0x2c3e	; 0x2c3e <__mulsf3>
     6fc:	0e 94 6f 14 	call	0x28de	; 0x28de <__fixunssfsi>
     700:	70 93 8b 00 	sts	0x008B, r23
     704:	60 93 8a 00 	sts	0x008A, r22
     708:	31 c0       	rjmp	.+98     	; 0x76c <turn+0xec>
	}
	
		if (dir == RIGHT) {
     70a:	89 2b       	or	r24, r25
     70c:	79 f5       	brne	.+94     	; 0x76c <turn+0xec>
			OCR3A = (unsigned int) (degree * speed * ICR3);
     70e:	c0 91 96 00 	lds	r28, 0x0096
     712:	d0 91 97 00 	lds	r29, 0x0097
     716:	9a 01       	movw	r18, r20
     718:	ab 01       	movw	r20, r22
     71a:	c5 01       	movw	r24, r10
     71c:	b4 01       	movw	r22, r8
     71e:	0e 94 1f 16 	call	0x2c3e	; 0x2c3e <__mulsf3>
     722:	4b 01       	movw	r8, r22
     724:	5c 01       	movw	r10, r24
     726:	be 01       	movw	r22, r28
     728:	80 e0       	ldi	r24, 0x00	; 0
     72a:	90 e0       	ldi	r25, 0x00	; 0
     72c:	0e 94 9b 14 	call	0x2936	; 0x2936 <__floatunsisf>
     730:	9b 01       	movw	r18, r22
     732:	ac 01       	movw	r20, r24
     734:	c5 01       	movw	r24, r10
     736:	b4 01       	movw	r22, r8
     738:	0e 94 1f 16 	call	0x2c3e	; 0x2c3e <__mulsf3>
     73c:	0e 94 6f 14 	call	0x28de	; 0x28de <__fixunssfsi>
     740:	70 93 99 00 	sts	0x0099, r23
     744:	60 93 98 00 	sts	0x0098, r22
			OCR1B = (unsigned int) ((float) OCR1A * speed);
     748:	60 91 88 00 	lds	r22, 0x0088
     74c:	70 91 89 00 	lds	r23, 0x0089
     750:	80 e0       	ldi	r24, 0x00	; 0
     752:	90 e0       	ldi	r25, 0x00	; 0
     754:	0e 94 9b 14 	call	0x2936	; 0x2936 <__floatunsisf>
     758:	a7 01       	movw	r20, r14
     75a:	96 01       	movw	r18, r12
     75c:	0e 94 1f 16 	call	0x2c3e	; 0x2c3e <__mulsf3>
     760:	0e 94 6f 14 	call	0x28de	; 0x28de <__fixunssfsi>
     764:	70 93 8b 00 	sts	0x008B, r23
     768:	60 93 8a 00 	sts	0x008A, r22
		}
}
     76c:	df 91       	pop	r29
     76e:	cf 91       	pop	r28
     770:	1f 91       	pop	r17
     772:	0f 91       	pop	r16
     774:	ff 90       	pop	r15
     776:	ef 90       	pop	r14
     778:	df 90       	pop	r13
     77a:	cf 90       	pop	r12
     77c:	bf 90       	pop	r11
     77e:	af 90       	pop	r10
     780:	9f 90       	pop	r9
     782:	8f 90       	pop	r8
     784:	08 95       	ret

00000786 <reverse>:

void reverse(){
	OCR1B = OCR1A;
     786:	80 91 88 00 	lds	r24, 0x0088
     78a:	90 91 89 00 	lds	r25, 0x0089
     78e:	90 93 8b 00 	sts	0x008B, r25
     792:	80 93 8a 00 	sts	0x008A, r24
	OCR3A = ICR3;
     796:	80 91 96 00 	lds	r24, 0x0096
     79a:	90 91 97 00 	lds	r25, 0x0097
     79e:	90 93 99 00 	sts	0x0099, r25
     7a2:	80 93 98 00 	sts	0x0098, r24
	clear(PORTB,2);
     7a6:	2a 98       	cbi	0x05, 2	; 5
	clear(PORTB,3);
     7a8:	2b 98       	cbi	0x05, 3	; 5
     7aa:	08 95       	ret

000007ac <drive_to_puck>:
	//TODO: Implement code
}

void drive_to_puck() {
	
	OCR1B = 0;
     7ac:	10 92 8b 00 	sts	0x008B, r1
     7b0:	10 92 8a 00 	sts	0x008A, r1
	OCR3A = 0;
     7b4:	10 92 99 00 	sts	0x0099, r1
     7b8:	10 92 98 00 	sts	0x0098, r1
	//m_red(ON);
	set(DDRF,7);
     7bc:	87 9a       	sbi	0x10, 7	; 16
	float deg = 0.0;
	
	//m_green(OFF);
	//m_red(OFF);
	//while(1) {
		getADC();
     7be:	0e 94 95 01 	call	0x32a	; 0x32a <getADC>
     7c2:	e4 e2       	ldi	r30, 0x24	; 36
     7c4:	f1 e0       	ldi	r31, 0x01	; 1
		index = 0;
		maxval = 0;
		for(int i = 0; i < 7; i++) {
     7c6:	80 e0       	ldi	r24, 0x00	; 0
     7c8:	90 e0       	ldi	r25, 0x00	; 0
	//m_green(OFF);
	//m_red(OFF);
	//while(1) {
		getADC();
		index = 0;
		maxval = 0;
     7ca:	40 e0       	ldi	r20, 0x00	; 0
     7cc:	50 e0       	ldi	r21, 0x00	; 0
	
	//m_green(OFF);
	//m_red(OFF);
	//while(1) {
		getADC();
		index = 0;
     7ce:	60 e0       	ldi	r22, 0x00	; 0
     7d0:	70 e0       	ldi	r23, 0x00	; 0
		maxval = 0;
		for(int i = 0; i < 7; i++) {
			if (ADCarr[i] > maxval) {
     7d2:	21 91       	ld	r18, Z+
     7d4:	31 91       	ld	r19, Z+
     7d6:	42 17       	cp	r20, r18
     7d8:	53 07       	cpc	r21, r19
     7da:	14 f4       	brge	.+4      	; 0x7e0 <drive_to_puck+0x34>
				index = i;
				maxval = ADCarr[i];
     7dc:	a9 01       	movw	r20, r18
	//while(1) {
		getADC();
		index = 0;
		maxval = 0;
		for(int i = 0; i < 7; i++) {
			if (ADCarr[i] > maxval) {
     7de:	bc 01       	movw	r22, r24
	//m_red(OFF);
	//while(1) {
		getADC();
		index = 0;
		maxval = 0;
		for(int i = 0; i < 7; i++) {
     7e0:	01 96       	adiw	r24, 0x01	; 1
     7e2:	87 30       	cpi	r24, 0x07	; 7
     7e4:	91 05       	cpc	r25, r1
     7e6:	a9 f7       	brne	.-22     	; 0x7d2 <drive_to_puck+0x26>
			if (ADCarr[i] > maxval) {
				index = i;
				maxval = ADCarr[i];
			}
		}
		switch (index) {
     7e8:	61 15       	cp	r22, r1
     7ea:	71 05       	cpc	r23, r1
     7ec:	21 f0       	breq	.+8      	; 0x7f6 <drive_to_puck+0x4a>
     7ee:	66 30       	cpi	r22, 0x06	; 6
     7f0:	71 05       	cpc	r23, r1
     7f2:	31 f4       	brne	.+12     	; 0x800 <drive_to_puck+0x54>
     7f4:	03 c0       	rjmp	.+6      	; 0x7fc <drive_to_puck+0x50>
			case 0: 
				diff = ADCarr[0] - ADCarr[6];
				deg = exp(-1.0*(fabs((float)diff))/400.0);
				//turn(RIGHT,0.2,deg);
				m_green(ON);
     7f6:	6a 9a       	sbi	0x0d, 2	; 13
     7f8:	72 98       	cbi	0x0e, 2	; 14
     7fa:	02 c0       	rjmp	.+4      	; 0x800 <drive_to_puck+0x54>
				break;
			case 6:
				diff = ADCarr[6] - ADCarr[0];
				deg = exp(-1.0*(fabs((float)diff))/400.0);
				//turn(LEFT,0.2,deg);
				m_green(OFF);
     7fc:	6a 9a       	sbi	0x0d, 2	; 13
     7fe:	72 9a       	sbi	0x0e, 2	; 14
			default:
				//m_red(ON);
				//m_green(ON);
				break;
		}
		toggle(PORTF,7);
     800:	81 b3       	in	r24, 0x11	; 17
     802:	80 58       	subi	r24, 0x80	; 128
     804:	81 bb       	out	0x11, r24	; 17
	//}
	clear(DDRF,7);
     806:	87 98       	cbi	0x10, 7	; 16
     808:	08 95       	ret

0000080a <drive_to_point2>:
}

void drive_to_point2(int x, int y) {
     80a:	2f 92       	push	r2
     80c:	3f 92       	push	r3
     80e:	4f 92       	push	r4
     810:	5f 92       	push	r5
     812:	6f 92       	push	r6
     814:	7f 92       	push	r7
     816:	8f 92       	push	r8
     818:	9f 92       	push	r9
     81a:	af 92       	push	r10
     81c:	bf 92       	push	r11
     81e:	cf 92       	push	r12
     820:	df 92       	push	r13
     822:	ef 92       	push	r14
     824:	ff 92       	push	r15
     826:	0f 93       	push	r16
     828:	1f 93       	push	r17
     82a:	cf 93       	push	r28
     82c:	df 93       	push	r29
     82e:	cd b7       	in	r28, 0x3d	; 61
     830:	de b7       	in	r29, 0x3e	; 62
     832:	2d 97       	sbiw	r28, 0x0d	; 13
     834:	0f b6       	in	r0, 0x3f	; 63
     836:	f8 94       	cli
     838:	de bf       	out	0x3e, r29	; 62
     83a:	0f be       	out	0x3f, r0	; 63
     83c:	cd bf       	out	0x3d, r28	; 61
     83e:	2c 01       	movw	r4, r24
     840:	4b 01       	movw	r8, r22
	m_green(ON);
     842:	6a 9a       	sbi	0x0d, 2	; 13
     844:	72 98       	cbi	0x0e, 2	; 14
	//m_wait(500);
	float speed_cap = 0.5;
	localize(data);
     846:	85 ea       	ldi	r24, 0xA5	; 165
     848:	91 e0       	ldi	r25, 0x01	; 1
     84a:	0e 94 7e 0a 	call	0x14fc	; 0x14fc <localize>
	int dir = 0;
	while(1) {
		localize(data);
		
		//Set angle difference to be between -180 and 180
		angle_dif = (((int) (((data[2] + 90.0) * -1.0) - (float)(atan2((double)y-data[1],(double)x-data[0]))*180.0/3.14)) + 900) % 360 - 180;
     84e:	c2 01       	movw	r24, r4
     850:	aa 27       	eor	r26, r26
     852:	97 fd       	sbrc	r25, 7
     854:	a0 95       	com	r26
     856:	ba 2f       	mov	r27, r26
     858:	8e 83       	std	Y+6, r24	; 0x06
     85a:	9f 83       	std	Y+7, r25	; 0x07
     85c:	a8 87       	std	Y+8, r26	; 0x08
     85e:	b9 87       	std	Y+9, r27	; 0x09
     860:	c4 01       	movw	r24, r8
     862:	aa 27       	eor	r26, r26
     864:	97 fd       	sbrc	r25, 7
     866:	a0 95       	com	r26
     868:	ba 2f       	mov	r27, r26
     86a:	8a 87       	std	Y+10, r24	; 0x0a
     86c:	9b 87       	std	Y+11, r25	; 0x0b
     86e:	ac 87       	std	Y+12, r26	; 0x0c
     870:	bd 87       	std	Y+13, r27	; 0x0d
	float dist = 0.0;
	float spd = 0.0;
	float deg = 0.0;
	int dir = 0;
	while(1) {
		localize(data);
     872:	85 ea       	ldi	r24, 0xA5	; 165
     874:	91 e0       	ldi	r25, 0x01	; 1
     876:	0e 94 7e 0a 	call	0x14fc	; 0x14fc <localize>
		
		//Set angle difference to be between -180 and 180
		angle_dif = (((int) (((data[2] + 90.0) * -1.0) - (float)(atan2((double)y-data[1],(double)x-data[0]))*180.0/3.14)) + 900) % 360 - 180;
     87a:	6e 81       	ldd	r22, Y+6	; 0x06
     87c:	7f 81       	ldd	r23, Y+7	; 0x07
     87e:	88 85       	ldd	r24, Y+8	; 0x08
     880:	99 85       	ldd	r25, Y+9	; 0x09
     882:	0e 94 9d 14 	call	0x293a	; 0x293a <__floatsisf>
     886:	20 91 a5 01 	lds	r18, 0x01A5
     88a:	30 91 a6 01 	lds	r19, 0x01A6
     88e:	40 91 a7 01 	lds	r20, 0x01A7
     892:	50 91 a8 01 	lds	r21, 0x01A8
     896:	0e 94 03 13 	call	0x2606	; 0x2606 <__subsf3>
     89a:	06 2f       	mov	r16, r22
     89c:	17 2f       	mov	r17, r23
     89e:	28 2e       	mov	r2, r24
     8a0:	39 2e       	mov	r3, r25
     8a2:	6a 85       	ldd	r22, Y+10	; 0x0a
     8a4:	7b 85       	ldd	r23, Y+11	; 0x0b
     8a6:	8c 85       	ldd	r24, Y+12	; 0x0c
     8a8:	9d 85       	ldd	r25, Y+13	; 0x0d
     8aa:	0e 94 9d 14 	call	0x293a	; 0x293a <__floatsisf>
     8ae:	a9 ea       	ldi	r26, 0xA9	; 169
     8b0:	b1 e0       	ldi	r27, 0x01	; 1
     8b2:	2d 91       	ld	r18, X+
     8b4:	3d 91       	ld	r19, X+
     8b6:	4d 91       	ld	r20, X+
     8b8:	5c 91       	ld	r21, X
     8ba:	0e 94 03 13 	call	0x2606	; 0x2606 <__subsf3>
     8be:	86 2e       	mov	r8, r22
     8c0:	97 2e       	mov	r9, r23
     8c2:	a8 2e       	mov	r10, r24
     8c4:	b9 2e       	mov	r11, r25
     8c6:	20 2f       	mov	r18, r16
     8c8:	31 2f       	mov	r19, r17
     8ca:	42 2d       	mov	r20, r2
     8cc:	53 2d       	mov	r21, r3
     8ce:	68 2d       	mov	r22, r8
     8d0:	79 2d       	mov	r23, r9
     8d2:	8a 2d       	mov	r24, r10
     8d4:	9b 2d       	mov	r25, r11
     8d6:	0e 94 77 13 	call	0x26ee	; 0x26ee <atan2>
     8da:	2b 01       	movw	r4, r22
     8dc:	3c 01       	movw	r6, r24
     8de:	20 e0       	ldi	r18, 0x00	; 0
     8e0:	30 e0       	ldi	r19, 0x00	; 0
     8e2:	44 eb       	ldi	r20, 0xB4	; 180
     8e4:	52 e4       	ldi	r21, 0x42	; 66
     8e6:	ed ea       	ldi	r30, 0xAD	; 173
     8e8:	f1 e0       	ldi	r31, 0x01	; 1
     8ea:	60 81       	ld	r22, Z
     8ec:	71 81       	ldd	r23, Z+1	; 0x01
     8ee:	82 81       	ldd	r24, Z+2	; 0x02
     8f0:	93 81       	ldd	r25, Z+3	; 0x03
     8f2:	0e 94 04 13 	call	0x2608	; 0x2608 <__addsf3>
     8f6:	6b 01       	movw	r12, r22
     8f8:	7c 01       	movw	r14, r24
     8fa:	f7 fa       	bst	r15, 7
     8fc:	f0 94       	com	r15
     8fe:	f7 f8       	bld	r15, 7
     900:	f0 94       	com	r15
     902:	20 e0       	ldi	r18, 0x00	; 0
     904:	30 e0       	ldi	r19, 0x00	; 0
     906:	44 e3       	ldi	r20, 0x34	; 52
     908:	53 e4       	ldi	r21, 0x43	; 67
     90a:	c3 01       	movw	r24, r6
     90c:	b2 01       	movw	r22, r4
     90e:	0e 94 1f 16 	call	0x2c3e	; 0x2c3e <__mulsf3>
     912:	23 ec       	ldi	r18, 0xC3	; 195
     914:	35 ef       	ldi	r19, 0xF5	; 245
     916:	48 e4       	ldi	r20, 0x48	; 72
     918:	50 e4       	ldi	r21, 0x40	; 64
     91a:	0e 94 d1 13 	call	0x27a2	; 0x27a2 <__divsf3>
     91e:	9b 01       	movw	r18, r22
     920:	ac 01       	movw	r20, r24
     922:	c7 01       	movw	r24, r14
     924:	b6 01       	movw	r22, r12
     926:	0e 94 03 13 	call	0x2606	; 0x2606 <__subsf3>
     92a:	0e 94 6a 14 	call	0x28d4	; 0x28d4 <__fixsfsi>
     92e:	cb 01       	movw	r24, r22
     930:	8c 57       	subi	r24, 0x7C	; 124
     932:	9c 4f       	sbci	r25, 0xFC	; 252
     934:	68 e6       	ldi	r22, 0x68	; 104
     936:	71 e0       	ldi	r23, 0x01	; 1
     938:	0e 94 f3 16 	call	0x2de6	; 0x2de6 <__divmodhi4>
     93c:	bc 01       	movw	r22, r24
     93e:	64 5b       	subi	r22, 0xB4	; 180
     940:	71 09       	sbc	r23, r1
     942:	88 27       	eor	r24, r24
     944:	77 fd       	sbrc	r23, 7
     946:	80 95       	com	r24
     948:	98 2f       	mov	r25, r24
     94a:	0e 94 9d 14 	call	0x293a	; 0x293a <__floatsisf>
     94e:	e6 2e       	mov	r14, r22
     950:	d7 2e       	mov	r13, r23
     952:	46 2f       	mov	r20, r22
     954:	57 2f       	mov	r21, r23
     956:	68 2f       	mov	r22, r24
     958:	79 2f       	mov	r23, r25
     95a:	49 83       	std	Y+1, r20	; 0x01
     95c:	5a 83       	std	Y+2, r21	; 0x02
     95e:	6b 83       	std	Y+3, r22	; 0x03
     960:	7c 83       	std	Y+4, r23	; 0x04
		if (angle_dif > 0) {
     962:	ff 24       	eor	r15, r15
     964:	f3 94       	inc	r15
     966:	20 e0       	ldi	r18, 0x00	; 0
     968:	30 e0       	ldi	r19, 0x00	; 0
     96a:	a9 01       	movw	r20, r18
     96c:	6e 2d       	mov	r22, r14
     96e:	7d 2d       	mov	r23, r13
     970:	0e 94 ab 15 	call	0x2b56	; 0x2b56 <__gesf2>
     974:	18 16       	cp	r1, r24
     976:	0c f0       	brlt	.+2      	; 0x97a <drive_to_point2+0x170>
     978:	f1 2c       	mov	r15, r1
     97a:	f1 e0       	ldi	r31, 0x01	; 1
     97c:	ff 25       	eor	r31, r15
     97e:	fd 83       	std	Y+5, r31	; 0x05
		else {
			dir = LEFT;
		}
		
		//Angle of 180 corresponds to deg of 0; angle of 0 corresponds to deg of 1
		deg = exp(-1.0* ((double)fabs(angle_dif))/30.0);
     980:	89 81       	ldd	r24, Y+1	; 0x01
     982:	9a 81       	ldd	r25, Y+2	; 0x02
     984:	ab 81       	ldd	r26, Y+3	; 0x03
     986:	bc 81       	ldd	r27, Y+4	; 0x04
     988:	bf 77       	andi	r27, 0x7F	; 127
     98a:	bc 01       	movw	r22, r24
     98c:	cd 01       	movw	r24, r26
     98e:	90 58       	subi	r25, 0x80	; 128
     990:	20 e0       	ldi	r18, 0x00	; 0
     992:	30 e0       	ldi	r19, 0x00	; 0
     994:	40 ef       	ldi	r20, 0xF0	; 240
     996:	51 e4       	ldi	r21, 0x41	; 65
     998:	0e 94 d1 13 	call	0x27a2	; 0x27a2 <__divsf3>
     99c:	0e 94 3e 14 	call	0x287c	; 0x287c <exp>
     9a0:	6b 01       	movw	r12, r22
     9a2:	7c 01       	movw	r14, r24
		//Set distance
		dist = (int) sqrt(((double)y - data[1])*((double)y - data[1])+((double)x - data[0])*((double)x - data[0]));
     9a4:	28 2d       	mov	r18, r8
     9a6:	39 2d       	mov	r19, r9
     9a8:	4a 2d       	mov	r20, r10
     9aa:	5b 2d       	mov	r21, r11
     9ac:	68 2d       	mov	r22, r8
     9ae:	79 2d       	mov	r23, r9
     9b0:	8a 2d       	mov	r24, r10
     9b2:	9b 2d       	mov	r25, r11
     9b4:	0e 94 1f 16 	call	0x2c3e	; 0x2c3e <__mulsf3>
     9b8:	4b 01       	movw	r8, r22
     9ba:	5c 01       	movw	r10, r24
     9bc:	20 2f       	mov	r18, r16
     9be:	31 2f       	mov	r19, r17
     9c0:	42 2d       	mov	r20, r2
     9c2:	53 2d       	mov	r21, r3
     9c4:	60 2f       	mov	r22, r16
     9c6:	71 2f       	mov	r23, r17
     9c8:	82 2d       	mov	r24, r2
     9ca:	93 2d       	mov	r25, r3
     9cc:	0e 94 1f 16 	call	0x2c3e	; 0x2c3e <__mulsf3>
     9d0:	9b 01       	movw	r18, r22
     9d2:	ac 01       	movw	r20, r24
     9d4:	c5 01       	movw	r24, r10
     9d6:	b4 01       	movw	r22, r8
     9d8:	0e 94 04 13 	call	0x2608	; 0x2608 <__addsf3>
     9dc:	0e 94 8c 16 	call	0x2d18	; 0x2d18 <sqrt>
     9e0:	0e 94 6a 14 	call	0x28d4	; 0x28d4 <__fixsfsi>
     9e4:	88 27       	eor	r24, r24
     9e6:	77 fd       	sbrc	r23, 7
     9e8:	80 95       	com	r24
     9ea:	98 2f       	mov	r25, r24
     9ec:	0e 94 9d 14 	call	0x293a	; 0x293a <__floatsisf>
     9f0:	a6 2e       	mov	r10, r22
     9f2:	b7 2e       	mov	r11, r23
     9f4:	08 2f       	mov	r16, r24
     9f6:	19 2f       	mov	r17, r25
		spd = ((float)dist)/70.0;
     9f8:	20 e0       	ldi	r18, 0x00	; 0
     9fa:	30 e0       	ldi	r19, 0x00	; 0
     9fc:	4c e8       	ldi	r20, 0x8C	; 140
     9fe:	52 e4       	ldi	r21, 0x42	; 66
     a00:	0e 94 d1 13 	call	0x27a2	; 0x27a2 <__divsf3>
     a04:	26 2e       	mov	r2, r22
     a06:	37 2e       	mov	r3, r23
     a08:	88 2e       	mov	r8, r24
     a0a:	99 2e       	mov	r9, r25
     a0c:	46 2e       	mov	r4, r22
     a0e:	57 2e       	mov	r5, r23
     a10:	68 2e       	mov	r6, r24
     a12:	79 2e       	mov	r7, r25
		//*****************************************************************************
			rx_buffer = m_usb_rx_char();  	//grab the computer packet
     a14:	0e 94 87 0e 	call	0x1d0e	; 0x1d0e <m_usb_rx_char>
     a18:	80 93 9a 01 	sts	0x019A, r24

			m_usb_rx_flush();  				//clear buffer
     a1c:	0e 94 a5 0e 	call	0x1d4a	; 0x1d4a <m_usb_rx_flush>

			if(rx_buffer == 1) {  			//computer wants ir buffer
     a20:	80 91 9a 01 	lds	r24, 0x019A
     a24:	81 30       	cpi	r24, 0x01	; 1
     a26:	09 f0       	breq	.+2      	; 0xa2a <drive_to_point2+0x220>
     a28:	50 c0       	rjmp	.+160    	; 0xaca <drive_to_point2+0x2c0>
				//write ir buffer as concatenated hex:  i.e. f0f1f4f5
				data[3] = angle_dif;
     a2a:	89 81       	ldd	r24, Y+1	; 0x01
     a2c:	9a 81       	ldd	r25, Y+2	; 0x02
     a2e:	ab 81       	ldd	r26, Y+3	; 0x03
     a30:	bc 81       	ldd	r27, Y+4	; 0x04
     a32:	e1 eb       	ldi	r30, 0xB1	; 177
     a34:	f1 e0       	ldi	r31, 0x01	; 1
     a36:	80 83       	st	Z, r24
     a38:	91 83       	std	Z+1, r25	; 0x01
     a3a:	a2 83       	std	Z+2, r26	; 0x02
     a3c:	b3 83       	std	Z+3, r27	; 0x03
				data[4] = deg*100.0;
     a3e:	20 e0       	ldi	r18, 0x00	; 0
     a40:	30 e0       	ldi	r19, 0x00	; 0
     a42:	48 ec       	ldi	r20, 0xC8	; 200
     a44:	52 e4       	ldi	r21, 0x42	; 66
     a46:	c7 01       	movw	r24, r14
     a48:	b6 01       	movw	r22, r12
     a4a:	0e 94 1f 16 	call	0x2c3e	; 0x2c3e <__mulsf3>
     a4e:	a5 eb       	ldi	r26, 0xB5	; 181
     a50:	b1 e0       	ldi	r27, 0x01	; 1
     a52:	6d 93       	st	X+, r22
     a54:	7d 93       	st	X+, r23
     a56:	8d 93       	st	X+, r24
     a58:	9c 93       	st	X, r25
     a5a:	13 97       	sbiw	r26, 0x03	; 3
				data[5] = dist;
     a5c:	8a 2d       	mov	r24, r10
     a5e:	9b 2d       	mov	r25, r11
     a60:	a0 2f       	mov	r26, r16
     a62:	b1 2f       	mov	r27, r17
     a64:	e9 eb       	ldi	r30, 0xB9	; 185
     a66:	f1 e0       	ldi	r31, 0x01	; 1
     a68:	80 83       	st	Z, r24
     a6a:	91 83       	std	Z+1, r25	; 0x01
     a6c:	a2 83       	std	Z+2, r26	; 0x02
     a6e:	b3 83       	std	Z+3, r27	; 0x03
				data[6] = spd*100.0;
     a70:	20 e0       	ldi	r18, 0x00	; 0
     a72:	30 e0       	ldi	r19, 0x00	; 0
     a74:	48 ec       	ldi	r20, 0xC8	; 200
     a76:	52 e4       	ldi	r21, 0x42	; 66
     a78:	62 2d       	mov	r22, r2
     a7a:	73 2d       	mov	r23, r3
     a7c:	88 2d       	mov	r24, r8
     a7e:	99 2d       	mov	r25, r9
     a80:	0e 94 1f 16 	call	0x2c3e	; 0x2c3e <__mulsf3>
     a84:	ad eb       	ldi	r26, 0xBD	; 189
     a86:	b1 e0       	ldi	r27, 0x01	; 1
     a88:	6d 93       	st	X+, r22
     a8a:	7d 93       	st	X+, r23
     a8c:	8d 93       	st	X+, r24
     a8e:	9c 93       	st	X, r25
     a90:	13 97       	sbiw	r26, 0x03	; 3
     a92:	e5 ea       	ldi	r30, 0xA5	; 165
     a94:	f1 e0       	ldi	r31, 0x01	; 1
     a96:	fa 83       	std	Y+2, r31	; 0x02
     a98:	e9 83       	std	Y+1, r30	; 0x01
				for (int i = 0 ; i < 7 ; i++){
					m_usb_tx_int((int)data[i]);
     a9a:	a9 81       	ldd	r26, Y+1	; 0x01
     a9c:	ba 81       	ldd	r27, Y+2	; 0x02
     a9e:	6d 91       	ld	r22, X+
     aa0:	7d 91       	ld	r23, X+
     aa2:	8d 91       	ld	r24, X+
     aa4:	9d 91       	ld	r25, X+
     aa6:	ba 83       	std	Y+2, r27	; 0x02
     aa8:	a9 83       	std	Y+1, r26	; 0x01
     aaa:	0e 94 6a 14 	call	0x28d4	; 0x28d4 <__fixsfsi>
     aae:	cb 01       	movw	r24, r22
     ab0:	0e 94 dd 10 	call	0x21ba	; 0x21ba <m_usb_tx_int>
					m_usb_tx_char('\t');
     ab4:	89 e0       	ldi	r24, 0x09	; 9
     ab6:	0e 94 bb 0e 	call	0x1d76	; 0x1d76 <m_usb_tx_char>
				//write ir buffer as concatenated hex:  i.e. f0f1f4f5
				data[3] = angle_dif;
				data[4] = deg*100.0;
				data[5] = dist;
				data[6] = spd*100.0;
				for (int i = 0 ; i < 7 ; i++){
     aba:	e9 81       	ldd	r30, Y+1	; 0x01
     abc:	fa 81       	ldd	r31, Y+2	; 0x02
     abe:	e1 5c       	subi	r30, 0xC1	; 193
     ac0:	f1 40       	sbci	r31, 0x01	; 1
     ac2:	59 f7       	brne	.-42     	; 0xa9a <drive_to_point2+0x290>
					m_usb_tx_int((int)data[i]);
					m_usb_tx_char('\t');

				}

				m_usb_tx_char('\n');  //MATLAB serial command reads 1 line at a time
     ac4:	8a e0       	ldi	r24, 0x0A	; 10
     ac6:	0e 94 bb 0e 	call	0x1d76	; 0x1d76 <m_usb_tx_char>
			}
			
		//*********************************************************************************
		
		if (spd > speed_cap) spd = speed_cap;
     aca:	20 e0       	ldi	r18, 0x00	; 0
     acc:	30 e0       	ldi	r19, 0x00	; 0
     ace:	40 e0       	ldi	r20, 0x00	; 0
     ad0:	5f e3       	ldi	r21, 0x3F	; 63
     ad2:	62 2d       	mov	r22, r2
     ad4:	73 2d       	mov	r23, r3
     ad6:	88 2d       	mov	r24, r8
     ad8:	99 2d       	mov	r25, r9
     ada:	0e 94 ab 15 	call	0x2b56	; 0x2b56 <__gesf2>
     ade:	18 16       	cp	r1, r24
     ae0:	3c f4       	brge	.+14     	; 0xaf0 <drive_to_point2+0x2e6>
     ae2:	41 2c       	mov	r4, r1
     ae4:	51 2c       	mov	r5, r1
     ae6:	61 2c       	mov	r6, r1
     ae8:	0f 2e       	mov	r0, r31
     aea:	ff e3       	ldi	r31, 0x3F	; 63
     aec:	7f 2e       	mov	r7, r31
     aee:	f0 2d       	mov	r31, r0
		if (dist < 10) break;
     af0:	20 e0       	ldi	r18, 0x00	; 0
     af2:	30 e0       	ldi	r19, 0x00	; 0
     af4:	40 e2       	ldi	r20, 0x20	; 32
     af6:	51 e4       	ldi	r21, 0x41	; 65
     af8:	6a 2d       	mov	r22, r10
     afa:	7b 2d       	mov	r23, r11
     afc:	80 2f       	mov	r24, r16
     afe:	91 2f       	mov	r25, r17
     b00:	0e 94 ca 13 	call	0x2794	; 0x2794 <__cmpsf2>
     b04:	88 23       	and	r24, r24
     b06:	7c f0       	brlt	.+30     	; 0xb26 <__stack+0x27>
		if (changedState) return;
     b08:	80 91 36 01 	lds	r24, 0x0136
     b0c:	81 11       	cpse	r24, r1
     b0e:	1b c0       	rjmp	.+54     	; 0xb46 <__stack+0x47>
		turn(dir, spd, deg);
     b10:	97 01       	movw	r18, r14
     b12:	86 01       	movw	r16, r12
     b14:	44 2d       	mov	r20, r4
     b16:	55 2d       	mov	r21, r5
     b18:	66 2d       	mov	r22, r6
     b1a:	77 2d       	mov	r23, r7
     b1c:	8d 81       	ldd	r24, Y+5	; 0x05
     b1e:	90 e0       	ldi	r25, 0x00	; 0
     b20:	0e 94 40 03 	call	0x680	; 0x680 <turn>
		
	}
     b24:	a6 ce       	rjmp	.-692    	; 0x872 <drive_to_point2+0x68>
	m_red(ON);
     b26:	6e 9a       	sbi	0x0d, 6	; 13
     b28:	76 98       	cbi	0x0e, 6	; 14
	reverse();
     b2a:	0e 94 c3 03 	call	0x786	; 0x786 <reverse>
	OCR1B = 0;
     b2e:	10 92 8b 00 	sts	0x008B, r1
     b32:	10 92 8a 00 	sts	0x008A, r1
	OCR3A = 0;
     b36:	10 92 99 00 	sts	0x0099, r1
     b3a:	10 92 98 00 	sts	0x0098, r1
	state = 0;
     b3e:	10 92 35 01 	sts	0x0135, r1
     b42:	10 92 34 01 	sts	0x0134, r1
}
     b46:	2d 96       	adiw	r28, 0x0d	; 13
     b48:	0f b6       	in	r0, 0x3f	; 63
     b4a:	f8 94       	cli
     b4c:	de bf       	out	0x3e, r29	; 62
     b4e:	0f be       	out	0x3f, r0	; 63
     b50:	cd bf       	out	0x3d, r28	; 61
     b52:	df 91       	pop	r29
     b54:	cf 91       	pop	r28
     b56:	1f 91       	pop	r17
     b58:	0f 91       	pop	r16
     b5a:	ff 90       	pop	r15
     b5c:	ef 90       	pop	r14
     b5e:	df 90       	pop	r13
     b60:	cf 90       	pop	r12
     b62:	bf 90       	pop	r11
     b64:	af 90       	pop	r10
     b66:	9f 90       	pop	r9
     b68:	8f 90       	pop	r8
     b6a:	7f 90       	pop	r7
     b6c:	6f 90       	pop	r6
     b6e:	5f 90       	pop	r5
     b70:	4f 90       	pop	r4
     b72:	3f 90       	pop	r3
     b74:	2f 90       	pop	r2
     b76:	08 95       	ret

00000b78 <drive_to_goalA>:

void drive_to_goalA() {
	drive_to_point2(GOALBX,GOALBY);
     b78:	60 e0       	ldi	r22, 0x00	; 0
     b7a:	70 e0       	ldi	r23, 0x00	; 0
     b7c:	83 e7       	ldi	r24, 0x73	; 115
     b7e:	90 e0       	ldi	r25, 0x00	; 0
     b80:	0e 94 05 04 	call	0x80a	; 0x80a <drive_to_point2>
     b84:	08 95       	ret

00000b86 <drive_to_goalB>:
}

void drive_to_goalB() {
	drive_to_point2(GOALAX,GOALAY);
     b86:	60 e0       	ldi	r22, 0x00	; 0
     b88:	70 e0       	ldi	r23, 0x00	; 0
     b8a:	8d e8       	ldi	r24, 0x8D	; 141
     b8c:	9f ef       	ldi	r25, 0xFF	; 255
     b8e:	0e 94 05 04 	call	0x80a	; 0x80a <drive_to_point2>
     b92:	08 95       	ret

00000b94 <shoot>:
}

void shoot() {
		set(PORTB,7);
     b94:	2f 9a       	sbi	0x05, 7	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     b96:	2f ef       	ldi	r18, 0xFF	; 255
     b98:	81 ee       	ldi	r24, 0xE1	; 225
     b9a:	94 e0       	ldi	r25, 0x04	; 4
     b9c:	21 50       	subi	r18, 0x01	; 1
     b9e:	80 40       	sbci	r24, 0x00	; 0
     ba0:	90 40       	sbci	r25, 0x00	; 0
     ba2:	e1 f7       	brne	.-8      	; 0xb9c <shoot+0x8>
     ba4:	00 c0       	rjmp	.+0      	; 0xba6 <shoot+0x12>
     ba6:	00 00       	nop
		m_wait(100);
		clear(PORTB,7);
     ba8:	2f 98       	cbi	0x05, 7	; 5
     baa:	08 95       	ret

00000bac <game_pause>:
}

void game_pause() {
	OCR1B = 0;
     bac:	10 92 8b 00 	sts	0x008B, r1
     bb0:	10 92 8a 00 	sts	0x008A, r1
	OCR3A = 0;
     bb4:	10 92 99 00 	sts	0x0099, r1
     bb8:	10 92 98 00 	sts	0x0098, r1
     bbc:	08 95       	ret

00000bbe <comm_test>:
	//set(PORTB,2);
	//set(PORTB,3);
}

void comm_test() {
	set(PORTD,5);
     bbe:	5d 9a       	sbi	0x0b, 5	; 11
     bc0:	2f ef       	ldi	r18, 0xFF	; 255
     bc2:	89 e6       	ldi	r24, 0x69	; 105
     bc4:	98 e1       	ldi	r25, 0x18	; 24
     bc6:	21 50       	subi	r18, 0x01	; 1
     bc8:	80 40       	sbci	r24, 0x00	; 0
     bca:	90 40       	sbci	r25, 0x00	; 0
     bcc:	e1 f7       	brne	.-8      	; 0xbc6 <comm_test+0x8>
     bce:	00 c0       	rjmp	.+0      	; 0xbd0 <comm_test+0x12>
     bd0:	00 00       	nop
	m_wait(500);
	clear(PORTD,5);
     bd2:	5d 98       	cbi	0x0b, 5	; 11
     bd4:	2f ef       	ldi	r18, 0xFF	; 255
     bd6:	89 e6       	ldi	r24, 0x69	; 105
     bd8:	98 e1       	ldi	r25, 0x18	; 24
     bda:	21 50       	subi	r18, 0x01	; 1
     bdc:	80 40       	sbci	r24, 0x00	; 0
     bde:	90 40       	sbci	r25, 0x00	; 0
     be0:	e1 f7       	brne	.-8      	; 0xbda <comm_test+0x1c>
     be2:	00 c0       	rjmp	.+0      	; 0xbe4 <comm_test+0x26>
     be4:	00 00       	nop
	m_wait(500);
	state = 0;
     be6:	10 92 35 01 	sts	0x0135, r1
     bea:	10 92 34 01 	sts	0x0134, r1
     bee:	08 95       	ret

00000bf0 <main>:

}

int main(void)
{
	set(DDRD,5);
     bf0:	55 9a       	sbi	0x0a, 5	; 10
	//wireless stuffs
	m_bus_init();
     bf2:	0e 94 aa 07 	call	0xf54	; 0xf54 <m_bus_init>
	
	m_rf_open(CHANNEL, RXADDRESS, PACKET_LENGTH);
     bf6:	4a e0       	ldi	r20, 0x0A	; 10
     bf8:	68 e0       	ldi	r22, 0x08	; 8
     bfa:	81 e0       	ldi	r24, 0x01	; 1
     bfc:	0e 94 b4 0d 	call	0x1b68	; 0x1b68 <m_rf_open>
	//
	
	//m_num_init();
	int flag;
	
	m_clockdivide(0);
     c00:	e1 e6       	ldi	r30, 0x61	; 97
     c02:	f0 e0       	ldi	r31, 0x00	; 0
     c04:	80 e8       	ldi	r24, 0x80	; 128
     c06:	80 83       	st	Z, r24
     c08:	10 82       	st	Z, r1
	
	m_disableJTAG();
     c0a:	85 bf       	out	0x35, r24	; 53
     c0c:	85 bf       	out	0x35, r24	; 53
	
	//TIMER 0: For Controlling the solenoid
	
	set(TCCR0B, WGM02);
     c0e:	85 b5       	in	r24, 0x25	; 37
     c10:	88 60       	ori	r24, 0x08	; 8
     c12:	85 bd       	out	0x25, r24	; 37
	set(TCCR0A, WGM01);
     c14:	84 b5       	in	r24, 0x24	; 36
     c16:	82 60       	ori	r24, 0x02	; 2
     c18:	84 bd       	out	0x24, r24	; 36
	set(TCCR0A, WGM01);
     c1a:	84 b5       	in	r24, 0x24	; 36
     c1c:	82 60       	ori	r24, 0x02	; 2
     c1e:	84 bd       	out	0x24, r24	; 36
	
	set(TCCR0A, COM0B1);
     c20:	84 b5       	in	r24, 0x24	; 36
     c22:	80 62       	ori	r24, 0x20	; 32
     c24:	84 bd       	out	0x24, r24	; 36
	clear(TCCR0A, COM0B0);
     c26:	84 b5       	in	r24, 0x24	; 36
     c28:	8f 7e       	andi	r24, 0xEF	; 239
     c2a:	84 bd       	out	0x24, r24	; 36
	
	set(TCCR0B, CS02);
     c2c:	85 b5       	in	r24, 0x25	; 37
     c2e:	84 60       	ori	r24, 0x04	; 4
     c30:	85 bd       	out	0x25, r24	; 37
	set(TCCR0B, CS01);
     c32:	85 b5       	in	r24, 0x25	; 37
     c34:	82 60       	ori	r24, 0x02	; 2
     c36:	85 bd       	out	0x25, r24	; 37
	set(TCCR0B, CS00);
     c38:	85 b5       	in	r24, 0x25	; 37
     c3a:	81 60       	ori	r24, 0x01	; 1
     c3c:	85 bd       	out	0x25, r24	; 37
	
	set(DDRB,7);
     c3e:	27 9a       	sbi	0x04, 7	; 4
	
	OCR0A = 0xFF;
     c40:	8f ef       	ldi	r24, 0xFF	; 255
     c42:	87 bd       	out	0x27, r24	; 39
	OCR0B = 0;
     c44:	18 bc       	out	0x28, r1	; 40
	
	//TIMER 1: For Controlling the left wheel
	
	set(TCCR1B, WGM13);
     c46:	e1 e8       	ldi	r30, 0x81	; 129
     c48:	f0 e0       	ldi	r31, 0x00	; 0
     c4a:	80 81       	ld	r24, Z
     c4c:	80 61       	ori	r24, 0x10	; 16
     c4e:	80 83       	st	Z, r24
	set(TCCR1B, WGM12);
     c50:	80 81       	ld	r24, Z
     c52:	88 60       	ori	r24, 0x08	; 8
     c54:	80 83       	st	Z, r24
	set(TCCR1A, WGM11);
     c56:	a0 e8       	ldi	r26, 0x80	; 128
     c58:	b0 e0       	ldi	r27, 0x00	; 0
     c5a:	8c 91       	ld	r24, X
     c5c:	82 60       	ori	r24, 0x02	; 2
     c5e:	8c 93       	st	X, r24
	set(TCCR1A, WGM10);
     c60:	8c 91       	ld	r24, X
     c62:	81 60       	ori	r24, 0x01	; 1
     c64:	8c 93       	st	X, r24
	
	set(TCCR1A, COM1B1);
     c66:	8c 91       	ld	r24, X
     c68:	80 62       	ori	r24, 0x20	; 32
     c6a:	8c 93       	st	X, r24
	clear(TCCR1A, COM1B0);
     c6c:	8c 91       	ld	r24, X
     c6e:	8f 7e       	andi	r24, 0xEF	; 239
     c70:	8c 93       	st	X, r24
	
	clear(TCCR1B, CS12);
     c72:	80 81       	ld	r24, Z
     c74:	8b 7f       	andi	r24, 0xFB	; 251
     c76:	80 83       	st	Z, r24
	clear(TCCR1B, CS11);
     c78:	80 81       	ld	r24, Z
     c7a:	8d 7f       	andi	r24, 0xFD	; 253
     c7c:	80 83       	st	Z, r24
	set(TCCR1B, CS10);
     c7e:	80 81       	ld	r24, Z
     c80:	81 60       	ori	r24, 0x01	; 1
     c82:	80 83       	st	Z, r24
	
	set(DDRB,6);
     c84:	26 9a       	sbi	0x04, 6	; 4
	
	OCR1A = 0xFFFF;
     c86:	8f ef       	ldi	r24, 0xFF	; 255
     c88:	9f ef       	ldi	r25, 0xFF	; 255
     c8a:	90 93 89 00 	sts	0x0089, r25
     c8e:	80 93 88 00 	sts	0x0088, r24
	OCR1B = 0;
     c92:	10 92 8b 00 	sts	0x008B, r1
     c96:	10 92 8a 00 	sts	0x008A, r1
	
	//TIMER 3: For Controlling the right wheel
	//up to ICR3, clear at OCR3A & set at rollover
	
	set(TCCR3B, WGM33);
     c9a:	e1 e9       	ldi	r30, 0x91	; 145
     c9c:	f0 e0       	ldi	r31, 0x00	; 0
     c9e:	20 81       	ld	r18, Z
     ca0:	20 61       	ori	r18, 0x10	; 16
     ca2:	20 83       	st	Z, r18
	set(TCCR3B, WGM32);
     ca4:	20 81       	ld	r18, Z
     ca6:	28 60       	ori	r18, 0x08	; 8
     ca8:	20 83       	st	Z, r18
	set(TCCR3A, WGM31);
     caa:	a0 e9       	ldi	r26, 0x90	; 144
     cac:	b0 e0       	ldi	r27, 0x00	; 0
     cae:	2c 91       	ld	r18, X
     cb0:	22 60       	ori	r18, 0x02	; 2
     cb2:	2c 93       	st	X, r18
	clear(TCCR3A, WGM30);
     cb4:	2c 91       	ld	r18, X
     cb6:	2e 7f       	andi	r18, 0xFE	; 254
     cb8:	2c 93       	st	X, r18
	
	set(TCCR3A, COM3A1); 
     cba:	2c 91       	ld	r18, X
     cbc:	20 68       	ori	r18, 0x80	; 128
     cbe:	2c 93       	st	X, r18
	clear(TCCR3A, COM3A0); 
     cc0:	2c 91       	ld	r18, X
     cc2:	2f 7b       	andi	r18, 0xBF	; 191
     cc4:	2c 93       	st	X, r18
	
	clear(TCCR3B, CS32);
     cc6:	20 81       	ld	r18, Z
     cc8:	2b 7f       	andi	r18, 0xFB	; 251
     cca:	20 83       	st	Z, r18
	clear(TCCR3B, CS31);
     ccc:	20 81       	ld	r18, Z
     cce:	2d 7f       	andi	r18, 0xFD	; 253
     cd0:	20 83       	st	Z, r18
	set(TCCR3B, CS30);
     cd2:	20 81       	ld	r18, Z
     cd4:	21 60       	ori	r18, 0x01	; 1
     cd6:	20 83       	st	Z, r18
	
	ICR3 = 0xFFFF;
     cd8:	90 93 97 00 	sts	0x0097, r25
     cdc:	80 93 96 00 	sts	0x0096, r24
	OCR3A = 0;
     ce0:	10 92 99 00 	sts	0x0099, r1
     ce4:	10 92 98 00 	sts	0x0098, r1
	
	//Pin for controlling solenoid pulse
	set(DDRB,7);
     ce8:	27 9a       	sbi	0x04, 7	; 4
	
	//Pins for controlling speed of left and right wheel
	set(DDRB,6);
     cea:	26 9a       	sbi	0x04, 6	; 4
	set(DDRC,6);
     cec:	3e 9a       	sbi	0x07, 6	; 7
	
	//Pins for determining direction of wheels
	set(DDRB,2);
     cee:	22 9a       	sbi	0x04, 2	; 4
	set(DDRB,3);
     cf0:	23 9a       	sbi	0x04, 3	; 4
	
	//Blue LED for Comm Test
	//set(DDRB,5);
	
	//ADC's
	sei();					//Set up interrupts
     cf2:	78 94       	sei
	set(ADCSRA, ADIE);
     cf4:	ca e7       	ldi	r28, 0x7A	; 122
     cf6:	d0 e0       	ldi	r29, 0x00	; 0
     cf8:	88 81       	ld	r24, Y
     cfa:	88 60       	ori	r24, 0x08	; 8
     cfc:	88 83       	st	Y, r24
	
	clear(ADMUX, REFS1);	//Voltage reference is AR pin (5V)
     cfe:	ec e7       	ldi	r30, 0x7C	; 124
     d00:	f0 e0       	ldi	r31, 0x00	; 0
     d02:	80 81       	ld	r24, Z
     d04:	8f 77       	andi	r24, 0x7F	; 127
     d06:	80 83       	st	Z, r24
	clear(ADMUX, REFS0);	//^
     d08:	80 81       	ld	r24, Z
     d0a:	8f 7b       	andi	r24, 0xBF	; 191
     d0c:	80 83       	st	Z, r24
	
	set(ADCSRA, ADPS2);	//Set scale to /128
     d0e:	88 81       	ld	r24, Y
     d10:	84 60       	ori	r24, 0x04	; 4
     d12:	88 83       	st	Y, r24
	set(ADCSRA, ADPS1);	//^
     d14:	88 81       	ld	r24, Y
     d16:	82 60       	ori	r24, 0x02	; 2
     d18:	88 83       	st	Y, r24
	set(ADCSRA, ADPS0);	//^
     d1a:	88 81       	ld	r24, Y
     d1c:	81 60       	ori	r24, 0x01	; 1
     d1e:	88 83       	st	Y, r24
	
	set(DIDR0, ADC0D);	//Disable digital input for F0
     d20:	ee e7       	ldi	r30, 0x7E	; 126
     d22:	f0 e0       	ldi	r31, 0x00	; 0
     d24:	80 81       	ld	r24, Z
     d26:	81 60       	ori	r24, 0x01	; 1
     d28:	80 83       	st	Z, r24
	set(DIDR0, ADC1D),
     d2a:	80 81       	ld	r24, Z
     d2c:	82 60       	ori	r24, 0x02	; 2
     d2e:	80 83       	st	Z, r24
	set(DIDR0, ADC4D);
     d30:	80 81       	ld	r24, Z
     d32:	80 61       	ori	r24, 0x10	; 16
     d34:	80 83       	st	Z, r24
	set(DIDR0, ADC5D);
     d36:	80 81       	ld	r24, Z
     d38:	80 62       	ori	r24, 0x20	; 32
     d3a:	80 83       	st	Z, r24
	set(DIDR0, ADC6D);
     d3c:	80 81       	ld	r24, Z
     d3e:	80 64       	ori	r24, 0x40	; 64
     d40:	80 83       	st	Z, r24
	set(DIDR2, ADC8D);
     d42:	ed e7       	ldi	r30, 0x7D	; 125
     d44:	f0 e0       	ldi	r31, 0x00	; 0
     d46:	80 81       	ld	r24, Z
     d48:	81 60       	ori	r24, 0x01	; 1
     d4a:	80 83       	st	Z, r24
	set(DIDR2, ADC9D);
     d4c:	80 81       	ld	r24, Z
     d4e:	82 60       	ori	r24, 0x02	; 2
     d50:	80 83       	st	Z, r24
	
	set(ADCSRA, ADATE);	//Set trigger to free-running mode
     d52:	88 81       	ld	r24, Y
     d54:	80 62       	ori	r24, 0x20	; 32
     d56:	88 83       	st	Y, r24
	
	chooseInput(0);
     d58:	80 e0       	ldi	r24, 0x00	; 0
     d5a:	90 e0       	ldi	r25, 0x00	; 0
     d5c:	0e 94 08 01 	call	0x210	; 0x210 <chooseInput>
	
	set(ADCSRA, ADEN);	//Enable/Start conversion
     d60:	88 81       	ld	r24, Y
     d62:	80 68       	ori	r24, 0x80	; 128
     d64:	88 83       	st	Y, r24
	set(ADCSRA, ADSC);	//^
     d66:	88 81       	ld	r24, Y
     d68:	80 64       	ori	r24, 0x40	; 64
     d6a:	88 83       	st	Y, r24
	
	set(ADCSRA, ADIF);	//Enable reading results
     d6c:	88 81       	ld	r24, Y
     d6e:	80 61       	ori	r24, 0x10	; 16
     d70:	88 83       	st	Y, r24
	
	
	//Limit Switch stuffs
	clear(DDRB,0); //set to input, RIGHT LIMIT SWITCH
     d72:	20 98       	cbi	0x04, 0	; 4
	clear(DDRB,1); //set to input, LEFT LIMIT SWITCH
     d74:	21 98       	cbi	0x04, 1	; 4
	
	clear(PORTB,0); //disable internal pull up resistor
     d76:	28 98       	cbi	0x05, 0	; 5
	clear(PORTB,1); //disable internal pull up resistor
     d78:	29 98       	cbi	0x05, 1	; 5
	
	 
	//int state; // state variable
	state = 70; //set state
     d7a:	86 e4       	ldi	r24, 0x46	; 70
     d7c:	90 e0       	ldi	r25, 0x00	; 0
     d7e:	90 93 35 01 	sts	0x0135, r25
     d82:	80 93 34 01 	sts	0x0134, r24
	long count = 0;
	

	//m_bus_init();
	m_wii_open();
     d86:	0e 94 00 12 	call	0x2400	; 0x2400 <m_wii_open>
	m_usb_init();
     d8a:	0e 94 6b 0e 	call	0x1cd6	; 0x1cd6 <m_usb_init>
			break;
			
			case 69:
				set(PORTB,2);
				set(PORTB,3);
				OCR1B = OCR1A;
     d8e:	0f 2e       	mov	r0, r31
     d90:	f8 e8       	ldi	r31, 0x88	; 136
     d92:	af 2e       	mov	r10, r31
     d94:	b1 2c       	mov	r11, r1
     d96:	f0 2d       	mov	r31, r0
     d98:	0f 2e       	mov	r0, r31
     d9a:	fa e8       	ldi	r31, 0x8A	; 138
     d9c:	cf 2e       	mov	r12, r31
     d9e:	d1 2c       	mov	r13, r1
     da0:	f0 2d       	mov	r31, r0
				OCR3A = ICR3;
     da2:	0f 2e       	mov	r0, r31
     da4:	f6 e9       	ldi	r31, 0x96	; 150
     da6:	ef 2e       	mov	r14, r31
     da8:	f1 2c       	mov	r15, r1
     daa:	f0 2d       	mov	r31, r0
     dac:	08 e9       	ldi	r16, 0x98	; 152
     dae:	10 e0       	ldi	r17, 0x00	; 0
		//switch states
        switch (state) {
			
			case -2:
			getADC();
			if (ADCarr[0] > 500) {
     db0:	c4 e2       	ldi	r28, 0x24	; 36
     db2:	d1 e0       	ldi	r29, 0x01	; 1
		//localize(data);

	

		//switch states
        switch (state) {
     db4:	80 91 34 01 	lds	r24, 0x0134
     db8:	90 91 35 01 	lds	r25, 0x0135
	m_usb_init();
	//local_init();

    while(1)
    {
		changedState = 0;
     dbc:	10 92 36 01 	sts	0x0136, r1
		//localize(data);

	

		//switch states
        switch (state) {
     dc0:	84 30       	cpi	r24, 0x04	; 4
     dc2:	91 05       	cpc	r25, r1
     dc4:	09 f4       	brne	.+2      	; 0xdc8 <main+0x1d8>
     dc6:	54 c0       	rjmp	.+168    	; 0xe70 <main+0x280>
     dc8:	94 f4       	brge	.+36     	; 0xdee <main+0x1fe>
     dca:	00 97       	sbiw	r24, 0x00	; 0
     dcc:	09 f4       	brne	.+2      	; 0xdd0 <main+0x1e0>
     dce:	45 c0       	rjmp	.+138    	; 0xe5a <main+0x26a>
     dd0:	44 f4       	brge	.+16     	; 0xde2 <main+0x1f2>
     dd2:	8e 3f       	cpi	r24, 0xFE	; 254
     dd4:	2f ef       	ldi	r18, 0xFF	; 255
     dd6:	92 07       	cpc	r25, r18
     dd8:	21 f1       	breq	.+72     	; 0xe22 <main+0x232>
     dda:	01 96       	adiw	r24, 0x01	; 1
     ddc:	09 f0       	breq	.+2      	; 0xde0 <main+0x1f0>
     dde:	6c c0       	rjmp	.+216    	; 0xeb8 <main+0x2c8>
     de0:	2d c0       	rjmp	.+90     	; 0xe3c <main+0x24c>
     de2:	82 30       	cpi	r24, 0x02	; 2
     de4:	91 05       	cpc	r25, r1
     de6:	e1 f1       	breq	.+120    	; 0xe60 <main+0x270>
     de8:	0c f0       	brlt	.+2      	; 0xdec <main+0x1fc>
     dea:	3f c0       	rjmp	.+126    	; 0xe6a <main+0x27a>
     dec:	68 c0       	rjmp	.+208    	; 0xebe <main+0x2ce>
     dee:	81 3a       	cpi	r24, 0xA1	; 161
     df0:	91 05       	cpc	r25, r1
     df2:	09 f4       	brne	.+2      	; 0xdf6 <main+0x206>
     df4:	46 c0       	rjmp	.+140    	; 0xe82 <main+0x292>
     df6:	64 f4       	brge	.+24     	; 0xe10 <main+0x220>
     df8:	86 34       	cpi	r24, 0x46	; 70
     dfa:	91 05       	cpc	r25, r1
     dfc:	09 f4       	brne	.+2      	; 0xe00 <main+0x210>
     dfe:	59 c0       	rjmp	.+178    	; 0xeb2 <main+0x2c2>
     e00:	80 3a       	cpi	r24, 0xA0	; 160
     e02:	91 05       	cpc	r25, r1
     e04:	d9 f1       	breq	.+118    	; 0xe7c <main+0x28c>
     e06:	85 34       	cpi	r24, 0x45	; 69
     e08:	91 05       	cpc	r25, r1
     e0a:	09 f0       	breq	.+2      	; 0xe0e <main+0x21e>
     e0c:	55 c0       	rjmp	.+170    	; 0xeb8 <main+0x2c8>
     e0e:	42 c0       	rjmp	.+132    	; 0xe94 <main+0x2a4>
     e10:	83 3a       	cpi	r24, 0xA3	; 163
     e12:	91 05       	cpc	r25, r1
     e14:	e1 f1       	breq	.+120    	; 0xe8e <main+0x29e>
     e16:	c4 f1       	brlt	.+112    	; 0xe88 <main+0x298>
     e18:	84 3a       	cpi	r24, 0xA4	; 164
     e1a:	91 05       	cpc	r25, r1
     e1c:	09 f0       	breq	.+2      	; 0xe20 <main+0x230>
     e1e:	4c c0       	rjmp	.+152    	; 0xeb8 <main+0x2c8>
     e20:	2a c0       	rjmp	.+84     	; 0xe76 <main+0x286>
			
			case -2:
			getADC();
     e22:	0e 94 95 01 	call	0x32a	; 0x32a <getADC>
			if (ADCarr[0] > 500) {
     e26:	88 81       	ld	r24, Y
     e28:	99 81       	ldd	r25, Y+1	; 0x01
     e2a:	85 3f       	cpi	r24, 0xF5	; 245
     e2c:	91 40       	sbci	r25, 0x01	; 1
     e2e:	1c f0       	brlt	.+6      	; 0xe36 <main+0x246>
				m_green(ON);
     e30:	6a 9a       	sbi	0x0d, 2	; 13
     e32:	72 98       	cbi	0x0e, 2	; 14
     e34:	bf cf       	rjmp	.-130    	; 0xdb4 <main+0x1c4>
			}
			else {m_green(OFF)}
     e36:	6a 9a       	sbi	0x0d, 2	; 13
     e38:	72 9a       	sbi	0x0e, 2	; 14
     e3a:	bc cf       	rjmp	.-136    	; 0xdb4 <main+0x1c4>
			break;
			
			case -1: //test Limit switches
				//m_green(ON);
				if (check(PINB,1)) {
     e3c:	19 9b       	sbis	0x03, 1	; 3
     e3e:	03 c0       	rjmp	.+6      	; 0xe46 <main+0x256>
					
					m_green(ON);
     e40:	6a 9a       	sbi	0x0d, 2	; 13
     e42:	72 98       	cbi	0x0e, 2	; 14
     e44:	b7 cf       	rjmp	.-146    	; 0xdb4 <main+0x1c4>
				}
				
				else if (check(PINB,0)) {
     e46:	18 9b       	sbis	0x03, 0	; 3
     e48:	03 c0       	rjmp	.+6      	; 0xe50 <main+0x260>
					
					m_red(ON);
     e4a:	6e 9a       	sbi	0x0d, 6	; 13
     e4c:	76 98       	cbi	0x0e, 6	; 14
     e4e:	b2 cf       	rjmp	.-156    	; 0xdb4 <main+0x1c4>
				}
				
				else {
					m_red(OFF);
     e50:	6e 9a       	sbi	0x0d, 6	; 13
     e52:	76 9a       	sbi	0x0e, 6	; 14
					m_green(OFF);
     e54:	6a 9a       	sbi	0x0d, 2	; 13
     e56:	72 9a       	sbi	0x0e, 2	; 14
     e58:	ad cf       	rjmp	.-166    	; 0xdb4 <main+0x1c4>
				
			break;

			case 0:
			//drive_to_point2(-100,0);
			game_pause();
     e5a:	0e 94 d6 05 	call	0xbac	; 0xbac <game_pause>
			break;
     e5e:	aa cf       	rjmp	.-172    	; 0xdb4 <main+0x1c4>
			case 1:
			findPuck();
			break;
			
			case 2:
			m_red(ON);
     e60:	6e 9a       	sbi	0x0d, 6	; 13
     e62:	76 98       	cbi	0x0e, 6	; 14
			drive_to_puck();
     e64:	0e 94 d6 03 	call	0x7ac	; 0x7ac <drive_to_puck>
			break;
     e68:	a5 cf       	rjmp	.-182    	; 0xdb4 <main+0x1c4>
			
			case 3:
			drive_to_goalA();
     e6a:	0e 94 bc 05 	call	0xb78	; 0xb78 <drive_to_goalA>
			break;
     e6e:	a2 cf       	rjmp	.-188    	; 0xdb4 <main+0x1c4>
			
			case 4:
			shoot();
     e70:	0e 94 ca 05 	call	0xb94	; 0xb94 <shoot>
			break;	
     e74:	9f cf       	rjmp	.-194    	; 0xdb4 <main+0x1c4>
			
			case 0xA4:
			game_pause();
     e76:	0e 94 d6 05 	call	0xbac	; 0xbac <game_pause>
			break;
     e7a:	9c cf       	rjmp	.-200    	; 0xdb4 <main+0x1c4>
			
			case 0xA0:
			comm_test();
     e7c:	0e 94 df 05 	call	0xbbe	; 0xbbe <comm_test>
			break;
     e80:	99 cf       	rjmp	.-206    	; 0xdb4 <main+0x1c4>
			
			case 0xA1:
			drive_to_goalA();
     e82:	0e 94 bc 05 	call	0xb78	; 0xb78 <drive_to_goalA>
			break;
     e86:	96 cf       	rjmp	.-212    	; 0xdb4 <main+0x1c4>
			
			case 0xA2:
			drive_to_goalA();
     e88:	0e 94 bc 05 	call	0xb78	; 0xb78 <drive_to_goalA>
			break;
     e8c:	93 cf       	rjmp	.-218    	; 0xdb4 <main+0x1c4>
			
			case 0xA3:
			drive_to_goalB();
     e8e:	0e 94 c3 05 	call	0xb86	; 0xb86 <drive_to_goalB>
			break;
     e92:	90 cf       	rjmp	.-224    	; 0xdb4 <main+0x1c4>
			
			case 69:
				set(PORTB,2);
     e94:	2a 9a       	sbi	0x05, 2	; 5
				set(PORTB,3);
     e96:	2b 9a       	sbi	0x05, 3	; 5
				OCR1B = OCR1A;
     e98:	f5 01       	movw	r30, r10
     e9a:	80 81       	ld	r24, Z
     e9c:	91 81       	ldd	r25, Z+1	; 0x01
     e9e:	f6 01       	movw	r30, r12
     ea0:	91 83       	std	Z+1, r25	; 0x01
     ea2:	80 83       	st	Z, r24
				OCR3A = ICR3;
     ea4:	f7 01       	movw	r30, r14
     ea6:	80 81       	ld	r24, Z
     ea8:	91 81       	ldd	r25, Z+1	; 0x01
     eaa:	f8 01       	movw	r30, r16
     eac:	91 83       	std	Z+1, r25	; 0x01
     eae:	80 83       	st	Z, r24
				break;
     eb0:	81 cf       	rjmp	.-254    	; 0xdb4 <main+0x1c4>
				
			case 70:
				reportADC();
     eb2:	0e 94 5c 02 	call	0x4b8	; 0x4b8 <reportADC>
				break;
     eb6:	7e cf       	rjmp	.-260    	; 0xdb4 <main+0x1c4>
			
			default:
			game_pause();
     eb8:	0e 94 d6 05 	call	0xbac	; 0xbac <game_pause>
			break;
     ebc:	7b cf       	rjmp	.-266    	; 0xdb4 <main+0x1c4>
	m_usb_init();
	//local_init();

    while(1)
    {
		changedState = 0;
     ebe:	10 92 36 01 	sts	0x0136, r1
     ec2:	fd cf       	rjmp	.-6      	; 0xebe <main+0x2ce>

00000ec4 <__vector_3>:
        
    }
}


ISR(INT2_vect)  {
     ec4:	1f 92       	push	r1
     ec6:	0f 92       	push	r0
     ec8:	0f b6       	in	r0, 0x3f	; 63
     eca:	0f 92       	push	r0
     ecc:	11 24       	eor	r1, r1
     ece:	2f 93       	push	r18
     ed0:	3f 93       	push	r19
     ed2:	4f 93       	push	r20
     ed4:	5f 93       	push	r21
     ed6:	6f 93       	push	r22
     ed8:	7f 93       	push	r23
     eda:	8f 93       	push	r24
     edc:	9f 93       	push	r25
     ede:	af 93       	push	r26
     ee0:	bf 93       	push	r27
     ee2:	ef 93       	push	r30
     ee4:	ff 93       	push	r31
	cli();
     ee6:	f8 94       	cli
	m_rf_read(buffer,PACKET_LENGTH);
     ee8:	6a e0       	ldi	r22, 0x0A	; 10
     eea:	8b e9       	ldi	r24, 0x9B	; 155
     eec:	91 e0       	ldi	r25, 0x01	; 1
     eee:	0e 94 0a 0e 	call	0x1c14	; 0x1c14 <m_rf_read>
	sei();
     ef2:	78 94       	sei
	state=buffer[0];
     ef4:	80 91 9b 01 	lds	r24, 0x019B
     ef8:	80 93 34 01 	sts	0x0134, r24
     efc:	10 92 35 01 	sts	0x0135, r1
	changedState = 1;
     f00:	81 e0       	ldi	r24, 0x01	; 1
     f02:	80 93 36 01 	sts	0x0136, r24
}
     f06:	ff 91       	pop	r31
     f08:	ef 91       	pop	r30
     f0a:	bf 91       	pop	r27
     f0c:	af 91       	pop	r26
     f0e:	9f 91       	pop	r25
     f10:	8f 91       	pop	r24
     f12:	7f 91       	pop	r23
     f14:	6f 91       	pop	r22
     f16:	5f 91       	pop	r21
     f18:	4f 91       	pop	r20
     f1a:	3f 91       	pop	r19
     f1c:	2f 91       	pop	r18
     f1e:	0f 90       	pop	r0
     f20:	0f be       	out	0x3f, r0	; 63
     f22:	0f 90       	pop	r0
     f24:	1f 90       	pop	r1
     f26:	18 95       	reti

00000f28 <__vector_29>:

ISR(ADC_vect) {
     f28:	1f 92       	push	r1
     f2a:	0f 92       	push	r0
     f2c:	0f b6       	in	r0, 0x3f	; 63
     f2e:	0f 92       	push	r0
     f30:	11 24       	eor	r1, r1
     f32:	8f 93       	push	r24
     f34:	9f 93       	push	r25
	cli();
     f36:	f8 94       	cli
	conversion = 1;
     f38:	81 e0       	ldi	r24, 0x01	; 1
     f3a:	90 e0       	ldi	r25, 0x00	; 0
     f3c:	90 93 15 01 	sts	0x0115, r25
     f40:	80 93 14 01 	sts	0x0114, r24
	sei();
     f44:	78 94       	sei
     f46:	9f 91       	pop	r25
     f48:	8f 91       	pop	r24
     f4a:	0f 90       	pop	r0
     f4c:	0f be       	out	0x3f, r0	; 63
     f4e:	0f 90       	pop	r0
     f50:	1f 90       	pop	r1
     f52:	18 95       	reti

00000f54 <m_bus_init>:
     f54:	58 9a       	sbi	0x0b, 0	; 11
     f56:	59 9a       	sbi	0x0b, 1	; 11
     f58:	5a 9a       	sbi	0x0b, 2	; 11
     f5a:	8c e0       	ldi	r24, 0x0C	; 12
     f5c:	80 93 b8 00 	sts	0x00B8, r24
     f60:	e9 e6       	ldi	r30, 0x69	; 105
     f62:	f0 e0       	ldi	r31, 0x00	; 0
     f64:	80 81       	ld	r24, Z
     f66:	80 62       	ori	r24, 0x20	; 32
     f68:	80 83       	st	Z, r24
     f6a:	80 81       	ld	r24, Z
     f6c:	8f 7e       	andi	r24, 0xEF	; 239
     f6e:	80 83       	st	Z, r24
     f70:	ea 9a       	sbi	0x1d, 2	; 29
     f72:	78 94       	sei
     f74:	08 95       	ret

00000f76 <getData>:
     f76:	0f 93       	push	r16
     f78:	1f 93       	push	r17
     f7a:	cf 93       	push	r28
     f7c:	df 93       	push	r29
     f7e:	8c 01       	movw	r16, r24
     f80:	eb 01       	movw	r28, r22
     f82:	8d e7       	ldi	r24, 0x7D	; 125
     f84:	91 e0       	ldi	r25, 0x01	; 1
     f86:	0e 94 6b 11 	call	0x22d6	; 0x22d6 <m_wii_read>
     f8a:	80 91 7d 01 	lds	r24, 0x017D
     f8e:	90 91 7e 01 	lds	r25, 0x017E
     f92:	f8 01       	movw	r30, r16
     f94:	91 83       	std	Z+1, r25	; 0x01
     f96:	80 83       	st	Z, r24
     f98:	80 91 83 01 	lds	r24, 0x0183
     f9c:	90 91 84 01 	lds	r25, 0x0184
     fa0:	93 83       	std	Z+3, r25	; 0x03
     fa2:	82 83       	std	Z+2, r24	; 0x02
     fa4:	80 91 89 01 	lds	r24, 0x0189
     fa8:	90 91 8a 01 	lds	r25, 0x018A
     fac:	95 83       	std	Z+5, r25	; 0x05
     fae:	84 83       	std	Z+4, r24	; 0x04
     fb0:	80 91 8f 01 	lds	r24, 0x018F
     fb4:	90 91 90 01 	lds	r25, 0x0190
     fb8:	97 83       	std	Z+7, r25	; 0x07
     fba:	86 83       	std	Z+6, r24	; 0x06
     fbc:	80 91 7f 01 	lds	r24, 0x017F
     fc0:	90 91 80 01 	lds	r25, 0x0180
     fc4:	99 83       	std	Y+1, r25	; 0x01
     fc6:	88 83       	st	Y, r24
     fc8:	80 91 85 01 	lds	r24, 0x0185
     fcc:	90 91 86 01 	lds	r25, 0x0186
     fd0:	9b 83       	std	Y+3, r25	; 0x03
     fd2:	8a 83       	std	Y+2, r24	; 0x02
     fd4:	80 91 8b 01 	lds	r24, 0x018B
     fd8:	90 91 8c 01 	lds	r25, 0x018C
     fdc:	9d 83       	std	Y+5, r25	; 0x05
     fde:	8c 83       	std	Y+4, r24	; 0x04
     fe0:	80 91 91 01 	lds	r24, 0x0191
     fe4:	90 91 92 01 	lds	r25, 0x0192
     fe8:	9f 83       	std	Y+7, r25	; 0x07
     fea:	8e 83       	std	Y+6, r24	; 0x06
     fec:	81 e0       	ldi	r24, 0x01	; 1
     fee:	df 91       	pop	r29
     ff0:	cf 91       	pop	r28
     ff2:	1f 91       	pop	r17
     ff4:	0f 91       	pop	r16
     ff6:	08 95       	ret

00000ff8 <determine_blobs>:
     ff8:	2f 92       	push	r2
     ffa:	3f 92       	push	r3
     ffc:	4f 92       	push	r4
     ffe:	5f 92       	push	r5
    1000:	6f 92       	push	r6
    1002:	7f 92       	push	r7
    1004:	8f 92       	push	r8
    1006:	9f 92       	push	r9
    1008:	af 92       	push	r10
    100a:	bf 92       	push	r11
    100c:	cf 92       	push	r12
    100e:	df 92       	push	r13
    1010:	ef 92       	push	r14
    1012:	ff 92       	push	r15
    1014:	0f 93       	push	r16
    1016:	1f 93       	push	r17
    1018:	cf 93       	push	r28
    101a:	df 93       	push	r29
    101c:	cd b7       	in	r28, 0x3d	; 61
    101e:	de b7       	in	r29, 0x3e	; 62
    1020:	6c 97       	sbiw	r28, 0x1c	; 28
    1022:	0f b6       	in	r0, 0x3f	; 63
    1024:	f8 94       	cli
    1026:	de bf       	out	0x3e, r29	; 62
    1028:	0f be       	out	0x3f, r0	; 63
    102a:	cd bf       	out	0x3d, r28	; 61
    102c:	10 92 45 01 	sts	0x0145, r1
    1030:	10 92 46 01 	sts	0x0146, r1
    1034:	10 92 47 01 	sts	0x0147, r1
    1038:	10 92 48 01 	sts	0x0148, r1
    103c:	80 e0       	ldi	r24, 0x00	; 0
    103e:	90 e6       	ldi	r25, 0x60	; 96
    1040:	aa ee       	ldi	r26, 0xEA	; 234
    1042:	b6 e4       	ldi	r27, 0x46	; 70
    1044:	80 93 00 01 	sts	0x0100, r24
    1048:	90 93 01 01 	sts	0x0101, r25
    104c:	a0 93 02 01 	sts	0x0102, r26
    1050:	b0 93 03 01 	sts	0x0103, r27
    1054:	0f 2e       	mov	r0, r31
    1056:	f7 e5       	ldi	r31, 0x57	; 87
    1058:	cf 2e       	mov	r12, r31
    105a:	f1 e0       	ldi	r31, 0x01	; 1
    105c:	df 2e       	mov	r13, r31
    105e:	f0 2d       	mov	r31, r0
    1060:	09 e5       	ldi	r16, 0x59	; 89
    1062:	11 e0       	ldi	r17, 0x01	; 1
    1064:	0f 2e       	mov	r0, r31
    1066:	fb e5       	ldi	r31, 0x5B	; 91
    1068:	ef 2e       	mov	r14, r31
    106a:	f1 e0       	ldi	r31, 0x01	; 1
    106c:	ff 2e       	mov	r15, r31
    106e:	f0 2d       	mov	r31, r0
    1070:	6d e4       	ldi	r22, 0x4D	; 77
    1072:	71 e0       	ldi	r23, 0x01	; 1
    1074:	85 e5       	ldi	r24, 0x55	; 85
    1076:	91 e0       	ldi	r25, 0x01	; 1
    1078:	0e 94 bb 07 	call	0xf76	; 0xf76 <getData>
    107c:	80 91 55 01 	lds	r24, 0x0155
    1080:	90 91 56 01 	lds	r25, 0x0156
    1084:	8f 3f       	cpi	r24, 0xFF	; 255
    1086:	93 40       	sbci	r25, 0x03	; 3
    1088:	98 f7       	brcc	.-26     	; 0x1070 <determine_blobs+0x78>
    108a:	f6 01       	movw	r30, r12
    108c:	80 81       	ld	r24, Z
    108e:	91 81       	ldd	r25, Z+1	; 0x01
    1090:	8f 3f       	cpi	r24, 0xFF	; 255
    1092:	93 40       	sbci	r25, 0x03	; 3
    1094:	68 f7       	brcc	.-38     	; 0x1070 <determine_blobs+0x78>
    1096:	f8 01       	movw	r30, r16
    1098:	80 81       	ld	r24, Z
    109a:	91 81       	ldd	r25, Z+1	; 0x01
    109c:	8f 3f       	cpi	r24, 0xFF	; 255
    109e:	93 40       	sbci	r25, 0x03	; 3
    10a0:	38 f7       	brcc	.-50     	; 0x1070 <determine_blobs+0x78>
    10a2:	f7 01       	movw	r30, r14
    10a4:	80 81       	ld	r24, Z
    10a6:	91 81       	ldd	r25, Z+1	; 0x01
    10a8:	8f 3f       	cpi	r24, 0xFF	; 255
    10aa:	93 40       	sbci	r25, 0x03	; 3
    10ac:	08 f7       	brcc	.-62     	; 0x1070 <determine_blobs+0x78>
    10ae:	80 90 49 01 	lds	r8, 0x0149
    10b2:	90 90 4a 01 	lds	r9, 0x014A
    10b6:	a0 90 4b 01 	lds	r10, 0x014B
    10ba:	b0 90 4c 01 	lds	r11, 0x014C
    10be:	20 91 45 01 	lds	r18, 0x0145
    10c2:	29 83       	std	Y+1, r18	; 0x01
    10c4:	30 91 46 01 	lds	r19, 0x0146
    10c8:	3a 83       	std	Y+2, r19	; 0x02
    10ca:	40 91 47 01 	lds	r20, 0x0147
    10ce:	4b 83       	std	Y+3, r20	; 0x03
    10d0:	50 91 48 01 	lds	r21, 0x0148
    10d4:	5c 83       	std	Y+4, r21	; 0x04
    10d6:	60 91 3f 01 	lds	r22, 0x013F
    10da:	6b 8b       	std	Y+19, r22	; 0x13
    10dc:	70 91 40 01 	lds	r23, 0x0140
    10e0:	7c 8b       	std	Y+20, r23	; 0x14
    10e2:	80 91 3d 01 	lds	r24, 0x013D
    10e6:	89 8b       	std	Y+17, r24	; 0x11
    10e8:	90 91 3e 01 	lds	r25, 0x013E
    10ec:	9a 8b       	std	Y+18, r25	; 0x12
    10ee:	e0 91 41 01 	lds	r30, 0x0141
    10f2:	ed 8b       	std	Y+21, r30	; 0x15
    10f4:	f0 91 42 01 	lds	r31, 0x0142
    10f8:	fe 8b       	std	Y+22, r31	; 0x16
    10fa:	20 91 43 01 	lds	r18, 0x0143
    10fe:	2f 8b       	std	Y+23, r18	; 0x17
    1100:	30 91 44 01 	lds	r19, 0x0144
    1104:	38 8f       	std	Y+24, r19	; 0x18
    1106:	40 91 00 01 	lds	r20, 0x0100
    110a:	4d 83       	std	Y+5, r20	; 0x05
    110c:	50 91 01 01 	lds	r21, 0x0101
    1110:	5e 83       	std	Y+6, r21	; 0x06
    1112:	20 90 02 01 	lds	r2, 0x0102
    1116:	30 90 03 01 	lds	r3, 0x0103
    111a:	60 91 3b 01 	lds	r22, 0x013B
    111e:	69 8f       	std	Y+25, r22	; 0x19
    1120:	70 91 3c 01 	lds	r23, 0x013C
    1124:	7a 8f       	std	Y+26, r23	; 0x1a
    1126:	80 91 39 01 	lds	r24, 0x0139
    112a:	90 91 3a 01 	lds	r25, 0x013A
    112e:	98 8b       	std	Y+16, r25	; 0x10
    1130:	8f 87       	std	Y+15, r24	; 0x0f
    1132:	18 86       	std	Y+8, r1	; 0x08
    1134:	1f 82       	std	Y+7, r1	; 0x07
    1136:	c1 2c       	mov	r12, r1
    1138:	d1 2c       	mov	r13, r1
    113a:	b9 c0       	rjmp	.+370    	; 0x12ae <determine_blobs+0x2b6>
    113c:	eb 8d       	ldd	r30, Y+27	; 0x1b
    113e:	fc 8d       	ldd	r31, Y+28	; 0x1c
    1140:	e4 15       	cp	r30, r4
    1142:	f5 05       	cpc	r31, r5
    1144:	09 f4       	brne	.+2      	; 0x1148 <determine_blobs+0x150>
    1146:	9c c0       	rjmp	.+312    	; 0x1280 <determine_blobs+0x288>
    1148:	e9 85       	ldd	r30, Y+9	; 0x09
    114a:	fa 85       	ldd	r31, Y+10	; 0x0a
    114c:	60 81       	ld	r22, Z
    114e:	71 81       	ldd	r23, Z+1	; 0x01
    1150:	80 e0       	ldi	r24, 0x00	; 0
    1152:	90 e0       	ldi	r25, 0x00	; 0
    1154:	0e 94 9b 14 	call	0x2936	; 0x2936 <__floatunsisf>
    1158:	6b 01       	movw	r12, r22
    115a:	7c 01       	movw	r14, r24
    115c:	f3 01       	movw	r30, r6
    115e:	60 81       	ld	r22, Z
    1160:	71 81       	ldd	r23, Z+1	; 0x01
    1162:	80 e0       	ldi	r24, 0x00	; 0
    1164:	90 e0       	ldi	r25, 0x00	; 0
    1166:	0e 94 9b 14 	call	0x2936	; 0x2936 <__floatunsisf>
    116a:	9b 01       	movw	r18, r22
    116c:	ac 01       	movw	r20, r24
    116e:	c7 01       	movw	r24, r14
    1170:	b6 01       	movw	r22, r12
    1172:	0e 94 03 13 	call	0x2606	; 0x2606 <__subsf3>
    1176:	c6 2e       	mov	r12, r22
    1178:	d7 2e       	mov	r13, r23
    117a:	e8 2e       	mov	r14, r24
    117c:	f9 2e       	mov	r15, r25
    117e:	eb 85       	ldd	r30, Y+11	; 0x0b
    1180:	fc 85       	ldd	r31, Y+12	; 0x0c
    1182:	60 81       	ld	r22, Z
    1184:	71 81       	ldd	r23, Z+1	; 0x01
    1186:	80 e0       	ldi	r24, 0x00	; 0
    1188:	90 e0       	ldi	r25, 0x00	; 0
    118a:	0e 94 9b 14 	call	0x2936	; 0x2936 <__floatunsisf>
    118e:	4b 01       	movw	r8, r22
    1190:	5c 01       	movw	r10, r24
    1192:	f8 01       	movw	r30, r16
    1194:	60 81       	ld	r22, Z
    1196:	71 81       	ldd	r23, Z+1	; 0x01
    1198:	80 e0       	ldi	r24, 0x00	; 0
    119a:	90 e0       	ldi	r25, 0x00	; 0
    119c:	0e 94 9b 14 	call	0x2936	; 0x2936 <__floatunsisf>
    11a0:	9b 01       	movw	r18, r22
    11a2:	ac 01       	movw	r20, r24
    11a4:	c5 01       	movw	r24, r10
    11a6:	b4 01       	movw	r22, r8
    11a8:	0e 94 03 13 	call	0x2606	; 0x2606 <__subsf3>
    11ac:	86 2e       	mov	r8, r22
    11ae:	97 2e       	mov	r9, r23
    11b0:	a8 2e       	mov	r10, r24
    11b2:	b9 2e       	mov	r11, r25
    11b4:	2c 2d       	mov	r18, r12
    11b6:	3d 2d       	mov	r19, r13
    11b8:	4e 2d       	mov	r20, r14
    11ba:	5f 2d       	mov	r21, r15
    11bc:	6c 2d       	mov	r22, r12
    11be:	7d 2d       	mov	r23, r13
    11c0:	8e 2d       	mov	r24, r14
    11c2:	9f 2d       	mov	r25, r15
    11c4:	0e 94 1f 16 	call	0x2c3e	; 0x2c3e <__mulsf3>
    11c8:	6b 01       	movw	r12, r22
    11ca:	7c 01       	movw	r14, r24
    11cc:	28 2d       	mov	r18, r8
    11ce:	39 2d       	mov	r19, r9
    11d0:	4a 2d       	mov	r20, r10
    11d2:	5b 2d       	mov	r21, r11
    11d4:	68 2d       	mov	r22, r8
    11d6:	79 2d       	mov	r23, r9
    11d8:	8a 2d       	mov	r24, r10
    11da:	9b 2d       	mov	r25, r11
    11dc:	0e 94 1f 16 	call	0x2c3e	; 0x2c3e <__mulsf3>
    11e0:	9b 01       	movw	r18, r22
    11e2:	ac 01       	movw	r20, r24
    11e4:	c7 01       	movw	r24, r14
    11e6:	b6 01       	movw	r22, r12
    11e8:	0e 94 04 13 	call	0x2608	; 0x2608 <__addsf3>
    11ec:	0e 94 8c 16 	call	0x2d18	; 0x2d18 <sqrt>
    11f0:	86 2e       	mov	r8, r22
    11f2:	97 2e       	mov	r9, r23
    11f4:	a8 2e       	mov	r10, r24
    11f6:	b9 2e       	mov	r11, r25
    11f8:	79 81       	ldd	r23, Y+1	; 0x01
    11fa:	6a 81       	ldd	r22, Y+2	; 0x02
    11fc:	9b 81       	ldd	r25, Y+3	; 0x03
    11fe:	8c 81       	ldd	r24, Y+4	; 0x04
    1200:	27 2f       	mov	r18, r23
    1202:	36 2f       	mov	r19, r22
    1204:	49 2f       	mov	r20, r25
    1206:	58 2f       	mov	r21, r24
    1208:	68 2d       	mov	r22, r8
    120a:	79 2d       	mov	r23, r9
    120c:	8a 2d       	mov	r24, r10
    120e:	9b 2d       	mov	r25, r11
    1210:	0e 94 ab 15 	call	0x2b56	; 0x2b56 <__gesf2>
    1214:	18 16       	cp	r1, r24
    1216:	d4 f4       	brge	.+52     	; 0x124c <determine_blobs+0x254>
    1218:	20 e0       	ldi	r18, 0x00	; 0
    121a:	30 e0       	ldi	r19, 0x00	; 0
    121c:	40 e0       	ldi	r20, 0x00	; 0
    121e:	5f e3       	ldi	r21, 0x3F	; 63
    1220:	68 2d       	mov	r22, r8
    1222:	79 2d       	mov	r23, r9
    1224:	8a 2d       	mov	r24, r10
    1226:	9b 2d       	mov	r25, r11
    1228:	0e 94 1f 16 	call	0x2c3e	; 0x2c3e <__mulsf3>
    122c:	6d 8b       	std	Y+21, r22	; 0x15
    122e:	7e 8b       	std	Y+22, r23	; 0x16
    1230:	8f 8b       	std	Y+23, r24	; 0x17
    1232:	98 8f       	std	Y+24, r25	; 0x18
    1234:	fb 8d       	ldd	r31, Y+27	; 0x1b
    1236:	f9 8b       	std	Y+17, r31	; 0x11
    1238:	2c 8d       	ldd	r18, Y+28	; 0x1c
    123a:	2a 8b       	std	Y+18, r18	; 0x12
    123c:	3d 85       	ldd	r19, Y+13	; 0x0d
    123e:	3b 8b       	std	Y+19, r19	; 0x13
    1240:	4e 85       	ldd	r20, Y+14	; 0x0e
    1242:	4c 8b       	std	Y+20, r20	; 0x14
    1244:	89 82       	std	Y+1, r8	; 0x01
    1246:	9a 82       	std	Y+2, r9	; 0x02
    1248:	ab 82       	std	Y+3, r10	; 0x03
    124a:	bc 82       	std	Y+4, r11	; 0x04
    124c:	7d 81       	ldd	r23, Y+5	; 0x05
    124e:	6e 81       	ldd	r22, Y+6	; 0x06
    1250:	27 2f       	mov	r18, r23
    1252:	36 2f       	mov	r19, r22
    1254:	42 2d       	mov	r20, r2
    1256:	53 2d       	mov	r21, r3
    1258:	68 2d       	mov	r22, r8
    125a:	79 2d       	mov	r23, r9
    125c:	8a 2d       	mov	r24, r10
    125e:	9b 2d       	mov	r25, r11
    1260:	0e 94 ca 13 	call	0x2794	; 0x2794 <__cmpsf2>
    1264:	88 23       	and	r24, r24
    1266:	64 f4       	brge	.+24     	; 0x1280 <determine_blobs+0x288>
    1268:	6b 8d       	ldd	r22, Y+27	; 0x1b
    126a:	7c 8d       	ldd	r23, Y+28	; 0x1c
    126c:	78 8b       	std	Y+16, r23	; 0x10
    126e:	6f 87       	std	Y+15, r22	; 0x0f
    1270:	7d 85       	ldd	r23, Y+13	; 0x0d
    1272:	79 8f       	std	Y+25, r23	; 0x19
    1274:	8e 85       	ldd	r24, Y+14	; 0x0e
    1276:	8a 8f       	std	Y+26, r24	; 0x1a
    1278:	8d 82       	std	Y+5, r8	; 0x05
    127a:	9e 82       	std	Y+6, r9	; 0x06
    127c:	2a 2c       	mov	r2, r10
    127e:	3b 2c       	mov	r3, r11
    1280:	92 e0       	ldi	r25, 0x02	; 2
    1282:	69 0e       	add	r6, r25
    1284:	71 1c       	adc	r7, r1
    1286:	0e 5f       	subi	r16, 0xFE	; 254
    1288:	1f 4f       	sbci	r17, 0xFF	; 255
    128a:	eb 8d       	ldd	r30, Y+27	; 0x1b
    128c:	fc 8d       	ldd	r31, Y+28	; 0x1c
    128e:	31 96       	adiw	r30, 0x01	; 1
    1290:	fc 8f       	std	Y+28, r31	; 0x1c
    1292:	eb 8f       	std	Y+27, r30	; 0x1b
    1294:	34 97       	sbiw	r30, 0x04	; 4
    1296:	09 f0       	breq	.+2      	; 0x129a <determine_blobs+0x2a2>
    1298:	51 cf       	rjmp	.-350    	; 0x113c <determine_blobs+0x144>
    129a:	2f 81       	ldd	r18, Y+7	; 0x07
    129c:	38 85       	ldd	r19, Y+8	; 0x08
    129e:	2f 5f       	subi	r18, 0xFF	; 255
    12a0:	3f 4f       	sbci	r19, 0xFF	; 255
    12a2:	38 87       	std	Y+8, r19	; 0x08
    12a4:	2f 83       	std	Y+7, r18	; 0x07
    12a6:	69 01       	movw	r12, r18
    12a8:	24 30       	cpi	r18, 0x04	; 4
    12aa:	31 05       	cpc	r19, r1
    12ac:	39 f1       	breq	.+78     	; 0x12fc <determine_blobs+0x304>
    12ae:	34 e0       	ldi	r19, 0x04	; 4
    12b0:	c3 16       	cp	r12, r19
    12b2:	d1 04       	cpc	r13, r1
    12b4:	94 f7       	brge	.-28     	; 0x129a <determine_blobs+0x2a2>
    12b6:	86 01       	movw	r16, r12
    12b8:	0f 5f       	subi	r16, 0xFF	; 255
    12ba:	1f 4f       	sbci	r17, 0xFF	; 255
    12bc:	00 0f       	add	r16, r16
    12be:	11 1f       	adc	r17, r17
    12c0:	0f 2e       	mov	r0, r31
    12c2:	f5 e5       	ldi	r31, 0x55	; 85
    12c4:	ef 2e       	mov	r14, r31
    12c6:	f1 e0       	ldi	r31, 0x01	; 1
    12c8:	ff 2e       	mov	r15, r31
    12ca:	f0 2d       	mov	r31, r0
    12cc:	e0 0e       	add	r14, r16
    12ce:	f1 1e       	adc	r15, r17
    12d0:	03 5b       	subi	r16, 0xB3	; 179
    12d2:	1e 4f       	sbci	r17, 0xFE	; 254
    12d4:	c6 01       	movw	r24, r12
    12d6:	88 0f       	add	r24, r24
    12d8:	99 1f       	adc	r25, r25
    12da:	ac 01       	movw	r20, r24
    12dc:	4b 5a       	subi	r20, 0xAB	; 171
    12de:	5e 4f       	sbci	r21, 0xFE	; 254
    12e0:	5a 87       	std	Y+10, r21	; 0x0a
    12e2:	49 87       	std	Y+9, r20	; 0x09
    12e4:	bc 01       	movw	r22, r24
    12e6:	63 5b       	subi	r22, 0xB3	; 179
    12e8:	7e 4f       	sbci	r23, 0xFE	; 254
    12ea:	7c 87       	std	Y+12, r23	; 0x0c
    12ec:	6b 87       	std	Y+11, r22	; 0x0b
    12ee:	cd 86       	std	Y+13, r12	; 0x0d
    12f0:	de 86       	std	Y+14, r13	; 0x0e
    12f2:	dc 8e       	std	Y+28, r13	; 0x1c
    12f4:	cb 8e       	std	Y+27, r12	; 0x1b
    12f6:	26 01       	movw	r4, r12
    12f8:	37 01       	movw	r6, r14
    12fa:	c7 cf       	rjmp	.-114    	; 0x128a <determine_blobs+0x292>
    12fc:	88 2d       	mov	r24, r8
    12fe:	99 2d       	mov	r25, r9
    1300:	aa 2d       	mov	r26, r10
    1302:	bb 2d       	mov	r27, r11
    1304:	80 93 49 01 	sts	0x0149, r24
    1308:	90 93 4a 01 	sts	0x014A, r25
    130c:	a0 93 4b 01 	sts	0x014B, r26
    1310:	b0 93 4c 01 	sts	0x014C, r27
    1314:	59 81       	ldd	r21, Y+1	; 0x01
    1316:	4a 81       	ldd	r20, Y+2	; 0x02
    1318:	3b 81       	ldd	r19, Y+3	; 0x03
    131a:	2c 81       	ldd	r18, Y+4	; 0x04
    131c:	85 2f       	mov	r24, r21
    131e:	94 2f       	mov	r25, r20
    1320:	a3 2f       	mov	r26, r19
    1322:	b2 2f       	mov	r27, r18
    1324:	80 93 45 01 	sts	0x0145, r24
    1328:	90 93 46 01 	sts	0x0146, r25
    132c:	a0 93 47 01 	sts	0x0147, r26
    1330:	b0 93 48 01 	sts	0x0148, r27
    1334:	7b 89       	ldd	r23, Y+19	; 0x13
    1336:	70 93 3f 01 	sts	0x013F, r23
    133a:	8c 89       	ldd	r24, Y+20	; 0x14
    133c:	80 93 40 01 	sts	0x0140, r24
    1340:	99 89       	ldd	r25, Y+17	; 0x11
    1342:	90 93 3d 01 	sts	0x013D, r25
    1346:	ea 89       	ldd	r30, Y+18	; 0x12
    1348:	e0 93 3e 01 	sts	0x013E, r30
    134c:	5d 89       	ldd	r21, Y+21	; 0x15
    134e:	4e 89       	ldd	r20, Y+22	; 0x16
    1350:	3f 89       	ldd	r19, Y+23	; 0x17
    1352:	28 8d       	ldd	r18, Y+24	; 0x18
    1354:	85 2f       	mov	r24, r21
    1356:	94 2f       	mov	r25, r20
    1358:	a3 2f       	mov	r26, r19
    135a:	b2 2f       	mov	r27, r18
    135c:	80 93 41 01 	sts	0x0141, r24
    1360:	90 93 42 01 	sts	0x0142, r25
    1364:	a0 93 43 01 	sts	0x0143, r26
    1368:	b0 93 44 01 	sts	0x0144, r27
    136c:	5d 81       	ldd	r21, Y+5	; 0x05
    136e:	4e 81       	ldd	r20, Y+6	; 0x06
    1370:	85 2f       	mov	r24, r21
    1372:	94 2f       	mov	r25, r20
    1374:	a2 2d       	mov	r26, r2
    1376:	b3 2d       	mov	r27, r3
    1378:	80 93 00 01 	sts	0x0100, r24
    137c:	90 93 01 01 	sts	0x0101, r25
    1380:	a0 93 02 01 	sts	0x0102, r26
    1384:	b0 93 03 01 	sts	0x0103, r27
    1388:	f9 8d       	ldd	r31, Y+25	; 0x19
    138a:	f0 93 3b 01 	sts	0x013B, r31
    138e:	2a 8d       	ldd	r18, Y+26	; 0x1a
    1390:	20 93 3c 01 	sts	0x013C, r18
    1394:	3f 85       	ldd	r19, Y+15	; 0x0f
    1396:	30 93 39 01 	sts	0x0139, r19
    139a:	48 89       	ldd	r20, Y+16	; 0x10
    139c:	40 93 3a 01 	sts	0x013A, r20
    13a0:	80 91 3f 01 	lds	r24, 0x013F
    13a4:	90 91 40 01 	lds	r25, 0x0140
    13a8:	20 91 3b 01 	lds	r18, 0x013B
    13ac:	30 91 3c 01 	lds	r19, 0x013C
    13b0:	82 17       	cp	r24, r18
    13b2:	93 07       	cpc	r25, r19
    13b4:	19 f5       	brne	.+70     	; 0x13fc <determine_blobs+0x404>
    13b6:	90 93 7c 01 	sts	0x017C, r25
    13ba:	80 93 7b 01 	sts	0x017B, r24
    13be:	40 91 3d 01 	lds	r20, 0x013D
    13c2:	50 91 3e 01 	lds	r21, 0x013E
    13c6:	50 93 7a 01 	sts	0x017A, r21
    13ca:	40 93 79 01 	sts	0x0179, r20
    13ce:	20 91 39 01 	lds	r18, 0x0139
    13d2:	30 91 3a 01 	lds	r19, 0x013A
    13d6:	30 93 76 01 	sts	0x0176, r19
    13da:	20 93 75 01 	sts	0x0175, r18
    13de:	69 e0       	ldi	r22, 0x09	; 9
    13e0:	70 e0       	ldi	r23, 0x00	; 0
    13e2:	fb 01       	movw	r30, r22
    13e4:	e8 1b       	sub	r30, r24
    13e6:	f9 0b       	sbc	r31, r25
    13e8:	cf 01       	movw	r24, r30
    13ea:	84 1b       	sub	r24, r20
    13ec:	95 0b       	sbc	r25, r21
    13ee:	82 1b       	sub	r24, r18
    13f0:	93 0b       	sbc	r25, r19
    13f2:	90 93 78 01 	sts	0x0178, r25
    13f6:	80 93 77 01 	sts	0x0177, r24
    13fa:	66 c0       	rjmp	.+204    	; 0x14c8 <determine_blobs+0x4d0>
    13fc:	4f 85       	ldd	r20, Y+15	; 0x0f
    13fe:	58 89       	ldd	r21, Y+16	; 0x10
    1400:	84 17       	cp	r24, r20
    1402:	95 07       	cpc	r25, r21
    1404:	f9 f4       	brne	.+62     	; 0x1444 <determine_blobs+0x44c>
    1406:	90 93 7c 01 	sts	0x017C, r25
    140a:	80 93 7b 01 	sts	0x017B, r24
    140e:	40 91 3d 01 	lds	r20, 0x013D
    1412:	50 91 3e 01 	lds	r21, 0x013E
    1416:	50 93 7a 01 	sts	0x017A, r21
    141a:	40 93 79 01 	sts	0x0179, r20
    141e:	30 93 76 01 	sts	0x0176, r19
    1422:	20 93 75 01 	sts	0x0175, r18
    1426:	69 e0       	ldi	r22, 0x09	; 9
    1428:	70 e0       	ldi	r23, 0x00	; 0
    142a:	fb 01       	movw	r30, r22
    142c:	e8 1b       	sub	r30, r24
    142e:	f9 0b       	sbc	r31, r25
    1430:	cf 01       	movw	r24, r30
    1432:	84 1b       	sub	r24, r20
    1434:	95 0b       	sbc	r25, r21
    1436:	82 1b       	sub	r24, r18
    1438:	93 0b       	sbc	r25, r19
    143a:	90 93 78 01 	sts	0x0178, r25
    143e:	80 93 77 01 	sts	0x0177, r24
    1442:	42 c0       	rjmp	.+132    	; 0x14c8 <determine_blobs+0x4d0>
    1444:	40 91 3d 01 	lds	r20, 0x013D
    1448:	50 91 3e 01 	lds	r21, 0x013E
    144c:	24 17       	cp	r18, r20
    144e:	35 07       	cpc	r19, r21
    1450:	01 f5       	brne	.+64     	; 0x1492 <determine_blobs+0x49a>
    1452:	30 93 7c 01 	sts	0x017C, r19
    1456:	20 93 7b 01 	sts	0x017B, r18
    145a:	90 93 7a 01 	sts	0x017A, r25
    145e:	80 93 79 01 	sts	0x0179, r24
    1462:	4f 85       	ldd	r20, Y+15	; 0x0f
    1464:	58 89       	ldd	r21, Y+16	; 0x10
    1466:	50 93 76 01 	sts	0x0176, r21
    146a:	40 93 75 01 	sts	0x0175, r20
    146e:	49 e0       	ldi	r20, 0x09	; 9
    1470:	50 e0       	ldi	r21, 0x00	; 0
    1472:	ba 01       	movw	r22, r20
    1474:	62 1b       	sub	r22, r18
    1476:	73 0b       	sbc	r23, r19
    1478:	fb 01       	movw	r30, r22
    147a:	e8 1b       	sub	r30, r24
    147c:	f9 0b       	sbc	r31, r25
    147e:	cf 01       	movw	r24, r30
    1480:	2f 85       	ldd	r18, Y+15	; 0x0f
    1482:	38 89       	ldd	r19, Y+16	; 0x10
    1484:	82 1b       	sub	r24, r18
    1486:	93 0b       	sbc	r25, r19
    1488:	90 93 78 01 	sts	0x0178, r25
    148c:	80 93 77 01 	sts	0x0177, r24
    1490:	1b c0       	rjmp	.+54     	; 0x14c8 <determine_blobs+0x4d0>
    1492:	50 93 7c 01 	sts	0x017C, r21
    1496:	40 93 7b 01 	sts	0x017B, r20
    149a:	90 93 7a 01 	sts	0x017A, r25
    149e:	80 93 79 01 	sts	0x0179, r24
    14a2:	30 93 76 01 	sts	0x0176, r19
    14a6:	20 93 75 01 	sts	0x0175, r18
    14aa:	69 e0       	ldi	r22, 0x09	; 9
    14ac:	70 e0       	ldi	r23, 0x00	; 0
    14ae:	fb 01       	movw	r30, r22
    14b0:	e4 1b       	sub	r30, r20
    14b2:	f5 0b       	sbc	r31, r21
    14b4:	bf 01       	movw	r22, r30
    14b6:	68 1b       	sub	r22, r24
    14b8:	79 0b       	sbc	r23, r25
    14ba:	cb 01       	movw	r24, r22
    14bc:	82 1b       	sub	r24, r18
    14be:	93 0b       	sbc	r25, r19
    14c0:	90 93 78 01 	sts	0x0178, r25
    14c4:	80 93 77 01 	sts	0x0177, r24
    14c8:	81 e0       	ldi	r24, 0x01	; 1
    14ca:	6c 96       	adiw	r28, 0x1c	; 28
    14cc:	0f b6       	in	r0, 0x3f	; 63
    14ce:	f8 94       	cli
    14d0:	de bf       	out	0x3e, r29	; 62
    14d2:	0f be       	out	0x3f, r0	; 63
    14d4:	cd bf       	out	0x3d, r28	; 61
    14d6:	df 91       	pop	r29
    14d8:	cf 91       	pop	r28
    14da:	1f 91       	pop	r17
    14dc:	0f 91       	pop	r16
    14de:	ff 90       	pop	r15
    14e0:	ef 90       	pop	r14
    14e2:	df 90       	pop	r13
    14e4:	cf 90       	pop	r12
    14e6:	bf 90       	pop	r11
    14e8:	af 90       	pop	r10
    14ea:	9f 90       	pop	r9
    14ec:	8f 90       	pop	r8
    14ee:	7f 90       	pop	r7
    14f0:	6f 90       	pop	r6
    14f2:	5f 90       	pop	r5
    14f4:	4f 90       	pop	r4
    14f6:	3f 90       	pop	r3
    14f8:	2f 90       	pop	r2
    14fa:	08 95       	ret

000014fc <localize>:
    14fc:	2f 92       	push	r2
    14fe:	3f 92       	push	r3
    1500:	4f 92       	push	r4
    1502:	5f 92       	push	r5
    1504:	6f 92       	push	r6
    1506:	7f 92       	push	r7
    1508:	8f 92       	push	r8
    150a:	9f 92       	push	r9
    150c:	af 92       	push	r10
    150e:	bf 92       	push	r11
    1510:	cf 92       	push	r12
    1512:	df 92       	push	r13
    1514:	ef 92       	push	r14
    1516:	ff 92       	push	r15
    1518:	0f 93       	push	r16
    151a:	1f 93       	push	r17
    151c:	cf 93       	push	r28
    151e:	df 93       	push	r29
    1520:	cd b7       	in	r28, 0x3d	; 61
    1522:	de b7       	in	r29, 0x3e	; 62
    1524:	2d 97       	sbiw	r28, 0x0d	; 13
    1526:	0f b6       	in	r0, 0x3f	; 63
    1528:	f8 94       	cli
    152a:	de bf       	out	0x3e, r29	; 62
    152c:	0f be       	out	0x3f, r0	; 63
    152e:	cd bf       	out	0x3d, r28	; 61
    1530:	8c 01       	movw	r16, r24
    1532:	10 92 38 01 	sts	0x0138, r1
    1536:	10 92 37 01 	sts	0x0137, r1
    153a:	0e 94 fc 07 	call	0xff8	; 0xff8 <determine_blobs>
    153e:	e0 90 7b 01 	lds	r14, 0x017B
    1542:	f0 90 7c 01 	lds	r15, 0x017C
    1546:	f7 01       	movw	r30, r14
    1548:	ee 0f       	add	r30, r30
    154a:	ff 1f       	adc	r31, r31
    154c:	eb 5a       	subi	r30, 0xAB	; 171
    154e:	fe 4f       	sbci	r31, 0xFE	; 254
    1550:	20 81       	ld	r18, Z
    1552:	31 81       	ldd	r19, Z+1	; 0x01
    1554:	3a 83       	std	Y+2, r19	; 0x02
    1556:	29 83       	std	Y+1, r18	; 0x01
    1558:	2f 3f       	cpi	r18, 0xFF	; 255
    155a:	83 e0       	ldi	r24, 0x03	; 3
    155c:	38 07       	cpc	r19, r24
    155e:	08 f0       	brcs	.+2      	; 0x1562 <localize+0x66>
    1560:	ea c2       	rjmp	.+1492   	; 0x1b36 <localize+0x63a>
    1562:	a0 90 79 01 	lds	r10, 0x0179
    1566:	b0 90 7a 01 	lds	r11, 0x017A
    156a:	f5 01       	movw	r30, r10
    156c:	ee 0f       	add	r30, r30
    156e:	ff 1f       	adc	r31, r31
    1570:	eb 5a       	subi	r30, 0xAB	; 171
    1572:	fe 4f       	sbci	r31, 0xFE	; 254
    1574:	c0 80       	ld	r12, Z
    1576:	d1 80       	ldd	r13, Z+1	; 0x01
    1578:	9f ef       	ldi	r25, 0xFF	; 255
    157a:	c9 16       	cp	r12, r25
    157c:	93 e0       	ldi	r25, 0x03	; 3
    157e:	d9 06       	cpc	r13, r25
    1580:	08 f0       	brcs	.+2      	; 0x1584 <localize+0x88>
    1582:	d9 c2       	rjmp	.+1458   	; 0x1b36 <localize+0x63a>
    1584:	b9 01       	movw	r22, r18
    1586:	6c 0d       	add	r22, r12
    1588:	7d 1d       	adc	r23, r13
    158a:	80 e0       	ldi	r24, 0x00	; 0
    158c:	90 e0       	ldi	r25, 0x00	; 0
    158e:	0e 94 9b 14 	call	0x2936	; 0x2936 <__floatunsisf>
    1592:	20 e0       	ldi	r18, 0x00	; 0
    1594:	30 e0       	ldi	r19, 0x00	; 0
    1596:	40 e0       	ldi	r20, 0x00	; 0
    1598:	5f e3       	ldi	r21, 0x3F	; 63
    159a:	0e 94 1f 16 	call	0x2c3e	; 0x2c3e <__mulsf3>
    159e:	20 91 08 01 	lds	r18, 0x0108
    15a2:	30 91 09 01 	lds	r19, 0x0109
    15a6:	40 91 0a 01 	lds	r20, 0x010A
    15aa:	50 91 0b 01 	lds	r21, 0x010B
    15ae:	0e 94 03 13 	call	0x2606	; 0x2606 <__subsf3>
    15b2:	6d 83       	std	Y+5, r22	; 0x05
    15b4:	7e 83       	std	Y+6, r23	; 0x06
    15b6:	8f 83       	std	Y+7, r24	; 0x07
    15b8:	98 87       	std	Y+8, r25	; 0x08
    15ba:	f7 01       	movw	r30, r14
    15bc:	ee 0f       	add	r30, r30
    15be:	ff 1f       	adc	r31, r31
    15c0:	e3 5b       	subi	r30, 0xB3	; 179
    15c2:	fe 4f       	sbci	r31, 0xFE	; 254
    15c4:	e0 80       	ld	r14, Z
    15c6:	f1 80       	ldd	r15, Z+1	; 0x01
    15c8:	f5 01       	movw	r30, r10
    15ca:	ee 0f       	add	r30, r30
    15cc:	ff 1f       	adc	r31, r31
    15ce:	e3 5b       	subi	r30, 0xB3	; 179
    15d0:	fe 4f       	sbci	r31, 0xFE	; 254
    15d2:	a0 80       	ld	r10, Z
    15d4:	b1 80       	ldd	r11, Z+1	; 0x01
    15d6:	b5 01       	movw	r22, r10
    15d8:	6e 0d       	add	r22, r14
    15da:	7f 1d       	adc	r23, r15
    15dc:	80 e0       	ldi	r24, 0x00	; 0
    15de:	90 e0       	ldi	r25, 0x00	; 0
    15e0:	0e 94 9b 14 	call	0x2936	; 0x2936 <__floatunsisf>
    15e4:	20 e0       	ldi	r18, 0x00	; 0
    15e6:	30 e0       	ldi	r19, 0x00	; 0
    15e8:	40 e0       	ldi	r20, 0x00	; 0
    15ea:	5f e3       	ldi	r21, 0x3F	; 63
    15ec:	0e 94 1f 16 	call	0x2c3e	; 0x2c3e <__mulsf3>
    15f0:	20 91 04 01 	lds	r18, 0x0104
    15f4:	30 91 05 01 	lds	r19, 0x0105
    15f8:	40 91 06 01 	lds	r20, 0x0106
    15fc:	50 91 07 01 	lds	r21, 0x0107
    1600:	0e 94 03 13 	call	0x2606	; 0x2606 <__subsf3>
    1604:	69 87       	std	Y+9, r22	; 0x09
    1606:	7a 87       	std	Y+10, r23	; 0x0a
    1608:	28 2e       	mov	r2, r24
    160a:	39 2e       	mov	r3, r25
    160c:	b7 01       	movw	r22, r14
    160e:	80 e0       	ldi	r24, 0x00	; 0
    1610:	90 e0       	ldi	r25, 0x00	; 0
    1612:	0e 94 9b 14 	call	0x2936	; 0x2936 <__floatunsisf>
    1616:	2b 01       	movw	r4, r22
    1618:	3c 01       	movw	r6, r24
    161a:	b5 01       	movw	r22, r10
    161c:	80 e0       	ldi	r24, 0x00	; 0
    161e:	90 e0       	ldi	r25, 0x00	; 0
    1620:	0e 94 9b 14 	call	0x2936	; 0x2936 <__floatunsisf>
    1624:	9b 01       	movw	r18, r22
    1626:	ac 01       	movw	r20, r24
    1628:	c3 01       	movw	r24, r6
    162a:	b2 01       	movw	r22, r4
    162c:	0e 94 03 13 	call	0x2606	; 0x2606 <__subsf3>
    1630:	4b 01       	movw	r8, r22
    1632:	5c 01       	movw	r10, r24
    1634:	e9 81       	ldd	r30, Y+1	; 0x01
    1636:	fa 81       	ldd	r31, Y+2	; 0x02
    1638:	bf 01       	movw	r22, r30
    163a:	80 e0       	ldi	r24, 0x00	; 0
    163c:	90 e0       	ldi	r25, 0x00	; 0
    163e:	0e 94 9b 14 	call	0x2936	; 0x2936 <__floatunsisf>
    1642:	2b 01       	movw	r4, r22
    1644:	3c 01       	movw	r6, r24
    1646:	b6 01       	movw	r22, r12
    1648:	80 e0       	ldi	r24, 0x00	; 0
    164a:	90 e0       	ldi	r25, 0x00	; 0
    164c:	0e 94 9b 14 	call	0x2936	; 0x2936 <__floatunsisf>
    1650:	9b 01       	movw	r18, r22
    1652:	ac 01       	movw	r20, r24
    1654:	c3 01       	movw	r24, r6
    1656:	b2 01       	movw	r22, r4
    1658:	0e 94 03 13 	call	0x2606	; 0x2606 <__subsf3>
    165c:	a5 01       	movw	r20, r10
    165e:	94 01       	movw	r18, r8
    1660:	0e 94 77 13 	call	0x26ee	; 0x26ee <atan2>
    1664:	4b 01       	movw	r8, r22
    1666:	5c 01       	movw	r10, r24
    1668:	7d 81       	ldd	r23, Y+5	; 0x05
    166a:	6e 81       	ldd	r22, Y+6	; 0x06
    166c:	9f 81       	ldd	r25, Y+7	; 0x07
    166e:	88 85       	ldd	r24, Y+8	; 0x08
    1670:	27 2f       	mov	r18, r23
    1672:	36 2f       	mov	r19, r22
    1674:	49 2f       	mov	r20, r25
    1676:	58 2f       	mov	r21, r24
    1678:	b9 85       	ldd	r27, Y+9	; 0x09
    167a:	aa 85       	ldd	r26, Y+10	; 0x0a
    167c:	6b 2f       	mov	r22, r27
    167e:	7a 2f       	mov	r23, r26
    1680:	82 2d       	mov	r24, r2
    1682:	93 2d       	mov	r25, r3
    1684:	0e 94 77 13 	call	0x26ee	; 0x26ee <atan2>
    1688:	2b 01       	movw	r4, r22
    168a:	3c 01       	movw	r6, r24
    168c:	7d 81       	ldd	r23, Y+5	; 0x05
    168e:	6e 81       	ldd	r22, Y+6	; 0x06
    1690:	9f 81       	ldd	r25, Y+7	; 0x07
    1692:	88 85       	ldd	r24, Y+8	; 0x08
    1694:	27 2f       	mov	r18, r23
    1696:	36 2f       	mov	r19, r22
    1698:	49 2f       	mov	r20, r25
    169a:	58 2f       	mov	r21, r24
    169c:	67 2f       	mov	r22, r23
    169e:	73 2f       	mov	r23, r19
    16a0:	89 2f       	mov	r24, r25
    16a2:	95 2f       	mov	r25, r21
    16a4:	0e 94 1f 16 	call	0x2c3e	; 0x2c3e <__mulsf3>
    16a8:	6b 01       	movw	r12, r22
    16aa:	7c 01       	movw	r14, r24
    16ac:	79 85       	ldd	r23, Y+9	; 0x09
    16ae:	6a 85       	ldd	r22, Y+10	; 0x0a
    16b0:	27 2f       	mov	r18, r23
    16b2:	36 2f       	mov	r19, r22
    16b4:	42 2d       	mov	r20, r2
    16b6:	53 2d       	mov	r21, r3
    16b8:	67 2f       	mov	r22, r23
    16ba:	73 2f       	mov	r23, r19
    16bc:	82 2d       	mov	r24, r2
    16be:	93 2d       	mov	r25, r3
    16c0:	0e 94 1f 16 	call	0x2c3e	; 0x2c3e <__mulsf3>
    16c4:	9b 01       	movw	r18, r22
    16c6:	ac 01       	movw	r20, r24
    16c8:	c7 01       	movw	r24, r14
    16ca:	b6 01       	movw	r22, r12
    16cc:	0e 94 04 13 	call	0x2608	; 0x2608 <__addsf3>
    16d0:	0e 94 8c 16 	call	0x2d18	; 0x2d18 <sqrt>
    16d4:	6b 01       	movw	r12, r22
    16d6:	7c 01       	movw	r14, r24
    16d8:	20 e0       	ldi	r18, 0x00	; 0
    16da:	30 e0       	ldi	r19, 0x00	; 0
    16dc:	a9 01       	movw	r20, r18
    16de:	60 91 5d 01 	lds	r22, 0x015D
    16e2:	70 91 5e 01 	lds	r23, 0x015E
    16e6:	80 91 5f 01 	lds	r24, 0x015F
    16ea:	90 91 60 01 	lds	r25, 0x0160
    16ee:	0e 94 ca 13 	call	0x2794	; 0x2794 <__cmpsf2>
    16f2:	81 11       	cpse	r24, r1
    16f4:	08 c0       	rjmp	.+16     	; 0x1706 <localize+0x20a>
    16f6:	80 92 5d 01 	sts	0x015D, r8
    16fa:	90 92 5e 01 	sts	0x015E, r9
    16fe:	a0 92 5f 01 	sts	0x015F, r10
    1702:	b0 92 60 01 	sts	0x0160, r11
    1706:	23 e3       	ldi	r18, 0x33	; 51
    1708:	33 e3       	ldi	r19, 0x33	; 51
    170a:	43 e7       	ldi	r20, 0x73	; 115
    170c:	5f e3       	ldi	r21, 0x3F	; 63
    170e:	60 91 5d 01 	lds	r22, 0x015D
    1712:	70 91 5e 01 	lds	r23, 0x015E
    1716:	80 91 5f 01 	lds	r24, 0x015F
    171a:	90 91 60 01 	lds	r25, 0x0160
    171e:	0e 94 1f 16 	call	0x2c3e	; 0x2c3e <__mulsf3>
    1722:	4b 01       	movw	r8, r22
    1724:	5c 01       	movw	r10, r24
    1726:	20 ed       	ldi	r18, 0xD0	; 208
    1728:	3c ec       	ldi	r19, 0xCC	; 204
    172a:	4c e4       	ldi	r20, 0x4C	; 76
    172c:	5d e3       	ldi	r21, 0x3D	; 61
    172e:	60 91 69 01 	lds	r22, 0x0169
    1732:	70 91 6a 01 	lds	r23, 0x016A
    1736:	80 91 6b 01 	lds	r24, 0x016B
    173a:	90 91 6c 01 	lds	r25, 0x016C
    173e:	0e 94 1f 16 	call	0x2c3e	; 0x2c3e <__mulsf3>
    1742:	9b 01       	movw	r18, r22
    1744:	ac 01       	movw	r20, r24
    1746:	c5 01       	movw	r24, r10
    1748:	b4 01       	movw	r22, r8
    174a:	0e 94 04 13 	call	0x2608	; 0x2608 <__addsf3>
    174e:	20 e0       	ldi	r18, 0x00	; 0
    1750:	30 e0       	ldi	r19, 0x00	; 0
    1752:	44 e3       	ldi	r20, 0x34	; 52
    1754:	53 e4       	ldi	r21, 0x43	; 67
    1756:	0e 94 1f 16 	call	0x2c3e	; 0x2c3e <__mulsf3>
    175a:	23 ec       	ldi	r18, 0xC3	; 195
    175c:	35 ef       	ldi	r19, 0xF5	; 245
    175e:	48 e4       	ldi	r20, 0x48	; 72
    1760:	50 e4       	ldi	r21, 0x40	; 64
    1762:	0e 94 d1 13 	call	0x27a2	; 0x27a2 <__divsf3>
    1766:	86 2e       	mov	r8, r22
    1768:	97 2e       	mov	r9, r23
    176a:	a8 2e       	mov	r10, r24
    176c:	b9 2e       	mov	r11, r25
    176e:	f8 01       	movw	r30, r16
    1770:	80 86       	std	Z+8, r8	; 0x08
    1772:	91 86       	std	Z+9, r9	; 0x09
    1774:	a2 86       	std	Z+10, r10	; 0x0a
    1776:	b3 86       	std	Z+11, r11	; 0x0b
    1778:	23 ec       	ldi	r18, 0xC3	; 195
    177a:	35 ef       	ldi	r19, 0xF5	; 245
    177c:	48 e4       	ldi	r20, 0x48	; 72
    177e:	50 e4       	ldi	r21, 0x40	; 64
    1780:	0e 94 1f 16 	call	0x2c3e	; 0x2c3e <__mulsf3>
    1784:	20 e0       	ldi	r18, 0x00	; 0
    1786:	30 e0       	ldi	r19, 0x00	; 0
    1788:	44 e3       	ldi	r20, 0x34	; 52
    178a:	53 e4       	ldi	r21, 0x43	; 67
    178c:	0e 94 d1 13 	call	0x27a2	; 0x27a2 <__divsf3>
    1790:	9b 01       	movw	r18, r22
    1792:	ac 01       	movw	r20, r24
    1794:	62 e5       	ldi	r22, 0x52	; 82
    1796:	78 eb       	ldi	r23, 0xB8	; 184
    1798:	86 e9       	ldi	r24, 0x96	; 150
    179a:	90 e4       	ldi	r25, 0x40	; 64
    179c:	0e 94 03 13 	call	0x2606	; 0x2606 <__subsf3>
    17a0:	a3 01       	movw	r20, r6
    17a2:	92 01       	movw	r18, r4
    17a4:	0e 94 03 13 	call	0x2606	; 0x2606 <__subsf3>
    17a8:	86 2e       	mov	r8, r22
    17aa:	97 2e       	mov	r9, r23
    17ac:	a8 2e       	mov	r10, r24
    17ae:	b9 2e       	mov	r11, r25
    17b0:	0e 94 82 16 	call	0x2d04	; 0x2d04 <sin>
    17b4:	9b 01       	movw	r18, r22
    17b6:	ac 01       	movw	r20, r24
    17b8:	c7 01       	movw	r24, r14
    17ba:	b6 01       	movw	r22, r12
    17bc:	90 58       	subi	r25, 0x80	; 128
    17be:	0e 94 1f 16 	call	0x2c3e	; 0x2c3e <__mulsf3>
    17c2:	29 e3       	ldi	r18, 0x39	; 57
    17c4:	3e e8       	ldi	r19, 0x8E	; 142
    17c6:	43 ea       	ldi	r20, 0xA3	; 163
    17c8:	5e e3       	ldi	r21, 0x3E	; 62
    17ca:	0e 94 1f 16 	call	0x2c3e	; 0x2c3e <__mulsf3>
    17ce:	69 83       	std	Y+1, r22	; 0x01
    17d0:	7b 87       	std	Y+11, r23	; 0x0b
    17d2:	8d 87       	std	Y+13, r24	; 0x0d
    17d4:	9c 87       	std	Y+12, r25	; 0x0c
    17d6:	47 2f       	mov	r20, r23
    17d8:	38 2f       	mov	r19, r24
    17da:	29 2f       	mov	r18, r25
    17dc:	86 2f       	mov	r24, r22
    17de:	94 2f       	mov	r25, r20
    17e0:	a3 2f       	mov	r26, r19
    17e2:	b2 2f       	mov	r27, r18
    17e4:	80 93 71 01 	sts	0x0171, r24
    17e8:	90 93 72 01 	sts	0x0172, r25
    17ec:	a0 93 73 01 	sts	0x0173, r26
    17f0:	b0 93 74 01 	sts	0x0174, r27
    17f4:	68 2d       	mov	r22, r8
    17f6:	79 2d       	mov	r23, r9
    17f8:	8a 2d       	mov	r24, r10
    17fa:	9b 2d       	mov	r25, r11
    17fc:	0e 94 ce 13 	call	0x279c	; 0x279c <cos>
    1800:	a7 01       	movw	r20, r14
    1802:	96 01       	movw	r18, r12
    1804:	0e 94 1f 16 	call	0x2c3e	; 0x2c3e <__mulsf3>
    1808:	29 e8       	ldi	r18, 0x89	; 137
    180a:	3a ed       	ldi	r19, 0xDA	; 218
    180c:	45 e9       	ldi	r20, 0x95	; 149
    180e:	5e e3       	ldi	r21, 0x3E	; 62
    1810:	0e 94 1f 16 	call	0x2c3e	; 0x2c3e <__mulsf3>
    1814:	86 2e       	mov	r8, r22
    1816:	97 2e       	mov	r9, r23
    1818:	a8 2e       	mov	r10, r24
    181a:	b9 2e       	mov	r11, r25
    181c:	86 2f       	mov	r24, r22
    181e:	99 2d       	mov	r25, r9
    1820:	aa 2d       	mov	r26, r10
    1822:	bb 2d       	mov	r27, r11
    1824:	80 93 6d 01 	sts	0x016D, r24
    1828:	90 93 6e 01 	sts	0x016E, r25
    182c:	a0 93 6f 01 	sts	0x016F, r26
    1830:	b0 93 70 01 	sts	0x0170, r27
    1834:	20 e0       	ldi	r18, 0x00	; 0
    1836:	30 e0       	ldi	r19, 0x00	; 0
    1838:	a9 01       	movw	r20, r18
    183a:	60 91 65 01 	lds	r22, 0x0165
    183e:	70 91 66 01 	lds	r23, 0x0166
    1842:	80 91 67 01 	lds	r24, 0x0167
    1846:	90 91 68 01 	lds	r25, 0x0168
    184a:	0e 94 ca 13 	call	0x2794	; 0x2794 <__cmpsf2>
    184e:	81 11       	cpse	r24, r1
    1850:	2b c0       	rjmp	.+86     	; 0x18a8 <localize+0x3ac>
    1852:	20 e0       	ldi	r18, 0x00	; 0
    1854:	30 e0       	ldi	r19, 0x00	; 0
    1856:	a9 01       	movw	r20, r18
    1858:	60 91 61 01 	lds	r22, 0x0161
    185c:	70 91 62 01 	lds	r23, 0x0162
    1860:	80 91 63 01 	lds	r24, 0x0163
    1864:	90 91 64 01 	lds	r25, 0x0164
    1868:	0e 94 ca 13 	call	0x2794	; 0x2794 <__cmpsf2>
    186c:	81 11       	cpse	r24, r1
    186e:	1c c0       	rjmp	.+56     	; 0x18a8 <localize+0x3ac>
    1870:	59 81       	ldd	r21, Y+1	; 0x01
    1872:	4b 85       	ldd	r20, Y+11	; 0x0b
    1874:	3d 85       	ldd	r19, Y+13	; 0x0d
    1876:	2c 85       	ldd	r18, Y+12	; 0x0c
    1878:	85 2f       	mov	r24, r21
    187a:	94 2f       	mov	r25, r20
    187c:	a3 2f       	mov	r26, r19
    187e:	b2 2f       	mov	r27, r18
    1880:	80 93 65 01 	sts	0x0165, r24
    1884:	90 93 66 01 	sts	0x0166, r25
    1888:	a0 93 67 01 	sts	0x0167, r26
    188c:	b0 93 68 01 	sts	0x0168, r27
    1890:	88 2d       	mov	r24, r8
    1892:	99 2d       	mov	r25, r9
    1894:	aa 2d       	mov	r26, r10
    1896:	bb 2d       	mov	r27, r11
    1898:	80 93 61 01 	sts	0x0161, r24
    189c:	90 93 62 01 	sts	0x0162, r25
    18a0:	a0 93 63 01 	sts	0x0163, r26
    18a4:	b0 93 64 01 	sts	0x0164, r27
    18a8:	23 e3       	ldi	r18, 0x33	; 51
    18aa:	33 e3       	ldi	r19, 0x33	; 51
    18ac:	43 e7       	ldi	r20, 0x73	; 115
    18ae:	5f e3       	ldi	r21, 0x3F	; 63
    18b0:	60 91 65 01 	lds	r22, 0x0165
    18b4:	70 91 66 01 	lds	r23, 0x0166
    18b8:	80 91 67 01 	lds	r24, 0x0167
    18bc:	90 91 68 01 	lds	r25, 0x0168
    18c0:	0e 94 1f 16 	call	0x2c3e	; 0x2c3e <__mulsf3>
    18c4:	4b 01       	movw	r8, r22
    18c6:	5c 01       	movw	r10, r24
    18c8:	20 ed       	ldi	r18, 0xD0	; 208
    18ca:	3c ec       	ldi	r19, 0xCC	; 204
    18cc:	4c e4       	ldi	r20, 0x4C	; 76
    18ce:	5d e3       	ldi	r21, 0x3D	; 61
    18d0:	b9 81       	ldd	r27, Y+1	; 0x01
    18d2:	ab 85       	ldd	r26, Y+11	; 0x0b
    18d4:	fd 85       	ldd	r31, Y+13	; 0x0d
    18d6:	ec 85       	ldd	r30, Y+12	; 0x0c
    18d8:	6b 2f       	mov	r22, r27
    18da:	7a 2f       	mov	r23, r26
    18dc:	8f 2f       	mov	r24, r31
    18de:	9e 2f       	mov	r25, r30
    18e0:	0e 94 1f 16 	call	0x2c3e	; 0x2c3e <__mulsf3>
    18e4:	9b 01       	movw	r18, r22
    18e6:	ac 01       	movw	r20, r24
    18e8:	c5 01       	movw	r24, r10
    18ea:	b4 01       	movw	r22, r8
    18ec:	0e 94 04 13 	call	0x2608	; 0x2608 <__addsf3>
    18f0:	f8 01       	movw	r30, r16
    18f2:	60 83       	st	Z, r22
    18f4:	71 83       	std	Z+1, r23	; 0x01
    18f6:	82 83       	std	Z+2, r24	; 0x02
    18f8:	93 83       	std	Z+3, r25	; 0x03
    18fa:	80 90 6d 01 	lds	r8, 0x016D
    18fe:	90 90 6e 01 	lds	r9, 0x016E
    1902:	a0 90 6f 01 	lds	r10, 0x016F
    1906:	b0 90 70 01 	lds	r11, 0x0170
    190a:	23 e3       	ldi	r18, 0x33	; 51
    190c:	33 e3       	ldi	r19, 0x33	; 51
    190e:	43 e7       	ldi	r20, 0x73	; 115
    1910:	5f e3       	ldi	r21, 0x3F	; 63
    1912:	60 91 61 01 	lds	r22, 0x0161
    1916:	70 91 62 01 	lds	r23, 0x0162
    191a:	80 91 63 01 	lds	r24, 0x0163
    191e:	90 91 64 01 	lds	r25, 0x0164
    1922:	0e 94 1f 16 	call	0x2c3e	; 0x2c3e <__mulsf3>
    1926:	69 83       	std	Y+1, r22	; 0x01
    1928:	7a 83       	std	Y+2, r23	; 0x02
    192a:	8b 83       	std	Y+3, r24	; 0x03
    192c:	9c 83       	std	Y+4, r25	; 0x04
    192e:	20 ed       	ldi	r18, 0xD0	; 208
    1930:	3c ec       	ldi	r19, 0xCC	; 204
    1932:	4c e4       	ldi	r20, 0x4C	; 76
    1934:	5d e3       	ldi	r21, 0x3D	; 61
    1936:	c5 01       	movw	r24, r10
    1938:	b4 01       	movw	r22, r8
    193a:	0e 94 1f 16 	call	0x2c3e	; 0x2c3e <__mulsf3>
    193e:	9b 01       	movw	r18, r22
    1940:	ac 01       	movw	r20, r24
    1942:	69 81       	ldd	r22, Y+1	; 0x01
    1944:	7a 81       	ldd	r23, Y+2	; 0x02
    1946:	8b 81       	ldd	r24, Y+3	; 0x03
    1948:	9c 81       	ldd	r25, Y+4	; 0x04
    194a:	0e 94 04 13 	call	0x2608	; 0x2608 <__addsf3>
    194e:	f8 01       	movw	r30, r16
    1950:	64 83       	std	Z+4, r22	; 0x04
    1952:	75 83       	std	Z+5, r23	; 0x05
    1954:	86 83       	std	Z+6, r24	; 0x06
    1956:	97 83       	std	Z+7, r25	; 0x07
    1958:	80 91 7b 01 	lds	r24, 0x017B
    195c:	90 91 7c 01 	lds	r25, 0x017C
    1960:	9c 01       	movw	r18, r24
    1962:	22 0f       	add	r18, r18
    1964:	33 1f       	adc	r19, r19
    1966:	3a 83       	std	Y+2, r19	; 0x02
    1968:	29 83       	std	Y+1, r18	; 0x01
    196a:	f9 01       	movw	r30, r18
    196c:	eb 5a       	subi	r30, 0xAB	; 171
    196e:	fe 4f       	sbci	r31, 0xFE	; 254
    1970:	60 81       	ld	r22, Z
    1972:	71 81       	ldd	r23, Z+1	; 0x01
    1974:	80 e0       	ldi	r24, 0x00	; 0
    1976:	90 e0       	ldi	r25, 0x00	; 0
    1978:	0e 94 9b 14 	call	0x2936	; 0x2936 <__floatunsisf>
    197c:	f8 01       	movw	r30, r16
    197e:	64 87       	std	Z+12, r22	; 0x0c
    1980:	75 87       	std	Z+13, r23	; 0x0d
    1982:	86 87       	std	Z+14, r24	; 0x0e
    1984:	97 87       	std	Z+15, r25	; 0x0f
    1986:	e9 81       	ldd	r30, Y+1	; 0x01
    1988:	fa 81       	ldd	r31, Y+2	; 0x02
    198a:	e3 5b       	subi	r30, 0xB3	; 179
    198c:	fe 4f       	sbci	r31, 0xFE	; 254
    198e:	60 81       	ld	r22, Z
    1990:	71 81       	ldd	r23, Z+1	; 0x01
    1992:	80 e0       	ldi	r24, 0x00	; 0
    1994:	90 e0       	ldi	r25, 0x00	; 0
    1996:	0e 94 9b 14 	call	0x2936	; 0x2936 <__floatunsisf>
    199a:	f8 01       	movw	r30, r16
    199c:	60 8b       	std	Z+16, r22	; 0x10
    199e:	71 8b       	std	Z+17, r23	; 0x11
    19a0:	82 8b       	std	Z+18, r24	; 0x12
    19a2:	93 8b       	std	Z+19, r25	; 0x13
    19a4:	80 91 79 01 	lds	r24, 0x0179
    19a8:	90 91 7a 01 	lds	r25, 0x017A
    19ac:	9c 01       	movw	r18, r24
    19ae:	22 0f       	add	r18, r18
    19b0:	33 1f       	adc	r19, r19
    19b2:	3a 83       	std	Y+2, r19	; 0x02
    19b4:	29 83       	std	Y+1, r18	; 0x01
    19b6:	f9 01       	movw	r30, r18
    19b8:	eb 5a       	subi	r30, 0xAB	; 171
    19ba:	fe 4f       	sbci	r31, 0xFE	; 254
    19bc:	60 81       	ld	r22, Z
    19be:	71 81       	ldd	r23, Z+1	; 0x01
    19c0:	80 e0       	ldi	r24, 0x00	; 0
    19c2:	90 e0       	ldi	r25, 0x00	; 0
    19c4:	0e 94 9b 14 	call	0x2936	; 0x2936 <__floatunsisf>
    19c8:	f8 01       	movw	r30, r16
    19ca:	64 8b       	std	Z+20, r22	; 0x14
    19cc:	75 8b       	std	Z+21, r23	; 0x15
    19ce:	86 8b       	std	Z+22, r24	; 0x16
    19d0:	97 8b       	std	Z+23, r25	; 0x17
    19d2:	e9 81       	ldd	r30, Y+1	; 0x01
    19d4:	fa 81       	ldd	r31, Y+2	; 0x02
    19d6:	e3 5b       	subi	r30, 0xB3	; 179
    19d8:	fe 4f       	sbci	r31, 0xFE	; 254
    19da:	60 81       	ld	r22, Z
    19dc:	71 81       	ldd	r23, Z+1	; 0x01
    19de:	80 e0       	ldi	r24, 0x00	; 0
    19e0:	90 e0       	ldi	r25, 0x00	; 0
    19e2:	0e 94 9b 14 	call	0x2936	; 0x2936 <__floatunsisf>
    19e6:	f8 01       	movw	r30, r16
    19e8:	60 8f       	std	Z+24, r22	; 0x18
    19ea:	71 8f       	std	Z+25, r23	; 0x19
    19ec:	82 8f       	std	Z+26, r24	; 0x1a
    19ee:	93 8f       	std	Z+27, r25	; 0x1b
    19f0:	80 91 75 01 	lds	r24, 0x0175
    19f4:	90 91 76 01 	lds	r25, 0x0176
    19f8:	9c 01       	movw	r18, r24
    19fa:	22 0f       	add	r18, r18
    19fc:	33 1f       	adc	r19, r19
    19fe:	3a 83       	std	Y+2, r19	; 0x02
    1a00:	29 83       	std	Y+1, r18	; 0x01
    1a02:	f9 01       	movw	r30, r18
    1a04:	eb 5a       	subi	r30, 0xAB	; 171
    1a06:	fe 4f       	sbci	r31, 0xFE	; 254
    1a08:	60 81       	ld	r22, Z
    1a0a:	71 81       	ldd	r23, Z+1	; 0x01
    1a0c:	80 e0       	ldi	r24, 0x00	; 0
    1a0e:	90 e0       	ldi	r25, 0x00	; 0
    1a10:	0e 94 9b 14 	call	0x2936	; 0x2936 <__floatunsisf>
    1a14:	f8 01       	movw	r30, r16
    1a16:	64 8f       	std	Z+28, r22	; 0x1c
    1a18:	75 8f       	std	Z+29, r23	; 0x1d
    1a1a:	86 8f       	std	Z+30, r24	; 0x1e
    1a1c:	97 8f       	std	Z+31, r25	; 0x1f
    1a1e:	e9 81       	ldd	r30, Y+1	; 0x01
    1a20:	fa 81       	ldd	r31, Y+2	; 0x02
    1a22:	e3 5b       	subi	r30, 0xB3	; 179
    1a24:	fe 4f       	sbci	r31, 0xFE	; 254
    1a26:	60 81       	ld	r22, Z
    1a28:	71 81       	ldd	r23, Z+1	; 0x01
    1a2a:	80 e0       	ldi	r24, 0x00	; 0
    1a2c:	90 e0       	ldi	r25, 0x00	; 0
    1a2e:	0e 94 9b 14 	call	0x2936	; 0x2936 <__floatunsisf>
    1a32:	f8 01       	movw	r30, r16
    1a34:	60 a3       	std	Z+32, r22	; 0x20
    1a36:	71 a3       	std	Z+33, r23	; 0x21
    1a38:	82 a3       	std	Z+34, r24	; 0x22
    1a3a:	93 a3       	std	Z+35, r25	; 0x23
    1a3c:	80 91 77 01 	lds	r24, 0x0177
    1a40:	90 91 78 01 	lds	r25, 0x0178
    1a44:	9c 01       	movw	r18, r24
    1a46:	22 0f       	add	r18, r18
    1a48:	33 1f       	adc	r19, r19
    1a4a:	3a 83       	std	Y+2, r19	; 0x02
    1a4c:	29 83       	std	Y+1, r18	; 0x01
    1a4e:	f9 01       	movw	r30, r18
    1a50:	eb 5a       	subi	r30, 0xAB	; 171
    1a52:	fe 4f       	sbci	r31, 0xFE	; 254
    1a54:	60 81       	ld	r22, Z
    1a56:	71 81       	ldd	r23, Z+1	; 0x01
    1a58:	80 e0       	ldi	r24, 0x00	; 0
    1a5a:	90 e0       	ldi	r25, 0x00	; 0
    1a5c:	0e 94 9b 14 	call	0x2936	; 0x2936 <__floatunsisf>
    1a60:	f8 01       	movw	r30, r16
    1a62:	64 a3       	std	Z+36, r22	; 0x24
    1a64:	75 a3       	std	Z+37, r23	; 0x25
    1a66:	86 a3       	std	Z+38, r24	; 0x26
    1a68:	97 a3       	std	Z+39, r25	; 0x27
    1a6a:	e9 81       	ldd	r30, Y+1	; 0x01
    1a6c:	fa 81       	ldd	r31, Y+2	; 0x02
    1a6e:	e3 5b       	subi	r30, 0xB3	; 179
    1a70:	fe 4f       	sbci	r31, 0xFE	; 254
    1a72:	60 81       	ld	r22, Z
    1a74:	71 81       	ldd	r23, Z+1	; 0x01
    1a76:	80 e0       	ldi	r24, 0x00	; 0
    1a78:	90 e0       	ldi	r25, 0x00	; 0
    1a7a:	0e 94 9b 14 	call	0x2936	; 0x2936 <__floatunsisf>
    1a7e:	f8 01       	movw	r30, r16
    1a80:	60 a7       	std	Z+40, r22	; 0x28
    1a82:	71 a7       	std	Z+41, r23	; 0x29
    1a84:	82 a7       	std	Z+42, r24	; 0x2a
    1a86:	93 a7       	std	Z+43, r25	; 0x2b
    1a88:	20 e0       	ldi	r18, 0x00	; 0
    1a8a:	30 e0       	ldi	r19, 0x00	; 0
    1a8c:	44 e3       	ldi	r20, 0x34	; 52
    1a8e:	53 e4       	ldi	r21, 0x43	; 67
    1a90:	c3 01       	movw	r24, r6
    1a92:	b2 01       	movw	r22, r4
    1a94:	0e 94 1f 16 	call	0x2c3e	; 0x2c3e <__mulsf3>
    1a98:	23 ec       	ldi	r18, 0xC3	; 195
    1a9a:	35 ef       	ldi	r19, 0xF5	; 245
    1a9c:	48 e4       	ldi	r20, 0x48	; 72
    1a9e:	50 e4       	ldi	r21, 0x40	; 64
    1aa0:	0e 94 d1 13 	call	0x27a2	; 0x27a2 <__divsf3>
    1aa4:	f8 01       	movw	r30, r16
    1aa6:	64 a7       	std	Z+44, r22	; 0x2c
    1aa8:	75 a7       	std	Z+45, r23	; 0x2d
    1aaa:	86 a7       	std	Z+46, r24	; 0x2e
    1aac:	97 a7       	std	Z+47, r25	; 0x2f
    1aae:	5d 81       	ldd	r21, Y+5	; 0x05
    1ab0:	4e 81       	ldd	r20, Y+6	; 0x06
    1ab2:	3f 81       	ldd	r19, Y+7	; 0x07
    1ab4:	28 85       	ldd	r18, Y+8	; 0x08
    1ab6:	85 2f       	mov	r24, r21
    1ab8:	94 2f       	mov	r25, r20
    1aba:	a3 2f       	mov	r26, r19
    1abc:	b2 2f       	mov	r27, r18
    1abe:	80 ab       	std	Z+48, r24	; 0x30
    1ac0:	91 ab       	std	Z+49, r25	; 0x31
    1ac2:	a2 ab       	std	Z+50, r26	; 0x32
    1ac4:	b3 ab       	std	Z+51, r27	; 0x33
    1ac6:	59 85       	ldd	r21, Y+9	; 0x09
    1ac8:	4a 85       	ldd	r20, Y+10	; 0x0a
    1aca:	85 2f       	mov	r24, r21
    1acc:	94 2f       	mov	r25, r20
    1ace:	a2 2d       	mov	r26, r2
    1ad0:	b3 2d       	mov	r27, r3
    1ad2:	84 ab       	std	Z+52, r24	; 0x34
    1ad4:	95 ab       	std	Z+53, r25	; 0x35
    1ad6:	a6 ab       	std	Z+54, r26	; 0x36
    1ad8:	b7 ab       	std	Z+55, r27	; 0x37
    1ada:	c0 ae       	std	Z+56, r12	; 0x38
    1adc:	d1 ae       	std	Z+57, r13	; 0x39
    1ade:	e2 ae       	std	Z+58, r14	; 0x3a
    1ae0:	f3 ae       	std	Z+59, r15	; 0x3b
    1ae2:	80 91 71 01 	lds	r24, 0x0171
    1ae6:	90 91 72 01 	lds	r25, 0x0172
    1aea:	a0 91 73 01 	lds	r26, 0x0173
    1aee:	b0 91 74 01 	lds	r27, 0x0174
    1af2:	80 93 65 01 	sts	0x0165, r24
    1af6:	90 93 66 01 	sts	0x0166, r25
    1afa:	a0 93 67 01 	sts	0x0167, r26
    1afe:	b0 93 68 01 	sts	0x0168, r27
    1b02:	80 92 61 01 	sts	0x0161, r8
    1b06:	90 92 62 01 	sts	0x0162, r9
    1b0a:	a0 92 63 01 	sts	0x0163, r10
    1b0e:	b0 92 64 01 	sts	0x0164, r11
    1b12:	80 91 69 01 	lds	r24, 0x0169
    1b16:	90 91 6a 01 	lds	r25, 0x016A
    1b1a:	a0 91 6b 01 	lds	r26, 0x016B
    1b1e:	b0 91 6c 01 	lds	r27, 0x016C
    1b22:	80 93 5d 01 	sts	0x015D, r24
    1b26:	90 93 5e 01 	sts	0x015E, r25
    1b2a:	a0 93 5f 01 	sts	0x015F, r26
    1b2e:	b0 93 60 01 	sts	0x0160, r27
    1b32:	81 e0       	ldi	r24, 0x01	; 1
    1b34:	00 c0       	rjmp	.+0      	; 0x1b36 <localize+0x63a>
    1b36:	2d 96       	adiw	r28, 0x0d	; 13
    1b38:	0f b6       	in	r0, 0x3f	; 63
    1b3a:	f8 94       	cli
    1b3c:	de bf       	out	0x3e, r29	; 62
    1b3e:	0f be       	out	0x3f, r0	; 63
    1b40:	cd bf       	out	0x3d, r28	; 61
    1b42:	df 91       	pop	r29
    1b44:	cf 91       	pop	r28
    1b46:	1f 91       	pop	r17
    1b48:	0f 91       	pop	r16
    1b4a:	ff 90       	pop	r15
    1b4c:	ef 90       	pop	r14
    1b4e:	df 90       	pop	r13
    1b50:	cf 90       	pop	r12
    1b52:	bf 90       	pop	r11
    1b54:	af 90       	pop	r10
    1b56:	9f 90       	pop	r9
    1b58:	8f 90       	pop	r8
    1b5a:	7f 90       	pop	r7
    1b5c:	6f 90       	pop	r6
    1b5e:	5f 90       	pop	r5
    1b60:	4f 90       	pop	r4
    1b62:	3f 90       	pop	r3
    1b64:	2f 90       	pop	r2
    1b66:	08 95       	ret

00001b68 <m_rf_open>:
    1b68:	1f 93       	push	r17
    1b6a:	cf 93       	push	r28
    1b6c:	df 93       	push	r29
    1b6e:	18 2f       	mov	r17, r24
    1b70:	d6 2f       	mov	r29, r22
    1b72:	c4 2f       	mov	r28, r20
    1b74:	0e 94 aa 07 	call	0xf54	; 0xf54 <m_bus_init>
    1b78:	94 ea       	ldi	r25, 0xA4	; 164
    1b7a:	90 93 bc 00 	sts	0x00BC, r25
    1b7e:	ec eb       	ldi	r30, 0xBC	; 188
    1b80:	f0 e0       	ldi	r31, 0x00	; 0
    1b82:	90 81       	ld	r25, Z
    1b84:	99 23       	and	r25, r25
    1b86:	ec f7       	brge	.-6      	; 0x1b82 <m_rf_open+0x1a>
    1b88:	90 e5       	ldi	r25, 0x50	; 80
    1b8a:	90 93 bb 00 	sts	0x00BB, r25
    1b8e:	94 e8       	ldi	r25, 0x84	; 132
    1b90:	90 93 bc 00 	sts	0x00BC, r25
    1b94:	ec eb       	ldi	r30, 0xBC	; 188
    1b96:	f0 e0       	ldi	r31, 0x00	; 0
    1b98:	90 81       	ld	r25, Z
    1b9a:	99 23       	and	r25, r25
    1b9c:	ec f7       	brge	.-6      	; 0x1b98 <m_rf_open+0x30>
    1b9e:	90 91 b9 00 	lds	r25, 0x00B9
    1ba2:	98 7f       	andi	r25, 0xF8	; 248
    1ba4:	90 32       	cpi	r25, 0x20	; 32
    1ba6:	29 f4       	brne	.+10     	; 0x1bb2 <m_rf_open+0x4a>
    1ba8:	84 e9       	ldi	r24, 0x94	; 148
    1baa:	80 93 bc 00 	sts	0x00BC, r24
    1bae:	80 e0       	ldi	r24, 0x00	; 0
    1bb0:	2d c0       	rjmp	.+90     	; 0x1c0c <m_rf_open+0xa4>
    1bb2:	81 e0       	ldi	r24, 0x01	; 1
    1bb4:	80 93 bb 00 	sts	0x00BB, r24
    1bb8:	84 e8       	ldi	r24, 0x84	; 132
    1bba:	80 93 bc 00 	sts	0x00BC, r24
    1bbe:	ec eb       	ldi	r30, 0xBC	; 188
    1bc0:	f0 e0       	ldi	r31, 0x00	; 0
    1bc2:	90 81       	ld	r25, Z
    1bc4:	99 23       	and	r25, r25
    1bc6:	ec f7       	brge	.-6      	; 0x1bc2 <m_rf_open+0x5a>
    1bc8:	10 93 bb 00 	sts	0x00BB, r17
    1bcc:	84 e8       	ldi	r24, 0x84	; 132
    1bce:	80 93 bc 00 	sts	0x00BC, r24
    1bd2:	ec eb       	ldi	r30, 0xBC	; 188
    1bd4:	f0 e0       	ldi	r31, 0x00	; 0
    1bd6:	80 81       	ld	r24, Z
    1bd8:	88 23       	and	r24, r24
    1bda:	ec f7       	brge	.-6      	; 0x1bd6 <m_rf_open+0x6e>
    1bdc:	d0 93 bb 00 	sts	0x00BB, r29
    1be0:	84 e8       	ldi	r24, 0x84	; 132
    1be2:	80 93 bc 00 	sts	0x00BC, r24
    1be6:	ec eb       	ldi	r30, 0xBC	; 188
    1be8:	f0 e0       	ldi	r31, 0x00	; 0
    1bea:	80 81       	ld	r24, Z
    1bec:	88 23       	and	r24, r24
    1bee:	ec f7       	brge	.-6      	; 0x1bea <m_rf_open+0x82>
    1bf0:	c0 93 bb 00 	sts	0x00BB, r28
    1bf4:	84 e8       	ldi	r24, 0x84	; 132
    1bf6:	80 93 bc 00 	sts	0x00BC, r24
    1bfa:	ec eb       	ldi	r30, 0xBC	; 188
    1bfc:	f0 e0       	ldi	r31, 0x00	; 0
    1bfe:	80 81       	ld	r24, Z
    1c00:	88 23       	and	r24, r24
    1c02:	ec f7       	brge	.-6      	; 0x1bfe <m_rf_open+0x96>
    1c04:	84 e9       	ldi	r24, 0x94	; 148
    1c06:	80 93 bc 00 	sts	0x00BC, r24
    1c0a:	81 e0       	ldi	r24, 0x01	; 1
    1c0c:	df 91       	pop	r29
    1c0e:	cf 91       	pop	r28
    1c10:	1f 91       	pop	r17
    1c12:	08 95       	ret

00001c14 <m_rf_read>:
    1c14:	cf 93       	push	r28
    1c16:	df 93       	push	r29
    1c18:	24 ea       	ldi	r18, 0xA4	; 164
    1c1a:	20 93 bc 00 	sts	0x00BC, r18
    1c1e:	ec eb       	ldi	r30, 0xBC	; 188
    1c20:	f0 e0       	ldi	r31, 0x00	; 0
    1c22:	20 81       	ld	r18, Z
    1c24:	22 23       	and	r18, r18
    1c26:	ec f7       	brge	.-6      	; 0x1c22 <m_rf_read+0xe>
    1c28:	21 e5       	ldi	r18, 0x51	; 81
    1c2a:	20 93 bb 00 	sts	0x00BB, r18
    1c2e:	24 e8       	ldi	r18, 0x84	; 132
    1c30:	20 93 bc 00 	sts	0x00BC, r18
    1c34:	ec eb       	ldi	r30, 0xBC	; 188
    1c36:	f0 e0       	ldi	r31, 0x00	; 0
    1c38:	20 81       	ld	r18, Z
    1c3a:	22 23       	and	r18, r18
    1c3c:	ec f7       	brge	.-6      	; 0x1c38 <m_rf_read+0x24>
    1c3e:	20 91 b9 00 	lds	r18, 0x00B9
    1c42:	28 7f       	andi	r18, 0xF8	; 248
    1c44:	28 34       	cpi	r18, 0x48	; 72
    1c46:	29 f4       	brne	.+10     	; 0x1c52 <m_rf_read+0x3e>
    1c48:	84 e9       	ldi	r24, 0x94	; 148
    1c4a:	80 93 bc 00 	sts	0x00BC, r24
    1c4e:	80 e0       	ldi	r24, 0x00	; 0
    1c50:	3f c0       	rjmp	.+126    	; 0x1cd0 <m_rf_read+0xbc>
    1c52:	24 ec       	ldi	r18, 0xC4	; 196
    1c54:	20 93 bc 00 	sts	0x00BC, r18
    1c58:	ec eb       	ldi	r30, 0xBC	; 188
    1c5a:	f0 e0       	ldi	r31, 0x00	; 0
    1c5c:	20 81       	ld	r18, Z
    1c5e:	22 23       	and	r18, r18
    1c60:	ec f7       	brge	.-6      	; 0x1c5c <m_rf_read+0x48>
    1c62:	40 91 bb 00 	lds	r20, 0x00BB
    1c66:	46 13       	cpse	r20, r22
    1c68:	09 c0       	rjmp	.+18     	; 0x1c7c <m_rf_read+0x68>
    1c6a:	50 e0       	ldi	r21, 0x00	; 0
    1c6c:	41 50       	subi	r20, 0x01	; 1
    1c6e:	51 09       	sbc	r21, r1
    1c70:	14 16       	cp	r1, r20
    1c72:	15 06       	cpc	r1, r21
    1c74:	44 f0       	brlt	.+16     	; 0x1c86 <m_rf_read+0x72>
    1c76:	40 e0       	ldi	r20, 0x00	; 0
    1c78:	50 e0       	ldi	r21, 0x00	; 0
    1c7a:	18 c0       	rjmp	.+48     	; 0x1cac <m_rf_read+0x98>
    1c7c:	84 e9       	ldi	r24, 0x94	; 148
    1c7e:	80 93 bc 00 	sts	0x00BC, r24
    1c82:	80 e0       	ldi	r24, 0x00	; 0
    1c84:	25 c0       	rjmp	.+74     	; 0x1cd0 <m_rf_read+0xbc>
    1c86:	dc 01       	movw	r26, r24
    1c88:	20 e0       	ldi	r18, 0x00	; 0
    1c8a:	30 e0       	ldi	r19, 0x00	; 0
    1c8c:	ec eb       	ldi	r30, 0xBC	; 188
    1c8e:	f0 e0       	ldi	r31, 0x00	; 0
    1c90:	74 ec       	ldi	r23, 0xC4	; 196
    1c92:	cb eb       	ldi	r28, 0xBB	; 187
    1c94:	d0 e0       	ldi	r29, 0x00	; 0
    1c96:	70 83       	st	Z, r23
    1c98:	60 81       	ld	r22, Z
    1c9a:	66 23       	and	r22, r22
    1c9c:	ec f7       	brge	.-6      	; 0x1c98 <m_rf_read+0x84>
    1c9e:	68 81       	ld	r22, Y
    1ca0:	6d 93       	st	X+, r22
    1ca2:	2f 5f       	subi	r18, 0xFF	; 255
    1ca4:	3f 4f       	sbci	r19, 0xFF	; 255
    1ca6:	24 17       	cp	r18, r20
    1ca8:	35 07       	cpc	r19, r21
    1caa:	ac f3       	brlt	.-22     	; 0x1c96 <m_rf_read+0x82>
    1cac:	24 e8       	ldi	r18, 0x84	; 132
    1cae:	20 93 bc 00 	sts	0x00BC, r18
    1cb2:	ec eb       	ldi	r30, 0xBC	; 188
    1cb4:	f0 e0       	ldi	r31, 0x00	; 0
    1cb6:	20 81       	ld	r18, Z
    1cb8:	22 23       	and	r18, r18
    1cba:	ec f7       	brge	.-6      	; 0x1cb6 <m_rf_read+0xa2>
    1cbc:	20 91 bb 00 	lds	r18, 0x00BB
    1cc0:	fc 01       	movw	r30, r24
    1cc2:	e4 0f       	add	r30, r20
    1cc4:	f5 1f       	adc	r31, r21
    1cc6:	20 83       	st	Z, r18
    1cc8:	84 e9       	ldi	r24, 0x94	; 148
    1cca:	80 93 bc 00 	sts	0x00BC, r24
    1cce:	81 e0       	ldi	r24, 0x01	; 1
    1cd0:	df 91       	pop	r29
    1cd2:	cf 91       	pop	r28
    1cd4:	08 95       	ret

00001cd6 <m_usb_init>:
    1cd6:	81 e0       	ldi	r24, 0x01	; 1
    1cd8:	80 93 d7 00 	sts	0x00D7, r24
    1cdc:	80 ea       	ldi	r24, 0xA0	; 160
    1cde:	80 93 d8 00 	sts	0x00D8, r24
    1ce2:	82 e1       	ldi	r24, 0x12	; 18
    1ce4:	89 bd       	out	0x29, r24	; 41
    1ce6:	09 b4       	in	r0, 0x29	; 41
    1ce8:	00 fe       	sbrs	r0, 0
    1cea:	fd cf       	rjmp	.-6      	; 0x1ce6 <m_usb_init+0x10>
    1cec:	80 e9       	ldi	r24, 0x90	; 144
    1cee:	80 93 d8 00 	sts	0x00D8, r24
    1cf2:	10 92 e0 00 	sts	0x00E0, r1
    1cf6:	10 92 96 01 	sts	0x0196, r1
    1cfa:	10 92 97 01 	sts	0x0197, r1
    1cfe:	8c e0       	ldi	r24, 0x0C	; 12
    1d00:	80 93 e2 00 	sts	0x00E2, r24
    1d04:	78 94       	sei
    1d06:	08 95       	ret

00001d08 <m_usb_isconnected>:
    1d08:	80 91 96 01 	lds	r24, 0x0196
    1d0c:	08 95       	ret

00001d0e <m_usb_rx_char>:
    1d0e:	9f b7       	in	r25, 0x3f	; 63
    1d10:	f8 94       	cli
    1d12:	80 91 96 01 	lds	r24, 0x0196
    1d16:	81 11       	cpse	r24, r1
    1d18:	03 c0       	rjmp	.+6      	; 0x1d20 <m_usb_rx_char+0x12>
    1d1a:	9f bf       	out	0x3f, r25	; 63
    1d1c:	8f ef       	ldi	r24, 0xFF	; 255
    1d1e:	08 95       	ret
    1d20:	83 e0       	ldi	r24, 0x03	; 3
    1d22:	80 93 e9 00 	sts	0x00E9, r24
    1d26:	80 91 e8 00 	lds	r24, 0x00E8
    1d2a:	85 fd       	sbrc	r24, 5
    1d2c:	03 c0       	rjmp	.+6      	; 0x1d34 <m_usb_rx_char+0x26>
    1d2e:	9f bf       	out	0x3f, r25	; 63
    1d30:	8f ef       	ldi	r24, 0xFF	; 255
    1d32:	08 95       	ret
    1d34:	80 91 f1 00 	lds	r24, 0x00F1
    1d38:	20 91 e8 00 	lds	r18, 0x00E8
    1d3c:	25 fd       	sbrc	r18, 5
    1d3e:	03 c0       	rjmp	.+6      	; 0x1d46 <m_usb_rx_char+0x38>
    1d40:	2b e6       	ldi	r18, 0x6B	; 107
    1d42:	20 93 e8 00 	sts	0x00E8, r18
    1d46:	9f bf       	out	0x3f, r25	; 63
    1d48:	08 95       	ret

00001d4a <m_usb_rx_flush>:
    1d4a:	80 91 96 01 	lds	r24, 0x0196
    1d4e:	88 23       	and	r24, r24
    1d50:	89 f0       	breq	.+34     	; 0x1d74 <m_usb_rx_flush+0x2a>
    1d52:	2f b7       	in	r18, 0x3f	; 63
    1d54:	f8 94       	cli
    1d56:	83 e0       	ldi	r24, 0x03	; 3
    1d58:	80 93 e9 00 	sts	0x00E9, r24
    1d5c:	80 91 e8 00 	lds	r24, 0x00E8
    1d60:	85 ff       	sbrs	r24, 5
    1d62:	07 c0       	rjmp	.+14     	; 0x1d72 <m_usb_rx_flush+0x28>
    1d64:	e8 ee       	ldi	r30, 0xE8	; 232
    1d66:	f0 e0       	ldi	r31, 0x00	; 0
    1d68:	9b e6       	ldi	r25, 0x6B	; 107
    1d6a:	90 83       	st	Z, r25
    1d6c:	80 81       	ld	r24, Z
    1d6e:	85 fd       	sbrc	r24, 5
    1d70:	fc cf       	rjmp	.-8      	; 0x1d6a <m_usb_rx_flush+0x20>
    1d72:	2f bf       	out	0x3f, r18	; 63
    1d74:	08 95       	ret

00001d76 <m_usb_tx_char>:
    1d76:	cf 93       	push	r28
    1d78:	df 93       	push	r29
    1d7a:	90 91 96 01 	lds	r25, 0x0196
    1d7e:	99 23       	and	r25, r25
    1d80:	09 f4       	brne	.+2      	; 0x1d84 <m_usb_tx_char+0xe>
    1d82:	4d c0       	rjmp	.+154    	; 0x1e1e <m_usb_tx_char+0xa8>
    1d84:	9f b7       	in	r25, 0x3f	; 63
    1d86:	f8 94       	cli
    1d88:	24 e0       	ldi	r18, 0x04	; 4
    1d8a:	20 93 e9 00 	sts	0x00E9, r18
    1d8e:	20 91 98 01 	lds	r18, 0x0198
    1d92:	22 23       	and	r18, r18
    1d94:	49 f0       	breq	.+18     	; 0x1da8 <m_usb_tx_char+0x32>
    1d96:	20 91 e8 00 	lds	r18, 0x00E8
    1d9a:	25 fd       	sbrc	r18, 5
    1d9c:	03 c0       	rjmp	.+6      	; 0x1da4 <m_usb_tx_char+0x2e>
    1d9e:	9f bf       	out	0x3f, r25	; 63
    1da0:	8f ef       	ldi	r24, 0xFF	; 255
    1da2:	42 c0       	rjmp	.+132    	; 0x1e28 <m_usb_tx_char+0xb2>
    1da4:	10 92 98 01 	sts	0x0198, r1
    1da8:	30 91 e4 00 	lds	r19, 0x00E4
    1dac:	37 5e       	subi	r19, 0xE7	; 231
    1dae:	20 91 e8 00 	lds	r18, 0x00E8
    1db2:	25 fd       	sbrc	r18, 5
    1db4:	25 c0       	rjmp	.+74     	; 0x1e00 <m_usb_tx_char+0x8a>
    1db6:	9f bf       	out	0x3f, r25	; 63
    1db8:	90 91 e4 00 	lds	r25, 0x00E4
    1dbc:	93 17       	cp	r25, r19
    1dbe:	49 f0       	breq	.+18     	; 0x1dd2 <m_usb_tx_char+0x5c>
    1dc0:	90 91 96 01 	lds	r25, 0x0196
    1dc4:	91 11       	cpse	r25, r1
    1dc6:	0f c0       	rjmp	.+30     	; 0x1de6 <m_usb_tx_char+0x70>
    1dc8:	2c c0       	rjmp	.+88     	; 0x1e22 <m_usb_tx_char+0xac>
    1dca:	9f bf       	out	0x3f, r25	; 63
    1dcc:	98 81       	ld	r25, Y
    1dce:	93 13       	cpse	r25, r19
    1dd0:	05 c0       	rjmp	.+10     	; 0x1ddc <m_usb_tx_char+0x66>
    1dd2:	81 e0       	ldi	r24, 0x01	; 1
    1dd4:	80 93 98 01 	sts	0x0198, r24
    1dd8:	8f ef       	ldi	r24, 0xFF	; 255
    1dda:	26 c0       	rjmp	.+76     	; 0x1e28 <m_usb_tx_char+0xb2>
    1ddc:	90 91 96 01 	lds	r25, 0x0196
    1de0:	91 11       	cpse	r25, r1
    1de2:	08 c0       	rjmp	.+16     	; 0x1df4 <m_usb_tx_char+0x7e>
    1de4:	20 c0       	rjmp	.+64     	; 0x1e26 <m_usb_tx_char+0xb0>
    1de6:	a9 ee       	ldi	r26, 0xE9	; 233
    1de8:	b0 e0       	ldi	r27, 0x00	; 0
    1dea:	44 e0       	ldi	r20, 0x04	; 4
    1dec:	e8 ee       	ldi	r30, 0xE8	; 232
    1dee:	f0 e0       	ldi	r31, 0x00	; 0
    1df0:	c4 ee       	ldi	r28, 0xE4	; 228
    1df2:	d0 e0       	ldi	r29, 0x00	; 0
    1df4:	9f b7       	in	r25, 0x3f	; 63
    1df6:	f8 94       	cli
    1df8:	4c 93       	st	X, r20
    1dfa:	20 81       	ld	r18, Z
    1dfc:	25 ff       	sbrs	r18, 5
    1dfe:	e5 cf       	rjmp	.-54     	; 0x1dca <m_usb_tx_char+0x54>
    1e00:	80 93 f1 00 	sts	0x00F1, r24
    1e04:	80 91 e8 00 	lds	r24, 0x00E8
    1e08:	85 fd       	sbrc	r24, 5
    1e0a:	03 c0       	rjmp	.+6      	; 0x1e12 <m_usb_tx_char+0x9c>
    1e0c:	8a e3       	ldi	r24, 0x3A	; 58
    1e0e:	80 93 e8 00 	sts	0x00E8, r24
    1e12:	85 e0       	ldi	r24, 0x05	; 5
    1e14:	80 93 95 01 	sts	0x0195, r24
    1e18:	9f bf       	out	0x3f, r25	; 63
    1e1a:	80 e0       	ldi	r24, 0x00	; 0
    1e1c:	05 c0       	rjmp	.+10     	; 0x1e28 <m_usb_tx_char+0xb2>
    1e1e:	8f ef       	ldi	r24, 0xFF	; 255
    1e20:	03 c0       	rjmp	.+6      	; 0x1e28 <m_usb_tx_char+0xb2>
    1e22:	8f ef       	ldi	r24, 0xFF	; 255
    1e24:	01 c0       	rjmp	.+2      	; 0x1e28 <m_usb_tx_char+0xb2>
    1e26:	8f ef       	ldi	r24, 0xFF	; 255
    1e28:	df 91       	pop	r29
    1e2a:	cf 91       	pop	r28
    1e2c:	08 95       	ret

00001e2e <__vector_10>:
    1e2e:	1f 92       	push	r1
    1e30:	0f 92       	push	r0
    1e32:	0f b6       	in	r0, 0x3f	; 63
    1e34:	0f 92       	push	r0
    1e36:	11 24       	eor	r1, r1
    1e38:	8f 93       	push	r24
    1e3a:	9f 93       	push	r25
    1e3c:	ef 93       	push	r30
    1e3e:	ff 93       	push	r31
    1e40:	e1 ee       	ldi	r30, 0xE1	; 225
    1e42:	f0 e0       	ldi	r31, 0x00	; 0
    1e44:	80 81       	ld	r24, Z
    1e46:	10 82       	st	Z, r1
    1e48:	83 ff       	sbrs	r24, 3
    1e4a:	11 c0       	rjmp	.+34     	; 0x1e6e <__vector_10+0x40>
    1e4c:	10 92 e9 00 	sts	0x00E9, r1
    1e50:	91 e0       	ldi	r25, 0x01	; 1
    1e52:	90 93 eb 00 	sts	0x00EB, r25
    1e56:	10 92 ec 00 	sts	0x00EC, r1
    1e5a:	92 e1       	ldi	r25, 0x12	; 18
    1e5c:	90 93 ed 00 	sts	0x00ED, r25
    1e60:	98 e0       	ldi	r25, 0x08	; 8
    1e62:	90 93 f0 00 	sts	0x00F0, r25
    1e66:	10 92 96 01 	sts	0x0196, r1
    1e6a:	10 92 97 01 	sts	0x0197, r1
    1e6e:	82 ff       	sbrs	r24, 2
    1e70:	13 c0       	rjmp	.+38     	; 0x1e98 <__vector_10+0x6a>
    1e72:	80 91 96 01 	lds	r24, 0x0196
    1e76:	88 23       	and	r24, r24
    1e78:	79 f0       	breq	.+30     	; 0x1e98 <__vector_10+0x6a>
    1e7a:	80 91 95 01 	lds	r24, 0x0195
    1e7e:	88 23       	and	r24, r24
    1e80:	59 f0       	breq	.+22     	; 0x1e98 <__vector_10+0x6a>
    1e82:	81 50       	subi	r24, 0x01	; 1
    1e84:	80 93 95 01 	sts	0x0195, r24
    1e88:	81 11       	cpse	r24, r1
    1e8a:	06 c0       	rjmp	.+12     	; 0x1e98 <__vector_10+0x6a>
    1e8c:	84 e0       	ldi	r24, 0x04	; 4
    1e8e:	80 93 e9 00 	sts	0x00E9, r24
    1e92:	8a e3       	ldi	r24, 0x3A	; 58
    1e94:	80 93 e8 00 	sts	0x00E8, r24
    1e98:	ff 91       	pop	r31
    1e9a:	ef 91       	pop	r30
    1e9c:	9f 91       	pop	r25
    1e9e:	8f 91       	pop	r24
    1ea0:	0f 90       	pop	r0
    1ea2:	0f be       	out	0x3f, r0	; 63
    1ea4:	0f 90       	pop	r0
    1ea6:	1f 90       	pop	r1
    1ea8:	18 95       	reti

00001eaa <__vector_11>:
    1eaa:	1f 92       	push	r1
    1eac:	0f 92       	push	r0
    1eae:	0f b6       	in	r0, 0x3f	; 63
    1eb0:	0f 92       	push	r0
    1eb2:	11 24       	eor	r1, r1
    1eb4:	0f 93       	push	r16
    1eb6:	1f 93       	push	r17
    1eb8:	2f 93       	push	r18
    1eba:	3f 93       	push	r19
    1ebc:	4f 93       	push	r20
    1ebe:	5f 93       	push	r21
    1ec0:	6f 93       	push	r22
    1ec2:	7f 93       	push	r23
    1ec4:	8f 93       	push	r24
    1ec6:	9f 93       	push	r25
    1ec8:	af 93       	push	r26
    1eca:	bf 93       	push	r27
    1ecc:	cf 93       	push	r28
    1ece:	df 93       	push	r29
    1ed0:	ef 93       	push	r30
    1ed2:	ff 93       	push	r31
    1ed4:	10 92 e9 00 	sts	0x00E9, r1
    1ed8:	80 91 e8 00 	lds	r24, 0x00E8
    1edc:	83 ff       	sbrs	r24, 3
    1ede:	51 c1       	rjmp	.+674    	; 0x2182 <__vector_11+0x2d8>
    1ee0:	e1 ef       	ldi	r30, 0xF1	; 241
    1ee2:	f0 e0       	ldi	r31, 0x00	; 0
    1ee4:	70 81       	ld	r23, Z
    1ee6:	40 81       	ld	r20, Z
    1ee8:	20 81       	ld	r18, Z
    1eea:	30 81       	ld	r19, Z
    1eec:	93 2f       	mov	r25, r19
    1eee:	80 e0       	ldi	r24, 0x00	; 0
    1ef0:	dc 01       	movw	r26, r24
    1ef2:	a2 2b       	or	r26, r18
    1ef4:	9d 01       	movw	r18, r26
    1ef6:	50 81       	ld	r21, Z
    1ef8:	60 81       	ld	r22, Z
    1efa:	96 2f       	mov	r25, r22
    1efc:	80 e0       	ldi	r24, 0x00	; 0
    1efe:	85 2b       	or	r24, r21
    1f00:	a0 81       	ld	r26, Z
    1f02:	b0 81       	ld	r27, Z
    1f04:	52 ef       	ldi	r21, 0xF2	; 242
    1f06:	50 93 e8 00 	sts	0x00E8, r21
    1f0a:	46 30       	cpi	r20, 0x06	; 6
    1f0c:	09 f0       	breq	.+2      	; 0x1f10 <__vector_11+0x66>
    1f0e:	5c c0       	rjmp	.+184    	; 0x1fc8 <__vector_11+0x11e>
    1f10:	04 c0       	rjmp	.+8      	; 0x1f1a <__vector_11+0x70>
    1f12:	81 e2       	ldi	r24, 0x21	; 33
    1f14:	80 93 eb 00 	sts	0x00EB, r24
    1f18:	3b c1       	rjmp	.+630    	; 0x2190 <__vector_11+0x2e6>
    1f1a:	c6 e0       	ldi	r28, 0x06	; 6
    1f1c:	4f e1       	ldi	r20, 0x1F	; 31
    1f1e:	51 e0       	ldi	r21, 0x01	; 1
    1f20:	fa 01       	movw	r30, r20
    1f22:	65 91       	lpm	r22, Z+
    1f24:	74 91       	lpm	r23, Z
    1f26:	26 17       	cp	r18, r22
    1f28:	37 07       	cpc	r19, r23
    1f2a:	19 f0       	breq	.+6      	; 0x1f32 <__vector_11+0x88>
    1f2c:	49 5f       	subi	r20, 0xF9	; 249
    1f2e:	5f 4f       	sbci	r21, 0xFF	; 255
    1f30:	20 c0       	rjmp	.+64     	; 0x1f72 <__vector_11+0xc8>
    1f32:	fa 01       	movw	r30, r20
    1f34:	32 96       	adiw	r30, 0x02	; 2
    1f36:	65 91       	lpm	r22, Z+
    1f38:	74 91       	lpm	r23, Z
    1f3a:	86 17       	cp	r24, r22
    1f3c:	97 07       	cpc	r25, r23
    1f3e:	19 f0       	breq	.+6      	; 0x1f46 <__vector_11+0x9c>
    1f40:	49 5f       	subi	r20, 0xF9	; 249
    1f42:	5f 4f       	sbci	r21, 0xFF	; 255
    1f44:	16 c0       	rjmp	.+44     	; 0x1f72 <__vector_11+0xc8>
    1f46:	fa 01       	movw	r30, r20
    1f48:	34 96       	adiw	r30, 0x04	; 4
    1f4a:	85 91       	lpm	r24, Z+
    1f4c:	94 91       	lpm	r25, Z
    1f4e:	28 2f       	mov	r18, r24
    1f50:	39 2f       	mov	r19, r25
    1f52:	fa 01       	movw	r30, r20
    1f54:	36 96       	adiw	r30, 0x06	; 6
    1f56:	44 91       	lpm	r20, Z
    1f58:	9b 2f       	mov	r25, r27
    1f5a:	80 e0       	ldi	r24, 0x00	; 0
    1f5c:	8a 2b       	or	r24, r26
    1f5e:	8f 3f       	cpi	r24, 0xFF	; 255
    1f60:	91 05       	cpc	r25, r1
    1f62:	19 f0       	breq	.+6      	; 0x1f6a <__vector_11+0xc0>
    1f64:	10 f0       	brcs	.+4      	; 0x1f6a <__vector_11+0xc0>
    1f66:	8f ef       	ldi	r24, 0xFF	; 255
    1f68:	90 e0       	ldi	r25, 0x00	; 0
    1f6a:	84 17       	cp	r24, r20
    1f6c:	28 f4       	brcc	.+10     	; 0x1f78 <__vector_11+0xce>
    1f6e:	48 2f       	mov	r20, r24
    1f70:	03 c0       	rjmp	.+6      	; 0x1f78 <__vector_11+0xce>
    1f72:	c1 50       	subi	r28, 0x01	; 1
    1f74:	a9 f6       	brne	.-86     	; 0x1f20 <__vector_11+0x76>
    1f76:	cd cf       	rjmp	.-102    	; 0x1f12 <__vector_11+0x68>
    1f78:	c8 ee       	ldi	r28, 0xE8	; 232
    1f7a:	d0 e0       	ldi	r29, 0x00	; 0
    1f7c:	7e ef       	ldi	r23, 0xFE	; 254
    1f7e:	a1 ef       	ldi	r26, 0xF1	; 241
    1f80:	b0 e0       	ldi	r27, 0x00	; 0
    1f82:	10 e1       	ldi	r17, 0x10	; 16
    1f84:	88 81       	ld	r24, Y
    1f86:	98 2f       	mov	r25, r24
    1f88:	95 70       	andi	r25, 0x05	; 5
    1f8a:	e1 f3       	breq	.-8      	; 0x1f84 <__vector_11+0xda>
    1f8c:	82 fd       	sbrc	r24, 2
    1f8e:	00 c1       	rjmp	.+512    	; 0x2190 <__vector_11+0x2e6>
    1f90:	64 2f       	mov	r22, r20
    1f92:	41 31       	cpi	r20, 0x11	; 17
    1f94:	08 f0       	brcs	.+2      	; 0x1f98 <__vector_11+0xee>
    1f96:	61 2f       	mov	r22, r17
    1f98:	66 23       	and	r22, r22
    1f9a:	09 f4       	brne	.+2      	; 0x1f9e <__vector_11+0xf4>
    1f9c:	f6 c0       	rjmp	.+492    	; 0x218a <__vector_11+0x2e0>
    1f9e:	c9 01       	movw	r24, r18
    1fa0:	56 2f       	mov	r21, r22
    1fa2:	fc 01       	movw	r30, r24
    1fa4:	01 96       	adiw	r24, 0x01	; 1
    1fa6:	e4 91       	lpm	r30, Z
    1fa8:	ec 93       	st	X, r30
    1faa:	51 50       	subi	r21, 0x01	; 1
    1fac:	d1 f7       	brne	.-12     	; 0x1fa2 <__vector_11+0xf8>
    1fae:	86 2f       	mov	r24, r22
    1fb0:	81 50       	subi	r24, 0x01	; 1
    1fb2:	90 e0       	ldi	r25, 0x00	; 0
    1fb4:	01 96       	adiw	r24, 0x01	; 1
    1fb6:	28 0f       	add	r18, r24
    1fb8:	39 1f       	adc	r19, r25
    1fba:	46 1b       	sub	r20, r22
    1fbc:	78 83       	st	Y, r23
    1fbe:	41 11       	cpse	r20, r1
    1fc0:	e1 cf       	rjmp	.-62     	; 0x1f84 <__vector_11+0xda>
    1fc2:	60 31       	cpi	r22, 0x10	; 16
    1fc4:	f9 f2       	breq	.-66     	; 0x1f84 <__vector_11+0xda>
    1fc6:	e4 c0       	rjmp	.+456    	; 0x2190 <__vector_11+0x2e6>
    1fc8:	45 30       	cpi	r20, 0x05	; 5
    1fca:	61 f4       	brne	.+24     	; 0x1fe4 <__vector_11+0x13a>
    1fcc:	8e ef       	ldi	r24, 0xFE	; 254
    1fce:	80 93 e8 00 	sts	0x00E8, r24
    1fd2:	e8 ee       	ldi	r30, 0xE8	; 232
    1fd4:	f0 e0       	ldi	r31, 0x00	; 0
    1fd6:	80 81       	ld	r24, Z
    1fd8:	80 ff       	sbrs	r24, 0
    1fda:	fd cf       	rjmp	.-6      	; 0x1fd6 <__vector_11+0x12c>
    1fdc:	20 68       	ori	r18, 0x80	; 128
    1fde:	20 93 e3 00 	sts	0x00E3, r18
    1fe2:	d6 c0       	rjmp	.+428    	; 0x2190 <__vector_11+0x2e6>
    1fe4:	49 30       	cpi	r20, 0x09	; 9
    1fe6:	a1 f5       	brne	.+104    	; 0x2050 <__vector_11+0x1a6>
    1fe8:	71 11       	cpse	r23, r1
    1fea:	5b c0       	rjmp	.+182    	; 0x20a2 <__vector_11+0x1f8>
    1fec:	20 93 96 01 	sts	0x0196, r18
    1ff0:	10 92 97 01 	sts	0x0197, r1
    1ff4:	10 92 95 01 	sts	0x0195, r1
    1ff8:	8e ef       	ldi	r24, 0xFE	; 254
    1ffa:	80 93 e8 00 	sts	0x00E8, r24
    1ffe:	11 e0       	ldi	r17, 0x01	; 1
    2000:	89 e4       	ldi	r24, 0x49	; 73
    2002:	91 e0       	ldi	r25, 0x01	; 1
    2004:	c9 ee       	ldi	r28, 0xE9	; 233
    2006:	d0 e0       	ldi	r29, 0x00	; 0
    2008:	ab ee       	ldi	r26, 0xEB	; 235
    200a:	b0 e0       	ldi	r27, 0x00	; 0
    200c:	6c ee       	ldi	r22, 0xEC	; 236
    200e:	70 e0       	ldi	r23, 0x00	; 0
    2010:	4d ee       	ldi	r20, 0xED	; 237
    2012:	50 e0       	ldi	r21, 0x00	; 0
    2014:	18 83       	st	Y, r17
    2016:	9c 01       	movw	r18, r24
    2018:	2f 5f       	subi	r18, 0xFF	; 255
    201a:	3f 4f       	sbci	r19, 0xFF	; 255
    201c:	fc 01       	movw	r30, r24
    201e:	04 91       	lpm	r16, Z
    2020:	0c 93       	st	X, r16
    2022:	00 23       	and	r16, r16
    2024:	59 f0       	breq	.+22     	; 0x203c <__vector_11+0x192>
    2026:	f9 01       	movw	r30, r18
    2028:	24 91       	lpm	r18, Z
    202a:	fb 01       	movw	r30, r22
    202c:	20 83       	st	Z, r18
    202e:	fc 01       	movw	r30, r24
    2030:	32 96       	adiw	r30, 0x02	; 2
    2032:	03 96       	adiw	r24, 0x03	; 3
    2034:	24 91       	lpm	r18, Z
    2036:	fa 01       	movw	r30, r20
    2038:	20 83       	st	Z, r18
    203a:	01 c0       	rjmp	.+2      	; 0x203e <__vector_11+0x194>
    203c:	c9 01       	movw	r24, r18
    203e:	1f 5f       	subi	r17, 0xFF	; 255
    2040:	15 30       	cpi	r17, 0x05	; 5
    2042:	41 f7       	brne	.-48     	; 0x2014 <__vector_11+0x16a>
    2044:	ea ee       	ldi	r30, 0xEA	; 234
    2046:	f0 e0       	ldi	r31, 0x00	; 0
    2048:	8e e1       	ldi	r24, 0x1E	; 30
    204a:	80 83       	st	Z, r24
    204c:	10 82       	st	Z, r1
    204e:	a0 c0       	rjmp	.+320    	; 0x2190 <__vector_11+0x2e6>
    2050:	48 30       	cpi	r20, 0x08	; 8
    2052:	81 f4       	brne	.+32     	; 0x2074 <__vector_11+0x1ca>
    2054:	70 38       	cpi	r23, 0x80	; 128
    2056:	09 f0       	breq	.+2      	; 0x205a <__vector_11+0x1b0>
    2058:	3f c0       	rjmp	.+126    	; 0x20d8 <__vector_11+0x22e>
    205a:	e8 ee       	ldi	r30, 0xE8	; 232
    205c:	f0 e0       	ldi	r31, 0x00	; 0
    205e:	80 81       	ld	r24, Z
    2060:	80 ff       	sbrs	r24, 0
    2062:	fd cf       	rjmp	.-6      	; 0x205e <__vector_11+0x1b4>
    2064:	80 91 96 01 	lds	r24, 0x0196
    2068:	80 93 f1 00 	sts	0x00F1, r24
    206c:	8e ef       	ldi	r24, 0xFE	; 254
    206e:	80 93 e8 00 	sts	0x00E8, r24
    2072:	8e c0       	rjmp	.+284    	; 0x2190 <__vector_11+0x2e6>
    2074:	41 32       	cpi	r20, 0x21	; 33
    2076:	a9 f4       	brne	.+42     	; 0x20a2 <__vector_11+0x1f8>
    2078:	71 3a       	cpi	r23, 0xA1	; 161
    207a:	f1 f5       	brne	.+124    	; 0x20f8 <__vector_11+0x24e>
    207c:	e8 ee       	ldi	r30, 0xE8	; 232
    207e:	f0 e0       	ldi	r31, 0x00	; 0
    2080:	80 81       	ld	r24, Z
    2082:	80 ff       	sbrs	r24, 0
    2084:	fd cf       	rjmp	.-6      	; 0x2080 <__vector_11+0x1d6>
    2086:	ec e0       	ldi	r30, 0x0C	; 12
    2088:	f1 e0       	ldi	r31, 0x01	; 1
    208a:	a1 ef       	ldi	r26, 0xF1	; 241
    208c:	b0 e0       	ldi	r27, 0x00	; 0
    208e:	81 91       	ld	r24, Z+
    2090:	8c 93       	st	X, r24
    2092:	41 e0       	ldi	r20, 0x01	; 1
    2094:	e3 31       	cpi	r30, 0x13	; 19
    2096:	f4 07       	cpc	r31, r20
    2098:	d1 f7       	brne	.-12     	; 0x208e <__vector_11+0x1e4>
    209a:	8e ef       	ldi	r24, 0xFE	; 254
    209c:	80 93 e8 00 	sts	0x00E8, r24
    20a0:	77 c0       	rjmp	.+238    	; 0x2190 <__vector_11+0x2e6>
    20a2:	40 32       	cpi	r20, 0x20	; 32
    20a4:	c9 f4       	brne	.+50     	; 0x20d8 <__vector_11+0x22e>
    20a6:	71 32       	cpi	r23, 0x21	; 33
    20a8:	09 f0       	breq	.+2      	; 0x20ac <__vector_11+0x202>
    20aa:	6b c0       	rjmp	.+214    	; 0x2182 <__vector_11+0x2d8>
    20ac:	e8 ee       	ldi	r30, 0xE8	; 232
    20ae:	f0 e0       	ldi	r31, 0x00	; 0
    20b0:	80 81       	ld	r24, Z
    20b2:	82 ff       	sbrs	r24, 2
    20b4:	fd cf       	rjmp	.-6      	; 0x20b0 <__vector_11+0x206>
    20b6:	ec e0       	ldi	r30, 0x0C	; 12
    20b8:	f1 e0       	ldi	r31, 0x01	; 1
    20ba:	a1 ef       	ldi	r26, 0xF1	; 241
    20bc:	b0 e0       	ldi	r27, 0x00	; 0
    20be:	8c 91       	ld	r24, X
    20c0:	81 93       	st	Z+, r24
    20c2:	51 e0       	ldi	r21, 0x01	; 1
    20c4:	e3 31       	cpi	r30, 0x13	; 19
    20c6:	f5 07       	cpc	r31, r21
    20c8:	d1 f7       	brne	.-12     	; 0x20be <__vector_11+0x214>
    20ca:	e8 ee       	ldi	r30, 0xE8	; 232
    20cc:	f0 e0       	ldi	r31, 0x00	; 0
    20ce:	8b ef       	ldi	r24, 0xFB	; 251
    20d0:	80 83       	st	Z, r24
    20d2:	8e ef       	ldi	r24, 0xFE	; 254
    20d4:	80 83       	st	Z, r24
    20d6:	5c c0       	rjmp	.+184    	; 0x2190 <__vector_11+0x2e6>
    20d8:	42 32       	cpi	r20, 0x22	; 34
    20da:	71 f4       	brne	.+28     	; 0x20f8 <__vector_11+0x24e>
    20dc:	71 32       	cpi	r23, 0x21	; 33
    20de:	09 f0       	breq	.+2      	; 0x20e2 <__vector_11+0x238>
    20e0:	50 c0       	rjmp	.+160    	; 0x2182 <__vector_11+0x2d8>
    20e2:	20 93 97 01 	sts	0x0197, r18
    20e6:	e8 ee       	ldi	r30, 0xE8	; 232
    20e8:	f0 e0       	ldi	r31, 0x00	; 0
    20ea:	80 81       	ld	r24, Z
    20ec:	80 ff       	sbrs	r24, 0
    20ee:	fd cf       	rjmp	.-6      	; 0x20ea <__vector_11+0x240>
    20f0:	8e ef       	ldi	r24, 0xFE	; 254
    20f2:	80 93 e8 00 	sts	0x00E8, r24
    20f6:	4c c0       	rjmp	.+152    	; 0x2190 <__vector_11+0x2e6>
    20f8:	41 11       	cpse	r20, r1
    20fa:	1a c0       	rjmp	.+52     	; 0x2130 <__vector_11+0x286>
    20fc:	e8 ee       	ldi	r30, 0xE8	; 232
    20fe:	f0 e0       	ldi	r31, 0x00	; 0
    2100:	20 81       	ld	r18, Z
    2102:	20 ff       	sbrs	r18, 0
    2104:	fd cf       	rjmp	.-6      	; 0x2100 <__vector_11+0x256>
    2106:	72 38       	cpi	r23, 0x82	; 130
    2108:	51 f4       	brne	.+20     	; 0x211e <__vector_11+0x274>
    210a:	e9 ee       	ldi	r30, 0xE9	; 233
    210c:	f0 e0       	ldi	r31, 0x00	; 0
    210e:	80 83       	st	Z, r24
    2110:	80 91 eb 00 	lds	r24, 0x00EB
    2114:	85 fb       	bst	r24, 5
    2116:	88 27       	eor	r24, r24
    2118:	80 f9       	bld	r24, 0
    211a:	10 82       	st	Z, r1
    211c:	01 c0       	rjmp	.+2      	; 0x2120 <__vector_11+0x276>
    211e:	80 e0       	ldi	r24, 0x00	; 0
    2120:	e1 ef       	ldi	r30, 0xF1	; 241
    2122:	f0 e0       	ldi	r31, 0x00	; 0
    2124:	80 83       	st	Z, r24
    2126:	10 82       	st	Z, r1
    2128:	8e ef       	ldi	r24, 0xFE	; 254
    212a:	80 93 e8 00 	sts	0x00E8, r24
    212e:	30 c0       	rjmp	.+96     	; 0x2190 <__vector_11+0x2e6>
    2130:	41 30       	cpi	r20, 0x01	; 1
    2132:	11 f0       	breq	.+4      	; 0x2138 <__vector_11+0x28e>
    2134:	43 30       	cpi	r20, 0x03	; 3
    2136:	29 f5       	brne	.+74     	; 0x2182 <__vector_11+0x2d8>
    2138:	72 30       	cpi	r23, 0x02	; 2
    213a:	19 f5       	brne	.+70     	; 0x2182 <__vector_11+0x2d8>
    213c:	23 2b       	or	r18, r19
    213e:	09 f5       	brne	.+66     	; 0x2182 <__vector_11+0x2d8>
    2140:	8f 77       	andi	r24, 0x7F	; 127
    2142:	99 27       	eor	r25, r25
    2144:	38 2f       	mov	r19, r24
    2146:	31 50       	subi	r19, 0x01	; 1
    2148:	34 30       	cpi	r19, 0x04	; 4
    214a:	d8 f4       	brcc	.+54     	; 0x2182 <__vector_11+0x2d8>
    214c:	3e ef       	ldi	r19, 0xFE	; 254
    214e:	30 93 e8 00 	sts	0x00E8, r19
    2152:	80 93 e9 00 	sts	0x00E9, r24
    2156:	43 30       	cpi	r20, 0x03	; 3
    2158:	21 f4       	brne	.+8      	; 0x2162 <__vector_11+0x2b8>
    215a:	81 e2       	ldi	r24, 0x21	; 33
    215c:	80 93 eb 00 	sts	0x00EB, r24
    2160:	17 c0       	rjmp	.+46     	; 0x2190 <__vector_11+0x2e6>
    2162:	99 e1       	ldi	r25, 0x19	; 25
    2164:	90 93 eb 00 	sts	0x00EB, r25
    2168:	21 e0       	ldi	r18, 0x01	; 1
    216a:	30 e0       	ldi	r19, 0x00	; 0
    216c:	d9 01       	movw	r26, r18
    216e:	02 c0       	rjmp	.+4      	; 0x2174 <__vector_11+0x2ca>
    2170:	aa 0f       	add	r26, r26
    2172:	bb 1f       	adc	r27, r27
    2174:	8a 95       	dec	r24
    2176:	e2 f7       	brpl	.-8      	; 0x2170 <__vector_11+0x2c6>
    2178:	ea ee       	ldi	r30, 0xEA	; 234
    217a:	f0 e0       	ldi	r31, 0x00	; 0
    217c:	a0 83       	st	Z, r26
    217e:	10 82       	st	Z, r1
    2180:	07 c0       	rjmp	.+14     	; 0x2190 <__vector_11+0x2e6>
    2182:	81 e2       	ldi	r24, 0x21	; 33
    2184:	80 93 eb 00 	sts	0x00EB, r24
    2188:	03 c0       	rjmp	.+6      	; 0x2190 <__vector_11+0x2e6>
    218a:	78 83       	st	Y, r23
    218c:	41 11       	cpse	r20, r1
    218e:	fa ce       	rjmp	.-524    	; 0x1f84 <__vector_11+0xda>
    2190:	ff 91       	pop	r31
    2192:	ef 91       	pop	r30
    2194:	df 91       	pop	r29
    2196:	cf 91       	pop	r28
    2198:	bf 91       	pop	r27
    219a:	af 91       	pop	r26
    219c:	9f 91       	pop	r25
    219e:	8f 91       	pop	r24
    21a0:	7f 91       	pop	r23
    21a2:	6f 91       	pop	r22
    21a4:	5f 91       	pop	r21
    21a6:	4f 91       	pop	r20
    21a8:	3f 91       	pop	r19
    21aa:	2f 91       	pop	r18
    21ac:	1f 91       	pop	r17
    21ae:	0f 91       	pop	r16
    21b0:	0f 90       	pop	r0
    21b2:	0f be       	out	0x3f, r0	; 63
    21b4:	0f 90       	pop	r0
    21b6:	1f 90       	pop	r1
    21b8:	18 95       	reti

000021ba <m_usb_tx_int>:
    21ba:	ef 92       	push	r14
    21bc:	ff 92       	push	r15
    21be:	0f 93       	push	r16
    21c0:	1f 93       	push	r17
    21c2:	cf 93       	push	r28
    21c4:	df 93       	push	r29
    21c6:	cd b7       	in	r28, 0x3d	; 61
    21c8:	de b7       	in	r29, 0x3e	; 62
    21ca:	27 97       	sbiw	r28, 0x07	; 7
    21cc:	0f b6       	in	r0, 0x3f	; 63
    21ce:	f8 94       	cli
    21d0:	de bf       	out	0x3e, r29	; 62
    21d2:	0f be       	out	0x3f, r0	; 63
    21d4:	cd bf       	out	0x3d, r28	; 61
    21d6:	8e 01       	movw	r16, r28
    21d8:	0f 5f       	subi	r16, 0xFF	; 255
    21da:	1f 4f       	sbci	r17, 0xFF	; 255
    21dc:	27 e0       	ldi	r18, 0x07	; 7
    21de:	f8 01       	movw	r30, r16
    21e0:	11 92       	st	Z+, r1
    21e2:	2a 95       	dec	r18
    21e4:	e9 f7       	brne	.-6      	; 0x21e0 <m_usb_tx_int+0x26>
    21e6:	4a e0       	ldi	r20, 0x0A	; 10
    21e8:	50 e0       	ldi	r21, 0x00	; 0
    21ea:	b8 01       	movw	r22, r16
    21ec:	0e 94 1b 17 	call	0x2e36	; 0x2e36 <itoa>
    21f0:	7e 01       	movw	r14, r28
    21f2:	f8 e0       	ldi	r31, 0x08	; 8
    21f4:	ef 0e       	add	r14, r31
    21f6:	f1 1c       	adc	r15, r1
    21f8:	f8 01       	movw	r30, r16
    21fa:	81 91       	ld	r24, Z+
    21fc:	8f 01       	movw	r16, r30
    21fe:	81 11       	cpse	r24, r1
    2200:	0e 94 bb 0e 	call	0x1d76	; 0x1d76 <m_usb_tx_char>
    2204:	0e 15       	cp	r16, r14
    2206:	1f 05       	cpc	r17, r15
    2208:	b9 f7       	brne	.-18     	; 0x21f8 <m_usb_tx_int+0x3e>
    220a:	27 96       	adiw	r28, 0x07	; 7
    220c:	0f b6       	in	r0, 0x3f	; 63
    220e:	f8 94       	cli
    2210:	de bf       	out	0x3e, r29	; 62
    2212:	0f be       	out	0x3f, r0	; 63
    2214:	cd bf       	out	0x3d, r28	; 61
    2216:	df 91       	pop	r29
    2218:	cf 91       	pop	r28
    221a:	1f 91       	pop	r17
    221c:	0f 91       	pop	r16
    221e:	ff 90       	pop	r15
    2220:	ef 90       	pop	r14
    2222:	08 95       	ret

00002224 <twi_wait>:
    2224:	20 e0       	ldi	r18, 0x00	; 0
    2226:	30 e0       	ldi	r19, 0x00	; 0
    2228:	ec eb       	ldi	r30, 0xBC	; 188
    222a:	f0 e0       	ldi	r31, 0x00	; 0
    222c:	80 81       	ld	r24, Z
    222e:	88 23       	and	r24, r24
    2230:	34 f0       	brlt	.+12     	; 0x223e <twi_wait+0x1a>
    2232:	2f 5f       	subi	r18, 0xFF	; 255
    2234:	3f 4f       	sbci	r19, 0xFF	; 255
    2236:	29 3e       	cpi	r18, 0xE9	; 233
    2238:	83 e0       	ldi	r24, 0x03	; 3
    223a:	38 07       	cpc	r19, r24
    223c:	b9 f7       	brne	.-18     	; 0x222c <twi_wait+0x8>
    223e:	81 e0       	ldi	r24, 0x01	; 1
    2240:	28 3e       	cpi	r18, 0xE8	; 232
    2242:	33 40       	sbci	r19, 0x03	; 3
    2244:	09 f4       	brne	.+2      	; 0x2248 <twi_wait+0x24>
    2246:	80 e0       	ldi	r24, 0x00	; 0
    2248:	08 95       	ret

0000224a <send_byte>:
    224a:	80 93 bb 00 	sts	0x00BB, r24
    224e:	84 e8       	ldi	r24, 0x84	; 132
    2250:	80 93 bc 00 	sts	0x00BC, r24
    2254:	0e 94 12 11 	call	0x2224	; 0x2224 <twi_wait>
    2258:	88 23       	and	r24, r24
    225a:	21 f0       	breq	.+8      	; 0x2264 <send_byte+0x1a>
    225c:	80 91 b9 00 	lds	r24, 0x00B9
    2260:	88 7f       	andi	r24, 0xF8	; 248
    2262:	08 95       	ret
    2264:	80 e0       	ldi	r24, 0x00	; 0
    2266:	08 95       	ret

00002268 <start_read>:
    2268:	cf 93       	push	r28
    226a:	c8 2f       	mov	r28, r24
    226c:	94 ea       	ldi	r25, 0xA4	; 164
    226e:	90 93 bc 00 	sts	0x00BC, r25
    2272:	0e 94 12 11 	call	0x2224	; 0x2224 <twi_wait>
    2276:	88 23       	and	r24, r24
    2278:	61 f0       	breq	.+24     	; 0x2292 <start_read+0x2a>
    227a:	8c 2f       	mov	r24, r28
    227c:	88 0f       	add	r24, r24
    227e:	8f 5f       	subi	r24, 0xFF	; 255
    2280:	0e 94 25 11 	call	0x224a	; 0x224a <send_byte>
    2284:	88 34       	cpi	r24, 0x48	; 72
    2286:	39 f4       	brne	.+14     	; 0x2296 <start_read+0x2e>
    2288:	84 e9       	ldi	r24, 0x94	; 148
    228a:	80 93 bc 00 	sts	0x00BC, r24
    228e:	80 e0       	ldi	r24, 0x00	; 0
    2290:	03 c0       	rjmp	.+6      	; 0x2298 <start_read+0x30>
    2292:	80 e0       	ldi	r24, 0x00	; 0
    2294:	01 c0       	rjmp	.+2      	; 0x2298 <start_read+0x30>
    2296:	81 e0       	ldi	r24, 0x01	; 1
    2298:	cf 91       	pop	r28
    229a:	08 95       	ret

0000229c <start_write>:
    229c:	cf 93       	push	r28
    229e:	c8 2f       	mov	r28, r24
    22a0:	94 ea       	ldi	r25, 0xA4	; 164
    22a2:	90 93 bc 00 	sts	0x00BC, r25
    22a6:	0e 94 12 11 	call	0x2224	; 0x2224 <twi_wait>
    22aa:	88 23       	and	r24, r24
    22ac:	59 f0       	breq	.+22     	; 0x22c4 <start_write+0x28>
    22ae:	8c 2f       	mov	r24, r28
    22b0:	88 0f       	add	r24, r24
    22b2:	0e 94 25 11 	call	0x224a	; 0x224a <send_byte>
    22b6:	80 32       	cpi	r24, 0x20	; 32
    22b8:	39 f4       	brne	.+14     	; 0x22c8 <start_write+0x2c>
    22ba:	84 e9       	ldi	r24, 0x94	; 148
    22bc:	80 93 bc 00 	sts	0x00BC, r24
    22c0:	80 e0       	ldi	r24, 0x00	; 0
    22c2:	03 c0       	rjmp	.+6      	; 0x22ca <start_write+0x2e>
    22c4:	80 e0       	ldi	r24, 0x00	; 0
    22c6:	01 c0       	rjmp	.+2      	; 0x22ca <start_write+0x2e>
    22c8:	81 e0       	ldi	r24, 0x01	; 1
    22ca:	cf 91       	pop	r28
    22cc:	08 95       	ret

000022ce <end>:
    22ce:	84 e9       	ldi	r24, 0x94	; 148
    22d0:	80 93 bc 00 	sts	0x00BC, r24
    22d4:	08 95       	ret

000022d6 <m_wii_read>:
    22d6:	ef 92       	push	r14
    22d8:	ff 92       	push	r15
    22da:	0f 93       	push	r16
    22dc:	1f 93       	push	r17
    22de:	cf 93       	push	r28
    22e0:	df 93       	push	r29
    22e2:	cd b7       	in	r28, 0x3d	; 61
    22e4:	de b7       	in	r29, 0x3e	; 62
    22e6:	60 97       	sbiw	r28, 0x10	; 16
    22e8:	0f b6       	in	r0, 0x3f	; 63
    22ea:	f8 94       	cli
    22ec:	de bf       	out	0x3e, r29	; 62
    22ee:	0f be       	out	0x3f, r0	; 63
    22f0:	cd bf       	out	0x3d, r28	; 61
    22f2:	e8 2e       	mov	r14, r24
    22f4:	f9 2e       	mov	r15, r25
    22f6:	fe 01       	movw	r30, r28
    22f8:	31 96       	adiw	r30, 0x01	; 1
    22fa:	80 e1       	ldi	r24, 0x10	; 16
    22fc:	df 01       	movw	r26, r30
    22fe:	1d 92       	st	X+, r1
    2300:	8a 95       	dec	r24
    2302:	e9 f7       	brne	.-6      	; 0x22fe <m_wii_read+0x28>
    2304:	88 e5       	ldi	r24, 0x58	; 88
    2306:	0e 94 4e 11 	call	0x229c	; 0x229c <start_write>
    230a:	88 23       	and	r24, r24
    230c:	09 f4       	brne	.+2      	; 0x2310 <m_wii_read+0x3a>
    230e:	66 c0       	rjmp	.+204    	; 0x23dc <m_wii_read+0x106>
    2310:	86 e3       	ldi	r24, 0x36	; 54
    2312:	0e 94 25 11 	call	0x224a	; 0x224a <send_byte>
    2316:	88 23       	and	r24, r24
    2318:	09 f4       	brne	.+2      	; 0x231c <m_wii_read+0x46>
    231a:	62 c0       	rjmp	.+196    	; 0x23e0 <m_wii_read+0x10a>
    231c:	0e 94 67 11 	call	0x22ce	; 0x22ce <end>
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

    2320:	b8 e0       	ldi	r27, 0x08	; 8
    2322:	ba 95       	dec	r27
    2324:	f1 f7       	brne	.-4      	; 0x2322 <m_wii_read+0x4c>
    2326:	00 00       	nop
    2328:	88 e5       	ldi	r24, 0x58	; 88
    232a:	0e 94 34 11 	call	0x2268	; 0x2268 <start_read>
    232e:	88 23       	and	r24, r24
    2330:	09 f4       	brne	.+2      	; 0x2334 <m_wii_read+0x5e>
    2332:	58 c0       	rjmp	.+176    	; 0x23e4 <m_wii_read+0x10e>
    2334:	ae 01       	movw	r20, r28
    2336:	4f 5f       	subi	r20, 0xFF	; 255
    2338:	5f 4f       	sbci	r21, 0xFF	; 255
    233a:	8e 01       	movw	r16, r28
    233c:	00 5f       	subi	r16, 0xF0	; 240
    233e:	1f 4f       	sbci	r17, 0xFF	; 255
    2340:	ec eb       	ldi	r30, 0xBC	; 188
    2342:	f0 e0       	ldi	r31, 0x00	; 0
    2344:	94 ec       	ldi	r25, 0xC4	; 196
    2346:	2b eb       	ldi	r18, 0xBB	; 187
    2348:	30 e0       	ldi	r19, 0x00	; 0
    234a:	90 83       	st	Z, r25
    234c:	80 81       	ld	r24, Z
    234e:	88 23       	and	r24, r24
    2350:	ec f7       	brge	.-6      	; 0x234c <m_wii_read+0x76>
    2352:	d9 01       	movw	r26, r18
    2354:	8c 91       	ld	r24, X
    2356:	da 01       	movw	r26, r20
    2358:	8d 93       	st	X+, r24
    235a:	ad 01       	movw	r20, r26
    235c:	a0 17       	cp	r26, r16
    235e:	b1 07       	cpc	r27, r17
    2360:	a1 f7       	brne	.-24     	; 0x234a <m_wii_read+0x74>
    2362:	84 e8       	ldi	r24, 0x84	; 132
    2364:	80 93 bc 00 	sts	0x00BC, r24
    2368:	ec eb       	ldi	r30, 0xBC	; 188
    236a:	f0 e0       	ldi	r31, 0x00	; 0
    236c:	80 81       	ld	r24, Z
    236e:	88 23       	and	r24, r24
    2370:	ec f7       	brge	.-6      	; 0x236c <m_wii_read+0x96>
    2372:	80 91 bb 00 	lds	r24, 0x00BB
    2376:	88 8b       	std	Y+16, r24	; 0x10
    2378:	0e 94 67 11 	call	0x22ce	; 0x22ce <end>
    237c:	de 01       	movw	r26, r28
    237e:	14 96       	adiw	r26, 0x04	; 4
    2380:	6e 2d       	mov	r22, r14
    2382:	7f 2d       	mov	r23, r15
    2384:	4c 91       	ld	r20, X
    2386:	24 2f       	mov	r18, r20
    2388:	20 73       	andi	r18, 0x30	; 48
    238a:	cd 01       	movw	r24, r26
    238c:	02 97       	sbiw	r24, 0x02	; 2
    238e:	fc 01       	movw	r30, r24
    2390:	80 81       	ld	r24, Z
    2392:	90 e0       	ldi	r25, 0x00	; 0
    2394:	f0 e1       	ldi	r31, 0x10	; 16
    2396:	2f 9f       	mul	r18, r31
    2398:	80 0d       	add	r24, r0
    239a:	91 1d       	adc	r25, r1
    239c:	11 24       	eor	r1, r1
    239e:	fb 01       	movw	r30, r22
    23a0:	91 83       	std	Z+1, r25	; 0x01
    23a2:	80 83       	st	Z, r24
    23a4:	84 2f       	mov	r24, r20
    23a6:	80 7c       	andi	r24, 0xC0	; 192
    23a8:	90 e0       	ldi	r25, 0x00	; 0
    23aa:	88 0f       	add	r24, r24
    23ac:	99 1f       	adc	r25, r25
    23ae:	88 0f       	add	r24, r24
    23b0:	99 1f       	adc	r25, r25
    23b2:	9d 01       	movw	r18, r26
    23b4:	21 50       	subi	r18, 0x01	; 1
    23b6:	31 09       	sbc	r19, r1
    23b8:	f9 01       	movw	r30, r18
    23ba:	20 81       	ld	r18, Z
    23bc:	82 0f       	add	r24, r18
    23be:	91 1d       	adc	r25, r1
    23c0:	fb 01       	movw	r30, r22
    23c2:	93 83       	std	Z+3, r25	; 0x03
    23c4:	82 83       	std	Z+2, r24	; 0x02
    23c6:	4f 70       	andi	r20, 0x0F	; 15
    23c8:	44 83       	std	Z+4, r20	; 0x04
    23ca:	15 82       	std	Z+5, r1	; 0x05
    23cc:	13 96       	adiw	r26, 0x03	; 3
    23ce:	6a 5f       	subi	r22, 0xFA	; 250
    23d0:	7f 4f       	sbci	r23, 0xFF	; 255
    23d2:	0a 17       	cp	r16, r26
    23d4:	1b 07       	cpc	r17, r27
    23d6:	b1 f6       	brne	.-84     	; 0x2384 <m_wii_read+0xae>
    23d8:	81 e0       	ldi	r24, 0x01	; 1
    23da:	05 c0       	rjmp	.+10     	; 0x23e6 <m_wii_read+0x110>
    23dc:	80 e0       	ldi	r24, 0x00	; 0
    23de:	03 c0       	rjmp	.+6      	; 0x23e6 <m_wii_read+0x110>
    23e0:	80 e0       	ldi	r24, 0x00	; 0
    23e2:	01 c0       	rjmp	.+2      	; 0x23e6 <m_wii_read+0x110>
    23e4:	80 e0       	ldi	r24, 0x00	; 0
    23e6:	60 96       	adiw	r28, 0x10	; 16
    23e8:	0f b6       	in	r0, 0x3f	; 63
    23ea:	f8 94       	cli
    23ec:	de bf       	out	0x3e, r29	; 62
    23ee:	0f be       	out	0x3f, r0	; 63
    23f0:	cd bf       	out	0x3d, r28	; 61
    23f2:	df 91       	pop	r29
    23f4:	cf 91       	pop	r28
    23f6:	1f 91       	pop	r17
    23f8:	0f 91       	pop	r16
    23fa:	ff 90       	pop	r15
    23fc:	ef 90       	pop	r14
    23fe:	08 95       	ret

00002400 <m_wii_open>:
    2400:	0e 94 aa 07 	call	0xf54	; 0xf54 <m_bus_init>
    2404:	88 e5       	ldi	r24, 0x58	; 88
    2406:	0e 94 4e 11 	call	0x229c	; 0x229c <start_write>
    240a:	88 23       	and	r24, r24
    240c:	09 f4       	brne	.+2      	; 0x2410 <m_wii_open+0x10>
    240e:	c7 c0       	rjmp	.+398    	; 0x259e <m_wii_open+0x19e>
    2410:	80 e3       	ldi	r24, 0x30	; 48
    2412:	0e 94 25 11 	call	0x224a	; 0x224a <send_byte>
    2416:	88 23       	and	r24, r24
    2418:	09 f4       	brne	.+2      	; 0x241c <m_wii_open+0x1c>
    241a:	c3 c0       	rjmp	.+390    	; 0x25a2 <m_wii_open+0x1a2>
    241c:	81 e0       	ldi	r24, 0x01	; 1
    241e:	0e 94 25 11 	call	0x224a	; 0x224a <send_byte>
    2422:	88 23       	and	r24, r24
    2424:	09 f4       	brne	.+2      	; 0x2428 <m_wii_open+0x28>
    2426:	bf c0       	rjmp	.+382    	; 0x25a6 <m_wii_open+0x1a6>
    2428:	0e 94 67 11 	call	0x22ce	; 0x22ce <end>
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

    242c:	83 ec       	ldi	r24, 0xC3	; 195
    242e:	99 e0       	ldi	r25, 0x09	; 9
    2430:	01 97       	sbiw	r24, 0x01	; 1
    2432:	f1 f7       	brne	.-4      	; 0x2430 <m_wii_open+0x30>
    2434:	00 c0       	rjmp	.+0      	; 0x2436 <m_wii_open+0x36>
    2436:	00 00       	nop
    2438:	88 e5       	ldi	r24, 0x58	; 88
    243a:	0e 94 4e 11 	call	0x229c	; 0x229c <start_write>
    243e:	88 23       	and	r24, r24
    2440:	09 f4       	brne	.+2      	; 0x2444 <m_wii_open+0x44>
    2442:	b3 c0       	rjmp	.+358    	; 0x25aa <m_wii_open+0x1aa>
    2444:	80 e0       	ldi	r24, 0x00	; 0
    2446:	0e 94 25 11 	call	0x224a	; 0x224a <send_byte>
    244a:	88 23       	and	r24, r24
    244c:	09 f4       	brne	.+2      	; 0x2450 <m_wii_open+0x50>
    244e:	af c0       	rjmp	.+350    	; 0x25ae <m_wii_open+0x1ae>
    2450:	80 e0       	ldi	r24, 0x00	; 0
    2452:	0e 94 25 11 	call	0x224a	; 0x224a <send_byte>
    2456:	88 23       	and	r24, r24
    2458:	09 f4       	brne	.+2      	; 0x245c <m_wii_open+0x5c>
    245a:	ab c0       	rjmp	.+342    	; 0x25b2 <m_wii_open+0x1b2>
    245c:	80 e0       	ldi	r24, 0x00	; 0
    245e:	0e 94 25 11 	call	0x224a	; 0x224a <send_byte>
    2462:	88 23       	and	r24, r24
    2464:	09 f4       	brne	.+2      	; 0x2468 <m_wii_open+0x68>
    2466:	a7 c0       	rjmp	.+334    	; 0x25b6 <m_wii_open+0x1b6>
    2468:	80 e0       	ldi	r24, 0x00	; 0
    246a:	0e 94 25 11 	call	0x224a	; 0x224a <send_byte>
    246e:	88 23       	and	r24, r24
    2470:	09 f4       	brne	.+2      	; 0x2474 <m_wii_open+0x74>
    2472:	a3 c0       	rjmp	.+326    	; 0x25ba <m_wii_open+0x1ba>
    2474:	80 e0       	ldi	r24, 0x00	; 0
    2476:	0e 94 25 11 	call	0x224a	; 0x224a <send_byte>
    247a:	88 23       	and	r24, r24
    247c:	09 f4       	brne	.+2      	; 0x2480 <m_wii_open+0x80>
    247e:	9f c0       	rjmp	.+318    	; 0x25be <m_wii_open+0x1be>
    2480:	80 e0       	ldi	r24, 0x00	; 0
    2482:	0e 94 25 11 	call	0x224a	; 0x224a <send_byte>
    2486:	88 23       	and	r24, r24
    2488:	09 f4       	brne	.+2      	; 0x248c <m_wii_open+0x8c>
    248a:	9b c0       	rjmp	.+310    	; 0x25c2 <m_wii_open+0x1c2>
    248c:	80 e0       	ldi	r24, 0x00	; 0
    248e:	0e 94 25 11 	call	0x224a	; 0x224a <send_byte>
    2492:	88 23       	and	r24, r24
    2494:	09 f4       	brne	.+2      	; 0x2498 <m_wii_open+0x98>
    2496:	97 c0       	rjmp	.+302    	; 0x25c6 <m_wii_open+0x1c6>
    2498:	80 e9       	ldi	r24, 0x90	; 144
    249a:	0e 94 25 11 	call	0x224a	; 0x224a <send_byte>
    249e:	88 23       	and	r24, r24
    24a0:	09 f4       	brne	.+2      	; 0x24a4 <m_wii_open+0xa4>
    24a2:	93 c0       	rjmp	.+294    	; 0x25ca <m_wii_open+0x1ca>
    24a4:	0e 94 67 11 	call	0x22ce	; 0x22ce <end>
    24a8:	83 ec       	ldi	r24, 0xC3	; 195
    24aa:	99 e0       	ldi	r25, 0x09	; 9
    24ac:	01 97       	sbiw	r24, 0x01	; 1
    24ae:	f1 f7       	brne	.-4      	; 0x24ac <m_wii_open+0xac>
    24b0:	00 c0       	rjmp	.+0      	; 0x24b2 <m_wii_open+0xb2>
    24b2:	00 00       	nop
    24b4:	88 e5       	ldi	r24, 0x58	; 88
    24b6:	0e 94 4e 11 	call	0x229c	; 0x229c <start_write>
    24ba:	88 23       	and	r24, r24
    24bc:	09 f4       	brne	.+2      	; 0x24c0 <m_wii_open+0xc0>
    24be:	87 c0       	rjmp	.+270    	; 0x25ce <m_wii_open+0x1ce>
    24c0:	87 e0       	ldi	r24, 0x07	; 7
    24c2:	0e 94 25 11 	call	0x224a	; 0x224a <send_byte>
    24c6:	88 23       	and	r24, r24
    24c8:	09 f4       	brne	.+2      	; 0x24cc <m_wii_open+0xcc>
    24ca:	83 c0       	rjmp	.+262    	; 0x25d2 <m_wii_open+0x1d2>
    24cc:	80 e0       	ldi	r24, 0x00	; 0
    24ce:	0e 94 25 11 	call	0x224a	; 0x224a <send_byte>
    24d2:	88 23       	and	r24, r24
    24d4:	09 f4       	brne	.+2      	; 0x24d8 <m_wii_open+0xd8>
    24d6:	7f c0       	rjmp	.+254    	; 0x25d6 <m_wii_open+0x1d6>
    24d8:	81 e4       	ldi	r24, 0x41	; 65
    24da:	0e 94 25 11 	call	0x224a	; 0x224a <send_byte>
    24de:	88 23       	and	r24, r24
    24e0:	09 f4       	brne	.+2      	; 0x24e4 <m_wii_open+0xe4>
    24e2:	7b c0       	rjmp	.+246    	; 0x25da <m_wii_open+0x1da>
    24e4:	0e 94 67 11 	call	0x22ce	; 0x22ce <end>
    24e8:	83 ec       	ldi	r24, 0xC3	; 195
    24ea:	99 e0       	ldi	r25, 0x09	; 9
    24ec:	01 97       	sbiw	r24, 0x01	; 1
    24ee:	f1 f7       	brne	.-4      	; 0x24ec <m_wii_open+0xec>
    24f0:	00 c0       	rjmp	.+0      	; 0x24f2 <m_wii_open+0xf2>
    24f2:	00 00       	nop
    24f4:	88 e5       	ldi	r24, 0x58	; 88
    24f6:	0e 94 4e 11 	call	0x229c	; 0x229c <start_write>
    24fa:	88 23       	and	r24, r24
    24fc:	09 f4       	brne	.+2      	; 0x2500 <m_wii_open+0x100>
    24fe:	6f c0       	rjmp	.+222    	; 0x25de <m_wii_open+0x1de>
    2500:	8a e1       	ldi	r24, 0x1A	; 26
    2502:	0e 94 25 11 	call	0x224a	; 0x224a <send_byte>
    2506:	88 23       	and	r24, r24
    2508:	09 f4       	brne	.+2      	; 0x250c <m_wii_open+0x10c>
    250a:	6b c0       	rjmp	.+214    	; 0x25e2 <m_wii_open+0x1e2>
    250c:	80 e4       	ldi	r24, 0x40	; 64
    250e:	0e 94 25 11 	call	0x224a	; 0x224a <send_byte>
    2512:	88 23       	and	r24, r24
    2514:	09 f4       	brne	.+2      	; 0x2518 <m_wii_open+0x118>
    2516:	67 c0       	rjmp	.+206    	; 0x25e6 <m_wii_open+0x1e6>
    2518:	80 e0       	ldi	r24, 0x00	; 0
    251a:	0e 94 25 11 	call	0x224a	; 0x224a <send_byte>
    251e:	88 23       	and	r24, r24
    2520:	09 f4       	brne	.+2      	; 0x2524 <m_wii_open+0x124>
    2522:	63 c0       	rjmp	.+198    	; 0x25ea <m_wii_open+0x1ea>
    2524:	0e 94 67 11 	call	0x22ce	; 0x22ce <end>
    2528:	83 ec       	ldi	r24, 0xC3	; 195
    252a:	99 e0       	ldi	r25, 0x09	; 9
    252c:	01 97       	sbiw	r24, 0x01	; 1
    252e:	f1 f7       	brne	.-4      	; 0x252c <m_wii_open+0x12c>
    2530:	00 c0       	rjmp	.+0      	; 0x2532 <m_wii_open+0x132>
    2532:	00 00       	nop
    2534:	88 e5       	ldi	r24, 0x58	; 88
    2536:	0e 94 4e 11 	call	0x229c	; 0x229c <start_write>
    253a:	88 23       	and	r24, r24
    253c:	09 f4       	brne	.+2      	; 0x2540 <m_wii_open+0x140>
    253e:	57 c0       	rjmp	.+174    	; 0x25ee <m_wii_open+0x1ee>
    2540:	83 e3       	ldi	r24, 0x33	; 51
    2542:	0e 94 25 11 	call	0x224a	; 0x224a <send_byte>
    2546:	88 23       	and	r24, r24
    2548:	09 f4       	brne	.+2      	; 0x254c <m_wii_open+0x14c>
    254a:	53 c0       	rjmp	.+166    	; 0x25f2 <m_wii_open+0x1f2>
    254c:	83 e0       	ldi	r24, 0x03	; 3
    254e:	0e 94 25 11 	call	0x224a	; 0x224a <send_byte>
    2552:	88 23       	and	r24, r24
    2554:	09 f4       	brne	.+2      	; 0x2558 <m_wii_open+0x158>
    2556:	4f c0       	rjmp	.+158    	; 0x25f6 <m_wii_open+0x1f6>
    2558:	0e 94 67 11 	call	0x22ce	; 0x22ce <end>
    255c:	83 ec       	ldi	r24, 0xC3	; 195
    255e:	99 e0       	ldi	r25, 0x09	; 9
    2560:	01 97       	sbiw	r24, 0x01	; 1
    2562:	f1 f7       	brne	.-4      	; 0x2560 <m_wii_open+0x160>
    2564:	00 c0       	rjmp	.+0      	; 0x2566 <m_wii_open+0x166>
    2566:	00 00       	nop
    2568:	88 e5       	ldi	r24, 0x58	; 88
    256a:	0e 94 4e 11 	call	0x229c	; 0x229c <start_write>
    256e:	88 23       	and	r24, r24
    2570:	09 f4       	brne	.+2      	; 0x2574 <m_wii_open+0x174>
    2572:	43 c0       	rjmp	.+134    	; 0x25fa <m_wii_open+0x1fa>
    2574:	80 e3       	ldi	r24, 0x30	; 48
    2576:	0e 94 25 11 	call	0x224a	; 0x224a <send_byte>
    257a:	88 23       	and	r24, r24
    257c:	09 f4       	brne	.+2      	; 0x2580 <m_wii_open+0x180>
    257e:	3f c0       	rjmp	.+126    	; 0x25fe <m_wii_open+0x1fe>
    2580:	88 e0       	ldi	r24, 0x08	; 8
    2582:	0e 94 25 11 	call	0x224a	; 0x224a <send_byte>
    2586:	88 23       	and	r24, r24
    2588:	e1 f1       	breq	.+120    	; 0x2602 <m_wii_open+0x202>
    258a:	0e 94 67 11 	call	0x22ce	; 0x22ce <end>
    258e:	83 ec       	ldi	r24, 0xC3	; 195
    2590:	99 e0       	ldi	r25, 0x09	; 9
    2592:	01 97       	sbiw	r24, 0x01	; 1
    2594:	f1 f7       	brne	.-4      	; 0x2592 <m_wii_open+0x192>
    2596:	00 c0       	rjmp	.+0      	; 0x2598 <m_wii_open+0x198>
    2598:	00 00       	nop
    259a:	81 e0       	ldi	r24, 0x01	; 1
    259c:	08 95       	ret
    259e:	80 e0       	ldi	r24, 0x00	; 0
    25a0:	08 95       	ret
    25a2:	80 e0       	ldi	r24, 0x00	; 0
    25a4:	08 95       	ret
    25a6:	80 e0       	ldi	r24, 0x00	; 0
    25a8:	08 95       	ret
    25aa:	80 e0       	ldi	r24, 0x00	; 0
    25ac:	08 95       	ret
    25ae:	80 e0       	ldi	r24, 0x00	; 0
    25b0:	08 95       	ret
    25b2:	80 e0       	ldi	r24, 0x00	; 0
    25b4:	08 95       	ret
    25b6:	80 e0       	ldi	r24, 0x00	; 0
    25b8:	08 95       	ret
    25ba:	80 e0       	ldi	r24, 0x00	; 0
    25bc:	08 95       	ret
    25be:	80 e0       	ldi	r24, 0x00	; 0
    25c0:	08 95       	ret
    25c2:	80 e0       	ldi	r24, 0x00	; 0
    25c4:	08 95       	ret
    25c6:	80 e0       	ldi	r24, 0x00	; 0
    25c8:	08 95       	ret
    25ca:	80 e0       	ldi	r24, 0x00	; 0
    25cc:	08 95       	ret
    25ce:	80 e0       	ldi	r24, 0x00	; 0
    25d0:	08 95       	ret
    25d2:	80 e0       	ldi	r24, 0x00	; 0
    25d4:	08 95       	ret
    25d6:	80 e0       	ldi	r24, 0x00	; 0
    25d8:	08 95       	ret
    25da:	80 e0       	ldi	r24, 0x00	; 0
    25dc:	08 95       	ret
    25de:	80 e0       	ldi	r24, 0x00	; 0
    25e0:	08 95       	ret
    25e2:	80 e0       	ldi	r24, 0x00	; 0
    25e4:	08 95       	ret
    25e6:	80 e0       	ldi	r24, 0x00	; 0
    25e8:	08 95       	ret
    25ea:	80 e0       	ldi	r24, 0x00	; 0
    25ec:	08 95       	ret
    25ee:	80 e0       	ldi	r24, 0x00	; 0
    25f0:	08 95       	ret
    25f2:	80 e0       	ldi	r24, 0x00	; 0
    25f4:	08 95       	ret
    25f6:	80 e0       	ldi	r24, 0x00	; 0
    25f8:	08 95       	ret
    25fa:	80 e0       	ldi	r24, 0x00	; 0
    25fc:	08 95       	ret
    25fe:	80 e0       	ldi	r24, 0x00	; 0
    2600:	08 95       	ret
    2602:	80 e0       	ldi	r24, 0x00	; 0
    2604:	08 95       	ret

00002606 <__subsf3>:
    2606:	50 58       	subi	r21, 0x80	; 128

00002608 <__addsf3>:
    2608:	bb 27       	eor	r27, r27
    260a:	aa 27       	eor	r26, r26
    260c:	0e d0       	rcall	.+28     	; 0x262a <__addsf3x>
    260e:	58 c2       	rjmp	.+1200   	; 0x2ac0 <__fp_round>
    2610:	21 d2       	rcall	.+1090   	; 0x2a54 <__fp_pscA>
    2612:	30 f0       	brcs	.+12     	; 0x2620 <__addsf3+0x18>
    2614:	26 d2       	rcall	.+1100   	; 0x2a62 <__fp_pscB>
    2616:	20 f0       	brcs	.+8      	; 0x2620 <__addsf3+0x18>
    2618:	31 f4       	brne	.+12     	; 0x2626 <__addsf3+0x1e>
    261a:	9f 3f       	cpi	r25, 0xFF	; 255
    261c:	11 f4       	brne	.+4      	; 0x2622 <__addsf3+0x1a>
    261e:	1e f4       	brtc	.+6      	; 0x2626 <__addsf3+0x1e>
    2620:	f1 c1       	rjmp	.+994    	; 0x2a04 <__fp_nan>
    2622:	0e f4       	brtc	.+2      	; 0x2626 <__addsf3+0x1e>
    2624:	e0 95       	com	r30
    2626:	e7 fb       	bst	r30, 7
    2628:	e7 c1       	rjmp	.+974    	; 0x29f8 <__fp_inf>

0000262a <__addsf3x>:
    262a:	e9 2f       	mov	r30, r25
    262c:	6b d2       	rcall	.+1238   	; 0x2b04 <__fp_split3>
    262e:	80 f3       	brcs	.-32     	; 0x2610 <__addsf3+0x8>
    2630:	ba 17       	cp	r27, r26
    2632:	62 07       	cpc	r22, r18
    2634:	73 07       	cpc	r23, r19
    2636:	84 07       	cpc	r24, r20
    2638:	95 07       	cpc	r25, r21
    263a:	18 f0       	brcs	.+6      	; 0x2642 <__addsf3x+0x18>
    263c:	71 f4       	brne	.+28     	; 0x265a <__addsf3x+0x30>
    263e:	9e f5       	brtc	.+102    	; 0x26a6 <__addsf3x+0x7c>
    2640:	83 c2       	rjmp	.+1286   	; 0x2b48 <__fp_zero>
    2642:	0e f4       	brtc	.+2      	; 0x2646 <__addsf3x+0x1c>
    2644:	e0 95       	com	r30
    2646:	0b 2e       	mov	r0, r27
    2648:	ba 2f       	mov	r27, r26
    264a:	a0 2d       	mov	r26, r0
    264c:	0b 01       	movw	r0, r22
    264e:	b9 01       	movw	r22, r18
    2650:	90 01       	movw	r18, r0
    2652:	0c 01       	movw	r0, r24
    2654:	ca 01       	movw	r24, r20
    2656:	a0 01       	movw	r20, r0
    2658:	11 24       	eor	r1, r1
    265a:	ff 27       	eor	r31, r31
    265c:	59 1b       	sub	r21, r25
    265e:	99 f0       	breq	.+38     	; 0x2686 <__addsf3x+0x5c>
    2660:	59 3f       	cpi	r21, 0xF9	; 249
    2662:	50 f4       	brcc	.+20     	; 0x2678 <__addsf3x+0x4e>
    2664:	50 3e       	cpi	r21, 0xE0	; 224
    2666:	68 f1       	brcs	.+90     	; 0x26c2 <__addsf3x+0x98>
    2668:	1a 16       	cp	r1, r26
    266a:	f0 40       	sbci	r31, 0x00	; 0
    266c:	a2 2f       	mov	r26, r18
    266e:	23 2f       	mov	r18, r19
    2670:	34 2f       	mov	r19, r20
    2672:	44 27       	eor	r20, r20
    2674:	58 5f       	subi	r21, 0xF8	; 248
    2676:	f3 cf       	rjmp	.-26     	; 0x265e <__addsf3x+0x34>
    2678:	46 95       	lsr	r20
    267a:	37 95       	ror	r19
    267c:	27 95       	ror	r18
    267e:	a7 95       	ror	r26
    2680:	f0 40       	sbci	r31, 0x00	; 0
    2682:	53 95       	inc	r21
    2684:	c9 f7       	brne	.-14     	; 0x2678 <__addsf3x+0x4e>
    2686:	7e f4       	brtc	.+30     	; 0x26a6 <__addsf3x+0x7c>
    2688:	1f 16       	cp	r1, r31
    268a:	ba 0b       	sbc	r27, r26
    268c:	62 0b       	sbc	r22, r18
    268e:	73 0b       	sbc	r23, r19
    2690:	84 0b       	sbc	r24, r20
    2692:	ba f0       	brmi	.+46     	; 0x26c2 <__addsf3x+0x98>
    2694:	91 50       	subi	r25, 0x01	; 1
    2696:	a1 f0       	breq	.+40     	; 0x26c0 <__addsf3x+0x96>
    2698:	ff 0f       	add	r31, r31
    269a:	bb 1f       	adc	r27, r27
    269c:	66 1f       	adc	r22, r22
    269e:	77 1f       	adc	r23, r23
    26a0:	88 1f       	adc	r24, r24
    26a2:	c2 f7       	brpl	.-16     	; 0x2694 <__addsf3x+0x6a>
    26a4:	0e c0       	rjmp	.+28     	; 0x26c2 <__addsf3x+0x98>
    26a6:	ba 0f       	add	r27, r26
    26a8:	62 1f       	adc	r22, r18
    26aa:	73 1f       	adc	r23, r19
    26ac:	84 1f       	adc	r24, r20
    26ae:	48 f4       	brcc	.+18     	; 0x26c2 <__addsf3x+0x98>
    26b0:	87 95       	ror	r24
    26b2:	77 95       	ror	r23
    26b4:	67 95       	ror	r22
    26b6:	b7 95       	ror	r27
    26b8:	f7 95       	ror	r31
    26ba:	9e 3f       	cpi	r25, 0xFE	; 254
    26bc:	08 f0       	brcs	.+2      	; 0x26c0 <__addsf3x+0x96>
    26be:	b3 cf       	rjmp	.-154    	; 0x2626 <__addsf3+0x1e>
    26c0:	93 95       	inc	r25
    26c2:	88 0f       	add	r24, r24
    26c4:	08 f0       	brcs	.+2      	; 0x26c8 <__addsf3x+0x9e>
    26c6:	99 27       	eor	r25, r25
    26c8:	ee 0f       	add	r30, r30
    26ca:	97 95       	ror	r25
    26cc:	87 95       	ror	r24
    26ce:	08 95       	ret
    26d0:	c1 d1       	rcall	.+898    	; 0x2a54 <__fp_pscA>
    26d2:	58 f0       	brcs	.+22     	; 0x26ea <__addsf3x+0xc0>
    26d4:	80 e8       	ldi	r24, 0x80	; 128
    26d6:	91 e0       	ldi	r25, 0x01	; 1
    26d8:	09 f4       	brne	.+2      	; 0x26dc <__addsf3x+0xb2>
    26da:	9e ef       	ldi	r25, 0xFE	; 254
    26dc:	c2 d1       	rcall	.+900    	; 0x2a62 <__fp_pscB>
    26de:	28 f0       	brcs	.+10     	; 0x26ea <__addsf3x+0xc0>
    26e0:	40 e8       	ldi	r20, 0x80	; 128
    26e2:	51 e0       	ldi	r21, 0x01	; 1
    26e4:	59 f4       	brne	.+22     	; 0x26fc <atan2+0xe>
    26e6:	5e ef       	ldi	r21, 0xFE	; 254
    26e8:	09 c0       	rjmp	.+18     	; 0x26fc <atan2+0xe>
    26ea:	8c c1       	rjmp	.+792    	; 0x2a04 <__fp_nan>
    26ec:	2d c2       	rjmp	.+1114   	; 0x2b48 <__fp_zero>

000026ee <atan2>:
    26ee:	e9 2f       	mov	r30, r25
    26f0:	e0 78       	andi	r30, 0x80	; 128
    26f2:	08 d2       	rcall	.+1040   	; 0x2b04 <__fp_split3>
    26f4:	68 f3       	brcs	.-38     	; 0x26d0 <__addsf3x+0xa6>
    26f6:	09 2e       	mov	r0, r25
    26f8:	05 2a       	or	r0, r21
    26fa:	c1 f3       	breq	.-16     	; 0x26ec <__addsf3x+0xc2>
    26fc:	26 17       	cp	r18, r22
    26fe:	37 07       	cpc	r19, r23
    2700:	48 07       	cpc	r20, r24
    2702:	59 07       	cpc	r21, r25
    2704:	38 f0       	brcs	.+14     	; 0x2714 <atan2+0x26>
    2706:	0e 2e       	mov	r0, r30
    2708:	07 f8       	bld	r0, 7
    270a:	e0 25       	eor	r30, r0
    270c:	69 f0       	breq	.+26     	; 0x2728 <atan2+0x3a>
    270e:	e0 25       	eor	r30, r0
    2710:	e0 64       	ori	r30, 0x40	; 64
    2712:	0a c0       	rjmp	.+20     	; 0x2728 <atan2+0x3a>
    2714:	ef 63       	ori	r30, 0x3F	; 63
    2716:	07 f8       	bld	r0, 7
    2718:	00 94       	com	r0
    271a:	07 fa       	bst	r0, 7
    271c:	db 01       	movw	r26, r22
    271e:	b9 01       	movw	r22, r18
    2720:	9d 01       	movw	r18, r26
    2722:	dc 01       	movw	r26, r24
    2724:	ca 01       	movw	r24, r20
    2726:	ad 01       	movw	r20, r26
    2728:	ef 93       	push	r30
    272a:	4a d0       	rcall	.+148    	; 0x27c0 <__divsf3_pse>
    272c:	c9 d1       	rcall	.+914    	; 0x2ac0 <__fp_round>
    272e:	0a d0       	rcall	.+20     	; 0x2744 <atan>
    2730:	5f 91       	pop	r21
    2732:	55 23       	and	r21, r21
    2734:	31 f0       	breq	.+12     	; 0x2742 <atan2+0x54>
    2736:	2b ed       	ldi	r18, 0xDB	; 219
    2738:	3f e0       	ldi	r19, 0x0F	; 15
    273a:	49 e4       	ldi	r20, 0x49	; 73
    273c:	50 fd       	sbrc	r21, 0
    273e:	49 ec       	ldi	r20, 0xC9	; 201
    2740:	63 cf       	rjmp	.-314    	; 0x2608 <__addsf3>
    2742:	08 95       	ret

00002744 <atan>:
    2744:	df 93       	push	r29
    2746:	dd 27       	eor	r29, r29
    2748:	b9 2f       	mov	r27, r25
    274a:	bf 77       	andi	r27, 0x7F	; 127
    274c:	40 e8       	ldi	r20, 0x80	; 128
    274e:	5f e3       	ldi	r21, 0x3F	; 63
    2750:	16 16       	cp	r1, r22
    2752:	17 06       	cpc	r1, r23
    2754:	48 07       	cpc	r20, r24
    2756:	5b 07       	cpc	r21, r27
    2758:	10 f4       	brcc	.+4      	; 0x275e <atan+0x1a>
    275a:	d9 2f       	mov	r29, r25
    275c:	00 d2       	rcall	.+1024   	; 0x2b5e <inverse>
    275e:	9f 93       	push	r25
    2760:	8f 93       	push	r24
    2762:	7f 93       	push	r23
    2764:	6f 93       	push	r22
    2766:	16 d3       	rcall	.+1580   	; 0x2d94 <square>
    2768:	ec ea       	ldi	r30, 0xAC	; 172
    276a:	f0 e0       	ldi	r31, 0x00	; 0
    276c:	4e d1       	rcall	.+668    	; 0x2a0a <__fp_powser>
    276e:	a8 d1       	rcall	.+848    	; 0x2ac0 <__fp_round>
    2770:	2f 91       	pop	r18
    2772:	3f 91       	pop	r19
    2774:	4f 91       	pop	r20
    2776:	5f 91       	pop	r21
    2778:	6e d2       	rcall	.+1244   	; 0x2c56 <__mulsf3x>
    277a:	dd 23       	and	r29, r29
    277c:	49 f0       	breq	.+18     	; 0x2790 <atan+0x4c>
    277e:	90 58       	subi	r25, 0x80	; 128
    2780:	a2 ea       	ldi	r26, 0xA2	; 162
    2782:	2a ed       	ldi	r18, 0xDA	; 218
    2784:	3f e0       	ldi	r19, 0x0F	; 15
    2786:	49 ec       	ldi	r20, 0xC9	; 201
    2788:	5f e3       	ldi	r21, 0x3F	; 63
    278a:	d0 78       	andi	r29, 0x80	; 128
    278c:	5d 27       	eor	r21, r29
    278e:	4d df       	rcall	.-358    	; 0x262a <__addsf3x>
    2790:	df 91       	pop	r29
    2792:	96 c1       	rjmp	.+812    	; 0x2ac0 <__fp_round>

00002794 <__cmpsf2>:
    2794:	0d d1       	rcall	.+538    	; 0x29b0 <__fp_cmp>
    2796:	08 f4       	brcc	.+2      	; 0x279a <__cmpsf2+0x6>
    2798:	81 e0       	ldi	r24, 0x01	; 1
    279a:	08 95       	ret

0000279c <cos>:
    279c:	6a d1       	rcall	.+724    	; 0x2a72 <__fp_rempio2>
    279e:	e3 95       	inc	r30
    27a0:	a0 c1       	rjmp	.+832    	; 0x2ae2 <__fp_sinus>

000027a2 <__divsf3>:
    27a2:	0c d0       	rcall	.+24     	; 0x27bc <__divsf3x>
    27a4:	8d c1       	rjmp	.+794    	; 0x2ac0 <__fp_round>
    27a6:	5d d1       	rcall	.+698    	; 0x2a62 <__fp_pscB>
    27a8:	40 f0       	brcs	.+16     	; 0x27ba <__divsf3+0x18>
    27aa:	54 d1       	rcall	.+680    	; 0x2a54 <__fp_pscA>
    27ac:	30 f0       	brcs	.+12     	; 0x27ba <__divsf3+0x18>
    27ae:	21 f4       	brne	.+8      	; 0x27b8 <__divsf3+0x16>
    27b0:	5f 3f       	cpi	r21, 0xFF	; 255
    27b2:	19 f0       	breq	.+6      	; 0x27ba <__divsf3+0x18>
    27b4:	21 c1       	rjmp	.+578    	; 0x29f8 <__fp_inf>
    27b6:	51 11       	cpse	r21, r1
    27b8:	c8 c1       	rjmp	.+912    	; 0x2b4a <__fp_szero>
    27ba:	24 c1       	rjmp	.+584    	; 0x2a04 <__fp_nan>

000027bc <__divsf3x>:
    27bc:	a3 d1       	rcall	.+838    	; 0x2b04 <__fp_split3>
    27be:	98 f3       	brcs	.-26     	; 0x27a6 <__divsf3+0x4>

000027c0 <__divsf3_pse>:
    27c0:	99 23       	and	r25, r25
    27c2:	c9 f3       	breq	.-14     	; 0x27b6 <__divsf3+0x14>
    27c4:	55 23       	and	r21, r21
    27c6:	b1 f3       	breq	.-20     	; 0x27b4 <__divsf3+0x12>
    27c8:	95 1b       	sub	r25, r21
    27ca:	55 0b       	sbc	r21, r21
    27cc:	bb 27       	eor	r27, r27
    27ce:	aa 27       	eor	r26, r26
    27d0:	62 17       	cp	r22, r18
    27d2:	73 07       	cpc	r23, r19
    27d4:	84 07       	cpc	r24, r20
    27d6:	38 f0       	brcs	.+14     	; 0x27e6 <__divsf3_pse+0x26>
    27d8:	9f 5f       	subi	r25, 0xFF	; 255
    27da:	5f 4f       	sbci	r21, 0xFF	; 255
    27dc:	22 0f       	add	r18, r18
    27de:	33 1f       	adc	r19, r19
    27e0:	44 1f       	adc	r20, r20
    27e2:	aa 1f       	adc	r26, r26
    27e4:	a9 f3       	breq	.-22     	; 0x27d0 <__divsf3_pse+0x10>
    27e6:	33 d0       	rcall	.+102    	; 0x284e <__divsf3_pse+0x8e>
    27e8:	0e 2e       	mov	r0, r30
    27ea:	3a f0       	brmi	.+14     	; 0x27fa <__divsf3_pse+0x3a>
    27ec:	e0 e8       	ldi	r30, 0x80	; 128
    27ee:	30 d0       	rcall	.+96     	; 0x2850 <__divsf3_pse+0x90>
    27f0:	91 50       	subi	r25, 0x01	; 1
    27f2:	50 40       	sbci	r21, 0x00	; 0
    27f4:	e6 95       	lsr	r30
    27f6:	00 1c       	adc	r0, r0
    27f8:	ca f7       	brpl	.-14     	; 0x27ec <__divsf3_pse+0x2c>
    27fa:	29 d0       	rcall	.+82     	; 0x284e <__divsf3_pse+0x8e>
    27fc:	fe 2f       	mov	r31, r30
    27fe:	27 d0       	rcall	.+78     	; 0x284e <__divsf3_pse+0x8e>
    2800:	66 0f       	add	r22, r22
    2802:	77 1f       	adc	r23, r23
    2804:	88 1f       	adc	r24, r24
    2806:	bb 1f       	adc	r27, r27
    2808:	26 17       	cp	r18, r22
    280a:	37 07       	cpc	r19, r23
    280c:	48 07       	cpc	r20, r24
    280e:	ab 07       	cpc	r26, r27
    2810:	b0 e8       	ldi	r27, 0x80	; 128
    2812:	09 f0       	breq	.+2      	; 0x2816 <__divsf3_pse+0x56>
    2814:	bb 0b       	sbc	r27, r27
    2816:	80 2d       	mov	r24, r0
    2818:	bf 01       	movw	r22, r30
    281a:	ff 27       	eor	r31, r31
    281c:	93 58       	subi	r25, 0x83	; 131
    281e:	5f 4f       	sbci	r21, 0xFF	; 255
    2820:	2a f0       	brmi	.+10     	; 0x282c <__divsf3_pse+0x6c>
    2822:	9e 3f       	cpi	r25, 0xFE	; 254
    2824:	51 05       	cpc	r21, r1
    2826:	68 f0       	brcs	.+26     	; 0x2842 <__divsf3_pse+0x82>
    2828:	e7 c0       	rjmp	.+462    	; 0x29f8 <__fp_inf>
    282a:	8f c1       	rjmp	.+798    	; 0x2b4a <__fp_szero>
    282c:	5f 3f       	cpi	r21, 0xFF	; 255
    282e:	ec f3       	brlt	.-6      	; 0x282a <__divsf3_pse+0x6a>
    2830:	98 3e       	cpi	r25, 0xE8	; 232
    2832:	dc f3       	brlt	.-10     	; 0x282a <__divsf3_pse+0x6a>
    2834:	86 95       	lsr	r24
    2836:	77 95       	ror	r23
    2838:	67 95       	ror	r22
    283a:	b7 95       	ror	r27
    283c:	f7 95       	ror	r31
    283e:	9f 5f       	subi	r25, 0xFF	; 255
    2840:	c9 f7       	brne	.-14     	; 0x2834 <__divsf3_pse+0x74>
    2842:	88 0f       	add	r24, r24
    2844:	91 1d       	adc	r25, r1
    2846:	96 95       	lsr	r25
    2848:	87 95       	ror	r24
    284a:	97 f9       	bld	r25, 7
    284c:	08 95       	ret
    284e:	e1 e0       	ldi	r30, 0x01	; 1
    2850:	66 0f       	add	r22, r22
    2852:	77 1f       	adc	r23, r23
    2854:	88 1f       	adc	r24, r24
    2856:	bb 1f       	adc	r27, r27
    2858:	62 17       	cp	r22, r18
    285a:	73 07       	cpc	r23, r19
    285c:	84 07       	cpc	r24, r20
    285e:	ba 07       	cpc	r27, r26
    2860:	20 f0       	brcs	.+8      	; 0x286a <__divsf3_pse+0xaa>
    2862:	62 1b       	sub	r22, r18
    2864:	73 0b       	sbc	r23, r19
    2866:	84 0b       	sbc	r24, r20
    2868:	ba 0b       	sbc	r27, r26
    286a:	ee 1f       	adc	r30, r30
    286c:	88 f7       	brcc	.-30     	; 0x2850 <__divsf3_pse+0x90>
    286e:	e0 95       	com	r30
    2870:	08 95       	ret
    2872:	19 f4       	brne	.+6      	; 0x287a <__divsf3_pse+0xba>
    2874:	0e f0       	brts	.+2      	; 0x2878 <__divsf3_pse+0xb8>
    2876:	c0 c0       	rjmp	.+384    	; 0x29f8 <__fp_inf>
    2878:	67 c1       	rjmp	.+718    	; 0x2b48 <__fp_zero>
    287a:	c4 c0       	rjmp	.+392    	; 0x2a04 <__fp_nan>

0000287c <exp>:
    287c:	4b d1       	rcall	.+662    	; 0x2b14 <__fp_splitA>
    287e:	c8 f3       	brcs	.-14     	; 0x2872 <__divsf3_pse+0xb2>
    2880:	96 38       	cpi	r25, 0x86	; 134
    2882:	c0 f7       	brcc	.-16     	; 0x2874 <__divsf3_pse+0xb4>
    2884:	07 f8       	bld	r0, 7
    2886:	0f 92       	push	r0
    2888:	e8 94       	clt
    288a:	2b e3       	ldi	r18, 0x3B	; 59
    288c:	3a ea       	ldi	r19, 0xAA	; 170
    288e:	48 eb       	ldi	r20, 0xB8	; 184
    2890:	5f e7       	ldi	r21, 0x7F	; 127
    2892:	e3 d1       	rcall	.+966    	; 0x2c5a <__mulsf3_pse>
    2894:	0f 92       	push	r0
    2896:	0f 92       	push	r0
    2898:	0f 92       	push	r0
    289a:	4d b7       	in	r20, 0x3d	; 61
    289c:	5e b7       	in	r21, 0x3e	; 62
    289e:	0f 92       	push	r0
    28a0:	9b d1       	rcall	.+822    	; 0x2bd8 <modf>
    28a2:	e9 ed       	ldi	r30, 0xD9	; 217
    28a4:	f0 e0       	ldi	r31, 0x00	; 0
    28a6:	b1 d0       	rcall	.+354    	; 0x2a0a <__fp_powser>
    28a8:	4f 91       	pop	r20
    28aa:	5f 91       	pop	r21
    28ac:	ef 91       	pop	r30
    28ae:	ff 91       	pop	r31
    28b0:	e5 95       	asr	r30
    28b2:	ee 1f       	adc	r30, r30
    28b4:	ff 1f       	adc	r31, r31
    28b6:	49 f0       	breq	.+18     	; 0x28ca <exp+0x4e>
    28b8:	fe 57       	subi	r31, 0x7E	; 126
    28ba:	e0 68       	ori	r30, 0x80	; 128
    28bc:	44 27       	eor	r20, r20
    28be:	ee 0f       	add	r30, r30
    28c0:	44 1f       	adc	r20, r20
    28c2:	fa 95       	dec	r31
    28c4:	e1 f7       	brne	.-8      	; 0x28be <exp+0x42>
    28c6:	41 95       	neg	r20
    28c8:	55 0b       	sbc	r21, r21
    28ca:	52 d1       	rcall	.+676    	; 0x2b70 <ldexp>
    28cc:	0f 90       	pop	r0
    28ce:	07 fe       	sbrs	r0, 7
    28d0:	46 c1       	rjmp	.+652    	; 0x2b5e <inverse>
    28d2:	08 95       	ret

000028d4 <__fixsfsi>:
    28d4:	04 d0       	rcall	.+8      	; 0x28de <__fixunssfsi>
    28d6:	68 94       	set
    28d8:	b1 11       	cpse	r27, r1
    28da:	37 c1       	rjmp	.+622    	; 0x2b4a <__fp_szero>
    28dc:	08 95       	ret

000028de <__fixunssfsi>:
    28de:	1a d1       	rcall	.+564    	; 0x2b14 <__fp_splitA>
    28e0:	88 f0       	brcs	.+34     	; 0x2904 <__fixunssfsi+0x26>
    28e2:	9f 57       	subi	r25, 0x7F	; 127
    28e4:	90 f0       	brcs	.+36     	; 0x290a <__fixunssfsi+0x2c>
    28e6:	b9 2f       	mov	r27, r25
    28e8:	99 27       	eor	r25, r25
    28ea:	b7 51       	subi	r27, 0x17	; 23
    28ec:	a0 f0       	brcs	.+40     	; 0x2916 <__fixunssfsi+0x38>
    28ee:	d1 f0       	breq	.+52     	; 0x2924 <__fixunssfsi+0x46>
    28f0:	66 0f       	add	r22, r22
    28f2:	77 1f       	adc	r23, r23
    28f4:	88 1f       	adc	r24, r24
    28f6:	99 1f       	adc	r25, r25
    28f8:	1a f0       	brmi	.+6      	; 0x2900 <__fixunssfsi+0x22>
    28fa:	ba 95       	dec	r27
    28fc:	c9 f7       	brne	.-14     	; 0x28f0 <__fixunssfsi+0x12>
    28fe:	12 c0       	rjmp	.+36     	; 0x2924 <__fixunssfsi+0x46>
    2900:	b1 30       	cpi	r27, 0x01	; 1
    2902:	81 f0       	breq	.+32     	; 0x2924 <__fixunssfsi+0x46>
    2904:	21 d1       	rcall	.+578    	; 0x2b48 <__fp_zero>
    2906:	b1 e0       	ldi	r27, 0x01	; 1
    2908:	08 95       	ret
    290a:	1e c1       	rjmp	.+572    	; 0x2b48 <__fp_zero>
    290c:	67 2f       	mov	r22, r23
    290e:	78 2f       	mov	r23, r24
    2910:	88 27       	eor	r24, r24
    2912:	b8 5f       	subi	r27, 0xF8	; 248
    2914:	39 f0       	breq	.+14     	; 0x2924 <__fixunssfsi+0x46>
    2916:	b9 3f       	cpi	r27, 0xF9	; 249
    2918:	cc f3       	brlt	.-14     	; 0x290c <__fixunssfsi+0x2e>
    291a:	86 95       	lsr	r24
    291c:	77 95       	ror	r23
    291e:	67 95       	ror	r22
    2920:	b3 95       	inc	r27
    2922:	d9 f7       	brne	.-10     	; 0x291a <__fixunssfsi+0x3c>
    2924:	3e f4       	brtc	.+14     	; 0x2934 <__fixunssfsi+0x56>
    2926:	90 95       	com	r25
    2928:	80 95       	com	r24
    292a:	70 95       	com	r23
    292c:	61 95       	neg	r22
    292e:	7f 4f       	sbci	r23, 0xFF	; 255
    2930:	8f 4f       	sbci	r24, 0xFF	; 255
    2932:	9f 4f       	sbci	r25, 0xFF	; 255
    2934:	08 95       	ret

00002936 <__floatunsisf>:
    2936:	e8 94       	clt
    2938:	09 c0       	rjmp	.+18     	; 0x294c <__floatsisf+0x12>

0000293a <__floatsisf>:
    293a:	97 fb       	bst	r25, 7
    293c:	3e f4       	brtc	.+14     	; 0x294c <__floatsisf+0x12>
    293e:	90 95       	com	r25
    2940:	80 95       	com	r24
    2942:	70 95       	com	r23
    2944:	61 95       	neg	r22
    2946:	7f 4f       	sbci	r23, 0xFF	; 255
    2948:	8f 4f       	sbci	r24, 0xFF	; 255
    294a:	9f 4f       	sbci	r25, 0xFF	; 255
    294c:	99 23       	and	r25, r25
    294e:	a9 f0       	breq	.+42     	; 0x297a <__floatsisf+0x40>
    2950:	f9 2f       	mov	r31, r25
    2952:	96 e9       	ldi	r25, 0x96	; 150
    2954:	bb 27       	eor	r27, r27
    2956:	93 95       	inc	r25
    2958:	f6 95       	lsr	r31
    295a:	87 95       	ror	r24
    295c:	77 95       	ror	r23
    295e:	67 95       	ror	r22
    2960:	b7 95       	ror	r27
    2962:	f1 11       	cpse	r31, r1
    2964:	f8 cf       	rjmp	.-16     	; 0x2956 <__floatsisf+0x1c>
    2966:	fa f4       	brpl	.+62     	; 0x29a6 <__floatsisf+0x6c>
    2968:	bb 0f       	add	r27, r27
    296a:	11 f4       	brne	.+4      	; 0x2970 <__floatsisf+0x36>
    296c:	60 ff       	sbrs	r22, 0
    296e:	1b c0       	rjmp	.+54     	; 0x29a6 <__floatsisf+0x6c>
    2970:	6f 5f       	subi	r22, 0xFF	; 255
    2972:	7f 4f       	sbci	r23, 0xFF	; 255
    2974:	8f 4f       	sbci	r24, 0xFF	; 255
    2976:	9f 4f       	sbci	r25, 0xFF	; 255
    2978:	16 c0       	rjmp	.+44     	; 0x29a6 <__floatsisf+0x6c>
    297a:	88 23       	and	r24, r24
    297c:	11 f0       	breq	.+4      	; 0x2982 <__floatsisf+0x48>
    297e:	96 e9       	ldi	r25, 0x96	; 150
    2980:	11 c0       	rjmp	.+34     	; 0x29a4 <__floatsisf+0x6a>
    2982:	77 23       	and	r23, r23
    2984:	21 f0       	breq	.+8      	; 0x298e <__floatsisf+0x54>
    2986:	9e e8       	ldi	r25, 0x8E	; 142
    2988:	87 2f       	mov	r24, r23
    298a:	76 2f       	mov	r23, r22
    298c:	05 c0       	rjmp	.+10     	; 0x2998 <__floatsisf+0x5e>
    298e:	66 23       	and	r22, r22
    2990:	71 f0       	breq	.+28     	; 0x29ae <__floatsisf+0x74>
    2992:	96 e8       	ldi	r25, 0x86	; 134
    2994:	86 2f       	mov	r24, r22
    2996:	70 e0       	ldi	r23, 0x00	; 0
    2998:	60 e0       	ldi	r22, 0x00	; 0
    299a:	2a f0       	brmi	.+10     	; 0x29a6 <__floatsisf+0x6c>
    299c:	9a 95       	dec	r25
    299e:	66 0f       	add	r22, r22
    29a0:	77 1f       	adc	r23, r23
    29a2:	88 1f       	adc	r24, r24
    29a4:	da f7       	brpl	.-10     	; 0x299c <__floatsisf+0x62>
    29a6:	88 0f       	add	r24, r24
    29a8:	96 95       	lsr	r25
    29aa:	87 95       	ror	r24
    29ac:	97 f9       	bld	r25, 7
    29ae:	08 95       	ret

000029b0 <__fp_cmp>:
    29b0:	99 0f       	add	r25, r25
    29b2:	00 08       	sbc	r0, r0
    29b4:	55 0f       	add	r21, r21
    29b6:	aa 0b       	sbc	r26, r26
    29b8:	e0 e8       	ldi	r30, 0x80	; 128
    29ba:	fe ef       	ldi	r31, 0xFE	; 254
    29bc:	16 16       	cp	r1, r22
    29be:	17 06       	cpc	r1, r23
    29c0:	e8 07       	cpc	r30, r24
    29c2:	f9 07       	cpc	r31, r25
    29c4:	c0 f0       	brcs	.+48     	; 0x29f6 <__fp_cmp+0x46>
    29c6:	12 16       	cp	r1, r18
    29c8:	13 06       	cpc	r1, r19
    29ca:	e4 07       	cpc	r30, r20
    29cc:	f5 07       	cpc	r31, r21
    29ce:	98 f0       	brcs	.+38     	; 0x29f6 <__fp_cmp+0x46>
    29d0:	62 1b       	sub	r22, r18
    29d2:	73 0b       	sbc	r23, r19
    29d4:	84 0b       	sbc	r24, r20
    29d6:	95 0b       	sbc	r25, r21
    29d8:	39 f4       	brne	.+14     	; 0x29e8 <__fp_cmp+0x38>
    29da:	0a 26       	eor	r0, r26
    29dc:	61 f0       	breq	.+24     	; 0x29f6 <__fp_cmp+0x46>
    29de:	23 2b       	or	r18, r19
    29e0:	24 2b       	or	r18, r20
    29e2:	25 2b       	or	r18, r21
    29e4:	21 f4       	brne	.+8      	; 0x29ee <__fp_cmp+0x3e>
    29e6:	08 95       	ret
    29e8:	0a 26       	eor	r0, r26
    29ea:	09 f4       	brne	.+2      	; 0x29ee <__fp_cmp+0x3e>
    29ec:	a1 40       	sbci	r26, 0x01	; 1
    29ee:	a6 95       	lsr	r26
    29f0:	8f ef       	ldi	r24, 0xFF	; 255
    29f2:	81 1d       	adc	r24, r1
    29f4:	81 1d       	adc	r24, r1
    29f6:	08 95       	ret

000029f8 <__fp_inf>:
    29f8:	97 f9       	bld	r25, 7
    29fa:	9f 67       	ori	r25, 0x7F	; 127
    29fc:	80 e8       	ldi	r24, 0x80	; 128
    29fe:	70 e0       	ldi	r23, 0x00	; 0
    2a00:	60 e0       	ldi	r22, 0x00	; 0
    2a02:	08 95       	ret

00002a04 <__fp_nan>:
    2a04:	9f ef       	ldi	r25, 0xFF	; 255
    2a06:	80 ec       	ldi	r24, 0xC0	; 192
    2a08:	08 95       	ret

00002a0a <__fp_powser>:
    2a0a:	df 93       	push	r29
    2a0c:	cf 93       	push	r28
    2a0e:	1f 93       	push	r17
    2a10:	0f 93       	push	r16
    2a12:	ff 92       	push	r15
    2a14:	ef 92       	push	r14
    2a16:	df 92       	push	r13
    2a18:	7b 01       	movw	r14, r22
    2a1a:	8c 01       	movw	r16, r24
    2a1c:	68 94       	set
    2a1e:	05 c0       	rjmp	.+10     	; 0x2a2a <__fp_powser+0x20>
    2a20:	da 2e       	mov	r13, r26
    2a22:	ef 01       	movw	r28, r30
    2a24:	18 d1       	rcall	.+560    	; 0x2c56 <__mulsf3x>
    2a26:	fe 01       	movw	r30, r28
    2a28:	e8 94       	clt
    2a2a:	a5 91       	lpm	r26, Z+
    2a2c:	25 91       	lpm	r18, Z+
    2a2e:	35 91       	lpm	r19, Z+
    2a30:	45 91       	lpm	r20, Z+
    2a32:	55 91       	lpm	r21, Z+
    2a34:	ae f3       	brts	.-22     	; 0x2a20 <__fp_powser+0x16>
    2a36:	ef 01       	movw	r28, r30
    2a38:	f8 dd       	rcall	.-1040   	; 0x262a <__addsf3x>
    2a3a:	fe 01       	movw	r30, r28
    2a3c:	97 01       	movw	r18, r14
    2a3e:	a8 01       	movw	r20, r16
    2a40:	da 94       	dec	r13
    2a42:	79 f7       	brne	.-34     	; 0x2a22 <__fp_powser+0x18>
    2a44:	df 90       	pop	r13
    2a46:	ef 90       	pop	r14
    2a48:	ff 90       	pop	r15
    2a4a:	0f 91       	pop	r16
    2a4c:	1f 91       	pop	r17
    2a4e:	cf 91       	pop	r28
    2a50:	df 91       	pop	r29
    2a52:	08 95       	ret

00002a54 <__fp_pscA>:
    2a54:	00 24       	eor	r0, r0
    2a56:	0a 94       	dec	r0
    2a58:	16 16       	cp	r1, r22
    2a5a:	17 06       	cpc	r1, r23
    2a5c:	18 06       	cpc	r1, r24
    2a5e:	09 06       	cpc	r0, r25
    2a60:	08 95       	ret

00002a62 <__fp_pscB>:
    2a62:	00 24       	eor	r0, r0
    2a64:	0a 94       	dec	r0
    2a66:	12 16       	cp	r1, r18
    2a68:	13 06       	cpc	r1, r19
    2a6a:	14 06       	cpc	r1, r20
    2a6c:	05 06       	cpc	r0, r21
    2a6e:	08 95       	ret
    2a70:	c9 cf       	rjmp	.-110    	; 0x2a04 <__fp_nan>

00002a72 <__fp_rempio2>:
    2a72:	50 d0       	rcall	.+160    	; 0x2b14 <__fp_splitA>
    2a74:	e8 f3       	brcs	.-6      	; 0x2a70 <__fp_pscB+0xe>
    2a76:	e8 94       	clt
    2a78:	e0 e0       	ldi	r30, 0x00	; 0
    2a7a:	bb 27       	eor	r27, r27
    2a7c:	9f 57       	subi	r25, 0x7F	; 127
    2a7e:	f0 f0       	brcs	.+60     	; 0x2abc <__fp_rempio2+0x4a>
    2a80:	2a ed       	ldi	r18, 0xDA	; 218
    2a82:	3f e0       	ldi	r19, 0x0F	; 15
    2a84:	49 ec       	ldi	r20, 0xC9	; 201
    2a86:	06 c0       	rjmp	.+12     	; 0x2a94 <__fp_rempio2+0x22>
    2a88:	ee 0f       	add	r30, r30
    2a8a:	bb 0f       	add	r27, r27
    2a8c:	66 1f       	adc	r22, r22
    2a8e:	77 1f       	adc	r23, r23
    2a90:	88 1f       	adc	r24, r24
    2a92:	28 f0       	brcs	.+10     	; 0x2a9e <__fp_rempio2+0x2c>
    2a94:	b2 3a       	cpi	r27, 0xA2	; 162
    2a96:	62 07       	cpc	r22, r18
    2a98:	73 07       	cpc	r23, r19
    2a9a:	84 07       	cpc	r24, r20
    2a9c:	28 f0       	brcs	.+10     	; 0x2aa8 <__fp_rempio2+0x36>
    2a9e:	b2 5a       	subi	r27, 0xA2	; 162
    2aa0:	62 0b       	sbc	r22, r18
    2aa2:	73 0b       	sbc	r23, r19
    2aa4:	84 0b       	sbc	r24, r20
    2aa6:	e3 95       	inc	r30
    2aa8:	9a 95       	dec	r25
    2aaa:	72 f7       	brpl	.-36     	; 0x2a88 <__fp_rempio2+0x16>
    2aac:	80 38       	cpi	r24, 0x80	; 128
    2aae:	30 f4       	brcc	.+12     	; 0x2abc <__fp_rempio2+0x4a>
    2ab0:	9a 95       	dec	r25
    2ab2:	bb 0f       	add	r27, r27
    2ab4:	66 1f       	adc	r22, r22
    2ab6:	77 1f       	adc	r23, r23
    2ab8:	88 1f       	adc	r24, r24
    2aba:	d2 f7       	brpl	.-12     	; 0x2ab0 <__fp_rempio2+0x3e>
    2abc:	90 48       	sbci	r25, 0x80	; 128
    2abe:	6f c1       	rjmp	.+734    	; 0x2d9e <__fp_mpack_finite>

00002ac0 <__fp_round>:
    2ac0:	09 2e       	mov	r0, r25
    2ac2:	03 94       	inc	r0
    2ac4:	00 0c       	add	r0, r0
    2ac6:	11 f4       	brne	.+4      	; 0x2acc <__fp_round+0xc>
    2ac8:	88 23       	and	r24, r24
    2aca:	52 f0       	brmi	.+20     	; 0x2ae0 <__fp_round+0x20>
    2acc:	bb 0f       	add	r27, r27
    2ace:	40 f4       	brcc	.+16     	; 0x2ae0 <__fp_round+0x20>
    2ad0:	bf 2b       	or	r27, r31
    2ad2:	11 f4       	brne	.+4      	; 0x2ad8 <__fp_round+0x18>
    2ad4:	60 ff       	sbrs	r22, 0
    2ad6:	04 c0       	rjmp	.+8      	; 0x2ae0 <__fp_round+0x20>
    2ad8:	6f 5f       	subi	r22, 0xFF	; 255
    2ada:	7f 4f       	sbci	r23, 0xFF	; 255
    2adc:	8f 4f       	sbci	r24, 0xFF	; 255
    2ade:	9f 4f       	sbci	r25, 0xFF	; 255
    2ae0:	08 95       	ret

00002ae2 <__fp_sinus>:
    2ae2:	ef 93       	push	r30
    2ae4:	e0 ff       	sbrs	r30, 0
    2ae6:	06 c0       	rjmp	.+12     	; 0x2af4 <__fp_sinus+0x12>
    2ae8:	a2 ea       	ldi	r26, 0xA2	; 162
    2aea:	2a ed       	ldi	r18, 0xDA	; 218
    2aec:	3f e0       	ldi	r19, 0x0F	; 15
    2aee:	49 ec       	ldi	r20, 0xC9	; 201
    2af0:	5f eb       	ldi	r21, 0xBF	; 191
    2af2:	9b dd       	rcall	.-1226   	; 0x262a <__addsf3x>
    2af4:	e5 df       	rcall	.-54     	; 0x2ac0 <__fp_round>
    2af6:	0f 90       	pop	r0
    2af8:	03 94       	inc	r0
    2afa:	01 fc       	sbrc	r0, 1
    2afc:	90 58       	subi	r25, 0x80	; 128
    2afe:	e1 e0       	ldi	r30, 0x01	; 1
    2b00:	f1 e0       	ldi	r31, 0x01	; 1
    2b02:	60 c1       	rjmp	.+704    	; 0x2dc4 <__fp_powsodd>

00002b04 <__fp_split3>:
    2b04:	57 fd       	sbrc	r21, 7
    2b06:	90 58       	subi	r25, 0x80	; 128
    2b08:	44 0f       	add	r20, r20
    2b0a:	55 1f       	adc	r21, r21
    2b0c:	59 f0       	breq	.+22     	; 0x2b24 <__fp_splitA+0x10>
    2b0e:	5f 3f       	cpi	r21, 0xFF	; 255
    2b10:	71 f0       	breq	.+28     	; 0x2b2e <__fp_splitA+0x1a>
    2b12:	47 95       	ror	r20

00002b14 <__fp_splitA>:
    2b14:	88 0f       	add	r24, r24
    2b16:	97 fb       	bst	r25, 7
    2b18:	99 1f       	adc	r25, r25
    2b1a:	61 f0       	breq	.+24     	; 0x2b34 <__fp_splitA+0x20>
    2b1c:	9f 3f       	cpi	r25, 0xFF	; 255
    2b1e:	79 f0       	breq	.+30     	; 0x2b3e <__fp_splitA+0x2a>
    2b20:	87 95       	ror	r24
    2b22:	08 95       	ret
    2b24:	12 16       	cp	r1, r18
    2b26:	13 06       	cpc	r1, r19
    2b28:	14 06       	cpc	r1, r20
    2b2a:	55 1f       	adc	r21, r21
    2b2c:	f2 cf       	rjmp	.-28     	; 0x2b12 <__fp_split3+0xe>
    2b2e:	46 95       	lsr	r20
    2b30:	f1 df       	rcall	.-30     	; 0x2b14 <__fp_splitA>
    2b32:	08 c0       	rjmp	.+16     	; 0x2b44 <__fp_splitA+0x30>
    2b34:	16 16       	cp	r1, r22
    2b36:	17 06       	cpc	r1, r23
    2b38:	18 06       	cpc	r1, r24
    2b3a:	99 1f       	adc	r25, r25
    2b3c:	f1 cf       	rjmp	.-30     	; 0x2b20 <__fp_splitA+0xc>
    2b3e:	86 95       	lsr	r24
    2b40:	71 05       	cpc	r23, r1
    2b42:	61 05       	cpc	r22, r1
    2b44:	08 94       	sec
    2b46:	08 95       	ret

00002b48 <__fp_zero>:
    2b48:	e8 94       	clt

00002b4a <__fp_szero>:
    2b4a:	bb 27       	eor	r27, r27
    2b4c:	66 27       	eor	r22, r22
    2b4e:	77 27       	eor	r23, r23
    2b50:	cb 01       	movw	r24, r22
    2b52:	97 f9       	bld	r25, 7
    2b54:	08 95       	ret

00002b56 <__gesf2>:
    2b56:	2c df       	rcall	.-424    	; 0x29b0 <__fp_cmp>
    2b58:	08 f4       	brcc	.+2      	; 0x2b5c <__gesf2+0x6>
    2b5a:	8f ef       	ldi	r24, 0xFF	; 255
    2b5c:	08 95       	ret

00002b5e <inverse>:
    2b5e:	9b 01       	movw	r18, r22
    2b60:	ac 01       	movw	r20, r24
    2b62:	60 e0       	ldi	r22, 0x00	; 0
    2b64:	70 e0       	ldi	r23, 0x00	; 0
    2b66:	80 e8       	ldi	r24, 0x80	; 128
    2b68:	9f e3       	ldi	r25, 0x3F	; 63
    2b6a:	1b ce       	rjmp	.-970    	; 0x27a2 <__divsf3>
    2b6c:	45 cf       	rjmp	.-374    	; 0x29f8 <__fp_inf>
    2b6e:	15 c1       	rjmp	.+554    	; 0x2d9a <__fp_mpack>

00002b70 <ldexp>:
    2b70:	d1 df       	rcall	.-94     	; 0x2b14 <__fp_splitA>
    2b72:	e8 f3       	brcs	.-6      	; 0x2b6e <inverse+0x10>
    2b74:	99 23       	and	r25, r25
    2b76:	d9 f3       	breq	.-10     	; 0x2b6e <inverse+0x10>
    2b78:	94 0f       	add	r25, r20
    2b7a:	51 1d       	adc	r21, r1
    2b7c:	bb f3       	brvs	.-18     	; 0x2b6c <inverse+0xe>
    2b7e:	91 50       	subi	r25, 0x01	; 1
    2b80:	50 40       	sbci	r21, 0x00	; 0
    2b82:	94 f0       	brlt	.+36     	; 0x2ba8 <ldexp+0x38>
    2b84:	59 f0       	breq	.+22     	; 0x2b9c <ldexp+0x2c>
    2b86:	88 23       	and	r24, r24
    2b88:	32 f0       	brmi	.+12     	; 0x2b96 <ldexp+0x26>
    2b8a:	66 0f       	add	r22, r22
    2b8c:	77 1f       	adc	r23, r23
    2b8e:	88 1f       	adc	r24, r24
    2b90:	91 50       	subi	r25, 0x01	; 1
    2b92:	50 40       	sbci	r21, 0x00	; 0
    2b94:	c1 f7       	brne	.-16     	; 0x2b86 <ldexp+0x16>
    2b96:	9e 3f       	cpi	r25, 0xFE	; 254
    2b98:	51 05       	cpc	r21, r1
    2b9a:	44 f7       	brge	.-48     	; 0x2b6c <inverse+0xe>
    2b9c:	88 0f       	add	r24, r24
    2b9e:	91 1d       	adc	r25, r1
    2ba0:	96 95       	lsr	r25
    2ba2:	87 95       	ror	r24
    2ba4:	97 f9       	bld	r25, 7
    2ba6:	08 95       	ret
    2ba8:	5f 3f       	cpi	r21, 0xFF	; 255
    2baa:	ac f0       	brlt	.+42     	; 0x2bd6 <ldexp+0x66>
    2bac:	98 3e       	cpi	r25, 0xE8	; 232
    2bae:	9c f0       	brlt	.+38     	; 0x2bd6 <ldexp+0x66>
    2bb0:	bb 27       	eor	r27, r27
    2bb2:	86 95       	lsr	r24
    2bb4:	77 95       	ror	r23
    2bb6:	67 95       	ror	r22
    2bb8:	b7 95       	ror	r27
    2bba:	08 f4       	brcc	.+2      	; 0x2bbe <ldexp+0x4e>
    2bbc:	b1 60       	ori	r27, 0x01	; 1
    2bbe:	93 95       	inc	r25
    2bc0:	c1 f7       	brne	.-16     	; 0x2bb2 <ldexp+0x42>
    2bc2:	bb 0f       	add	r27, r27
    2bc4:	58 f7       	brcc	.-42     	; 0x2b9c <ldexp+0x2c>
    2bc6:	11 f4       	brne	.+4      	; 0x2bcc <ldexp+0x5c>
    2bc8:	60 ff       	sbrs	r22, 0
    2bca:	e8 cf       	rjmp	.-48     	; 0x2b9c <ldexp+0x2c>
    2bcc:	6f 5f       	subi	r22, 0xFF	; 255
    2bce:	7f 4f       	sbci	r23, 0xFF	; 255
    2bd0:	8f 4f       	sbci	r24, 0xFF	; 255
    2bd2:	9f 4f       	sbci	r25, 0xFF	; 255
    2bd4:	e3 cf       	rjmp	.-58     	; 0x2b9c <ldexp+0x2c>
    2bd6:	b9 cf       	rjmp	.-142    	; 0x2b4a <__fp_szero>

00002bd8 <modf>:
    2bd8:	fa 01       	movw	r30, r20
    2bda:	dc 01       	movw	r26, r24
    2bdc:	aa 0f       	add	r26, r26
    2bde:	bb 1f       	adc	r27, r27
    2be0:	9b 01       	movw	r18, r22
    2be2:	ac 01       	movw	r20, r24
    2be4:	bf 57       	subi	r27, 0x7F	; 127
    2be6:	28 f4       	brcc	.+10     	; 0x2bf2 <modf+0x1a>
    2be8:	22 27       	eor	r18, r18
    2bea:	33 27       	eor	r19, r19
    2bec:	44 27       	eor	r20, r20
    2bee:	50 78       	andi	r21, 0x80	; 128
    2bf0:	1f c0       	rjmp	.+62     	; 0x2c30 <modf+0x58>
    2bf2:	b7 51       	subi	r27, 0x17	; 23
    2bf4:	88 f4       	brcc	.+34     	; 0x2c18 <modf+0x40>
    2bf6:	ab 2f       	mov	r26, r27
    2bf8:	00 24       	eor	r0, r0
    2bfa:	46 95       	lsr	r20
    2bfc:	37 95       	ror	r19
    2bfe:	27 95       	ror	r18
    2c00:	01 1c       	adc	r0, r1
    2c02:	a3 95       	inc	r26
    2c04:	d2 f3       	brmi	.-12     	; 0x2bfa <modf+0x22>
    2c06:	00 20       	and	r0, r0
    2c08:	69 f0       	breq	.+26     	; 0x2c24 <modf+0x4c>
    2c0a:	22 0f       	add	r18, r18
    2c0c:	33 1f       	adc	r19, r19
    2c0e:	44 1f       	adc	r20, r20
    2c10:	b3 95       	inc	r27
    2c12:	da f3       	brmi	.-10     	; 0x2c0a <modf+0x32>
    2c14:	0d d0       	rcall	.+26     	; 0x2c30 <modf+0x58>
    2c16:	f7 cc       	rjmp	.-1554   	; 0x2606 <__subsf3>
    2c18:	61 30       	cpi	r22, 0x01	; 1
    2c1a:	71 05       	cpc	r23, r1
    2c1c:	a0 e8       	ldi	r26, 0x80	; 128
    2c1e:	8a 07       	cpc	r24, r26
    2c20:	b9 46       	sbci	r27, 0x69	; 105
    2c22:	30 f4       	brcc	.+12     	; 0x2c30 <modf+0x58>
    2c24:	9b 01       	movw	r18, r22
    2c26:	ac 01       	movw	r20, r24
    2c28:	66 27       	eor	r22, r22
    2c2a:	77 27       	eor	r23, r23
    2c2c:	88 27       	eor	r24, r24
    2c2e:	90 78       	andi	r25, 0x80	; 128
    2c30:	30 96       	adiw	r30, 0x00	; 0
    2c32:	21 f0       	breq	.+8      	; 0x2c3c <modf+0x64>
    2c34:	20 83       	st	Z, r18
    2c36:	31 83       	std	Z+1, r19	; 0x01
    2c38:	42 83       	std	Z+2, r20	; 0x02
    2c3a:	53 83       	std	Z+3, r21	; 0x03
    2c3c:	08 95       	ret

00002c3e <__mulsf3>:
    2c3e:	0b d0       	rcall	.+22     	; 0x2c56 <__mulsf3x>
    2c40:	3f cf       	rjmp	.-386    	; 0x2ac0 <__fp_round>
    2c42:	08 df       	rcall	.-496    	; 0x2a54 <__fp_pscA>
    2c44:	28 f0       	brcs	.+10     	; 0x2c50 <__mulsf3+0x12>
    2c46:	0d df       	rcall	.-486    	; 0x2a62 <__fp_pscB>
    2c48:	18 f0       	brcs	.+6      	; 0x2c50 <__mulsf3+0x12>
    2c4a:	95 23       	and	r25, r21
    2c4c:	09 f0       	breq	.+2      	; 0x2c50 <__mulsf3+0x12>
    2c4e:	d4 ce       	rjmp	.-600    	; 0x29f8 <__fp_inf>
    2c50:	d9 ce       	rjmp	.-590    	; 0x2a04 <__fp_nan>
    2c52:	11 24       	eor	r1, r1
    2c54:	7a cf       	rjmp	.-268    	; 0x2b4a <__fp_szero>

00002c56 <__mulsf3x>:
    2c56:	56 df       	rcall	.-340    	; 0x2b04 <__fp_split3>
    2c58:	a0 f3       	brcs	.-24     	; 0x2c42 <__mulsf3+0x4>

00002c5a <__mulsf3_pse>:
    2c5a:	95 9f       	mul	r25, r21
    2c5c:	d1 f3       	breq	.-12     	; 0x2c52 <__mulsf3+0x14>
    2c5e:	95 0f       	add	r25, r21
    2c60:	50 e0       	ldi	r21, 0x00	; 0
    2c62:	55 1f       	adc	r21, r21
    2c64:	62 9f       	mul	r22, r18
    2c66:	f0 01       	movw	r30, r0
    2c68:	72 9f       	mul	r23, r18
    2c6a:	bb 27       	eor	r27, r27
    2c6c:	f0 0d       	add	r31, r0
    2c6e:	b1 1d       	adc	r27, r1
    2c70:	63 9f       	mul	r22, r19
    2c72:	aa 27       	eor	r26, r26
    2c74:	f0 0d       	add	r31, r0
    2c76:	b1 1d       	adc	r27, r1
    2c78:	aa 1f       	adc	r26, r26
    2c7a:	64 9f       	mul	r22, r20
    2c7c:	66 27       	eor	r22, r22
    2c7e:	b0 0d       	add	r27, r0
    2c80:	a1 1d       	adc	r26, r1
    2c82:	66 1f       	adc	r22, r22
    2c84:	82 9f       	mul	r24, r18
    2c86:	22 27       	eor	r18, r18
    2c88:	b0 0d       	add	r27, r0
    2c8a:	a1 1d       	adc	r26, r1
    2c8c:	62 1f       	adc	r22, r18
    2c8e:	73 9f       	mul	r23, r19
    2c90:	b0 0d       	add	r27, r0
    2c92:	a1 1d       	adc	r26, r1
    2c94:	62 1f       	adc	r22, r18
    2c96:	83 9f       	mul	r24, r19
    2c98:	a0 0d       	add	r26, r0
    2c9a:	61 1d       	adc	r22, r1
    2c9c:	22 1f       	adc	r18, r18
    2c9e:	74 9f       	mul	r23, r20
    2ca0:	33 27       	eor	r19, r19
    2ca2:	a0 0d       	add	r26, r0
    2ca4:	61 1d       	adc	r22, r1
    2ca6:	23 1f       	adc	r18, r19
    2ca8:	84 9f       	mul	r24, r20
    2caa:	60 0d       	add	r22, r0
    2cac:	21 1d       	adc	r18, r1
    2cae:	82 2f       	mov	r24, r18
    2cb0:	76 2f       	mov	r23, r22
    2cb2:	6a 2f       	mov	r22, r26
    2cb4:	11 24       	eor	r1, r1
    2cb6:	9f 57       	subi	r25, 0x7F	; 127
    2cb8:	50 40       	sbci	r21, 0x00	; 0
    2cba:	8a f0       	brmi	.+34     	; 0x2cde <__mulsf3_pse+0x84>
    2cbc:	e1 f0       	breq	.+56     	; 0x2cf6 <__mulsf3_pse+0x9c>
    2cbe:	88 23       	and	r24, r24
    2cc0:	4a f0       	brmi	.+18     	; 0x2cd4 <__mulsf3_pse+0x7a>
    2cc2:	ee 0f       	add	r30, r30
    2cc4:	ff 1f       	adc	r31, r31
    2cc6:	bb 1f       	adc	r27, r27
    2cc8:	66 1f       	adc	r22, r22
    2cca:	77 1f       	adc	r23, r23
    2ccc:	88 1f       	adc	r24, r24
    2cce:	91 50       	subi	r25, 0x01	; 1
    2cd0:	50 40       	sbci	r21, 0x00	; 0
    2cd2:	a9 f7       	brne	.-22     	; 0x2cbe <__mulsf3_pse+0x64>
    2cd4:	9e 3f       	cpi	r25, 0xFE	; 254
    2cd6:	51 05       	cpc	r21, r1
    2cd8:	70 f0       	brcs	.+28     	; 0x2cf6 <__mulsf3_pse+0x9c>
    2cda:	8e ce       	rjmp	.-740    	; 0x29f8 <__fp_inf>
    2cdc:	36 cf       	rjmp	.-404    	; 0x2b4a <__fp_szero>
    2cde:	5f 3f       	cpi	r21, 0xFF	; 255
    2ce0:	ec f3       	brlt	.-6      	; 0x2cdc <__mulsf3_pse+0x82>
    2ce2:	98 3e       	cpi	r25, 0xE8	; 232
    2ce4:	dc f3       	brlt	.-10     	; 0x2cdc <__mulsf3_pse+0x82>
    2ce6:	86 95       	lsr	r24
    2ce8:	77 95       	ror	r23
    2cea:	67 95       	ror	r22
    2cec:	b7 95       	ror	r27
    2cee:	f7 95       	ror	r31
    2cf0:	e7 95       	ror	r30
    2cf2:	9f 5f       	subi	r25, 0xFF	; 255
    2cf4:	c1 f7       	brne	.-16     	; 0x2ce6 <__mulsf3_pse+0x8c>
    2cf6:	fe 2b       	or	r31, r30
    2cf8:	88 0f       	add	r24, r24
    2cfa:	91 1d       	adc	r25, r1
    2cfc:	96 95       	lsr	r25
    2cfe:	87 95       	ror	r24
    2d00:	97 f9       	bld	r25, 7
    2d02:	08 95       	ret

00002d04 <sin>:
    2d04:	9f 93       	push	r25
    2d06:	b5 de       	rcall	.-662    	; 0x2a72 <__fp_rempio2>
    2d08:	0f 90       	pop	r0
    2d0a:	07 fc       	sbrc	r0, 7
    2d0c:	ee 5f       	subi	r30, 0xFE	; 254
    2d0e:	e9 ce       	rjmp	.-558    	; 0x2ae2 <__fp_sinus>
    2d10:	11 f4       	brne	.+4      	; 0x2d16 <sin+0x12>
    2d12:	0e f4       	brtc	.+2      	; 0x2d16 <sin+0x12>
    2d14:	77 ce       	rjmp	.-786    	; 0x2a04 <__fp_nan>
    2d16:	41 c0       	rjmp	.+130    	; 0x2d9a <__fp_mpack>

00002d18 <sqrt>:
    2d18:	fd de       	rcall	.-518    	; 0x2b14 <__fp_splitA>
    2d1a:	d0 f3       	brcs	.-12     	; 0x2d10 <sin+0xc>
    2d1c:	99 23       	and	r25, r25
    2d1e:	d9 f3       	breq	.-10     	; 0x2d16 <sin+0x12>
    2d20:	ce f3       	brts	.-14     	; 0x2d14 <sin+0x10>
    2d22:	9f 57       	subi	r25, 0x7F	; 127
    2d24:	55 0b       	sbc	r21, r21
    2d26:	87 ff       	sbrs	r24, 7
    2d28:	46 d0       	rcall	.+140    	; 0x2db6 <__fp_norm2>
    2d2a:	00 24       	eor	r0, r0
    2d2c:	a0 e6       	ldi	r26, 0x60	; 96
    2d2e:	40 ea       	ldi	r20, 0xA0	; 160
    2d30:	90 01       	movw	r18, r0
    2d32:	80 58       	subi	r24, 0x80	; 128
    2d34:	56 95       	lsr	r21
    2d36:	97 95       	ror	r25
    2d38:	28 f4       	brcc	.+10     	; 0x2d44 <sqrt+0x2c>
    2d3a:	80 5c       	subi	r24, 0xC0	; 192
    2d3c:	66 0f       	add	r22, r22
    2d3e:	77 1f       	adc	r23, r23
    2d40:	88 1f       	adc	r24, r24
    2d42:	20 f0       	brcs	.+8      	; 0x2d4c <sqrt+0x34>
    2d44:	26 17       	cp	r18, r22
    2d46:	37 07       	cpc	r19, r23
    2d48:	48 07       	cpc	r20, r24
    2d4a:	30 f4       	brcc	.+12     	; 0x2d58 <sqrt+0x40>
    2d4c:	62 1b       	sub	r22, r18
    2d4e:	73 0b       	sbc	r23, r19
    2d50:	84 0b       	sbc	r24, r20
    2d52:	20 29       	or	r18, r0
    2d54:	31 29       	or	r19, r1
    2d56:	4a 2b       	or	r20, r26
    2d58:	a6 95       	lsr	r26
    2d5a:	17 94       	ror	r1
    2d5c:	07 94       	ror	r0
    2d5e:	20 25       	eor	r18, r0
    2d60:	31 25       	eor	r19, r1
    2d62:	4a 27       	eor	r20, r26
    2d64:	58 f7       	brcc	.-42     	; 0x2d3c <sqrt+0x24>
    2d66:	66 0f       	add	r22, r22
    2d68:	77 1f       	adc	r23, r23
    2d6a:	88 1f       	adc	r24, r24
    2d6c:	20 f0       	brcs	.+8      	; 0x2d76 <sqrt+0x5e>
    2d6e:	26 17       	cp	r18, r22
    2d70:	37 07       	cpc	r19, r23
    2d72:	48 07       	cpc	r20, r24
    2d74:	30 f4       	brcc	.+12     	; 0x2d82 <sqrt+0x6a>
    2d76:	62 0b       	sbc	r22, r18
    2d78:	73 0b       	sbc	r23, r19
    2d7a:	84 0b       	sbc	r24, r20
    2d7c:	20 0d       	add	r18, r0
    2d7e:	31 1d       	adc	r19, r1
    2d80:	41 1d       	adc	r20, r1
    2d82:	a0 95       	com	r26
    2d84:	81 f7       	brne	.-32     	; 0x2d66 <sqrt+0x4e>
    2d86:	b9 01       	movw	r22, r18
    2d88:	84 2f       	mov	r24, r20
    2d8a:	91 58       	subi	r25, 0x81	; 129
    2d8c:	88 0f       	add	r24, r24
    2d8e:	96 95       	lsr	r25
    2d90:	87 95       	ror	r24
    2d92:	08 95       	ret

00002d94 <square>:
    2d94:	9b 01       	movw	r18, r22
    2d96:	ac 01       	movw	r20, r24
    2d98:	52 cf       	rjmp	.-348    	; 0x2c3e <__mulsf3>

00002d9a <__fp_mpack>:
    2d9a:	9f 3f       	cpi	r25, 0xFF	; 255
    2d9c:	31 f0       	breq	.+12     	; 0x2daa <__fp_mpack_finite+0xc>

00002d9e <__fp_mpack_finite>:
    2d9e:	91 50       	subi	r25, 0x01	; 1
    2da0:	20 f4       	brcc	.+8      	; 0x2daa <__fp_mpack_finite+0xc>
    2da2:	87 95       	ror	r24
    2da4:	77 95       	ror	r23
    2da6:	67 95       	ror	r22
    2da8:	b7 95       	ror	r27
    2daa:	88 0f       	add	r24, r24
    2dac:	91 1d       	adc	r25, r1
    2dae:	96 95       	lsr	r25
    2db0:	87 95       	ror	r24
    2db2:	97 f9       	bld	r25, 7
    2db4:	08 95       	ret

00002db6 <__fp_norm2>:
    2db6:	91 50       	subi	r25, 0x01	; 1
    2db8:	50 40       	sbci	r21, 0x00	; 0
    2dba:	66 0f       	add	r22, r22
    2dbc:	77 1f       	adc	r23, r23
    2dbe:	88 1f       	adc	r24, r24
    2dc0:	d2 f7       	brpl	.-12     	; 0x2db6 <__fp_norm2>
    2dc2:	08 95       	ret

00002dc4 <__fp_powsodd>:
    2dc4:	9f 93       	push	r25
    2dc6:	8f 93       	push	r24
    2dc8:	7f 93       	push	r23
    2dca:	6f 93       	push	r22
    2dcc:	ff 93       	push	r31
    2dce:	ef 93       	push	r30
    2dd0:	9b 01       	movw	r18, r22
    2dd2:	ac 01       	movw	r20, r24
    2dd4:	34 df       	rcall	.-408    	; 0x2c3e <__mulsf3>
    2dd6:	ef 91       	pop	r30
    2dd8:	ff 91       	pop	r31
    2dda:	17 de       	rcall	.-978    	; 0x2a0a <__fp_powser>
    2ddc:	2f 91       	pop	r18
    2dde:	3f 91       	pop	r19
    2de0:	4f 91       	pop	r20
    2de2:	5f 91       	pop	r21
    2de4:	2c cf       	rjmp	.-424    	; 0x2c3e <__mulsf3>

00002de6 <__divmodhi4>:
    2de6:	97 fb       	bst	r25, 7
    2de8:	07 2e       	mov	r0, r23
    2dea:	16 f4       	brtc	.+4      	; 0x2df0 <__divmodhi4+0xa>
    2dec:	00 94       	com	r0
    2dee:	07 d0       	rcall	.+14     	; 0x2dfe <__divmodhi4_neg1>
    2df0:	77 fd       	sbrc	r23, 7
    2df2:	09 d0       	rcall	.+18     	; 0x2e06 <__divmodhi4_neg2>
    2df4:	0e 94 07 17 	call	0x2e0e	; 0x2e0e <__udivmodhi4>
    2df8:	07 fc       	sbrc	r0, 7
    2dfa:	05 d0       	rcall	.+10     	; 0x2e06 <__divmodhi4_neg2>
    2dfc:	3e f4       	brtc	.+14     	; 0x2e0c <__divmodhi4_exit>

00002dfe <__divmodhi4_neg1>:
    2dfe:	90 95       	com	r25
    2e00:	81 95       	neg	r24
    2e02:	9f 4f       	sbci	r25, 0xFF	; 255
    2e04:	08 95       	ret

00002e06 <__divmodhi4_neg2>:
    2e06:	70 95       	com	r23
    2e08:	61 95       	neg	r22
    2e0a:	7f 4f       	sbci	r23, 0xFF	; 255

00002e0c <__divmodhi4_exit>:
    2e0c:	08 95       	ret

00002e0e <__udivmodhi4>:
    2e0e:	aa 1b       	sub	r26, r26
    2e10:	bb 1b       	sub	r27, r27
    2e12:	51 e1       	ldi	r21, 0x11	; 17
    2e14:	07 c0       	rjmp	.+14     	; 0x2e24 <__udivmodhi4_ep>

00002e16 <__udivmodhi4_loop>:
    2e16:	aa 1f       	adc	r26, r26
    2e18:	bb 1f       	adc	r27, r27
    2e1a:	a6 17       	cp	r26, r22
    2e1c:	b7 07       	cpc	r27, r23
    2e1e:	10 f0       	brcs	.+4      	; 0x2e24 <__udivmodhi4_ep>
    2e20:	a6 1b       	sub	r26, r22
    2e22:	b7 0b       	sbc	r27, r23

00002e24 <__udivmodhi4_ep>:
    2e24:	88 1f       	adc	r24, r24
    2e26:	99 1f       	adc	r25, r25
    2e28:	5a 95       	dec	r21
    2e2a:	a9 f7       	brne	.-22     	; 0x2e16 <__udivmodhi4_loop>
    2e2c:	80 95       	com	r24
    2e2e:	90 95       	com	r25
    2e30:	bc 01       	movw	r22, r24
    2e32:	cd 01       	movw	r24, r26
    2e34:	08 95       	ret

00002e36 <itoa>:
    2e36:	fb 01       	movw	r30, r22
    2e38:	9f 01       	movw	r18, r30
    2e3a:	e8 94       	clt
    2e3c:	42 30       	cpi	r20, 0x02	; 2
    2e3e:	c4 f0       	brlt	.+48     	; 0x2e70 <itoa+0x3a>
    2e40:	45 32       	cpi	r20, 0x25	; 37
    2e42:	b4 f4       	brge	.+44     	; 0x2e70 <itoa+0x3a>
    2e44:	4a 30       	cpi	r20, 0x0A	; 10
    2e46:	29 f4       	brne	.+10     	; 0x2e52 <itoa+0x1c>
    2e48:	97 fb       	bst	r25, 7
    2e4a:	1e f4       	brtc	.+6      	; 0x2e52 <itoa+0x1c>
    2e4c:	90 95       	com	r25
    2e4e:	81 95       	neg	r24
    2e50:	9f 4f       	sbci	r25, 0xFF	; 255
    2e52:	64 2f       	mov	r22, r20
    2e54:	77 27       	eor	r23, r23
    2e56:	0e 94 07 17 	call	0x2e0e	; 0x2e0e <__udivmodhi4>
    2e5a:	80 5d       	subi	r24, 0xD0	; 208
    2e5c:	8a 33       	cpi	r24, 0x3A	; 58
    2e5e:	0c f0       	brlt	.+2      	; 0x2e62 <itoa+0x2c>
    2e60:	89 5d       	subi	r24, 0xD9	; 217
    2e62:	81 93       	st	Z+, r24
    2e64:	cb 01       	movw	r24, r22
    2e66:	00 97       	sbiw	r24, 0x00	; 0
    2e68:	a1 f7       	brne	.-24     	; 0x2e52 <itoa+0x1c>
    2e6a:	16 f4       	brtc	.+4      	; 0x2e70 <itoa+0x3a>
    2e6c:	5d e2       	ldi	r21, 0x2D	; 45
    2e6e:	51 93       	st	Z+, r21
    2e70:	10 82       	st	Z, r1
    2e72:	c9 01       	movw	r24, r18
    2e74:	0c 94 3c 17 	jmp	0x2e78	; 0x2e78 <strrev>

00002e78 <strrev>:
    2e78:	dc 01       	movw	r26, r24
    2e7a:	fc 01       	movw	r30, r24
    2e7c:	67 2f       	mov	r22, r23
    2e7e:	71 91       	ld	r23, Z+
    2e80:	77 23       	and	r23, r23
    2e82:	e1 f7       	brne	.-8      	; 0x2e7c <strrev+0x4>
    2e84:	32 97       	sbiw	r30, 0x02	; 2
    2e86:	04 c0       	rjmp	.+8      	; 0x2e90 <strrev+0x18>
    2e88:	7c 91       	ld	r23, X
    2e8a:	6d 93       	st	X+, r22
    2e8c:	70 83       	st	Z, r23
    2e8e:	62 91       	ld	r22, -Z
    2e90:	ae 17       	cp	r26, r30
    2e92:	bf 07       	cpc	r27, r31
    2e94:	c8 f3       	brcs	.-14     	; 0x2e88 <strrev+0x10>
    2e96:	08 95       	ret

00002e98 <_exit>:
    2e98:	f8 94       	cli

00002e9a <__stop_program>:
    2e9a:	ff cf       	rjmp	.-2      	; 0x2e9a <__stop_program>
