
LocalTest.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000014  00800100  00002ee6  00002f7a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00002ee6  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000000b7  00800114  00800114  00002f8e  2**0
                  ALLOC
  3 .stab         00004068  00000000  00000000  00002f90  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      000012b9  00000000  00000000  00006ff8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      0000002f  00000000  00000000  000082b1  2**0
                  CONTENTS, READONLY
  6 .debug_aranges 000002b8  00000000  00000000  000082e0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00002b0c  00000000  00000000  00008598  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00000af3  00000000  00000000  0000b0a4  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   000012ae  00000000  00000000  0000bb97  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  000008e4  00000000  00000000  0000ce48  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    000008c7  00000000  00000000  0000d72c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    000031ab  00000000  00000000  0000dff3  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 000002c0  00000000  00000000  0001119e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__ctors_end>
       4:	0c 94 06 01 	jmp	0x20c	; 0x20c <__bad_interrupt>
       8:	0c 94 06 01 	jmp	0x20c	; 0x20c <__bad_interrupt>
       c:	0c 94 78 07 	jmp	0xef0	; 0xef0 <__vector_3>
      10:	0c 94 06 01 	jmp	0x20c	; 0x20c <__bad_interrupt>
      14:	0c 94 06 01 	jmp	0x20c	; 0x20c <__bad_interrupt>
      18:	0c 94 06 01 	jmp	0x20c	; 0x20c <__bad_interrupt>
      1c:	0c 94 06 01 	jmp	0x20c	; 0x20c <__bad_interrupt>
      20:	0c 94 06 01 	jmp	0x20c	; 0x20c <__bad_interrupt>
      24:	0c 94 06 01 	jmp	0x20c	; 0x20c <__bad_interrupt>
      28:	0c 94 3c 0f 	jmp	0x1e78	; 0x1e78 <__vector_10>
      2c:	0c 94 7a 0f 	jmp	0x1ef4	; 0x1ef4 <__vector_11>
      30:	0c 94 06 01 	jmp	0x20c	; 0x20c <__bad_interrupt>
      34:	0c 94 06 01 	jmp	0x20c	; 0x20c <__bad_interrupt>
      38:	0c 94 06 01 	jmp	0x20c	; 0x20c <__bad_interrupt>
      3c:	0c 94 06 01 	jmp	0x20c	; 0x20c <__bad_interrupt>
      40:	0c 94 06 01 	jmp	0x20c	; 0x20c <__bad_interrupt>
      44:	0c 94 06 01 	jmp	0x20c	; 0x20c <__bad_interrupt>
      48:	0c 94 06 01 	jmp	0x20c	; 0x20c <__bad_interrupt>
      4c:	0c 94 06 01 	jmp	0x20c	; 0x20c <__bad_interrupt>
      50:	0c 94 06 01 	jmp	0x20c	; 0x20c <__bad_interrupt>
      54:	0c 94 06 01 	jmp	0x20c	; 0x20c <__bad_interrupt>
      58:	0c 94 06 01 	jmp	0x20c	; 0x20c <__bad_interrupt>
      5c:	0c 94 06 01 	jmp	0x20c	; 0x20c <__bad_interrupt>
      60:	0c 94 06 01 	jmp	0x20c	; 0x20c <__bad_interrupt>
      64:	0c 94 06 01 	jmp	0x20c	; 0x20c <__bad_interrupt>
      68:	0c 94 06 01 	jmp	0x20c	; 0x20c <__bad_interrupt>
      6c:	0c 94 06 01 	jmp	0x20c	; 0x20c <__bad_interrupt>
      70:	0c 94 06 01 	jmp	0x20c	; 0x20c <__bad_interrupt>
      74:	0c 94 aa 07 	jmp	0xf54	; 0xf54 <__vector_29>
      78:	0c 94 06 01 	jmp	0x20c	; 0x20c <__bad_interrupt>
      7c:	0c 94 06 01 	jmp	0x20c	; 0x20c <__bad_interrupt>
      80:	0c 94 06 01 	jmp	0x20c	; 0x20c <__bad_interrupt>
      84:	0c 94 06 01 	jmp	0x20c	; 0x20c <__bad_interrupt>
      88:	0c 94 06 01 	jmp	0x20c	; 0x20c <__bad_interrupt>
      8c:	0c 94 06 01 	jmp	0x20c	; 0x20c <__bad_interrupt>
      90:	0c 94 06 01 	jmp	0x20c	; 0x20c <__bad_interrupt>
      94:	0c 94 06 01 	jmp	0x20c	; 0x20c <__bad_interrupt>
      98:	0c 94 06 01 	jmp	0x20c	; 0x20c <__bad_interrupt>
      9c:	0c 94 06 01 	jmp	0x20c	; 0x20c <__bad_interrupt>
      a0:	0c 94 06 01 	jmp	0x20c	; 0x20c <__bad_interrupt>
      a4:	0c 94 06 01 	jmp	0x20c	; 0x20c <__bad_interrupt>
      a8:	0c 94 06 01 	jmp	0x20c	; 0x20c <__bad_interrupt>
      ac:	08 4a       	sbci	r16, 0xA8	; 168
      ae:	d7 3b       	cpi	r29, 0xB7	; 183
      b0:	3b ce       	rjmp	.-906    	; 0xfffffd28 <__eeprom_end+0xff7efd28>
      b2:	01 6e       	ori	r16, 0xE1	; 225
      b4:	84 bc       	out	0x24, r8	; 36
      b6:	bf fd       	.word	0xfdbf	; ????
      b8:	c1 2f       	mov	r28, r17
      ba:	3d 6c       	ori	r19, 0xCD	; 205
      bc:	74 31       	cpi	r23, 0x14	; 20
      be:	9a bd       	out	0x2a, r25	; 42
      c0:	56 83       	std	Z+6, r21	; 0x06
      c2:	3d da       	rcall	.-2950   	; 0xfffff53e <__eeprom_end+0xff7ef53e>
      c4:	3d 00       	.word	0x003d	; ????
      c6:	c7 7f       	andi	r28, 0xF7	; 247
      c8:	11 be       	out	0x31, r1	; 49
      ca:	d9 e4       	ldi	r29, 0x49	; 73
      cc:	bb 4c       	sbci	r27, 0xCB	; 203
      ce:	3e 91       	ld	r19, -X
      d0:	6b aa       	std	Y+51, r6	; 0x33
      d2:	aa be       	out	0x3a, r10	; 58
      d4:	00 00       	nop
      d6:	00 80       	ld	r0, Z
      d8:	3f 07       	cpc	r19, r31
      da:	63 42       	sbci	r22, 0x23	; 35
      dc:	36 b7       	in	r19, 0x36	; 54
      de:	9b d8       	rcall	.-3786   	; 0xfffff216 <__eeprom_end+0xff7ef216>
      e0:	a7 1a       	sub	r10, r23
      e2:	39 68       	ori	r19, 0x89	; 137
      e4:	56 18       	sub	r5, r6
      e6:	ae ba       	out	0x1e, r10	; 30
      e8:	ab 55       	subi	r26, 0x5B	; 91
      ea:	8c 1d       	adc	r24, r12
      ec:	3c b7       	in	r19, 0x3c	; 60
      ee:	cc 57       	subi	r28, 0x7C	; 124
      f0:	63 bd       	out	0x23, r22	; 35
      f2:	6d ed       	ldi	r22, 0xDD	; 221
      f4:	fd 75       	andi	r31, 0x5D	; 93
      f6:	3e f6       	brtc	.-114    	; 0x86 <__SREG__+0x47>
      f8:	17 72       	andi	r17, 0x27	; 39
      fa:	31 bf       	out	0x31, r19	; 49
      fc:	00 00       	nop
      fe:	00 80       	ld	r0, Z
     100:	3f 05       	cpc	r19, r15
     102:	a8 4c       	sbci	r26, 0xC8	; 200
     104:	cd b2       	in	r12, 0x1d	; 29
     106:	d4 4e       	sbci	r29, 0xE4	; 228
     108:	b9 38       	cpi	r27, 0x89	; 137
     10a:	36 a9       	ldd	r19, Z+54	; 0x36
     10c:	02 0c       	add	r0, r2
     10e:	50 b9       	out	0x00, r21	; 0
     110:	91 86       	std	Z+9, r9	; 0x09
     112:	88 08       	sbc	r8, r8
     114:	3c a6       	std	Y+44, r3	; 0x2c
     116:	aa aa       	std	Y+50, r10	; 0x32
     118:	2a be       	out	0x3a, r2	; 58
     11a:	00 00       	nop
     11c:	00 80       	ld	r0, Z
     11e:	3f 00       	.word	0x003f	; ????

0000011f <descriptor_list>:
     11f:	00 01 00 00 53 01 12 00 02 00 00 65 01 43 00 03     ....S......e.C..
     12f:	00 00 a8 01 04 01 03 09 04 ac 01 12 02 03 09 04     ................
     13f:	c0 01 06 03 03 09 04 c8 01 08                       ..........

00000149 <endpoint_config_table>:
     149:	00 01 c1 12 01 80 36 01 81 36                       ......6..6

00000153 <device_descriptor>:
     153:	12 01 00 02 02 00 00 10 c0 16 7a 04 00 01 01 02     ..........z.....
     163:	03 01                                               ..

00000165 <config1_descriptor>:
     165:	09 02 43 00 02 01 00 c0 32 09 04 00 00 01 02 02     ..C.....2.......
     175:	01 00 05 24 00 10 01 05 24 01 01 01 04 24 02 06     ...$....$....$..
     185:	05 24 06 00 01 07 05 82 03 10 00 40 09 04 01 00     .$.........@....
     195:	02 0a 00 00 00 07 05 03 02 40 00 00 07 05 84 02     .........@......
     1a5:	40 00 00                                            @..

000001a8 <string0>:
     1a8:	04 03 09 04                                         ....

000001ac <string1>:
     1ac:	12 03 4a 00 2e 00 20 00 46 00 69 00 65 00 6e 00     ..J... .F.i.e.n.
     1bc:	65 00 00 00                                         e...

000001c0 <string2>:
     1c0:	06 03 4d 00 32 00 00 00                             ..M.2...

000001c8 <string3>:
     1c8:	08 03 34 00 31 00 30 00 00 00                       ..4.1.0...

000001d2 <__ctors_end>:
     1d2:	11 24       	eor	r1, r1
     1d4:	1f be       	out	0x3f, r1	; 63
     1d6:	cf ef       	ldi	r28, 0xFF	; 255
     1d8:	da e0       	ldi	r29, 0x0A	; 10
     1da:	de bf       	out	0x3e, r29	; 62
     1dc:	cd bf       	out	0x3d, r28	; 61

000001de <__do_copy_data>:
     1de:	11 e0       	ldi	r17, 0x01	; 1
     1e0:	a0 e0       	ldi	r26, 0x00	; 0
     1e2:	b1 e0       	ldi	r27, 0x01	; 1
     1e4:	e6 ee       	ldi	r30, 0xE6	; 230
     1e6:	fe e2       	ldi	r31, 0x2E	; 46
     1e8:	02 c0       	rjmp	.+4      	; 0x1ee <__do_copy_data+0x10>
     1ea:	05 90       	lpm	r0, Z+
     1ec:	0d 92       	st	X+, r0
     1ee:	a4 31       	cpi	r26, 0x14	; 20
     1f0:	b1 07       	cpc	r27, r17
     1f2:	d9 f7       	brne	.-10     	; 0x1ea <__do_copy_data+0xc>

000001f4 <__do_clear_bss>:
     1f4:	21 e0       	ldi	r18, 0x01	; 1
     1f6:	a4 e1       	ldi	r26, 0x14	; 20
     1f8:	b1 e0       	ldi	r27, 0x01	; 1
     1fa:	01 c0       	rjmp	.+2      	; 0x1fe <.do_clear_bss_start>

000001fc <.do_clear_bss_loop>:
     1fc:	1d 92       	st	X+, r1

000001fe <.do_clear_bss_start>:
     1fe:	ab 3c       	cpi	r26, 0xCB	; 203
     200:	b2 07       	cpc	r27, r18
     202:	e1 f7       	brne	.-8      	; 0x1fc <.do_clear_bss_loop>
     204:	0e 94 14 06 	call	0xc28	; 0xc28 <main>
     208:	0c 94 71 17 	jmp	0x2ee2	; 0x2ee2 <_exit>

0000020c <__bad_interrupt>:
     20c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000210 <chooseInput>:

int i = 0;
int ADCarr[7] = {0, 0, 0, 0, 0, 0, 0};

void chooseInput(int i) {
	switch (i) {
     210:	83 30       	cpi	r24, 0x03	; 3
     212:	91 05       	cpc	r25, r1
     214:	09 f4       	brne	.+2      	; 0x218 <chooseInput+0x8>
     216:	45 c0       	rjmp	.+138    	; 0x2a2 <chooseInput+0x92>
     218:	3c f4       	brge	.+14     	; 0x228 <chooseInput+0x18>
     21a:	81 30       	cpi	r24, 0x01	; 1
     21c:	91 05       	cpc	r25, r1
     21e:	f9 f0       	breq	.+62     	; 0x25e <chooseInput+0x4e>
     220:	7c f5       	brge	.+94     	; 0x280 <chooseInput+0x70>
     222:	89 2b       	or	r24, r25
     224:	59 f0       	breq	.+22     	; 0x23c <chooseInput+0x2c>
     226:	08 95       	ret
     228:	85 30       	cpi	r24, 0x05	; 5
     22a:	91 05       	cpc	r25, r1
     22c:	09 f4       	brne	.+2      	; 0x230 <chooseInput+0x20>
     22e:	5b c0       	rjmp	.+182    	; 0x2e6 <chooseInput+0xd6>
     230:	0c f4       	brge	.+2      	; 0x234 <chooseInput+0x24>
     232:	48 c0       	rjmp	.+144    	; 0x2c4 <chooseInput+0xb4>
     234:	06 97       	sbiw	r24, 0x06	; 6
     236:	09 f0       	breq	.+2      	; 0x23a <chooseInput+0x2a>
     238:	77 c0       	rjmp	.+238    	; 0x328 <chooseInput+0x118>
     23a:	66 c0       	rjmp	.+204    	; 0x308 <chooseInput+0xf8>
		case 0:
		clear(ADCSRB, MUX5);//Set analog input (F0)
     23c:	eb e7       	ldi	r30, 0x7B	; 123
     23e:	f0 e0       	ldi	r31, 0x00	; 0
     240:	80 81       	ld	r24, Z
     242:	8f 7d       	andi	r24, 0xDF	; 223
     244:	80 83       	st	Z, r24
		clear(ADMUX, MUX2);	//^
     246:	ec e7       	ldi	r30, 0x7C	; 124
     248:	f0 e0       	ldi	r31, 0x00	; 0
     24a:	80 81       	ld	r24, Z
     24c:	8b 7f       	andi	r24, 0xFB	; 251
     24e:	80 83       	st	Z, r24
		clear(ADMUX, MUX1);	//^
     250:	80 81       	ld	r24, Z
     252:	8d 7f       	andi	r24, 0xFD	; 253
     254:	80 83       	st	Z, r24
		clear(ADMUX, MUX0);	//^
     256:	80 81       	ld	r24, Z
     258:	8e 7f       	andi	r24, 0xFE	; 254
     25a:	80 83       	st	Z, r24

		break;
     25c:	08 95       	ret
		case 1:
		clear(ADCSRB, MUX5);//Set analog input (F1)
     25e:	eb e7       	ldi	r30, 0x7B	; 123
     260:	f0 e0       	ldi	r31, 0x00	; 0
     262:	80 81       	ld	r24, Z
     264:	8f 7d       	andi	r24, 0xDF	; 223
     266:	80 83       	st	Z, r24
		clear(ADMUX, MUX2);	//^
     268:	ec e7       	ldi	r30, 0x7C	; 124
     26a:	f0 e0       	ldi	r31, 0x00	; 0
     26c:	80 81       	ld	r24, Z
     26e:	8b 7f       	andi	r24, 0xFB	; 251
     270:	80 83       	st	Z, r24
		clear(ADMUX, MUX1);	//^
     272:	80 81       	ld	r24, Z
     274:	8d 7f       	andi	r24, 0xFD	; 253
     276:	80 83       	st	Z, r24
		set(ADMUX, MUX0);	//^
     278:	80 81       	ld	r24, Z
     27a:	81 60       	ori	r24, 0x01	; 1
     27c:	80 83       	st	Z, r24

		break;
     27e:	08 95       	ret
		case 2:
		clear(ADCSRB, MUX5);//Set analog input (F4)
     280:	eb e7       	ldi	r30, 0x7B	; 123
     282:	f0 e0       	ldi	r31, 0x00	; 0
     284:	80 81       	ld	r24, Z
     286:	8f 7d       	andi	r24, 0xDF	; 223
     288:	80 83       	st	Z, r24
		set(ADMUX, MUX2);	//^
     28a:	ec e7       	ldi	r30, 0x7C	; 124
     28c:	f0 e0       	ldi	r31, 0x00	; 0
     28e:	80 81       	ld	r24, Z
     290:	84 60       	ori	r24, 0x04	; 4
     292:	80 83       	st	Z, r24
		clear(ADMUX, MUX1);	//^
     294:	80 81       	ld	r24, Z
     296:	8d 7f       	andi	r24, 0xFD	; 253
     298:	80 83       	st	Z, r24
		clear(ADMUX, MUX0);	//^
     29a:	80 81       	ld	r24, Z
     29c:	8e 7f       	andi	r24, 0xFE	; 254
     29e:	80 83       	st	Z, r24

		break;
     2a0:	08 95       	ret
		case 3:

		clear(ADCSRB, MUX5);//Set analog input (F5)
     2a2:	eb e7       	ldi	r30, 0x7B	; 123
     2a4:	f0 e0       	ldi	r31, 0x00	; 0
     2a6:	80 81       	ld	r24, Z
     2a8:	8f 7d       	andi	r24, 0xDF	; 223
     2aa:	80 83       	st	Z, r24
		set(ADMUX, MUX2);	//^
     2ac:	ec e7       	ldi	r30, 0x7C	; 124
     2ae:	f0 e0       	ldi	r31, 0x00	; 0
     2b0:	80 81       	ld	r24, Z
     2b2:	84 60       	ori	r24, 0x04	; 4
     2b4:	80 83       	st	Z, r24
		clear(ADMUX, MUX1);	//^
     2b6:	80 81       	ld	r24, Z
     2b8:	8d 7f       	andi	r24, 0xFD	; 253
     2ba:	80 83       	st	Z, r24
		set(ADMUX, MUX0);	//^
     2bc:	80 81       	ld	r24, Z
     2be:	81 60       	ori	r24, 0x01	; 1
     2c0:	80 83       	st	Z, r24
		break;
     2c2:	08 95       	ret
		case 4:
		clear(ADCSRB, MUX5);//Set analog input (F6)
     2c4:	eb e7       	ldi	r30, 0x7B	; 123
     2c6:	f0 e0       	ldi	r31, 0x00	; 0
     2c8:	80 81       	ld	r24, Z
     2ca:	8f 7d       	andi	r24, 0xDF	; 223
     2cc:	80 83       	st	Z, r24
		set(ADMUX, MUX2);	//^
     2ce:	ec e7       	ldi	r30, 0x7C	; 124
     2d0:	f0 e0       	ldi	r31, 0x00	; 0
     2d2:	80 81       	ld	r24, Z
     2d4:	84 60       	ori	r24, 0x04	; 4
     2d6:	80 83       	st	Z, r24
		set(ADMUX, MUX1);	//^
     2d8:	80 81       	ld	r24, Z
     2da:	82 60       	ori	r24, 0x02	; 2
     2dc:	80 83       	st	Z, r24
		clear(ADMUX, MUX0);	//^
     2de:	80 81       	ld	r24, Z
     2e0:	8e 7f       	andi	r24, 0xFE	; 254
     2e2:	80 83       	st	Z, r24
		break;
     2e4:	08 95       	ret
		case 5:
		set(ADCSRB, MUX5);//Set analog input (D4)
     2e6:	eb e7       	ldi	r30, 0x7B	; 123
     2e8:	f0 e0       	ldi	r31, 0x00	; 0
     2ea:	80 81       	ld	r24, Z
     2ec:	80 62       	ori	r24, 0x20	; 32
     2ee:	80 83       	st	Z, r24
		clear(ADMUX, MUX2);	//^
     2f0:	ec e7       	ldi	r30, 0x7C	; 124
     2f2:	f0 e0       	ldi	r31, 0x00	; 0
     2f4:	80 81       	ld	r24, Z
     2f6:	8b 7f       	andi	r24, 0xFB	; 251
     2f8:	80 83       	st	Z, r24
		clear(ADMUX, MUX1);	//^
     2fa:	80 81       	ld	r24, Z
     2fc:	8d 7f       	andi	r24, 0xFD	; 253
     2fe:	80 83       	st	Z, r24
		clear(ADMUX, MUX0);	//^
     300:	80 81       	ld	r24, Z
     302:	8e 7f       	andi	r24, 0xFE	; 254
     304:	80 83       	st	Z, r24
		break;
     306:	08 95       	ret
		case 6:
		set(ADCSRB, MUX5);//Set analog input (D6)
     308:	eb e7       	ldi	r30, 0x7B	; 123
     30a:	f0 e0       	ldi	r31, 0x00	; 0
     30c:	80 81       	ld	r24, Z
     30e:	80 62       	ori	r24, 0x20	; 32
     310:	80 83       	st	Z, r24
		clear(ADMUX, MUX2);	//^
     312:	ec e7       	ldi	r30, 0x7C	; 124
     314:	f0 e0       	ldi	r31, 0x00	; 0
     316:	80 81       	ld	r24, Z
     318:	8b 7f       	andi	r24, 0xFB	; 251
     31a:	80 83       	st	Z, r24
		clear(ADMUX, MUX1);	//^
     31c:	80 81       	ld	r24, Z
     31e:	8d 7f       	andi	r24, 0xFD	; 253
     320:	80 83       	st	Z, r24
		set(ADMUX, MUX0);	//^
     322:	80 81       	ld	r24, Z
     324:	81 60       	ori	r24, 0x01	; 1
     326:	80 83       	st	Z, r24
     328:	08 95       	ret

0000032a <getADC>:
int ADC5 = 0;
int ADC6 = 0;
int conversion = 0;

void getADC() {
	if (conversion) {
     32a:	80 91 14 01 	lds	r24, 0x0114
     32e:	90 91 15 01 	lds	r25, 0x0115
     332:	89 2b       	or	r24, r25
     334:	09 f4       	brne	.+2      	; 0x338 <getADC+0xe>
     336:	55 c0       	rjmp	.+170    	; 0x3e2 <getADC+0xb8>
		switch (flag) {
     338:	80 91 32 01 	lds	r24, 0x0132
     33c:	90 91 33 01 	lds	r25, 0x0133
     340:	83 30       	cpi	r24, 0x03	; 3
     342:	91 05       	cpc	r25, r1
     344:	59 f1       	breq	.+86     	; 0x39c <getADC+0x72>
     346:	3c f4       	brge	.+14     	; 0x356 <getADC+0x2c>
     348:	81 30       	cpi	r24, 0x01	; 1
     34a:	91 05       	cpc	r25, r1
     34c:	a9 f0       	breq	.+42     	; 0x378 <getADC+0x4e>
     34e:	ec f4       	brge	.+58     	; 0x38a <getADC+0x60>
     350:	89 2b       	or	r24, r25
     352:	49 f0       	breq	.+18     	; 0x366 <getADC+0x3c>
     354:	46 c0       	rjmp	.+140    	; 0x3e2 <getADC+0xb8>
     356:	85 30       	cpi	r24, 0x05	; 5
     358:	91 05       	cpc	r25, r1
     35a:	91 f1       	breq	.+100    	; 0x3c0 <getADC+0x96>
     35c:	44 f1       	brlt	.+80     	; 0x3ae <getADC+0x84>
     35e:	06 97       	sbiw	r24, 0x06	; 6
     360:	09 f0       	breq	.+2      	; 0x364 <getADC+0x3a>
     362:	3f c0       	rjmp	.+126    	; 0x3e2 <getADC+0xb8>
     364:	36 c0       	rjmp	.+108    	; 0x3d2 <getADC+0xa8>
			case 0:
			ADC0 = ADC;
     366:	80 91 78 00 	lds	r24, 0x0078
     36a:	90 91 79 00 	lds	r25, 0x0079
     36e:	90 93 23 01 	sts	0x0123, r25
     372:	80 93 22 01 	sts	0x0122, r24
			break;
     376:	35 c0       	rjmp	.+106    	; 0x3e2 <getADC+0xb8>
			case 1:
			ADC1 = ADC;
     378:	80 91 78 00 	lds	r24, 0x0078
     37c:	90 91 79 00 	lds	r25, 0x0079
     380:	90 93 21 01 	sts	0x0121, r25
     384:	80 93 20 01 	sts	0x0120, r24
			break;
     388:	2c c0       	rjmp	.+88     	; 0x3e2 <getADC+0xb8>
			case 2:
			ADC2 = ADC;
     38a:	80 91 78 00 	lds	r24, 0x0078
     38e:	90 91 79 00 	lds	r25, 0x0079
     392:	90 93 1f 01 	sts	0x011F, r25
     396:	80 93 1e 01 	sts	0x011E, r24
			break;
     39a:	23 c0       	rjmp	.+70     	; 0x3e2 <getADC+0xb8>
			case 3:
			ADC3 = ADC;
     39c:	80 91 78 00 	lds	r24, 0x0078
     3a0:	90 91 79 00 	lds	r25, 0x0079
     3a4:	90 93 1d 01 	sts	0x011D, r25
     3a8:	80 93 1c 01 	sts	0x011C, r24
			break;
     3ac:	1a c0       	rjmp	.+52     	; 0x3e2 <getADC+0xb8>
			case 4:
			ADC4 = ADC;
     3ae:	80 91 78 00 	lds	r24, 0x0078
     3b2:	90 91 79 00 	lds	r25, 0x0079
     3b6:	90 93 1b 01 	sts	0x011B, r25
     3ba:	80 93 1a 01 	sts	0x011A, r24
			break;
     3be:	11 c0       	rjmp	.+34     	; 0x3e2 <getADC+0xb8>
			case 5:
			ADC5 = ADC;
     3c0:	80 91 78 00 	lds	r24, 0x0078
     3c4:	90 91 79 00 	lds	r25, 0x0079
     3c8:	90 93 19 01 	sts	0x0119, r25
     3cc:	80 93 18 01 	sts	0x0118, r24
			break;
     3d0:	08 c0       	rjmp	.+16     	; 0x3e2 <getADC+0xb8>
			case 6:
			ADC6 = ADC;
     3d2:	80 91 78 00 	lds	r24, 0x0078
     3d6:	90 91 79 00 	lds	r25, 0x0079
     3da:	90 93 17 01 	sts	0x0117, r25
     3de:	80 93 16 01 	sts	0x0116, r24
			break;
		}
	}
	clear(ADCSRA, ADEN);	//Enable/Start conversion
     3e2:	ea e7       	ldi	r30, 0x7A	; 122
     3e4:	f0 e0       	ldi	r31, 0x00	; 0
     3e6:	80 81       	ld	r24, Z
     3e8:	8f 77       	andi	r24, 0x7F	; 127
     3ea:	80 83       	st	Z, r24
	clear(ADCSRA, ADSC);	//^
     3ec:	80 81       	ld	r24, Z
     3ee:	8f 7b       	andi	r24, 0xBF	; 191
     3f0:	80 83       	st	Z, r24
	clear(ADCSRA, ADATE);
     3f2:	80 81       	ld	r24, Z
     3f4:	8f 7d       	andi	r24, 0xDF	; 223
     3f6:	80 83       	st	Z, r24
	clear(ADCSRA, ADIF);
     3f8:	80 81       	ld	r24, Z
     3fa:	8f 7e       	andi	r24, 0xEF	; 239
     3fc:	80 83       	st	Z, r24
	if (flag >= 0 && flag < 7) {
     3fe:	80 91 32 01 	lds	r24, 0x0132
     402:	90 91 33 01 	lds	r25, 0x0133
     406:	87 30       	cpi	r24, 0x07	; 7
     408:	91 05       	cpc	r25, r1
     40a:	58 f4       	brcc	.+22     	; 0x422 <getADC+0xf8>
		flag = (flag + 1) % 7;
     40c:	01 96       	adiw	r24, 0x01	; 1
     40e:	67 e0       	ldi	r22, 0x07	; 7
     410:	70 e0       	ldi	r23, 0x00	; 0
     412:	0e 94 18 17 	call	0x2e30	; 0x2e30 <__divmodhi4>
     416:	80 93 32 01 	sts	0x0132, r24
     41a:	90 93 33 01 	sts	0x0133, r25
		chooseInput(flag);
     41e:	0e 94 08 01 	call	0x210	; 0x210 <chooseInput>
	}
	set(ADCSRA, ADATE);	//Set trigger to free-running mode
     422:	ea e7       	ldi	r30, 0x7A	; 122
     424:	f0 e0       	ldi	r31, 0x00	; 0
     426:	80 81       	ld	r24, Z
     428:	80 62       	ori	r24, 0x20	; 32
     42a:	80 83       	st	Z, r24
	set(ADCSRA, ADEN);	//Enable/Start conversion
     42c:	80 81       	ld	r24, Z
     42e:	80 68       	ori	r24, 0x80	; 128
     430:	80 83       	st	Z, r24
	set(ADCSRA, ADSC);	//^
     432:	80 81       	ld	r24, Z
     434:	80 64       	ori	r24, 0x40	; 64
     436:	80 83       	st	Z, r24
	
	set(ADCSRA, ADIF);	//Enable reading results
     438:	80 81       	ld	r24, Z
     43a:	80 61       	ori	r24, 0x10	; 16
     43c:	80 83       	st	Z, r24
	conversion = 0;
     43e:	10 92 15 01 	sts	0x0115, r1
     442:	10 92 14 01 	sts	0x0114, r1
	ADCarr[0] = ADC0;
     446:	80 91 22 01 	lds	r24, 0x0122
     44a:	90 91 23 01 	lds	r25, 0x0123
     44e:	90 93 25 01 	sts	0x0125, r25
     452:	80 93 24 01 	sts	0x0124, r24
	ADCarr[1] = ADC1;
     456:	80 91 20 01 	lds	r24, 0x0120
     45a:	90 91 21 01 	lds	r25, 0x0121
     45e:	90 93 27 01 	sts	0x0127, r25
     462:	80 93 26 01 	sts	0x0126, r24
	ADCarr[2] = ADC2;
     466:	80 91 1e 01 	lds	r24, 0x011E
     46a:	90 91 1f 01 	lds	r25, 0x011F
     46e:	90 93 29 01 	sts	0x0129, r25
     472:	80 93 28 01 	sts	0x0128, r24
	ADCarr[3] = ADC3;
     476:	80 91 1c 01 	lds	r24, 0x011C
     47a:	90 91 1d 01 	lds	r25, 0x011D
     47e:	90 93 2b 01 	sts	0x012B, r25
     482:	80 93 2a 01 	sts	0x012A, r24
	ADCarr[4] = ADC4;
     486:	80 91 1a 01 	lds	r24, 0x011A
     48a:	90 91 1b 01 	lds	r25, 0x011B
     48e:	90 93 2d 01 	sts	0x012D, r25
     492:	80 93 2c 01 	sts	0x012C, r24
	ADCarr[5] = ADC5;
     496:	80 91 18 01 	lds	r24, 0x0118
     49a:	90 91 19 01 	lds	r25, 0x0119
     49e:	90 93 2f 01 	sts	0x012F, r25
     4a2:	80 93 2e 01 	sts	0x012E, r24
	ADCarr[6] = ADC6;
     4a6:	80 91 16 01 	lds	r24, 0x0116
     4aa:	90 91 17 01 	lds	r25, 0x0117
     4ae:	90 93 31 01 	sts	0x0131, r25
     4b2:	80 93 30 01 	sts	0x0130, r24
     4b6:	08 95       	ret

000004b8 <reportADC>:
	
	
}

void reportADC() {
	set(DDRF,7);
     4b8:	87 9a       	sbi	0x10, 7	; 16
	m_red(ON);
     4ba:	6e 9a       	sbi	0x0d, 6	; 13
     4bc:	76 98       	cbi	0x0e, 6	; 14
	m_green(ON);
     4be:	6a 9a       	sbi	0x0d, 2	; 13
     4c0:	72 98       	cbi	0x0e, 2	; 14

	m_usb_init(); // connect usb
     4c2:	0e 94 81 0e 	call	0x1d02	; 0x1d02 <m_usb_init>
	while(!m_usb_isconnected());  //wait for connection
     4c6:	0e 94 9a 0e 	call	0x1d34	; 0x1d34 <m_usb_isconnected>
     4ca:	88 23       	and	r24, r24
     4cc:	e1 f3       	breq	.-8      	; 0x4c6 <reportADC+0xe>

	m_red(OFF);
     4ce:	6e 9a       	sbi	0x0d, 6	; 13
     4d0:	76 9a       	sbi	0x0e, 6	; 14
	m_green(OFF);
     4d2:	6a 9a       	sbi	0x0d, 2	; 13
     4d4:	72 9a       	sbi	0x0e, 2	; 14

	char rx_buffer; //computer interactions
	int index = 0;
	int maxval = 0;
	float deg = 0.0;
     4d6:	41 2c       	mov	r4, r1
     4d8:	51 2c       	mov	r5, r1
     4da:	32 01       	movw	r6, r4
     4dc:	0f 2e       	mov	r0, r31
     4de:	f4 e2       	ldi	r31, 0x24	; 36
     4e0:	ef 2e       	mov	r14, r31
     4e2:	f1 e0       	ldi	r31, 0x01	; 1
     4e4:	ff 2e       	mov	r15, r31
     4e6:	f0 2d       	mov	r31, r0
while(1) {
	getADC();
	index = 0;
	maxval = 0;
	//m_green(TOGGLE);
	for(int i = 0; i < 7; i++) {
     4e8:	00 e0       	ldi	r16, 0x00	; 0
     4ea:	10 e0       	ldi	r17, 0x00	; 0
			maxval = ADCarr[i];
		}
	}
	switch (index) {
		case 0:
		diff = ADCarr[0] - ADCarr[6];
     4ec:	0f 2e       	mov	r0, r31
     4ee:	f0 e3       	ldi	r31, 0x30	; 48
     4f0:	cf 2e       	mov	r12, r31
     4f2:	f1 e0       	ldi	r31, 0x01	; 1
     4f4:	df 2e       	mov	r13, r31
     4f6:	f0 2d       	mov	r31, r0
		toggle(PORTF,7);
		if(rx_buffer == 1) {  			//computer wants ir buffer
			//write ir buffer as concatenated hex:  i.e. f0f1f4f5
			m_usb_tx_int(ADCarr[0]);
			m_usb_tx_char('\t');
			m_usb_tx_int(ADCarr[1]);
     4f8:	0f 2e       	mov	r0, r31
     4fa:	f6 e2       	ldi	r31, 0x26	; 38
     4fc:	8f 2e       	mov	r8, r31
     4fe:	f1 e0       	ldi	r31, 0x01	; 1
     500:	9f 2e       	mov	r9, r31
     502:	f0 2d       	mov	r31, r0
			m_usb_tx_char('\t');
			m_usb_tx_int(ADCarr[2]);
     504:	0f 2e       	mov	r0, r31
     506:	f8 e2       	ldi	r31, 0x28	; 40
     508:	af 2e       	mov	r10, r31
     50a:	f1 e0       	ldi	r31, 0x01	; 1
     50c:	bf 2e       	mov	r11, r31
     50e:	f0 2d       	mov	r31, r0
	float diff = 0.0;

	
	
while(1) {
	getADC();
     510:	0e 94 95 01 	call	0x32a	; 0x32a <getADC>
     514:	f7 01       	movw	r30, r14
	index = 0;
	maxval = 0;
	//m_green(TOGGLE);
	for(int i = 0; i < 7; i++) {
     516:	c8 01       	movw	r24, r16
	
	
while(1) {
	getADC();
	index = 0;
	maxval = 0;
     518:	a8 01       	movw	r20, r16

	
	
while(1) {
	getADC();
	index = 0;
     51a:	e8 01       	movw	r28, r16
	maxval = 0;
	//m_green(TOGGLE);
	for(int i = 0; i < 7; i++) {
		if (ADCarr[i] > maxval) {
     51c:	21 91       	ld	r18, Z+
     51e:	31 91       	ld	r19, Z+
     520:	42 17       	cp	r20, r18
     522:	53 07       	cpc	r21, r19
     524:	14 f4       	brge	.+4      	; 0x52a <reportADC+0x72>
			index = i;
			maxval = ADCarr[i];
     526:	a9 01       	movw	r20, r18
	getADC();
	index = 0;
	maxval = 0;
	//m_green(TOGGLE);
	for(int i = 0; i < 7; i++) {
		if (ADCarr[i] > maxval) {
     528:	ec 01       	movw	r28, r24
while(1) {
	getADC();
	index = 0;
	maxval = 0;
	//m_green(TOGGLE);
	for(int i = 0; i < 7; i++) {
     52a:	01 96       	adiw	r24, 0x01	; 1
     52c:	87 30       	cpi	r24, 0x07	; 7
     52e:	91 05       	cpc	r25, r1
     530:	a9 f7       	brne	.-22     	; 0x51c <reportADC+0x64>
		if (ADCarr[i] > maxval) {
			index = i;
			maxval = ADCarr[i];
		}
	}
	switch (index) {
     532:	20 97       	sbiw	r28, 0x00	; 0
     534:	29 f0       	breq	.+10     	; 0x540 <reportADC+0x88>
     536:	c6 30       	cpi	r28, 0x06	; 6
     538:	d1 05       	cpc	r29, r1
     53a:	09 f0       	breq	.+2      	; 0x53e <reportADC+0x86>
     53c:	47 c0       	rjmp	.+142    	; 0x5cc <reportADC+0x114>
     53e:	23 c0       	rjmp	.+70     	; 0x586 <reportADC+0xce>
		case 0:
		diff = ADCarr[0] - ADCarr[6];
     540:	f7 01       	movw	r30, r14
     542:	60 81       	ld	r22, Z
     544:	71 81       	ldd	r23, Z+1	; 0x01
     546:	f6 01       	movw	r30, r12
     548:	80 81       	ld	r24, Z
     54a:	91 81       	ldd	r25, Z+1	; 0x01
     54c:	68 1b       	sub	r22, r24
     54e:	79 0b       	sbc	r23, r25
     550:	88 27       	eor	r24, r24
     552:	77 fd       	sbrc	r23, 7
     554:	80 95       	com	r24
     556:	98 2f       	mov	r25, r24
     558:	0e 94 c2 14 	call	0x2984	; 0x2984 <__floatsisf>
		deg = exp(-1.0*fabs(((float)diff))/400.0);
     55c:	dc 01       	movw	r26, r24
     55e:	cb 01       	movw	r24, r22
     560:	bf 77       	andi	r27, 0x7F	; 127
     562:	bc 01       	movw	r22, r24
     564:	cd 01       	movw	r24, r26
     566:	90 58       	subi	r25, 0x80	; 128
     568:	20 e0       	ldi	r18, 0x00	; 0
     56a:	30 e0       	ldi	r19, 0x00	; 0
     56c:	48 ec       	ldi	r20, 0xC8	; 200
     56e:	53 e4       	ldi	r21, 0x43	; 67
     570:	0e 94 f6 13 	call	0x27ec	; 0x27ec <__divsf3>
     574:	0e 94 63 14 	call	0x28c6	; 0x28c6 <exp>
     578:	2b 01       	movw	r4, r22
     57a:	3c 01       	movw	r6, r24
		m_green(ON);
     57c:	6a 9a       	sbi	0x0d, 2	; 13
     57e:	72 98       	cbi	0x0e, 2	; 14
		m_red(OFF);
     580:	6e 9a       	sbi	0x0d, 6	; 13
     582:	76 9a       	sbi	0x0e, 6	; 14
     584:	27 c0       	rjmp	.+78     	; 0x5d4 <reportADC+0x11c>
		break;
		case 6:
		diff = ADCarr[6] - ADCarr[0];
     586:	f6 01       	movw	r30, r12
     588:	60 81       	ld	r22, Z
     58a:	71 81       	ldd	r23, Z+1	; 0x01
     58c:	f7 01       	movw	r30, r14
     58e:	80 81       	ld	r24, Z
     590:	91 81       	ldd	r25, Z+1	; 0x01
     592:	68 1b       	sub	r22, r24
     594:	79 0b       	sbc	r23, r25
     596:	88 27       	eor	r24, r24
     598:	77 fd       	sbrc	r23, 7
     59a:	80 95       	com	r24
     59c:	98 2f       	mov	r25, r24
     59e:	0e 94 c2 14 	call	0x2984	; 0x2984 <__floatsisf>
		deg = exp(-1.0*fabs(((float)diff))/400.0);
     5a2:	dc 01       	movw	r26, r24
     5a4:	cb 01       	movw	r24, r22
     5a6:	bf 77       	andi	r27, 0x7F	; 127
     5a8:	bc 01       	movw	r22, r24
     5aa:	cd 01       	movw	r24, r26
     5ac:	90 58       	subi	r25, 0x80	; 128
     5ae:	20 e0       	ldi	r18, 0x00	; 0
     5b0:	30 e0       	ldi	r19, 0x00	; 0
     5b2:	48 ec       	ldi	r20, 0xC8	; 200
     5b4:	53 e4       	ldi	r21, 0x43	; 67
     5b6:	0e 94 f6 13 	call	0x27ec	; 0x27ec <__divsf3>
     5ba:	0e 94 63 14 	call	0x28c6	; 0x28c6 <exp>
     5be:	2b 01       	movw	r4, r22
     5c0:	3c 01       	movw	r6, r24
		m_green(OFF);
     5c2:	6a 9a       	sbi	0x0d, 2	; 13
     5c4:	72 9a       	sbi	0x0e, 2	; 14
		m_red(ON);
     5c6:	6e 9a       	sbi	0x0d, 6	; 13
     5c8:	76 98       	cbi	0x0e, 6	; 14
     5ca:	04 c0       	rjmp	.+8      	; 0x5d4 <reportADC+0x11c>
		break;
		default:
		m_green(ON);
     5cc:	6a 9a       	sbi	0x0d, 2	; 13
     5ce:	72 98       	cbi	0x0e, 2	; 14
		m_red(ON);
     5d0:	6e 9a       	sbi	0x0d, 6	; 13
     5d2:	76 98       	cbi	0x0e, 6	; 14
	}
	while(!m_usb_rx_available());  	//wait for an indication from the computer
     5d4:	0e 94 bb 0e 	call	0x1d76	; 0x1d76 <m_usb_rx_available>
     5d8:	88 23       	and	r24, r24
     5da:	e1 f3       	breq	.-8      	; 0x5d4 <reportADC+0x11c>
		rx_buffer = m_usb_rx_char();  	//grab the computer packet
     5dc:	0e 94 9d 0e 	call	0x1d3a	; 0x1d3a <m_usb_rx_char>
     5e0:	38 2e       	mov	r3, r24

		m_usb_rx_flush();  				//clear buffer
     5e2:	0e 94 ca 0e 	call	0x1d94	; 0x1d94 <m_usb_rx_flush>

		toggle(PORTF,7);
     5e6:	81 b3       	in	r24, 0x11	; 17
     5e8:	80 58       	subi	r24, 0x80	; 128
     5ea:	81 bb       	out	0x11, r24	; 17
		if(rx_buffer == 1) {  			//computer wants ir buffer
     5ec:	f1 e0       	ldi	r31, 0x01	; 1
     5ee:	3f 12       	cpse	r3, r31
     5f0:	51 c0       	rjmp	.+162    	; 0x694 <reportADC+0x1dc>
			//write ir buffer as concatenated hex:  i.e. f0f1f4f5
			m_usb_tx_int(ADCarr[0]);
     5f2:	f7 01       	movw	r30, r14
     5f4:	80 81       	ld	r24, Z
     5f6:	91 81       	ldd	r25, Z+1	; 0x01
     5f8:	0e 94 02 11 	call	0x2204	; 0x2204 <m_usb_tx_int>
			m_usb_tx_char('\t');
     5fc:	89 e0       	ldi	r24, 0x09	; 9
     5fe:	0e 94 e0 0e 	call	0x1dc0	; 0x1dc0 <m_usb_tx_char>
			m_usb_tx_int(ADCarr[1]);
     602:	f4 01       	movw	r30, r8
     604:	80 81       	ld	r24, Z
     606:	91 81       	ldd	r25, Z+1	; 0x01
     608:	0e 94 02 11 	call	0x2204	; 0x2204 <m_usb_tx_int>
			m_usb_tx_char('\t');
     60c:	89 e0       	ldi	r24, 0x09	; 9
     60e:	0e 94 e0 0e 	call	0x1dc0	; 0x1dc0 <m_usb_tx_char>
			m_usb_tx_int(ADCarr[2]);
     612:	f5 01       	movw	r30, r10
     614:	80 81       	ld	r24, Z
     616:	91 81       	ldd	r25, Z+1	; 0x01
     618:	0e 94 02 11 	call	0x2204	; 0x2204 <m_usb_tx_int>
			m_usb_tx_char('\t');
     61c:	89 e0       	ldi	r24, 0x09	; 9
     61e:	0e 94 e0 0e 	call	0x1dc0	; 0x1dc0 <m_usb_tx_char>
			m_usb_tx_int(ADCarr[3]);
     622:	ea e2       	ldi	r30, 0x2A	; 42
     624:	f1 e0       	ldi	r31, 0x01	; 1
     626:	80 81       	ld	r24, Z
     628:	91 81       	ldd	r25, Z+1	; 0x01
     62a:	0e 94 02 11 	call	0x2204	; 0x2204 <m_usb_tx_int>
			m_usb_tx_char('\t');
     62e:	89 e0       	ldi	r24, 0x09	; 9
     630:	0e 94 e0 0e 	call	0x1dc0	; 0x1dc0 <m_usb_tx_char>
			m_usb_tx_int(ADCarr[4]);
     634:	ec e2       	ldi	r30, 0x2C	; 44
     636:	f1 e0       	ldi	r31, 0x01	; 1
     638:	80 81       	ld	r24, Z
     63a:	91 81       	ldd	r25, Z+1	; 0x01
     63c:	0e 94 02 11 	call	0x2204	; 0x2204 <m_usb_tx_int>
			m_usb_tx_char('\t');
     640:	89 e0       	ldi	r24, 0x09	; 9
     642:	0e 94 e0 0e 	call	0x1dc0	; 0x1dc0 <m_usb_tx_char>
			m_usb_tx_int(ADCarr[5]);
     646:	ee e2       	ldi	r30, 0x2E	; 46
     648:	f1 e0       	ldi	r31, 0x01	; 1
     64a:	80 81       	ld	r24, Z
     64c:	91 81       	ldd	r25, Z+1	; 0x01
     64e:	0e 94 02 11 	call	0x2204	; 0x2204 <m_usb_tx_int>
			m_usb_tx_char('\t');
     652:	89 e0       	ldi	r24, 0x09	; 9
     654:	0e 94 e0 0e 	call	0x1dc0	; 0x1dc0 <m_usb_tx_char>
			m_usb_tx_int(ADCarr[6]);
     658:	f6 01       	movw	r30, r12
     65a:	80 81       	ld	r24, Z
     65c:	91 81       	ldd	r25, Z+1	; 0x01
     65e:	0e 94 02 11 	call	0x2204	; 0x2204 <m_usb_tx_int>
			m_usb_tx_char('\t');
     662:	89 e0       	ldi	r24, 0x09	; 9
     664:	0e 94 e0 0e 	call	0x1dc0	; 0x1dc0 <m_usb_tx_char>
			m_usb_tx_int(index);
     668:	ce 01       	movw	r24, r28
     66a:	0e 94 02 11 	call	0x2204	; 0x2204 <m_usb_tx_int>
			m_usb_tx_char('\t');
     66e:	89 e0       	ldi	r24, 0x09	; 9
     670:	0e 94 e0 0e 	call	0x1dc0	; 0x1dc0 <m_usb_tx_char>
			m_usb_tx_int((int)(deg*100));
     674:	20 e0       	ldi	r18, 0x00	; 0
     676:	30 e0       	ldi	r19, 0x00	; 0
     678:	48 ec       	ldi	r20, 0xC8	; 200
     67a:	52 e4       	ldi	r21, 0x42	; 66
     67c:	c3 01       	movw	r24, r6
     67e:	b2 01       	movw	r22, r4
     680:	0e 94 44 16 	call	0x2c88	; 0x2c88 <__mulsf3>
     684:	0e 94 8f 14 	call	0x291e	; 0x291e <__fixsfsi>
     688:	cb 01       	movw	r24, r22
     68a:	0e 94 02 11 	call	0x2204	; 0x2204 <m_usb_tx_int>
			m_usb_tx_char('\t');
     68e:	89 e0       	ldi	r24, 0x09	; 9
     690:	0e 94 e0 0e 	call	0x1dc0	; 0x1dc0 <m_usb_tx_char>

		}
		m_usb_tx_char('\n');  //MATLAB serial command reads 1 line at a time
     694:	8a e0       	ldi	r24, 0x0A	; 10
     696:	0e 94 e0 0e 	call	0x1dc0	; 0x1dc0 <m_usb_tx_char>
		}
     69a:	3a cf       	rjmp	.-396    	; 0x510 <reportADC+0x58>

0000069c <turn>:
		clear(PORTB,2);
		set(PORTB,3);
	}
}

void turn(int dir,float speed, float degree) {
     69c:	8f 92       	push	r8
     69e:	9f 92       	push	r9
     6a0:	af 92       	push	r10
     6a2:	bf 92       	push	r11
     6a4:	cf 92       	push	r12
     6a6:	df 92       	push	r13
     6a8:	ef 92       	push	r14
     6aa:	ff 92       	push	r15
     6ac:	0f 93       	push	r16
     6ae:	1f 93       	push	r17
     6b0:	cf 93       	push	r28
     6b2:	df 93       	push	r29
     6b4:	6a 01       	movw	r12, r20
     6b6:	7b 01       	movw	r14, r22
     6b8:	48 01       	movw	r8, r16
     6ba:	59 01       	movw	r10, r18
	set(PORTB,2);
     6bc:	2a 9a       	sbi	0x05, 2	; 5
	set(PORTB,3);
     6be:	2b 9a       	sbi	0x05, 3	; 5
	if (dir == LEFT) {
     6c0:	81 30       	cpi	r24, 0x01	; 1
     6c2:	91 05       	cpc	r25, r1
     6c4:	81 f5       	brne	.+96     	; 0x726 <turn+0x8a>
		OCR3A = (unsigned int) ((float)ICR3 * speed);
     6c6:	60 91 96 00 	lds	r22, 0x0096
     6ca:	70 91 97 00 	lds	r23, 0x0097
     6ce:	80 e0       	ldi	r24, 0x00	; 0
     6d0:	90 e0       	ldi	r25, 0x00	; 0
     6d2:	0e 94 c0 14 	call	0x2980	; 0x2980 <__floatunsisf>
     6d6:	a7 01       	movw	r20, r14
     6d8:	96 01       	movw	r18, r12
     6da:	0e 94 44 16 	call	0x2c88	; 0x2c88 <__mulsf3>
     6de:	0e 94 94 14 	call	0x2928	; 0x2928 <__fixunssfsi>
     6e2:	70 93 99 00 	sts	0x0099, r23
     6e6:	60 93 98 00 	sts	0x0098, r22
		OCR1B = (unsigned int) (degree * speed * OCR1A);
     6ea:	c0 91 88 00 	lds	r28, 0x0088
     6ee:	d0 91 89 00 	lds	r29, 0x0089
     6f2:	a7 01       	movw	r20, r14
     6f4:	96 01       	movw	r18, r12
     6f6:	c5 01       	movw	r24, r10
     6f8:	b4 01       	movw	r22, r8
     6fa:	0e 94 44 16 	call	0x2c88	; 0x2c88 <__mulsf3>
     6fe:	6b 01       	movw	r12, r22
     700:	7c 01       	movw	r14, r24
     702:	be 01       	movw	r22, r28
     704:	80 e0       	ldi	r24, 0x00	; 0
     706:	90 e0       	ldi	r25, 0x00	; 0
     708:	0e 94 c0 14 	call	0x2980	; 0x2980 <__floatunsisf>
     70c:	9b 01       	movw	r18, r22
     70e:	ac 01       	movw	r20, r24
     710:	c7 01       	movw	r24, r14
     712:	b6 01       	movw	r22, r12
     714:	0e 94 44 16 	call	0x2c88	; 0x2c88 <__mulsf3>
     718:	0e 94 94 14 	call	0x2928	; 0x2928 <__fixunssfsi>
     71c:	70 93 8b 00 	sts	0x008B, r23
     720:	60 93 8a 00 	sts	0x008A, r22
     724:	31 c0       	rjmp	.+98     	; 0x788 <turn+0xec>
	}
	
		if (dir == RIGHT) {
     726:	89 2b       	or	r24, r25
     728:	79 f5       	brne	.+94     	; 0x788 <turn+0xec>
			OCR3A = (unsigned int) (degree * speed * ICR3);
     72a:	c0 91 96 00 	lds	r28, 0x0096
     72e:	d0 91 97 00 	lds	r29, 0x0097
     732:	9a 01       	movw	r18, r20
     734:	ab 01       	movw	r20, r22
     736:	c5 01       	movw	r24, r10
     738:	b4 01       	movw	r22, r8
     73a:	0e 94 44 16 	call	0x2c88	; 0x2c88 <__mulsf3>
     73e:	4b 01       	movw	r8, r22
     740:	5c 01       	movw	r10, r24
     742:	be 01       	movw	r22, r28
     744:	80 e0       	ldi	r24, 0x00	; 0
     746:	90 e0       	ldi	r25, 0x00	; 0
     748:	0e 94 c0 14 	call	0x2980	; 0x2980 <__floatunsisf>
     74c:	9b 01       	movw	r18, r22
     74e:	ac 01       	movw	r20, r24
     750:	c5 01       	movw	r24, r10
     752:	b4 01       	movw	r22, r8
     754:	0e 94 44 16 	call	0x2c88	; 0x2c88 <__mulsf3>
     758:	0e 94 94 14 	call	0x2928	; 0x2928 <__fixunssfsi>
     75c:	70 93 99 00 	sts	0x0099, r23
     760:	60 93 98 00 	sts	0x0098, r22
			OCR1B = (unsigned int) ((float) OCR1A * speed);
     764:	60 91 88 00 	lds	r22, 0x0088
     768:	70 91 89 00 	lds	r23, 0x0089
     76c:	80 e0       	ldi	r24, 0x00	; 0
     76e:	90 e0       	ldi	r25, 0x00	; 0
     770:	0e 94 c0 14 	call	0x2980	; 0x2980 <__floatunsisf>
     774:	a7 01       	movw	r20, r14
     776:	96 01       	movw	r18, r12
     778:	0e 94 44 16 	call	0x2c88	; 0x2c88 <__mulsf3>
     77c:	0e 94 94 14 	call	0x2928	; 0x2928 <__fixunssfsi>
     780:	70 93 8b 00 	sts	0x008B, r23
     784:	60 93 8a 00 	sts	0x008A, r22
		}
}
     788:	df 91       	pop	r29
     78a:	cf 91       	pop	r28
     78c:	1f 91       	pop	r17
     78e:	0f 91       	pop	r16
     790:	ff 90       	pop	r15
     792:	ef 90       	pop	r14
     794:	df 90       	pop	r13
     796:	cf 90       	pop	r12
     798:	bf 90       	pop	r11
     79a:	af 90       	pop	r10
     79c:	9f 90       	pop	r9
     79e:	8f 90       	pop	r8
     7a0:	08 95       	ret

000007a2 <reverse>:

void reverse(){
	OCR1B = OCR1A;
     7a2:	80 91 88 00 	lds	r24, 0x0088
     7a6:	90 91 89 00 	lds	r25, 0x0089
     7aa:	90 93 8b 00 	sts	0x008B, r25
     7ae:	80 93 8a 00 	sts	0x008A, r24
	OCR3A = ICR3;
     7b2:	80 91 96 00 	lds	r24, 0x0096
     7b6:	90 91 97 00 	lds	r25, 0x0097
     7ba:	90 93 99 00 	sts	0x0099, r25
     7be:	80 93 98 00 	sts	0x0098, r24
	clear(PORTB,2);
     7c2:	2a 98       	cbi	0x05, 2	; 5
	clear(PORTB,3);
     7c4:	2b 98       	cbi	0x05, 3	; 5
     7c6:	08 95       	ret

000007c8 <drive_to_puck>:
	//TODO: Implement code
}

void drive_to_puck() {
	
	OCR1B = 0;
     7c8:	10 92 8b 00 	sts	0x008B, r1
     7cc:	10 92 8a 00 	sts	0x008A, r1
	OCR3A = 0;
     7d0:	10 92 99 00 	sts	0x0099, r1
     7d4:	10 92 98 00 	sts	0x0098, r1
	m_red(ON);
     7d8:	6e 9a       	sbi	0x0d, 6	; 13
     7da:	76 98       	cbi	0x0e, 6	; 14
	set(DDRF,7);
     7dc:	87 9a       	sbi	0x10, 7	; 16
	int index = 0;
	int maxval = 0;
	int diff = 0;
	float deg = 0.0;
	
	m_green(OFF);
     7de:	6a 9a       	sbi	0x0d, 2	; 13
     7e0:	72 9a       	sbi	0x0e, 2	; 14
	m_red(OFF);
     7e2:	6e 9a       	sbi	0x0d, 6	; 13
     7e4:	76 9a       	sbi	0x0e, 6	; 14
     7e6:	c4 e2       	ldi	r28, 0x24	; 36
     7e8:	d1 e0       	ldi	r29, 0x01	; 1
	while(1) {
		getADC();
		index = 0;
		maxval = 0;
		for(int i = 0; i < 7; i++) {
     7ea:	00 e0       	ldi	r16, 0x00	; 0
     7ec:	10 e0       	ldi	r17, 0x00	; 0
	float deg = 0.0;
	
	m_green(OFF);
	m_red(OFF);
	while(1) {
		getADC();
     7ee:	0e 94 95 01 	call	0x32a	; 0x32a <getADC>
     7f2:	fe 01       	movw	r30, r28
		index = 0;
		maxval = 0;
		for(int i = 0; i < 7; i++) {
     7f4:	c8 01       	movw	r24, r16
	m_green(OFF);
	m_red(OFF);
	while(1) {
		getADC();
		index = 0;
		maxval = 0;
     7f6:	a8 01       	movw	r20, r16
	
	m_green(OFF);
	m_red(OFF);
	while(1) {
		getADC();
		index = 0;
     7f8:	b8 01       	movw	r22, r16
		maxval = 0;
		for(int i = 0; i < 7; i++) {
			if (ADCarr[i] > maxval) {
     7fa:	21 91       	ld	r18, Z+
     7fc:	31 91       	ld	r19, Z+
     7fe:	42 17       	cp	r20, r18
     800:	53 07       	cpc	r21, r19
     802:	14 f4       	brge	.+4      	; 0x808 <drive_to_puck+0x40>
				index = i;
				maxval = ADCarr[i];
     804:	a9 01       	movw	r20, r18
	while(1) {
		getADC();
		index = 0;
		maxval = 0;
		for(int i = 0; i < 7; i++) {
			if (ADCarr[i] > maxval) {
     806:	bc 01       	movw	r22, r24
	m_red(OFF);
	while(1) {
		getADC();
		index = 0;
		maxval = 0;
		for(int i = 0; i < 7; i++) {
     808:	01 96       	adiw	r24, 0x01	; 1
     80a:	87 30       	cpi	r24, 0x07	; 7
     80c:	91 05       	cpc	r25, r1
     80e:	a9 f7       	brne	.-22     	; 0x7fa <drive_to_puck+0x32>
			if (ADCarr[i] > maxval) {
				index = i;
				maxval = ADCarr[i];
			}
		}
		switch (index) {
     810:	61 15       	cp	r22, r1
     812:	71 05       	cpc	r23, r1
     814:	21 f0       	breq	.+8      	; 0x81e <drive_to_puck+0x56>
     816:	66 30       	cpi	r22, 0x06	; 6
     818:	71 05       	cpc	r23, r1
     81a:	59 f4       	brne	.+22     	; 0x832 <drive_to_puck+0x6a>
     81c:	05 c0       	rjmp	.+10     	; 0x828 <drive_to_puck+0x60>
			case 0: 
				diff = ADCarr[0] - ADCarr[6];
				deg = exp(-1.0*(fabs((float)diff))/400.0);
				//turn(RIGHT,0.2,deg);
				m_green(ON);
     81e:	6a 9a       	sbi	0x0d, 2	; 13
     820:	72 98       	cbi	0x0e, 2	; 14
				m_red(OFF);
     822:	6e 9a       	sbi	0x0d, 6	; 13
     824:	76 9a       	sbi	0x0e, 6	; 14
     826:	09 c0       	rjmp	.+18     	; 0x83a <drive_to_puck+0x72>
				break;
			case 6:
				diff = ADCarr[6] - ADCarr[0];
				deg = exp(-1.0*(fabs((float)diff))/400.0);
				//turn(LEFT,0.2,deg);
				m_green(OFF);
     828:	6a 9a       	sbi	0x0d, 2	; 13
     82a:	72 9a       	sbi	0x0e, 2	; 14
				m_red(ON);
     82c:	6e 9a       	sbi	0x0d, 6	; 13
     82e:	76 98       	cbi	0x0e, 6	; 14
     830:	04 c0       	rjmp	.+8      	; 0x83a <drive_to_puck+0x72>
				break;
			default:
				m_red(ON);
     832:	6e 9a       	sbi	0x0d, 6	; 13
     834:	76 98       	cbi	0x0e, 6	; 14
				m_green(ON);
     836:	6a 9a       	sbi	0x0d, 2	; 13
     838:	72 98       	cbi	0x0e, 2	; 14
				break;
		}
		toggle(PORTF,7);
     83a:	81 b3       	in	r24, 0x11	; 17
     83c:	80 58       	subi	r24, 0x80	; 128
     83e:	81 bb       	out	0x11, r24	; 17
	}
     840:	d6 cf       	rjmp	.-84     	; 0x7ee <drive_to_puck+0x26>

00000842 <drive_to_point2>:
	clear(DDRF,7);
}

void drive_to_point2(int x, int y) {
     842:	2f 92       	push	r2
     844:	3f 92       	push	r3
     846:	4f 92       	push	r4
     848:	5f 92       	push	r5
     84a:	6f 92       	push	r6
     84c:	7f 92       	push	r7
     84e:	8f 92       	push	r8
     850:	9f 92       	push	r9
     852:	af 92       	push	r10
     854:	bf 92       	push	r11
     856:	cf 92       	push	r12
     858:	df 92       	push	r13
     85a:	ef 92       	push	r14
     85c:	ff 92       	push	r15
     85e:	0f 93       	push	r16
     860:	1f 93       	push	r17
     862:	cf 93       	push	r28
     864:	df 93       	push	r29
     866:	cd b7       	in	r28, 0x3d	; 61
     868:	de b7       	in	r29, 0x3e	; 62
     86a:	2d 97       	sbiw	r28, 0x0d	; 13
     86c:	0f b6       	in	r0, 0x3f	; 63
     86e:	f8 94       	cli
     870:	de bf       	out	0x3e, r29	; 62
     872:	0f be       	out	0x3f, r0	; 63
     874:	cd bf       	out	0x3d, r28	; 61
     876:	2c 01       	movw	r4, r24
     878:	4b 01       	movw	r8, r22
	m_green(ON);
     87a:	6a 9a       	sbi	0x0d, 2	; 13
     87c:	72 98       	cbi	0x0e, 2	; 14
	//m_wait(500);
	float speed_cap = 0.5;
	localize(data);
     87e:	85 ea       	ldi	r24, 0xA5	; 165
     880:	91 e0       	ldi	r25, 0x01	; 1
     882:	0e 94 94 0a 	call	0x1528	; 0x1528 <localize>
	int dir = 0;
	while(1) {
		localize(data);
		
		//Set angle difference to be between -180 and 180
		angle_dif = (((int) (((data[2] + 90.0) * -1.0) - (float)(atan2((double)y-data[1],(double)x-data[0]))*180.0/3.14)) + 900) % 360 - 180;
     886:	c2 01       	movw	r24, r4
     888:	aa 27       	eor	r26, r26
     88a:	97 fd       	sbrc	r25, 7
     88c:	a0 95       	com	r26
     88e:	ba 2f       	mov	r27, r26
     890:	8e 83       	std	Y+6, r24	; 0x06
     892:	9f 83       	std	Y+7, r25	; 0x07
     894:	a8 87       	std	Y+8, r26	; 0x08
     896:	b9 87       	std	Y+9, r27	; 0x09
     898:	c4 01       	movw	r24, r8
     89a:	aa 27       	eor	r26, r26
     89c:	97 fd       	sbrc	r25, 7
     89e:	a0 95       	com	r26
     8a0:	ba 2f       	mov	r27, r26
     8a2:	8a 87       	std	Y+10, r24	; 0x0a
     8a4:	9b 87       	std	Y+11, r25	; 0x0b
     8a6:	ac 87       	std	Y+12, r26	; 0x0c
     8a8:	bd 87       	std	Y+13, r27	; 0x0d
	float dist = 0.0;
	float spd = 0.0;
	float deg = 0.0;
	int dir = 0;
	while(1) {
		localize(data);
     8aa:	85 ea       	ldi	r24, 0xA5	; 165
     8ac:	91 e0       	ldi	r25, 0x01	; 1
     8ae:	0e 94 94 0a 	call	0x1528	; 0x1528 <localize>
		
		//Set angle difference to be between -180 and 180
		angle_dif = (((int) (((data[2] + 90.0) * -1.0) - (float)(atan2((double)y-data[1],(double)x-data[0]))*180.0/3.14)) + 900) % 360 - 180;
     8b2:	6e 81       	ldd	r22, Y+6	; 0x06
     8b4:	7f 81       	ldd	r23, Y+7	; 0x07
     8b6:	88 85       	ldd	r24, Y+8	; 0x08
     8b8:	99 85       	ldd	r25, Y+9	; 0x09
     8ba:	0e 94 c2 14 	call	0x2984	; 0x2984 <__floatsisf>
     8be:	20 91 a5 01 	lds	r18, 0x01A5
     8c2:	30 91 a6 01 	lds	r19, 0x01A6
     8c6:	40 91 a7 01 	lds	r20, 0x01A7
     8ca:	50 91 a8 01 	lds	r21, 0x01A8
     8ce:	0e 94 28 13 	call	0x2650	; 0x2650 <__subsf3>
     8d2:	06 2f       	mov	r16, r22
     8d4:	17 2f       	mov	r17, r23
     8d6:	28 2e       	mov	r2, r24
     8d8:	39 2e       	mov	r3, r25
     8da:	6a 85       	ldd	r22, Y+10	; 0x0a
     8dc:	7b 85       	ldd	r23, Y+11	; 0x0b
     8de:	8c 85       	ldd	r24, Y+12	; 0x0c
     8e0:	9d 85       	ldd	r25, Y+13	; 0x0d
     8e2:	0e 94 c2 14 	call	0x2984	; 0x2984 <__floatsisf>
     8e6:	a9 ea       	ldi	r26, 0xA9	; 169
     8e8:	b1 e0       	ldi	r27, 0x01	; 1
     8ea:	2d 91       	ld	r18, X+
     8ec:	3d 91       	ld	r19, X+
     8ee:	4d 91       	ld	r20, X+
     8f0:	5c 91       	ld	r21, X
     8f2:	0e 94 28 13 	call	0x2650	; 0x2650 <__subsf3>
     8f6:	86 2e       	mov	r8, r22
     8f8:	97 2e       	mov	r9, r23
     8fa:	a8 2e       	mov	r10, r24
     8fc:	b9 2e       	mov	r11, r25
     8fe:	20 2f       	mov	r18, r16
     900:	31 2f       	mov	r19, r17
     902:	42 2d       	mov	r20, r2
     904:	53 2d       	mov	r21, r3
     906:	68 2d       	mov	r22, r8
     908:	79 2d       	mov	r23, r9
     90a:	8a 2d       	mov	r24, r10
     90c:	9b 2d       	mov	r25, r11
     90e:	0e 94 9c 13 	call	0x2738	; 0x2738 <atan2>
     912:	2b 01       	movw	r4, r22
     914:	3c 01       	movw	r6, r24
     916:	20 e0       	ldi	r18, 0x00	; 0
     918:	30 e0       	ldi	r19, 0x00	; 0
     91a:	44 eb       	ldi	r20, 0xB4	; 180
     91c:	52 e4       	ldi	r21, 0x42	; 66
     91e:	ed ea       	ldi	r30, 0xAD	; 173
     920:	f1 e0       	ldi	r31, 0x01	; 1
     922:	60 81       	ld	r22, Z
     924:	71 81       	ldd	r23, Z+1	; 0x01
     926:	82 81       	ldd	r24, Z+2	; 0x02
     928:	93 81       	ldd	r25, Z+3	; 0x03
     92a:	0e 94 29 13 	call	0x2652	; 0x2652 <__addsf3>
     92e:	6b 01       	movw	r12, r22
     930:	7c 01       	movw	r14, r24
     932:	f7 fa       	bst	r15, 7
     934:	f0 94       	com	r15
     936:	f7 f8       	bld	r15, 7
     938:	f0 94       	com	r15
     93a:	20 e0       	ldi	r18, 0x00	; 0
     93c:	30 e0       	ldi	r19, 0x00	; 0
     93e:	44 e3       	ldi	r20, 0x34	; 52
     940:	53 e4       	ldi	r21, 0x43	; 67
     942:	c3 01       	movw	r24, r6
     944:	b2 01       	movw	r22, r4
     946:	0e 94 44 16 	call	0x2c88	; 0x2c88 <__mulsf3>
     94a:	23 ec       	ldi	r18, 0xC3	; 195
     94c:	35 ef       	ldi	r19, 0xF5	; 245
     94e:	48 e4       	ldi	r20, 0x48	; 72
     950:	50 e4       	ldi	r21, 0x40	; 64
     952:	0e 94 f6 13 	call	0x27ec	; 0x27ec <__divsf3>
     956:	9b 01       	movw	r18, r22
     958:	ac 01       	movw	r20, r24
     95a:	c7 01       	movw	r24, r14
     95c:	b6 01       	movw	r22, r12
     95e:	0e 94 28 13 	call	0x2650	; 0x2650 <__subsf3>
     962:	0e 94 8f 14 	call	0x291e	; 0x291e <__fixsfsi>
     966:	cb 01       	movw	r24, r22
     968:	8c 57       	subi	r24, 0x7C	; 124
     96a:	9c 4f       	sbci	r25, 0xFC	; 252
     96c:	68 e6       	ldi	r22, 0x68	; 104
     96e:	71 e0       	ldi	r23, 0x01	; 1
     970:	0e 94 18 17 	call	0x2e30	; 0x2e30 <__divmodhi4>
     974:	bc 01       	movw	r22, r24
     976:	64 5b       	subi	r22, 0xB4	; 180
     978:	71 09       	sbc	r23, r1
     97a:	88 27       	eor	r24, r24
     97c:	77 fd       	sbrc	r23, 7
     97e:	80 95       	com	r24
     980:	98 2f       	mov	r25, r24
     982:	0e 94 c2 14 	call	0x2984	; 0x2984 <__floatsisf>
     986:	e6 2e       	mov	r14, r22
     988:	d7 2e       	mov	r13, r23
     98a:	46 2f       	mov	r20, r22
     98c:	57 2f       	mov	r21, r23
     98e:	68 2f       	mov	r22, r24
     990:	79 2f       	mov	r23, r25
     992:	49 83       	std	Y+1, r20	; 0x01
     994:	5a 83       	std	Y+2, r21	; 0x02
     996:	6b 83       	std	Y+3, r22	; 0x03
     998:	7c 83       	std	Y+4, r23	; 0x04
		if (angle_dif > 0) {
     99a:	ff 24       	eor	r15, r15
     99c:	f3 94       	inc	r15
     99e:	20 e0       	ldi	r18, 0x00	; 0
     9a0:	30 e0       	ldi	r19, 0x00	; 0
     9a2:	a9 01       	movw	r20, r18
     9a4:	6e 2d       	mov	r22, r14
     9a6:	7d 2d       	mov	r23, r13
     9a8:	0e 94 d0 15 	call	0x2ba0	; 0x2ba0 <__gesf2>
     9ac:	18 16       	cp	r1, r24
     9ae:	0c f0       	brlt	.+2      	; 0x9b2 <drive_to_point2+0x170>
     9b0:	f1 2c       	mov	r15, r1
     9b2:	f1 e0       	ldi	r31, 0x01	; 1
     9b4:	ff 25       	eor	r31, r15
     9b6:	fd 83       	std	Y+5, r31	; 0x05
		else {
			dir = LEFT;
		}
		
		//Angle of 180 corresponds to deg of 0; angle of 0 corresponds to deg of 1
		deg = exp(-1.0* ((double)fabs(angle_dif))/30.0);
     9b8:	89 81       	ldd	r24, Y+1	; 0x01
     9ba:	9a 81       	ldd	r25, Y+2	; 0x02
     9bc:	ab 81       	ldd	r26, Y+3	; 0x03
     9be:	bc 81       	ldd	r27, Y+4	; 0x04
     9c0:	bf 77       	andi	r27, 0x7F	; 127
     9c2:	bc 01       	movw	r22, r24
     9c4:	cd 01       	movw	r24, r26
     9c6:	90 58       	subi	r25, 0x80	; 128
     9c8:	20 e0       	ldi	r18, 0x00	; 0
     9ca:	30 e0       	ldi	r19, 0x00	; 0
     9cc:	40 ef       	ldi	r20, 0xF0	; 240
     9ce:	51 e4       	ldi	r21, 0x41	; 65
     9d0:	0e 94 f6 13 	call	0x27ec	; 0x27ec <__divsf3>
     9d4:	0e 94 63 14 	call	0x28c6	; 0x28c6 <exp>
     9d8:	6b 01       	movw	r12, r22
     9da:	7c 01       	movw	r14, r24
		//Set distance
		dist = (int) sqrt(((double)y - data[1])*((double)y - data[1])+((double)x - data[0])*((double)x - data[0]));
     9dc:	28 2d       	mov	r18, r8
     9de:	39 2d       	mov	r19, r9
     9e0:	4a 2d       	mov	r20, r10
     9e2:	5b 2d       	mov	r21, r11
     9e4:	68 2d       	mov	r22, r8
     9e6:	79 2d       	mov	r23, r9
     9e8:	8a 2d       	mov	r24, r10
     9ea:	9b 2d       	mov	r25, r11
     9ec:	0e 94 44 16 	call	0x2c88	; 0x2c88 <__mulsf3>
     9f0:	4b 01       	movw	r8, r22
     9f2:	5c 01       	movw	r10, r24
     9f4:	20 2f       	mov	r18, r16
     9f6:	31 2f       	mov	r19, r17
     9f8:	42 2d       	mov	r20, r2
     9fa:	53 2d       	mov	r21, r3
     9fc:	60 2f       	mov	r22, r16
     9fe:	71 2f       	mov	r23, r17
     a00:	82 2d       	mov	r24, r2
     a02:	93 2d       	mov	r25, r3
     a04:	0e 94 44 16 	call	0x2c88	; 0x2c88 <__mulsf3>
     a08:	9b 01       	movw	r18, r22
     a0a:	ac 01       	movw	r20, r24
     a0c:	c5 01       	movw	r24, r10
     a0e:	b4 01       	movw	r22, r8
     a10:	0e 94 29 13 	call	0x2652	; 0x2652 <__addsf3>
     a14:	0e 94 b1 16 	call	0x2d62	; 0x2d62 <sqrt>
     a18:	0e 94 8f 14 	call	0x291e	; 0x291e <__fixsfsi>
     a1c:	88 27       	eor	r24, r24
     a1e:	77 fd       	sbrc	r23, 7
     a20:	80 95       	com	r24
     a22:	98 2f       	mov	r25, r24
     a24:	0e 94 c2 14 	call	0x2984	; 0x2984 <__floatsisf>
     a28:	a6 2e       	mov	r10, r22
     a2a:	b7 2e       	mov	r11, r23
     a2c:	08 2f       	mov	r16, r24
     a2e:	19 2f       	mov	r17, r25
		spd = ((float)dist)/70.0;
     a30:	20 e0       	ldi	r18, 0x00	; 0
     a32:	30 e0       	ldi	r19, 0x00	; 0
     a34:	4c e8       	ldi	r20, 0x8C	; 140
     a36:	52 e4       	ldi	r21, 0x42	; 66
     a38:	0e 94 f6 13 	call	0x27ec	; 0x27ec <__divsf3>
     a3c:	26 2e       	mov	r2, r22
     a3e:	37 2e       	mov	r3, r23
     a40:	88 2e       	mov	r8, r24
     a42:	99 2e       	mov	r9, r25
     a44:	46 2e       	mov	r4, r22
     a46:	57 2e       	mov	r5, r23
     a48:	68 2e       	mov	r6, r24
     a4a:	79 2e       	mov	r7, r25
		//*****************************************************************************
			rx_buffer = m_usb_rx_char();  	//grab the computer packet
     a4c:	0e 94 9d 0e 	call	0x1d3a	; 0x1d3a <m_usb_rx_char>
     a50:	80 93 9a 01 	sts	0x019A, r24

			m_usb_rx_flush();  				//clear buffer
     a54:	0e 94 ca 0e 	call	0x1d94	; 0x1d94 <m_usb_rx_flush>

			if(rx_buffer == 1) {  			//computer wants ir buffer
     a58:	80 91 9a 01 	lds	r24, 0x019A
     a5c:	81 30       	cpi	r24, 0x01	; 1
     a5e:	09 f0       	breq	.+2      	; 0xa62 <drive_to_point2+0x220>
     a60:	50 c0       	rjmp	.+160    	; 0xb02 <__stack+0x3>
				//write ir buffer as concatenated hex:  i.e. f0f1f4f5
				data[3] = angle_dif;
     a62:	89 81       	ldd	r24, Y+1	; 0x01
     a64:	9a 81       	ldd	r25, Y+2	; 0x02
     a66:	ab 81       	ldd	r26, Y+3	; 0x03
     a68:	bc 81       	ldd	r27, Y+4	; 0x04
     a6a:	e1 eb       	ldi	r30, 0xB1	; 177
     a6c:	f1 e0       	ldi	r31, 0x01	; 1
     a6e:	80 83       	st	Z, r24
     a70:	91 83       	std	Z+1, r25	; 0x01
     a72:	a2 83       	std	Z+2, r26	; 0x02
     a74:	b3 83       	std	Z+3, r27	; 0x03
				data[4] = deg*100.0;
     a76:	20 e0       	ldi	r18, 0x00	; 0
     a78:	30 e0       	ldi	r19, 0x00	; 0
     a7a:	48 ec       	ldi	r20, 0xC8	; 200
     a7c:	52 e4       	ldi	r21, 0x42	; 66
     a7e:	c7 01       	movw	r24, r14
     a80:	b6 01       	movw	r22, r12
     a82:	0e 94 44 16 	call	0x2c88	; 0x2c88 <__mulsf3>
     a86:	a5 eb       	ldi	r26, 0xB5	; 181
     a88:	b1 e0       	ldi	r27, 0x01	; 1
     a8a:	6d 93       	st	X+, r22
     a8c:	7d 93       	st	X+, r23
     a8e:	8d 93       	st	X+, r24
     a90:	9c 93       	st	X, r25
     a92:	13 97       	sbiw	r26, 0x03	; 3
				data[5] = dist;
     a94:	8a 2d       	mov	r24, r10
     a96:	9b 2d       	mov	r25, r11
     a98:	a0 2f       	mov	r26, r16
     a9a:	b1 2f       	mov	r27, r17
     a9c:	e9 eb       	ldi	r30, 0xB9	; 185
     a9e:	f1 e0       	ldi	r31, 0x01	; 1
     aa0:	80 83       	st	Z, r24
     aa2:	91 83       	std	Z+1, r25	; 0x01
     aa4:	a2 83       	std	Z+2, r26	; 0x02
     aa6:	b3 83       	std	Z+3, r27	; 0x03
				data[6] = spd*100.0;
     aa8:	20 e0       	ldi	r18, 0x00	; 0
     aaa:	30 e0       	ldi	r19, 0x00	; 0
     aac:	48 ec       	ldi	r20, 0xC8	; 200
     aae:	52 e4       	ldi	r21, 0x42	; 66
     ab0:	62 2d       	mov	r22, r2
     ab2:	73 2d       	mov	r23, r3
     ab4:	88 2d       	mov	r24, r8
     ab6:	99 2d       	mov	r25, r9
     ab8:	0e 94 44 16 	call	0x2c88	; 0x2c88 <__mulsf3>
     abc:	ad eb       	ldi	r26, 0xBD	; 189
     abe:	b1 e0       	ldi	r27, 0x01	; 1
     ac0:	6d 93       	st	X+, r22
     ac2:	7d 93       	st	X+, r23
     ac4:	8d 93       	st	X+, r24
     ac6:	9c 93       	st	X, r25
     ac8:	13 97       	sbiw	r26, 0x03	; 3
     aca:	e5 ea       	ldi	r30, 0xA5	; 165
     acc:	f1 e0       	ldi	r31, 0x01	; 1
     ace:	fa 83       	std	Y+2, r31	; 0x02
     ad0:	e9 83       	std	Y+1, r30	; 0x01
				for (int i = 0 ; i < 7 ; i++){
					m_usb_tx_int((int)data[i]);
     ad2:	a9 81       	ldd	r26, Y+1	; 0x01
     ad4:	ba 81       	ldd	r27, Y+2	; 0x02
     ad6:	6d 91       	ld	r22, X+
     ad8:	7d 91       	ld	r23, X+
     ada:	8d 91       	ld	r24, X+
     adc:	9d 91       	ld	r25, X+
     ade:	ba 83       	std	Y+2, r27	; 0x02
     ae0:	a9 83       	std	Y+1, r26	; 0x01
     ae2:	0e 94 8f 14 	call	0x291e	; 0x291e <__fixsfsi>
     ae6:	cb 01       	movw	r24, r22
     ae8:	0e 94 02 11 	call	0x2204	; 0x2204 <m_usb_tx_int>
					m_usb_tx_char('\t');
     aec:	89 e0       	ldi	r24, 0x09	; 9
     aee:	0e 94 e0 0e 	call	0x1dc0	; 0x1dc0 <m_usb_tx_char>
				//write ir buffer as concatenated hex:  i.e. f0f1f4f5
				data[3] = angle_dif;
				data[4] = deg*100.0;
				data[5] = dist;
				data[6] = spd*100.0;
				for (int i = 0 ; i < 7 ; i++){
     af2:	e9 81       	ldd	r30, Y+1	; 0x01
     af4:	fa 81       	ldd	r31, Y+2	; 0x02
     af6:	e1 5c       	subi	r30, 0xC1	; 193
     af8:	f1 40       	sbci	r31, 0x01	; 1
     afa:	59 f7       	brne	.-42     	; 0xad2 <drive_to_point2+0x290>
					m_usb_tx_int((int)data[i]);
					m_usb_tx_char('\t');

				}

				m_usb_tx_char('\n');  //MATLAB serial command reads 1 line at a time
     afc:	8a e0       	ldi	r24, 0x0A	; 10
     afe:	0e 94 e0 0e 	call	0x1dc0	; 0x1dc0 <m_usb_tx_char>
			}
			
		//*********************************************************************************
		
		if (spd > speed_cap) spd = speed_cap;
     b02:	20 e0       	ldi	r18, 0x00	; 0
     b04:	30 e0       	ldi	r19, 0x00	; 0
     b06:	40 e0       	ldi	r20, 0x00	; 0
     b08:	5f e3       	ldi	r21, 0x3F	; 63
     b0a:	62 2d       	mov	r22, r2
     b0c:	73 2d       	mov	r23, r3
     b0e:	88 2d       	mov	r24, r8
     b10:	99 2d       	mov	r25, r9
     b12:	0e 94 d0 15 	call	0x2ba0	; 0x2ba0 <__gesf2>
     b16:	18 16       	cp	r1, r24
     b18:	3c f4       	brge	.+14     	; 0xb28 <__stack+0x29>
     b1a:	41 2c       	mov	r4, r1
     b1c:	51 2c       	mov	r5, r1
     b1e:	61 2c       	mov	r6, r1
     b20:	0f 2e       	mov	r0, r31
     b22:	ff e3       	ldi	r31, 0x3F	; 63
     b24:	7f 2e       	mov	r7, r31
     b26:	f0 2d       	mov	r31, r0
		if (dist < 10) break;
     b28:	20 e0       	ldi	r18, 0x00	; 0
     b2a:	30 e0       	ldi	r19, 0x00	; 0
     b2c:	40 e2       	ldi	r20, 0x20	; 32
     b2e:	51 e4       	ldi	r21, 0x41	; 65
     b30:	6a 2d       	mov	r22, r10
     b32:	7b 2d       	mov	r23, r11
     b34:	80 2f       	mov	r24, r16
     b36:	91 2f       	mov	r25, r17
     b38:	0e 94 ef 13 	call	0x27de	; 0x27de <__cmpsf2>
     b3c:	88 23       	and	r24, r24
     b3e:	7c f0       	brlt	.+30     	; 0xb5e <__stack+0x5f>
		if (changedState) return;
     b40:	80 91 36 01 	lds	r24, 0x0136
     b44:	81 11       	cpse	r24, r1
     b46:	1b c0       	rjmp	.+54     	; 0xb7e <__stack+0x7f>
		turn(dir, spd, deg);
     b48:	97 01       	movw	r18, r14
     b4a:	86 01       	movw	r16, r12
     b4c:	44 2d       	mov	r20, r4
     b4e:	55 2d       	mov	r21, r5
     b50:	66 2d       	mov	r22, r6
     b52:	77 2d       	mov	r23, r7
     b54:	8d 81       	ldd	r24, Y+5	; 0x05
     b56:	90 e0       	ldi	r25, 0x00	; 0
     b58:	0e 94 4e 03 	call	0x69c	; 0x69c <turn>
		
	}
     b5c:	a6 ce       	rjmp	.-692    	; 0x8aa <drive_to_point2+0x68>
	m_red(ON);
     b5e:	6e 9a       	sbi	0x0d, 6	; 13
     b60:	76 98       	cbi	0x0e, 6	; 14
	reverse();
     b62:	0e 94 d1 03 	call	0x7a2	; 0x7a2 <reverse>
	OCR1B = 0;
     b66:	10 92 8b 00 	sts	0x008B, r1
     b6a:	10 92 8a 00 	sts	0x008A, r1
	OCR3A = 0;
     b6e:	10 92 99 00 	sts	0x0099, r1
     b72:	10 92 98 00 	sts	0x0098, r1
	state = 0;
     b76:	10 92 35 01 	sts	0x0135, r1
     b7a:	10 92 34 01 	sts	0x0134, r1
}
     b7e:	2d 96       	adiw	r28, 0x0d	; 13
     b80:	0f b6       	in	r0, 0x3f	; 63
     b82:	f8 94       	cli
     b84:	de bf       	out	0x3e, r29	; 62
     b86:	0f be       	out	0x3f, r0	; 63
     b88:	cd bf       	out	0x3d, r28	; 61
     b8a:	df 91       	pop	r29
     b8c:	cf 91       	pop	r28
     b8e:	1f 91       	pop	r17
     b90:	0f 91       	pop	r16
     b92:	ff 90       	pop	r15
     b94:	ef 90       	pop	r14
     b96:	df 90       	pop	r13
     b98:	cf 90       	pop	r12
     b9a:	bf 90       	pop	r11
     b9c:	af 90       	pop	r10
     b9e:	9f 90       	pop	r9
     ba0:	8f 90       	pop	r8
     ba2:	7f 90       	pop	r7
     ba4:	6f 90       	pop	r6
     ba6:	5f 90       	pop	r5
     ba8:	4f 90       	pop	r4
     baa:	3f 90       	pop	r3
     bac:	2f 90       	pop	r2
     bae:	08 95       	ret

00000bb0 <drive_to_goalA>:

void drive_to_goalA() {
	drive_to_point2(GOALBX,GOALBY);
     bb0:	60 e0       	ldi	r22, 0x00	; 0
     bb2:	70 e0       	ldi	r23, 0x00	; 0
     bb4:	83 e7       	ldi	r24, 0x73	; 115
     bb6:	90 e0       	ldi	r25, 0x00	; 0
     bb8:	0e 94 21 04 	call	0x842	; 0x842 <drive_to_point2>
     bbc:	08 95       	ret

00000bbe <drive_to_goalB>:
}

void drive_to_goalB() {
	drive_to_point2(GOALAX,GOALAY);
     bbe:	60 e0       	ldi	r22, 0x00	; 0
     bc0:	70 e0       	ldi	r23, 0x00	; 0
     bc2:	8d e8       	ldi	r24, 0x8D	; 141
     bc4:	9f ef       	ldi	r25, 0xFF	; 255
     bc6:	0e 94 21 04 	call	0x842	; 0x842 <drive_to_point2>
     bca:	08 95       	ret

00000bcc <shoot>:
}

void shoot() {
		set(PORTB,7);
     bcc:	2f 9a       	sbi	0x05, 7	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     bce:	2f ef       	ldi	r18, 0xFF	; 255
     bd0:	81 ee       	ldi	r24, 0xE1	; 225
     bd2:	94 e0       	ldi	r25, 0x04	; 4
     bd4:	21 50       	subi	r18, 0x01	; 1
     bd6:	80 40       	sbci	r24, 0x00	; 0
     bd8:	90 40       	sbci	r25, 0x00	; 0
     bda:	e1 f7       	brne	.-8      	; 0xbd4 <shoot+0x8>
     bdc:	00 c0       	rjmp	.+0      	; 0xbde <shoot+0x12>
     bde:	00 00       	nop
		m_wait(100);
		clear(PORTB,7);
     be0:	2f 98       	cbi	0x05, 7	; 5
     be2:	08 95       	ret

00000be4 <game_pause>:
}

void game_pause() {
	OCR1B = 0;
     be4:	10 92 8b 00 	sts	0x008B, r1
     be8:	10 92 8a 00 	sts	0x008A, r1
	OCR3A = 0;
     bec:	10 92 99 00 	sts	0x0099, r1
     bf0:	10 92 98 00 	sts	0x0098, r1
     bf4:	08 95       	ret

00000bf6 <comm_test>:
	//set(PORTB,2);
	//set(PORTB,3);
}

void comm_test() {
	set(PORTD,5);
     bf6:	5d 9a       	sbi	0x0b, 5	; 11
     bf8:	2f ef       	ldi	r18, 0xFF	; 255
     bfa:	89 e6       	ldi	r24, 0x69	; 105
     bfc:	98 e1       	ldi	r25, 0x18	; 24
     bfe:	21 50       	subi	r18, 0x01	; 1
     c00:	80 40       	sbci	r24, 0x00	; 0
     c02:	90 40       	sbci	r25, 0x00	; 0
     c04:	e1 f7       	brne	.-8      	; 0xbfe <comm_test+0x8>
     c06:	00 c0       	rjmp	.+0      	; 0xc08 <comm_test+0x12>
     c08:	00 00       	nop
	m_wait(500);
	clear(PORTD,5);
     c0a:	5d 98       	cbi	0x0b, 5	; 11
     c0c:	2f ef       	ldi	r18, 0xFF	; 255
     c0e:	89 e6       	ldi	r24, 0x69	; 105
     c10:	98 e1       	ldi	r25, 0x18	; 24
     c12:	21 50       	subi	r18, 0x01	; 1
     c14:	80 40       	sbci	r24, 0x00	; 0
     c16:	90 40       	sbci	r25, 0x00	; 0
     c18:	e1 f7       	brne	.-8      	; 0xc12 <comm_test+0x1c>
     c1a:	00 c0       	rjmp	.+0      	; 0xc1c <comm_test+0x26>
     c1c:	00 00       	nop
	m_wait(500);
	state = 0;
     c1e:	10 92 35 01 	sts	0x0135, r1
     c22:	10 92 34 01 	sts	0x0134, r1
     c26:	08 95       	ret

00000c28 <main>:

}

int main(void)
{
	set(DDRD,5);
     c28:	55 9a       	sbi	0x0a, 5	; 10
	//wireless stuffs
	m_bus_init();
     c2a:	0e 94 c0 07 	call	0xf80	; 0xf80 <m_bus_init>
	
	m_rf_open(CHANNEL, RXADDRESS, PACKET_LENGTH);
     c2e:	4a e0       	ldi	r20, 0x0A	; 10
     c30:	68 e0       	ldi	r22, 0x08	; 8
     c32:	81 e0       	ldi	r24, 0x01	; 1
     c34:	0e 94 ca 0d 	call	0x1b94	; 0x1b94 <m_rf_open>
	//
	
	//m_num_init();
	int flag;
	
	m_clockdivide(0);
     c38:	e1 e6       	ldi	r30, 0x61	; 97
     c3a:	f0 e0       	ldi	r31, 0x00	; 0
     c3c:	80 e8       	ldi	r24, 0x80	; 128
     c3e:	80 83       	st	Z, r24
     c40:	10 82       	st	Z, r1
	
	m_disableJTAG();
     c42:	85 bf       	out	0x35, r24	; 53
     c44:	85 bf       	out	0x35, r24	; 53
	
	//TIMER 0: For Controlling the solenoid
	
	set(TCCR0B, WGM02);
     c46:	85 b5       	in	r24, 0x25	; 37
     c48:	88 60       	ori	r24, 0x08	; 8
     c4a:	85 bd       	out	0x25, r24	; 37
	set(TCCR0A, WGM01);
     c4c:	84 b5       	in	r24, 0x24	; 36
     c4e:	82 60       	ori	r24, 0x02	; 2
     c50:	84 bd       	out	0x24, r24	; 36
	set(TCCR0A, WGM01);
     c52:	84 b5       	in	r24, 0x24	; 36
     c54:	82 60       	ori	r24, 0x02	; 2
     c56:	84 bd       	out	0x24, r24	; 36
	
	set(TCCR0A, COM0B1);
     c58:	84 b5       	in	r24, 0x24	; 36
     c5a:	80 62       	ori	r24, 0x20	; 32
     c5c:	84 bd       	out	0x24, r24	; 36
	clear(TCCR0A, COM0B0);
     c5e:	84 b5       	in	r24, 0x24	; 36
     c60:	8f 7e       	andi	r24, 0xEF	; 239
     c62:	84 bd       	out	0x24, r24	; 36
	
	set(TCCR0B, CS02);
     c64:	85 b5       	in	r24, 0x25	; 37
     c66:	84 60       	ori	r24, 0x04	; 4
     c68:	85 bd       	out	0x25, r24	; 37
	set(TCCR0B, CS01);
     c6a:	85 b5       	in	r24, 0x25	; 37
     c6c:	82 60       	ori	r24, 0x02	; 2
     c6e:	85 bd       	out	0x25, r24	; 37
	set(TCCR0B, CS00);
     c70:	85 b5       	in	r24, 0x25	; 37
     c72:	81 60       	ori	r24, 0x01	; 1
     c74:	85 bd       	out	0x25, r24	; 37
	
	set(DDRB,7);
     c76:	27 9a       	sbi	0x04, 7	; 4
	
	OCR0A = 0xFF;
     c78:	8f ef       	ldi	r24, 0xFF	; 255
     c7a:	87 bd       	out	0x27, r24	; 39
	OCR0B = 0;
     c7c:	18 bc       	out	0x28, r1	; 40
	
	//TIMER 1: For Controlling the left wheel
	
	set(TCCR1B, WGM13);
     c7e:	e1 e8       	ldi	r30, 0x81	; 129
     c80:	f0 e0       	ldi	r31, 0x00	; 0
     c82:	80 81       	ld	r24, Z
     c84:	80 61       	ori	r24, 0x10	; 16
     c86:	80 83       	st	Z, r24
	set(TCCR1B, WGM12);
     c88:	80 81       	ld	r24, Z
     c8a:	88 60       	ori	r24, 0x08	; 8
     c8c:	80 83       	st	Z, r24
	set(TCCR1A, WGM11);
     c8e:	a0 e8       	ldi	r26, 0x80	; 128
     c90:	b0 e0       	ldi	r27, 0x00	; 0
     c92:	8c 91       	ld	r24, X
     c94:	82 60       	ori	r24, 0x02	; 2
     c96:	8c 93       	st	X, r24
	set(TCCR1A, WGM10);
     c98:	8c 91       	ld	r24, X
     c9a:	81 60       	ori	r24, 0x01	; 1
     c9c:	8c 93       	st	X, r24
	
	set(TCCR1A, COM1B1);
     c9e:	8c 91       	ld	r24, X
     ca0:	80 62       	ori	r24, 0x20	; 32
     ca2:	8c 93       	st	X, r24
	clear(TCCR1A, COM1B0);
     ca4:	8c 91       	ld	r24, X
     ca6:	8f 7e       	andi	r24, 0xEF	; 239
     ca8:	8c 93       	st	X, r24
	
	clear(TCCR1B, CS12);
     caa:	80 81       	ld	r24, Z
     cac:	8b 7f       	andi	r24, 0xFB	; 251
     cae:	80 83       	st	Z, r24
	clear(TCCR1B, CS11);
     cb0:	80 81       	ld	r24, Z
     cb2:	8d 7f       	andi	r24, 0xFD	; 253
     cb4:	80 83       	st	Z, r24
	set(TCCR1B, CS10);
     cb6:	80 81       	ld	r24, Z
     cb8:	81 60       	ori	r24, 0x01	; 1
     cba:	80 83       	st	Z, r24
	
	set(DDRB,6);
     cbc:	26 9a       	sbi	0x04, 6	; 4
	
	OCR1A = 0xFFFF;
     cbe:	8f ef       	ldi	r24, 0xFF	; 255
     cc0:	9f ef       	ldi	r25, 0xFF	; 255
     cc2:	90 93 89 00 	sts	0x0089, r25
     cc6:	80 93 88 00 	sts	0x0088, r24
	OCR1B = 0;
     cca:	10 92 8b 00 	sts	0x008B, r1
     cce:	10 92 8a 00 	sts	0x008A, r1
	
	//TIMER 3: For Controlling the right wheel
	//up to ICR3, clear at OCR3A & set at rollover
	
	set(TCCR3B, WGM33);
     cd2:	e1 e9       	ldi	r30, 0x91	; 145
     cd4:	f0 e0       	ldi	r31, 0x00	; 0
     cd6:	20 81       	ld	r18, Z
     cd8:	20 61       	ori	r18, 0x10	; 16
     cda:	20 83       	st	Z, r18
	set(TCCR3B, WGM32);
     cdc:	20 81       	ld	r18, Z
     cde:	28 60       	ori	r18, 0x08	; 8
     ce0:	20 83       	st	Z, r18
	set(TCCR3A, WGM31);
     ce2:	a0 e9       	ldi	r26, 0x90	; 144
     ce4:	b0 e0       	ldi	r27, 0x00	; 0
     ce6:	2c 91       	ld	r18, X
     ce8:	22 60       	ori	r18, 0x02	; 2
     cea:	2c 93       	st	X, r18
	clear(TCCR3A, WGM30);
     cec:	2c 91       	ld	r18, X
     cee:	2e 7f       	andi	r18, 0xFE	; 254
     cf0:	2c 93       	st	X, r18
	
	set(TCCR3A, COM3A1); 
     cf2:	2c 91       	ld	r18, X
     cf4:	20 68       	ori	r18, 0x80	; 128
     cf6:	2c 93       	st	X, r18
	clear(TCCR3A, COM3A0); 
     cf8:	2c 91       	ld	r18, X
     cfa:	2f 7b       	andi	r18, 0xBF	; 191
     cfc:	2c 93       	st	X, r18
	
	clear(TCCR3B, CS32);
     cfe:	20 81       	ld	r18, Z
     d00:	2b 7f       	andi	r18, 0xFB	; 251
     d02:	20 83       	st	Z, r18
	clear(TCCR3B, CS31);
     d04:	20 81       	ld	r18, Z
     d06:	2d 7f       	andi	r18, 0xFD	; 253
     d08:	20 83       	st	Z, r18
	set(TCCR3B, CS30);
     d0a:	20 81       	ld	r18, Z
     d0c:	21 60       	ori	r18, 0x01	; 1
     d0e:	20 83       	st	Z, r18
	
	ICR3 = 0xFFFF;
     d10:	90 93 97 00 	sts	0x0097, r25
     d14:	80 93 96 00 	sts	0x0096, r24
	OCR3A = 0;
     d18:	10 92 99 00 	sts	0x0099, r1
     d1c:	10 92 98 00 	sts	0x0098, r1
	
	//Pin for controlling solenoid pulse
	set(DDRB,7);
     d20:	27 9a       	sbi	0x04, 7	; 4
	
	//Pins for controlling speed of left and right wheel
	set(DDRB,6);
     d22:	26 9a       	sbi	0x04, 6	; 4
	set(DDRC,6);
     d24:	3e 9a       	sbi	0x07, 6	; 7
	
	//Pins for determining direction of wheels
	set(DDRB,2);
     d26:	22 9a       	sbi	0x04, 2	; 4
	set(DDRB,3);
     d28:	23 9a       	sbi	0x04, 3	; 4
	
	//Blue LED for Comm Test
	//set(DDRB,5);
	
	//ADC's
	sei();					//Set up interrupts
     d2a:	78 94       	sei
	set(ADCSRA, ADIE);
     d2c:	ca e7       	ldi	r28, 0x7A	; 122
     d2e:	d0 e0       	ldi	r29, 0x00	; 0
     d30:	88 81       	ld	r24, Y
     d32:	88 60       	ori	r24, 0x08	; 8
     d34:	88 83       	st	Y, r24
	
	clear(ADMUX, REFS1);	//Voltage reference is AR pin (5V)
     d36:	ec e7       	ldi	r30, 0x7C	; 124
     d38:	f0 e0       	ldi	r31, 0x00	; 0
     d3a:	80 81       	ld	r24, Z
     d3c:	8f 77       	andi	r24, 0x7F	; 127
     d3e:	80 83       	st	Z, r24
	clear(ADMUX, REFS0);	//^
     d40:	80 81       	ld	r24, Z
     d42:	8f 7b       	andi	r24, 0xBF	; 191
     d44:	80 83       	st	Z, r24
	
	set(ADCSRA, ADPS2);	//Set scale to /128
     d46:	88 81       	ld	r24, Y
     d48:	84 60       	ori	r24, 0x04	; 4
     d4a:	88 83       	st	Y, r24
	set(ADCSRA, ADPS1);	//^
     d4c:	88 81       	ld	r24, Y
     d4e:	82 60       	ori	r24, 0x02	; 2
     d50:	88 83       	st	Y, r24
	set(ADCSRA, ADPS0);	//^
     d52:	88 81       	ld	r24, Y
     d54:	81 60       	ori	r24, 0x01	; 1
     d56:	88 83       	st	Y, r24
	
	set(DIDR0, ADC0D);	//Disable digital input for F0
     d58:	ee e7       	ldi	r30, 0x7E	; 126
     d5a:	f0 e0       	ldi	r31, 0x00	; 0
     d5c:	80 81       	ld	r24, Z
     d5e:	81 60       	ori	r24, 0x01	; 1
     d60:	80 83       	st	Z, r24
	set(DIDR0, ADC1D),
     d62:	80 81       	ld	r24, Z
     d64:	82 60       	ori	r24, 0x02	; 2
     d66:	80 83       	st	Z, r24
	set(DIDR0, ADC4D);
     d68:	80 81       	ld	r24, Z
     d6a:	80 61       	ori	r24, 0x10	; 16
     d6c:	80 83       	st	Z, r24
	set(DIDR0, ADC5D);
     d6e:	80 81       	ld	r24, Z
     d70:	80 62       	ori	r24, 0x20	; 32
     d72:	80 83       	st	Z, r24
	set(DIDR0, ADC6D);
     d74:	80 81       	ld	r24, Z
     d76:	80 64       	ori	r24, 0x40	; 64
     d78:	80 83       	st	Z, r24
	set(DIDR2, ADC8D);
     d7a:	ed e7       	ldi	r30, 0x7D	; 125
     d7c:	f0 e0       	ldi	r31, 0x00	; 0
     d7e:	80 81       	ld	r24, Z
     d80:	81 60       	ori	r24, 0x01	; 1
     d82:	80 83       	st	Z, r24
	set(DIDR2, ADC9D);
     d84:	80 81       	ld	r24, Z
     d86:	82 60       	ori	r24, 0x02	; 2
     d88:	80 83       	st	Z, r24
	
	set(ADCSRA, ADATE);	//Set trigger to free-running mode
     d8a:	88 81       	ld	r24, Y
     d8c:	80 62       	ori	r24, 0x20	; 32
     d8e:	88 83       	st	Y, r24
	
	chooseInput(0);
     d90:	80 e0       	ldi	r24, 0x00	; 0
     d92:	90 e0       	ldi	r25, 0x00	; 0
     d94:	0e 94 08 01 	call	0x210	; 0x210 <chooseInput>
	
	set(ADCSRA, ADEN);	//Enable/Start conversion
     d98:	88 81       	ld	r24, Y
     d9a:	80 68       	ori	r24, 0x80	; 128
     d9c:	88 83       	st	Y, r24
	set(ADCSRA, ADSC);	//^
     d9e:	88 81       	ld	r24, Y
     da0:	80 64       	ori	r24, 0x40	; 64
     da2:	88 83       	st	Y, r24
	
	set(ADCSRA, ADIF);	//Enable reading results
     da4:	88 81       	ld	r24, Y
     da6:	80 61       	ori	r24, 0x10	; 16
     da8:	88 83       	st	Y, r24
	
	
	//Limit Switch stuffs
	clear(DDRB,0); //set to input, RIGHT LIMIT SWITCH
     daa:	20 98       	cbi	0x04, 0	; 4
	clear(DDRB,1); //set to input, LEFT LIMIT SWITCH
     dac:	21 98       	cbi	0x04, 1	; 4
	
	clear(PORTB,0); //disable internal pull up resistor
     dae:	28 98       	cbi	0x05, 0	; 5
	clear(PORTB,1); //disable internal pull up resistor
     db0:	29 98       	cbi	0x05, 1	; 5
	
	 
	//int state; // state variable
	state = 2; //set state
     db2:	82 e0       	ldi	r24, 0x02	; 2
     db4:	90 e0       	ldi	r25, 0x00	; 0
     db6:	90 93 35 01 	sts	0x0135, r25
     dba:	80 93 34 01 	sts	0x0134, r24
	long count = 0;
	

	//m_bus_init();
	m_wii_open();
     dbe:	0e 94 25 12 	call	0x244a	; 0x244a <m_wii_open>
	m_usb_init();
     dc2:	0e 94 81 0e 	call	0x1d02	; 0x1d02 <m_usb_init>
			break;
			
			case 69:
				set(PORTB,2);
				set(PORTB,3);
				OCR1B = OCR1A;
     dc6:	0f 2e       	mov	r0, r31
     dc8:	f8 e8       	ldi	r31, 0x88	; 136
     dca:	af 2e       	mov	r10, r31
     dcc:	b1 2c       	mov	r11, r1
     dce:	f0 2d       	mov	r31, r0
     dd0:	0f 2e       	mov	r0, r31
     dd2:	fa e8       	ldi	r31, 0x8A	; 138
     dd4:	cf 2e       	mov	r12, r31
     dd6:	d1 2c       	mov	r13, r1
     dd8:	f0 2d       	mov	r31, r0
				OCR3A = ICR3;
     dda:	0f 2e       	mov	r0, r31
     ddc:	f6 e9       	ldi	r31, 0x96	; 150
     dde:	ef 2e       	mov	r14, r31
     de0:	f1 2c       	mov	r15, r1
     de2:	f0 2d       	mov	r31, r0
     de4:	08 e9       	ldi	r16, 0x98	; 152
     de6:	10 e0       	ldi	r17, 0x00	; 0
		//switch states
        switch (state) {
			
			case -2:
			getADC();
			if (ADCarr[0] > 500) {
     de8:	c4 e2       	ldi	r28, 0x24	; 36
     dea:	d1 e0       	ldi	r29, 0x01	; 1
	m_usb_init();
	//local_init();

    while(1)
    {
		changedState = 0;
     dec:	10 92 36 01 	sts	0x0136, r1
		getADC();
     df0:	0e 94 95 01 	call	0x32a	; 0x32a <getADC>
		//localize(data);

	

		//switch states
        switch (state) {
     df4:	80 91 34 01 	lds	r24, 0x0134
     df8:	90 91 35 01 	lds	r25, 0x0135
     dfc:	84 30       	cpi	r24, 0x04	; 4
     dfe:	91 05       	cpc	r25, r1
     e00:	09 f4       	brne	.+2      	; 0xe04 <main+0x1dc>
     e02:	50 c0       	rjmp	.+160    	; 0xea4 <main+0x27c>
     e04:	8c f4       	brge	.+34     	; 0xe28 <main+0x200>
     e06:	00 97       	sbiw	r24, 0x00	; 0
     e08:	09 f4       	brne	.+2      	; 0xe0c <main+0x1e4>
     e0a:	44 c0       	rjmp	.+136    	; 0xe94 <main+0x26c>
     e0c:	44 f4       	brge	.+16     	; 0xe1e <main+0x1f6>
     e0e:	8e 3f       	cpi	r24, 0xFE	; 254
     e10:	2f ef       	ldi	r18, 0xFF	; 255
     e12:	92 07       	cpc	r25, r18
     e14:	19 f1       	breq	.+70     	; 0xe5c <main+0x234>
     e16:	01 96       	adiw	r24, 0x01	; 1
     e18:	09 f0       	breq	.+2      	; 0xe1c <main+0x1f4>
     e1a:	67 c0       	rjmp	.+206    	; 0xeea <main+0x2c2>
     e1c:	2c c0       	rjmp	.+88     	; 0xe76 <main+0x24e>
     e1e:	82 30       	cpi	r24, 0x02	; 2
     e20:	91 05       	cpc	r25, r1
     e22:	d9 f1       	breq	.+118    	; 0xe9a <main+0x272>
     e24:	e4 f5       	brge	.+120    	; 0xe9e <main+0x276>
     e26:	e2 cf       	rjmp	.-60     	; 0xdec <main+0x1c4>
     e28:	81 3a       	cpi	r24, 0xA1	; 161
     e2a:	91 05       	cpc	r25, r1
     e2c:	09 f4       	brne	.+2      	; 0xe30 <main+0x208>
     e2e:	43 c0       	rjmp	.+134    	; 0xeb6 <main+0x28e>
     e30:	64 f4       	brge	.+24     	; 0xe4a <main+0x222>
     e32:	86 34       	cpi	r24, 0x46	; 70
     e34:	91 05       	cpc	r25, r1
     e36:	09 f4       	brne	.+2      	; 0xe3a <main+0x212>
     e38:	56 c0       	rjmp	.+172    	; 0xee6 <main+0x2be>
     e3a:	80 3a       	cpi	r24, 0xA0	; 160
     e3c:	91 05       	cpc	r25, r1
     e3e:	c1 f1       	breq	.+112    	; 0xeb0 <main+0x288>
     e40:	85 34       	cpi	r24, 0x45	; 69
     e42:	91 05       	cpc	r25, r1
     e44:	09 f0       	breq	.+2      	; 0xe48 <main+0x220>
     e46:	51 c0       	rjmp	.+162    	; 0xeea <main+0x2c2>
     e48:	3f c0       	rjmp	.+126    	; 0xec8 <main+0x2a0>
     e4a:	83 3a       	cpi	r24, 0xA3	; 163
     e4c:	91 05       	cpc	r25, r1
     e4e:	c9 f1       	breq	.+114    	; 0xec2 <main+0x29a>
     e50:	ac f1       	brlt	.+106    	; 0xebc <main+0x294>
     e52:	84 3a       	cpi	r24, 0xA4	; 164
     e54:	91 05       	cpc	r25, r1
     e56:	09 f0       	breq	.+2      	; 0xe5a <main+0x232>
     e58:	48 c0       	rjmp	.+144    	; 0xeea <main+0x2c2>
     e5a:	27 c0       	rjmp	.+78     	; 0xeaa <main+0x282>
			
			case -2:
			getADC();
     e5c:	0e 94 95 01 	call	0x32a	; 0x32a <getADC>
			if (ADCarr[0] > 500) {
     e60:	88 81       	ld	r24, Y
     e62:	99 81       	ldd	r25, Y+1	; 0x01
     e64:	85 3f       	cpi	r24, 0xF5	; 245
     e66:	91 40       	sbci	r25, 0x01	; 1
     e68:	1c f0       	brlt	.+6      	; 0xe70 <main+0x248>
				m_green(ON);
     e6a:	6a 9a       	sbi	0x0d, 2	; 13
     e6c:	72 98       	cbi	0x0e, 2	; 14
     e6e:	be cf       	rjmp	.-132    	; 0xdec <main+0x1c4>
			}
			else {m_green(OFF)}
     e70:	6a 9a       	sbi	0x0d, 2	; 13
     e72:	72 9a       	sbi	0x0e, 2	; 14
     e74:	bb cf       	rjmp	.-138    	; 0xdec <main+0x1c4>
			break;
			
			case -1: //test Limit switches
				//m_green(ON);
				if (check(PINB,1)) {
     e76:	19 9b       	sbis	0x03, 1	; 3
     e78:	03 c0       	rjmp	.+6      	; 0xe80 <main+0x258>
					
					m_green(ON);
     e7a:	6a 9a       	sbi	0x0d, 2	; 13
     e7c:	72 98       	cbi	0x0e, 2	; 14
     e7e:	b6 cf       	rjmp	.-148    	; 0xdec <main+0x1c4>
				}
				
				else if (check(PINB,0)) {
     e80:	18 9b       	sbis	0x03, 0	; 3
     e82:	03 c0       	rjmp	.+6      	; 0xe8a <main+0x262>
					
					m_red(ON);
     e84:	6e 9a       	sbi	0x0d, 6	; 13
     e86:	76 98       	cbi	0x0e, 6	; 14
     e88:	b1 cf       	rjmp	.-158    	; 0xdec <main+0x1c4>
				}
				
				else {
					m_red(OFF);
     e8a:	6e 9a       	sbi	0x0d, 6	; 13
     e8c:	76 9a       	sbi	0x0e, 6	; 14
					m_green(OFF);
     e8e:	6a 9a       	sbi	0x0d, 2	; 13
     e90:	72 9a       	sbi	0x0e, 2	; 14
     e92:	ac cf       	rjmp	.-168    	; 0xdec <main+0x1c4>
				
			break;

			case 0:
			//drive_to_point2(-100,0);
			game_pause();
     e94:	0e 94 f2 05 	call	0xbe4	; 0xbe4 <game_pause>
			break;
     e98:	a9 cf       	rjmp	.-174    	; 0xdec <main+0x1c4>
			case 1:
			findPuck();
			break;
			
			case 2:
			drive_to_puck();
     e9a:	0e 94 e4 03 	call	0x7c8	; 0x7c8 <drive_to_puck>
			break;
			
			case 3:
			drive_to_goalA();
     e9e:	0e 94 d8 05 	call	0xbb0	; 0xbb0 <drive_to_goalA>
			break;
     ea2:	a4 cf       	rjmp	.-184    	; 0xdec <main+0x1c4>
			
			case 4:
			shoot();
     ea4:	0e 94 e6 05 	call	0xbcc	; 0xbcc <shoot>
			break;	
     ea8:	a1 cf       	rjmp	.-190    	; 0xdec <main+0x1c4>
			
			case 0xA4:
			game_pause();
     eaa:	0e 94 f2 05 	call	0xbe4	; 0xbe4 <game_pause>
			break;
     eae:	9e cf       	rjmp	.-196    	; 0xdec <main+0x1c4>
			
			case 0xA0:
			comm_test();
     eb0:	0e 94 fb 05 	call	0xbf6	; 0xbf6 <comm_test>
			break;
     eb4:	9b cf       	rjmp	.-202    	; 0xdec <main+0x1c4>
			
			case 0xA1:
			drive_to_goalA();
     eb6:	0e 94 d8 05 	call	0xbb0	; 0xbb0 <drive_to_goalA>
			break;
     eba:	98 cf       	rjmp	.-208    	; 0xdec <main+0x1c4>
			
			case 0xA2:
			drive_to_goalA();
     ebc:	0e 94 d8 05 	call	0xbb0	; 0xbb0 <drive_to_goalA>
			break;
     ec0:	95 cf       	rjmp	.-214    	; 0xdec <main+0x1c4>
			
			case 0xA3:
			drive_to_goalB();
     ec2:	0e 94 df 05 	call	0xbbe	; 0xbbe <drive_to_goalB>
			break;
     ec6:	92 cf       	rjmp	.-220    	; 0xdec <main+0x1c4>
			
			case 69:
				set(PORTB,2);
     ec8:	2a 9a       	sbi	0x05, 2	; 5
				set(PORTB,3);
     eca:	2b 9a       	sbi	0x05, 3	; 5
				OCR1B = OCR1A;
     ecc:	f5 01       	movw	r30, r10
     ece:	80 81       	ld	r24, Z
     ed0:	91 81       	ldd	r25, Z+1	; 0x01
     ed2:	f6 01       	movw	r30, r12
     ed4:	91 83       	std	Z+1, r25	; 0x01
     ed6:	80 83       	st	Z, r24
				OCR3A = ICR3;
     ed8:	f7 01       	movw	r30, r14
     eda:	80 81       	ld	r24, Z
     edc:	91 81       	ldd	r25, Z+1	; 0x01
     ede:	f8 01       	movw	r30, r16
     ee0:	91 83       	std	Z+1, r25	; 0x01
     ee2:	80 83       	st	Z, r24
				break;
     ee4:	83 cf       	rjmp	.-250    	; 0xdec <main+0x1c4>
				
			case 70:
				reportADC();
     ee6:	0e 94 5c 02 	call	0x4b8	; 0x4b8 <reportADC>
				break;
			
			default:
			game_pause();
     eea:	0e 94 f2 05 	call	0xbe4	; 0xbe4 <game_pause>
			break;
     eee:	7e cf       	rjmp	.-260    	; 0xdec <main+0x1c4>

00000ef0 <__vector_3>:
        
    }
}


ISR(INT2_vect)  {
     ef0:	1f 92       	push	r1
     ef2:	0f 92       	push	r0
     ef4:	0f b6       	in	r0, 0x3f	; 63
     ef6:	0f 92       	push	r0
     ef8:	11 24       	eor	r1, r1
     efa:	2f 93       	push	r18
     efc:	3f 93       	push	r19
     efe:	4f 93       	push	r20
     f00:	5f 93       	push	r21
     f02:	6f 93       	push	r22
     f04:	7f 93       	push	r23
     f06:	8f 93       	push	r24
     f08:	9f 93       	push	r25
     f0a:	af 93       	push	r26
     f0c:	bf 93       	push	r27
     f0e:	ef 93       	push	r30
     f10:	ff 93       	push	r31
	cli();
     f12:	f8 94       	cli
	m_rf_read(buffer,PACKET_LENGTH);
     f14:	6a e0       	ldi	r22, 0x0A	; 10
     f16:	8b e9       	ldi	r24, 0x9B	; 155
     f18:	91 e0       	ldi	r25, 0x01	; 1
     f1a:	0e 94 20 0e 	call	0x1c40	; 0x1c40 <m_rf_read>
	sei();
     f1e:	78 94       	sei
	state=buffer[0];
     f20:	80 91 9b 01 	lds	r24, 0x019B
     f24:	80 93 34 01 	sts	0x0134, r24
     f28:	10 92 35 01 	sts	0x0135, r1
	changedState = 1;
     f2c:	81 e0       	ldi	r24, 0x01	; 1
     f2e:	80 93 36 01 	sts	0x0136, r24
}
     f32:	ff 91       	pop	r31
     f34:	ef 91       	pop	r30
     f36:	bf 91       	pop	r27
     f38:	af 91       	pop	r26
     f3a:	9f 91       	pop	r25
     f3c:	8f 91       	pop	r24
     f3e:	7f 91       	pop	r23
     f40:	6f 91       	pop	r22
     f42:	5f 91       	pop	r21
     f44:	4f 91       	pop	r20
     f46:	3f 91       	pop	r19
     f48:	2f 91       	pop	r18
     f4a:	0f 90       	pop	r0
     f4c:	0f be       	out	0x3f, r0	; 63
     f4e:	0f 90       	pop	r0
     f50:	1f 90       	pop	r1
     f52:	18 95       	reti

00000f54 <__vector_29>:

ISR(ADC_vect) {
     f54:	1f 92       	push	r1
     f56:	0f 92       	push	r0
     f58:	0f b6       	in	r0, 0x3f	; 63
     f5a:	0f 92       	push	r0
     f5c:	11 24       	eor	r1, r1
     f5e:	8f 93       	push	r24
     f60:	9f 93       	push	r25
	cli();
     f62:	f8 94       	cli
	conversion = 1;
     f64:	81 e0       	ldi	r24, 0x01	; 1
     f66:	90 e0       	ldi	r25, 0x00	; 0
     f68:	90 93 15 01 	sts	0x0115, r25
     f6c:	80 93 14 01 	sts	0x0114, r24
	sei();
     f70:	78 94       	sei
     f72:	9f 91       	pop	r25
     f74:	8f 91       	pop	r24
     f76:	0f 90       	pop	r0
     f78:	0f be       	out	0x3f, r0	; 63
     f7a:	0f 90       	pop	r0
     f7c:	1f 90       	pop	r1
     f7e:	18 95       	reti

00000f80 <m_bus_init>:
     f80:	58 9a       	sbi	0x0b, 0	; 11
     f82:	59 9a       	sbi	0x0b, 1	; 11
     f84:	5a 9a       	sbi	0x0b, 2	; 11
     f86:	8c e0       	ldi	r24, 0x0C	; 12
     f88:	80 93 b8 00 	sts	0x00B8, r24
     f8c:	e9 e6       	ldi	r30, 0x69	; 105
     f8e:	f0 e0       	ldi	r31, 0x00	; 0
     f90:	80 81       	ld	r24, Z
     f92:	80 62       	ori	r24, 0x20	; 32
     f94:	80 83       	st	Z, r24
     f96:	80 81       	ld	r24, Z
     f98:	8f 7e       	andi	r24, 0xEF	; 239
     f9a:	80 83       	st	Z, r24
     f9c:	ea 9a       	sbi	0x1d, 2	; 29
     f9e:	78 94       	sei
     fa0:	08 95       	ret

00000fa2 <getData>:
     fa2:	0f 93       	push	r16
     fa4:	1f 93       	push	r17
     fa6:	cf 93       	push	r28
     fa8:	df 93       	push	r29
     faa:	8c 01       	movw	r16, r24
     fac:	eb 01       	movw	r28, r22
     fae:	8d e7       	ldi	r24, 0x7D	; 125
     fb0:	91 e0       	ldi	r25, 0x01	; 1
     fb2:	0e 94 90 11 	call	0x2320	; 0x2320 <m_wii_read>
     fb6:	80 91 7d 01 	lds	r24, 0x017D
     fba:	90 91 7e 01 	lds	r25, 0x017E
     fbe:	f8 01       	movw	r30, r16
     fc0:	91 83       	std	Z+1, r25	; 0x01
     fc2:	80 83       	st	Z, r24
     fc4:	80 91 83 01 	lds	r24, 0x0183
     fc8:	90 91 84 01 	lds	r25, 0x0184
     fcc:	93 83       	std	Z+3, r25	; 0x03
     fce:	82 83       	std	Z+2, r24	; 0x02
     fd0:	80 91 89 01 	lds	r24, 0x0189
     fd4:	90 91 8a 01 	lds	r25, 0x018A
     fd8:	95 83       	std	Z+5, r25	; 0x05
     fda:	84 83       	std	Z+4, r24	; 0x04
     fdc:	80 91 8f 01 	lds	r24, 0x018F
     fe0:	90 91 90 01 	lds	r25, 0x0190
     fe4:	97 83       	std	Z+7, r25	; 0x07
     fe6:	86 83       	std	Z+6, r24	; 0x06
     fe8:	80 91 7f 01 	lds	r24, 0x017F
     fec:	90 91 80 01 	lds	r25, 0x0180
     ff0:	99 83       	std	Y+1, r25	; 0x01
     ff2:	88 83       	st	Y, r24
     ff4:	80 91 85 01 	lds	r24, 0x0185
     ff8:	90 91 86 01 	lds	r25, 0x0186
     ffc:	9b 83       	std	Y+3, r25	; 0x03
     ffe:	8a 83       	std	Y+2, r24	; 0x02
    1000:	80 91 8b 01 	lds	r24, 0x018B
    1004:	90 91 8c 01 	lds	r25, 0x018C
    1008:	9d 83       	std	Y+5, r25	; 0x05
    100a:	8c 83       	std	Y+4, r24	; 0x04
    100c:	80 91 91 01 	lds	r24, 0x0191
    1010:	90 91 92 01 	lds	r25, 0x0192
    1014:	9f 83       	std	Y+7, r25	; 0x07
    1016:	8e 83       	std	Y+6, r24	; 0x06
    1018:	81 e0       	ldi	r24, 0x01	; 1
    101a:	df 91       	pop	r29
    101c:	cf 91       	pop	r28
    101e:	1f 91       	pop	r17
    1020:	0f 91       	pop	r16
    1022:	08 95       	ret

00001024 <determine_blobs>:
    1024:	2f 92       	push	r2
    1026:	3f 92       	push	r3
    1028:	4f 92       	push	r4
    102a:	5f 92       	push	r5
    102c:	6f 92       	push	r6
    102e:	7f 92       	push	r7
    1030:	8f 92       	push	r8
    1032:	9f 92       	push	r9
    1034:	af 92       	push	r10
    1036:	bf 92       	push	r11
    1038:	cf 92       	push	r12
    103a:	df 92       	push	r13
    103c:	ef 92       	push	r14
    103e:	ff 92       	push	r15
    1040:	0f 93       	push	r16
    1042:	1f 93       	push	r17
    1044:	cf 93       	push	r28
    1046:	df 93       	push	r29
    1048:	cd b7       	in	r28, 0x3d	; 61
    104a:	de b7       	in	r29, 0x3e	; 62
    104c:	6c 97       	sbiw	r28, 0x1c	; 28
    104e:	0f b6       	in	r0, 0x3f	; 63
    1050:	f8 94       	cli
    1052:	de bf       	out	0x3e, r29	; 62
    1054:	0f be       	out	0x3f, r0	; 63
    1056:	cd bf       	out	0x3d, r28	; 61
    1058:	10 92 45 01 	sts	0x0145, r1
    105c:	10 92 46 01 	sts	0x0146, r1
    1060:	10 92 47 01 	sts	0x0147, r1
    1064:	10 92 48 01 	sts	0x0148, r1
    1068:	80 e0       	ldi	r24, 0x00	; 0
    106a:	90 e6       	ldi	r25, 0x60	; 96
    106c:	aa ee       	ldi	r26, 0xEA	; 234
    106e:	b6 e4       	ldi	r27, 0x46	; 70
    1070:	80 93 00 01 	sts	0x0100, r24
    1074:	90 93 01 01 	sts	0x0101, r25
    1078:	a0 93 02 01 	sts	0x0102, r26
    107c:	b0 93 03 01 	sts	0x0103, r27
    1080:	0f 2e       	mov	r0, r31
    1082:	f7 e5       	ldi	r31, 0x57	; 87
    1084:	cf 2e       	mov	r12, r31
    1086:	f1 e0       	ldi	r31, 0x01	; 1
    1088:	df 2e       	mov	r13, r31
    108a:	f0 2d       	mov	r31, r0
    108c:	09 e5       	ldi	r16, 0x59	; 89
    108e:	11 e0       	ldi	r17, 0x01	; 1
    1090:	0f 2e       	mov	r0, r31
    1092:	fb e5       	ldi	r31, 0x5B	; 91
    1094:	ef 2e       	mov	r14, r31
    1096:	f1 e0       	ldi	r31, 0x01	; 1
    1098:	ff 2e       	mov	r15, r31
    109a:	f0 2d       	mov	r31, r0
    109c:	6d e4       	ldi	r22, 0x4D	; 77
    109e:	71 e0       	ldi	r23, 0x01	; 1
    10a0:	85 e5       	ldi	r24, 0x55	; 85
    10a2:	91 e0       	ldi	r25, 0x01	; 1
    10a4:	0e 94 d1 07 	call	0xfa2	; 0xfa2 <getData>
    10a8:	80 91 55 01 	lds	r24, 0x0155
    10ac:	90 91 56 01 	lds	r25, 0x0156
    10b0:	8f 3f       	cpi	r24, 0xFF	; 255
    10b2:	93 40       	sbci	r25, 0x03	; 3
    10b4:	98 f7       	brcc	.-26     	; 0x109c <determine_blobs+0x78>
    10b6:	f6 01       	movw	r30, r12
    10b8:	80 81       	ld	r24, Z
    10ba:	91 81       	ldd	r25, Z+1	; 0x01
    10bc:	8f 3f       	cpi	r24, 0xFF	; 255
    10be:	93 40       	sbci	r25, 0x03	; 3
    10c0:	68 f7       	brcc	.-38     	; 0x109c <determine_blobs+0x78>
    10c2:	f8 01       	movw	r30, r16
    10c4:	80 81       	ld	r24, Z
    10c6:	91 81       	ldd	r25, Z+1	; 0x01
    10c8:	8f 3f       	cpi	r24, 0xFF	; 255
    10ca:	93 40       	sbci	r25, 0x03	; 3
    10cc:	38 f7       	brcc	.-50     	; 0x109c <determine_blobs+0x78>
    10ce:	f7 01       	movw	r30, r14
    10d0:	80 81       	ld	r24, Z
    10d2:	91 81       	ldd	r25, Z+1	; 0x01
    10d4:	8f 3f       	cpi	r24, 0xFF	; 255
    10d6:	93 40       	sbci	r25, 0x03	; 3
    10d8:	08 f7       	brcc	.-62     	; 0x109c <determine_blobs+0x78>
    10da:	80 90 49 01 	lds	r8, 0x0149
    10de:	90 90 4a 01 	lds	r9, 0x014A
    10e2:	a0 90 4b 01 	lds	r10, 0x014B
    10e6:	b0 90 4c 01 	lds	r11, 0x014C
    10ea:	20 91 45 01 	lds	r18, 0x0145
    10ee:	29 83       	std	Y+1, r18	; 0x01
    10f0:	30 91 46 01 	lds	r19, 0x0146
    10f4:	3a 83       	std	Y+2, r19	; 0x02
    10f6:	40 91 47 01 	lds	r20, 0x0147
    10fa:	4b 83       	std	Y+3, r20	; 0x03
    10fc:	50 91 48 01 	lds	r21, 0x0148
    1100:	5c 83       	std	Y+4, r21	; 0x04
    1102:	60 91 3f 01 	lds	r22, 0x013F
    1106:	6b 8b       	std	Y+19, r22	; 0x13
    1108:	70 91 40 01 	lds	r23, 0x0140
    110c:	7c 8b       	std	Y+20, r23	; 0x14
    110e:	80 91 3d 01 	lds	r24, 0x013D
    1112:	89 8b       	std	Y+17, r24	; 0x11
    1114:	90 91 3e 01 	lds	r25, 0x013E
    1118:	9a 8b       	std	Y+18, r25	; 0x12
    111a:	e0 91 41 01 	lds	r30, 0x0141
    111e:	ed 8b       	std	Y+21, r30	; 0x15
    1120:	f0 91 42 01 	lds	r31, 0x0142
    1124:	fe 8b       	std	Y+22, r31	; 0x16
    1126:	20 91 43 01 	lds	r18, 0x0143
    112a:	2f 8b       	std	Y+23, r18	; 0x17
    112c:	30 91 44 01 	lds	r19, 0x0144
    1130:	38 8f       	std	Y+24, r19	; 0x18
    1132:	40 91 00 01 	lds	r20, 0x0100
    1136:	4d 83       	std	Y+5, r20	; 0x05
    1138:	50 91 01 01 	lds	r21, 0x0101
    113c:	5e 83       	std	Y+6, r21	; 0x06
    113e:	20 90 02 01 	lds	r2, 0x0102
    1142:	30 90 03 01 	lds	r3, 0x0103
    1146:	60 91 3b 01 	lds	r22, 0x013B
    114a:	69 8f       	std	Y+25, r22	; 0x19
    114c:	70 91 3c 01 	lds	r23, 0x013C
    1150:	7a 8f       	std	Y+26, r23	; 0x1a
    1152:	80 91 39 01 	lds	r24, 0x0139
    1156:	90 91 3a 01 	lds	r25, 0x013A
    115a:	98 8b       	std	Y+16, r25	; 0x10
    115c:	8f 87       	std	Y+15, r24	; 0x0f
    115e:	18 86       	std	Y+8, r1	; 0x08
    1160:	1f 82       	std	Y+7, r1	; 0x07
    1162:	c1 2c       	mov	r12, r1
    1164:	d1 2c       	mov	r13, r1
    1166:	b9 c0       	rjmp	.+370    	; 0x12da <determine_blobs+0x2b6>
    1168:	eb 8d       	ldd	r30, Y+27	; 0x1b
    116a:	fc 8d       	ldd	r31, Y+28	; 0x1c
    116c:	e4 15       	cp	r30, r4
    116e:	f5 05       	cpc	r31, r5
    1170:	09 f4       	brne	.+2      	; 0x1174 <determine_blobs+0x150>
    1172:	9c c0       	rjmp	.+312    	; 0x12ac <determine_blobs+0x288>
    1174:	e9 85       	ldd	r30, Y+9	; 0x09
    1176:	fa 85       	ldd	r31, Y+10	; 0x0a
    1178:	60 81       	ld	r22, Z
    117a:	71 81       	ldd	r23, Z+1	; 0x01
    117c:	80 e0       	ldi	r24, 0x00	; 0
    117e:	90 e0       	ldi	r25, 0x00	; 0
    1180:	0e 94 c0 14 	call	0x2980	; 0x2980 <__floatunsisf>
    1184:	6b 01       	movw	r12, r22
    1186:	7c 01       	movw	r14, r24
    1188:	f3 01       	movw	r30, r6
    118a:	60 81       	ld	r22, Z
    118c:	71 81       	ldd	r23, Z+1	; 0x01
    118e:	80 e0       	ldi	r24, 0x00	; 0
    1190:	90 e0       	ldi	r25, 0x00	; 0
    1192:	0e 94 c0 14 	call	0x2980	; 0x2980 <__floatunsisf>
    1196:	9b 01       	movw	r18, r22
    1198:	ac 01       	movw	r20, r24
    119a:	c7 01       	movw	r24, r14
    119c:	b6 01       	movw	r22, r12
    119e:	0e 94 28 13 	call	0x2650	; 0x2650 <__subsf3>
    11a2:	c6 2e       	mov	r12, r22
    11a4:	d7 2e       	mov	r13, r23
    11a6:	e8 2e       	mov	r14, r24
    11a8:	f9 2e       	mov	r15, r25
    11aa:	eb 85       	ldd	r30, Y+11	; 0x0b
    11ac:	fc 85       	ldd	r31, Y+12	; 0x0c
    11ae:	60 81       	ld	r22, Z
    11b0:	71 81       	ldd	r23, Z+1	; 0x01
    11b2:	80 e0       	ldi	r24, 0x00	; 0
    11b4:	90 e0       	ldi	r25, 0x00	; 0
    11b6:	0e 94 c0 14 	call	0x2980	; 0x2980 <__floatunsisf>
    11ba:	4b 01       	movw	r8, r22
    11bc:	5c 01       	movw	r10, r24
    11be:	f8 01       	movw	r30, r16
    11c0:	60 81       	ld	r22, Z
    11c2:	71 81       	ldd	r23, Z+1	; 0x01
    11c4:	80 e0       	ldi	r24, 0x00	; 0
    11c6:	90 e0       	ldi	r25, 0x00	; 0
    11c8:	0e 94 c0 14 	call	0x2980	; 0x2980 <__floatunsisf>
    11cc:	9b 01       	movw	r18, r22
    11ce:	ac 01       	movw	r20, r24
    11d0:	c5 01       	movw	r24, r10
    11d2:	b4 01       	movw	r22, r8
    11d4:	0e 94 28 13 	call	0x2650	; 0x2650 <__subsf3>
    11d8:	86 2e       	mov	r8, r22
    11da:	97 2e       	mov	r9, r23
    11dc:	a8 2e       	mov	r10, r24
    11de:	b9 2e       	mov	r11, r25
    11e0:	2c 2d       	mov	r18, r12
    11e2:	3d 2d       	mov	r19, r13
    11e4:	4e 2d       	mov	r20, r14
    11e6:	5f 2d       	mov	r21, r15
    11e8:	6c 2d       	mov	r22, r12
    11ea:	7d 2d       	mov	r23, r13
    11ec:	8e 2d       	mov	r24, r14
    11ee:	9f 2d       	mov	r25, r15
    11f0:	0e 94 44 16 	call	0x2c88	; 0x2c88 <__mulsf3>
    11f4:	6b 01       	movw	r12, r22
    11f6:	7c 01       	movw	r14, r24
    11f8:	28 2d       	mov	r18, r8
    11fa:	39 2d       	mov	r19, r9
    11fc:	4a 2d       	mov	r20, r10
    11fe:	5b 2d       	mov	r21, r11
    1200:	68 2d       	mov	r22, r8
    1202:	79 2d       	mov	r23, r9
    1204:	8a 2d       	mov	r24, r10
    1206:	9b 2d       	mov	r25, r11
    1208:	0e 94 44 16 	call	0x2c88	; 0x2c88 <__mulsf3>
    120c:	9b 01       	movw	r18, r22
    120e:	ac 01       	movw	r20, r24
    1210:	c7 01       	movw	r24, r14
    1212:	b6 01       	movw	r22, r12
    1214:	0e 94 29 13 	call	0x2652	; 0x2652 <__addsf3>
    1218:	0e 94 b1 16 	call	0x2d62	; 0x2d62 <sqrt>
    121c:	86 2e       	mov	r8, r22
    121e:	97 2e       	mov	r9, r23
    1220:	a8 2e       	mov	r10, r24
    1222:	b9 2e       	mov	r11, r25
    1224:	79 81       	ldd	r23, Y+1	; 0x01
    1226:	6a 81       	ldd	r22, Y+2	; 0x02
    1228:	9b 81       	ldd	r25, Y+3	; 0x03
    122a:	8c 81       	ldd	r24, Y+4	; 0x04
    122c:	27 2f       	mov	r18, r23
    122e:	36 2f       	mov	r19, r22
    1230:	49 2f       	mov	r20, r25
    1232:	58 2f       	mov	r21, r24
    1234:	68 2d       	mov	r22, r8
    1236:	79 2d       	mov	r23, r9
    1238:	8a 2d       	mov	r24, r10
    123a:	9b 2d       	mov	r25, r11
    123c:	0e 94 d0 15 	call	0x2ba0	; 0x2ba0 <__gesf2>
    1240:	18 16       	cp	r1, r24
    1242:	d4 f4       	brge	.+52     	; 0x1278 <determine_blobs+0x254>
    1244:	20 e0       	ldi	r18, 0x00	; 0
    1246:	30 e0       	ldi	r19, 0x00	; 0
    1248:	40 e0       	ldi	r20, 0x00	; 0
    124a:	5f e3       	ldi	r21, 0x3F	; 63
    124c:	68 2d       	mov	r22, r8
    124e:	79 2d       	mov	r23, r9
    1250:	8a 2d       	mov	r24, r10
    1252:	9b 2d       	mov	r25, r11
    1254:	0e 94 44 16 	call	0x2c88	; 0x2c88 <__mulsf3>
    1258:	6d 8b       	std	Y+21, r22	; 0x15
    125a:	7e 8b       	std	Y+22, r23	; 0x16
    125c:	8f 8b       	std	Y+23, r24	; 0x17
    125e:	98 8f       	std	Y+24, r25	; 0x18
    1260:	fb 8d       	ldd	r31, Y+27	; 0x1b
    1262:	f9 8b       	std	Y+17, r31	; 0x11
    1264:	2c 8d       	ldd	r18, Y+28	; 0x1c
    1266:	2a 8b       	std	Y+18, r18	; 0x12
    1268:	3d 85       	ldd	r19, Y+13	; 0x0d
    126a:	3b 8b       	std	Y+19, r19	; 0x13
    126c:	4e 85       	ldd	r20, Y+14	; 0x0e
    126e:	4c 8b       	std	Y+20, r20	; 0x14
    1270:	89 82       	std	Y+1, r8	; 0x01
    1272:	9a 82       	std	Y+2, r9	; 0x02
    1274:	ab 82       	std	Y+3, r10	; 0x03
    1276:	bc 82       	std	Y+4, r11	; 0x04
    1278:	7d 81       	ldd	r23, Y+5	; 0x05
    127a:	6e 81       	ldd	r22, Y+6	; 0x06
    127c:	27 2f       	mov	r18, r23
    127e:	36 2f       	mov	r19, r22
    1280:	42 2d       	mov	r20, r2
    1282:	53 2d       	mov	r21, r3
    1284:	68 2d       	mov	r22, r8
    1286:	79 2d       	mov	r23, r9
    1288:	8a 2d       	mov	r24, r10
    128a:	9b 2d       	mov	r25, r11
    128c:	0e 94 ef 13 	call	0x27de	; 0x27de <__cmpsf2>
    1290:	88 23       	and	r24, r24
    1292:	64 f4       	brge	.+24     	; 0x12ac <determine_blobs+0x288>
    1294:	6b 8d       	ldd	r22, Y+27	; 0x1b
    1296:	7c 8d       	ldd	r23, Y+28	; 0x1c
    1298:	78 8b       	std	Y+16, r23	; 0x10
    129a:	6f 87       	std	Y+15, r22	; 0x0f
    129c:	7d 85       	ldd	r23, Y+13	; 0x0d
    129e:	79 8f       	std	Y+25, r23	; 0x19
    12a0:	8e 85       	ldd	r24, Y+14	; 0x0e
    12a2:	8a 8f       	std	Y+26, r24	; 0x1a
    12a4:	8d 82       	std	Y+5, r8	; 0x05
    12a6:	9e 82       	std	Y+6, r9	; 0x06
    12a8:	2a 2c       	mov	r2, r10
    12aa:	3b 2c       	mov	r3, r11
    12ac:	92 e0       	ldi	r25, 0x02	; 2
    12ae:	69 0e       	add	r6, r25
    12b0:	71 1c       	adc	r7, r1
    12b2:	0e 5f       	subi	r16, 0xFE	; 254
    12b4:	1f 4f       	sbci	r17, 0xFF	; 255
    12b6:	eb 8d       	ldd	r30, Y+27	; 0x1b
    12b8:	fc 8d       	ldd	r31, Y+28	; 0x1c
    12ba:	31 96       	adiw	r30, 0x01	; 1
    12bc:	fc 8f       	std	Y+28, r31	; 0x1c
    12be:	eb 8f       	std	Y+27, r30	; 0x1b
    12c0:	34 97       	sbiw	r30, 0x04	; 4
    12c2:	09 f0       	breq	.+2      	; 0x12c6 <determine_blobs+0x2a2>
    12c4:	51 cf       	rjmp	.-350    	; 0x1168 <determine_blobs+0x144>
    12c6:	2f 81       	ldd	r18, Y+7	; 0x07
    12c8:	38 85       	ldd	r19, Y+8	; 0x08
    12ca:	2f 5f       	subi	r18, 0xFF	; 255
    12cc:	3f 4f       	sbci	r19, 0xFF	; 255
    12ce:	38 87       	std	Y+8, r19	; 0x08
    12d0:	2f 83       	std	Y+7, r18	; 0x07
    12d2:	69 01       	movw	r12, r18
    12d4:	24 30       	cpi	r18, 0x04	; 4
    12d6:	31 05       	cpc	r19, r1
    12d8:	39 f1       	breq	.+78     	; 0x1328 <determine_blobs+0x304>
    12da:	34 e0       	ldi	r19, 0x04	; 4
    12dc:	c3 16       	cp	r12, r19
    12de:	d1 04       	cpc	r13, r1
    12e0:	94 f7       	brge	.-28     	; 0x12c6 <determine_blobs+0x2a2>
    12e2:	86 01       	movw	r16, r12
    12e4:	0f 5f       	subi	r16, 0xFF	; 255
    12e6:	1f 4f       	sbci	r17, 0xFF	; 255
    12e8:	00 0f       	add	r16, r16
    12ea:	11 1f       	adc	r17, r17
    12ec:	0f 2e       	mov	r0, r31
    12ee:	f5 e5       	ldi	r31, 0x55	; 85
    12f0:	ef 2e       	mov	r14, r31
    12f2:	f1 e0       	ldi	r31, 0x01	; 1
    12f4:	ff 2e       	mov	r15, r31
    12f6:	f0 2d       	mov	r31, r0
    12f8:	e0 0e       	add	r14, r16
    12fa:	f1 1e       	adc	r15, r17
    12fc:	03 5b       	subi	r16, 0xB3	; 179
    12fe:	1e 4f       	sbci	r17, 0xFE	; 254
    1300:	c6 01       	movw	r24, r12
    1302:	88 0f       	add	r24, r24
    1304:	99 1f       	adc	r25, r25
    1306:	ac 01       	movw	r20, r24
    1308:	4b 5a       	subi	r20, 0xAB	; 171
    130a:	5e 4f       	sbci	r21, 0xFE	; 254
    130c:	5a 87       	std	Y+10, r21	; 0x0a
    130e:	49 87       	std	Y+9, r20	; 0x09
    1310:	bc 01       	movw	r22, r24
    1312:	63 5b       	subi	r22, 0xB3	; 179
    1314:	7e 4f       	sbci	r23, 0xFE	; 254
    1316:	7c 87       	std	Y+12, r23	; 0x0c
    1318:	6b 87       	std	Y+11, r22	; 0x0b
    131a:	cd 86       	std	Y+13, r12	; 0x0d
    131c:	de 86       	std	Y+14, r13	; 0x0e
    131e:	dc 8e       	std	Y+28, r13	; 0x1c
    1320:	cb 8e       	std	Y+27, r12	; 0x1b
    1322:	26 01       	movw	r4, r12
    1324:	37 01       	movw	r6, r14
    1326:	c7 cf       	rjmp	.-114    	; 0x12b6 <determine_blobs+0x292>
    1328:	88 2d       	mov	r24, r8
    132a:	99 2d       	mov	r25, r9
    132c:	aa 2d       	mov	r26, r10
    132e:	bb 2d       	mov	r27, r11
    1330:	80 93 49 01 	sts	0x0149, r24
    1334:	90 93 4a 01 	sts	0x014A, r25
    1338:	a0 93 4b 01 	sts	0x014B, r26
    133c:	b0 93 4c 01 	sts	0x014C, r27
    1340:	59 81       	ldd	r21, Y+1	; 0x01
    1342:	4a 81       	ldd	r20, Y+2	; 0x02
    1344:	3b 81       	ldd	r19, Y+3	; 0x03
    1346:	2c 81       	ldd	r18, Y+4	; 0x04
    1348:	85 2f       	mov	r24, r21
    134a:	94 2f       	mov	r25, r20
    134c:	a3 2f       	mov	r26, r19
    134e:	b2 2f       	mov	r27, r18
    1350:	80 93 45 01 	sts	0x0145, r24
    1354:	90 93 46 01 	sts	0x0146, r25
    1358:	a0 93 47 01 	sts	0x0147, r26
    135c:	b0 93 48 01 	sts	0x0148, r27
    1360:	7b 89       	ldd	r23, Y+19	; 0x13
    1362:	70 93 3f 01 	sts	0x013F, r23
    1366:	8c 89       	ldd	r24, Y+20	; 0x14
    1368:	80 93 40 01 	sts	0x0140, r24
    136c:	99 89       	ldd	r25, Y+17	; 0x11
    136e:	90 93 3d 01 	sts	0x013D, r25
    1372:	ea 89       	ldd	r30, Y+18	; 0x12
    1374:	e0 93 3e 01 	sts	0x013E, r30
    1378:	5d 89       	ldd	r21, Y+21	; 0x15
    137a:	4e 89       	ldd	r20, Y+22	; 0x16
    137c:	3f 89       	ldd	r19, Y+23	; 0x17
    137e:	28 8d       	ldd	r18, Y+24	; 0x18
    1380:	85 2f       	mov	r24, r21
    1382:	94 2f       	mov	r25, r20
    1384:	a3 2f       	mov	r26, r19
    1386:	b2 2f       	mov	r27, r18
    1388:	80 93 41 01 	sts	0x0141, r24
    138c:	90 93 42 01 	sts	0x0142, r25
    1390:	a0 93 43 01 	sts	0x0143, r26
    1394:	b0 93 44 01 	sts	0x0144, r27
    1398:	5d 81       	ldd	r21, Y+5	; 0x05
    139a:	4e 81       	ldd	r20, Y+6	; 0x06
    139c:	85 2f       	mov	r24, r21
    139e:	94 2f       	mov	r25, r20
    13a0:	a2 2d       	mov	r26, r2
    13a2:	b3 2d       	mov	r27, r3
    13a4:	80 93 00 01 	sts	0x0100, r24
    13a8:	90 93 01 01 	sts	0x0101, r25
    13ac:	a0 93 02 01 	sts	0x0102, r26
    13b0:	b0 93 03 01 	sts	0x0103, r27
    13b4:	f9 8d       	ldd	r31, Y+25	; 0x19
    13b6:	f0 93 3b 01 	sts	0x013B, r31
    13ba:	2a 8d       	ldd	r18, Y+26	; 0x1a
    13bc:	20 93 3c 01 	sts	0x013C, r18
    13c0:	3f 85       	ldd	r19, Y+15	; 0x0f
    13c2:	30 93 39 01 	sts	0x0139, r19
    13c6:	48 89       	ldd	r20, Y+16	; 0x10
    13c8:	40 93 3a 01 	sts	0x013A, r20
    13cc:	80 91 3f 01 	lds	r24, 0x013F
    13d0:	90 91 40 01 	lds	r25, 0x0140
    13d4:	20 91 3b 01 	lds	r18, 0x013B
    13d8:	30 91 3c 01 	lds	r19, 0x013C
    13dc:	82 17       	cp	r24, r18
    13de:	93 07       	cpc	r25, r19
    13e0:	19 f5       	brne	.+70     	; 0x1428 <determine_blobs+0x404>
    13e2:	90 93 7c 01 	sts	0x017C, r25
    13e6:	80 93 7b 01 	sts	0x017B, r24
    13ea:	40 91 3d 01 	lds	r20, 0x013D
    13ee:	50 91 3e 01 	lds	r21, 0x013E
    13f2:	50 93 7a 01 	sts	0x017A, r21
    13f6:	40 93 79 01 	sts	0x0179, r20
    13fa:	20 91 39 01 	lds	r18, 0x0139
    13fe:	30 91 3a 01 	lds	r19, 0x013A
    1402:	30 93 76 01 	sts	0x0176, r19
    1406:	20 93 75 01 	sts	0x0175, r18
    140a:	69 e0       	ldi	r22, 0x09	; 9
    140c:	70 e0       	ldi	r23, 0x00	; 0
    140e:	fb 01       	movw	r30, r22
    1410:	e8 1b       	sub	r30, r24
    1412:	f9 0b       	sbc	r31, r25
    1414:	cf 01       	movw	r24, r30
    1416:	84 1b       	sub	r24, r20
    1418:	95 0b       	sbc	r25, r21
    141a:	82 1b       	sub	r24, r18
    141c:	93 0b       	sbc	r25, r19
    141e:	90 93 78 01 	sts	0x0178, r25
    1422:	80 93 77 01 	sts	0x0177, r24
    1426:	66 c0       	rjmp	.+204    	; 0x14f4 <determine_blobs+0x4d0>
    1428:	4f 85       	ldd	r20, Y+15	; 0x0f
    142a:	58 89       	ldd	r21, Y+16	; 0x10
    142c:	84 17       	cp	r24, r20
    142e:	95 07       	cpc	r25, r21
    1430:	f9 f4       	brne	.+62     	; 0x1470 <determine_blobs+0x44c>
    1432:	90 93 7c 01 	sts	0x017C, r25
    1436:	80 93 7b 01 	sts	0x017B, r24
    143a:	40 91 3d 01 	lds	r20, 0x013D
    143e:	50 91 3e 01 	lds	r21, 0x013E
    1442:	50 93 7a 01 	sts	0x017A, r21
    1446:	40 93 79 01 	sts	0x0179, r20
    144a:	30 93 76 01 	sts	0x0176, r19
    144e:	20 93 75 01 	sts	0x0175, r18
    1452:	69 e0       	ldi	r22, 0x09	; 9
    1454:	70 e0       	ldi	r23, 0x00	; 0
    1456:	fb 01       	movw	r30, r22
    1458:	e8 1b       	sub	r30, r24
    145a:	f9 0b       	sbc	r31, r25
    145c:	cf 01       	movw	r24, r30
    145e:	84 1b       	sub	r24, r20
    1460:	95 0b       	sbc	r25, r21
    1462:	82 1b       	sub	r24, r18
    1464:	93 0b       	sbc	r25, r19
    1466:	90 93 78 01 	sts	0x0178, r25
    146a:	80 93 77 01 	sts	0x0177, r24
    146e:	42 c0       	rjmp	.+132    	; 0x14f4 <determine_blobs+0x4d0>
    1470:	40 91 3d 01 	lds	r20, 0x013D
    1474:	50 91 3e 01 	lds	r21, 0x013E
    1478:	24 17       	cp	r18, r20
    147a:	35 07       	cpc	r19, r21
    147c:	01 f5       	brne	.+64     	; 0x14be <determine_blobs+0x49a>
    147e:	30 93 7c 01 	sts	0x017C, r19
    1482:	20 93 7b 01 	sts	0x017B, r18
    1486:	90 93 7a 01 	sts	0x017A, r25
    148a:	80 93 79 01 	sts	0x0179, r24
    148e:	4f 85       	ldd	r20, Y+15	; 0x0f
    1490:	58 89       	ldd	r21, Y+16	; 0x10
    1492:	50 93 76 01 	sts	0x0176, r21
    1496:	40 93 75 01 	sts	0x0175, r20
    149a:	49 e0       	ldi	r20, 0x09	; 9
    149c:	50 e0       	ldi	r21, 0x00	; 0
    149e:	ba 01       	movw	r22, r20
    14a0:	62 1b       	sub	r22, r18
    14a2:	73 0b       	sbc	r23, r19
    14a4:	fb 01       	movw	r30, r22
    14a6:	e8 1b       	sub	r30, r24
    14a8:	f9 0b       	sbc	r31, r25
    14aa:	cf 01       	movw	r24, r30
    14ac:	2f 85       	ldd	r18, Y+15	; 0x0f
    14ae:	38 89       	ldd	r19, Y+16	; 0x10
    14b0:	82 1b       	sub	r24, r18
    14b2:	93 0b       	sbc	r25, r19
    14b4:	90 93 78 01 	sts	0x0178, r25
    14b8:	80 93 77 01 	sts	0x0177, r24
    14bc:	1b c0       	rjmp	.+54     	; 0x14f4 <determine_blobs+0x4d0>
    14be:	50 93 7c 01 	sts	0x017C, r21
    14c2:	40 93 7b 01 	sts	0x017B, r20
    14c6:	90 93 7a 01 	sts	0x017A, r25
    14ca:	80 93 79 01 	sts	0x0179, r24
    14ce:	30 93 76 01 	sts	0x0176, r19
    14d2:	20 93 75 01 	sts	0x0175, r18
    14d6:	69 e0       	ldi	r22, 0x09	; 9
    14d8:	70 e0       	ldi	r23, 0x00	; 0
    14da:	fb 01       	movw	r30, r22
    14dc:	e4 1b       	sub	r30, r20
    14de:	f5 0b       	sbc	r31, r21
    14e0:	bf 01       	movw	r22, r30
    14e2:	68 1b       	sub	r22, r24
    14e4:	79 0b       	sbc	r23, r25
    14e6:	cb 01       	movw	r24, r22
    14e8:	82 1b       	sub	r24, r18
    14ea:	93 0b       	sbc	r25, r19
    14ec:	90 93 78 01 	sts	0x0178, r25
    14f0:	80 93 77 01 	sts	0x0177, r24
    14f4:	81 e0       	ldi	r24, 0x01	; 1
    14f6:	6c 96       	adiw	r28, 0x1c	; 28
    14f8:	0f b6       	in	r0, 0x3f	; 63
    14fa:	f8 94       	cli
    14fc:	de bf       	out	0x3e, r29	; 62
    14fe:	0f be       	out	0x3f, r0	; 63
    1500:	cd bf       	out	0x3d, r28	; 61
    1502:	df 91       	pop	r29
    1504:	cf 91       	pop	r28
    1506:	1f 91       	pop	r17
    1508:	0f 91       	pop	r16
    150a:	ff 90       	pop	r15
    150c:	ef 90       	pop	r14
    150e:	df 90       	pop	r13
    1510:	cf 90       	pop	r12
    1512:	bf 90       	pop	r11
    1514:	af 90       	pop	r10
    1516:	9f 90       	pop	r9
    1518:	8f 90       	pop	r8
    151a:	7f 90       	pop	r7
    151c:	6f 90       	pop	r6
    151e:	5f 90       	pop	r5
    1520:	4f 90       	pop	r4
    1522:	3f 90       	pop	r3
    1524:	2f 90       	pop	r2
    1526:	08 95       	ret

00001528 <localize>:
    1528:	2f 92       	push	r2
    152a:	3f 92       	push	r3
    152c:	4f 92       	push	r4
    152e:	5f 92       	push	r5
    1530:	6f 92       	push	r6
    1532:	7f 92       	push	r7
    1534:	8f 92       	push	r8
    1536:	9f 92       	push	r9
    1538:	af 92       	push	r10
    153a:	bf 92       	push	r11
    153c:	cf 92       	push	r12
    153e:	df 92       	push	r13
    1540:	ef 92       	push	r14
    1542:	ff 92       	push	r15
    1544:	0f 93       	push	r16
    1546:	1f 93       	push	r17
    1548:	cf 93       	push	r28
    154a:	df 93       	push	r29
    154c:	cd b7       	in	r28, 0x3d	; 61
    154e:	de b7       	in	r29, 0x3e	; 62
    1550:	2d 97       	sbiw	r28, 0x0d	; 13
    1552:	0f b6       	in	r0, 0x3f	; 63
    1554:	f8 94       	cli
    1556:	de bf       	out	0x3e, r29	; 62
    1558:	0f be       	out	0x3f, r0	; 63
    155a:	cd bf       	out	0x3d, r28	; 61
    155c:	8c 01       	movw	r16, r24
    155e:	10 92 38 01 	sts	0x0138, r1
    1562:	10 92 37 01 	sts	0x0137, r1
    1566:	0e 94 12 08 	call	0x1024	; 0x1024 <determine_blobs>
    156a:	e0 90 7b 01 	lds	r14, 0x017B
    156e:	f0 90 7c 01 	lds	r15, 0x017C
    1572:	f7 01       	movw	r30, r14
    1574:	ee 0f       	add	r30, r30
    1576:	ff 1f       	adc	r31, r31
    1578:	eb 5a       	subi	r30, 0xAB	; 171
    157a:	fe 4f       	sbci	r31, 0xFE	; 254
    157c:	20 81       	ld	r18, Z
    157e:	31 81       	ldd	r19, Z+1	; 0x01
    1580:	3a 83       	std	Y+2, r19	; 0x02
    1582:	29 83       	std	Y+1, r18	; 0x01
    1584:	2f 3f       	cpi	r18, 0xFF	; 255
    1586:	83 e0       	ldi	r24, 0x03	; 3
    1588:	38 07       	cpc	r19, r24
    158a:	08 f0       	brcs	.+2      	; 0x158e <localize+0x66>
    158c:	ea c2       	rjmp	.+1492   	; 0x1b62 <localize+0x63a>
    158e:	a0 90 79 01 	lds	r10, 0x0179
    1592:	b0 90 7a 01 	lds	r11, 0x017A
    1596:	f5 01       	movw	r30, r10
    1598:	ee 0f       	add	r30, r30
    159a:	ff 1f       	adc	r31, r31
    159c:	eb 5a       	subi	r30, 0xAB	; 171
    159e:	fe 4f       	sbci	r31, 0xFE	; 254
    15a0:	c0 80       	ld	r12, Z
    15a2:	d1 80       	ldd	r13, Z+1	; 0x01
    15a4:	9f ef       	ldi	r25, 0xFF	; 255
    15a6:	c9 16       	cp	r12, r25
    15a8:	93 e0       	ldi	r25, 0x03	; 3
    15aa:	d9 06       	cpc	r13, r25
    15ac:	08 f0       	brcs	.+2      	; 0x15b0 <localize+0x88>
    15ae:	d9 c2       	rjmp	.+1458   	; 0x1b62 <localize+0x63a>
    15b0:	b9 01       	movw	r22, r18
    15b2:	6c 0d       	add	r22, r12
    15b4:	7d 1d       	adc	r23, r13
    15b6:	80 e0       	ldi	r24, 0x00	; 0
    15b8:	90 e0       	ldi	r25, 0x00	; 0
    15ba:	0e 94 c0 14 	call	0x2980	; 0x2980 <__floatunsisf>
    15be:	20 e0       	ldi	r18, 0x00	; 0
    15c0:	30 e0       	ldi	r19, 0x00	; 0
    15c2:	40 e0       	ldi	r20, 0x00	; 0
    15c4:	5f e3       	ldi	r21, 0x3F	; 63
    15c6:	0e 94 44 16 	call	0x2c88	; 0x2c88 <__mulsf3>
    15ca:	20 91 08 01 	lds	r18, 0x0108
    15ce:	30 91 09 01 	lds	r19, 0x0109
    15d2:	40 91 0a 01 	lds	r20, 0x010A
    15d6:	50 91 0b 01 	lds	r21, 0x010B
    15da:	0e 94 28 13 	call	0x2650	; 0x2650 <__subsf3>
    15de:	6d 83       	std	Y+5, r22	; 0x05
    15e0:	7e 83       	std	Y+6, r23	; 0x06
    15e2:	8f 83       	std	Y+7, r24	; 0x07
    15e4:	98 87       	std	Y+8, r25	; 0x08
    15e6:	f7 01       	movw	r30, r14
    15e8:	ee 0f       	add	r30, r30
    15ea:	ff 1f       	adc	r31, r31
    15ec:	e3 5b       	subi	r30, 0xB3	; 179
    15ee:	fe 4f       	sbci	r31, 0xFE	; 254
    15f0:	e0 80       	ld	r14, Z
    15f2:	f1 80       	ldd	r15, Z+1	; 0x01
    15f4:	f5 01       	movw	r30, r10
    15f6:	ee 0f       	add	r30, r30
    15f8:	ff 1f       	adc	r31, r31
    15fa:	e3 5b       	subi	r30, 0xB3	; 179
    15fc:	fe 4f       	sbci	r31, 0xFE	; 254
    15fe:	a0 80       	ld	r10, Z
    1600:	b1 80       	ldd	r11, Z+1	; 0x01
    1602:	b5 01       	movw	r22, r10
    1604:	6e 0d       	add	r22, r14
    1606:	7f 1d       	adc	r23, r15
    1608:	80 e0       	ldi	r24, 0x00	; 0
    160a:	90 e0       	ldi	r25, 0x00	; 0
    160c:	0e 94 c0 14 	call	0x2980	; 0x2980 <__floatunsisf>
    1610:	20 e0       	ldi	r18, 0x00	; 0
    1612:	30 e0       	ldi	r19, 0x00	; 0
    1614:	40 e0       	ldi	r20, 0x00	; 0
    1616:	5f e3       	ldi	r21, 0x3F	; 63
    1618:	0e 94 44 16 	call	0x2c88	; 0x2c88 <__mulsf3>
    161c:	20 91 04 01 	lds	r18, 0x0104
    1620:	30 91 05 01 	lds	r19, 0x0105
    1624:	40 91 06 01 	lds	r20, 0x0106
    1628:	50 91 07 01 	lds	r21, 0x0107
    162c:	0e 94 28 13 	call	0x2650	; 0x2650 <__subsf3>
    1630:	69 87       	std	Y+9, r22	; 0x09
    1632:	7a 87       	std	Y+10, r23	; 0x0a
    1634:	28 2e       	mov	r2, r24
    1636:	39 2e       	mov	r3, r25
    1638:	b7 01       	movw	r22, r14
    163a:	80 e0       	ldi	r24, 0x00	; 0
    163c:	90 e0       	ldi	r25, 0x00	; 0
    163e:	0e 94 c0 14 	call	0x2980	; 0x2980 <__floatunsisf>
    1642:	2b 01       	movw	r4, r22
    1644:	3c 01       	movw	r6, r24
    1646:	b5 01       	movw	r22, r10
    1648:	80 e0       	ldi	r24, 0x00	; 0
    164a:	90 e0       	ldi	r25, 0x00	; 0
    164c:	0e 94 c0 14 	call	0x2980	; 0x2980 <__floatunsisf>
    1650:	9b 01       	movw	r18, r22
    1652:	ac 01       	movw	r20, r24
    1654:	c3 01       	movw	r24, r6
    1656:	b2 01       	movw	r22, r4
    1658:	0e 94 28 13 	call	0x2650	; 0x2650 <__subsf3>
    165c:	4b 01       	movw	r8, r22
    165e:	5c 01       	movw	r10, r24
    1660:	e9 81       	ldd	r30, Y+1	; 0x01
    1662:	fa 81       	ldd	r31, Y+2	; 0x02
    1664:	bf 01       	movw	r22, r30
    1666:	80 e0       	ldi	r24, 0x00	; 0
    1668:	90 e0       	ldi	r25, 0x00	; 0
    166a:	0e 94 c0 14 	call	0x2980	; 0x2980 <__floatunsisf>
    166e:	2b 01       	movw	r4, r22
    1670:	3c 01       	movw	r6, r24
    1672:	b6 01       	movw	r22, r12
    1674:	80 e0       	ldi	r24, 0x00	; 0
    1676:	90 e0       	ldi	r25, 0x00	; 0
    1678:	0e 94 c0 14 	call	0x2980	; 0x2980 <__floatunsisf>
    167c:	9b 01       	movw	r18, r22
    167e:	ac 01       	movw	r20, r24
    1680:	c3 01       	movw	r24, r6
    1682:	b2 01       	movw	r22, r4
    1684:	0e 94 28 13 	call	0x2650	; 0x2650 <__subsf3>
    1688:	a5 01       	movw	r20, r10
    168a:	94 01       	movw	r18, r8
    168c:	0e 94 9c 13 	call	0x2738	; 0x2738 <atan2>
    1690:	4b 01       	movw	r8, r22
    1692:	5c 01       	movw	r10, r24
    1694:	7d 81       	ldd	r23, Y+5	; 0x05
    1696:	6e 81       	ldd	r22, Y+6	; 0x06
    1698:	9f 81       	ldd	r25, Y+7	; 0x07
    169a:	88 85       	ldd	r24, Y+8	; 0x08
    169c:	27 2f       	mov	r18, r23
    169e:	36 2f       	mov	r19, r22
    16a0:	49 2f       	mov	r20, r25
    16a2:	58 2f       	mov	r21, r24
    16a4:	b9 85       	ldd	r27, Y+9	; 0x09
    16a6:	aa 85       	ldd	r26, Y+10	; 0x0a
    16a8:	6b 2f       	mov	r22, r27
    16aa:	7a 2f       	mov	r23, r26
    16ac:	82 2d       	mov	r24, r2
    16ae:	93 2d       	mov	r25, r3
    16b0:	0e 94 9c 13 	call	0x2738	; 0x2738 <atan2>
    16b4:	2b 01       	movw	r4, r22
    16b6:	3c 01       	movw	r6, r24
    16b8:	7d 81       	ldd	r23, Y+5	; 0x05
    16ba:	6e 81       	ldd	r22, Y+6	; 0x06
    16bc:	9f 81       	ldd	r25, Y+7	; 0x07
    16be:	88 85       	ldd	r24, Y+8	; 0x08
    16c0:	27 2f       	mov	r18, r23
    16c2:	36 2f       	mov	r19, r22
    16c4:	49 2f       	mov	r20, r25
    16c6:	58 2f       	mov	r21, r24
    16c8:	67 2f       	mov	r22, r23
    16ca:	73 2f       	mov	r23, r19
    16cc:	89 2f       	mov	r24, r25
    16ce:	95 2f       	mov	r25, r21
    16d0:	0e 94 44 16 	call	0x2c88	; 0x2c88 <__mulsf3>
    16d4:	6b 01       	movw	r12, r22
    16d6:	7c 01       	movw	r14, r24
    16d8:	79 85       	ldd	r23, Y+9	; 0x09
    16da:	6a 85       	ldd	r22, Y+10	; 0x0a
    16dc:	27 2f       	mov	r18, r23
    16de:	36 2f       	mov	r19, r22
    16e0:	42 2d       	mov	r20, r2
    16e2:	53 2d       	mov	r21, r3
    16e4:	67 2f       	mov	r22, r23
    16e6:	73 2f       	mov	r23, r19
    16e8:	82 2d       	mov	r24, r2
    16ea:	93 2d       	mov	r25, r3
    16ec:	0e 94 44 16 	call	0x2c88	; 0x2c88 <__mulsf3>
    16f0:	9b 01       	movw	r18, r22
    16f2:	ac 01       	movw	r20, r24
    16f4:	c7 01       	movw	r24, r14
    16f6:	b6 01       	movw	r22, r12
    16f8:	0e 94 29 13 	call	0x2652	; 0x2652 <__addsf3>
    16fc:	0e 94 b1 16 	call	0x2d62	; 0x2d62 <sqrt>
    1700:	6b 01       	movw	r12, r22
    1702:	7c 01       	movw	r14, r24
    1704:	20 e0       	ldi	r18, 0x00	; 0
    1706:	30 e0       	ldi	r19, 0x00	; 0
    1708:	a9 01       	movw	r20, r18
    170a:	60 91 5d 01 	lds	r22, 0x015D
    170e:	70 91 5e 01 	lds	r23, 0x015E
    1712:	80 91 5f 01 	lds	r24, 0x015F
    1716:	90 91 60 01 	lds	r25, 0x0160
    171a:	0e 94 ef 13 	call	0x27de	; 0x27de <__cmpsf2>
    171e:	81 11       	cpse	r24, r1
    1720:	08 c0       	rjmp	.+16     	; 0x1732 <localize+0x20a>
    1722:	80 92 5d 01 	sts	0x015D, r8
    1726:	90 92 5e 01 	sts	0x015E, r9
    172a:	a0 92 5f 01 	sts	0x015F, r10
    172e:	b0 92 60 01 	sts	0x0160, r11
    1732:	23 e3       	ldi	r18, 0x33	; 51
    1734:	33 e3       	ldi	r19, 0x33	; 51
    1736:	43 e7       	ldi	r20, 0x73	; 115
    1738:	5f e3       	ldi	r21, 0x3F	; 63
    173a:	60 91 5d 01 	lds	r22, 0x015D
    173e:	70 91 5e 01 	lds	r23, 0x015E
    1742:	80 91 5f 01 	lds	r24, 0x015F
    1746:	90 91 60 01 	lds	r25, 0x0160
    174a:	0e 94 44 16 	call	0x2c88	; 0x2c88 <__mulsf3>
    174e:	4b 01       	movw	r8, r22
    1750:	5c 01       	movw	r10, r24
    1752:	20 ed       	ldi	r18, 0xD0	; 208
    1754:	3c ec       	ldi	r19, 0xCC	; 204
    1756:	4c e4       	ldi	r20, 0x4C	; 76
    1758:	5d e3       	ldi	r21, 0x3D	; 61
    175a:	60 91 69 01 	lds	r22, 0x0169
    175e:	70 91 6a 01 	lds	r23, 0x016A
    1762:	80 91 6b 01 	lds	r24, 0x016B
    1766:	90 91 6c 01 	lds	r25, 0x016C
    176a:	0e 94 44 16 	call	0x2c88	; 0x2c88 <__mulsf3>
    176e:	9b 01       	movw	r18, r22
    1770:	ac 01       	movw	r20, r24
    1772:	c5 01       	movw	r24, r10
    1774:	b4 01       	movw	r22, r8
    1776:	0e 94 29 13 	call	0x2652	; 0x2652 <__addsf3>
    177a:	20 e0       	ldi	r18, 0x00	; 0
    177c:	30 e0       	ldi	r19, 0x00	; 0
    177e:	44 e3       	ldi	r20, 0x34	; 52
    1780:	53 e4       	ldi	r21, 0x43	; 67
    1782:	0e 94 44 16 	call	0x2c88	; 0x2c88 <__mulsf3>
    1786:	23 ec       	ldi	r18, 0xC3	; 195
    1788:	35 ef       	ldi	r19, 0xF5	; 245
    178a:	48 e4       	ldi	r20, 0x48	; 72
    178c:	50 e4       	ldi	r21, 0x40	; 64
    178e:	0e 94 f6 13 	call	0x27ec	; 0x27ec <__divsf3>
    1792:	86 2e       	mov	r8, r22
    1794:	97 2e       	mov	r9, r23
    1796:	a8 2e       	mov	r10, r24
    1798:	b9 2e       	mov	r11, r25
    179a:	f8 01       	movw	r30, r16
    179c:	80 86       	std	Z+8, r8	; 0x08
    179e:	91 86       	std	Z+9, r9	; 0x09
    17a0:	a2 86       	std	Z+10, r10	; 0x0a
    17a2:	b3 86       	std	Z+11, r11	; 0x0b
    17a4:	23 ec       	ldi	r18, 0xC3	; 195
    17a6:	35 ef       	ldi	r19, 0xF5	; 245
    17a8:	48 e4       	ldi	r20, 0x48	; 72
    17aa:	50 e4       	ldi	r21, 0x40	; 64
    17ac:	0e 94 44 16 	call	0x2c88	; 0x2c88 <__mulsf3>
    17b0:	20 e0       	ldi	r18, 0x00	; 0
    17b2:	30 e0       	ldi	r19, 0x00	; 0
    17b4:	44 e3       	ldi	r20, 0x34	; 52
    17b6:	53 e4       	ldi	r21, 0x43	; 67
    17b8:	0e 94 f6 13 	call	0x27ec	; 0x27ec <__divsf3>
    17bc:	9b 01       	movw	r18, r22
    17be:	ac 01       	movw	r20, r24
    17c0:	62 e5       	ldi	r22, 0x52	; 82
    17c2:	78 eb       	ldi	r23, 0xB8	; 184
    17c4:	86 e9       	ldi	r24, 0x96	; 150
    17c6:	90 e4       	ldi	r25, 0x40	; 64
    17c8:	0e 94 28 13 	call	0x2650	; 0x2650 <__subsf3>
    17cc:	a3 01       	movw	r20, r6
    17ce:	92 01       	movw	r18, r4
    17d0:	0e 94 28 13 	call	0x2650	; 0x2650 <__subsf3>
    17d4:	86 2e       	mov	r8, r22
    17d6:	97 2e       	mov	r9, r23
    17d8:	a8 2e       	mov	r10, r24
    17da:	b9 2e       	mov	r11, r25
    17dc:	0e 94 a7 16 	call	0x2d4e	; 0x2d4e <sin>
    17e0:	9b 01       	movw	r18, r22
    17e2:	ac 01       	movw	r20, r24
    17e4:	c7 01       	movw	r24, r14
    17e6:	b6 01       	movw	r22, r12
    17e8:	90 58       	subi	r25, 0x80	; 128
    17ea:	0e 94 44 16 	call	0x2c88	; 0x2c88 <__mulsf3>
    17ee:	29 e3       	ldi	r18, 0x39	; 57
    17f0:	3e e8       	ldi	r19, 0x8E	; 142
    17f2:	43 ea       	ldi	r20, 0xA3	; 163
    17f4:	5e e3       	ldi	r21, 0x3E	; 62
    17f6:	0e 94 44 16 	call	0x2c88	; 0x2c88 <__mulsf3>
    17fa:	69 83       	std	Y+1, r22	; 0x01
    17fc:	7b 87       	std	Y+11, r23	; 0x0b
    17fe:	8d 87       	std	Y+13, r24	; 0x0d
    1800:	9c 87       	std	Y+12, r25	; 0x0c
    1802:	47 2f       	mov	r20, r23
    1804:	38 2f       	mov	r19, r24
    1806:	29 2f       	mov	r18, r25
    1808:	86 2f       	mov	r24, r22
    180a:	94 2f       	mov	r25, r20
    180c:	a3 2f       	mov	r26, r19
    180e:	b2 2f       	mov	r27, r18
    1810:	80 93 71 01 	sts	0x0171, r24
    1814:	90 93 72 01 	sts	0x0172, r25
    1818:	a0 93 73 01 	sts	0x0173, r26
    181c:	b0 93 74 01 	sts	0x0174, r27
    1820:	68 2d       	mov	r22, r8
    1822:	79 2d       	mov	r23, r9
    1824:	8a 2d       	mov	r24, r10
    1826:	9b 2d       	mov	r25, r11
    1828:	0e 94 f3 13 	call	0x27e6	; 0x27e6 <cos>
    182c:	a7 01       	movw	r20, r14
    182e:	96 01       	movw	r18, r12
    1830:	0e 94 44 16 	call	0x2c88	; 0x2c88 <__mulsf3>
    1834:	29 e8       	ldi	r18, 0x89	; 137
    1836:	3a ed       	ldi	r19, 0xDA	; 218
    1838:	45 e9       	ldi	r20, 0x95	; 149
    183a:	5e e3       	ldi	r21, 0x3E	; 62
    183c:	0e 94 44 16 	call	0x2c88	; 0x2c88 <__mulsf3>
    1840:	86 2e       	mov	r8, r22
    1842:	97 2e       	mov	r9, r23
    1844:	a8 2e       	mov	r10, r24
    1846:	b9 2e       	mov	r11, r25
    1848:	86 2f       	mov	r24, r22
    184a:	99 2d       	mov	r25, r9
    184c:	aa 2d       	mov	r26, r10
    184e:	bb 2d       	mov	r27, r11
    1850:	80 93 6d 01 	sts	0x016D, r24
    1854:	90 93 6e 01 	sts	0x016E, r25
    1858:	a0 93 6f 01 	sts	0x016F, r26
    185c:	b0 93 70 01 	sts	0x0170, r27
    1860:	20 e0       	ldi	r18, 0x00	; 0
    1862:	30 e0       	ldi	r19, 0x00	; 0
    1864:	a9 01       	movw	r20, r18
    1866:	60 91 65 01 	lds	r22, 0x0165
    186a:	70 91 66 01 	lds	r23, 0x0166
    186e:	80 91 67 01 	lds	r24, 0x0167
    1872:	90 91 68 01 	lds	r25, 0x0168
    1876:	0e 94 ef 13 	call	0x27de	; 0x27de <__cmpsf2>
    187a:	81 11       	cpse	r24, r1
    187c:	2b c0       	rjmp	.+86     	; 0x18d4 <localize+0x3ac>
    187e:	20 e0       	ldi	r18, 0x00	; 0
    1880:	30 e0       	ldi	r19, 0x00	; 0
    1882:	a9 01       	movw	r20, r18
    1884:	60 91 61 01 	lds	r22, 0x0161
    1888:	70 91 62 01 	lds	r23, 0x0162
    188c:	80 91 63 01 	lds	r24, 0x0163
    1890:	90 91 64 01 	lds	r25, 0x0164
    1894:	0e 94 ef 13 	call	0x27de	; 0x27de <__cmpsf2>
    1898:	81 11       	cpse	r24, r1
    189a:	1c c0       	rjmp	.+56     	; 0x18d4 <localize+0x3ac>
    189c:	59 81       	ldd	r21, Y+1	; 0x01
    189e:	4b 85       	ldd	r20, Y+11	; 0x0b
    18a0:	3d 85       	ldd	r19, Y+13	; 0x0d
    18a2:	2c 85       	ldd	r18, Y+12	; 0x0c
    18a4:	85 2f       	mov	r24, r21
    18a6:	94 2f       	mov	r25, r20
    18a8:	a3 2f       	mov	r26, r19
    18aa:	b2 2f       	mov	r27, r18
    18ac:	80 93 65 01 	sts	0x0165, r24
    18b0:	90 93 66 01 	sts	0x0166, r25
    18b4:	a0 93 67 01 	sts	0x0167, r26
    18b8:	b0 93 68 01 	sts	0x0168, r27
    18bc:	88 2d       	mov	r24, r8
    18be:	99 2d       	mov	r25, r9
    18c0:	aa 2d       	mov	r26, r10
    18c2:	bb 2d       	mov	r27, r11
    18c4:	80 93 61 01 	sts	0x0161, r24
    18c8:	90 93 62 01 	sts	0x0162, r25
    18cc:	a0 93 63 01 	sts	0x0163, r26
    18d0:	b0 93 64 01 	sts	0x0164, r27
    18d4:	23 e3       	ldi	r18, 0x33	; 51
    18d6:	33 e3       	ldi	r19, 0x33	; 51
    18d8:	43 e7       	ldi	r20, 0x73	; 115
    18da:	5f e3       	ldi	r21, 0x3F	; 63
    18dc:	60 91 65 01 	lds	r22, 0x0165
    18e0:	70 91 66 01 	lds	r23, 0x0166
    18e4:	80 91 67 01 	lds	r24, 0x0167
    18e8:	90 91 68 01 	lds	r25, 0x0168
    18ec:	0e 94 44 16 	call	0x2c88	; 0x2c88 <__mulsf3>
    18f0:	4b 01       	movw	r8, r22
    18f2:	5c 01       	movw	r10, r24
    18f4:	20 ed       	ldi	r18, 0xD0	; 208
    18f6:	3c ec       	ldi	r19, 0xCC	; 204
    18f8:	4c e4       	ldi	r20, 0x4C	; 76
    18fa:	5d e3       	ldi	r21, 0x3D	; 61
    18fc:	b9 81       	ldd	r27, Y+1	; 0x01
    18fe:	ab 85       	ldd	r26, Y+11	; 0x0b
    1900:	fd 85       	ldd	r31, Y+13	; 0x0d
    1902:	ec 85       	ldd	r30, Y+12	; 0x0c
    1904:	6b 2f       	mov	r22, r27
    1906:	7a 2f       	mov	r23, r26
    1908:	8f 2f       	mov	r24, r31
    190a:	9e 2f       	mov	r25, r30
    190c:	0e 94 44 16 	call	0x2c88	; 0x2c88 <__mulsf3>
    1910:	9b 01       	movw	r18, r22
    1912:	ac 01       	movw	r20, r24
    1914:	c5 01       	movw	r24, r10
    1916:	b4 01       	movw	r22, r8
    1918:	0e 94 29 13 	call	0x2652	; 0x2652 <__addsf3>
    191c:	f8 01       	movw	r30, r16
    191e:	60 83       	st	Z, r22
    1920:	71 83       	std	Z+1, r23	; 0x01
    1922:	82 83       	std	Z+2, r24	; 0x02
    1924:	93 83       	std	Z+3, r25	; 0x03
    1926:	80 90 6d 01 	lds	r8, 0x016D
    192a:	90 90 6e 01 	lds	r9, 0x016E
    192e:	a0 90 6f 01 	lds	r10, 0x016F
    1932:	b0 90 70 01 	lds	r11, 0x0170
    1936:	23 e3       	ldi	r18, 0x33	; 51
    1938:	33 e3       	ldi	r19, 0x33	; 51
    193a:	43 e7       	ldi	r20, 0x73	; 115
    193c:	5f e3       	ldi	r21, 0x3F	; 63
    193e:	60 91 61 01 	lds	r22, 0x0161
    1942:	70 91 62 01 	lds	r23, 0x0162
    1946:	80 91 63 01 	lds	r24, 0x0163
    194a:	90 91 64 01 	lds	r25, 0x0164
    194e:	0e 94 44 16 	call	0x2c88	; 0x2c88 <__mulsf3>
    1952:	69 83       	std	Y+1, r22	; 0x01
    1954:	7a 83       	std	Y+2, r23	; 0x02
    1956:	8b 83       	std	Y+3, r24	; 0x03
    1958:	9c 83       	std	Y+4, r25	; 0x04
    195a:	20 ed       	ldi	r18, 0xD0	; 208
    195c:	3c ec       	ldi	r19, 0xCC	; 204
    195e:	4c e4       	ldi	r20, 0x4C	; 76
    1960:	5d e3       	ldi	r21, 0x3D	; 61
    1962:	c5 01       	movw	r24, r10
    1964:	b4 01       	movw	r22, r8
    1966:	0e 94 44 16 	call	0x2c88	; 0x2c88 <__mulsf3>
    196a:	9b 01       	movw	r18, r22
    196c:	ac 01       	movw	r20, r24
    196e:	69 81       	ldd	r22, Y+1	; 0x01
    1970:	7a 81       	ldd	r23, Y+2	; 0x02
    1972:	8b 81       	ldd	r24, Y+3	; 0x03
    1974:	9c 81       	ldd	r25, Y+4	; 0x04
    1976:	0e 94 29 13 	call	0x2652	; 0x2652 <__addsf3>
    197a:	f8 01       	movw	r30, r16
    197c:	64 83       	std	Z+4, r22	; 0x04
    197e:	75 83       	std	Z+5, r23	; 0x05
    1980:	86 83       	std	Z+6, r24	; 0x06
    1982:	97 83       	std	Z+7, r25	; 0x07
    1984:	80 91 7b 01 	lds	r24, 0x017B
    1988:	90 91 7c 01 	lds	r25, 0x017C
    198c:	9c 01       	movw	r18, r24
    198e:	22 0f       	add	r18, r18
    1990:	33 1f       	adc	r19, r19
    1992:	3a 83       	std	Y+2, r19	; 0x02
    1994:	29 83       	std	Y+1, r18	; 0x01
    1996:	f9 01       	movw	r30, r18
    1998:	eb 5a       	subi	r30, 0xAB	; 171
    199a:	fe 4f       	sbci	r31, 0xFE	; 254
    199c:	60 81       	ld	r22, Z
    199e:	71 81       	ldd	r23, Z+1	; 0x01
    19a0:	80 e0       	ldi	r24, 0x00	; 0
    19a2:	90 e0       	ldi	r25, 0x00	; 0
    19a4:	0e 94 c0 14 	call	0x2980	; 0x2980 <__floatunsisf>
    19a8:	f8 01       	movw	r30, r16
    19aa:	64 87       	std	Z+12, r22	; 0x0c
    19ac:	75 87       	std	Z+13, r23	; 0x0d
    19ae:	86 87       	std	Z+14, r24	; 0x0e
    19b0:	97 87       	std	Z+15, r25	; 0x0f
    19b2:	e9 81       	ldd	r30, Y+1	; 0x01
    19b4:	fa 81       	ldd	r31, Y+2	; 0x02
    19b6:	e3 5b       	subi	r30, 0xB3	; 179
    19b8:	fe 4f       	sbci	r31, 0xFE	; 254
    19ba:	60 81       	ld	r22, Z
    19bc:	71 81       	ldd	r23, Z+1	; 0x01
    19be:	80 e0       	ldi	r24, 0x00	; 0
    19c0:	90 e0       	ldi	r25, 0x00	; 0
    19c2:	0e 94 c0 14 	call	0x2980	; 0x2980 <__floatunsisf>
    19c6:	f8 01       	movw	r30, r16
    19c8:	60 8b       	std	Z+16, r22	; 0x10
    19ca:	71 8b       	std	Z+17, r23	; 0x11
    19cc:	82 8b       	std	Z+18, r24	; 0x12
    19ce:	93 8b       	std	Z+19, r25	; 0x13
    19d0:	80 91 79 01 	lds	r24, 0x0179
    19d4:	90 91 7a 01 	lds	r25, 0x017A
    19d8:	9c 01       	movw	r18, r24
    19da:	22 0f       	add	r18, r18
    19dc:	33 1f       	adc	r19, r19
    19de:	3a 83       	std	Y+2, r19	; 0x02
    19e0:	29 83       	std	Y+1, r18	; 0x01
    19e2:	f9 01       	movw	r30, r18
    19e4:	eb 5a       	subi	r30, 0xAB	; 171
    19e6:	fe 4f       	sbci	r31, 0xFE	; 254
    19e8:	60 81       	ld	r22, Z
    19ea:	71 81       	ldd	r23, Z+1	; 0x01
    19ec:	80 e0       	ldi	r24, 0x00	; 0
    19ee:	90 e0       	ldi	r25, 0x00	; 0
    19f0:	0e 94 c0 14 	call	0x2980	; 0x2980 <__floatunsisf>
    19f4:	f8 01       	movw	r30, r16
    19f6:	64 8b       	std	Z+20, r22	; 0x14
    19f8:	75 8b       	std	Z+21, r23	; 0x15
    19fa:	86 8b       	std	Z+22, r24	; 0x16
    19fc:	97 8b       	std	Z+23, r25	; 0x17
    19fe:	e9 81       	ldd	r30, Y+1	; 0x01
    1a00:	fa 81       	ldd	r31, Y+2	; 0x02
    1a02:	e3 5b       	subi	r30, 0xB3	; 179
    1a04:	fe 4f       	sbci	r31, 0xFE	; 254
    1a06:	60 81       	ld	r22, Z
    1a08:	71 81       	ldd	r23, Z+1	; 0x01
    1a0a:	80 e0       	ldi	r24, 0x00	; 0
    1a0c:	90 e0       	ldi	r25, 0x00	; 0
    1a0e:	0e 94 c0 14 	call	0x2980	; 0x2980 <__floatunsisf>
    1a12:	f8 01       	movw	r30, r16
    1a14:	60 8f       	std	Z+24, r22	; 0x18
    1a16:	71 8f       	std	Z+25, r23	; 0x19
    1a18:	82 8f       	std	Z+26, r24	; 0x1a
    1a1a:	93 8f       	std	Z+27, r25	; 0x1b
    1a1c:	80 91 75 01 	lds	r24, 0x0175
    1a20:	90 91 76 01 	lds	r25, 0x0176
    1a24:	9c 01       	movw	r18, r24
    1a26:	22 0f       	add	r18, r18
    1a28:	33 1f       	adc	r19, r19
    1a2a:	3a 83       	std	Y+2, r19	; 0x02
    1a2c:	29 83       	std	Y+1, r18	; 0x01
    1a2e:	f9 01       	movw	r30, r18
    1a30:	eb 5a       	subi	r30, 0xAB	; 171
    1a32:	fe 4f       	sbci	r31, 0xFE	; 254
    1a34:	60 81       	ld	r22, Z
    1a36:	71 81       	ldd	r23, Z+1	; 0x01
    1a38:	80 e0       	ldi	r24, 0x00	; 0
    1a3a:	90 e0       	ldi	r25, 0x00	; 0
    1a3c:	0e 94 c0 14 	call	0x2980	; 0x2980 <__floatunsisf>
    1a40:	f8 01       	movw	r30, r16
    1a42:	64 8f       	std	Z+28, r22	; 0x1c
    1a44:	75 8f       	std	Z+29, r23	; 0x1d
    1a46:	86 8f       	std	Z+30, r24	; 0x1e
    1a48:	97 8f       	std	Z+31, r25	; 0x1f
    1a4a:	e9 81       	ldd	r30, Y+1	; 0x01
    1a4c:	fa 81       	ldd	r31, Y+2	; 0x02
    1a4e:	e3 5b       	subi	r30, 0xB3	; 179
    1a50:	fe 4f       	sbci	r31, 0xFE	; 254
    1a52:	60 81       	ld	r22, Z
    1a54:	71 81       	ldd	r23, Z+1	; 0x01
    1a56:	80 e0       	ldi	r24, 0x00	; 0
    1a58:	90 e0       	ldi	r25, 0x00	; 0
    1a5a:	0e 94 c0 14 	call	0x2980	; 0x2980 <__floatunsisf>
    1a5e:	f8 01       	movw	r30, r16
    1a60:	60 a3       	std	Z+32, r22	; 0x20
    1a62:	71 a3       	std	Z+33, r23	; 0x21
    1a64:	82 a3       	std	Z+34, r24	; 0x22
    1a66:	93 a3       	std	Z+35, r25	; 0x23
    1a68:	80 91 77 01 	lds	r24, 0x0177
    1a6c:	90 91 78 01 	lds	r25, 0x0178
    1a70:	9c 01       	movw	r18, r24
    1a72:	22 0f       	add	r18, r18
    1a74:	33 1f       	adc	r19, r19
    1a76:	3a 83       	std	Y+2, r19	; 0x02
    1a78:	29 83       	std	Y+1, r18	; 0x01
    1a7a:	f9 01       	movw	r30, r18
    1a7c:	eb 5a       	subi	r30, 0xAB	; 171
    1a7e:	fe 4f       	sbci	r31, 0xFE	; 254
    1a80:	60 81       	ld	r22, Z
    1a82:	71 81       	ldd	r23, Z+1	; 0x01
    1a84:	80 e0       	ldi	r24, 0x00	; 0
    1a86:	90 e0       	ldi	r25, 0x00	; 0
    1a88:	0e 94 c0 14 	call	0x2980	; 0x2980 <__floatunsisf>
    1a8c:	f8 01       	movw	r30, r16
    1a8e:	64 a3       	std	Z+36, r22	; 0x24
    1a90:	75 a3       	std	Z+37, r23	; 0x25
    1a92:	86 a3       	std	Z+38, r24	; 0x26
    1a94:	97 a3       	std	Z+39, r25	; 0x27
    1a96:	e9 81       	ldd	r30, Y+1	; 0x01
    1a98:	fa 81       	ldd	r31, Y+2	; 0x02
    1a9a:	e3 5b       	subi	r30, 0xB3	; 179
    1a9c:	fe 4f       	sbci	r31, 0xFE	; 254
    1a9e:	60 81       	ld	r22, Z
    1aa0:	71 81       	ldd	r23, Z+1	; 0x01
    1aa2:	80 e0       	ldi	r24, 0x00	; 0
    1aa4:	90 e0       	ldi	r25, 0x00	; 0
    1aa6:	0e 94 c0 14 	call	0x2980	; 0x2980 <__floatunsisf>
    1aaa:	f8 01       	movw	r30, r16
    1aac:	60 a7       	std	Z+40, r22	; 0x28
    1aae:	71 a7       	std	Z+41, r23	; 0x29
    1ab0:	82 a7       	std	Z+42, r24	; 0x2a
    1ab2:	93 a7       	std	Z+43, r25	; 0x2b
    1ab4:	20 e0       	ldi	r18, 0x00	; 0
    1ab6:	30 e0       	ldi	r19, 0x00	; 0
    1ab8:	44 e3       	ldi	r20, 0x34	; 52
    1aba:	53 e4       	ldi	r21, 0x43	; 67
    1abc:	c3 01       	movw	r24, r6
    1abe:	b2 01       	movw	r22, r4
    1ac0:	0e 94 44 16 	call	0x2c88	; 0x2c88 <__mulsf3>
    1ac4:	23 ec       	ldi	r18, 0xC3	; 195
    1ac6:	35 ef       	ldi	r19, 0xF5	; 245
    1ac8:	48 e4       	ldi	r20, 0x48	; 72
    1aca:	50 e4       	ldi	r21, 0x40	; 64
    1acc:	0e 94 f6 13 	call	0x27ec	; 0x27ec <__divsf3>
    1ad0:	f8 01       	movw	r30, r16
    1ad2:	64 a7       	std	Z+44, r22	; 0x2c
    1ad4:	75 a7       	std	Z+45, r23	; 0x2d
    1ad6:	86 a7       	std	Z+46, r24	; 0x2e
    1ad8:	97 a7       	std	Z+47, r25	; 0x2f
    1ada:	5d 81       	ldd	r21, Y+5	; 0x05
    1adc:	4e 81       	ldd	r20, Y+6	; 0x06
    1ade:	3f 81       	ldd	r19, Y+7	; 0x07
    1ae0:	28 85       	ldd	r18, Y+8	; 0x08
    1ae2:	85 2f       	mov	r24, r21
    1ae4:	94 2f       	mov	r25, r20
    1ae6:	a3 2f       	mov	r26, r19
    1ae8:	b2 2f       	mov	r27, r18
    1aea:	80 ab       	std	Z+48, r24	; 0x30
    1aec:	91 ab       	std	Z+49, r25	; 0x31
    1aee:	a2 ab       	std	Z+50, r26	; 0x32
    1af0:	b3 ab       	std	Z+51, r27	; 0x33
    1af2:	59 85       	ldd	r21, Y+9	; 0x09
    1af4:	4a 85       	ldd	r20, Y+10	; 0x0a
    1af6:	85 2f       	mov	r24, r21
    1af8:	94 2f       	mov	r25, r20
    1afa:	a2 2d       	mov	r26, r2
    1afc:	b3 2d       	mov	r27, r3
    1afe:	84 ab       	std	Z+52, r24	; 0x34
    1b00:	95 ab       	std	Z+53, r25	; 0x35
    1b02:	a6 ab       	std	Z+54, r26	; 0x36
    1b04:	b7 ab       	std	Z+55, r27	; 0x37
    1b06:	c0 ae       	std	Z+56, r12	; 0x38
    1b08:	d1 ae       	std	Z+57, r13	; 0x39
    1b0a:	e2 ae       	std	Z+58, r14	; 0x3a
    1b0c:	f3 ae       	std	Z+59, r15	; 0x3b
    1b0e:	80 91 71 01 	lds	r24, 0x0171
    1b12:	90 91 72 01 	lds	r25, 0x0172
    1b16:	a0 91 73 01 	lds	r26, 0x0173
    1b1a:	b0 91 74 01 	lds	r27, 0x0174
    1b1e:	80 93 65 01 	sts	0x0165, r24
    1b22:	90 93 66 01 	sts	0x0166, r25
    1b26:	a0 93 67 01 	sts	0x0167, r26
    1b2a:	b0 93 68 01 	sts	0x0168, r27
    1b2e:	80 92 61 01 	sts	0x0161, r8
    1b32:	90 92 62 01 	sts	0x0162, r9
    1b36:	a0 92 63 01 	sts	0x0163, r10
    1b3a:	b0 92 64 01 	sts	0x0164, r11
    1b3e:	80 91 69 01 	lds	r24, 0x0169
    1b42:	90 91 6a 01 	lds	r25, 0x016A
    1b46:	a0 91 6b 01 	lds	r26, 0x016B
    1b4a:	b0 91 6c 01 	lds	r27, 0x016C
    1b4e:	80 93 5d 01 	sts	0x015D, r24
    1b52:	90 93 5e 01 	sts	0x015E, r25
    1b56:	a0 93 5f 01 	sts	0x015F, r26
    1b5a:	b0 93 60 01 	sts	0x0160, r27
    1b5e:	81 e0       	ldi	r24, 0x01	; 1
    1b60:	00 c0       	rjmp	.+0      	; 0x1b62 <localize+0x63a>
    1b62:	2d 96       	adiw	r28, 0x0d	; 13
    1b64:	0f b6       	in	r0, 0x3f	; 63
    1b66:	f8 94       	cli
    1b68:	de bf       	out	0x3e, r29	; 62
    1b6a:	0f be       	out	0x3f, r0	; 63
    1b6c:	cd bf       	out	0x3d, r28	; 61
    1b6e:	df 91       	pop	r29
    1b70:	cf 91       	pop	r28
    1b72:	1f 91       	pop	r17
    1b74:	0f 91       	pop	r16
    1b76:	ff 90       	pop	r15
    1b78:	ef 90       	pop	r14
    1b7a:	df 90       	pop	r13
    1b7c:	cf 90       	pop	r12
    1b7e:	bf 90       	pop	r11
    1b80:	af 90       	pop	r10
    1b82:	9f 90       	pop	r9
    1b84:	8f 90       	pop	r8
    1b86:	7f 90       	pop	r7
    1b88:	6f 90       	pop	r6
    1b8a:	5f 90       	pop	r5
    1b8c:	4f 90       	pop	r4
    1b8e:	3f 90       	pop	r3
    1b90:	2f 90       	pop	r2
    1b92:	08 95       	ret

00001b94 <m_rf_open>:
    1b94:	1f 93       	push	r17
    1b96:	cf 93       	push	r28
    1b98:	df 93       	push	r29
    1b9a:	18 2f       	mov	r17, r24
    1b9c:	d6 2f       	mov	r29, r22
    1b9e:	c4 2f       	mov	r28, r20
    1ba0:	0e 94 c0 07 	call	0xf80	; 0xf80 <m_bus_init>
    1ba4:	94 ea       	ldi	r25, 0xA4	; 164
    1ba6:	90 93 bc 00 	sts	0x00BC, r25
    1baa:	ec eb       	ldi	r30, 0xBC	; 188
    1bac:	f0 e0       	ldi	r31, 0x00	; 0
    1bae:	90 81       	ld	r25, Z
    1bb0:	99 23       	and	r25, r25
    1bb2:	ec f7       	brge	.-6      	; 0x1bae <m_rf_open+0x1a>
    1bb4:	90 e5       	ldi	r25, 0x50	; 80
    1bb6:	90 93 bb 00 	sts	0x00BB, r25
    1bba:	94 e8       	ldi	r25, 0x84	; 132
    1bbc:	90 93 bc 00 	sts	0x00BC, r25
    1bc0:	ec eb       	ldi	r30, 0xBC	; 188
    1bc2:	f0 e0       	ldi	r31, 0x00	; 0
    1bc4:	90 81       	ld	r25, Z
    1bc6:	99 23       	and	r25, r25
    1bc8:	ec f7       	brge	.-6      	; 0x1bc4 <m_rf_open+0x30>
    1bca:	90 91 b9 00 	lds	r25, 0x00B9
    1bce:	98 7f       	andi	r25, 0xF8	; 248
    1bd0:	90 32       	cpi	r25, 0x20	; 32
    1bd2:	29 f4       	brne	.+10     	; 0x1bde <m_rf_open+0x4a>
    1bd4:	84 e9       	ldi	r24, 0x94	; 148
    1bd6:	80 93 bc 00 	sts	0x00BC, r24
    1bda:	80 e0       	ldi	r24, 0x00	; 0
    1bdc:	2d c0       	rjmp	.+90     	; 0x1c38 <m_rf_open+0xa4>
    1bde:	81 e0       	ldi	r24, 0x01	; 1
    1be0:	80 93 bb 00 	sts	0x00BB, r24
    1be4:	84 e8       	ldi	r24, 0x84	; 132
    1be6:	80 93 bc 00 	sts	0x00BC, r24
    1bea:	ec eb       	ldi	r30, 0xBC	; 188
    1bec:	f0 e0       	ldi	r31, 0x00	; 0
    1bee:	90 81       	ld	r25, Z
    1bf0:	99 23       	and	r25, r25
    1bf2:	ec f7       	brge	.-6      	; 0x1bee <m_rf_open+0x5a>
    1bf4:	10 93 bb 00 	sts	0x00BB, r17
    1bf8:	84 e8       	ldi	r24, 0x84	; 132
    1bfa:	80 93 bc 00 	sts	0x00BC, r24
    1bfe:	ec eb       	ldi	r30, 0xBC	; 188
    1c00:	f0 e0       	ldi	r31, 0x00	; 0
    1c02:	80 81       	ld	r24, Z
    1c04:	88 23       	and	r24, r24
    1c06:	ec f7       	brge	.-6      	; 0x1c02 <m_rf_open+0x6e>
    1c08:	d0 93 bb 00 	sts	0x00BB, r29
    1c0c:	84 e8       	ldi	r24, 0x84	; 132
    1c0e:	80 93 bc 00 	sts	0x00BC, r24
    1c12:	ec eb       	ldi	r30, 0xBC	; 188
    1c14:	f0 e0       	ldi	r31, 0x00	; 0
    1c16:	80 81       	ld	r24, Z
    1c18:	88 23       	and	r24, r24
    1c1a:	ec f7       	brge	.-6      	; 0x1c16 <m_rf_open+0x82>
    1c1c:	c0 93 bb 00 	sts	0x00BB, r28
    1c20:	84 e8       	ldi	r24, 0x84	; 132
    1c22:	80 93 bc 00 	sts	0x00BC, r24
    1c26:	ec eb       	ldi	r30, 0xBC	; 188
    1c28:	f0 e0       	ldi	r31, 0x00	; 0
    1c2a:	80 81       	ld	r24, Z
    1c2c:	88 23       	and	r24, r24
    1c2e:	ec f7       	brge	.-6      	; 0x1c2a <m_rf_open+0x96>
    1c30:	84 e9       	ldi	r24, 0x94	; 148
    1c32:	80 93 bc 00 	sts	0x00BC, r24
    1c36:	81 e0       	ldi	r24, 0x01	; 1
    1c38:	df 91       	pop	r29
    1c3a:	cf 91       	pop	r28
    1c3c:	1f 91       	pop	r17
    1c3e:	08 95       	ret

00001c40 <m_rf_read>:
    1c40:	cf 93       	push	r28
    1c42:	df 93       	push	r29
    1c44:	24 ea       	ldi	r18, 0xA4	; 164
    1c46:	20 93 bc 00 	sts	0x00BC, r18
    1c4a:	ec eb       	ldi	r30, 0xBC	; 188
    1c4c:	f0 e0       	ldi	r31, 0x00	; 0
    1c4e:	20 81       	ld	r18, Z
    1c50:	22 23       	and	r18, r18
    1c52:	ec f7       	brge	.-6      	; 0x1c4e <m_rf_read+0xe>
    1c54:	21 e5       	ldi	r18, 0x51	; 81
    1c56:	20 93 bb 00 	sts	0x00BB, r18
    1c5a:	24 e8       	ldi	r18, 0x84	; 132
    1c5c:	20 93 bc 00 	sts	0x00BC, r18
    1c60:	ec eb       	ldi	r30, 0xBC	; 188
    1c62:	f0 e0       	ldi	r31, 0x00	; 0
    1c64:	20 81       	ld	r18, Z
    1c66:	22 23       	and	r18, r18
    1c68:	ec f7       	brge	.-6      	; 0x1c64 <m_rf_read+0x24>
    1c6a:	20 91 b9 00 	lds	r18, 0x00B9
    1c6e:	28 7f       	andi	r18, 0xF8	; 248
    1c70:	28 34       	cpi	r18, 0x48	; 72
    1c72:	29 f4       	brne	.+10     	; 0x1c7e <m_rf_read+0x3e>
    1c74:	84 e9       	ldi	r24, 0x94	; 148
    1c76:	80 93 bc 00 	sts	0x00BC, r24
    1c7a:	80 e0       	ldi	r24, 0x00	; 0
    1c7c:	3f c0       	rjmp	.+126    	; 0x1cfc <m_rf_read+0xbc>
    1c7e:	24 ec       	ldi	r18, 0xC4	; 196
    1c80:	20 93 bc 00 	sts	0x00BC, r18
    1c84:	ec eb       	ldi	r30, 0xBC	; 188
    1c86:	f0 e0       	ldi	r31, 0x00	; 0
    1c88:	20 81       	ld	r18, Z
    1c8a:	22 23       	and	r18, r18
    1c8c:	ec f7       	brge	.-6      	; 0x1c88 <m_rf_read+0x48>
    1c8e:	40 91 bb 00 	lds	r20, 0x00BB
    1c92:	46 13       	cpse	r20, r22
    1c94:	09 c0       	rjmp	.+18     	; 0x1ca8 <m_rf_read+0x68>
    1c96:	50 e0       	ldi	r21, 0x00	; 0
    1c98:	41 50       	subi	r20, 0x01	; 1
    1c9a:	51 09       	sbc	r21, r1
    1c9c:	14 16       	cp	r1, r20
    1c9e:	15 06       	cpc	r1, r21
    1ca0:	44 f0       	brlt	.+16     	; 0x1cb2 <m_rf_read+0x72>
    1ca2:	40 e0       	ldi	r20, 0x00	; 0
    1ca4:	50 e0       	ldi	r21, 0x00	; 0
    1ca6:	18 c0       	rjmp	.+48     	; 0x1cd8 <m_rf_read+0x98>
    1ca8:	84 e9       	ldi	r24, 0x94	; 148
    1caa:	80 93 bc 00 	sts	0x00BC, r24
    1cae:	80 e0       	ldi	r24, 0x00	; 0
    1cb0:	25 c0       	rjmp	.+74     	; 0x1cfc <m_rf_read+0xbc>
    1cb2:	dc 01       	movw	r26, r24
    1cb4:	20 e0       	ldi	r18, 0x00	; 0
    1cb6:	30 e0       	ldi	r19, 0x00	; 0
    1cb8:	ec eb       	ldi	r30, 0xBC	; 188
    1cba:	f0 e0       	ldi	r31, 0x00	; 0
    1cbc:	74 ec       	ldi	r23, 0xC4	; 196
    1cbe:	cb eb       	ldi	r28, 0xBB	; 187
    1cc0:	d0 e0       	ldi	r29, 0x00	; 0
    1cc2:	70 83       	st	Z, r23
    1cc4:	60 81       	ld	r22, Z
    1cc6:	66 23       	and	r22, r22
    1cc8:	ec f7       	brge	.-6      	; 0x1cc4 <m_rf_read+0x84>
    1cca:	68 81       	ld	r22, Y
    1ccc:	6d 93       	st	X+, r22
    1cce:	2f 5f       	subi	r18, 0xFF	; 255
    1cd0:	3f 4f       	sbci	r19, 0xFF	; 255
    1cd2:	24 17       	cp	r18, r20
    1cd4:	35 07       	cpc	r19, r21
    1cd6:	ac f3       	brlt	.-22     	; 0x1cc2 <m_rf_read+0x82>
    1cd8:	24 e8       	ldi	r18, 0x84	; 132
    1cda:	20 93 bc 00 	sts	0x00BC, r18
    1cde:	ec eb       	ldi	r30, 0xBC	; 188
    1ce0:	f0 e0       	ldi	r31, 0x00	; 0
    1ce2:	20 81       	ld	r18, Z
    1ce4:	22 23       	and	r18, r18
    1ce6:	ec f7       	brge	.-6      	; 0x1ce2 <m_rf_read+0xa2>
    1ce8:	20 91 bb 00 	lds	r18, 0x00BB
    1cec:	fc 01       	movw	r30, r24
    1cee:	e4 0f       	add	r30, r20
    1cf0:	f5 1f       	adc	r31, r21
    1cf2:	20 83       	st	Z, r18
    1cf4:	84 e9       	ldi	r24, 0x94	; 148
    1cf6:	80 93 bc 00 	sts	0x00BC, r24
    1cfa:	81 e0       	ldi	r24, 0x01	; 1
    1cfc:	df 91       	pop	r29
    1cfe:	cf 91       	pop	r28
    1d00:	08 95       	ret

00001d02 <m_usb_init>:
    1d02:	81 e0       	ldi	r24, 0x01	; 1
    1d04:	80 93 d7 00 	sts	0x00D7, r24
    1d08:	80 ea       	ldi	r24, 0xA0	; 160
    1d0a:	80 93 d8 00 	sts	0x00D8, r24
    1d0e:	82 e1       	ldi	r24, 0x12	; 18
    1d10:	89 bd       	out	0x29, r24	; 41
    1d12:	09 b4       	in	r0, 0x29	; 41
    1d14:	00 fe       	sbrs	r0, 0
    1d16:	fd cf       	rjmp	.-6      	; 0x1d12 <m_usb_init+0x10>
    1d18:	80 e9       	ldi	r24, 0x90	; 144
    1d1a:	80 93 d8 00 	sts	0x00D8, r24
    1d1e:	10 92 e0 00 	sts	0x00E0, r1
    1d22:	10 92 96 01 	sts	0x0196, r1
    1d26:	10 92 97 01 	sts	0x0197, r1
    1d2a:	8c e0       	ldi	r24, 0x0C	; 12
    1d2c:	80 93 e2 00 	sts	0x00E2, r24
    1d30:	78 94       	sei
    1d32:	08 95       	ret

00001d34 <m_usb_isconnected>:
    1d34:	80 91 96 01 	lds	r24, 0x0196
    1d38:	08 95       	ret

00001d3a <m_usb_rx_char>:
    1d3a:	9f b7       	in	r25, 0x3f	; 63
    1d3c:	f8 94       	cli
    1d3e:	80 91 96 01 	lds	r24, 0x0196
    1d42:	81 11       	cpse	r24, r1
    1d44:	03 c0       	rjmp	.+6      	; 0x1d4c <m_usb_rx_char+0x12>
    1d46:	9f bf       	out	0x3f, r25	; 63
    1d48:	8f ef       	ldi	r24, 0xFF	; 255
    1d4a:	08 95       	ret
    1d4c:	83 e0       	ldi	r24, 0x03	; 3
    1d4e:	80 93 e9 00 	sts	0x00E9, r24
    1d52:	80 91 e8 00 	lds	r24, 0x00E8
    1d56:	85 fd       	sbrc	r24, 5
    1d58:	03 c0       	rjmp	.+6      	; 0x1d60 <m_usb_rx_char+0x26>
    1d5a:	9f bf       	out	0x3f, r25	; 63
    1d5c:	8f ef       	ldi	r24, 0xFF	; 255
    1d5e:	08 95       	ret
    1d60:	80 91 f1 00 	lds	r24, 0x00F1
    1d64:	20 91 e8 00 	lds	r18, 0x00E8
    1d68:	25 fd       	sbrc	r18, 5
    1d6a:	03 c0       	rjmp	.+6      	; 0x1d72 <m_usb_rx_char+0x38>
    1d6c:	2b e6       	ldi	r18, 0x6B	; 107
    1d6e:	20 93 e8 00 	sts	0x00E8, r18
    1d72:	9f bf       	out	0x3f, r25	; 63
    1d74:	08 95       	ret

00001d76 <m_usb_rx_available>:
    1d76:	9f b7       	in	r25, 0x3f	; 63
    1d78:	f8 94       	cli
    1d7a:	80 91 96 01 	lds	r24, 0x0196
    1d7e:	88 23       	and	r24, r24
    1d80:	31 f0       	breq	.+12     	; 0x1d8e <m_usb_rx_available+0x18>
    1d82:	83 e0       	ldi	r24, 0x03	; 3
    1d84:	80 93 e9 00 	sts	0x00E9, r24
    1d88:	80 91 f2 00 	lds	r24, 0x00F2
    1d8c:	01 c0       	rjmp	.+2      	; 0x1d90 <m_usb_rx_available+0x1a>
    1d8e:	80 e0       	ldi	r24, 0x00	; 0
    1d90:	9f bf       	out	0x3f, r25	; 63
    1d92:	08 95       	ret

00001d94 <m_usb_rx_flush>:
    1d94:	80 91 96 01 	lds	r24, 0x0196
    1d98:	88 23       	and	r24, r24
    1d9a:	89 f0       	breq	.+34     	; 0x1dbe <m_usb_rx_flush+0x2a>
    1d9c:	2f b7       	in	r18, 0x3f	; 63
    1d9e:	f8 94       	cli
    1da0:	83 e0       	ldi	r24, 0x03	; 3
    1da2:	80 93 e9 00 	sts	0x00E9, r24
    1da6:	80 91 e8 00 	lds	r24, 0x00E8
    1daa:	85 ff       	sbrs	r24, 5
    1dac:	07 c0       	rjmp	.+14     	; 0x1dbc <m_usb_rx_flush+0x28>
    1dae:	e8 ee       	ldi	r30, 0xE8	; 232
    1db0:	f0 e0       	ldi	r31, 0x00	; 0
    1db2:	9b e6       	ldi	r25, 0x6B	; 107
    1db4:	90 83       	st	Z, r25
    1db6:	80 81       	ld	r24, Z
    1db8:	85 fd       	sbrc	r24, 5
    1dba:	fc cf       	rjmp	.-8      	; 0x1db4 <m_usb_rx_flush+0x20>
    1dbc:	2f bf       	out	0x3f, r18	; 63
    1dbe:	08 95       	ret

00001dc0 <m_usb_tx_char>:
    1dc0:	cf 93       	push	r28
    1dc2:	df 93       	push	r29
    1dc4:	90 91 96 01 	lds	r25, 0x0196
    1dc8:	99 23       	and	r25, r25
    1dca:	09 f4       	brne	.+2      	; 0x1dce <m_usb_tx_char+0xe>
    1dcc:	4d c0       	rjmp	.+154    	; 0x1e68 <m_usb_tx_char+0xa8>
    1dce:	9f b7       	in	r25, 0x3f	; 63
    1dd0:	f8 94       	cli
    1dd2:	24 e0       	ldi	r18, 0x04	; 4
    1dd4:	20 93 e9 00 	sts	0x00E9, r18
    1dd8:	20 91 98 01 	lds	r18, 0x0198
    1ddc:	22 23       	and	r18, r18
    1dde:	49 f0       	breq	.+18     	; 0x1df2 <m_usb_tx_char+0x32>
    1de0:	20 91 e8 00 	lds	r18, 0x00E8
    1de4:	25 fd       	sbrc	r18, 5
    1de6:	03 c0       	rjmp	.+6      	; 0x1dee <m_usb_tx_char+0x2e>
    1de8:	9f bf       	out	0x3f, r25	; 63
    1dea:	8f ef       	ldi	r24, 0xFF	; 255
    1dec:	42 c0       	rjmp	.+132    	; 0x1e72 <m_usb_tx_char+0xb2>
    1dee:	10 92 98 01 	sts	0x0198, r1
    1df2:	30 91 e4 00 	lds	r19, 0x00E4
    1df6:	37 5e       	subi	r19, 0xE7	; 231
    1df8:	20 91 e8 00 	lds	r18, 0x00E8
    1dfc:	25 fd       	sbrc	r18, 5
    1dfe:	25 c0       	rjmp	.+74     	; 0x1e4a <m_usb_tx_char+0x8a>
    1e00:	9f bf       	out	0x3f, r25	; 63
    1e02:	90 91 e4 00 	lds	r25, 0x00E4
    1e06:	93 17       	cp	r25, r19
    1e08:	49 f0       	breq	.+18     	; 0x1e1c <m_usb_tx_char+0x5c>
    1e0a:	90 91 96 01 	lds	r25, 0x0196
    1e0e:	91 11       	cpse	r25, r1
    1e10:	0f c0       	rjmp	.+30     	; 0x1e30 <m_usb_tx_char+0x70>
    1e12:	2c c0       	rjmp	.+88     	; 0x1e6c <m_usb_tx_char+0xac>
    1e14:	9f bf       	out	0x3f, r25	; 63
    1e16:	98 81       	ld	r25, Y
    1e18:	93 13       	cpse	r25, r19
    1e1a:	05 c0       	rjmp	.+10     	; 0x1e26 <m_usb_tx_char+0x66>
    1e1c:	81 e0       	ldi	r24, 0x01	; 1
    1e1e:	80 93 98 01 	sts	0x0198, r24
    1e22:	8f ef       	ldi	r24, 0xFF	; 255
    1e24:	26 c0       	rjmp	.+76     	; 0x1e72 <m_usb_tx_char+0xb2>
    1e26:	90 91 96 01 	lds	r25, 0x0196
    1e2a:	91 11       	cpse	r25, r1
    1e2c:	08 c0       	rjmp	.+16     	; 0x1e3e <m_usb_tx_char+0x7e>
    1e2e:	20 c0       	rjmp	.+64     	; 0x1e70 <m_usb_tx_char+0xb0>
    1e30:	a9 ee       	ldi	r26, 0xE9	; 233
    1e32:	b0 e0       	ldi	r27, 0x00	; 0
    1e34:	44 e0       	ldi	r20, 0x04	; 4
    1e36:	e8 ee       	ldi	r30, 0xE8	; 232
    1e38:	f0 e0       	ldi	r31, 0x00	; 0
    1e3a:	c4 ee       	ldi	r28, 0xE4	; 228
    1e3c:	d0 e0       	ldi	r29, 0x00	; 0
    1e3e:	9f b7       	in	r25, 0x3f	; 63
    1e40:	f8 94       	cli
    1e42:	4c 93       	st	X, r20
    1e44:	20 81       	ld	r18, Z
    1e46:	25 ff       	sbrs	r18, 5
    1e48:	e5 cf       	rjmp	.-54     	; 0x1e14 <m_usb_tx_char+0x54>
    1e4a:	80 93 f1 00 	sts	0x00F1, r24
    1e4e:	80 91 e8 00 	lds	r24, 0x00E8
    1e52:	85 fd       	sbrc	r24, 5
    1e54:	03 c0       	rjmp	.+6      	; 0x1e5c <m_usb_tx_char+0x9c>
    1e56:	8a e3       	ldi	r24, 0x3A	; 58
    1e58:	80 93 e8 00 	sts	0x00E8, r24
    1e5c:	85 e0       	ldi	r24, 0x05	; 5
    1e5e:	80 93 95 01 	sts	0x0195, r24
    1e62:	9f bf       	out	0x3f, r25	; 63
    1e64:	80 e0       	ldi	r24, 0x00	; 0
    1e66:	05 c0       	rjmp	.+10     	; 0x1e72 <m_usb_tx_char+0xb2>
    1e68:	8f ef       	ldi	r24, 0xFF	; 255
    1e6a:	03 c0       	rjmp	.+6      	; 0x1e72 <m_usb_tx_char+0xb2>
    1e6c:	8f ef       	ldi	r24, 0xFF	; 255
    1e6e:	01 c0       	rjmp	.+2      	; 0x1e72 <m_usb_tx_char+0xb2>
    1e70:	8f ef       	ldi	r24, 0xFF	; 255
    1e72:	df 91       	pop	r29
    1e74:	cf 91       	pop	r28
    1e76:	08 95       	ret

00001e78 <__vector_10>:
    1e78:	1f 92       	push	r1
    1e7a:	0f 92       	push	r0
    1e7c:	0f b6       	in	r0, 0x3f	; 63
    1e7e:	0f 92       	push	r0
    1e80:	11 24       	eor	r1, r1
    1e82:	8f 93       	push	r24
    1e84:	9f 93       	push	r25
    1e86:	ef 93       	push	r30
    1e88:	ff 93       	push	r31
    1e8a:	e1 ee       	ldi	r30, 0xE1	; 225
    1e8c:	f0 e0       	ldi	r31, 0x00	; 0
    1e8e:	80 81       	ld	r24, Z
    1e90:	10 82       	st	Z, r1
    1e92:	83 ff       	sbrs	r24, 3
    1e94:	11 c0       	rjmp	.+34     	; 0x1eb8 <__vector_10+0x40>
    1e96:	10 92 e9 00 	sts	0x00E9, r1
    1e9a:	91 e0       	ldi	r25, 0x01	; 1
    1e9c:	90 93 eb 00 	sts	0x00EB, r25
    1ea0:	10 92 ec 00 	sts	0x00EC, r1
    1ea4:	92 e1       	ldi	r25, 0x12	; 18
    1ea6:	90 93 ed 00 	sts	0x00ED, r25
    1eaa:	98 e0       	ldi	r25, 0x08	; 8
    1eac:	90 93 f0 00 	sts	0x00F0, r25
    1eb0:	10 92 96 01 	sts	0x0196, r1
    1eb4:	10 92 97 01 	sts	0x0197, r1
    1eb8:	82 ff       	sbrs	r24, 2
    1eba:	13 c0       	rjmp	.+38     	; 0x1ee2 <__vector_10+0x6a>
    1ebc:	80 91 96 01 	lds	r24, 0x0196
    1ec0:	88 23       	and	r24, r24
    1ec2:	79 f0       	breq	.+30     	; 0x1ee2 <__vector_10+0x6a>
    1ec4:	80 91 95 01 	lds	r24, 0x0195
    1ec8:	88 23       	and	r24, r24
    1eca:	59 f0       	breq	.+22     	; 0x1ee2 <__vector_10+0x6a>
    1ecc:	81 50       	subi	r24, 0x01	; 1
    1ece:	80 93 95 01 	sts	0x0195, r24
    1ed2:	81 11       	cpse	r24, r1
    1ed4:	06 c0       	rjmp	.+12     	; 0x1ee2 <__vector_10+0x6a>
    1ed6:	84 e0       	ldi	r24, 0x04	; 4
    1ed8:	80 93 e9 00 	sts	0x00E9, r24
    1edc:	8a e3       	ldi	r24, 0x3A	; 58
    1ede:	80 93 e8 00 	sts	0x00E8, r24
    1ee2:	ff 91       	pop	r31
    1ee4:	ef 91       	pop	r30
    1ee6:	9f 91       	pop	r25
    1ee8:	8f 91       	pop	r24
    1eea:	0f 90       	pop	r0
    1eec:	0f be       	out	0x3f, r0	; 63
    1eee:	0f 90       	pop	r0
    1ef0:	1f 90       	pop	r1
    1ef2:	18 95       	reti

00001ef4 <__vector_11>:
    1ef4:	1f 92       	push	r1
    1ef6:	0f 92       	push	r0
    1ef8:	0f b6       	in	r0, 0x3f	; 63
    1efa:	0f 92       	push	r0
    1efc:	11 24       	eor	r1, r1
    1efe:	0f 93       	push	r16
    1f00:	1f 93       	push	r17
    1f02:	2f 93       	push	r18
    1f04:	3f 93       	push	r19
    1f06:	4f 93       	push	r20
    1f08:	5f 93       	push	r21
    1f0a:	6f 93       	push	r22
    1f0c:	7f 93       	push	r23
    1f0e:	8f 93       	push	r24
    1f10:	9f 93       	push	r25
    1f12:	af 93       	push	r26
    1f14:	bf 93       	push	r27
    1f16:	cf 93       	push	r28
    1f18:	df 93       	push	r29
    1f1a:	ef 93       	push	r30
    1f1c:	ff 93       	push	r31
    1f1e:	10 92 e9 00 	sts	0x00E9, r1
    1f22:	80 91 e8 00 	lds	r24, 0x00E8
    1f26:	83 ff       	sbrs	r24, 3
    1f28:	51 c1       	rjmp	.+674    	; 0x21cc <__vector_11+0x2d8>
    1f2a:	e1 ef       	ldi	r30, 0xF1	; 241
    1f2c:	f0 e0       	ldi	r31, 0x00	; 0
    1f2e:	70 81       	ld	r23, Z
    1f30:	40 81       	ld	r20, Z
    1f32:	20 81       	ld	r18, Z
    1f34:	30 81       	ld	r19, Z
    1f36:	93 2f       	mov	r25, r19
    1f38:	80 e0       	ldi	r24, 0x00	; 0
    1f3a:	dc 01       	movw	r26, r24
    1f3c:	a2 2b       	or	r26, r18
    1f3e:	9d 01       	movw	r18, r26
    1f40:	50 81       	ld	r21, Z
    1f42:	60 81       	ld	r22, Z
    1f44:	96 2f       	mov	r25, r22
    1f46:	80 e0       	ldi	r24, 0x00	; 0
    1f48:	85 2b       	or	r24, r21
    1f4a:	a0 81       	ld	r26, Z
    1f4c:	b0 81       	ld	r27, Z
    1f4e:	52 ef       	ldi	r21, 0xF2	; 242
    1f50:	50 93 e8 00 	sts	0x00E8, r21
    1f54:	46 30       	cpi	r20, 0x06	; 6
    1f56:	09 f0       	breq	.+2      	; 0x1f5a <__vector_11+0x66>
    1f58:	5c c0       	rjmp	.+184    	; 0x2012 <__vector_11+0x11e>
    1f5a:	04 c0       	rjmp	.+8      	; 0x1f64 <__vector_11+0x70>
    1f5c:	81 e2       	ldi	r24, 0x21	; 33
    1f5e:	80 93 eb 00 	sts	0x00EB, r24
    1f62:	3b c1       	rjmp	.+630    	; 0x21da <__vector_11+0x2e6>
    1f64:	c6 e0       	ldi	r28, 0x06	; 6
    1f66:	4f e1       	ldi	r20, 0x1F	; 31
    1f68:	51 e0       	ldi	r21, 0x01	; 1
    1f6a:	fa 01       	movw	r30, r20
    1f6c:	65 91       	lpm	r22, Z+
    1f6e:	74 91       	lpm	r23, Z
    1f70:	26 17       	cp	r18, r22
    1f72:	37 07       	cpc	r19, r23
    1f74:	19 f0       	breq	.+6      	; 0x1f7c <__vector_11+0x88>
    1f76:	49 5f       	subi	r20, 0xF9	; 249
    1f78:	5f 4f       	sbci	r21, 0xFF	; 255
    1f7a:	20 c0       	rjmp	.+64     	; 0x1fbc <__vector_11+0xc8>
    1f7c:	fa 01       	movw	r30, r20
    1f7e:	32 96       	adiw	r30, 0x02	; 2
    1f80:	65 91       	lpm	r22, Z+
    1f82:	74 91       	lpm	r23, Z
    1f84:	86 17       	cp	r24, r22
    1f86:	97 07       	cpc	r25, r23
    1f88:	19 f0       	breq	.+6      	; 0x1f90 <__vector_11+0x9c>
    1f8a:	49 5f       	subi	r20, 0xF9	; 249
    1f8c:	5f 4f       	sbci	r21, 0xFF	; 255
    1f8e:	16 c0       	rjmp	.+44     	; 0x1fbc <__vector_11+0xc8>
    1f90:	fa 01       	movw	r30, r20
    1f92:	34 96       	adiw	r30, 0x04	; 4
    1f94:	85 91       	lpm	r24, Z+
    1f96:	94 91       	lpm	r25, Z
    1f98:	28 2f       	mov	r18, r24
    1f9a:	39 2f       	mov	r19, r25
    1f9c:	fa 01       	movw	r30, r20
    1f9e:	36 96       	adiw	r30, 0x06	; 6
    1fa0:	44 91       	lpm	r20, Z
    1fa2:	9b 2f       	mov	r25, r27
    1fa4:	80 e0       	ldi	r24, 0x00	; 0
    1fa6:	8a 2b       	or	r24, r26
    1fa8:	8f 3f       	cpi	r24, 0xFF	; 255
    1faa:	91 05       	cpc	r25, r1
    1fac:	19 f0       	breq	.+6      	; 0x1fb4 <__vector_11+0xc0>
    1fae:	10 f0       	brcs	.+4      	; 0x1fb4 <__vector_11+0xc0>
    1fb0:	8f ef       	ldi	r24, 0xFF	; 255
    1fb2:	90 e0       	ldi	r25, 0x00	; 0
    1fb4:	84 17       	cp	r24, r20
    1fb6:	28 f4       	brcc	.+10     	; 0x1fc2 <__vector_11+0xce>
    1fb8:	48 2f       	mov	r20, r24
    1fba:	03 c0       	rjmp	.+6      	; 0x1fc2 <__vector_11+0xce>
    1fbc:	c1 50       	subi	r28, 0x01	; 1
    1fbe:	a9 f6       	brne	.-86     	; 0x1f6a <__vector_11+0x76>
    1fc0:	cd cf       	rjmp	.-102    	; 0x1f5c <__vector_11+0x68>
    1fc2:	c8 ee       	ldi	r28, 0xE8	; 232
    1fc4:	d0 e0       	ldi	r29, 0x00	; 0
    1fc6:	7e ef       	ldi	r23, 0xFE	; 254
    1fc8:	a1 ef       	ldi	r26, 0xF1	; 241
    1fca:	b0 e0       	ldi	r27, 0x00	; 0
    1fcc:	10 e1       	ldi	r17, 0x10	; 16
    1fce:	88 81       	ld	r24, Y
    1fd0:	98 2f       	mov	r25, r24
    1fd2:	95 70       	andi	r25, 0x05	; 5
    1fd4:	e1 f3       	breq	.-8      	; 0x1fce <__vector_11+0xda>
    1fd6:	82 fd       	sbrc	r24, 2
    1fd8:	00 c1       	rjmp	.+512    	; 0x21da <__vector_11+0x2e6>
    1fda:	64 2f       	mov	r22, r20
    1fdc:	41 31       	cpi	r20, 0x11	; 17
    1fde:	08 f0       	brcs	.+2      	; 0x1fe2 <__vector_11+0xee>
    1fe0:	61 2f       	mov	r22, r17
    1fe2:	66 23       	and	r22, r22
    1fe4:	09 f4       	brne	.+2      	; 0x1fe8 <__vector_11+0xf4>
    1fe6:	f6 c0       	rjmp	.+492    	; 0x21d4 <__vector_11+0x2e0>
    1fe8:	c9 01       	movw	r24, r18
    1fea:	56 2f       	mov	r21, r22
    1fec:	fc 01       	movw	r30, r24
    1fee:	01 96       	adiw	r24, 0x01	; 1
    1ff0:	e4 91       	lpm	r30, Z
    1ff2:	ec 93       	st	X, r30
    1ff4:	51 50       	subi	r21, 0x01	; 1
    1ff6:	d1 f7       	brne	.-12     	; 0x1fec <__vector_11+0xf8>
    1ff8:	86 2f       	mov	r24, r22
    1ffa:	81 50       	subi	r24, 0x01	; 1
    1ffc:	90 e0       	ldi	r25, 0x00	; 0
    1ffe:	01 96       	adiw	r24, 0x01	; 1
    2000:	28 0f       	add	r18, r24
    2002:	39 1f       	adc	r19, r25
    2004:	46 1b       	sub	r20, r22
    2006:	78 83       	st	Y, r23
    2008:	41 11       	cpse	r20, r1
    200a:	e1 cf       	rjmp	.-62     	; 0x1fce <__vector_11+0xda>
    200c:	60 31       	cpi	r22, 0x10	; 16
    200e:	f9 f2       	breq	.-66     	; 0x1fce <__vector_11+0xda>
    2010:	e4 c0       	rjmp	.+456    	; 0x21da <__vector_11+0x2e6>
    2012:	45 30       	cpi	r20, 0x05	; 5
    2014:	61 f4       	brne	.+24     	; 0x202e <__vector_11+0x13a>
    2016:	8e ef       	ldi	r24, 0xFE	; 254
    2018:	80 93 e8 00 	sts	0x00E8, r24
    201c:	e8 ee       	ldi	r30, 0xE8	; 232
    201e:	f0 e0       	ldi	r31, 0x00	; 0
    2020:	80 81       	ld	r24, Z
    2022:	80 ff       	sbrs	r24, 0
    2024:	fd cf       	rjmp	.-6      	; 0x2020 <__vector_11+0x12c>
    2026:	20 68       	ori	r18, 0x80	; 128
    2028:	20 93 e3 00 	sts	0x00E3, r18
    202c:	d6 c0       	rjmp	.+428    	; 0x21da <__vector_11+0x2e6>
    202e:	49 30       	cpi	r20, 0x09	; 9
    2030:	a1 f5       	brne	.+104    	; 0x209a <__vector_11+0x1a6>
    2032:	71 11       	cpse	r23, r1
    2034:	5b c0       	rjmp	.+182    	; 0x20ec <__vector_11+0x1f8>
    2036:	20 93 96 01 	sts	0x0196, r18
    203a:	10 92 97 01 	sts	0x0197, r1
    203e:	10 92 95 01 	sts	0x0195, r1
    2042:	8e ef       	ldi	r24, 0xFE	; 254
    2044:	80 93 e8 00 	sts	0x00E8, r24
    2048:	11 e0       	ldi	r17, 0x01	; 1
    204a:	89 e4       	ldi	r24, 0x49	; 73
    204c:	91 e0       	ldi	r25, 0x01	; 1
    204e:	c9 ee       	ldi	r28, 0xE9	; 233
    2050:	d0 e0       	ldi	r29, 0x00	; 0
    2052:	ab ee       	ldi	r26, 0xEB	; 235
    2054:	b0 e0       	ldi	r27, 0x00	; 0
    2056:	6c ee       	ldi	r22, 0xEC	; 236
    2058:	70 e0       	ldi	r23, 0x00	; 0
    205a:	4d ee       	ldi	r20, 0xED	; 237
    205c:	50 e0       	ldi	r21, 0x00	; 0
    205e:	18 83       	st	Y, r17
    2060:	9c 01       	movw	r18, r24
    2062:	2f 5f       	subi	r18, 0xFF	; 255
    2064:	3f 4f       	sbci	r19, 0xFF	; 255
    2066:	fc 01       	movw	r30, r24
    2068:	04 91       	lpm	r16, Z
    206a:	0c 93       	st	X, r16
    206c:	00 23       	and	r16, r16
    206e:	59 f0       	breq	.+22     	; 0x2086 <__vector_11+0x192>
    2070:	f9 01       	movw	r30, r18
    2072:	24 91       	lpm	r18, Z
    2074:	fb 01       	movw	r30, r22
    2076:	20 83       	st	Z, r18
    2078:	fc 01       	movw	r30, r24
    207a:	32 96       	adiw	r30, 0x02	; 2
    207c:	03 96       	adiw	r24, 0x03	; 3
    207e:	24 91       	lpm	r18, Z
    2080:	fa 01       	movw	r30, r20
    2082:	20 83       	st	Z, r18
    2084:	01 c0       	rjmp	.+2      	; 0x2088 <__vector_11+0x194>
    2086:	c9 01       	movw	r24, r18
    2088:	1f 5f       	subi	r17, 0xFF	; 255
    208a:	15 30       	cpi	r17, 0x05	; 5
    208c:	41 f7       	brne	.-48     	; 0x205e <__vector_11+0x16a>
    208e:	ea ee       	ldi	r30, 0xEA	; 234
    2090:	f0 e0       	ldi	r31, 0x00	; 0
    2092:	8e e1       	ldi	r24, 0x1E	; 30
    2094:	80 83       	st	Z, r24
    2096:	10 82       	st	Z, r1
    2098:	a0 c0       	rjmp	.+320    	; 0x21da <__vector_11+0x2e6>
    209a:	48 30       	cpi	r20, 0x08	; 8
    209c:	81 f4       	brne	.+32     	; 0x20be <__vector_11+0x1ca>
    209e:	70 38       	cpi	r23, 0x80	; 128
    20a0:	09 f0       	breq	.+2      	; 0x20a4 <__vector_11+0x1b0>
    20a2:	3f c0       	rjmp	.+126    	; 0x2122 <__vector_11+0x22e>
    20a4:	e8 ee       	ldi	r30, 0xE8	; 232
    20a6:	f0 e0       	ldi	r31, 0x00	; 0
    20a8:	80 81       	ld	r24, Z
    20aa:	80 ff       	sbrs	r24, 0
    20ac:	fd cf       	rjmp	.-6      	; 0x20a8 <__vector_11+0x1b4>
    20ae:	80 91 96 01 	lds	r24, 0x0196
    20b2:	80 93 f1 00 	sts	0x00F1, r24
    20b6:	8e ef       	ldi	r24, 0xFE	; 254
    20b8:	80 93 e8 00 	sts	0x00E8, r24
    20bc:	8e c0       	rjmp	.+284    	; 0x21da <__vector_11+0x2e6>
    20be:	41 32       	cpi	r20, 0x21	; 33
    20c0:	a9 f4       	brne	.+42     	; 0x20ec <__vector_11+0x1f8>
    20c2:	71 3a       	cpi	r23, 0xA1	; 161
    20c4:	f1 f5       	brne	.+124    	; 0x2142 <__vector_11+0x24e>
    20c6:	e8 ee       	ldi	r30, 0xE8	; 232
    20c8:	f0 e0       	ldi	r31, 0x00	; 0
    20ca:	80 81       	ld	r24, Z
    20cc:	80 ff       	sbrs	r24, 0
    20ce:	fd cf       	rjmp	.-6      	; 0x20ca <__vector_11+0x1d6>
    20d0:	ec e0       	ldi	r30, 0x0C	; 12
    20d2:	f1 e0       	ldi	r31, 0x01	; 1
    20d4:	a1 ef       	ldi	r26, 0xF1	; 241
    20d6:	b0 e0       	ldi	r27, 0x00	; 0
    20d8:	81 91       	ld	r24, Z+
    20da:	8c 93       	st	X, r24
    20dc:	41 e0       	ldi	r20, 0x01	; 1
    20de:	e3 31       	cpi	r30, 0x13	; 19
    20e0:	f4 07       	cpc	r31, r20
    20e2:	d1 f7       	brne	.-12     	; 0x20d8 <__vector_11+0x1e4>
    20e4:	8e ef       	ldi	r24, 0xFE	; 254
    20e6:	80 93 e8 00 	sts	0x00E8, r24
    20ea:	77 c0       	rjmp	.+238    	; 0x21da <__vector_11+0x2e6>
    20ec:	40 32       	cpi	r20, 0x20	; 32
    20ee:	c9 f4       	brne	.+50     	; 0x2122 <__vector_11+0x22e>
    20f0:	71 32       	cpi	r23, 0x21	; 33
    20f2:	09 f0       	breq	.+2      	; 0x20f6 <__vector_11+0x202>
    20f4:	6b c0       	rjmp	.+214    	; 0x21cc <__vector_11+0x2d8>
    20f6:	e8 ee       	ldi	r30, 0xE8	; 232
    20f8:	f0 e0       	ldi	r31, 0x00	; 0
    20fa:	80 81       	ld	r24, Z
    20fc:	82 ff       	sbrs	r24, 2
    20fe:	fd cf       	rjmp	.-6      	; 0x20fa <__vector_11+0x206>
    2100:	ec e0       	ldi	r30, 0x0C	; 12
    2102:	f1 e0       	ldi	r31, 0x01	; 1
    2104:	a1 ef       	ldi	r26, 0xF1	; 241
    2106:	b0 e0       	ldi	r27, 0x00	; 0
    2108:	8c 91       	ld	r24, X
    210a:	81 93       	st	Z+, r24
    210c:	51 e0       	ldi	r21, 0x01	; 1
    210e:	e3 31       	cpi	r30, 0x13	; 19
    2110:	f5 07       	cpc	r31, r21
    2112:	d1 f7       	brne	.-12     	; 0x2108 <__vector_11+0x214>
    2114:	e8 ee       	ldi	r30, 0xE8	; 232
    2116:	f0 e0       	ldi	r31, 0x00	; 0
    2118:	8b ef       	ldi	r24, 0xFB	; 251
    211a:	80 83       	st	Z, r24
    211c:	8e ef       	ldi	r24, 0xFE	; 254
    211e:	80 83       	st	Z, r24
    2120:	5c c0       	rjmp	.+184    	; 0x21da <__vector_11+0x2e6>
    2122:	42 32       	cpi	r20, 0x22	; 34
    2124:	71 f4       	brne	.+28     	; 0x2142 <__vector_11+0x24e>
    2126:	71 32       	cpi	r23, 0x21	; 33
    2128:	09 f0       	breq	.+2      	; 0x212c <__vector_11+0x238>
    212a:	50 c0       	rjmp	.+160    	; 0x21cc <__vector_11+0x2d8>
    212c:	20 93 97 01 	sts	0x0197, r18
    2130:	e8 ee       	ldi	r30, 0xE8	; 232
    2132:	f0 e0       	ldi	r31, 0x00	; 0
    2134:	80 81       	ld	r24, Z
    2136:	80 ff       	sbrs	r24, 0
    2138:	fd cf       	rjmp	.-6      	; 0x2134 <__vector_11+0x240>
    213a:	8e ef       	ldi	r24, 0xFE	; 254
    213c:	80 93 e8 00 	sts	0x00E8, r24
    2140:	4c c0       	rjmp	.+152    	; 0x21da <__vector_11+0x2e6>
    2142:	41 11       	cpse	r20, r1
    2144:	1a c0       	rjmp	.+52     	; 0x217a <__vector_11+0x286>
    2146:	e8 ee       	ldi	r30, 0xE8	; 232
    2148:	f0 e0       	ldi	r31, 0x00	; 0
    214a:	20 81       	ld	r18, Z
    214c:	20 ff       	sbrs	r18, 0
    214e:	fd cf       	rjmp	.-6      	; 0x214a <__vector_11+0x256>
    2150:	72 38       	cpi	r23, 0x82	; 130
    2152:	51 f4       	brne	.+20     	; 0x2168 <__vector_11+0x274>
    2154:	e9 ee       	ldi	r30, 0xE9	; 233
    2156:	f0 e0       	ldi	r31, 0x00	; 0
    2158:	80 83       	st	Z, r24
    215a:	80 91 eb 00 	lds	r24, 0x00EB
    215e:	85 fb       	bst	r24, 5
    2160:	88 27       	eor	r24, r24
    2162:	80 f9       	bld	r24, 0
    2164:	10 82       	st	Z, r1
    2166:	01 c0       	rjmp	.+2      	; 0x216a <__vector_11+0x276>
    2168:	80 e0       	ldi	r24, 0x00	; 0
    216a:	e1 ef       	ldi	r30, 0xF1	; 241
    216c:	f0 e0       	ldi	r31, 0x00	; 0
    216e:	80 83       	st	Z, r24
    2170:	10 82       	st	Z, r1
    2172:	8e ef       	ldi	r24, 0xFE	; 254
    2174:	80 93 e8 00 	sts	0x00E8, r24
    2178:	30 c0       	rjmp	.+96     	; 0x21da <__vector_11+0x2e6>
    217a:	41 30       	cpi	r20, 0x01	; 1
    217c:	11 f0       	breq	.+4      	; 0x2182 <__vector_11+0x28e>
    217e:	43 30       	cpi	r20, 0x03	; 3
    2180:	29 f5       	brne	.+74     	; 0x21cc <__vector_11+0x2d8>
    2182:	72 30       	cpi	r23, 0x02	; 2
    2184:	19 f5       	brne	.+70     	; 0x21cc <__vector_11+0x2d8>
    2186:	23 2b       	or	r18, r19
    2188:	09 f5       	brne	.+66     	; 0x21cc <__vector_11+0x2d8>
    218a:	8f 77       	andi	r24, 0x7F	; 127
    218c:	99 27       	eor	r25, r25
    218e:	38 2f       	mov	r19, r24
    2190:	31 50       	subi	r19, 0x01	; 1
    2192:	34 30       	cpi	r19, 0x04	; 4
    2194:	d8 f4       	brcc	.+54     	; 0x21cc <__vector_11+0x2d8>
    2196:	3e ef       	ldi	r19, 0xFE	; 254
    2198:	30 93 e8 00 	sts	0x00E8, r19
    219c:	80 93 e9 00 	sts	0x00E9, r24
    21a0:	43 30       	cpi	r20, 0x03	; 3
    21a2:	21 f4       	brne	.+8      	; 0x21ac <__vector_11+0x2b8>
    21a4:	81 e2       	ldi	r24, 0x21	; 33
    21a6:	80 93 eb 00 	sts	0x00EB, r24
    21aa:	17 c0       	rjmp	.+46     	; 0x21da <__vector_11+0x2e6>
    21ac:	99 e1       	ldi	r25, 0x19	; 25
    21ae:	90 93 eb 00 	sts	0x00EB, r25
    21b2:	21 e0       	ldi	r18, 0x01	; 1
    21b4:	30 e0       	ldi	r19, 0x00	; 0
    21b6:	d9 01       	movw	r26, r18
    21b8:	02 c0       	rjmp	.+4      	; 0x21be <__vector_11+0x2ca>
    21ba:	aa 0f       	add	r26, r26
    21bc:	bb 1f       	adc	r27, r27
    21be:	8a 95       	dec	r24
    21c0:	e2 f7       	brpl	.-8      	; 0x21ba <__vector_11+0x2c6>
    21c2:	ea ee       	ldi	r30, 0xEA	; 234
    21c4:	f0 e0       	ldi	r31, 0x00	; 0
    21c6:	a0 83       	st	Z, r26
    21c8:	10 82       	st	Z, r1
    21ca:	07 c0       	rjmp	.+14     	; 0x21da <__vector_11+0x2e6>
    21cc:	81 e2       	ldi	r24, 0x21	; 33
    21ce:	80 93 eb 00 	sts	0x00EB, r24
    21d2:	03 c0       	rjmp	.+6      	; 0x21da <__vector_11+0x2e6>
    21d4:	78 83       	st	Y, r23
    21d6:	41 11       	cpse	r20, r1
    21d8:	fa ce       	rjmp	.-524    	; 0x1fce <__vector_11+0xda>
    21da:	ff 91       	pop	r31
    21dc:	ef 91       	pop	r30
    21de:	df 91       	pop	r29
    21e0:	cf 91       	pop	r28
    21e2:	bf 91       	pop	r27
    21e4:	af 91       	pop	r26
    21e6:	9f 91       	pop	r25
    21e8:	8f 91       	pop	r24
    21ea:	7f 91       	pop	r23
    21ec:	6f 91       	pop	r22
    21ee:	5f 91       	pop	r21
    21f0:	4f 91       	pop	r20
    21f2:	3f 91       	pop	r19
    21f4:	2f 91       	pop	r18
    21f6:	1f 91       	pop	r17
    21f8:	0f 91       	pop	r16
    21fa:	0f 90       	pop	r0
    21fc:	0f be       	out	0x3f, r0	; 63
    21fe:	0f 90       	pop	r0
    2200:	1f 90       	pop	r1
    2202:	18 95       	reti

00002204 <m_usb_tx_int>:
    2204:	ef 92       	push	r14
    2206:	ff 92       	push	r15
    2208:	0f 93       	push	r16
    220a:	1f 93       	push	r17
    220c:	cf 93       	push	r28
    220e:	df 93       	push	r29
    2210:	cd b7       	in	r28, 0x3d	; 61
    2212:	de b7       	in	r29, 0x3e	; 62
    2214:	27 97       	sbiw	r28, 0x07	; 7
    2216:	0f b6       	in	r0, 0x3f	; 63
    2218:	f8 94       	cli
    221a:	de bf       	out	0x3e, r29	; 62
    221c:	0f be       	out	0x3f, r0	; 63
    221e:	cd bf       	out	0x3d, r28	; 61
    2220:	8e 01       	movw	r16, r28
    2222:	0f 5f       	subi	r16, 0xFF	; 255
    2224:	1f 4f       	sbci	r17, 0xFF	; 255
    2226:	27 e0       	ldi	r18, 0x07	; 7
    2228:	f8 01       	movw	r30, r16
    222a:	11 92       	st	Z+, r1
    222c:	2a 95       	dec	r18
    222e:	e9 f7       	brne	.-6      	; 0x222a <m_usb_tx_int+0x26>
    2230:	4a e0       	ldi	r20, 0x0A	; 10
    2232:	50 e0       	ldi	r21, 0x00	; 0
    2234:	b8 01       	movw	r22, r16
    2236:	0e 94 40 17 	call	0x2e80	; 0x2e80 <itoa>
    223a:	7e 01       	movw	r14, r28
    223c:	f8 e0       	ldi	r31, 0x08	; 8
    223e:	ef 0e       	add	r14, r31
    2240:	f1 1c       	adc	r15, r1
    2242:	f8 01       	movw	r30, r16
    2244:	81 91       	ld	r24, Z+
    2246:	8f 01       	movw	r16, r30
    2248:	81 11       	cpse	r24, r1
    224a:	0e 94 e0 0e 	call	0x1dc0	; 0x1dc0 <m_usb_tx_char>
    224e:	0e 15       	cp	r16, r14
    2250:	1f 05       	cpc	r17, r15
    2252:	b9 f7       	brne	.-18     	; 0x2242 <m_usb_tx_int+0x3e>
    2254:	27 96       	adiw	r28, 0x07	; 7
    2256:	0f b6       	in	r0, 0x3f	; 63
    2258:	f8 94       	cli
    225a:	de bf       	out	0x3e, r29	; 62
    225c:	0f be       	out	0x3f, r0	; 63
    225e:	cd bf       	out	0x3d, r28	; 61
    2260:	df 91       	pop	r29
    2262:	cf 91       	pop	r28
    2264:	1f 91       	pop	r17
    2266:	0f 91       	pop	r16
    2268:	ff 90       	pop	r15
    226a:	ef 90       	pop	r14
    226c:	08 95       	ret

0000226e <twi_wait>:
    226e:	20 e0       	ldi	r18, 0x00	; 0
    2270:	30 e0       	ldi	r19, 0x00	; 0
    2272:	ec eb       	ldi	r30, 0xBC	; 188
    2274:	f0 e0       	ldi	r31, 0x00	; 0
    2276:	80 81       	ld	r24, Z
    2278:	88 23       	and	r24, r24
    227a:	34 f0       	brlt	.+12     	; 0x2288 <twi_wait+0x1a>
    227c:	2f 5f       	subi	r18, 0xFF	; 255
    227e:	3f 4f       	sbci	r19, 0xFF	; 255
    2280:	29 3e       	cpi	r18, 0xE9	; 233
    2282:	83 e0       	ldi	r24, 0x03	; 3
    2284:	38 07       	cpc	r19, r24
    2286:	b9 f7       	brne	.-18     	; 0x2276 <twi_wait+0x8>
    2288:	81 e0       	ldi	r24, 0x01	; 1
    228a:	28 3e       	cpi	r18, 0xE8	; 232
    228c:	33 40       	sbci	r19, 0x03	; 3
    228e:	09 f4       	brne	.+2      	; 0x2292 <twi_wait+0x24>
    2290:	80 e0       	ldi	r24, 0x00	; 0
    2292:	08 95       	ret

00002294 <send_byte>:
    2294:	80 93 bb 00 	sts	0x00BB, r24
    2298:	84 e8       	ldi	r24, 0x84	; 132
    229a:	80 93 bc 00 	sts	0x00BC, r24
    229e:	0e 94 37 11 	call	0x226e	; 0x226e <twi_wait>
    22a2:	88 23       	and	r24, r24
    22a4:	21 f0       	breq	.+8      	; 0x22ae <send_byte+0x1a>
    22a6:	80 91 b9 00 	lds	r24, 0x00B9
    22aa:	88 7f       	andi	r24, 0xF8	; 248
    22ac:	08 95       	ret
    22ae:	80 e0       	ldi	r24, 0x00	; 0
    22b0:	08 95       	ret

000022b2 <start_read>:
    22b2:	cf 93       	push	r28
    22b4:	c8 2f       	mov	r28, r24
    22b6:	94 ea       	ldi	r25, 0xA4	; 164
    22b8:	90 93 bc 00 	sts	0x00BC, r25
    22bc:	0e 94 37 11 	call	0x226e	; 0x226e <twi_wait>
    22c0:	88 23       	and	r24, r24
    22c2:	61 f0       	breq	.+24     	; 0x22dc <start_read+0x2a>
    22c4:	8c 2f       	mov	r24, r28
    22c6:	88 0f       	add	r24, r24
    22c8:	8f 5f       	subi	r24, 0xFF	; 255
    22ca:	0e 94 4a 11 	call	0x2294	; 0x2294 <send_byte>
    22ce:	88 34       	cpi	r24, 0x48	; 72
    22d0:	39 f4       	brne	.+14     	; 0x22e0 <start_read+0x2e>
    22d2:	84 e9       	ldi	r24, 0x94	; 148
    22d4:	80 93 bc 00 	sts	0x00BC, r24
    22d8:	80 e0       	ldi	r24, 0x00	; 0
    22da:	03 c0       	rjmp	.+6      	; 0x22e2 <start_read+0x30>
    22dc:	80 e0       	ldi	r24, 0x00	; 0
    22de:	01 c0       	rjmp	.+2      	; 0x22e2 <start_read+0x30>
    22e0:	81 e0       	ldi	r24, 0x01	; 1
    22e2:	cf 91       	pop	r28
    22e4:	08 95       	ret

000022e6 <start_write>:
    22e6:	cf 93       	push	r28
    22e8:	c8 2f       	mov	r28, r24
    22ea:	94 ea       	ldi	r25, 0xA4	; 164
    22ec:	90 93 bc 00 	sts	0x00BC, r25
    22f0:	0e 94 37 11 	call	0x226e	; 0x226e <twi_wait>
    22f4:	88 23       	and	r24, r24
    22f6:	59 f0       	breq	.+22     	; 0x230e <start_write+0x28>
    22f8:	8c 2f       	mov	r24, r28
    22fa:	88 0f       	add	r24, r24
    22fc:	0e 94 4a 11 	call	0x2294	; 0x2294 <send_byte>
    2300:	80 32       	cpi	r24, 0x20	; 32
    2302:	39 f4       	brne	.+14     	; 0x2312 <start_write+0x2c>
    2304:	84 e9       	ldi	r24, 0x94	; 148
    2306:	80 93 bc 00 	sts	0x00BC, r24
    230a:	80 e0       	ldi	r24, 0x00	; 0
    230c:	03 c0       	rjmp	.+6      	; 0x2314 <start_write+0x2e>
    230e:	80 e0       	ldi	r24, 0x00	; 0
    2310:	01 c0       	rjmp	.+2      	; 0x2314 <start_write+0x2e>
    2312:	81 e0       	ldi	r24, 0x01	; 1
    2314:	cf 91       	pop	r28
    2316:	08 95       	ret

00002318 <end>:
    2318:	84 e9       	ldi	r24, 0x94	; 148
    231a:	80 93 bc 00 	sts	0x00BC, r24
    231e:	08 95       	ret

00002320 <m_wii_read>:
    2320:	ef 92       	push	r14
    2322:	ff 92       	push	r15
    2324:	0f 93       	push	r16
    2326:	1f 93       	push	r17
    2328:	cf 93       	push	r28
    232a:	df 93       	push	r29
    232c:	cd b7       	in	r28, 0x3d	; 61
    232e:	de b7       	in	r29, 0x3e	; 62
    2330:	60 97       	sbiw	r28, 0x10	; 16
    2332:	0f b6       	in	r0, 0x3f	; 63
    2334:	f8 94       	cli
    2336:	de bf       	out	0x3e, r29	; 62
    2338:	0f be       	out	0x3f, r0	; 63
    233a:	cd bf       	out	0x3d, r28	; 61
    233c:	e8 2e       	mov	r14, r24
    233e:	f9 2e       	mov	r15, r25
    2340:	fe 01       	movw	r30, r28
    2342:	31 96       	adiw	r30, 0x01	; 1
    2344:	80 e1       	ldi	r24, 0x10	; 16
    2346:	df 01       	movw	r26, r30
    2348:	1d 92       	st	X+, r1
    234a:	8a 95       	dec	r24
    234c:	e9 f7       	brne	.-6      	; 0x2348 <m_wii_read+0x28>
    234e:	88 e5       	ldi	r24, 0x58	; 88
    2350:	0e 94 73 11 	call	0x22e6	; 0x22e6 <start_write>
    2354:	88 23       	and	r24, r24
    2356:	09 f4       	brne	.+2      	; 0x235a <m_wii_read+0x3a>
    2358:	66 c0       	rjmp	.+204    	; 0x2426 <m_wii_read+0x106>
    235a:	86 e3       	ldi	r24, 0x36	; 54
    235c:	0e 94 4a 11 	call	0x2294	; 0x2294 <send_byte>
    2360:	88 23       	and	r24, r24
    2362:	09 f4       	brne	.+2      	; 0x2366 <m_wii_read+0x46>
    2364:	62 c0       	rjmp	.+196    	; 0x242a <m_wii_read+0x10a>
    2366:	0e 94 8c 11 	call	0x2318	; 0x2318 <end>
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

    236a:	b8 e0       	ldi	r27, 0x08	; 8
    236c:	ba 95       	dec	r27
    236e:	f1 f7       	brne	.-4      	; 0x236c <m_wii_read+0x4c>
    2370:	00 00       	nop
    2372:	88 e5       	ldi	r24, 0x58	; 88
    2374:	0e 94 59 11 	call	0x22b2	; 0x22b2 <start_read>
    2378:	88 23       	and	r24, r24
    237a:	09 f4       	brne	.+2      	; 0x237e <m_wii_read+0x5e>
    237c:	58 c0       	rjmp	.+176    	; 0x242e <m_wii_read+0x10e>
    237e:	ae 01       	movw	r20, r28
    2380:	4f 5f       	subi	r20, 0xFF	; 255
    2382:	5f 4f       	sbci	r21, 0xFF	; 255
    2384:	8e 01       	movw	r16, r28
    2386:	00 5f       	subi	r16, 0xF0	; 240
    2388:	1f 4f       	sbci	r17, 0xFF	; 255
    238a:	ec eb       	ldi	r30, 0xBC	; 188
    238c:	f0 e0       	ldi	r31, 0x00	; 0
    238e:	94 ec       	ldi	r25, 0xC4	; 196
    2390:	2b eb       	ldi	r18, 0xBB	; 187
    2392:	30 e0       	ldi	r19, 0x00	; 0
    2394:	90 83       	st	Z, r25
    2396:	80 81       	ld	r24, Z
    2398:	88 23       	and	r24, r24
    239a:	ec f7       	brge	.-6      	; 0x2396 <m_wii_read+0x76>
    239c:	d9 01       	movw	r26, r18
    239e:	8c 91       	ld	r24, X
    23a0:	da 01       	movw	r26, r20
    23a2:	8d 93       	st	X+, r24
    23a4:	ad 01       	movw	r20, r26
    23a6:	a0 17       	cp	r26, r16
    23a8:	b1 07       	cpc	r27, r17
    23aa:	a1 f7       	brne	.-24     	; 0x2394 <m_wii_read+0x74>
    23ac:	84 e8       	ldi	r24, 0x84	; 132
    23ae:	80 93 bc 00 	sts	0x00BC, r24
    23b2:	ec eb       	ldi	r30, 0xBC	; 188
    23b4:	f0 e0       	ldi	r31, 0x00	; 0
    23b6:	80 81       	ld	r24, Z
    23b8:	88 23       	and	r24, r24
    23ba:	ec f7       	brge	.-6      	; 0x23b6 <m_wii_read+0x96>
    23bc:	80 91 bb 00 	lds	r24, 0x00BB
    23c0:	88 8b       	std	Y+16, r24	; 0x10
    23c2:	0e 94 8c 11 	call	0x2318	; 0x2318 <end>
    23c6:	de 01       	movw	r26, r28
    23c8:	14 96       	adiw	r26, 0x04	; 4
    23ca:	6e 2d       	mov	r22, r14
    23cc:	7f 2d       	mov	r23, r15
    23ce:	4c 91       	ld	r20, X
    23d0:	24 2f       	mov	r18, r20
    23d2:	20 73       	andi	r18, 0x30	; 48
    23d4:	cd 01       	movw	r24, r26
    23d6:	02 97       	sbiw	r24, 0x02	; 2
    23d8:	fc 01       	movw	r30, r24
    23da:	80 81       	ld	r24, Z
    23dc:	90 e0       	ldi	r25, 0x00	; 0
    23de:	f0 e1       	ldi	r31, 0x10	; 16
    23e0:	2f 9f       	mul	r18, r31
    23e2:	80 0d       	add	r24, r0
    23e4:	91 1d       	adc	r25, r1
    23e6:	11 24       	eor	r1, r1
    23e8:	fb 01       	movw	r30, r22
    23ea:	91 83       	std	Z+1, r25	; 0x01
    23ec:	80 83       	st	Z, r24
    23ee:	84 2f       	mov	r24, r20
    23f0:	80 7c       	andi	r24, 0xC0	; 192
    23f2:	90 e0       	ldi	r25, 0x00	; 0
    23f4:	88 0f       	add	r24, r24
    23f6:	99 1f       	adc	r25, r25
    23f8:	88 0f       	add	r24, r24
    23fa:	99 1f       	adc	r25, r25
    23fc:	9d 01       	movw	r18, r26
    23fe:	21 50       	subi	r18, 0x01	; 1
    2400:	31 09       	sbc	r19, r1
    2402:	f9 01       	movw	r30, r18
    2404:	20 81       	ld	r18, Z
    2406:	82 0f       	add	r24, r18
    2408:	91 1d       	adc	r25, r1
    240a:	fb 01       	movw	r30, r22
    240c:	93 83       	std	Z+3, r25	; 0x03
    240e:	82 83       	std	Z+2, r24	; 0x02
    2410:	4f 70       	andi	r20, 0x0F	; 15
    2412:	44 83       	std	Z+4, r20	; 0x04
    2414:	15 82       	std	Z+5, r1	; 0x05
    2416:	13 96       	adiw	r26, 0x03	; 3
    2418:	6a 5f       	subi	r22, 0xFA	; 250
    241a:	7f 4f       	sbci	r23, 0xFF	; 255
    241c:	0a 17       	cp	r16, r26
    241e:	1b 07       	cpc	r17, r27
    2420:	b1 f6       	brne	.-84     	; 0x23ce <m_wii_read+0xae>
    2422:	81 e0       	ldi	r24, 0x01	; 1
    2424:	05 c0       	rjmp	.+10     	; 0x2430 <m_wii_read+0x110>
    2426:	80 e0       	ldi	r24, 0x00	; 0
    2428:	03 c0       	rjmp	.+6      	; 0x2430 <m_wii_read+0x110>
    242a:	80 e0       	ldi	r24, 0x00	; 0
    242c:	01 c0       	rjmp	.+2      	; 0x2430 <m_wii_read+0x110>
    242e:	80 e0       	ldi	r24, 0x00	; 0
    2430:	60 96       	adiw	r28, 0x10	; 16
    2432:	0f b6       	in	r0, 0x3f	; 63
    2434:	f8 94       	cli
    2436:	de bf       	out	0x3e, r29	; 62
    2438:	0f be       	out	0x3f, r0	; 63
    243a:	cd bf       	out	0x3d, r28	; 61
    243c:	df 91       	pop	r29
    243e:	cf 91       	pop	r28
    2440:	1f 91       	pop	r17
    2442:	0f 91       	pop	r16
    2444:	ff 90       	pop	r15
    2446:	ef 90       	pop	r14
    2448:	08 95       	ret

0000244a <m_wii_open>:
    244a:	0e 94 c0 07 	call	0xf80	; 0xf80 <m_bus_init>
    244e:	88 e5       	ldi	r24, 0x58	; 88
    2450:	0e 94 73 11 	call	0x22e6	; 0x22e6 <start_write>
    2454:	88 23       	and	r24, r24
    2456:	09 f4       	brne	.+2      	; 0x245a <m_wii_open+0x10>
    2458:	c7 c0       	rjmp	.+398    	; 0x25e8 <m_wii_open+0x19e>
    245a:	80 e3       	ldi	r24, 0x30	; 48
    245c:	0e 94 4a 11 	call	0x2294	; 0x2294 <send_byte>
    2460:	88 23       	and	r24, r24
    2462:	09 f4       	brne	.+2      	; 0x2466 <m_wii_open+0x1c>
    2464:	c3 c0       	rjmp	.+390    	; 0x25ec <m_wii_open+0x1a2>
    2466:	81 e0       	ldi	r24, 0x01	; 1
    2468:	0e 94 4a 11 	call	0x2294	; 0x2294 <send_byte>
    246c:	88 23       	and	r24, r24
    246e:	09 f4       	brne	.+2      	; 0x2472 <m_wii_open+0x28>
    2470:	bf c0       	rjmp	.+382    	; 0x25f0 <m_wii_open+0x1a6>
    2472:	0e 94 8c 11 	call	0x2318	; 0x2318 <end>
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

    2476:	83 ec       	ldi	r24, 0xC3	; 195
    2478:	99 e0       	ldi	r25, 0x09	; 9
    247a:	01 97       	sbiw	r24, 0x01	; 1
    247c:	f1 f7       	brne	.-4      	; 0x247a <m_wii_open+0x30>
    247e:	00 c0       	rjmp	.+0      	; 0x2480 <m_wii_open+0x36>
    2480:	00 00       	nop
    2482:	88 e5       	ldi	r24, 0x58	; 88
    2484:	0e 94 73 11 	call	0x22e6	; 0x22e6 <start_write>
    2488:	88 23       	and	r24, r24
    248a:	09 f4       	brne	.+2      	; 0x248e <m_wii_open+0x44>
    248c:	b3 c0       	rjmp	.+358    	; 0x25f4 <m_wii_open+0x1aa>
    248e:	80 e0       	ldi	r24, 0x00	; 0
    2490:	0e 94 4a 11 	call	0x2294	; 0x2294 <send_byte>
    2494:	88 23       	and	r24, r24
    2496:	09 f4       	brne	.+2      	; 0x249a <m_wii_open+0x50>
    2498:	af c0       	rjmp	.+350    	; 0x25f8 <m_wii_open+0x1ae>
    249a:	80 e0       	ldi	r24, 0x00	; 0
    249c:	0e 94 4a 11 	call	0x2294	; 0x2294 <send_byte>
    24a0:	88 23       	and	r24, r24
    24a2:	09 f4       	brne	.+2      	; 0x24a6 <m_wii_open+0x5c>
    24a4:	ab c0       	rjmp	.+342    	; 0x25fc <m_wii_open+0x1b2>
    24a6:	80 e0       	ldi	r24, 0x00	; 0
    24a8:	0e 94 4a 11 	call	0x2294	; 0x2294 <send_byte>
    24ac:	88 23       	and	r24, r24
    24ae:	09 f4       	brne	.+2      	; 0x24b2 <m_wii_open+0x68>
    24b0:	a7 c0       	rjmp	.+334    	; 0x2600 <m_wii_open+0x1b6>
    24b2:	80 e0       	ldi	r24, 0x00	; 0
    24b4:	0e 94 4a 11 	call	0x2294	; 0x2294 <send_byte>
    24b8:	88 23       	and	r24, r24
    24ba:	09 f4       	brne	.+2      	; 0x24be <m_wii_open+0x74>
    24bc:	a3 c0       	rjmp	.+326    	; 0x2604 <m_wii_open+0x1ba>
    24be:	80 e0       	ldi	r24, 0x00	; 0
    24c0:	0e 94 4a 11 	call	0x2294	; 0x2294 <send_byte>
    24c4:	88 23       	and	r24, r24
    24c6:	09 f4       	brne	.+2      	; 0x24ca <m_wii_open+0x80>
    24c8:	9f c0       	rjmp	.+318    	; 0x2608 <m_wii_open+0x1be>
    24ca:	80 e0       	ldi	r24, 0x00	; 0
    24cc:	0e 94 4a 11 	call	0x2294	; 0x2294 <send_byte>
    24d0:	88 23       	and	r24, r24
    24d2:	09 f4       	brne	.+2      	; 0x24d6 <m_wii_open+0x8c>
    24d4:	9b c0       	rjmp	.+310    	; 0x260c <m_wii_open+0x1c2>
    24d6:	80 e0       	ldi	r24, 0x00	; 0
    24d8:	0e 94 4a 11 	call	0x2294	; 0x2294 <send_byte>
    24dc:	88 23       	and	r24, r24
    24de:	09 f4       	brne	.+2      	; 0x24e2 <m_wii_open+0x98>
    24e0:	97 c0       	rjmp	.+302    	; 0x2610 <m_wii_open+0x1c6>
    24e2:	80 e9       	ldi	r24, 0x90	; 144
    24e4:	0e 94 4a 11 	call	0x2294	; 0x2294 <send_byte>
    24e8:	88 23       	and	r24, r24
    24ea:	09 f4       	brne	.+2      	; 0x24ee <m_wii_open+0xa4>
    24ec:	93 c0       	rjmp	.+294    	; 0x2614 <m_wii_open+0x1ca>
    24ee:	0e 94 8c 11 	call	0x2318	; 0x2318 <end>
    24f2:	83 ec       	ldi	r24, 0xC3	; 195
    24f4:	99 e0       	ldi	r25, 0x09	; 9
    24f6:	01 97       	sbiw	r24, 0x01	; 1
    24f8:	f1 f7       	brne	.-4      	; 0x24f6 <m_wii_open+0xac>
    24fa:	00 c0       	rjmp	.+0      	; 0x24fc <m_wii_open+0xb2>
    24fc:	00 00       	nop
    24fe:	88 e5       	ldi	r24, 0x58	; 88
    2500:	0e 94 73 11 	call	0x22e6	; 0x22e6 <start_write>
    2504:	88 23       	and	r24, r24
    2506:	09 f4       	brne	.+2      	; 0x250a <m_wii_open+0xc0>
    2508:	87 c0       	rjmp	.+270    	; 0x2618 <m_wii_open+0x1ce>
    250a:	87 e0       	ldi	r24, 0x07	; 7
    250c:	0e 94 4a 11 	call	0x2294	; 0x2294 <send_byte>
    2510:	88 23       	and	r24, r24
    2512:	09 f4       	brne	.+2      	; 0x2516 <m_wii_open+0xcc>
    2514:	83 c0       	rjmp	.+262    	; 0x261c <m_wii_open+0x1d2>
    2516:	80 e0       	ldi	r24, 0x00	; 0
    2518:	0e 94 4a 11 	call	0x2294	; 0x2294 <send_byte>
    251c:	88 23       	and	r24, r24
    251e:	09 f4       	brne	.+2      	; 0x2522 <m_wii_open+0xd8>
    2520:	7f c0       	rjmp	.+254    	; 0x2620 <m_wii_open+0x1d6>
    2522:	81 e4       	ldi	r24, 0x41	; 65
    2524:	0e 94 4a 11 	call	0x2294	; 0x2294 <send_byte>
    2528:	88 23       	and	r24, r24
    252a:	09 f4       	brne	.+2      	; 0x252e <m_wii_open+0xe4>
    252c:	7b c0       	rjmp	.+246    	; 0x2624 <m_wii_open+0x1da>
    252e:	0e 94 8c 11 	call	0x2318	; 0x2318 <end>
    2532:	83 ec       	ldi	r24, 0xC3	; 195
    2534:	99 e0       	ldi	r25, 0x09	; 9
    2536:	01 97       	sbiw	r24, 0x01	; 1
    2538:	f1 f7       	brne	.-4      	; 0x2536 <m_wii_open+0xec>
    253a:	00 c0       	rjmp	.+0      	; 0x253c <m_wii_open+0xf2>
    253c:	00 00       	nop
    253e:	88 e5       	ldi	r24, 0x58	; 88
    2540:	0e 94 73 11 	call	0x22e6	; 0x22e6 <start_write>
    2544:	88 23       	and	r24, r24
    2546:	09 f4       	brne	.+2      	; 0x254a <m_wii_open+0x100>
    2548:	6f c0       	rjmp	.+222    	; 0x2628 <m_wii_open+0x1de>
    254a:	8a e1       	ldi	r24, 0x1A	; 26
    254c:	0e 94 4a 11 	call	0x2294	; 0x2294 <send_byte>
    2550:	88 23       	and	r24, r24
    2552:	09 f4       	brne	.+2      	; 0x2556 <m_wii_open+0x10c>
    2554:	6b c0       	rjmp	.+214    	; 0x262c <m_wii_open+0x1e2>
    2556:	80 e4       	ldi	r24, 0x40	; 64
    2558:	0e 94 4a 11 	call	0x2294	; 0x2294 <send_byte>
    255c:	88 23       	and	r24, r24
    255e:	09 f4       	brne	.+2      	; 0x2562 <m_wii_open+0x118>
    2560:	67 c0       	rjmp	.+206    	; 0x2630 <m_wii_open+0x1e6>
    2562:	80 e0       	ldi	r24, 0x00	; 0
    2564:	0e 94 4a 11 	call	0x2294	; 0x2294 <send_byte>
    2568:	88 23       	and	r24, r24
    256a:	09 f4       	brne	.+2      	; 0x256e <m_wii_open+0x124>
    256c:	63 c0       	rjmp	.+198    	; 0x2634 <m_wii_open+0x1ea>
    256e:	0e 94 8c 11 	call	0x2318	; 0x2318 <end>
    2572:	83 ec       	ldi	r24, 0xC3	; 195
    2574:	99 e0       	ldi	r25, 0x09	; 9
    2576:	01 97       	sbiw	r24, 0x01	; 1
    2578:	f1 f7       	brne	.-4      	; 0x2576 <m_wii_open+0x12c>
    257a:	00 c0       	rjmp	.+0      	; 0x257c <m_wii_open+0x132>
    257c:	00 00       	nop
    257e:	88 e5       	ldi	r24, 0x58	; 88
    2580:	0e 94 73 11 	call	0x22e6	; 0x22e6 <start_write>
    2584:	88 23       	and	r24, r24
    2586:	09 f4       	brne	.+2      	; 0x258a <m_wii_open+0x140>
    2588:	57 c0       	rjmp	.+174    	; 0x2638 <m_wii_open+0x1ee>
    258a:	83 e3       	ldi	r24, 0x33	; 51
    258c:	0e 94 4a 11 	call	0x2294	; 0x2294 <send_byte>
    2590:	88 23       	and	r24, r24
    2592:	09 f4       	brne	.+2      	; 0x2596 <m_wii_open+0x14c>
    2594:	53 c0       	rjmp	.+166    	; 0x263c <m_wii_open+0x1f2>
    2596:	83 e0       	ldi	r24, 0x03	; 3
    2598:	0e 94 4a 11 	call	0x2294	; 0x2294 <send_byte>
    259c:	88 23       	and	r24, r24
    259e:	09 f4       	brne	.+2      	; 0x25a2 <m_wii_open+0x158>
    25a0:	4f c0       	rjmp	.+158    	; 0x2640 <m_wii_open+0x1f6>
    25a2:	0e 94 8c 11 	call	0x2318	; 0x2318 <end>
    25a6:	83 ec       	ldi	r24, 0xC3	; 195
    25a8:	99 e0       	ldi	r25, 0x09	; 9
    25aa:	01 97       	sbiw	r24, 0x01	; 1
    25ac:	f1 f7       	brne	.-4      	; 0x25aa <m_wii_open+0x160>
    25ae:	00 c0       	rjmp	.+0      	; 0x25b0 <m_wii_open+0x166>
    25b0:	00 00       	nop
    25b2:	88 e5       	ldi	r24, 0x58	; 88
    25b4:	0e 94 73 11 	call	0x22e6	; 0x22e6 <start_write>
    25b8:	88 23       	and	r24, r24
    25ba:	09 f4       	brne	.+2      	; 0x25be <m_wii_open+0x174>
    25bc:	43 c0       	rjmp	.+134    	; 0x2644 <m_wii_open+0x1fa>
    25be:	80 e3       	ldi	r24, 0x30	; 48
    25c0:	0e 94 4a 11 	call	0x2294	; 0x2294 <send_byte>
    25c4:	88 23       	and	r24, r24
    25c6:	09 f4       	brne	.+2      	; 0x25ca <m_wii_open+0x180>
    25c8:	3f c0       	rjmp	.+126    	; 0x2648 <m_wii_open+0x1fe>
    25ca:	88 e0       	ldi	r24, 0x08	; 8
    25cc:	0e 94 4a 11 	call	0x2294	; 0x2294 <send_byte>
    25d0:	88 23       	and	r24, r24
    25d2:	e1 f1       	breq	.+120    	; 0x264c <m_wii_open+0x202>
    25d4:	0e 94 8c 11 	call	0x2318	; 0x2318 <end>
    25d8:	83 ec       	ldi	r24, 0xC3	; 195
    25da:	99 e0       	ldi	r25, 0x09	; 9
    25dc:	01 97       	sbiw	r24, 0x01	; 1
    25de:	f1 f7       	brne	.-4      	; 0x25dc <m_wii_open+0x192>
    25e0:	00 c0       	rjmp	.+0      	; 0x25e2 <m_wii_open+0x198>
    25e2:	00 00       	nop
    25e4:	81 e0       	ldi	r24, 0x01	; 1
    25e6:	08 95       	ret
    25e8:	80 e0       	ldi	r24, 0x00	; 0
    25ea:	08 95       	ret
    25ec:	80 e0       	ldi	r24, 0x00	; 0
    25ee:	08 95       	ret
    25f0:	80 e0       	ldi	r24, 0x00	; 0
    25f2:	08 95       	ret
    25f4:	80 e0       	ldi	r24, 0x00	; 0
    25f6:	08 95       	ret
    25f8:	80 e0       	ldi	r24, 0x00	; 0
    25fa:	08 95       	ret
    25fc:	80 e0       	ldi	r24, 0x00	; 0
    25fe:	08 95       	ret
    2600:	80 e0       	ldi	r24, 0x00	; 0
    2602:	08 95       	ret
    2604:	80 e0       	ldi	r24, 0x00	; 0
    2606:	08 95       	ret
    2608:	80 e0       	ldi	r24, 0x00	; 0
    260a:	08 95       	ret
    260c:	80 e0       	ldi	r24, 0x00	; 0
    260e:	08 95       	ret
    2610:	80 e0       	ldi	r24, 0x00	; 0
    2612:	08 95       	ret
    2614:	80 e0       	ldi	r24, 0x00	; 0
    2616:	08 95       	ret
    2618:	80 e0       	ldi	r24, 0x00	; 0
    261a:	08 95       	ret
    261c:	80 e0       	ldi	r24, 0x00	; 0
    261e:	08 95       	ret
    2620:	80 e0       	ldi	r24, 0x00	; 0
    2622:	08 95       	ret
    2624:	80 e0       	ldi	r24, 0x00	; 0
    2626:	08 95       	ret
    2628:	80 e0       	ldi	r24, 0x00	; 0
    262a:	08 95       	ret
    262c:	80 e0       	ldi	r24, 0x00	; 0
    262e:	08 95       	ret
    2630:	80 e0       	ldi	r24, 0x00	; 0
    2632:	08 95       	ret
    2634:	80 e0       	ldi	r24, 0x00	; 0
    2636:	08 95       	ret
    2638:	80 e0       	ldi	r24, 0x00	; 0
    263a:	08 95       	ret
    263c:	80 e0       	ldi	r24, 0x00	; 0
    263e:	08 95       	ret
    2640:	80 e0       	ldi	r24, 0x00	; 0
    2642:	08 95       	ret
    2644:	80 e0       	ldi	r24, 0x00	; 0
    2646:	08 95       	ret
    2648:	80 e0       	ldi	r24, 0x00	; 0
    264a:	08 95       	ret
    264c:	80 e0       	ldi	r24, 0x00	; 0
    264e:	08 95       	ret

00002650 <__subsf3>:
    2650:	50 58       	subi	r21, 0x80	; 128

00002652 <__addsf3>:
    2652:	bb 27       	eor	r27, r27
    2654:	aa 27       	eor	r26, r26
    2656:	0e d0       	rcall	.+28     	; 0x2674 <__addsf3x>
    2658:	58 c2       	rjmp	.+1200   	; 0x2b0a <__fp_round>
    265a:	21 d2       	rcall	.+1090   	; 0x2a9e <__fp_pscA>
    265c:	30 f0       	brcs	.+12     	; 0x266a <__addsf3+0x18>
    265e:	26 d2       	rcall	.+1100   	; 0x2aac <__fp_pscB>
    2660:	20 f0       	brcs	.+8      	; 0x266a <__addsf3+0x18>
    2662:	31 f4       	brne	.+12     	; 0x2670 <__addsf3+0x1e>
    2664:	9f 3f       	cpi	r25, 0xFF	; 255
    2666:	11 f4       	brne	.+4      	; 0x266c <__addsf3+0x1a>
    2668:	1e f4       	brtc	.+6      	; 0x2670 <__addsf3+0x1e>
    266a:	f1 c1       	rjmp	.+994    	; 0x2a4e <__fp_nan>
    266c:	0e f4       	brtc	.+2      	; 0x2670 <__addsf3+0x1e>
    266e:	e0 95       	com	r30
    2670:	e7 fb       	bst	r30, 7
    2672:	e7 c1       	rjmp	.+974    	; 0x2a42 <__fp_inf>

00002674 <__addsf3x>:
    2674:	e9 2f       	mov	r30, r25
    2676:	6b d2       	rcall	.+1238   	; 0x2b4e <__fp_split3>
    2678:	80 f3       	brcs	.-32     	; 0x265a <__addsf3+0x8>
    267a:	ba 17       	cp	r27, r26
    267c:	62 07       	cpc	r22, r18
    267e:	73 07       	cpc	r23, r19
    2680:	84 07       	cpc	r24, r20
    2682:	95 07       	cpc	r25, r21
    2684:	18 f0       	brcs	.+6      	; 0x268c <__addsf3x+0x18>
    2686:	71 f4       	brne	.+28     	; 0x26a4 <__addsf3x+0x30>
    2688:	9e f5       	brtc	.+102    	; 0x26f0 <__addsf3x+0x7c>
    268a:	83 c2       	rjmp	.+1286   	; 0x2b92 <__fp_zero>
    268c:	0e f4       	brtc	.+2      	; 0x2690 <__addsf3x+0x1c>
    268e:	e0 95       	com	r30
    2690:	0b 2e       	mov	r0, r27
    2692:	ba 2f       	mov	r27, r26
    2694:	a0 2d       	mov	r26, r0
    2696:	0b 01       	movw	r0, r22
    2698:	b9 01       	movw	r22, r18
    269a:	90 01       	movw	r18, r0
    269c:	0c 01       	movw	r0, r24
    269e:	ca 01       	movw	r24, r20
    26a0:	a0 01       	movw	r20, r0
    26a2:	11 24       	eor	r1, r1
    26a4:	ff 27       	eor	r31, r31
    26a6:	59 1b       	sub	r21, r25
    26a8:	99 f0       	breq	.+38     	; 0x26d0 <__addsf3x+0x5c>
    26aa:	59 3f       	cpi	r21, 0xF9	; 249
    26ac:	50 f4       	brcc	.+20     	; 0x26c2 <__addsf3x+0x4e>
    26ae:	50 3e       	cpi	r21, 0xE0	; 224
    26b0:	68 f1       	brcs	.+90     	; 0x270c <__addsf3x+0x98>
    26b2:	1a 16       	cp	r1, r26
    26b4:	f0 40       	sbci	r31, 0x00	; 0
    26b6:	a2 2f       	mov	r26, r18
    26b8:	23 2f       	mov	r18, r19
    26ba:	34 2f       	mov	r19, r20
    26bc:	44 27       	eor	r20, r20
    26be:	58 5f       	subi	r21, 0xF8	; 248
    26c0:	f3 cf       	rjmp	.-26     	; 0x26a8 <__addsf3x+0x34>
    26c2:	46 95       	lsr	r20
    26c4:	37 95       	ror	r19
    26c6:	27 95       	ror	r18
    26c8:	a7 95       	ror	r26
    26ca:	f0 40       	sbci	r31, 0x00	; 0
    26cc:	53 95       	inc	r21
    26ce:	c9 f7       	brne	.-14     	; 0x26c2 <__addsf3x+0x4e>
    26d0:	7e f4       	brtc	.+30     	; 0x26f0 <__addsf3x+0x7c>
    26d2:	1f 16       	cp	r1, r31
    26d4:	ba 0b       	sbc	r27, r26
    26d6:	62 0b       	sbc	r22, r18
    26d8:	73 0b       	sbc	r23, r19
    26da:	84 0b       	sbc	r24, r20
    26dc:	ba f0       	brmi	.+46     	; 0x270c <__addsf3x+0x98>
    26de:	91 50       	subi	r25, 0x01	; 1
    26e0:	a1 f0       	breq	.+40     	; 0x270a <__addsf3x+0x96>
    26e2:	ff 0f       	add	r31, r31
    26e4:	bb 1f       	adc	r27, r27
    26e6:	66 1f       	adc	r22, r22
    26e8:	77 1f       	adc	r23, r23
    26ea:	88 1f       	adc	r24, r24
    26ec:	c2 f7       	brpl	.-16     	; 0x26de <__addsf3x+0x6a>
    26ee:	0e c0       	rjmp	.+28     	; 0x270c <__addsf3x+0x98>
    26f0:	ba 0f       	add	r27, r26
    26f2:	62 1f       	adc	r22, r18
    26f4:	73 1f       	adc	r23, r19
    26f6:	84 1f       	adc	r24, r20
    26f8:	48 f4       	brcc	.+18     	; 0x270c <__addsf3x+0x98>
    26fa:	87 95       	ror	r24
    26fc:	77 95       	ror	r23
    26fe:	67 95       	ror	r22
    2700:	b7 95       	ror	r27
    2702:	f7 95       	ror	r31
    2704:	9e 3f       	cpi	r25, 0xFE	; 254
    2706:	08 f0       	brcs	.+2      	; 0x270a <__addsf3x+0x96>
    2708:	b3 cf       	rjmp	.-154    	; 0x2670 <__addsf3+0x1e>
    270a:	93 95       	inc	r25
    270c:	88 0f       	add	r24, r24
    270e:	08 f0       	brcs	.+2      	; 0x2712 <__addsf3x+0x9e>
    2710:	99 27       	eor	r25, r25
    2712:	ee 0f       	add	r30, r30
    2714:	97 95       	ror	r25
    2716:	87 95       	ror	r24
    2718:	08 95       	ret
    271a:	c1 d1       	rcall	.+898    	; 0x2a9e <__fp_pscA>
    271c:	58 f0       	brcs	.+22     	; 0x2734 <__addsf3x+0xc0>
    271e:	80 e8       	ldi	r24, 0x80	; 128
    2720:	91 e0       	ldi	r25, 0x01	; 1
    2722:	09 f4       	brne	.+2      	; 0x2726 <__addsf3x+0xb2>
    2724:	9e ef       	ldi	r25, 0xFE	; 254
    2726:	c2 d1       	rcall	.+900    	; 0x2aac <__fp_pscB>
    2728:	28 f0       	brcs	.+10     	; 0x2734 <__addsf3x+0xc0>
    272a:	40 e8       	ldi	r20, 0x80	; 128
    272c:	51 e0       	ldi	r21, 0x01	; 1
    272e:	59 f4       	brne	.+22     	; 0x2746 <atan2+0xe>
    2730:	5e ef       	ldi	r21, 0xFE	; 254
    2732:	09 c0       	rjmp	.+18     	; 0x2746 <atan2+0xe>
    2734:	8c c1       	rjmp	.+792    	; 0x2a4e <__fp_nan>
    2736:	2d c2       	rjmp	.+1114   	; 0x2b92 <__fp_zero>

00002738 <atan2>:
    2738:	e9 2f       	mov	r30, r25
    273a:	e0 78       	andi	r30, 0x80	; 128
    273c:	08 d2       	rcall	.+1040   	; 0x2b4e <__fp_split3>
    273e:	68 f3       	brcs	.-38     	; 0x271a <__addsf3x+0xa6>
    2740:	09 2e       	mov	r0, r25
    2742:	05 2a       	or	r0, r21
    2744:	c1 f3       	breq	.-16     	; 0x2736 <__addsf3x+0xc2>
    2746:	26 17       	cp	r18, r22
    2748:	37 07       	cpc	r19, r23
    274a:	48 07       	cpc	r20, r24
    274c:	59 07       	cpc	r21, r25
    274e:	38 f0       	brcs	.+14     	; 0x275e <atan2+0x26>
    2750:	0e 2e       	mov	r0, r30
    2752:	07 f8       	bld	r0, 7
    2754:	e0 25       	eor	r30, r0
    2756:	69 f0       	breq	.+26     	; 0x2772 <atan2+0x3a>
    2758:	e0 25       	eor	r30, r0
    275a:	e0 64       	ori	r30, 0x40	; 64
    275c:	0a c0       	rjmp	.+20     	; 0x2772 <atan2+0x3a>
    275e:	ef 63       	ori	r30, 0x3F	; 63
    2760:	07 f8       	bld	r0, 7
    2762:	00 94       	com	r0
    2764:	07 fa       	bst	r0, 7
    2766:	db 01       	movw	r26, r22
    2768:	b9 01       	movw	r22, r18
    276a:	9d 01       	movw	r18, r26
    276c:	dc 01       	movw	r26, r24
    276e:	ca 01       	movw	r24, r20
    2770:	ad 01       	movw	r20, r26
    2772:	ef 93       	push	r30
    2774:	4a d0       	rcall	.+148    	; 0x280a <__divsf3_pse>
    2776:	c9 d1       	rcall	.+914    	; 0x2b0a <__fp_round>
    2778:	0a d0       	rcall	.+20     	; 0x278e <atan>
    277a:	5f 91       	pop	r21
    277c:	55 23       	and	r21, r21
    277e:	31 f0       	breq	.+12     	; 0x278c <atan2+0x54>
    2780:	2b ed       	ldi	r18, 0xDB	; 219
    2782:	3f e0       	ldi	r19, 0x0F	; 15
    2784:	49 e4       	ldi	r20, 0x49	; 73
    2786:	50 fd       	sbrc	r21, 0
    2788:	49 ec       	ldi	r20, 0xC9	; 201
    278a:	63 cf       	rjmp	.-314    	; 0x2652 <__addsf3>
    278c:	08 95       	ret

0000278e <atan>:
    278e:	df 93       	push	r29
    2790:	dd 27       	eor	r29, r29
    2792:	b9 2f       	mov	r27, r25
    2794:	bf 77       	andi	r27, 0x7F	; 127
    2796:	40 e8       	ldi	r20, 0x80	; 128
    2798:	5f e3       	ldi	r21, 0x3F	; 63
    279a:	16 16       	cp	r1, r22
    279c:	17 06       	cpc	r1, r23
    279e:	48 07       	cpc	r20, r24
    27a0:	5b 07       	cpc	r21, r27
    27a2:	10 f4       	brcc	.+4      	; 0x27a8 <atan+0x1a>
    27a4:	d9 2f       	mov	r29, r25
    27a6:	00 d2       	rcall	.+1024   	; 0x2ba8 <inverse>
    27a8:	9f 93       	push	r25
    27aa:	8f 93       	push	r24
    27ac:	7f 93       	push	r23
    27ae:	6f 93       	push	r22
    27b0:	16 d3       	rcall	.+1580   	; 0x2dde <square>
    27b2:	ec ea       	ldi	r30, 0xAC	; 172
    27b4:	f0 e0       	ldi	r31, 0x00	; 0
    27b6:	4e d1       	rcall	.+668    	; 0x2a54 <__fp_powser>
    27b8:	a8 d1       	rcall	.+848    	; 0x2b0a <__fp_round>
    27ba:	2f 91       	pop	r18
    27bc:	3f 91       	pop	r19
    27be:	4f 91       	pop	r20
    27c0:	5f 91       	pop	r21
    27c2:	6e d2       	rcall	.+1244   	; 0x2ca0 <__mulsf3x>
    27c4:	dd 23       	and	r29, r29
    27c6:	49 f0       	breq	.+18     	; 0x27da <atan+0x4c>
    27c8:	90 58       	subi	r25, 0x80	; 128
    27ca:	a2 ea       	ldi	r26, 0xA2	; 162
    27cc:	2a ed       	ldi	r18, 0xDA	; 218
    27ce:	3f e0       	ldi	r19, 0x0F	; 15
    27d0:	49 ec       	ldi	r20, 0xC9	; 201
    27d2:	5f e3       	ldi	r21, 0x3F	; 63
    27d4:	d0 78       	andi	r29, 0x80	; 128
    27d6:	5d 27       	eor	r21, r29
    27d8:	4d df       	rcall	.-358    	; 0x2674 <__addsf3x>
    27da:	df 91       	pop	r29
    27dc:	96 c1       	rjmp	.+812    	; 0x2b0a <__fp_round>

000027de <__cmpsf2>:
    27de:	0d d1       	rcall	.+538    	; 0x29fa <__fp_cmp>
    27e0:	08 f4       	brcc	.+2      	; 0x27e4 <__cmpsf2+0x6>
    27e2:	81 e0       	ldi	r24, 0x01	; 1
    27e4:	08 95       	ret

000027e6 <cos>:
    27e6:	6a d1       	rcall	.+724    	; 0x2abc <__fp_rempio2>
    27e8:	e3 95       	inc	r30
    27ea:	a0 c1       	rjmp	.+832    	; 0x2b2c <__fp_sinus>

000027ec <__divsf3>:
    27ec:	0c d0       	rcall	.+24     	; 0x2806 <__divsf3x>
    27ee:	8d c1       	rjmp	.+794    	; 0x2b0a <__fp_round>
    27f0:	5d d1       	rcall	.+698    	; 0x2aac <__fp_pscB>
    27f2:	40 f0       	brcs	.+16     	; 0x2804 <__divsf3+0x18>
    27f4:	54 d1       	rcall	.+680    	; 0x2a9e <__fp_pscA>
    27f6:	30 f0       	brcs	.+12     	; 0x2804 <__divsf3+0x18>
    27f8:	21 f4       	brne	.+8      	; 0x2802 <__divsf3+0x16>
    27fa:	5f 3f       	cpi	r21, 0xFF	; 255
    27fc:	19 f0       	breq	.+6      	; 0x2804 <__divsf3+0x18>
    27fe:	21 c1       	rjmp	.+578    	; 0x2a42 <__fp_inf>
    2800:	51 11       	cpse	r21, r1
    2802:	c8 c1       	rjmp	.+912    	; 0x2b94 <__fp_szero>
    2804:	24 c1       	rjmp	.+584    	; 0x2a4e <__fp_nan>

00002806 <__divsf3x>:
    2806:	a3 d1       	rcall	.+838    	; 0x2b4e <__fp_split3>
    2808:	98 f3       	brcs	.-26     	; 0x27f0 <__divsf3+0x4>

0000280a <__divsf3_pse>:
    280a:	99 23       	and	r25, r25
    280c:	c9 f3       	breq	.-14     	; 0x2800 <__divsf3+0x14>
    280e:	55 23       	and	r21, r21
    2810:	b1 f3       	breq	.-20     	; 0x27fe <__divsf3+0x12>
    2812:	95 1b       	sub	r25, r21
    2814:	55 0b       	sbc	r21, r21
    2816:	bb 27       	eor	r27, r27
    2818:	aa 27       	eor	r26, r26
    281a:	62 17       	cp	r22, r18
    281c:	73 07       	cpc	r23, r19
    281e:	84 07       	cpc	r24, r20
    2820:	38 f0       	brcs	.+14     	; 0x2830 <__divsf3_pse+0x26>
    2822:	9f 5f       	subi	r25, 0xFF	; 255
    2824:	5f 4f       	sbci	r21, 0xFF	; 255
    2826:	22 0f       	add	r18, r18
    2828:	33 1f       	adc	r19, r19
    282a:	44 1f       	adc	r20, r20
    282c:	aa 1f       	adc	r26, r26
    282e:	a9 f3       	breq	.-22     	; 0x281a <__divsf3_pse+0x10>
    2830:	33 d0       	rcall	.+102    	; 0x2898 <__divsf3_pse+0x8e>
    2832:	0e 2e       	mov	r0, r30
    2834:	3a f0       	brmi	.+14     	; 0x2844 <__divsf3_pse+0x3a>
    2836:	e0 e8       	ldi	r30, 0x80	; 128
    2838:	30 d0       	rcall	.+96     	; 0x289a <__divsf3_pse+0x90>
    283a:	91 50       	subi	r25, 0x01	; 1
    283c:	50 40       	sbci	r21, 0x00	; 0
    283e:	e6 95       	lsr	r30
    2840:	00 1c       	adc	r0, r0
    2842:	ca f7       	brpl	.-14     	; 0x2836 <__divsf3_pse+0x2c>
    2844:	29 d0       	rcall	.+82     	; 0x2898 <__divsf3_pse+0x8e>
    2846:	fe 2f       	mov	r31, r30
    2848:	27 d0       	rcall	.+78     	; 0x2898 <__divsf3_pse+0x8e>
    284a:	66 0f       	add	r22, r22
    284c:	77 1f       	adc	r23, r23
    284e:	88 1f       	adc	r24, r24
    2850:	bb 1f       	adc	r27, r27
    2852:	26 17       	cp	r18, r22
    2854:	37 07       	cpc	r19, r23
    2856:	48 07       	cpc	r20, r24
    2858:	ab 07       	cpc	r26, r27
    285a:	b0 e8       	ldi	r27, 0x80	; 128
    285c:	09 f0       	breq	.+2      	; 0x2860 <__divsf3_pse+0x56>
    285e:	bb 0b       	sbc	r27, r27
    2860:	80 2d       	mov	r24, r0
    2862:	bf 01       	movw	r22, r30
    2864:	ff 27       	eor	r31, r31
    2866:	93 58       	subi	r25, 0x83	; 131
    2868:	5f 4f       	sbci	r21, 0xFF	; 255
    286a:	2a f0       	brmi	.+10     	; 0x2876 <__divsf3_pse+0x6c>
    286c:	9e 3f       	cpi	r25, 0xFE	; 254
    286e:	51 05       	cpc	r21, r1
    2870:	68 f0       	brcs	.+26     	; 0x288c <__divsf3_pse+0x82>
    2872:	e7 c0       	rjmp	.+462    	; 0x2a42 <__fp_inf>
    2874:	8f c1       	rjmp	.+798    	; 0x2b94 <__fp_szero>
    2876:	5f 3f       	cpi	r21, 0xFF	; 255
    2878:	ec f3       	brlt	.-6      	; 0x2874 <__divsf3_pse+0x6a>
    287a:	98 3e       	cpi	r25, 0xE8	; 232
    287c:	dc f3       	brlt	.-10     	; 0x2874 <__divsf3_pse+0x6a>
    287e:	86 95       	lsr	r24
    2880:	77 95       	ror	r23
    2882:	67 95       	ror	r22
    2884:	b7 95       	ror	r27
    2886:	f7 95       	ror	r31
    2888:	9f 5f       	subi	r25, 0xFF	; 255
    288a:	c9 f7       	brne	.-14     	; 0x287e <__divsf3_pse+0x74>
    288c:	88 0f       	add	r24, r24
    288e:	91 1d       	adc	r25, r1
    2890:	96 95       	lsr	r25
    2892:	87 95       	ror	r24
    2894:	97 f9       	bld	r25, 7
    2896:	08 95       	ret
    2898:	e1 e0       	ldi	r30, 0x01	; 1
    289a:	66 0f       	add	r22, r22
    289c:	77 1f       	adc	r23, r23
    289e:	88 1f       	adc	r24, r24
    28a0:	bb 1f       	adc	r27, r27
    28a2:	62 17       	cp	r22, r18
    28a4:	73 07       	cpc	r23, r19
    28a6:	84 07       	cpc	r24, r20
    28a8:	ba 07       	cpc	r27, r26
    28aa:	20 f0       	brcs	.+8      	; 0x28b4 <__divsf3_pse+0xaa>
    28ac:	62 1b       	sub	r22, r18
    28ae:	73 0b       	sbc	r23, r19
    28b0:	84 0b       	sbc	r24, r20
    28b2:	ba 0b       	sbc	r27, r26
    28b4:	ee 1f       	adc	r30, r30
    28b6:	88 f7       	brcc	.-30     	; 0x289a <__divsf3_pse+0x90>
    28b8:	e0 95       	com	r30
    28ba:	08 95       	ret
    28bc:	19 f4       	brne	.+6      	; 0x28c4 <__divsf3_pse+0xba>
    28be:	0e f0       	brts	.+2      	; 0x28c2 <__divsf3_pse+0xb8>
    28c0:	c0 c0       	rjmp	.+384    	; 0x2a42 <__fp_inf>
    28c2:	67 c1       	rjmp	.+718    	; 0x2b92 <__fp_zero>
    28c4:	c4 c0       	rjmp	.+392    	; 0x2a4e <__fp_nan>

000028c6 <exp>:
    28c6:	4b d1       	rcall	.+662    	; 0x2b5e <__fp_splitA>
    28c8:	c8 f3       	brcs	.-14     	; 0x28bc <__divsf3_pse+0xb2>
    28ca:	96 38       	cpi	r25, 0x86	; 134
    28cc:	c0 f7       	brcc	.-16     	; 0x28be <__divsf3_pse+0xb4>
    28ce:	07 f8       	bld	r0, 7
    28d0:	0f 92       	push	r0
    28d2:	e8 94       	clt
    28d4:	2b e3       	ldi	r18, 0x3B	; 59
    28d6:	3a ea       	ldi	r19, 0xAA	; 170
    28d8:	48 eb       	ldi	r20, 0xB8	; 184
    28da:	5f e7       	ldi	r21, 0x7F	; 127
    28dc:	e3 d1       	rcall	.+966    	; 0x2ca4 <__mulsf3_pse>
    28de:	0f 92       	push	r0
    28e0:	0f 92       	push	r0
    28e2:	0f 92       	push	r0
    28e4:	4d b7       	in	r20, 0x3d	; 61
    28e6:	5e b7       	in	r21, 0x3e	; 62
    28e8:	0f 92       	push	r0
    28ea:	9b d1       	rcall	.+822    	; 0x2c22 <modf>
    28ec:	e9 ed       	ldi	r30, 0xD9	; 217
    28ee:	f0 e0       	ldi	r31, 0x00	; 0
    28f0:	b1 d0       	rcall	.+354    	; 0x2a54 <__fp_powser>
    28f2:	4f 91       	pop	r20
    28f4:	5f 91       	pop	r21
    28f6:	ef 91       	pop	r30
    28f8:	ff 91       	pop	r31
    28fa:	e5 95       	asr	r30
    28fc:	ee 1f       	adc	r30, r30
    28fe:	ff 1f       	adc	r31, r31
    2900:	49 f0       	breq	.+18     	; 0x2914 <exp+0x4e>
    2902:	fe 57       	subi	r31, 0x7E	; 126
    2904:	e0 68       	ori	r30, 0x80	; 128
    2906:	44 27       	eor	r20, r20
    2908:	ee 0f       	add	r30, r30
    290a:	44 1f       	adc	r20, r20
    290c:	fa 95       	dec	r31
    290e:	e1 f7       	brne	.-8      	; 0x2908 <exp+0x42>
    2910:	41 95       	neg	r20
    2912:	55 0b       	sbc	r21, r21
    2914:	52 d1       	rcall	.+676    	; 0x2bba <ldexp>
    2916:	0f 90       	pop	r0
    2918:	07 fe       	sbrs	r0, 7
    291a:	46 c1       	rjmp	.+652    	; 0x2ba8 <inverse>
    291c:	08 95       	ret

0000291e <__fixsfsi>:
    291e:	04 d0       	rcall	.+8      	; 0x2928 <__fixunssfsi>
    2920:	68 94       	set
    2922:	b1 11       	cpse	r27, r1
    2924:	37 c1       	rjmp	.+622    	; 0x2b94 <__fp_szero>
    2926:	08 95       	ret

00002928 <__fixunssfsi>:
    2928:	1a d1       	rcall	.+564    	; 0x2b5e <__fp_splitA>
    292a:	88 f0       	brcs	.+34     	; 0x294e <__fixunssfsi+0x26>
    292c:	9f 57       	subi	r25, 0x7F	; 127
    292e:	90 f0       	brcs	.+36     	; 0x2954 <__fixunssfsi+0x2c>
    2930:	b9 2f       	mov	r27, r25
    2932:	99 27       	eor	r25, r25
    2934:	b7 51       	subi	r27, 0x17	; 23
    2936:	a0 f0       	brcs	.+40     	; 0x2960 <__fixunssfsi+0x38>
    2938:	d1 f0       	breq	.+52     	; 0x296e <__fixunssfsi+0x46>
    293a:	66 0f       	add	r22, r22
    293c:	77 1f       	adc	r23, r23
    293e:	88 1f       	adc	r24, r24
    2940:	99 1f       	adc	r25, r25
    2942:	1a f0       	brmi	.+6      	; 0x294a <__fixunssfsi+0x22>
    2944:	ba 95       	dec	r27
    2946:	c9 f7       	brne	.-14     	; 0x293a <__fixunssfsi+0x12>
    2948:	12 c0       	rjmp	.+36     	; 0x296e <__fixunssfsi+0x46>
    294a:	b1 30       	cpi	r27, 0x01	; 1
    294c:	81 f0       	breq	.+32     	; 0x296e <__fixunssfsi+0x46>
    294e:	21 d1       	rcall	.+578    	; 0x2b92 <__fp_zero>
    2950:	b1 e0       	ldi	r27, 0x01	; 1
    2952:	08 95       	ret
    2954:	1e c1       	rjmp	.+572    	; 0x2b92 <__fp_zero>
    2956:	67 2f       	mov	r22, r23
    2958:	78 2f       	mov	r23, r24
    295a:	88 27       	eor	r24, r24
    295c:	b8 5f       	subi	r27, 0xF8	; 248
    295e:	39 f0       	breq	.+14     	; 0x296e <__fixunssfsi+0x46>
    2960:	b9 3f       	cpi	r27, 0xF9	; 249
    2962:	cc f3       	brlt	.-14     	; 0x2956 <__fixunssfsi+0x2e>
    2964:	86 95       	lsr	r24
    2966:	77 95       	ror	r23
    2968:	67 95       	ror	r22
    296a:	b3 95       	inc	r27
    296c:	d9 f7       	brne	.-10     	; 0x2964 <__fixunssfsi+0x3c>
    296e:	3e f4       	brtc	.+14     	; 0x297e <__fixunssfsi+0x56>
    2970:	90 95       	com	r25
    2972:	80 95       	com	r24
    2974:	70 95       	com	r23
    2976:	61 95       	neg	r22
    2978:	7f 4f       	sbci	r23, 0xFF	; 255
    297a:	8f 4f       	sbci	r24, 0xFF	; 255
    297c:	9f 4f       	sbci	r25, 0xFF	; 255
    297e:	08 95       	ret

00002980 <__floatunsisf>:
    2980:	e8 94       	clt
    2982:	09 c0       	rjmp	.+18     	; 0x2996 <__floatsisf+0x12>

00002984 <__floatsisf>:
    2984:	97 fb       	bst	r25, 7
    2986:	3e f4       	brtc	.+14     	; 0x2996 <__floatsisf+0x12>
    2988:	90 95       	com	r25
    298a:	80 95       	com	r24
    298c:	70 95       	com	r23
    298e:	61 95       	neg	r22
    2990:	7f 4f       	sbci	r23, 0xFF	; 255
    2992:	8f 4f       	sbci	r24, 0xFF	; 255
    2994:	9f 4f       	sbci	r25, 0xFF	; 255
    2996:	99 23       	and	r25, r25
    2998:	a9 f0       	breq	.+42     	; 0x29c4 <__floatsisf+0x40>
    299a:	f9 2f       	mov	r31, r25
    299c:	96 e9       	ldi	r25, 0x96	; 150
    299e:	bb 27       	eor	r27, r27
    29a0:	93 95       	inc	r25
    29a2:	f6 95       	lsr	r31
    29a4:	87 95       	ror	r24
    29a6:	77 95       	ror	r23
    29a8:	67 95       	ror	r22
    29aa:	b7 95       	ror	r27
    29ac:	f1 11       	cpse	r31, r1
    29ae:	f8 cf       	rjmp	.-16     	; 0x29a0 <__floatsisf+0x1c>
    29b0:	fa f4       	brpl	.+62     	; 0x29f0 <__floatsisf+0x6c>
    29b2:	bb 0f       	add	r27, r27
    29b4:	11 f4       	brne	.+4      	; 0x29ba <__floatsisf+0x36>
    29b6:	60 ff       	sbrs	r22, 0
    29b8:	1b c0       	rjmp	.+54     	; 0x29f0 <__floatsisf+0x6c>
    29ba:	6f 5f       	subi	r22, 0xFF	; 255
    29bc:	7f 4f       	sbci	r23, 0xFF	; 255
    29be:	8f 4f       	sbci	r24, 0xFF	; 255
    29c0:	9f 4f       	sbci	r25, 0xFF	; 255
    29c2:	16 c0       	rjmp	.+44     	; 0x29f0 <__floatsisf+0x6c>
    29c4:	88 23       	and	r24, r24
    29c6:	11 f0       	breq	.+4      	; 0x29cc <__floatsisf+0x48>
    29c8:	96 e9       	ldi	r25, 0x96	; 150
    29ca:	11 c0       	rjmp	.+34     	; 0x29ee <__floatsisf+0x6a>
    29cc:	77 23       	and	r23, r23
    29ce:	21 f0       	breq	.+8      	; 0x29d8 <__floatsisf+0x54>
    29d0:	9e e8       	ldi	r25, 0x8E	; 142
    29d2:	87 2f       	mov	r24, r23
    29d4:	76 2f       	mov	r23, r22
    29d6:	05 c0       	rjmp	.+10     	; 0x29e2 <__floatsisf+0x5e>
    29d8:	66 23       	and	r22, r22
    29da:	71 f0       	breq	.+28     	; 0x29f8 <__floatsisf+0x74>
    29dc:	96 e8       	ldi	r25, 0x86	; 134
    29de:	86 2f       	mov	r24, r22
    29e0:	70 e0       	ldi	r23, 0x00	; 0
    29e2:	60 e0       	ldi	r22, 0x00	; 0
    29e4:	2a f0       	brmi	.+10     	; 0x29f0 <__floatsisf+0x6c>
    29e6:	9a 95       	dec	r25
    29e8:	66 0f       	add	r22, r22
    29ea:	77 1f       	adc	r23, r23
    29ec:	88 1f       	adc	r24, r24
    29ee:	da f7       	brpl	.-10     	; 0x29e6 <__floatsisf+0x62>
    29f0:	88 0f       	add	r24, r24
    29f2:	96 95       	lsr	r25
    29f4:	87 95       	ror	r24
    29f6:	97 f9       	bld	r25, 7
    29f8:	08 95       	ret

000029fa <__fp_cmp>:
    29fa:	99 0f       	add	r25, r25
    29fc:	00 08       	sbc	r0, r0
    29fe:	55 0f       	add	r21, r21
    2a00:	aa 0b       	sbc	r26, r26
    2a02:	e0 e8       	ldi	r30, 0x80	; 128
    2a04:	fe ef       	ldi	r31, 0xFE	; 254
    2a06:	16 16       	cp	r1, r22
    2a08:	17 06       	cpc	r1, r23
    2a0a:	e8 07       	cpc	r30, r24
    2a0c:	f9 07       	cpc	r31, r25
    2a0e:	c0 f0       	brcs	.+48     	; 0x2a40 <__fp_cmp+0x46>
    2a10:	12 16       	cp	r1, r18
    2a12:	13 06       	cpc	r1, r19
    2a14:	e4 07       	cpc	r30, r20
    2a16:	f5 07       	cpc	r31, r21
    2a18:	98 f0       	brcs	.+38     	; 0x2a40 <__fp_cmp+0x46>
    2a1a:	62 1b       	sub	r22, r18
    2a1c:	73 0b       	sbc	r23, r19
    2a1e:	84 0b       	sbc	r24, r20
    2a20:	95 0b       	sbc	r25, r21
    2a22:	39 f4       	brne	.+14     	; 0x2a32 <__fp_cmp+0x38>
    2a24:	0a 26       	eor	r0, r26
    2a26:	61 f0       	breq	.+24     	; 0x2a40 <__fp_cmp+0x46>
    2a28:	23 2b       	or	r18, r19
    2a2a:	24 2b       	or	r18, r20
    2a2c:	25 2b       	or	r18, r21
    2a2e:	21 f4       	brne	.+8      	; 0x2a38 <__fp_cmp+0x3e>
    2a30:	08 95       	ret
    2a32:	0a 26       	eor	r0, r26
    2a34:	09 f4       	brne	.+2      	; 0x2a38 <__fp_cmp+0x3e>
    2a36:	a1 40       	sbci	r26, 0x01	; 1
    2a38:	a6 95       	lsr	r26
    2a3a:	8f ef       	ldi	r24, 0xFF	; 255
    2a3c:	81 1d       	adc	r24, r1
    2a3e:	81 1d       	adc	r24, r1
    2a40:	08 95       	ret

00002a42 <__fp_inf>:
    2a42:	97 f9       	bld	r25, 7
    2a44:	9f 67       	ori	r25, 0x7F	; 127
    2a46:	80 e8       	ldi	r24, 0x80	; 128
    2a48:	70 e0       	ldi	r23, 0x00	; 0
    2a4a:	60 e0       	ldi	r22, 0x00	; 0
    2a4c:	08 95       	ret

00002a4e <__fp_nan>:
    2a4e:	9f ef       	ldi	r25, 0xFF	; 255
    2a50:	80 ec       	ldi	r24, 0xC0	; 192
    2a52:	08 95       	ret

00002a54 <__fp_powser>:
    2a54:	df 93       	push	r29
    2a56:	cf 93       	push	r28
    2a58:	1f 93       	push	r17
    2a5a:	0f 93       	push	r16
    2a5c:	ff 92       	push	r15
    2a5e:	ef 92       	push	r14
    2a60:	df 92       	push	r13
    2a62:	7b 01       	movw	r14, r22
    2a64:	8c 01       	movw	r16, r24
    2a66:	68 94       	set
    2a68:	05 c0       	rjmp	.+10     	; 0x2a74 <__fp_powser+0x20>
    2a6a:	da 2e       	mov	r13, r26
    2a6c:	ef 01       	movw	r28, r30
    2a6e:	18 d1       	rcall	.+560    	; 0x2ca0 <__mulsf3x>
    2a70:	fe 01       	movw	r30, r28
    2a72:	e8 94       	clt
    2a74:	a5 91       	lpm	r26, Z+
    2a76:	25 91       	lpm	r18, Z+
    2a78:	35 91       	lpm	r19, Z+
    2a7a:	45 91       	lpm	r20, Z+
    2a7c:	55 91       	lpm	r21, Z+
    2a7e:	ae f3       	brts	.-22     	; 0x2a6a <__fp_powser+0x16>
    2a80:	ef 01       	movw	r28, r30
    2a82:	f8 dd       	rcall	.-1040   	; 0x2674 <__addsf3x>
    2a84:	fe 01       	movw	r30, r28
    2a86:	97 01       	movw	r18, r14
    2a88:	a8 01       	movw	r20, r16
    2a8a:	da 94       	dec	r13
    2a8c:	79 f7       	brne	.-34     	; 0x2a6c <__fp_powser+0x18>
    2a8e:	df 90       	pop	r13
    2a90:	ef 90       	pop	r14
    2a92:	ff 90       	pop	r15
    2a94:	0f 91       	pop	r16
    2a96:	1f 91       	pop	r17
    2a98:	cf 91       	pop	r28
    2a9a:	df 91       	pop	r29
    2a9c:	08 95       	ret

00002a9e <__fp_pscA>:
    2a9e:	00 24       	eor	r0, r0
    2aa0:	0a 94       	dec	r0
    2aa2:	16 16       	cp	r1, r22
    2aa4:	17 06       	cpc	r1, r23
    2aa6:	18 06       	cpc	r1, r24
    2aa8:	09 06       	cpc	r0, r25
    2aaa:	08 95       	ret

00002aac <__fp_pscB>:
    2aac:	00 24       	eor	r0, r0
    2aae:	0a 94       	dec	r0
    2ab0:	12 16       	cp	r1, r18
    2ab2:	13 06       	cpc	r1, r19
    2ab4:	14 06       	cpc	r1, r20
    2ab6:	05 06       	cpc	r0, r21
    2ab8:	08 95       	ret
    2aba:	c9 cf       	rjmp	.-110    	; 0x2a4e <__fp_nan>

00002abc <__fp_rempio2>:
    2abc:	50 d0       	rcall	.+160    	; 0x2b5e <__fp_splitA>
    2abe:	e8 f3       	brcs	.-6      	; 0x2aba <__fp_pscB+0xe>
    2ac0:	e8 94       	clt
    2ac2:	e0 e0       	ldi	r30, 0x00	; 0
    2ac4:	bb 27       	eor	r27, r27
    2ac6:	9f 57       	subi	r25, 0x7F	; 127
    2ac8:	f0 f0       	brcs	.+60     	; 0x2b06 <__fp_rempio2+0x4a>
    2aca:	2a ed       	ldi	r18, 0xDA	; 218
    2acc:	3f e0       	ldi	r19, 0x0F	; 15
    2ace:	49 ec       	ldi	r20, 0xC9	; 201
    2ad0:	06 c0       	rjmp	.+12     	; 0x2ade <__fp_rempio2+0x22>
    2ad2:	ee 0f       	add	r30, r30
    2ad4:	bb 0f       	add	r27, r27
    2ad6:	66 1f       	adc	r22, r22
    2ad8:	77 1f       	adc	r23, r23
    2ada:	88 1f       	adc	r24, r24
    2adc:	28 f0       	brcs	.+10     	; 0x2ae8 <__fp_rempio2+0x2c>
    2ade:	b2 3a       	cpi	r27, 0xA2	; 162
    2ae0:	62 07       	cpc	r22, r18
    2ae2:	73 07       	cpc	r23, r19
    2ae4:	84 07       	cpc	r24, r20
    2ae6:	28 f0       	brcs	.+10     	; 0x2af2 <__fp_rempio2+0x36>
    2ae8:	b2 5a       	subi	r27, 0xA2	; 162
    2aea:	62 0b       	sbc	r22, r18
    2aec:	73 0b       	sbc	r23, r19
    2aee:	84 0b       	sbc	r24, r20
    2af0:	e3 95       	inc	r30
    2af2:	9a 95       	dec	r25
    2af4:	72 f7       	brpl	.-36     	; 0x2ad2 <__fp_rempio2+0x16>
    2af6:	80 38       	cpi	r24, 0x80	; 128
    2af8:	30 f4       	brcc	.+12     	; 0x2b06 <__fp_rempio2+0x4a>
    2afa:	9a 95       	dec	r25
    2afc:	bb 0f       	add	r27, r27
    2afe:	66 1f       	adc	r22, r22
    2b00:	77 1f       	adc	r23, r23
    2b02:	88 1f       	adc	r24, r24
    2b04:	d2 f7       	brpl	.-12     	; 0x2afa <__fp_rempio2+0x3e>
    2b06:	90 48       	sbci	r25, 0x80	; 128
    2b08:	6f c1       	rjmp	.+734    	; 0x2de8 <__fp_mpack_finite>

00002b0a <__fp_round>:
    2b0a:	09 2e       	mov	r0, r25
    2b0c:	03 94       	inc	r0
    2b0e:	00 0c       	add	r0, r0
    2b10:	11 f4       	brne	.+4      	; 0x2b16 <__fp_round+0xc>
    2b12:	88 23       	and	r24, r24
    2b14:	52 f0       	brmi	.+20     	; 0x2b2a <__fp_round+0x20>
    2b16:	bb 0f       	add	r27, r27
    2b18:	40 f4       	brcc	.+16     	; 0x2b2a <__fp_round+0x20>
    2b1a:	bf 2b       	or	r27, r31
    2b1c:	11 f4       	brne	.+4      	; 0x2b22 <__fp_round+0x18>
    2b1e:	60 ff       	sbrs	r22, 0
    2b20:	04 c0       	rjmp	.+8      	; 0x2b2a <__fp_round+0x20>
    2b22:	6f 5f       	subi	r22, 0xFF	; 255
    2b24:	7f 4f       	sbci	r23, 0xFF	; 255
    2b26:	8f 4f       	sbci	r24, 0xFF	; 255
    2b28:	9f 4f       	sbci	r25, 0xFF	; 255
    2b2a:	08 95       	ret

00002b2c <__fp_sinus>:
    2b2c:	ef 93       	push	r30
    2b2e:	e0 ff       	sbrs	r30, 0
    2b30:	06 c0       	rjmp	.+12     	; 0x2b3e <__fp_sinus+0x12>
    2b32:	a2 ea       	ldi	r26, 0xA2	; 162
    2b34:	2a ed       	ldi	r18, 0xDA	; 218
    2b36:	3f e0       	ldi	r19, 0x0F	; 15
    2b38:	49 ec       	ldi	r20, 0xC9	; 201
    2b3a:	5f eb       	ldi	r21, 0xBF	; 191
    2b3c:	9b dd       	rcall	.-1226   	; 0x2674 <__addsf3x>
    2b3e:	e5 df       	rcall	.-54     	; 0x2b0a <__fp_round>
    2b40:	0f 90       	pop	r0
    2b42:	03 94       	inc	r0
    2b44:	01 fc       	sbrc	r0, 1
    2b46:	90 58       	subi	r25, 0x80	; 128
    2b48:	e1 e0       	ldi	r30, 0x01	; 1
    2b4a:	f1 e0       	ldi	r31, 0x01	; 1
    2b4c:	60 c1       	rjmp	.+704    	; 0x2e0e <__fp_powsodd>

00002b4e <__fp_split3>:
    2b4e:	57 fd       	sbrc	r21, 7
    2b50:	90 58       	subi	r25, 0x80	; 128
    2b52:	44 0f       	add	r20, r20
    2b54:	55 1f       	adc	r21, r21
    2b56:	59 f0       	breq	.+22     	; 0x2b6e <__fp_splitA+0x10>
    2b58:	5f 3f       	cpi	r21, 0xFF	; 255
    2b5a:	71 f0       	breq	.+28     	; 0x2b78 <__fp_splitA+0x1a>
    2b5c:	47 95       	ror	r20

00002b5e <__fp_splitA>:
    2b5e:	88 0f       	add	r24, r24
    2b60:	97 fb       	bst	r25, 7
    2b62:	99 1f       	adc	r25, r25
    2b64:	61 f0       	breq	.+24     	; 0x2b7e <__fp_splitA+0x20>
    2b66:	9f 3f       	cpi	r25, 0xFF	; 255
    2b68:	79 f0       	breq	.+30     	; 0x2b88 <__fp_splitA+0x2a>
    2b6a:	87 95       	ror	r24
    2b6c:	08 95       	ret
    2b6e:	12 16       	cp	r1, r18
    2b70:	13 06       	cpc	r1, r19
    2b72:	14 06       	cpc	r1, r20
    2b74:	55 1f       	adc	r21, r21
    2b76:	f2 cf       	rjmp	.-28     	; 0x2b5c <__fp_split3+0xe>
    2b78:	46 95       	lsr	r20
    2b7a:	f1 df       	rcall	.-30     	; 0x2b5e <__fp_splitA>
    2b7c:	08 c0       	rjmp	.+16     	; 0x2b8e <__fp_splitA+0x30>
    2b7e:	16 16       	cp	r1, r22
    2b80:	17 06       	cpc	r1, r23
    2b82:	18 06       	cpc	r1, r24
    2b84:	99 1f       	adc	r25, r25
    2b86:	f1 cf       	rjmp	.-30     	; 0x2b6a <__fp_splitA+0xc>
    2b88:	86 95       	lsr	r24
    2b8a:	71 05       	cpc	r23, r1
    2b8c:	61 05       	cpc	r22, r1
    2b8e:	08 94       	sec
    2b90:	08 95       	ret

00002b92 <__fp_zero>:
    2b92:	e8 94       	clt

00002b94 <__fp_szero>:
    2b94:	bb 27       	eor	r27, r27
    2b96:	66 27       	eor	r22, r22
    2b98:	77 27       	eor	r23, r23
    2b9a:	cb 01       	movw	r24, r22
    2b9c:	97 f9       	bld	r25, 7
    2b9e:	08 95       	ret

00002ba0 <__gesf2>:
    2ba0:	2c df       	rcall	.-424    	; 0x29fa <__fp_cmp>
    2ba2:	08 f4       	brcc	.+2      	; 0x2ba6 <__gesf2+0x6>
    2ba4:	8f ef       	ldi	r24, 0xFF	; 255
    2ba6:	08 95       	ret

00002ba8 <inverse>:
    2ba8:	9b 01       	movw	r18, r22
    2baa:	ac 01       	movw	r20, r24
    2bac:	60 e0       	ldi	r22, 0x00	; 0
    2bae:	70 e0       	ldi	r23, 0x00	; 0
    2bb0:	80 e8       	ldi	r24, 0x80	; 128
    2bb2:	9f e3       	ldi	r25, 0x3F	; 63
    2bb4:	1b ce       	rjmp	.-970    	; 0x27ec <__divsf3>
    2bb6:	45 cf       	rjmp	.-374    	; 0x2a42 <__fp_inf>
    2bb8:	15 c1       	rjmp	.+554    	; 0x2de4 <__fp_mpack>

00002bba <ldexp>:
    2bba:	d1 df       	rcall	.-94     	; 0x2b5e <__fp_splitA>
    2bbc:	e8 f3       	brcs	.-6      	; 0x2bb8 <inverse+0x10>
    2bbe:	99 23       	and	r25, r25
    2bc0:	d9 f3       	breq	.-10     	; 0x2bb8 <inverse+0x10>
    2bc2:	94 0f       	add	r25, r20
    2bc4:	51 1d       	adc	r21, r1
    2bc6:	bb f3       	brvs	.-18     	; 0x2bb6 <inverse+0xe>
    2bc8:	91 50       	subi	r25, 0x01	; 1
    2bca:	50 40       	sbci	r21, 0x00	; 0
    2bcc:	94 f0       	brlt	.+36     	; 0x2bf2 <ldexp+0x38>
    2bce:	59 f0       	breq	.+22     	; 0x2be6 <ldexp+0x2c>
    2bd0:	88 23       	and	r24, r24
    2bd2:	32 f0       	brmi	.+12     	; 0x2be0 <ldexp+0x26>
    2bd4:	66 0f       	add	r22, r22
    2bd6:	77 1f       	adc	r23, r23
    2bd8:	88 1f       	adc	r24, r24
    2bda:	91 50       	subi	r25, 0x01	; 1
    2bdc:	50 40       	sbci	r21, 0x00	; 0
    2bde:	c1 f7       	brne	.-16     	; 0x2bd0 <ldexp+0x16>
    2be0:	9e 3f       	cpi	r25, 0xFE	; 254
    2be2:	51 05       	cpc	r21, r1
    2be4:	44 f7       	brge	.-48     	; 0x2bb6 <inverse+0xe>
    2be6:	88 0f       	add	r24, r24
    2be8:	91 1d       	adc	r25, r1
    2bea:	96 95       	lsr	r25
    2bec:	87 95       	ror	r24
    2bee:	97 f9       	bld	r25, 7
    2bf0:	08 95       	ret
    2bf2:	5f 3f       	cpi	r21, 0xFF	; 255
    2bf4:	ac f0       	brlt	.+42     	; 0x2c20 <ldexp+0x66>
    2bf6:	98 3e       	cpi	r25, 0xE8	; 232
    2bf8:	9c f0       	brlt	.+38     	; 0x2c20 <ldexp+0x66>
    2bfa:	bb 27       	eor	r27, r27
    2bfc:	86 95       	lsr	r24
    2bfe:	77 95       	ror	r23
    2c00:	67 95       	ror	r22
    2c02:	b7 95       	ror	r27
    2c04:	08 f4       	brcc	.+2      	; 0x2c08 <ldexp+0x4e>
    2c06:	b1 60       	ori	r27, 0x01	; 1
    2c08:	93 95       	inc	r25
    2c0a:	c1 f7       	brne	.-16     	; 0x2bfc <ldexp+0x42>
    2c0c:	bb 0f       	add	r27, r27
    2c0e:	58 f7       	brcc	.-42     	; 0x2be6 <ldexp+0x2c>
    2c10:	11 f4       	brne	.+4      	; 0x2c16 <ldexp+0x5c>
    2c12:	60 ff       	sbrs	r22, 0
    2c14:	e8 cf       	rjmp	.-48     	; 0x2be6 <ldexp+0x2c>
    2c16:	6f 5f       	subi	r22, 0xFF	; 255
    2c18:	7f 4f       	sbci	r23, 0xFF	; 255
    2c1a:	8f 4f       	sbci	r24, 0xFF	; 255
    2c1c:	9f 4f       	sbci	r25, 0xFF	; 255
    2c1e:	e3 cf       	rjmp	.-58     	; 0x2be6 <ldexp+0x2c>
    2c20:	b9 cf       	rjmp	.-142    	; 0x2b94 <__fp_szero>

00002c22 <modf>:
    2c22:	fa 01       	movw	r30, r20
    2c24:	dc 01       	movw	r26, r24
    2c26:	aa 0f       	add	r26, r26
    2c28:	bb 1f       	adc	r27, r27
    2c2a:	9b 01       	movw	r18, r22
    2c2c:	ac 01       	movw	r20, r24
    2c2e:	bf 57       	subi	r27, 0x7F	; 127
    2c30:	28 f4       	brcc	.+10     	; 0x2c3c <modf+0x1a>
    2c32:	22 27       	eor	r18, r18
    2c34:	33 27       	eor	r19, r19
    2c36:	44 27       	eor	r20, r20
    2c38:	50 78       	andi	r21, 0x80	; 128
    2c3a:	1f c0       	rjmp	.+62     	; 0x2c7a <modf+0x58>
    2c3c:	b7 51       	subi	r27, 0x17	; 23
    2c3e:	88 f4       	brcc	.+34     	; 0x2c62 <modf+0x40>
    2c40:	ab 2f       	mov	r26, r27
    2c42:	00 24       	eor	r0, r0
    2c44:	46 95       	lsr	r20
    2c46:	37 95       	ror	r19
    2c48:	27 95       	ror	r18
    2c4a:	01 1c       	adc	r0, r1
    2c4c:	a3 95       	inc	r26
    2c4e:	d2 f3       	brmi	.-12     	; 0x2c44 <modf+0x22>
    2c50:	00 20       	and	r0, r0
    2c52:	69 f0       	breq	.+26     	; 0x2c6e <modf+0x4c>
    2c54:	22 0f       	add	r18, r18
    2c56:	33 1f       	adc	r19, r19
    2c58:	44 1f       	adc	r20, r20
    2c5a:	b3 95       	inc	r27
    2c5c:	da f3       	brmi	.-10     	; 0x2c54 <modf+0x32>
    2c5e:	0d d0       	rcall	.+26     	; 0x2c7a <modf+0x58>
    2c60:	f7 cc       	rjmp	.-1554   	; 0x2650 <__subsf3>
    2c62:	61 30       	cpi	r22, 0x01	; 1
    2c64:	71 05       	cpc	r23, r1
    2c66:	a0 e8       	ldi	r26, 0x80	; 128
    2c68:	8a 07       	cpc	r24, r26
    2c6a:	b9 46       	sbci	r27, 0x69	; 105
    2c6c:	30 f4       	brcc	.+12     	; 0x2c7a <modf+0x58>
    2c6e:	9b 01       	movw	r18, r22
    2c70:	ac 01       	movw	r20, r24
    2c72:	66 27       	eor	r22, r22
    2c74:	77 27       	eor	r23, r23
    2c76:	88 27       	eor	r24, r24
    2c78:	90 78       	andi	r25, 0x80	; 128
    2c7a:	30 96       	adiw	r30, 0x00	; 0
    2c7c:	21 f0       	breq	.+8      	; 0x2c86 <modf+0x64>
    2c7e:	20 83       	st	Z, r18
    2c80:	31 83       	std	Z+1, r19	; 0x01
    2c82:	42 83       	std	Z+2, r20	; 0x02
    2c84:	53 83       	std	Z+3, r21	; 0x03
    2c86:	08 95       	ret

00002c88 <__mulsf3>:
    2c88:	0b d0       	rcall	.+22     	; 0x2ca0 <__mulsf3x>
    2c8a:	3f cf       	rjmp	.-386    	; 0x2b0a <__fp_round>
    2c8c:	08 df       	rcall	.-496    	; 0x2a9e <__fp_pscA>
    2c8e:	28 f0       	brcs	.+10     	; 0x2c9a <__mulsf3+0x12>
    2c90:	0d df       	rcall	.-486    	; 0x2aac <__fp_pscB>
    2c92:	18 f0       	brcs	.+6      	; 0x2c9a <__mulsf3+0x12>
    2c94:	95 23       	and	r25, r21
    2c96:	09 f0       	breq	.+2      	; 0x2c9a <__mulsf3+0x12>
    2c98:	d4 ce       	rjmp	.-600    	; 0x2a42 <__fp_inf>
    2c9a:	d9 ce       	rjmp	.-590    	; 0x2a4e <__fp_nan>
    2c9c:	11 24       	eor	r1, r1
    2c9e:	7a cf       	rjmp	.-268    	; 0x2b94 <__fp_szero>

00002ca0 <__mulsf3x>:
    2ca0:	56 df       	rcall	.-340    	; 0x2b4e <__fp_split3>
    2ca2:	a0 f3       	brcs	.-24     	; 0x2c8c <__mulsf3+0x4>

00002ca4 <__mulsf3_pse>:
    2ca4:	95 9f       	mul	r25, r21
    2ca6:	d1 f3       	breq	.-12     	; 0x2c9c <__mulsf3+0x14>
    2ca8:	95 0f       	add	r25, r21
    2caa:	50 e0       	ldi	r21, 0x00	; 0
    2cac:	55 1f       	adc	r21, r21
    2cae:	62 9f       	mul	r22, r18
    2cb0:	f0 01       	movw	r30, r0
    2cb2:	72 9f       	mul	r23, r18
    2cb4:	bb 27       	eor	r27, r27
    2cb6:	f0 0d       	add	r31, r0
    2cb8:	b1 1d       	adc	r27, r1
    2cba:	63 9f       	mul	r22, r19
    2cbc:	aa 27       	eor	r26, r26
    2cbe:	f0 0d       	add	r31, r0
    2cc0:	b1 1d       	adc	r27, r1
    2cc2:	aa 1f       	adc	r26, r26
    2cc4:	64 9f       	mul	r22, r20
    2cc6:	66 27       	eor	r22, r22
    2cc8:	b0 0d       	add	r27, r0
    2cca:	a1 1d       	adc	r26, r1
    2ccc:	66 1f       	adc	r22, r22
    2cce:	82 9f       	mul	r24, r18
    2cd0:	22 27       	eor	r18, r18
    2cd2:	b0 0d       	add	r27, r0
    2cd4:	a1 1d       	adc	r26, r1
    2cd6:	62 1f       	adc	r22, r18
    2cd8:	73 9f       	mul	r23, r19
    2cda:	b0 0d       	add	r27, r0
    2cdc:	a1 1d       	adc	r26, r1
    2cde:	62 1f       	adc	r22, r18
    2ce0:	83 9f       	mul	r24, r19
    2ce2:	a0 0d       	add	r26, r0
    2ce4:	61 1d       	adc	r22, r1
    2ce6:	22 1f       	adc	r18, r18
    2ce8:	74 9f       	mul	r23, r20
    2cea:	33 27       	eor	r19, r19
    2cec:	a0 0d       	add	r26, r0
    2cee:	61 1d       	adc	r22, r1
    2cf0:	23 1f       	adc	r18, r19
    2cf2:	84 9f       	mul	r24, r20
    2cf4:	60 0d       	add	r22, r0
    2cf6:	21 1d       	adc	r18, r1
    2cf8:	82 2f       	mov	r24, r18
    2cfa:	76 2f       	mov	r23, r22
    2cfc:	6a 2f       	mov	r22, r26
    2cfe:	11 24       	eor	r1, r1
    2d00:	9f 57       	subi	r25, 0x7F	; 127
    2d02:	50 40       	sbci	r21, 0x00	; 0
    2d04:	8a f0       	brmi	.+34     	; 0x2d28 <__mulsf3_pse+0x84>
    2d06:	e1 f0       	breq	.+56     	; 0x2d40 <__mulsf3_pse+0x9c>
    2d08:	88 23       	and	r24, r24
    2d0a:	4a f0       	brmi	.+18     	; 0x2d1e <__mulsf3_pse+0x7a>
    2d0c:	ee 0f       	add	r30, r30
    2d0e:	ff 1f       	adc	r31, r31
    2d10:	bb 1f       	adc	r27, r27
    2d12:	66 1f       	adc	r22, r22
    2d14:	77 1f       	adc	r23, r23
    2d16:	88 1f       	adc	r24, r24
    2d18:	91 50       	subi	r25, 0x01	; 1
    2d1a:	50 40       	sbci	r21, 0x00	; 0
    2d1c:	a9 f7       	brne	.-22     	; 0x2d08 <__mulsf3_pse+0x64>
    2d1e:	9e 3f       	cpi	r25, 0xFE	; 254
    2d20:	51 05       	cpc	r21, r1
    2d22:	70 f0       	brcs	.+28     	; 0x2d40 <__mulsf3_pse+0x9c>
    2d24:	8e ce       	rjmp	.-740    	; 0x2a42 <__fp_inf>
    2d26:	36 cf       	rjmp	.-404    	; 0x2b94 <__fp_szero>
    2d28:	5f 3f       	cpi	r21, 0xFF	; 255
    2d2a:	ec f3       	brlt	.-6      	; 0x2d26 <__mulsf3_pse+0x82>
    2d2c:	98 3e       	cpi	r25, 0xE8	; 232
    2d2e:	dc f3       	brlt	.-10     	; 0x2d26 <__mulsf3_pse+0x82>
    2d30:	86 95       	lsr	r24
    2d32:	77 95       	ror	r23
    2d34:	67 95       	ror	r22
    2d36:	b7 95       	ror	r27
    2d38:	f7 95       	ror	r31
    2d3a:	e7 95       	ror	r30
    2d3c:	9f 5f       	subi	r25, 0xFF	; 255
    2d3e:	c1 f7       	brne	.-16     	; 0x2d30 <__mulsf3_pse+0x8c>
    2d40:	fe 2b       	or	r31, r30
    2d42:	88 0f       	add	r24, r24
    2d44:	91 1d       	adc	r25, r1
    2d46:	96 95       	lsr	r25
    2d48:	87 95       	ror	r24
    2d4a:	97 f9       	bld	r25, 7
    2d4c:	08 95       	ret

00002d4e <sin>:
    2d4e:	9f 93       	push	r25
    2d50:	b5 de       	rcall	.-662    	; 0x2abc <__fp_rempio2>
    2d52:	0f 90       	pop	r0
    2d54:	07 fc       	sbrc	r0, 7
    2d56:	ee 5f       	subi	r30, 0xFE	; 254
    2d58:	e9 ce       	rjmp	.-558    	; 0x2b2c <__fp_sinus>
    2d5a:	11 f4       	brne	.+4      	; 0x2d60 <sin+0x12>
    2d5c:	0e f4       	brtc	.+2      	; 0x2d60 <sin+0x12>
    2d5e:	77 ce       	rjmp	.-786    	; 0x2a4e <__fp_nan>
    2d60:	41 c0       	rjmp	.+130    	; 0x2de4 <__fp_mpack>

00002d62 <sqrt>:
    2d62:	fd de       	rcall	.-518    	; 0x2b5e <__fp_splitA>
    2d64:	d0 f3       	brcs	.-12     	; 0x2d5a <sin+0xc>
    2d66:	99 23       	and	r25, r25
    2d68:	d9 f3       	breq	.-10     	; 0x2d60 <sin+0x12>
    2d6a:	ce f3       	brts	.-14     	; 0x2d5e <sin+0x10>
    2d6c:	9f 57       	subi	r25, 0x7F	; 127
    2d6e:	55 0b       	sbc	r21, r21
    2d70:	87 ff       	sbrs	r24, 7
    2d72:	46 d0       	rcall	.+140    	; 0x2e00 <__fp_norm2>
    2d74:	00 24       	eor	r0, r0
    2d76:	a0 e6       	ldi	r26, 0x60	; 96
    2d78:	40 ea       	ldi	r20, 0xA0	; 160
    2d7a:	90 01       	movw	r18, r0
    2d7c:	80 58       	subi	r24, 0x80	; 128
    2d7e:	56 95       	lsr	r21
    2d80:	97 95       	ror	r25
    2d82:	28 f4       	brcc	.+10     	; 0x2d8e <sqrt+0x2c>
    2d84:	80 5c       	subi	r24, 0xC0	; 192
    2d86:	66 0f       	add	r22, r22
    2d88:	77 1f       	adc	r23, r23
    2d8a:	88 1f       	adc	r24, r24
    2d8c:	20 f0       	brcs	.+8      	; 0x2d96 <sqrt+0x34>
    2d8e:	26 17       	cp	r18, r22
    2d90:	37 07       	cpc	r19, r23
    2d92:	48 07       	cpc	r20, r24
    2d94:	30 f4       	brcc	.+12     	; 0x2da2 <sqrt+0x40>
    2d96:	62 1b       	sub	r22, r18
    2d98:	73 0b       	sbc	r23, r19
    2d9a:	84 0b       	sbc	r24, r20
    2d9c:	20 29       	or	r18, r0
    2d9e:	31 29       	or	r19, r1
    2da0:	4a 2b       	or	r20, r26
    2da2:	a6 95       	lsr	r26
    2da4:	17 94       	ror	r1
    2da6:	07 94       	ror	r0
    2da8:	20 25       	eor	r18, r0
    2daa:	31 25       	eor	r19, r1
    2dac:	4a 27       	eor	r20, r26
    2dae:	58 f7       	brcc	.-42     	; 0x2d86 <sqrt+0x24>
    2db0:	66 0f       	add	r22, r22
    2db2:	77 1f       	adc	r23, r23
    2db4:	88 1f       	adc	r24, r24
    2db6:	20 f0       	brcs	.+8      	; 0x2dc0 <sqrt+0x5e>
    2db8:	26 17       	cp	r18, r22
    2dba:	37 07       	cpc	r19, r23
    2dbc:	48 07       	cpc	r20, r24
    2dbe:	30 f4       	brcc	.+12     	; 0x2dcc <sqrt+0x6a>
    2dc0:	62 0b       	sbc	r22, r18
    2dc2:	73 0b       	sbc	r23, r19
    2dc4:	84 0b       	sbc	r24, r20
    2dc6:	20 0d       	add	r18, r0
    2dc8:	31 1d       	adc	r19, r1
    2dca:	41 1d       	adc	r20, r1
    2dcc:	a0 95       	com	r26
    2dce:	81 f7       	brne	.-32     	; 0x2db0 <sqrt+0x4e>
    2dd0:	b9 01       	movw	r22, r18
    2dd2:	84 2f       	mov	r24, r20
    2dd4:	91 58       	subi	r25, 0x81	; 129
    2dd6:	88 0f       	add	r24, r24
    2dd8:	96 95       	lsr	r25
    2dda:	87 95       	ror	r24
    2ddc:	08 95       	ret

00002dde <square>:
    2dde:	9b 01       	movw	r18, r22
    2de0:	ac 01       	movw	r20, r24
    2de2:	52 cf       	rjmp	.-348    	; 0x2c88 <__mulsf3>

00002de4 <__fp_mpack>:
    2de4:	9f 3f       	cpi	r25, 0xFF	; 255
    2de6:	31 f0       	breq	.+12     	; 0x2df4 <__fp_mpack_finite+0xc>

00002de8 <__fp_mpack_finite>:
    2de8:	91 50       	subi	r25, 0x01	; 1
    2dea:	20 f4       	brcc	.+8      	; 0x2df4 <__fp_mpack_finite+0xc>
    2dec:	87 95       	ror	r24
    2dee:	77 95       	ror	r23
    2df0:	67 95       	ror	r22
    2df2:	b7 95       	ror	r27
    2df4:	88 0f       	add	r24, r24
    2df6:	91 1d       	adc	r25, r1
    2df8:	96 95       	lsr	r25
    2dfa:	87 95       	ror	r24
    2dfc:	97 f9       	bld	r25, 7
    2dfe:	08 95       	ret

00002e00 <__fp_norm2>:
    2e00:	91 50       	subi	r25, 0x01	; 1
    2e02:	50 40       	sbci	r21, 0x00	; 0
    2e04:	66 0f       	add	r22, r22
    2e06:	77 1f       	adc	r23, r23
    2e08:	88 1f       	adc	r24, r24
    2e0a:	d2 f7       	brpl	.-12     	; 0x2e00 <__fp_norm2>
    2e0c:	08 95       	ret

00002e0e <__fp_powsodd>:
    2e0e:	9f 93       	push	r25
    2e10:	8f 93       	push	r24
    2e12:	7f 93       	push	r23
    2e14:	6f 93       	push	r22
    2e16:	ff 93       	push	r31
    2e18:	ef 93       	push	r30
    2e1a:	9b 01       	movw	r18, r22
    2e1c:	ac 01       	movw	r20, r24
    2e1e:	34 df       	rcall	.-408    	; 0x2c88 <__mulsf3>
    2e20:	ef 91       	pop	r30
    2e22:	ff 91       	pop	r31
    2e24:	17 de       	rcall	.-978    	; 0x2a54 <__fp_powser>
    2e26:	2f 91       	pop	r18
    2e28:	3f 91       	pop	r19
    2e2a:	4f 91       	pop	r20
    2e2c:	5f 91       	pop	r21
    2e2e:	2c cf       	rjmp	.-424    	; 0x2c88 <__mulsf3>

00002e30 <__divmodhi4>:
    2e30:	97 fb       	bst	r25, 7
    2e32:	07 2e       	mov	r0, r23
    2e34:	16 f4       	brtc	.+4      	; 0x2e3a <__divmodhi4+0xa>
    2e36:	00 94       	com	r0
    2e38:	07 d0       	rcall	.+14     	; 0x2e48 <__divmodhi4_neg1>
    2e3a:	77 fd       	sbrc	r23, 7
    2e3c:	09 d0       	rcall	.+18     	; 0x2e50 <__divmodhi4_neg2>
    2e3e:	0e 94 2c 17 	call	0x2e58	; 0x2e58 <__udivmodhi4>
    2e42:	07 fc       	sbrc	r0, 7
    2e44:	05 d0       	rcall	.+10     	; 0x2e50 <__divmodhi4_neg2>
    2e46:	3e f4       	brtc	.+14     	; 0x2e56 <__divmodhi4_exit>

00002e48 <__divmodhi4_neg1>:
    2e48:	90 95       	com	r25
    2e4a:	81 95       	neg	r24
    2e4c:	9f 4f       	sbci	r25, 0xFF	; 255
    2e4e:	08 95       	ret

00002e50 <__divmodhi4_neg2>:
    2e50:	70 95       	com	r23
    2e52:	61 95       	neg	r22
    2e54:	7f 4f       	sbci	r23, 0xFF	; 255

00002e56 <__divmodhi4_exit>:
    2e56:	08 95       	ret

00002e58 <__udivmodhi4>:
    2e58:	aa 1b       	sub	r26, r26
    2e5a:	bb 1b       	sub	r27, r27
    2e5c:	51 e1       	ldi	r21, 0x11	; 17
    2e5e:	07 c0       	rjmp	.+14     	; 0x2e6e <__udivmodhi4_ep>

00002e60 <__udivmodhi4_loop>:
    2e60:	aa 1f       	adc	r26, r26
    2e62:	bb 1f       	adc	r27, r27
    2e64:	a6 17       	cp	r26, r22
    2e66:	b7 07       	cpc	r27, r23
    2e68:	10 f0       	brcs	.+4      	; 0x2e6e <__udivmodhi4_ep>
    2e6a:	a6 1b       	sub	r26, r22
    2e6c:	b7 0b       	sbc	r27, r23

00002e6e <__udivmodhi4_ep>:
    2e6e:	88 1f       	adc	r24, r24
    2e70:	99 1f       	adc	r25, r25
    2e72:	5a 95       	dec	r21
    2e74:	a9 f7       	brne	.-22     	; 0x2e60 <__udivmodhi4_loop>
    2e76:	80 95       	com	r24
    2e78:	90 95       	com	r25
    2e7a:	bc 01       	movw	r22, r24
    2e7c:	cd 01       	movw	r24, r26
    2e7e:	08 95       	ret

00002e80 <itoa>:
    2e80:	fb 01       	movw	r30, r22
    2e82:	9f 01       	movw	r18, r30
    2e84:	e8 94       	clt
    2e86:	42 30       	cpi	r20, 0x02	; 2
    2e88:	c4 f0       	brlt	.+48     	; 0x2eba <itoa+0x3a>
    2e8a:	45 32       	cpi	r20, 0x25	; 37
    2e8c:	b4 f4       	brge	.+44     	; 0x2eba <itoa+0x3a>
    2e8e:	4a 30       	cpi	r20, 0x0A	; 10
    2e90:	29 f4       	brne	.+10     	; 0x2e9c <itoa+0x1c>
    2e92:	97 fb       	bst	r25, 7
    2e94:	1e f4       	brtc	.+6      	; 0x2e9c <itoa+0x1c>
    2e96:	90 95       	com	r25
    2e98:	81 95       	neg	r24
    2e9a:	9f 4f       	sbci	r25, 0xFF	; 255
    2e9c:	64 2f       	mov	r22, r20
    2e9e:	77 27       	eor	r23, r23
    2ea0:	0e 94 2c 17 	call	0x2e58	; 0x2e58 <__udivmodhi4>
    2ea4:	80 5d       	subi	r24, 0xD0	; 208
    2ea6:	8a 33       	cpi	r24, 0x3A	; 58
    2ea8:	0c f0       	brlt	.+2      	; 0x2eac <itoa+0x2c>
    2eaa:	89 5d       	subi	r24, 0xD9	; 217
    2eac:	81 93       	st	Z+, r24
    2eae:	cb 01       	movw	r24, r22
    2eb0:	00 97       	sbiw	r24, 0x00	; 0
    2eb2:	a1 f7       	brne	.-24     	; 0x2e9c <itoa+0x1c>
    2eb4:	16 f4       	brtc	.+4      	; 0x2eba <itoa+0x3a>
    2eb6:	5d e2       	ldi	r21, 0x2D	; 45
    2eb8:	51 93       	st	Z+, r21
    2eba:	10 82       	st	Z, r1
    2ebc:	c9 01       	movw	r24, r18
    2ebe:	0c 94 61 17 	jmp	0x2ec2	; 0x2ec2 <strrev>

00002ec2 <strrev>:
    2ec2:	dc 01       	movw	r26, r24
    2ec4:	fc 01       	movw	r30, r24
    2ec6:	67 2f       	mov	r22, r23
    2ec8:	71 91       	ld	r23, Z+
    2eca:	77 23       	and	r23, r23
    2ecc:	e1 f7       	brne	.-8      	; 0x2ec6 <strrev+0x4>
    2ece:	32 97       	sbiw	r30, 0x02	; 2
    2ed0:	04 c0       	rjmp	.+8      	; 0x2eda <strrev+0x18>
    2ed2:	7c 91       	ld	r23, X
    2ed4:	6d 93       	st	X+, r22
    2ed6:	70 83       	st	Z, r23
    2ed8:	62 91       	ld	r22, -Z
    2eda:	ae 17       	cp	r26, r30
    2edc:	bf 07       	cpc	r27, r31
    2ede:	c8 f3       	brcs	.-14     	; 0x2ed2 <strrev+0x10>
    2ee0:	08 95       	ret

00002ee2 <_exit>:
    2ee2:	f8 94       	cli

00002ee4 <__stop_program>:
    2ee4:	ff cf       	rjmp	.-2      	; 0x2ee4 <__stop_program>
