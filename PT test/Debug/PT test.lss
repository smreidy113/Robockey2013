
PT test.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000008  00800100  00000b6c  00000c00  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000b6c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000016  00800108  00800108  00000c08  2**0
                  ALLOC
  3 .stab         0000099c  00000000  00000000  00000c08  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      000002ed  00000000  00000000  000015a4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      0000002f  00000000  00000000  00001891  2**0
                  CONTENTS, READONLY
  6 .debug_aranges 00000110  00000000  00000000  000018c0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00001094  00000000  00000000  000019d0  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00000397  00000000  00000000  00002a64  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   000006c3  00000000  00000000  00002dfb  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  0000037c  00000000  00000000  000034c0  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    000004d9  00000000  00000000  0000383c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    000019ec  00000000  00000000  00003d15  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000140  00000000  00000000  00005701  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 b0 00 	jmp	0x160	; 0x160 <__ctors_end>
   4:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>
   8:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>
   c:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>
  10:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>
  14:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>
  18:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>
  1c:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>
  20:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>
  24:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>
  28:	0c 94 8a 01 	jmp	0x314	; 0x314 <__vector_10>
  2c:	0c 94 c8 01 	jmp	0x390	; 0x390 <__vector_11>
  30:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>
  34:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>
  38:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>
  3c:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>
  40:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>
  44:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>
  48:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>
  4c:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>
  50:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>
  54:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>
  58:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>
  5c:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>
  60:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>
  64:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>
  68:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>
  6c:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>
  70:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>
  74:	0c 94 47 05 	jmp	0xa8e	; 0xa8e <__vector_29>
  78:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>
  7c:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>
  80:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>
  84:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>
  88:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>
  8c:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>
  90:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>
  94:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>
  98:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>
  9c:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>
  a0:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>
  a4:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>
  a8:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>

000000ac <descriptor_list>:
  ac:	00 01 00 00 e0 00 12 00 02 00 00 f2 00 43 00 03     .............C..
  bc:	00 00 35 01 04 01 03 09 04 39 01 12 02 03 09 04     ..5......9......
  cc:	4d 01 06 03 03 09 04 55 01 08                       M......U..

000000d6 <endpoint_config_table>:
  d6:	00 01 c1 12 01 80 36 01 81 36                       ......6..6

000000e0 <device_descriptor>:
  e0:	12 01 00 02 02 00 00 10 c0 16 7a 04 00 01 01 02     ..........z.....
  f0:	03 01                                               ..

000000f2 <config1_descriptor>:
  f2:	09 02 43 00 02 01 00 c0 32 09 04 00 00 01 02 02     ..C.....2.......
 102:	01 00 05 24 00 10 01 05 24 01 01 01 04 24 02 06     ...$....$....$..
 112:	05 24 06 00 01 07 05 82 03 10 00 40 09 04 01 00     .$.........@....
 122:	02 0a 00 00 00 07 05 03 02 40 00 00 07 05 84 02     .........@......
 132:	40 00 00                                            @..

00000135 <string0>:
 135:	04 03 09 04                                         ....

00000139 <string1>:
 139:	12 03 4a 00 2e 00 20 00 46 00 69 00 65 00 6e 00     ..J... .F.i.e.n.
 149:	65 00 00 00                                         e...

0000014d <string2>:
 14d:	06 03 4d 00 32 00 00 00                             ..M.2...

00000155 <string3>:
 155:	08 03 34 00 31 00 30 00 00 00 00                    ..4.1.0....

00000160 <__ctors_end>:
 160:	11 24       	eor	r1, r1
 162:	1f be       	out	0x3f, r1	; 63
 164:	cf ef       	ldi	r28, 0xFF	; 255
 166:	da e0       	ldi	r29, 0x0A	; 10
 168:	de bf       	out	0x3e, r29	; 62
 16a:	cd bf       	out	0x3d, r28	; 61

0000016c <__do_copy_data>:
 16c:	11 e0       	ldi	r17, 0x01	; 1
 16e:	a0 e0       	ldi	r26, 0x00	; 0
 170:	b1 e0       	ldi	r27, 0x01	; 1
 172:	ec e6       	ldi	r30, 0x6C	; 108
 174:	fb e0       	ldi	r31, 0x0B	; 11
 176:	02 c0       	rjmp	.+4      	; 0x17c <__do_copy_data+0x10>
 178:	05 90       	lpm	r0, Z+
 17a:	0d 92       	st	X+, r0
 17c:	a8 30       	cpi	r26, 0x08	; 8
 17e:	b1 07       	cpc	r27, r17
 180:	d9 f7       	brne	.-10     	; 0x178 <__do_copy_data+0xc>

00000182 <__do_clear_bss>:
 182:	21 e0       	ldi	r18, 0x01	; 1
 184:	a8 e0       	ldi	r26, 0x08	; 8
 186:	b1 e0       	ldi	r27, 0x01	; 1
 188:	01 c0       	rjmp	.+2      	; 0x18c <.do_clear_bss_start>

0000018a <.do_clear_bss_loop>:
 18a:	1d 92       	st	X+, r1

0000018c <.do_clear_bss_start>:
 18c:	ae 31       	cpi	r26, 0x1E	; 30
 18e:	b2 07       	cpc	r27, r18
 190:	e1 f7       	brne	.-8      	; 0x18a <.do_clear_bss_loop>
 192:	0e 94 12 04 	call	0x824	; 0x824 <main>
 196:	0c 94 b4 05 	jmp	0xb68	; 0xb68 <_exit>

0000019a <__bad_interrupt>:
 19a:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000019e <m_usb_init>:
 19e:	81 e0       	ldi	r24, 0x01	; 1
 1a0:	80 93 d7 00 	sts	0x00D7, r24
 1a4:	80 ea       	ldi	r24, 0xA0	; 160
 1a6:	80 93 d8 00 	sts	0x00D8, r24
 1aa:	82 e1       	ldi	r24, 0x12	; 18
 1ac:	89 bd       	out	0x29, r24	; 41
 1ae:	09 b4       	in	r0, 0x29	; 41
 1b0:	00 fe       	sbrs	r0, 0
 1b2:	fd cf       	rjmp	.-6      	; 0x1ae <m_usb_init+0x10>
 1b4:	80 e9       	ldi	r24, 0x90	; 144
 1b6:	80 93 d8 00 	sts	0x00D8, r24
 1ba:	10 92 e0 00 	sts	0x00E0, r1
 1be:	10 92 09 01 	sts	0x0109, r1
 1c2:	10 92 0a 01 	sts	0x010A, r1
 1c6:	8c e0       	ldi	r24, 0x0C	; 12
 1c8:	80 93 e2 00 	sts	0x00E2, r24
 1cc:	78 94       	sei
 1ce:	08 95       	ret

000001d0 <m_usb_isconnected>:
 1d0:	80 91 09 01 	lds	r24, 0x0109
 1d4:	08 95       	ret

000001d6 <m_usb_rx_char>:
 1d6:	9f b7       	in	r25, 0x3f	; 63
 1d8:	f8 94       	cli
 1da:	80 91 09 01 	lds	r24, 0x0109
 1de:	81 11       	cpse	r24, r1
 1e0:	03 c0       	rjmp	.+6      	; 0x1e8 <m_usb_rx_char+0x12>
 1e2:	9f bf       	out	0x3f, r25	; 63
 1e4:	8f ef       	ldi	r24, 0xFF	; 255
 1e6:	08 95       	ret
 1e8:	83 e0       	ldi	r24, 0x03	; 3
 1ea:	80 93 e9 00 	sts	0x00E9, r24
 1ee:	80 91 e8 00 	lds	r24, 0x00E8
 1f2:	85 fd       	sbrc	r24, 5
 1f4:	03 c0       	rjmp	.+6      	; 0x1fc <m_usb_rx_char+0x26>
 1f6:	9f bf       	out	0x3f, r25	; 63
 1f8:	8f ef       	ldi	r24, 0xFF	; 255
 1fa:	08 95       	ret
 1fc:	80 91 f1 00 	lds	r24, 0x00F1
 200:	20 91 e8 00 	lds	r18, 0x00E8
 204:	25 fd       	sbrc	r18, 5
 206:	03 c0       	rjmp	.+6      	; 0x20e <m_usb_rx_char+0x38>
 208:	2b e6       	ldi	r18, 0x6B	; 107
 20a:	20 93 e8 00 	sts	0x00E8, r18
 20e:	9f bf       	out	0x3f, r25	; 63
 210:	08 95       	ret

00000212 <m_usb_rx_available>:
 212:	9f b7       	in	r25, 0x3f	; 63
 214:	f8 94       	cli
 216:	80 91 09 01 	lds	r24, 0x0109
 21a:	88 23       	and	r24, r24
 21c:	31 f0       	breq	.+12     	; 0x22a <m_usb_rx_available+0x18>
 21e:	83 e0       	ldi	r24, 0x03	; 3
 220:	80 93 e9 00 	sts	0x00E9, r24
 224:	80 91 f2 00 	lds	r24, 0x00F2
 228:	01 c0       	rjmp	.+2      	; 0x22c <m_usb_rx_available+0x1a>
 22a:	80 e0       	ldi	r24, 0x00	; 0
 22c:	9f bf       	out	0x3f, r25	; 63
 22e:	08 95       	ret

00000230 <m_usb_rx_flush>:
 230:	80 91 09 01 	lds	r24, 0x0109
 234:	88 23       	and	r24, r24
 236:	89 f0       	breq	.+34     	; 0x25a <m_usb_rx_flush+0x2a>
 238:	2f b7       	in	r18, 0x3f	; 63
 23a:	f8 94       	cli
 23c:	83 e0       	ldi	r24, 0x03	; 3
 23e:	80 93 e9 00 	sts	0x00E9, r24
 242:	80 91 e8 00 	lds	r24, 0x00E8
 246:	85 ff       	sbrs	r24, 5
 248:	07 c0       	rjmp	.+14     	; 0x258 <m_usb_rx_flush+0x28>
 24a:	e8 ee       	ldi	r30, 0xE8	; 232
 24c:	f0 e0       	ldi	r31, 0x00	; 0
 24e:	9b e6       	ldi	r25, 0x6B	; 107
 250:	90 83       	st	Z, r25
 252:	80 81       	ld	r24, Z
 254:	85 fd       	sbrc	r24, 5
 256:	fc cf       	rjmp	.-8      	; 0x250 <m_usb_rx_flush+0x20>
 258:	2f bf       	out	0x3f, r18	; 63
 25a:	08 95       	ret

0000025c <m_usb_tx_char>:
 25c:	cf 93       	push	r28
 25e:	df 93       	push	r29
 260:	90 91 09 01 	lds	r25, 0x0109
 264:	99 23       	and	r25, r25
 266:	09 f4       	brne	.+2      	; 0x26a <m_usb_tx_char+0xe>
 268:	4d c0       	rjmp	.+154    	; 0x304 <m_usb_tx_char+0xa8>
 26a:	9f b7       	in	r25, 0x3f	; 63
 26c:	f8 94       	cli
 26e:	24 e0       	ldi	r18, 0x04	; 4
 270:	20 93 e9 00 	sts	0x00E9, r18
 274:	20 91 0b 01 	lds	r18, 0x010B
 278:	22 23       	and	r18, r18
 27a:	49 f0       	breq	.+18     	; 0x28e <m_usb_tx_char+0x32>
 27c:	20 91 e8 00 	lds	r18, 0x00E8
 280:	25 fd       	sbrc	r18, 5
 282:	03 c0       	rjmp	.+6      	; 0x28a <m_usb_tx_char+0x2e>
 284:	9f bf       	out	0x3f, r25	; 63
 286:	8f ef       	ldi	r24, 0xFF	; 255
 288:	42 c0       	rjmp	.+132    	; 0x30e <m_usb_tx_char+0xb2>
 28a:	10 92 0b 01 	sts	0x010B, r1
 28e:	30 91 e4 00 	lds	r19, 0x00E4
 292:	37 5e       	subi	r19, 0xE7	; 231
 294:	20 91 e8 00 	lds	r18, 0x00E8
 298:	25 fd       	sbrc	r18, 5
 29a:	25 c0       	rjmp	.+74     	; 0x2e6 <m_usb_tx_char+0x8a>
 29c:	9f bf       	out	0x3f, r25	; 63
 29e:	90 91 e4 00 	lds	r25, 0x00E4
 2a2:	93 17       	cp	r25, r19
 2a4:	49 f0       	breq	.+18     	; 0x2b8 <m_usb_tx_char+0x5c>
 2a6:	90 91 09 01 	lds	r25, 0x0109
 2aa:	91 11       	cpse	r25, r1
 2ac:	0f c0       	rjmp	.+30     	; 0x2cc <m_usb_tx_char+0x70>
 2ae:	2c c0       	rjmp	.+88     	; 0x308 <m_usb_tx_char+0xac>
 2b0:	9f bf       	out	0x3f, r25	; 63
 2b2:	98 81       	ld	r25, Y
 2b4:	93 13       	cpse	r25, r19
 2b6:	05 c0       	rjmp	.+10     	; 0x2c2 <m_usb_tx_char+0x66>
 2b8:	81 e0       	ldi	r24, 0x01	; 1
 2ba:	80 93 0b 01 	sts	0x010B, r24
 2be:	8f ef       	ldi	r24, 0xFF	; 255
 2c0:	26 c0       	rjmp	.+76     	; 0x30e <m_usb_tx_char+0xb2>
 2c2:	90 91 09 01 	lds	r25, 0x0109
 2c6:	91 11       	cpse	r25, r1
 2c8:	08 c0       	rjmp	.+16     	; 0x2da <m_usb_tx_char+0x7e>
 2ca:	20 c0       	rjmp	.+64     	; 0x30c <m_usb_tx_char+0xb0>
 2cc:	a9 ee       	ldi	r26, 0xE9	; 233
 2ce:	b0 e0       	ldi	r27, 0x00	; 0
 2d0:	44 e0       	ldi	r20, 0x04	; 4
 2d2:	e8 ee       	ldi	r30, 0xE8	; 232
 2d4:	f0 e0       	ldi	r31, 0x00	; 0
 2d6:	c4 ee       	ldi	r28, 0xE4	; 228
 2d8:	d0 e0       	ldi	r29, 0x00	; 0
 2da:	9f b7       	in	r25, 0x3f	; 63
 2dc:	f8 94       	cli
 2de:	4c 93       	st	X, r20
 2e0:	20 81       	ld	r18, Z
 2e2:	25 ff       	sbrs	r18, 5
 2e4:	e5 cf       	rjmp	.-54     	; 0x2b0 <m_usb_tx_char+0x54>
 2e6:	80 93 f1 00 	sts	0x00F1, r24
 2ea:	80 91 e8 00 	lds	r24, 0x00E8
 2ee:	85 fd       	sbrc	r24, 5
 2f0:	03 c0       	rjmp	.+6      	; 0x2f8 <m_usb_tx_char+0x9c>
 2f2:	8a e3       	ldi	r24, 0x3A	; 58
 2f4:	80 93 e8 00 	sts	0x00E8, r24
 2f8:	85 e0       	ldi	r24, 0x05	; 5
 2fa:	80 93 08 01 	sts	0x0108, r24
 2fe:	9f bf       	out	0x3f, r25	; 63
 300:	80 e0       	ldi	r24, 0x00	; 0
 302:	05 c0       	rjmp	.+10     	; 0x30e <m_usb_tx_char+0xb2>
 304:	8f ef       	ldi	r24, 0xFF	; 255
 306:	03 c0       	rjmp	.+6      	; 0x30e <m_usb_tx_char+0xb2>
 308:	8f ef       	ldi	r24, 0xFF	; 255
 30a:	01 c0       	rjmp	.+2      	; 0x30e <m_usb_tx_char+0xb2>
 30c:	8f ef       	ldi	r24, 0xFF	; 255
 30e:	df 91       	pop	r29
 310:	cf 91       	pop	r28
 312:	08 95       	ret

00000314 <__vector_10>:
 314:	1f 92       	push	r1
 316:	0f 92       	push	r0
 318:	0f b6       	in	r0, 0x3f	; 63
 31a:	0f 92       	push	r0
 31c:	11 24       	eor	r1, r1
 31e:	8f 93       	push	r24
 320:	9f 93       	push	r25
 322:	ef 93       	push	r30
 324:	ff 93       	push	r31
 326:	e1 ee       	ldi	r30, 0xE1	; 225
 328:	f0 e0       	ldi	r31, 0x00	; 0
 32a:	80 81       	ld	r24, Z
 32c:	10 82       	st	Z, r1
 32e:	83 ff       	sbrs	r24, 3
 330:	11 c0       	rjmp	.+34     	; 0x354 <__vector_10+0x40>
 332:	10 92 e9 00 	sts	0x00E9, r1
 336:	91 e0       	ldi	r25, 0x01	; 1
 338:	90 93 eb 00 	sts	0x00EB, r25
 33c:	10 92 ec 00 	sts	0x00EC, r1
 340:	92 e1       	ldi	r25, 0x12	; 18
 342:	90 93 ed 00 	sts	0x00ED, r25
 346:	98 e0       	ldi	r25, 0x08	; 8
 348:	90 93 f0 00 	sts	0x00F0, r25
 34c:	10 92 09 01 	sts	0x0109, r1
 350:	10 92 0a 01 	sts	0x010A, r1
 354:	82 ff       	sbrs	r24, 2
 356:	13 c0       	rjmp	.+38     	; 0x37e <__vector_10+0x6a>
 358:	80 91 09 01 	lds	r24, 0x0109
 35c:	88 23       	and	r24, r24
 35e:	79 f0       	breq	.+30     	; 0x37e <__vector_10+0x6a>
 360:	80 91 08 01 	lds	r24, 0x0108
 364:	88 23       	and	r24, r24
 366:	59 f0       	breq	.+22     	; 0x37e <__vector_10+0x6a>
 368:	81 50       	subi	r24, 0x01	; 1
 36a:	80 93 08 01 	sts	0x0108, r24
 36e:	81 11       	cpse	r24, r1
 370:	06 c0       	rjmp	.+12     	; 0x37e <__vector_10+0x6a>
 372:	84 e0       	ldi	r24, 0x04	; 4
 374:	80 93 e9 00 	sts	0x00E9, r24
 378:	8a e3       	ldi	r24, 0x3A	; 58
 37a:	80 93 e8 00 	sts	0x00E8, r24
 37e:	ff 91       	pop	r31
 380:	ef 91       	pop	r30
 382:	9f 91       	pop	r25
 384:	8f 91       	pop	r24
 386:	0f 90       	pop	r0
 388:	0f be       	out	0x3f, r0	; 63
 38a:	0f 90       	pop	r0
 38c:	1f 90       	pop	r1
 38e:	18 95       	reti

00000390 <__vector_11>:
 390:	1f 92       	push	r1
 392:	0f 92       	push	r0
 394:	0f b6       	in	r0, 0x3f	; 63
 396:	0f 92       	push	r0
 398:	11 24       	eor	r1, r1
 39a:	0f 93       	push	r16
 39c:	1f 93       	push	r17
 39e:	2f 93       	push	r18
 3a0:	3f 93       	push	r19
 3a2:	4f 93       	push	r20
 3a4:	5f 93       	push	r21
 3a6:	6f 93       	push	r22
 3a8:	7f 93       	push	r23
 3aa:	8f 93       	push	r24
 3ac:	9f 93       	push	r25
 3ae:	af 93       	push	r26
 3b0:	bf 93       	push	r27
 3b2:	cf 93       	push	r28
 3b4:	df 93       	push	r29
 3b6:	ef 93       	push	r30
 3b8:	ff 93       	push	r31
 3ba:	10 92 e9 00 	sts	0x00E9, r1
 3be:	80 91 e8 00 	lds	r24, 0x00E8
 3c2:	83 ff       	sbrs	r24, 3
 3c4:	51 c1       	rjmp	.+674    	; 0x668 <__vector_11+0x2d8>
 3c6:	e1 ef       	ldi	r30, 0xF1	; 241
 3c8:	f0 e0       	ldi	r31, 0x00	; 0
 3ca:	70 81       	ld	r23, Z
 3cc:	40 81       	ld	r20, Z
 3ce:	20 81       	ld	r18, Z
 3d0:	30 81       	ld	r19, Z
 3d2:	93 2f       	mov	r25, r19
 3d4:	80 e0       	ldi	r24, 0x00	; 0
 3d6:	dc 01       	movw	r26, r24
 3d8:	a2 2b       	or	r26, r18
 3da:	9d 01       	movw	r18, r26
 3dc:	50 81       	ld	r21, Z
 3de:	60 81       	ld	r22, Z
 3e0:	96 2f       	mov	r25, r22
 3e2:	80 e0       	ldi	r24, 0x00	; 0
 3e4:	85 2b       	or	r24, r21
 3e6:	a0 81       	ld	r26, Z
 3e8:	b0 81       	ld	r27, Z
 3ea:	52 ef       	ldi	r21, 0xF2	; 242
 3ec:	50 93 e8 00 	sts	0x00E8, r21
 3f0:	46 30       	cpi	r20, 0x06	; 6
 3f2:	09 f0       	breq	.+2      	; 0x3f6 <__vector_11+0x66>
 3f4:	5c c0       	rjmp	.+184    	; 0x4ae <__vector_11+0x11e>
 3f6:	04 c0       	rjmp	.+8      	; 0x400 <__vector_11+0x70>
 3f8:	81 e2       	ldi	r24, 0x21	; 33
 3fa:	80 93 eb 00 	sts	0x00EB, r24
 3fe:	3b c1       	rjmp	.+630    	; 0x676 <__vector_11+0x2e6>
 400:	c6 e0       	ldi	r28, 0x06	; 6
 402:	4c ea       	ldi	r20, 0xAC	; 172
 404:	50 e0       	ldi	r21, 0x00	; 0
 406:	fa 01       	movw	r30, r20
 408:	65 91       	lpm	r22, Z+
 40a:	74 91       	lpm	r23, Z
 40c:	26 17       	cp	r18, r22
 40e:	37 07       	cpc	r19, r23
 410:	19 f0       	breq	.+6      	; 0x418 <__vector_11+0x88>
 412:	49 5f       	subi	r20, 0xF9	; 249
 414:	5f 4f       	sbci	r21, 0xFF	; 255
 416:	20 c0       	rjmp	.+64     	; 0x458 <__vector_11+0xc8>
 418:	fa 01       	movw	r30, r20
 41a:	32 96       	adiw	r30, 0x02	; 2
 41c:	65 91       	lpm	r22, Z+
 41e:	74 91       	lpm	r23, Z
 420:	86 17       	cp	r24, r22
 422:	97 07       	cpc	r25, r23
 424:	19 f0       	breq	.+6      	; 0x42c <__vector_11+0x9c>
 426:	49 5f       	subi	r20, 0xF9	; 249
 428:	5f 4f       	sbci	r21, 0xFF	; 255
 42a:	16 c0       	rjmp	.+44     	; 0x458 <__vector_11+0xc8>
 42c:	fa 01       	movw	r30, r20
 42e:	34 96       	adiw	r30, 0x04	; 4
 430:	85 91       	lpm	r24, Z+
 432:	94 91       	lpm	r25, Z
 434:	28 2f       	mov	r18, r24
 436:	39 2f       	mov	r19, r25
 438:	fa 01       	movw	r30, r20
 43a:	36 96       	adiw	r30, 0x06	; 6
 43c:	44 91       	lpm	r20, Z
 43e:	9b 2f       	mov	r25, r27
 440:	80 e0       	ldi	r24, 0x00	; 0
 442:	8a 2b       	or	r24, r26
 444:	8f 3f       	cpi	r24, 0xFF	; 255
 446:	91 05       	cpc	r25, r1
 448:	19 f0       	breq	.+6      	; 0x450 <__vector_11+0xc0>
 44a:	10 f0       	brcs	.+4      	; 0x450 <__vector_11+0xc0>
 44c:	8f ef       	ldi	r24, 0xFF	; 255
 44e:	90 e0       	ldi	r25, 0x00	; 0
 450:	84 17       	cp	r24, r20
 452:	28 f4       	brcc	.+10     	; 0x45e <__vector_11+0xce>
 454:	48 2f       	mov	r20, r24
 456:	03 c0       	rjmp	.+6      	; 0x45e <__vector_11+0xce>
 458:	c1 50       	subi	r28, 0x01	; 1
 45a:	a9 f6       	brne	.-86     	; 0x406 <__vector_11+0x76>
 45c:	cd cf       	rjmp	.-102    	; 0x3f8 <__vector_11+0x68>
 45e:	c8 ee       	ldi	r28, 0xE8	; 232
 460:	d0 e0       	ldi	r29, 0x00	; 0
 462:	7e ef       	ldi	r23, 0xFE	; 254
 464:	a1 ef       	ldi	r26, 0xF1	; 241
 466:	b0 e0       	ldi	r27, 0x00	; 0
 468:	10 e1       	ldi	r17, 0x10	; 16
 46a:	88 81       	ld	r24, Y
 46c:	98 2f       	mov	r25, r24
 46e:	95 70       	andi	r25, 0x05	; 5
 470:	e1 f3       	breq	.-8      	; 0x46a <__vector_11+0xda>
 472:	82 fd       	sbrc	r24, 2
 474:	00 c1       	rjmp	.+512    	; 0x676 <__vector_11+0x2e6>
 476:	64 2f       	mov	r22, r20
 478:	41 31       	cpi	r20, 0x11	; 17
 47a:	08 f0       	brcs	.+2      	; 0x47e <__vector_11+0xee>
 47c:	61 2f       	mov	r22, r17
 47e:	66 23       	and	r22, r22
 480:	09 f4       	brne	.+2      	; 0x484 <__vector_11+0xf4>
 482:	f6 c0       	rjmp	.+492    	; 0x670 <__vector_11+0x2e0>
 484:	c9 01       	movw	r24, r18
 486:	56 2f       	mov	r21, r22
 488:	fc 01       	movw	r30, r24
 48a:	01 96       	adiw	r24, 0x01	; 1
 48c:	e4 91       	lpm	r30, Z
 48e:	ec 93       	st	X, r30
 490:	51 50       	subi	r21, 0x01	; 1
 492:	d1 f7       	brne	.-12     	; 0x488 <__vector_11+0xf8>
 494:	86 2f       	mov	r24, r22
 496:	81 50       	subi	r24, 0x01	; 1
 498:	90 e0       	ldi	r25, 0x00	; 0
 49a:	01 96       	adiw	r24, 0x01	; 1
 49c:	28 0f       	add	r18, r24
 49e:	39 1f       	adc	r19, r25
 4a0:	46 1b       	sub	r20, r22
 4a2:	78 83       	st	Y, r23
 4a4:	41 11       	cpse	r20, r1
 4a6:	e1 cf       	rjmp	.-62     	; 0x46a <__vector_11+0xda>
 4a8:	60 31       	cpi	r22, 0x10	; 16
 4aa:	f9 f2       	breq	.-66     	; 0x46a <__vector_11+0xda>
 4ac:	e4 c0       	rjmp	.+456    	; 0x676 <__vector_11+0x2e6>
 4ae:	45 30       	cpi	r20, 0x05	; 5
 4b0:	61 f4       	brne	.+24     	; 0x4ca <__vector_11+0x13a>
 4b2:	8e ef       	ldi	r24, 0xFE	; 254
 4b4:	80 93 e8 00 	sts	0x00E8, r24
 4b8:	e8 ee       	ldi	r30, 0xE8	; 232
 4ba:	f0 e0       	ldi	r31, 0x00	; 0
 4bc:	80 81       	ld	r24, Z
 4be:	80 ff       	sbrs	r24, 0
 4c0:	fd cf       	rjmp	.-6      	; 0x4bc <__vector_11+0x12c>
 4c2:	20 68       	ori	r18, 0x80	; 128
 4c4:	20 93 e3 00 	sts	0x00E3, r18
 4c8:	d6 c0       	rjmp	.+428    	; 0x676 <__vector_11+0x2e6>
 4ca:	49 30       	cpi	r20, 0x09	; 9
 4cc:	a1 f5       	brne	.+104    	; 0x536 <__vector_11+0x1a6>
 4ce:	71 11       	cpse	r23, r1
 4d0:	5b c0       	rjmp	.+182    	; 0x588 <__vector_11+0x1f8>
 4d2:	20 93 09 01 	sts	0x0109, r18
 4d6:	10 92 0a 01 	sts	0x010A, r1
 4da:	10 92 08 01 	sts	0x0108, r1
 4de:	8e ef       	ldi	r24, 0xFE	; 254
 4e0:	80 93 e8 00 	sts	0x00E8, r24
 4e4:	11 e0       	ldi	r17, 0x01	; 1
 4e6:	86 ed       	ldi	r24, 0xD6	; 214
 4e8:	90 e0       	ldi	r25, 0x00	; 0
 4ea:	c9 ee       	ldi	r28, 0xE9	; 233
 4ec:	d0 e0       	ldi	r29, 0x00	; 0
 4ee:	ab ee       	ldi	r26, 0xEB	; 235
 4f0:	b0 e0       	ldi	r27, 0x00	; 0
 4f2:	6c ee       	ldi	r22, 0xEC	; 236
 4f4:	70 e0       	ldi	r23, 0x00	; 0
 4f6:	4d ee       	ldi	r20, 0xED	; 237
 4f8:	50 e0       	ldi	r21, 0x00	; 0
 4fa:	18 83       	st	Y, r17
 4fc:	9c 01       	movw	r18, r24
 4fe:	2f 5f       	subi	r18, 0xFF	; 255
 500:	3f 4f       	sbci	r19, 0xFF	; 255
 502:	fc 01       	movw	r30, r24
 504:	04 91       	lpm	r16, Z
 506:	0c 93       	st	X, r16
 508:	00 23       	and	r16, r16
 50a:	59 f0       	breq	.+22     	; 0x522 <__vector_11+0x192>
 50c:	f9 01       	movw	r30, r18
 50e:	24 91       	lpm	r18, Z
 510:	fb 01       	movw	r30, r22
 512:	20 83       	st	Z, r18
 514:	fc 01       	movw	r30, r24
 516:	32 96       	adiw	r30, 0x02	; 2
 518:	03 96       	adiw	r24, 0x03	; 3
 51a:	24 91       	lpm	r18, Z
 51c:	fa 01       	movw	r30, r20
 51e:	20 83       	st	Z, r18
 520:	01 c0       	rjmp	.+2      	; 0x524 <__vector_11+0x194>
 522:	c9 01       	movw	r24, r18
 524:	1f 5f       	subi	r17, 0xFF	; 255
 526:	15 30       	cpi	r17, 0x05	; 5
 528:	41 f7       	brne	.-48     	; 0x4fa <__vector_11+0x16a>
 52a:	ea ee       	ldi	r30, 0xEA	; 234
 52c:	f0 e0       	ldi	r31, 0x00	; 0
 52e:	8e e1       	ldi	r24, 0x1E	; 30
 530:	80 83       	st	Z, r24
 532:	10 82       	st	Z, r1
 534:	a0 c0       	rjmp	.+320    	; 0x676 <__vector_11+0x2e6>
 536:	48 30       	cpi	r20, 0x08	; 8
 538:	81 f4       	brne	.+32     	; 0x55a <__vector_11+0x1ca>
 53a:	70 38       	cpi	r23, 0x80	; 128
 53c:	09 f0       	breq	.+2      	; 0x540 <__vector_11+0x1b0>
 53e:	3f c0       	rjmp	.+126    	; 0x5be <__vector_11+0x22e>
 540:	e8 ee       	ldi	r30, 0xE8	; 232
 542:	f0 e0       	ldi	r31, 0x00	; 0
 544:	80 81       	ld	r24, Z
 546:	80 ff       	sbrs	r24, 0
 548:	fd cf       	rjmp	.-6      	; 0x544 <__vector_11+0x1b4>
 54a:	80 91 09 01 	lds	r24, 0x0109
 54e:	80 93 f1 00 	sts	0x00F1, r24
 552:	8e ef       	ldi	r24, 0xFE	; 254
 554:	80 93 e8 00 	sts	0x00E8, r24
 558:	8e c0       	rjmp	.+284    	; 0x676 <__vector_11+0x2e6>
 55a:	41 32       	cpi	r20, 0x21	; 33
 55c:	a9 f4       	brne	.+42     	; 0x588 <__vector_11+0x1f8>
 55e:	71 3a       	cpi	r23, 0xA1	; 161
 560:	f1 f5       	brne	.+124    	; 0x5de <__vector_11+0x24e>
 562:	e8 ee       	ldi	r30, 0xE8	; 232
 564:	f0 e0       	ldi	r31, 0x00	; 0
 566:	80 81       	ld	r24, Z
 568:	80 ff       	sbrs	r24, 0
 56a:	fd cf       	rjmp	.-6      	; 0x566 <__vector_11+0x1d6>
 56c:	e0 e0       	ldi	r30, 0x00	; 0
 56e:	f1 e0       	ldi	r31, 0x01	; 1
 570:	a1 ef       	ldi	r26, 0xF1	; 241
 572:	b0 e0       	ldi	r27, 0x00	; 0
 574:	81 91       	ld	r24, Z+
 576:	8c 93       	st	X, r24
 578:	41 e0       	ldi	r20, 0x01	; 1
 57a:	e7 30       	cpi	r30, 0x07	; 7
 57c:	f4 07       	cpc	r31, r20
 57e:	d1 f7       	brne	.-12     	; 0x574 <__vector_11+0x1e4>
 580:	8e ef       	ldi	r24, 0xFE	; 254
 582:	80 93 e8 00 	sts	0x00E8, r24
 586:	77 c0       	rjmp	.+238    	; 0x676 <__vector_11+0x2e6>
 588:	40 32       	cpi	r20, 0x20	; 32
 58a:	c9 f4       	brne	.+50     	; 0x5be <__vector_11+0x22e>
 58c:	71 32       	cpi	r23, 0x21	; 33
 58e:	09 f0       	breq	.+2      	; 0x592 <__vector_11+0x202>
 590:	6b c0       	rjmp	.+214    	; 0x668 <__vector_11+0x2d8>
 592:	e8 ee       	ldi	r30, 0xE8	; 232
 594:	f0 e0       	ldi	r31, 0x00	; 0
 596:	80 81       	ld	r24, Z
 598:	82 ff       	sbrs	r24, 2
 59a:	fd cf       	rjmp	.-6      	; 0x596 <__vector_11+0x206>
 59c:	e0 e0       	ldi	r30, 0x00	; 0
 59e:	f1 e0       	ldi	r31, 0x01	; 1
 5a0:	a1 ef       	ldi	r26, 0xF1	; 241
 5a2:	b0 e0       	ldi	r27, 0x00	; 0
 5a4:	8c 91       	ld	r24, X
 5a6:	81 93       	st	Z+, r24
 5a8:	51 e0       	ldi	r21, 0x01	; 1
 5aa:	e7 30       	cpi	r30, 0x07	; 7
 5ac:	f5 07       	cpc	r31, r21
 5ae:	d1 f7       	brne	.-12     	; 0x5a4 <__vector_11+0x214>
 5b0:	e8 ee       	ldi	r30, 0xE8	; 232
 5b2:	f0 e0       	ldi	r31, 0x00	; 0
 5b4:	8b ef       	ldi	r24, 0xFB	; 251
 5b6:	80 83       	st	Z, r24
 5b8:	8e ef       	ldi	r24, 0xFE	; 254
 5ba:	80 83       	st	Z, r24
 5bc:	5c c0       	rjmp	.+184    	; 0x676 <__vector_11+0x2e6>
 5be:	42 32       	cpi	r20, 0x22	; 34
 5c0:	71 f4       	brne	.+28     	; 0x5de <__vector_11+0x24e>
 5c2:	71 32       	cpi	r23, 0x21	; 33
 5c4:	09 f0       	breq	.+2      	; 0x5c8 <__vector_11+0x238>
 5c6:	50 c0       	rjmp	.+160    	; 0x668 <__vector_11+0x2d8>
 5c8:	20 93 0a 01 	sts	0x010A, r18
 5cc:	e8 ee       	ldi	r30, 0xE8	; 232
 5ce:	f0 e0       	ldi	r31, 0x00	; 0
 5d0:	80 81       	ld	r24, Z
 5d2:	80 ff       	sbrs	r24, 0
 5d4:	fd cf       	rjmp	.-6      	; 0x5d0 <__vector_11+0x240>
 5d6:	8e ef       	ldi	r24, 0xFE	; 254
 5d8:	80 93 e8 00 	sts	0x00E8, r24
 5dc:	4c c0       	rjmp	.+152    	; 0x676 <__vector_11+0x2e6>
 5de:	41 11       	cpse	r20, r1
 5e0:	1a c0       	rjmp	.+52     	; 0x616 <__vector_11+0x286>
 5e2:	e8 ee       	ldi	r30, 0xE8	; 232
 5e4:	f0 e0       	ldi	r31, 0x00	; 0
 5e6:	20 81       	ld	r18, Z
 5e8:	20 ff       	sbrs	r18, 0
 5ea:	fd cf       	rjmp	.-6      	; 0x5e6 <__vector_11+0x256>
 5ec:	72 38       	cpi	r23, 0x82	; 130
 5ee:	51 f4       	brne	.+20     	; 0x604 <__vector_11+0x274>
 5f0:	e9 ee       	ldi	r30, 0xE9	; 233
 5f2:	f0 e0       	ldi	r31, 0x00	; 0
 5f4:	80 83       	st	Z, r24
 5f6:	80 91 eb 00 	lds	r24, 0x00EB
 5fa:	85 fb       	bst	r24, 5
 5fc:	88 27       	eor	r24, r24
 5fe:	80 f9       	bld	r24, 0
 600:	10 82       	st	Z, r1
 602:	01 c0       	rjmp	.+2      	; 0x606 <__vector_11+0x276>
 604:	80 e0       	ldi	r24, 0x00	; 0
 606:	e1 ef       	ldi	r30, 0xF1	; 241
 608:	f0 e0       	ldi	r31, 0x00	; 0
 60a:	80 83       	st	Z, r24
 60c:	10 82       	st	Z, r1
 60e:	8e ef       	ldi	r24, 0xFE	; 254
 610:	80 93 e8 00 	sts	0x00E8, r24
 614:	30 c0       	rjmp	.+96     	; 0x676 <__vector_11+0x2e6>
 616:	41 30       	cpi	r20, 0x01	; 1
 618:	11 f0       	breq	.+4      	; 0x61e <__vector_11+0x28e>
 61a:	43 30       	cpi	r20, 0x03	; 3
 61c:	29 f5       	brne	.+74     	; 0x668 <__vector_11+0x2d8>
 61e:	72 30       	cpi	r23, 0x02	; 2
 620:	19 f5       	brne	.+70     	; 0x668 <__vector_11+0x2d8>
 622:	23 2b       	or	r18, r19
 624:	09 f5       	brne	.+66     	; 0x668 <__vector_11+0x2d8>
 626:	8f 77       	andi	r24, 0x7F	; 127
 628:	99 27       	eor	r25, r25
 62a:	38 2f       	mov	r19, r24
 62c:	31 50       	subi	r19, 0x01	; 1
 62e:	34 30       	cpi	r19, 0x04	; 4
 630:	d8 f4       	brcc	.+54     	; 0x668 <__vector_11+0x2d8>
 632:	3e ef       	ldi	r19, 0xFE	; 254
 634:	30 93 e8 00 	sts	0x00E8, r19
 638:	80 93 e9 00 	sts	0x00E9, r24
 63c:	43 30       	cpi	r20, 0x03	; 3
 63e:	21 f4       	brne	.+8      	; 0x648 <__vector_11+0x2b8>
 640:	81 e2       	ldi	r24, 0x21	; 33
 642:	80 93 eb 00 	sts	0x00EB, r24
 646:	17 c0       	rjmp	.+46     	; 0x676 <__vector_11+0x2e6>
 648:	99 e1       	ldi	r25, 0x19	; 25
 64a:	90 93 eb 00 	sts	0x00EB, r25
 64e:	21 e0       	ldi	r18, 0x01	; 1
 650:	30 e0       	ldi	r19, 0x00	; 0
 652:	d9 01       	movw	r26, r18
 654:	02 c0       	rjmp	.+4      	; 0x65a <__vector_11+0x2ca>
 656:	aa 0f       	add	r26, r26
 658:	bb 1f       	adc	r27, r27
 65a:	8a 95       	dec	r24
 65c:	e2 f7       	brpl	.-8      	; 0x656 <__vector_11+0x2c6>
 65e:	ea ee       	ldi	r30, 0xEA	; 234
 660:	f0 e0       	ldi	r31, 0x00	; 0
 662:	a0 83       	st	Z, r26
 664:	10 82       	st	Z, r1
 666:	07 c0       	rjmp	.+14     	; 0x676 <__vector_11+0x2e6>
 668:	81 e2       	ldi	r24, 0x21	; 33
 66a:	80 93 eb 00 	sts	0x00EB, r24
 66e:	03 c0       	rjmp	.+6      	; 0x676 <__vector_11+0x2e6>
 670:	78 83       	st	Y, r23
 672:	41 11       	cpse	r20, r1
 674:	fa ce       	rjmp	.-524    	; 0x46a <__vector_11+0xda>
 676:	ff 91       	pop	r31
 678:	ef 91       	pop	r30
 67a:	df 91       	pop	r29
 67c:	cf 91       	pop	r28
 67e:	bf 91       	pop	r27
 680:	af 91       	pop	r26
 682:	9f 91       	pop	r25
 684:	8f 91       	pop	r24
 686:	7f 91       	pop	r23
 688:	6f 91       	pop	r22
 68a:	5f 91       	pop	r21
 68c:	4f 91       	pop	r20
 68e:	3f 91       	pop	r19
 690:	2f 91       	pop	r18
 692:	1f 91       	pop	r17
 694:	0f 91       	pop	r16
 696:	0f 90       	pop	r0
 698:	0f be       	out	0x3f, r0	; 63
 69a:	0f 90       	pop	r0
 69c:	1f 90       	pop	r1
 69e:	18 95       	reti

000006a0 <m_usb_tx_int>:
 6a0:	ef 92       	push	r14
 6a2:	ff 92       	push	r15
 6a4:	0f 93       	push	r16
 6a6:	1f 93       	push	r17
 6a8:	cf 93       	push	r28
 6aa:	df 93       	push	r29
 6ac:	cd b7       	in	r28, 0x3d	; 61
 6ae:	de b7       	in	r29, 0x3e	; 62
 6b0:	27 97       	sbiw	r28, 0x07	; 7
 6b2:	0f b6       	in	r0, 0x3f	; 63
 6b4:	f8 94       	cli
 6b6:	de bf       	out	0x3e, r29	; 62
 6b8:	0f be       	out	0x3f, r0	; 63
 6ba:	cd bf       	out	0x3d, r28	; 61
 6bc:	8e 01       	movw	r16, r28
 6be:	0f 5f       	subi	r16, 0xFF	; 255
 6c0:	1f 4f       	sbci	r17, 0xFF	; 255
 6c2:	27 e0       	ldi	r18, 0x07	; 7
 6c4:	f8 01       	movw	r30, r16
 6c6:	11 92       	st	Z+, r1
 6c8:	2a 95       	dec	r18
 6ca:	e9 f7       	brne	.-6      	; 0x6c6 <m_usb_tx_int+0x26>
 6cc:	4a e0       	ldi	r20, 0x0A	; 10
 6ce:	50 e0       	ldi	r21, 0x00	; 0
 6d0:	b8 01       	movw	r22, r16
 6d2:	0e 94 83 05 	call	0xb06	; 0xb06 <itoa>
 6d6:	7e 01       	movw	r14, r28
 6d8:	f8 e0       	ldi	r31, 0x08	; 8
 6da:	ef 0e       	add	r14, r31
 6dc:	f1 1c       	adc	r15, r1
 6de:	f8 01       	movw	r30, r16
 6e0:	81 91       	ld	r24, Z+
 6e2:	8f 01       	movw	r16, r30
 6e4:	81 11       	cpse	r24, r1
 6e6:	0e 94 2e 01 	call	0x25c	; 0x25c <m_usb_tx_char>
 6ea:	0e 15       	cp	r16, r14
 6ec:	1f 05       	cpc	r17, r15
 6ee:	b9 f7       	brne	.-18     	; 0x6de <m_usb_tx_int+0x3e>
 6f0:	27 96       	adiw	r28, 0x07	; 7
 6f2:	0f b6       	in	r0, 0x3f	; 63
 6f4:	f8 94       	cli
 6f6:	de bf       	out	0x3e, r29	; 62
 6f8:	0f be       	out	0x3f, r0	; 63
 6fa:	cd bf       	out	0x3d, r28	; 61
 6fc:	df 91       	pop	r29
 6fe:	cf 91       	pop	r28
 700:	1f 91       	pop	r17
 702:	0f 91       	pop	r16
 704:	ff 90       	pop	r15
 706:	ef 90       	pop	r14
 708:	08 95       	ret

0000070a <chooseInput>:

int i = 0;
int ADCarr[7] = {0, 0, 0, 0, 0, 0, 0};

void chooseInput(int i) {
	switch (i) {
 70a:	83 30       	cpi	r24, 0x03	; 3
 70c:	91 05       	cpc	r25, r1
 70e:	09 f4       	brne	.+2      	; 0x712 <chooseInput+0x8>
 710:	45 c0       	rjmp	.+138    	; 0x79c <chooseInput+0x92>
 712:	3c f4       	brge	.+14     	; 0x722 <chooseInput+0x18>
 714:	81 30       	cpi	r24, 0x01	; 1
 716:	91 05       	cpc	r25, r1
 718:	f9 f0       	breq	.+62     	; 0x758 <chooseInput+0x4e>
 71a:	7c f5       	brge	.+94     	; 0x77a <chooseInput+0x70>
 71c:	89 2b       	or	r24, r25
 71e:	59 f0       	breq	.+22     	; 0x736 <chooseInput+0x2c>
 720:	08 95       	ret
 722:	85 30       	cpi	r24, 0x05	; 5
 724:	91 05       	cpc	r25, r1
 726:	09 f4       	brne	.+2      	; 0x72a <chooseInput+0x20>
 728:	5b c0       	rjmp	.+182    	; 0x7e0 <chooseInput+0xd6>
 72a:	0c f4       	brge	.+2      	; 0x72e <chooseInput+0x24>
 72c:	48 c0       	rjmp	.+144    	; 0x7be <chooseInput+0xb4>
 72e:	06 97       	sbiw	r24, 0x06	; 6
 730:	09 f0       	breq	.+2      	; 0x734 <chooseInput+0x2a>
 732:	77 c0       	rjmp	.+238    	; 0x822 <chooseInput+0x118>
 734:	66 c0       	rjmp	.+204    	; 0x802 <chooseInput+0xf8>
		case 0:
		clear(ADCSRB, MUX5);//Set analog input (F6) PHOTOTRANSISTOR 1
 736:	eb e7       	ldi	r30, 0x7B	; 123
 738:	f0 e0       	ldi	r31, 0x00	; 0
 73a:	80 81       	ld	r24, Z
 73c:	8f 7d       	andi	r24, 0xDF	; 223
 73e:	80 83       	st	Z, r24
		set(ADMUX, MUX2);	//^
 740:	ec e7       	ldi	r30, 0x7C	; 124
 742:	f0 e0       	ldi	r31, 0x00	; 0
 744:	80 81       	ld	r24, Z
 746:	84 60       	ori	r24, 0x04	; 4
 748:	80 83       	st	Z, r24
		set(ADMUX, MUX1);	//^
 74a:	80 81       	ld	r24, Z
 74c:	82 60       	ori	r24, 0x02	; 2
 74e:	80 83       	st	Z, r24
		clear(ADMUX, MUX0);	//^
 750:	80 81       	ld	r24, Z
 752:	8e 7f       	andi	r24, 0xFE	; 254
 754:	80 83       	st	Z, r24
		break;
 756:	08 95       	ret
		case 1:
		clear(ADCSRB, MUX5);//Set analog input (F5)
 758:	eb e7       	ldi	r30, 0x7B	; 123
 75a:	f0 e0       	ldi	r31, 0x00	; 0
 75c:	80 81       	ld	r24, Z
 75e:	8f 7d       	andi	r24, 0xDF	; 223
 760:	80 83       	st	Z, r24
		set(ADMUX, MUX2);	//^
 762:	ec e7       	ldi	r30, 0x7C	; 124
 764:	f0 e0       	ldi	r31, 0x00	; 0
 766:	80 81       	ld	r24, Z
 768:	84 60       	ori	r24, 0x04	; 4
 76a:	80 83       	st	Z, r24
		clear(ADMUX, MUX1);	//^
 76c:	80 81       	ld	r24, Z
 76e:	8d 7f       	andi	r24, 0xFD	; 253
 770:	80 83       	st	Z, r24
		set(ADMUX, MUX0);	//^
 772:	80 81       	ld	r24, Z
 774:	81 60       	ori	r24, 0x01	; 1
 776:	80 83       	st	Z, r24
		break;
 778:	08 95       	ret
		case 2:
		clear(ADCSRB, MUX5);//Set analog input (F4)
 77a:	eb e7       	ldi	r30, 0x7B	; 123
 77c:	f0 e0       	ldi	r31, 0x00	; 0
 77e:	80 81       	ld	r24, Z
 780:	8f 7d       	andi	r24, 0xDF	; 223
 782:	80 83       	st	Z, r24
		set(ADMUX, MUX2);	//^
 784:	ec e7       	ldi	r30, 0x7C	; 124
 786:	f0 e0       	ldi	r31, 0x00	; 0
 788:	80 81       	ld	r24, Z
 78a:	84 60       	ori	r24, 0x04	; 4
 78c:	80 83       	st	Z, r24
		clear(ADMUX, MUX1);	//^
 78e:	80 81       	ld	r24, Z
 790:	8d 7f       	andi	r24, 0xFD	; 253
 792:	80 83       	st	Z, r24
		clear(ADMUX, MUX0);	//^
 794:	80 81       	ld	r24, Z
 796:	8e 7f       	andi	r24, 0xFE	; 254
 798:	80 83       	st	Z, r24
		break;
 79a:	08 95       	ret
		case 3:
		clear(ADCSRB, MUX5);//Set analog input (F1)
 79c:	eb e7       	ldi	r30, 0x7B	; 123
 79e:	f0 e0       	ldi	r31, 0x00	; 0
 7a0:	80 81       	ld	r24, Z
 7a2:	8f 7d       	andi	r24, 0xDF	; 223
 7a4:	80 83       	st	Z, r24
		clear(ADMUX, MUX2);	//^
 7a6:	ec e7       	ldi	r30, 0x7C	; 124
 7a8:	f0 e0       	ldi	r31, 0x00	; 0
 7aa:	80 81       	ld	r24, Z
 7ac:	8b 7f       	andi	r24, 0xFB	; 251
 7ae:	80 83       	st	Z, r24
		clear(ADMUX, MUX1);	//^
 7b0:	80 81       	ld	r24, Z
 7b2:	8d 7f       	andi	r24, 0xFD	; 253
 7b4:	80 83       	st	Z, r24
		set(ADMUX, MUX0);	//^
 7b6:	80 81       	ld	r24, Z
 7b8:	81 60       	ori	r24, 0x01	; 1
 7ba:	80 83       	st	Z, r24
		break;
 7bc:	08 95       	ret
		case 4:
		clear(ADCSRB, MUX5);//Set analog input (F0)
 7be:	eb e7       	ldi	r30, 0x7B	; 123
 7c0:	f0 e0       	ldi	r31, 0x00	; 0
 7c2:	80 81       	ld	r24, Z
 7c4:	8f 7d       	andi	r24, 0xDF	; 223
 7c6:	80 83       	st	Z, r24
		clear(ADMUX, MUX2);	//^
 7c8:	ec e7       	ldi	r30, 0x7C	; 124
 7ca:	f0 e0       	ldi	r31, 0x00	; 0
 7cc:	80 81       	ld	r24, Z
 7ce:	8b 7f       	andi	r24, 0xFB	; 251
 7d0:	80 83       	st	Z, r24
		clear(ADMUX, MUX1);	//^
 7d2:	80 81       	ld	r24, Z
 7d4:	8d 7f       	andi	r24, 0xFD	; 253
 7d6:	80 83       	st	Z, r24
		clear(ADMUX, MUX0);	//^
 7d8:	80 81       	ld	r24, Z
 7da:	8e 7f       	andi	r24, 0xFE	; 254
 7dc:	80 83       	st	Z, r24
		break;
 7de:	08 95       	ret
		case 5:
		set(ADCSRB, MUX5);//Set analog input (D4)
 7e0:	eb e7       	ldi	r30, 0x7B	; 123
 7e2:	f0 e0       	ldi	r31, 0x00	; 0
 7e4:	80 81       	ld	r24, Z
 7e6:	80 62       	ori	r24, 0x20	; 32
 7e8:	80 83       	st	Z, r24
		clear(ADMUX, MUX2);	//^
 7ea:	ec e7       	ldi	r30, 0x7C	; 124
 7ec:	f0 e0       	ldi	r31, 0x00	; 0
 7ee:	80 81       	ld	r24, Z
 7f0:	8b 7f       	andi	r24, 0xFB	; 251
 7f2:	80 83       	st	Z, r24
		clear(ADMUX, MUX1);	//^
 7f4:	80 81       	ld	r24, Z
 7f6:	8d 7f       	andi	r24, 0xFD	; 253
 7f8:	80 83       	st	Z, r24
		clear(ADMUX, MUX0);	//^
 7fa:	80 81       	ld	r24, Z
 7fc:	8e 7f       	andi	r24, 0xFE	; 254
 7fe:	80 83       	st	Z, r24
		break;
 800:	08 95       	ret
		case 6:
		set(ADCSRB, MUX5);//Set analog input (D6)
 802:	eb e7       	ldi	r30, 0x7B	; 123
 804:	f0 e0       	ldi	r31, 0x00	; 0
 806:	80 81       	ld	r24, Z
 808:	80 62       	ori	r24, 0x20	; 32
 80a:	80 83       	st	Z, r24
		clear(ADMUX, MUX2);	//^
 80c:	ec e7       	ldi	r30, 0x7C	; 124
 80e:	f0 e0       	ldi	r31, 0x00	; 0
 810:	80 81       	ld	r24, Z
 812:	8b 7f       	andi	r24, 0xFB	; 251
 814:	80 83       	st	Z, r24
		clear(ADMUX, MUX1);	//^
 816:	80 81       	ld	r24, Z
 818:	8d 7f       	andi	r24, 0xFD	; 253
 81a:	80 83       	st	Z, r24
		set(ADMUX, MUX0);	//^
 81c:	80 81       	ld	r24, Z
 81e:	81 60       	ori	r24, 0x01	; 1
 820:	80 83       	st	Z, r24
 822:	08 95       	ret

00000824 <main>:
int conversion = 0;

int main(void)
{
	
	m_clockdivide(0);
 824:	01 e6       	ldi	r16, 0x61	; 97
 826:	10 e0       	ldi	r17, 0x00	; 0
 828:	68 94       	set
 82a:	ff 24       	eor	r15, r15
 82c:	f7 f8       	bld	r15, 7
 82e:	f8 01       	movw	r30, r16
 830:	f0 82       	st	Z, r15
 832:	10 82       	st	Z, r1
	
	
	sei();					//Set up interrupts
 834:	78 94       	sei
	set(ADCSRA, ADIE);
 836:	ca e7       	ldi	r28, 0x7A	; 122
 838:	d0 e0       	ldi	r29, 0x00	; 0
 83a:	88 81       	ld	r24, Y
 83c:	88 60       	ori	r24, 0x08	; 8
 83e:	88 83       	st	Y, r24
	
	clear(ADMUX, REFS1);	//Voltage reference is AR pin (5V)
 840:	ec e7       	ldi	r30, 0x7C	; 124
 842:	f0 e0       	ldi	r31, 0x00	; 0
 844:	80 81       	ld	r24, Z
 846:	8f 77       	andi	r24, 0x7F	; 127
 848:	80 83       	st	Z, r24
	clear(ADMUX, REFS0);	//^
 84a:	80 81       	ld	r24, Z
 84c:	8f 7b       	andi	r24, 0xBF	; 191
 84e:	80 83       	st	Z, r24
	
	set(ADCSRA, ADPS2);	//Set scale to /128
 850:	88 81       	ld	r24, Y
 852:	84 60       	ori	r24, 0x04	; 4
 854:	88 83       	st	Y, r24
	set(ADCSRA, ADPS1);	//^
 856:	88 81       	ld	r24, Y
 858:	82 60       	ori	r24, 0x02	; 2
 85a:	88 83       	st	Y, r24
	set(ADCSRA, ADPS0);	//^
 85c:	88 81       	ld	r24, Y
 85e:	81 60       	ori	r24, 0x01	; 1
 860:	88 83       	st	Y, r24
	
	set(DIDR0, ADC0D);	//Disable digital input for F0
 862:	ee e7       	ldi	r30, 0x7E	; 126
 864:	f0 e0       	ldi	r31, 0x00	; 0
 866:	80 81       	ld	r24, Z
 868:	81 60       	ori	r24, 0x01	; 1
 86a:	80 83       	st	Z, r24
	set(DIDR0, ADC1D),
 86c:	80 81       	ld	r24, Z
 86e:	82 60       	ori	r24, 0x02	; 2
 870:	80 83       	st	Z, r24
	set(DIDR0, ADC4D);
 872:	80 81       	ld	r24, Z
 874:	80 61       	ori	r24, 0x10	; 16
 876:	80 83       	st	Z, r24
	set(DIDR0, ADC5D);
 878:	80 81       	ld	r24, Z
 87a:	80 62       	ori	r24, 0x20	; 32
 87c:	80 83       	st	Z, r24
	set(DIDR0, ADC6D);
 87e:	80 81       	ld	r24, Z
 880:	80 64       	ori	r24, 0x40	; 64
 882:	80 83       	st	Z, r24
	set(DIDR2, ADC8D);
 884:	ed e7       	ldi	r30, 0x7D	; 125
 886:	f0 e0       	ldi	r31, 0x00	; 0
 888:	80 81       	ld	r24, Z
 88a:	81 60       	ori	r24, 0x01	; 1
 88c:	80 83       	st	Z, r24
	set(DIDR2, ADC9D);
 88e:	80 81       	ld	r24, Z
 890:	82 60       	ori	r24, 0x02	; 2
 892:	80 83       	st	Z, r24
	
	set(ADCSRA, ADATE);	//Set trigger to free-running mode
 894:	88 81       	ld	r24, Y
 896:	80 62       	ori	r24, 0x20	; 32
 898:	88 83       	st	Y, r24
	
	chooseInput(1);
 89a:	81 e0       	ldi	r24, 0x01	; 1
 89c:	90 e0       	ldi	r25, 0x00	; 0
 89e:	0e 94 85 03 	call	0x70a	; 0x70a <chooseInput>
	
	set(ADCSRA, ADEN);	//Enable/Start conversion
 8a2:	88 81       	ld	r24, Y
 8a4:	80 68       	ori	r24, 0x80	; 128
 8a6:	88 83       	st	Y, r24
	set(ADCSRA, ADSC);	//^
 8a8:	88 81       	ld	r24, Y
 8aa:	80 64       	ori	r24, 0x40	; 64
 8ac:	88 83       	st	Y, r24
	
	set(ADCSRA, ADIF);	//Enable reading results
 8ae:	88 81       	ld	r24, Y
 8b0:	80 61       	ori	r24, 0x10	; 16
 8b2:	88 83       	st	Y, r24
	
	//MATLAB PLOTTING STUFFS*****************************************************************
	m_clockdivide(0);
 8b4:	f8 01       	movw	r30, r16
 8b6:	f0 82       	st	Z, r15
 8b8:	10 82       	st	Z, r1
	
	
	m_red(ON);
 8ba:	6e 9a       	sbi	0x0d, 6	; 13
 8bc:	76 98       	cbi	0x0e, 6	; 14
	m_green(ON);
 8be:	6a 9a       	sbi	0x0d, 2	; 13
 8c0:	72 98       	cbi	0x0e, 2	; 14

	m_usb_init(); // connect usb
 8c2:	0e 94 cf 00 	call	0x19e	; 0x19e <m_usb_init>
	while(!m_usb_isconnected());  //wait for connection
 8c6:	0e 94 e8 00 	call	0x1d0	; 0x1d0 <m_usb_isconnected>
 8ca:	88 23       	and	r24, r24
 8cc:	e1 f3       	breq	.-8      	; 0x8c6 <main+0xa2>

	m_red(OFF);
 8ce:	6e 9a       	sbi	0x0d, 6	; 13
 8d0:	76 9a       	sbi	0x0e, 6	; 14
	m_green(OFF);
 8d2:	6a 9a       	sbi	0x0d, 2	; 13
 8d4:	72 9a       	sbi	0x0e, 2	; 14
				case 6:
					ADC6 = ADC;
					break;
			}
		}
		clear(ADCSRA, ADEN);	//Enable/Start conversion
 8d6:	ca e7       	ldi	r28, 0x7A	; 122
 8d8:	d0 e0       	ldi	r29, 0x00	; 0
		clear(ADCSRA, ADSC);	//^
		clear(ADCSRA, ADATE);
		clear(ADCSRA, ADIF);
		if (flag >= 0 && flag < 7) {
			chooseInput(flag);
			flag = (flag + 1) % 7;
 8da:	0f 2e       	mov	r0, r31
 8dc:	f7 e0       	ldi	r31, 0x07	; 7
 8de:	ef 2e       	mov	r14, r31
 8e0:	f1 2c       	mov	r15, r1
 8e2:	f0 2d       	mov	r31, r0
					break;
				case 2:
					ADC2 = ADC;
					break;
				case 3:
					ADC3 = ADC;
 8e4:	0f 2e       	mov	r0, r31
 8e6:	f8 e7       	ldi	r31, 0x78	; 120
 8e8:	cf 2e       	mov	r12, r31
 8ea:	d1 2c       	mov	r13, r1
 8ec:	f0 2d       	mov	r31, r0
		

		
		

		while(!m_usb_rx_available());  	//wait for an indication from the computer
 8ee:	0e 94 09 01 	call	0x212	; 0x212 <m_usb_rx_available>
 8f2:	88 23       	and	r24, r24
 8f4:	e1 f3       	breq	.-8      	; 0x8ee <main+0xca>
		rx_buffer = m_usb_rx_char();  	//grab the computer packet
 8f6:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <m_usb_rx_char>
 8fa:	18 2f       	mov	r17, r24

		m_usb_rx_flush();  				//clear buffer
 8fc:	0e 94 18 01 	call	0x230	; 0x230 <m_usb_rx_flush>
		counter = 0;
		
		}
		counter++;*/
		
		if(rx_buffer == 1) {  			//computer wants ir buffer
 900:	11 30       	cpi	r17, 0x01	; 1
 902:	e1 f5       	brne	.+120    	; 0x97c <main+0x158>
			//write ir buffer as concatenated hex:  i.e. f0f1f4f5
			m_usb_tx_int(ADC0);
 904:	80 91 1a 01 	lds	r24, 0x011A
 908:	90 91 1b 01 	lds	r25, 0x011B
 90c:	0e 94 50 03 	call	0x6a0	; 0x6a0 <m_usb_tx_int>
			m_usb_tx_char('\t');
 910:	89 e0       	ldi	r24, 0x09	; 9
 912:	0e 94 2e 01 	call	0x25c	; 0x25c <m_usb_tx_char>
			m_usb_tx_int(ADC1);
 916:	80 91 18 01 	lds	r24, 0x0118
 91a:	90 91 19 01 	lds	r25, 0x0119
 91e:	0e 94 50 03 	call	0x6a0	; 0x6a0 <m_usb_tx_int>
			m_usb_tx_char('\t');
 922:	89 e0       	ldi	r24, 0x09	; 9
 924:	0e 94 2e 01 	call	0x25c	; 0x25c <m_usb_tx_char>
			m_usb_tx_int(ADC2);
 928:	80 91 16 01 	lds	r24, 0x0116
 92c:	90 91 17 01 	lds	r25, 0x0117
 930:	0e 94 50 03 	call	0x6a0	; 0x6a0 <m_usb_tx_int>
			m_usb_tx_char('\t');
 934:	89 e0       	ldi	r24, 0x09	; 9
 936:	0e 94 2e 01 	call	0x25c	; 0x25c <m_usb_tx_char>
			m_usb_tx_int(ADC3);
 93a:	80 91 14 01 	lds	r24, 0x0114
 93e:	90 91 15 01 	lds	r25, 0x0115
 942:	0e 94 50 03 	call	0x6a0	; 0x6a0 <m_usb_tx_int>
			m_usb_tx_char('\t');
 946:	89 e0       	ldi	r24, 0x09	; 9
 948:	0e 94 2e 01 	call	0x25c	; 0x25c <m_usb_tx_char>
			m_usb_tx_int(ADC4);
 94c:	80 91 12 01 	lds	r24, 0x0112
 950:	90 91 13 01 	lds	r25, 0x0113
 954:	0e 94 50 03 	call	0x6a0	; 0x6a0 <m_usb_tx_int>
			m_usb_tx_char('\t');
 958:	89 e0       	ldi	r24, 0x09	; 9
 95a:	0e 94 2e 01 	call	0x25c	; 0x25c <m_usb_tx_char>
			m_usb_tx_int(ADC5);
 95e:	80 91 10 01 	lds	r24, 0x0110
 962:	90 91 11 01 	lds	r25, 0x0111
 966:	0e 94 50 03 	call	0x6a0	; 0x6a0 <m_usb_tx_int>
			m_usb_tx_char('\t');
 96a:	89 e0       	ldi	r24, 0x09	; 9
 96c:	0e 94 2e 01 	call	0x25c	; 0x25c <m_usb_tx_char>
			m_usb_tx_int(ADC6);
 970:	80 91 0e 01 	lds	r24, 0x010E
 974:	90 91 0f 01 	lds	r25, 0x010F
 978:	0e 94 50 03 	call	0x6a0	; 0x6a0 <m_usb_tx_int>
			/*for (int j = 0 ; j < 7 ; j++){
			m_usb_tx_int(ADCarr[j]);
			m_usb_tx_char('\t');
			}*/
		}
		m_usb_tx_char('\n');  //MATLAB serial command reads 1 line at a time
 97c:	8a e0       	ldi	r24, 0x0A	; 10
 97e:	0e 94 2e 01 	call	0x25c	; 0x25c <m_usb_tx_char>
		
		if (conversion) {
 982:	80 91 0c 01 	lds	r24, 0x010C
 986:	90 91 0d 01 	lds	r25, 0x010D
 98a:	89 2b       	or	r24, r25
 98c:	09 f4       	brne	.+2      	; 0x990 <main+0x16c>
 98e:	4d c0       	rjmp	.+154    	; 0xa2a <main+0x206>
			switch (flag) {
 990:	80 91 1c 01 	lds	r24, 0x011C
 994:	90 91 1d 01 	lds	r25, 0x011D
 998:	83 30       	cpi	r24, 0x03	; 3
 99a:	91 05       	cpc	r25, r1
 99c:	39 f1       	breq	.+78     	; 0x9ec <main+0x1c8>
 99e:	3c f4       	brge	.+14     	; 0x9ae <main+0x18a>
 9a0:	81 30       	cpi	r24, 0x01	; 1
 9a2:	91 05       	cpc	r25, r1
 9a4:	99 f0       	breq	.+38     	; 0x9cc <main+0x1a8>
 9a6:	d4 f4       	brge	.+52     	; 0x9dc <main+0x1b8>
 9a8:	89 2b       	or	r24, r25
 9aa:	41 f0       	breq	.+16     	; 0x9bc <main+0x198>
 9ac:	3e c0       	rjmp	.+124    	; 0xa2a <main+0x206>
 9ae:	85 30       	cpi	r24, 0x05	; 5
 9b0:	91 05       	cpc	r25, r1
 9b2:	61 f1       	breq	.+88     	; 0xa0c <main+0x1e8>
 9b4:	1c f1       	brlt	.+70     	; 0x9fc <main+0x1d8>
 9b6:	06 97       	sbiw	r24, 0x06	; 6
 9b8:	c1 f5       	brne	.+112    	; 0xa2a <main+0x206>
 9ba:	30 c0       	rjmp	.+96     	; 0xa1c <main+0x1f8>
				case 0:
					ADC0 = ADC;
 9bc:	f6 01       	movw	r30, r12
 9be:	80 81       	ld	r24, Z
 9c0:	91 81       	ldd	r25, Z+1	; 0x01
 9c2:	90 93 1b 01 	sts	0x011B, r25
 9c6:	80 93 1a 01 	sts	0x011A, r24
					break;
 9ca:	2f c0       	rjmp	.+94     	; 0xa2a <main+0x206>
				case 1:
					ADC1 = ADC;
 9cc:	f6 01       	movw	r30, r12
 9ce:	80 81       	ld	r24, Z
 9d0:	91 81       	ldd	r25, Z+1	; 0x01
 9d2:	90 93 19 01 	sts	0x0119, r25
 9d6:	80 93 18 01 	sts	0x0118, r24
					break;
 9da:	27 c0       	rjmp	.+78     	; 0xa2a <main+0x206>
				case 2:
					ADC2 = ADC;
 9dc:	f6 01       	movw	r30, r12
 9de:	80 81       	ld	r24, Z
 9e0:	91 81       	ldd	r25, Z+1	; 0x01
 9e2:	90 93 17 01 	sts	0x0117, r25
 9e6:	80 93 16 01 	sts	0x0116, r24
					break;
 9ea:	1f c0       	rjmp	.+62     	; 0xa2a <main+0x206>
				case 3:
					ADC3 = ADC;
 9ec:	f6 01       	movw	r30, r12
 9ee:	80 81       	ld	r24, Z
 9f0:	91 81       	ldd	r25, Z+1	; 0x01
 9f2:	90 93 15 01 	sts	0x0115, r25
 9f6:	80 93 14 01 	sts	0x0114, r24
					break;
 9fa:	17 c0       	rjmp	.+46     	; 0xa2a <main+0x206>
				case 4:
					ADC4 = ADC;
 9fc:	f6 01       	movw	r30, r12
 9fe:	80 81       	ld	r24, Z
 a00:	91 81       	ldd	r25, Z+1	; 0x01
 a02:	90 93 13 01 	sts	0x0113, r25
 a06:	80 93 12 01 	sts	0x0112, r24
					break;
 a0a:	0f c0       	rjmp	.+30     	; 0xa2a <main+0x206>
				case 5:
					ADC5 = ADC;
 a0c:	f6 01       	movw	r30, r12
 a0e:	80 81       	ld	r24, Z
 a10:	91 81       	ldd	r25, Z+1	; 0x01
 a12:	90 93 11 01 	sts	0x0111, r25
 a16:	80 93 10 01 	sts	0x0110, r24
					break;
 a1a:	07 c0       	rjmp	.+14     	; 0xa2a <main+0x206>
				case 6:
					ADC6 = ADC;
 a1c:	f6 01       	movw	r30, r12
 a1e:	80 81       	ld	r24, Z
 a20:	91 81       	ldd	r25, Z+1	; 0x01
 a22:	90 93 0f 01 	sts	0x010F, r25
 a26:	80 93 0e 01 	sts	0x010E, r24
					break;
			}
		}
		clear(ADCSRA, ADEN);	//Enable/Start conversion
 a2a:	88 81       	ld	r24, Y
 a2c:	8f 77       	andi	r24, 0x7F	; 127
 a2e:	88 83       	st	Y, r24
		clear(ADCSRA, ADSC);	//^
 a30:	88 81       	ld	r24, Y
 a32:	8f 7b       	andi	r24, 0xBF	; 191
 a34:	88 83       	st	Y, r24
		clear(ADCSRA, ADATE);
 a36:	88 81       	ld	r24, Y
 a38:	8f 7d       	andi	r24, 0xDF	; 223
 a3a:	88 83       	st	Y, r24
		clear(ADCSRA, ADIF);
 a3c:	88 81       	ld	r24, Y
 a3e:	8f 7e       	andi	r24, 0xEF	; 239
 a40:	88 83       	st	Y, r24
		if (flag >= 0 && flag < 7) {
 a42:	80 91 1c 01 	lds	r24, 0x011C
 a46:	90 91 1d 01 	lds	r25, 0x011D
 a4a:	87 30       	cpi	r24, 0x07	; 7
 a4c:	91 05       	cpc	r25, r1
 a4e:	70 f4       	brcc	.+28     	; 0xa6c <main+0x248>
			chooseInput(flag);
 a50:	0e 94 85 03 	call	0x70a	; 0x70a <chooseInput>
			flag = (flag + 1) % 7;
 a54:	80 91 1c 01 	lds	r24, 0x011C
 a58:	90 91 1d 01 	lds	r25, 0x011D
 a5c:	01 96       	adiw	r24, 0x01	; 1
 a5e:	b7 01       	movw	r22, r14
 a60:	0e 94 5b 05 	call	0xab6	; 0xab6 <__divmodhi4>
 a64:	90 93 1d 01 	sts	0x011D, r25
 a68:	80 93 1c 01 	sts	0x011C, r24
		}
		set(ADCSRA, ADATE);	//Set trigger to free-running mode
 a6c:	88 81       	ld	r24, Y
 a6e:	80 62       	ori	r24, 0x20	; 32
 a70:	88 83       	st	Y, r24
		set(ADCSRA, ADEN);	//Enable/Start conversion
 a72:	88 81       	ld	r24, Y
 a74:	80 68       	ori	r24, 0x80	; 128
 a76:	88 83       	st	Y, r24
		set(ADCSRA, ADSC);	//^
 a78:	88 81       	ld	r24, Y
 a7a:	80 64       	ori	r24, 0x40	; 64
 a7c:	88 83       	st	Y, r24
		
		set(ADCSRA, ADIF);	//Enable reading results
 a7e:	88 81       	ld	r24, Y
 a80:	80 61       	ori	r24, 0x10	; 16
 a82:	88 83       	st	Y, r24
		conversion = 0;
 a84:	10 92 0d 01 	sts	0x010D, r1
 a88:	10 92 0c 01 	sts	0x010C, r1
	}
 a8c:	30 cf       	rjmp	.-416    	; 0x8ee <main+0xca>

00000a8e <__vector_29>:
}




ISR(ADC_vect) {
 a8e:	1f 92       	push	r1
 a90:	0f 92       	push	r0
 a92:	0f b6       	in	r0, 0x3f	; 63
 a94:	0f 92       	push	r0
 a96:	11 24       	eor	r1, r1
 a98:	8f 93       	push	r24
 a9a:	9f 93       	push	r25
	conversion = 1;
 a9c:	81 e0       	ldi	r24, 0x01	; 1
 a9e:	90 e0       	ldi	r25, 0x00	; 0
 aa0:	90 93 0d 01 	sts	0x010D, r25
 aa4:	80 93 0c 01 	sts	0x010C, r24
	
	set(ADCSRA, ADIF);	//Enable reading results
	//m_wait(500);
	m_red(TOGGLE);
	flag = 1;*/
 aa8:	9f 91       	pop	r25
 aaa:	8f 91       	pop	r24
 aac:	0f 90       	pop	r0
 aae:	0f be       	out	0x3f, r0	; 63
 ab0:	0f 90       	pop	r0
 ab2:	1f 90       	pop	r1
 ab4:	18 95       	reti

00000ab6 <__divmodhi4>:
 ab6:	97 fb       	bst	r25, 7
 ab8:	07 2e       	mov	r0, r23
 aba:	16 f4       	brtc	.+4      	; 0xac0 <__divmodhi4+0xa>
 abc:	00 94       	com	r0
 abe:	07 d0       	rcall	.+14     	; 0xace <__divmodhi4_neg1>
 ac0:	77 fd       	sbrc	r23, 7
 ac2:	09 d0       	rcall	.+18     	; 0xad6 <__divmodhi4_neg2>
 ac4:	0e 94 6f 05 	call	0xade	; 0xade <__udivmodhi4>
 ac8:	07 fc       	sbrc	r0, 7
 aca:	05 d0       	rcall	.+10     	; 0xad6 <__divmodhi4_neg2>
 acc:	3e f4       	brtc	.+14     	; 0xadc <__divmodhi4_exit>

00000ace <__divmodhi4_neg1>:
 ace:	90 95       	com	r25
 ad0:	81 95       	neg	r24
 ad2:	9f 4f       	sbci	r25, 0xFF	; 255
 ad4:	08 95       	ret

00000ad6 <__divmodhi4_neg2>:
 ad6:	70 95       	com	r23
 ad8:	61 95       	neg	r22
 ada:	7f 4f       	sbci	r23, 0xFF	; 255

00000adc <__divmodhi4_exit>:
 adc:	08 95       	ret

00000ade <__udivmodhi4>:
 ade:	aa 1b       	sub	r26, r26
 ae0:	bb 1b       	sub	r27, r27
 ae2:	51 e1       	ldi	r21, 0x11	; 17
 ae4:	07 c0       	rjmp	.+14     	; 0xaf4 <__udivmodhi4_ep>

00000ae6 <__udivmodhi4_loop>:
 ae6:	aa 1f       	adc	r26, r26
 ae8:	bb 1f       	adc	r27, r27
 aea:	a6 17       	cp	r26, r22
 aec:	b7 07       	cpc	r27, r23
 aee:	10 f0       	brcs	.+4      	; 0xaf4 <__udivmodhi4_ep>
 af0:	a6 1b       	sub	r26, r22
 af2:	b7 0b       	sbc	r27, r23

00000af4 <__udivmodhi4_ep>:
 af4:	88 1f       	adc	r24, r24
 af6:	99 1f       	adc	r25, r25
 af8:	5a 95       	dec	r21
 afa:	a9 f7       	brne	.-22     	; 0xae6 <__udivmodhi4_loop>
 afc:	80 95       	com	r24
 afe:	90 95       	com	r25
 b00:	bc 01       	movw	r22, r24
 b02:	cd 01       	movw	r24, r26
 b04:	08 95       	ret

00000b06 <itoa>:
 b06:	fb 01       	movw	r30, r22
 b08:	9f 01       	movw	r18, r30
 b0a:	e8 94       	clt
 b0c:	42 30       	cpi	r20, 0x02	; 2
 b0e:	c4 f0       	brlt	.+48     	; 0xb40 <itoa+0x3a>
 b10:	45 32       	cpi	r20, 0x25	; 37
 b12:	b4 f4       	brge	.+44     	; 0xb40 <itoa+0x3a>
 b14:	4a 30       	cpi	r20, 0x0A	; 10
 b16:	29 f4       	brne	.+10     	; 0xb22 <itoa+0x1c>
 b18:	97 fb       	bst	r25, 7
 b1a:	1e f4       	brtc	.+6      	; 0xb22 <itoa+0x1c>
 b1c:	90 95       	com	r25
 b1e:	81 95       	neg	r24
 b20:	9f 4f       	sbci	r25, 0xFF	; 255
 b22:	64 2f       	mov	r22, r20
 b24:	77 27       	eor	r23, r23
 b26:	0e 94 6f 05 	call	0xade	; 0xade <__udivmodhi4>
 b2a:	80 5d       	subi	r24, 0xD0	; 208
 b2c:	8a 33       	cpi	r24, 0x3A	; 58
 b2e:	0c f0       	brlt	.+2      	; 0xb32 <itoa+0x2c>
 b30:	89 5d       	subi	r24, 0xD9	; 217
 b32:	81 93       	st	Z+, r24
 b34:	cb 01       	movw	r24, r22
 b36:	00 97       	sbiw	r24, 0x00	; 0
 b38:	a1 f7       	brne	.-24     	; 0xb22 <itoa+0x1c>
 b3a:	16 f4       	brtc	.+4      	; 0xb40 <itoa+0x3a>
 b3c:	5d e2       	ldi	r21, 0x2D	; 45
 b3e:	51 93       	st	Z+, r21
 b40:	10 82       	st	Z, r1
 b42:	c9 01       	movw	r24, r18
 b44:	0c 94 a4 05 	jmp	0xb48	; 0xb48 <strrev>

00000b48 <strrev>:
 b48:	dc 01       	movw	r26, r24
 b4a:	fc 01       	movw	r30, r24
 b4c:	67 2f       	mov	r22, r23
 b4e:	71 91       	ld	r23, Z+
 b50:	77 23       	and	r23, r23
 b52:	e1 f7       	brne	.-8      	; 0xb4c <strrev+0x4>
 b54:	32 97       	sbiw	r30, 0x02	; 2
 b56:	04 c0       	rjmp	.+8      	; 0xb60 <strrev+0x18>
 b58:	7c 91       	ld	r23, X
 b5a:	6d 93       	st	X+, r22
 b5c:	70 83       	st	Z, r23
 b5e:	62 91       	ld	r22, -Z
 b60:	ae 17       	cp	r26, r30
 b62:	bf 07       	cpc	r27, r31
 b64:	c8 f3       	brcs	.-14     	; 0xb58 <strrev+0x10>
 b66:	08 95       	ret

00000b68 <_exit>:
 b68:	f8 94       	cli

00000b6a <__stop_program>:
 b6a:	ff cf       	rjmp	.-2      	; 0xb6a <__stop_program>
