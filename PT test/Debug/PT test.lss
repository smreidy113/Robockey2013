
PT test.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000008  00800100  00000a34  00000ac8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000a34  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000014  00800108  00800108  00000ad0  2**0
                  ALLOC
  3 .stab         0000099c  00000000  00000000  00000ad0  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      000002ed  00000000  00000000  0000146c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      0000002f  00000000  00000000  00001759  2**0
                  CONTENTS, READONLY
  6 .debug_aranges 00000110  00000000  00000000  00001788  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00000f97  00000000  00000000  00001898  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000003b3  00000000  00000000  0000282f  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   000006ba  00000000  00000000  00002be2  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  000003b8  00000000  00000000  0000329c  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    000004a8  00000000  00000000  00003654  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    00001ad6  00000000  00000000  00003afc  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000140  00000000  00000000  000055d2  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 b5 00 	jmp	0x16a	; 0x16a <__ctors_end>
   4:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
   8:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
   c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
  10:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
  14:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
  18:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
  1c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
  20:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
  24:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
  28:	0c 94 4c 01 	jmp	0x298	; 0x298 <__vector_10>
  2c:	0c 94 8a 01 	jmp	0x314	; 0x314 <__vector_11>
  30:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
  34:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
  38:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
  3c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
  40:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
  44:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
  48:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
  4c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
  50:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
  54:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
  58:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
  5c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
  60:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
  64:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
  68:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
  6c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
  70:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
  74:	0c 94 7e 04 	jmp	0x8fc	; 0x8fc <__vector_29>
  78:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
  7c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
  80:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
  84:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
  88:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
  8c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
  90:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
  94:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
  98:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
  9c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
  a0:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
  a4:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
  a8:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>

000000ac <descriptor_list>:
  ac:	00 01 00 00 e0 00 12 00 02 00 00 f2 00 43 00 03     .............C..
  bc:	00 00 35 01 04 01 03 09 04 39 01 12 02 03 09 04     ..5......9......
  cc:	4d 01 06 03 03 09 04 55 01 08                       M......U..

000000d6 <endpoint_config_table>:
  d6:	00 01 c1 12 01 80 36 01 81 36                       ......6..6

000000e0 <device_descriptor>:
  e0:	12 01 00 02 02 00 00 10 c0 16 7a 04 00 01 01 02     ..........z.....
  f0:	03 01                                               ..

000000f2 <config1_descriptor>:
  f2:	09 02 43 00 02 01 00 c0 32 09 04 00 00 01 02 02     ..C.....2.......
 102:	01 00 05 24 00 10 01 05 24 01 01 01 04 24 02 06     ...$....$....$..
 112:	05 24 06 00 01 07 05 82 03 10 00 40 09 04 01 00     .$.........@....
 122:	02 0a 00 00 00 07 05 03 02 40 00 00 07 05 84 02     .........@......
 132:	40 00 00                                            @..

00000135 <string0>:
 135:	04 03 09 04                                         ....

00000139 <string1>:
 139:	12 03 4a 00 2e 00 20 00 46 00 69 00 65 00 6e 00     ..J... .F.i.e.n.
 149:	65 00 00 00                                         e...

0000014d <string2>:
 14d:	06 03 4d 00 32 00 00 00                             ..M.2...

00000155 <string3>:
 155:	08 03 34 00 31 00 30 00 00 00                       ..4.1.0...

0000015f <__c.1821>:
 15f:	41 44 43 00                                         ADC.

00000163 <__c.1823>:
 163:	3a 20 00                                            : .

00000166 <__c.1825>:
 166:	09 00                                               ..

00000168 <__c.1830>:
 168:	0a 00                                               ..

0000016a <__ctors_end>:
 16a:	11 24       	eor	r1, r1
 16c:	1f be       	out	0x3f, r1	; 63
 16e:	cf ef       	ldi	r28, 0xFF	; 255
 170:	da e0       	ldi	r29, 0x0A	; 10
 172:	de bf       	out	0x3e, r29	; 62
 174:	cd bf       	out	0x3d, r28	; 61

00000176 <__do_copy_data>:
 176:	11 e0       	ldi	r17, 0x01	; 1
 178:	a0 e0       	ldi	r26, 0x00	; 0
 17a:	b1 e0       	ldi	r27, 0x01	; 1
 17c:	e4 e3       	ldi	r30, 0x34	; 52
 17e:	fa e0       	ldi	r31, 0x0A	; 10
 180:	02 c0       	rjmp	.+4      	; 0x186 <__do_copy_data+0x10>
 182:	05 90       	lpm	r0, Z+
 184:	0d 92       	st	X+, r0
 186:	a8 30       	cpi	r26, 0x08	; 8
 188:	b1 07       	cpc	r27, r17
 18a:	d9 f7       	brne	.-10     	; 0x182 <__do_copy_data+0xc>

0000018c <__do_clear_bss>:
 18c:	21 e0       	ldi	r18, 0x01	; 1
 18e:	a8 e0       	ldi	r26, 0x08	; 8
 190:	b1 e0       	ldi	r27, 0x01	; 1
 192:	01 c0       	rjmp	.+2      	; 0x196 <.do_clear_bss_start>

00000194 <.do_clear_bss_loop>:
 194:	1d 92       	st	X+, r1

00000196 <.do_clear_bss_start>:
 196:	ac 31       	cpi	r26, 0x1C	; 28
 198:	b2 07       	cpc	r27, r18
 19a:	e1 f7       	brne	.-8      	; 0x194 <.do_clear_bss_loop>
 19c:	0e 94 ee 03 	call	0x7dc	; 0x7dc <main>
 1a0:	0c 94 18 05 	jmp	0xa30	; 0xa30 <_exit>

000001a4 <__bad_interrupt>:
 1a4:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001a8 <m_usb_init>:
 1a8:	81 e0       	ldi	r24, 0x01	; 1
 1aa:	80 93 d7 00 	sts	0x00D7, r24
 1ae:	80 ea       	ldi	r24, 0xA0	; 160
 1b0:	80 93 d8 00 	sts	0x00D8, r24
 1b4:	82 e1       	ldi	r24, 0x12	; 18
 1b6:	89 bd       	out	0x29, r24	; 41
 1b8:	09 b4       	in	r0, 0x29	; 41
 1ba:	00 fe       	sbrs	r0, 0
 1bc:	fd cf       	rjmp	.-6      	; 0x1b8 <m_usb_init+0x10>
 1be:	80 e9       	ldi	r24, 0x90	; 144
 1c0:	80 93 d8 00 	sts	0x00D8, r24
 1c4:	10 92 e0 00 	sts	0x00E0, r1
 1c8:	10 92 09 01 	sts	0x0109, r1
 1cc:	10 92 0a 01 	sts	0x010A, r1
 1d0:	8c e0       	ldi	r24, 0x0C	; 12
 1d2:	80 93 e2 00 	sts	0x00E2, r24
 1d6:	78 94       	sei
 1d8:	08 95       	ret

000001da <m_usb_isconnected>:
 1da:	80 91 09 01 	lds	r24, 0x0109
 1de:	08 95       	ret

000001e0 <m_usb_tx_char>:
 1e0:	cf 93       	push	r28
 1e2:	df 93       	push	r29
 1e4:	90 91 09 01 	lds	r25, 0x0109
 1e8:	99 23       	and	r25, r25
 1ea:	09 f4       	brne	.+2      	; 0x1ee <m_usb_tx_char+0xe>
 1ec:	4d c0       	rjmp	.+154    	; 0x288 <m_usb_tx_char+0xa8>
 1ee:	9f b7       	in	r25, 0x3f	; 63
 1f0:	f8 94       	cli
 1f2:	24 e0       	ldi	r18, 0x04	; 4
 1f4:	20 93 e9 00 	sts	0x00E9, r18
 1f8:	20 91 0b 01 	lds	r18, 0x010B
 1fc:	22 23       	and	r18, r18
 1fe:	49 f0       	breq	.+18     	; 0x212 <m_usb_tx_char+0x32>
 200:	20 91 e8 00 	lds	r18, 0x00E8
 204:	25 fd       	sbrc	r18, 5
 206:	03 c0       	rjmp	.+6      	; 0x20e <m_usb_tx_char+0x2e>
 208:	9f bf       	out	0x3f, r25	; 63
 20a:	8f ef       	ldi	r24, 0xFF	; 255
 20c:	42 c0       	rjmp	.+132    	; 0x292 <m_usb_tx_char+0xb2>
 20e:	10 92 0b 01 	sts	0x010B, r1
 212:	30 91 e4 00 	lds	r19, 0x00E4
 216:	37 5e       	subi	r19, 0xE7	; 231
 218:	20 91 e8 00 	lds	r18, 0x00E8
 21c:	25 fd       	sbrc	r18, 5
 21e:	25 c0       	rjmp	.+74     	; 0x26a <m_usb_tx_char+0x8a>
 220:	9f bf       	out	0x3f, r25	; 63
 222:	90 91 e4 00 	lds	r25, 0x00E4
 226:	93 17       	cp	r25, r19
 228:	49 f0       	breq	.+18     	; 0x23c <m_usb_tx_char+0x5c>
 22a:	90 91 09 01 	lds	r25, 0x0109
 22e:	91 11       	cpse	r25, r1
 230:	0f c0       	rjmp	.+30     	; 0x250 <m_usb_tx_char+0x70>
 232:	2c c0       	rjmp	.+88     	; 0x28c <m_usb_tx_char+0xac>
 234:	9f bf       	out	0x3f, r25	; 63
 236:	98 81       	ld	r25, Y
 238:	93 13       	cpse	r25, r19
 23a:	05 c0       	rjmp	.+10     	; 0x246 <m_usb_tx_char+0x66>
 23c:	81 e0       	ldi	r24, 0x01	; 1
 23e:	80 93 0b 01 	sts	0x010B, r24
 242:	8f ef       	ldi	r24, 0xFF	; 255
 244:	26 c0       	rjmp	.+76     	; 0x292 <m_usb_tx_char+0xb2>
 246:	90 91 09 01 	lds	r25, 0x0109
 24a:	91 11       	cpse	r25, r1
 24c:	08 c0       	rjmp	.+16     	; 0x25e <m_usb_tx_char+0x7e>
 24e:	20 c0       	rjmp	.+64     	; 0x290 <m_usb_tx_char+0xb0>
 250:	a9 ee       	ldi	r26, 0xE9	; 233
 252:	b0 e0       	ldi	r27, 0x00	; 0
 254:	44 e0       	ldi	r20, 0x04	; 4
 256:	e8 ee       	ldi	r30, 0xE8	; 232
 258:	f0 e0       	ldi	r31, 0x00	; 0
 25a:	c4 ee       	ldi	r28, 0xE4	; 228
 25c:	d0 e0       	ldi	r29, 0x00	; 0
 25e:	9f b7       	in	r25, 0x3f	; 63
 260:	f8 94       	cli
 262:	4c 93       	st	X, r20
 264:	20 81       	ld	r18, Z
 266:	25 ff       	sbrs	r18, 5
 268:	e5 cf       	rjmp	.-54     	; 0x234 <m_usb_tx_char+0x54>
 26a:	80 93 f1 00 	sts	0x00F1, r24
 26e:	80 91 e8 00 	lds	r24, 0x00E8
 272:	85 fd       	sbrc	r24, 5
 274:	03 c0       	rjmp	.+6      	; 0x27c <m_usb_tx_char+0x9c>
 276:	8a e3       	ldi	r24, 0x3A	; 58
 278:	80 93 e8 00 	sts	0x00E8, r24
 27c:	85 e0       	ldi	r24, 0x05	; 5
 27e:	80 93 08 01 	sts	0x0108, r24
 282:	9f bf       	out	0x3f, r25	; 63
 284:	80 e0       	ldi	r24, 0x00	; 0
 286:	05 c0       	rjmp	.+10     	; 0x292 <m_usb_tx_char+0xb2>
 288:	8f ef       	ldi	r24, 0xFF	; 255
 28a:	03 c0       	rjmp	.+6      	; 0x292 <m_usb_tx_char+0xb2>
 28c:	8f ef       	ldi	r24, 0xFF	; 255
 28e:	01 c0       	rjmp	.+2      	; 0x292 <m_usb_tx_char+0xb2>
 290:	8f ef       	ldi	r24, 0xFF	; 255
 292:	df 91       	pop	r29
 294:	cf 91       	pop	r28
 296:	08 95       	ret

00000298 <__vector_10>:
 298:	1f 92       	push	r1
 29a:	0f 92       	push	r0
 29c:	0f b6       	in	r0, 0x3f	; 63
 29e:	0f 92       	push	r0
 2a0:	11 24       	eor	r1, r1
 2a2:	8f 93       	push	r24
 2a4:	9f 93       	push	r25
 2a6:	ef 93       	push	r30
 2a8:	ff 93       	push	r31
 2aa:	e1 ee       	ldi	r30, 0xE1	; 225
 2ac:	f0 e0       	ldi	r31, 0x00	; 0
 2ae:	80 81       	ld	r24, Z
 2b0:	10 82       	st	Z, r1
 2b2:	83 ff       	sbrs	r24, 3
 2b4:	11 c0       	rjmp	.+34     	; 0x2d8 <__vector_10+0x40>
 2b6:	10 92 e9 00 	sts	0x00E9, r1
 2ba:	91 e0       	ldi	r25, 0x01	; 1
 2bc:	90 93 eb 00 	sts	0x00EB, r25
 2c0:	10 92 ec 00 	sts	0x00EC, r1
 2c4:	92 e1       	ldi	r25, 0x12	; 18
 2c6:	90 93 ed 00 	sts	0x00ED, r25
 2ca:	98 e0       	ldi	r25, 0x08	; 8
 2cc:	90 93 f0 00 	sts	0x00F0, r25
 2d0:	10 92 09 01 	sts	0x0109, r1
 2d4:	10 92 0a 01 	sts	0x010A, r1
 2d8:	82 ff       	sbrs	r24, 2
 2da:	13 c0       	rjmp	.+38     	; 0x302 <__vector_10+0x6a>
 2dc:	80 91 09 01 	lds	r24, 0x0109
 2e0:	88 23       	and	r24, r24
 2e2:	79 f0       	breq	.+30     	; 0x302 <__vector_10+0x6a>
 2e4:	80 91 08 01 	lds	r24, 0x0108
 2e8:	88 23       	and	r24, r24
 2ea:	59 f0       	breq	.+22     	; 0x302 <__vector_10+0x6a>
 2ec:	81 50       	subi	r24, 0x01	; 1
 2ee:	80 93 08 01 	sts	0x0108, r24
 2f2:	81 11       	cpse	r24, r1
 2f4:	06 c0       	rjmp	.+12     	; 0x302 <__vector_10+0x6a>
 2f6:	84 e0       	ldi	r24, 0x04	; 4
 2f8:	80 93 e9 00 	sts	0x00E9, r24
 2fc:	8a e3       	ldi	r24, 0x3A	; 58
 2fe:	80 93 e8 00 	sts	0x00E8, r24
 302:	ff 91       	pop	r31
 304:	ef 91       	pop	r30
 306:	9f 91       	pop	r25
 308:	8f 91       	pop	r24
 30a:	0f 90       	pop	r0
 30c:	0f be       	out	0x3f, r0	; 63
 30e:	0f 90       	pop	r0
 310:	1f 90       	pop	r1
 312:	18 95       	reti

00000314 <__vector_11>:
 314:	1f 92       	push	r1
 316:	0f 92       	push	r0
 318:	0f b6       	in	r0, 0x3f	; 63
 31a:	0f 92       	push	r0
 31c:	11 24       	eor	r1, r1
 31e:	0f 93       	push	r16
 320:	1f 93       	push	r17
 322:	2f 93       	push	r18
 324:	3f 93       	push	r19
 326:	4f 93       	push	r20
 328:	5f 93       	push	r21
 32a:	6f 93       	push	r22
 32c:	7f 93       	push	r23
 32e:	8f 93       	push	r24
 330:	9f 93       	push	r25
 332:	af 93       	push	r26
 334:	bf 93       	push	r27
 336:	cf 93       	push	r28
 338:	df 93       	push	r29
 33a:	ef 93       	push	r30
 33c:	ff 93       	push	r31
 33e:	10 92 e9 00 	sts	0x00E9, r1
 342:	80 91 e8 00 	lds	r24, 0x00E8
 346:	83 ff       	sbrs	r24, 3
 348:	51 c1       	rjmp	.+674    	; 0x5ec <__vector_11+0x2d8>
 34a:	e1 ef       	ldi	r30, 0xF1	; 241
 34c:	f0 e0       	ldi	r31, 0x00	; 0
 34e:	70 81       	ld	r23, Z
 350:	40 81       	ld	r20, Z
 352:	20 81       	ld	r18, Z
 354:	30 81       	ld	r19, Z
 356:	93 2f       	mov	r25, r19
 358:	80 e0       	ldi	r24, 0x00	; 0
 35a:	dc 01       	movw	r26, r24
 35c:	a2 2b       	or	r26, r18
 35e:	9d 01       	movw	r18, r26
 360:	50 81       	ld	r21, Z
 362:	60 81       	ld	r22, Z
 364:	96 2f       	mov	r25, r22
 366:	80 e0       	ldi	r24, 0x00	; 0
 368:	85 2b       	or	r24, r21
 36a:	a0 81       	ld	r26, Z
 36c:	b0 81       	ld	r27, Z
 36e:	52 ef       	ldi	r21, 0xF2	; 242
 370:	50 93 e8 00 	sts	0x00E8, r21
 374:	46 30       	cpi	r20, 0x06	; 6
 376:	09 f0       	breq	.+2      	; 0x37a <__vector_11+0x66>
 378:	5c c0       	rjmp	.+184    	; 0x432 <__vector_11+0x11e>
 37a:	04 c0       	rjmp	.+8      	; 0x384 <__vector_11+0x70>
 37c:	81 e2       	ldi	r24, 0x21	; 33
 37e:	80 93 eb 00 	sts	0x00EB, r24
 382:	3b c1       	rjmp	.+630    	; 0x5fa <__vector_11+0x2e6>
 384:	c6 e0       	ldi	r28, 0x06	; 6
 386:	4c ea       	ldi	r20, 0xAC	; 172
 388:	50 e0       	ldi	r21, 0x00	; 0
 38a:	fa 01       	movw	r30, r20
 38c:	65 91       	lpm	r22, Z+
 38e:	74 91       	lpm	r23, Z
 390:	26 17       	cp	r18, r22
 392:	37 07       	cpc	r19, r23
 394:	19 f0       	breq	.+6      	; 0x39c <__vector_11+0x88>
 396:	49 5f       	subi	r20, 0xF9	; 249
 398:	5f 4f       	sbci	r21, 0xFF	; 255
 39a:	20 c0       	rjmp	.+64     	; 0x3dc <__vector_11+0xc8>
 39c:	fa 01       	movw	r30, r20
 39e:	32 96       	adiw	r30, 0x02	; 2
 3a0:	65 91       	lpm	r22, Z+
 3a2:	74 91       	lpm	r23, Z
 3a4:	86 17       	cp	r24, r22
 3a6:	97 07       	cpc	r25, r23
 3a8:	19 f0       	breq	.+6      	; 0x3b0 <__vector_11+0x9c>
 3aa:	49 5f       	subi	r20, 0xF9	; 249
 3ac:	5f 4f       	sbci	r21, 0xFF	; 255
 3ae:	16 c0       	rjmp	.+44     	; 0x3dc <__vector_11+0xc8>
 3b0:	fa 01       	movw	r30, r20
 3b2:	34 96       	adiw	r30, 0x04	; 4
 3b4:	85 91       	lpm	r24, Z+
 3b6:	94 91       	lpm	r25, Z
 3b8:	28 2f       	mov	r18, r24
 3ba:	39 2f       	mov	r19, r25
 3bc:	fa 01       	movw	r30, r20
 3be:	36 96       	adiw	r30, 0x06	; 6
 3c0:	44 91       	lpm	r20, Z
 3c2:	9b 2f       	mov	r25, r27
 3c4:	80 e0       	ldi	r24, 0x00	; 0
 3c6:	8a 2b       	or	r24, r26
 3c8:	8f 3f       	cpi	r24, 0xFF	; 255
 3ca:	91 05       	cpc	r25, r1
 3cc:	19 f0       	breq	.+6      	; 0x3d4 <__vector_11+0xc0>
 3ce:	10 f0       	brcs	.+4      	; 0x3d4 <__vector_11+0xc0>
 3d0:	8f ef       	ldi	r24, 0xFF	; 255
 3d2:	90 e0       	ldi	r25, 0x00	; 0
 3d4:	84 17       	cp	r24, r20
 3d6:	28 f4       	brcc	.+10     	; 0x3e2 <__vector_11+0xce>
 3d8:	48 2f       	mov	r20, r24
 3da:	03 c0       	rjmp	.+6      	; 0x3e2 <__vector_11+0xce>
 3dc:	c1 50       	subi	r28, 0x01	; 1
 3de:	a9 f6       	brne	.-86     	; 0x38a <__vector_11+0x76>
 3e0:	cd cf       	rjmp	.-102    	; 0x37c <__vector_11+0x68>
 3e2:	c8 ee       	ldi	r28, 0xE8	; 232
 3e4:	d0 e0       	ldi	r29, 0x00	; 0
 3e6:	7e ef       	ldi	r23, 0xFE	; 254
 3e8:	a1 ef       	ldi	r26, 0xF1	; 241
 3ea:	b0 e0       	ldi	r27, 0x00	; 0
 3ec:	10 e1       	ldi	r17, 0x10	; 16
 3ee:	88 81       	ld	r24, Y
 3f0:	98 2f       	mov	r25, r24
 3f2:	95 70       	andi	r25, 0x05	; 5
 3f4:	e1 f3       	breq	.-8      	; 0x3ee <__vector_11+0xda>
 3f6:	82 fd       	sbrc	r24, 2
 3f8:	00 c1       	rjmp	.+512    	; 0x5fa <__vector_11+0x2e6>
 3fa:	64 2f       	mov	r22, r20
 3fc:	41 31       	cpi	r20, 0x11	; 17
 3fe:	08 f0       	brcs	.+2      	; 0x402 <__vector_11+0xee>
 400:	61 2f       	mov	r22, r17
 402:	66 23       	and	r22, r22
 404:	09 f4       	brne	.+2      	; 0x408 <__vector_11+0xf4>
 406:	f6 c0       	rjmp	.+492    	; 0x5f4 <__vector_11+0x2e0>
 408:	c9 01       	movw	r24, r18
 40a:	56 2f       	mov	r21, r22
 40c:	fc 01       	movw	r30, r24
 40e:	01 96       	adiw	r24, 0x01	; 1
 410:	e4 91       	lpm	r30, Z
 412:	ec 93       	st	X, r30
 414:	51 50       	subi	r21, 0x01	; 1
 416:	d1 f7       	brne	.-12     	; 0x40c <__vector_11+0xf8>
 418:	86 2f       	mov	r24, r22
 41a:	81 50       	subi	r24, 0x01	; 1
 41c:	90 e0       	ldi	r25, 0x00	; 0
 41e:	01 96       	adiw	r24, 0x01	; 1
 420:	28 0f       	add	r18, r24
 422:	39 1f       	adc	r19, r25
 424:	46 1b       	sub	r20, r22
 426:	78 83       	st	Y, r23
 428:	41 11       	cpse	r20, r1
 42a:	e1 cf       	rjmp	.-62     	; 0x3ee <__vector_11+0xda>
 42c:	60 31       	cpi	r22, 0x10	; 16
 42e:	f9 f2       	breq	.-66     	; 0x3ee <__vector_11+0xda>
 430:	e4 c0       	rjmp	.+456    	; 0x5fa <__vector_11+0x2e6>
 432:	45 30       	cpi	r20, 0x05	; 5
 434:	61 f4       	brne	.+24     	; 0x44e <__vector_11+0x13a>
 436:	8e ef       	ldi	r24, 0xFE	; 254
 438:	80 93 e8 00 	sts	0x00E8, r24
 43c:	e8 ee       	ldi	r30, 0xE8	; 232
 43e:	f0 e0       	ldi	r31, 0x00	; 0
 440:	80 81       	ld	r24, Z
 442:	80 ff       	sbrs	r24, 0
 444:	fd cf       	rjmp	.-6      	; 0x440 <__vector_11+0x12c>
 446:	20 68       	ori	r18, 0x80	; 128
 448:	20 93 e3 00 	sts	0x00E3, r18
 44c:	d6 c0       	rjmp	.+428    	; 0x5fa <__vector_11+0x2e6>
 44e:	49 30       	cpi	r20, 0x09	; 9
 450:	a1 f5       	brne	.+104    	; 0x4ba <__vector_11+0x1a6>
 452:	71 11       	cpse	r23, r1
 454:	5b c0       	rjmp	.+182    	; 0x50c <__vector_11+0x1f8>
 456:	20 93 09 01 	sts	0x0109, r18
 45a:	10 92 0a 01 	sts	0x010A, r1
 45e:	10 92 08 01 	sts	0x0108, r1
 462:	8e ef       	ldi	r24, 0xFE	; 254
 464:	80 93 e8 00 	sts	0x00E8, r24
 468:	11 e0       	ldi	r17, 0x01	; 1
 46a:	86 ed       	ldi	r24, 0xD6	; 214
 46c:	90 e0       	ldi	r25, 0x00	; 0
 46e:	c9 ee       	ldi	r28, 0xE9	; 233
 470:	d0 e0       	ldi	r29, 0x00	; 0
 472:	ab ee       	ldi	r26, 0xEB	; 235
 474:	b0 e0       	ldi	r27, 0x00	; 0
 476:	6c ee       	ldi	r22, 0xEC	; 236
 478:	70 e0       	ldi	r23, 0x00	; 0
 47a:	4d ee       	ldi	r20, 0xED	; 237
 47c:	50 e0       	ldi	r21, 0x00	; 0
 47e:	18 83       	st	Y, r17
 480:	9c 01       	movw	r18, r24
 482:	2f 5f       	subi	r18, 0xFF	; 255
 484:	3f 4f       	sbci	r19, 0xFF	; 255
 486:	fc 01       	movw	r30, r24
 488:	04 91       	lpm	r16, Z
 48a:	0c 93       	st	X, r16
 48c:	00 23       	and	r16, r16
 48e:	59 f0       	breq	.+22     	; 0x4a6 <__vector_11+0x192>
 490:	f9 01       	movw	r30, r18
 492:	24 91       	lpm	r18, Z
 494:	fb 01       	movw	r30, r22
 496:	20 83       	st	Z, r18
 498:	fc 01       	movw	r30, r24
 49a:	32 96       	adiw	r30, 0x02	; 2
 49c:	03 96       	adiw	r24, 0x03	; 3
 49e:	24 91       	lpm	r18, Z
 4a0:	fa 01       	movw	r30, r20
 4a2:	20 83       	st	Z, r18
 4a4:	01 c0       	rjmp	.+2      	; 0x4a8 <__vector_11+0x194>
 4a6:	c9 01       	movw	r24, r18
 4a8:	1f 5f       	subi	r17, 0xFF	; 255
 4aa:	15 30       	cpi	r17, 0x05	; 5
 4ac:	41 f7       	brne	.-48     	; 0x47e <__vector_11+0x16a>
 4ae:	ea ee       	ldi	r30, 0xEA	; 234
 4b0:	f0 e0       	ldi	r31, 0x00	; 0
 4b2:	8e e1       	ldi	r24, 0x1E	; 30
 4b4:	80 83       	st	Z, r24
 4b6:	10 82       	st	Z, r1
 4b8:	a0 c0       	rjmp	.+320    	; 0x5fa <__vector_11+0x2e6>
 4ba:	48 30       	cpi	r20, 0x08	; 8
 4bc:	81 f4       	brne	.+32     	; 0x4de <__vector_11+0x1ca>
 4be:	70 38       	cpi	r23, 0x80	; 128
 4c0:	09 f0       	breq	.+2      	; 0x4c4 <__vector_11+0x1b0>
 4c2:	3f c0       	rjmp	.+126    	; 0x542 <__vector_11+0x22e>
 4c4:	e8 ee       	ldi	r30, 0xE8	; 232
 4c6:	f0 e0       	ldi	r31, 0x00	; 0
 4c8:	80 81       	ld	r24, Z
 4ca:	80 ff       	sbrs	r24, 0
 4cc:	fd cf       	rjmp	.-6      	; 0x4c8 <__vector_11+0x1b4>
 4ce:	80 91 09 01 	lds	r24, 0x0109
 4d2:	80 93 f1 00 	sts	0x00F1, r24
 4d6:	8e ef       	ldi	r24, 0xFE	; 254
 4d8:	80 93 e8 00 	sts	0x00E8, r24
 4dc:	8e c0       	rjmp	.+284    	; 0x5fa <__vector_11+0x2e6>
 4de:	41 32       	cpi	r20, 0x21	; 33
 4e0:	a9 f4       	brne	.+42     	; 0x50c <__vector_11+0x1f8>
 4e2:	71 3a       	cpi	r23, 0xA1	; 161
 4e4:	f1 f5       	brne	.+124    	; 0x562 <__vector_11+0x24e>
 4e6:	e8 ee       	ldi	r30, 0xE8	; 232
 4e8:	f0 e0       	ldi	r31, 0x00	; 0
 4ea:	80 81       	ld	r24, Z
 4ec:	80 ff       	sbrs	r24, 0
 4ee:	fd cf       	rjmp	.-6      	; 0x4ea <__vector_11+0x1d6>
 4f0:	e0 e0       	ldi	r30, 0x00	; 0
 4f2:	f1 e0       	ldi	r31, 0x01	; 1
 4f4:	a1 ef       	ldi	r26, 0xF1	; 241
 4f6:	b0 e0       	ldi	r27, 0x00	; 0
 4f8:	81 91       	ld	r24, Z+
 4fa:	8c 93       	st	X, r24
 4fc:	41 e0       	ldi	r20, 0x01	; 1
 4fe:	e7 30       	cpi	r30, 0x07	; 7
 500:	f4 07       	cpc	r31, r20
 502:	d1 f7       	brne	.-12     	; 0x4f8 <__vector_11+0x1e4>
 504:	8e ef       	ldi	r24, 0xFE	; 254
 506:	80 93 e8 00 	sts	0x00E8, r24
 50a:	77 c0       	rjmp	.+238    	; 0x5fa <__vector_11+0x2e6>
 50c:	40 32       	cpi	r20, 0x20	; 32
 50e:	c9 f4       	brne	.+50     	; 0x542 <__vector_11+0x22e>
 510:	71 32       	cpi	r23, 0x21	; 33
 512:	09 f0       	breq	.+2      	; 0x516 <__vector_11+0x202>
 514:	6b c0       	rjmp	.+214    	; 0x5ec <__vector_11+0x2d8>
 516:	e8 ee       	ldi	r30, 0xE8	; 232
 518:	f0 e0       	ldi	r31, 0x00	; 0
 51a:	80 81       	ld	r24, Z
 51c:	82 ff       	sbrs	r24, 2
 51e:	fd cf       	rjmp	.-6      	; 0x51a <__vector_11+0x206>
 520:	e0 e0       	ldi	r30, 0x00	; 0
 522:	f1 e0       	ldi	r31, 0x01	; 1
 524:	a1 ef       	ldi	r26, 0xF1	; 241
 526:	b0 e0       	ldi	r27, 0x00	; 0
 528:	8c 91       	ld	r24, X
 52a:	81 93       	st	Z+, r24
 52c:	51 e0       	ldi	r21, 0x01	; 1
 52e:	e7 30       	cpi	r30, 0x07	; 7
 530:	f5 07       	cpc	r31, r21
 532:	d1 f7       	brne	.-12     	; 0x528 <__vector_11+0x214>
 534:	e8 ee       	ldi	r30, 0xE8	; 232
 536:	f0 e0       	ldi	r31, 0x00	; 0
 538:	8b ef       	ldi	r24, 0xFB	; 251
 53a:	80 83       	st	Z, r24
 53c:	8e ef       	ldi	r24, 0xFE	; 254
 53e:	80 83       	st	Z, r24
 540:	5c c0       	rjmp	.+184    	; 0x5fa <__vector_11+0x2e6>
 542:	42 32       	cpi	r20, 0x22	; 34
 544:	71 f4       	brne	.+28     	; 0x562 <__vector_11+0x24e>
 546:	71 32       	cpi	r23, 0x21	; 33
 548:	09 f0       	breq	.+2      	; 0x54c <__vector_11+0x238>
 54a:	50 c0       	rjmp	.+160    	; 0x5ec <__vector_11+0x2d8>
 54c:	20 93 0a 01 	sts	0x010A, r18
 550:	e8 ee       	ldi	r30, 0xE8	; 232
 552:	f0 e0       	ldi	r31, 0x00	; 0
 554:	80 81       	ld	r24, Z
 556:	80 ff       	sbrs	r24, 0
 558:	fd cf       	rjmp	.-6      	; 0x554 <__vector_11+0x240>
 55a:	8e ef       	ldi	r24, 0xFE	; 254
 55c:	80 93 e8 00 	sts	0x00E8, r24
 560:	4c c0       	rjmp	.+152    	; 0x5fa <__vector_11+0x2e6>
 562:	41 11       	cpse	r20, r1
 564:	1a c0       	rjmp	.+52     	; 0x59a <__vector_11+0x286>
 566:	e8 ee       	ldi	r30, 0xE8	; 232
 568:	f0 e0       	ldi	r31, 0x00	; 0
 56a:	20 81       	ld	r18, Z
 56c:	20 ff       	sbrs	r18, 0
 56e:	fd cf       	rjmp	.-6      	; 0x56a <__vector_11+0x256>
 570:	72 38       	cpi	r23, 0x82	; 130
 572:	51 f4       	brne	.+20     	; 0x588 <__vector_11+0x274>
 574:	e9 ee       	ldi	r30, 0xE9	; 233
 576:	f0 e0       	ldi	r31, 0x00	; 0
 578:	80 83       	st	Z, r24
 57a:	80 91 eb 00 	lds	r24, 0x00EB
 57e:	85 fb       	bst	r24, 5
 580:	88 27       	eor	r24, r24
 582:	80 f9       	bld	r24, 0
 584:	10 82       	st	Z, r1
 586:	01 c0       	rjmp	.+2      	; 0x58a <__vector_11+0x276>
 588:	80 e0       	ldi	r24, 0x00	; 0
 58a:	e1 ef       	ldi	r30, 0xF1	; 241
 58c:	f0 e0       	ldi	r31, 0x00	; 0
 58e:	80 83       	st	Z, r24
 590:	10 82       	st	Z, r1
 592:	8e ef       	ldi	r24, 0xFE	; 254
 594:	80 93 e8 00 	sts	0x00E8, r24
 598:	30 c0       	rjmp	.+96     	; 0x5fa <__vector_11+0x2e6>
 59a:	41 30       	cpi	r20, 0x01	; 1
 59c:	11 f0       	breq	.+4      	; 0x5a2 <__vector_11+0x28e>
 59e:	43 30       	cpi	r20, 0x03	; 3
 5a0:	29 f5       	brne	.+74     	; 0x5ec <__vector_11+0x2d8>
 5a2:	72 30       	cpi	r23, 0x02	; 2
 5a4:	19 f5       	brne	.+70     	; 0x5ec <__vector_11+0x2d8>
 5a6:	23 2b       	or	r18, r19
 5a8:	09 f5       	brne	.+66     	; 0x5ec <__vector_11+0x2d8>
 5aa:	8f 77       	andi	r24, 0x7F	; 127
 5ac:	99 27       	eor	r25, r25
 5ae:	38 2f       	mov	r19, r24
 5b0:	31 50       	subi	r19, 0x01	; 1
 5b2:	34 30       	cpi	r19, 0x04	; 4
 5b4:	d8 f4       	brcc	.+54     	; 0x5ec <__vector_11+0x2d8>
 5b6:	3e ef       	ldi	r19, 0xFE	; 254
 5b8:	30 93 e8 00 	sts	0x00E8, r19
 5bc:	80 93 e9 00 	sts	0x00E9, r24
 5c0:	43 30       	cpi	r20, 0x03	; 3
 5c2:	21 f4       	brne	.+8      	; 0x5cc <__vector_11+0x2b8>
 5c4:	81 e2       	ldi	r24, 0x21	; 33
 5c6:	80 93 eb 00 	sts	0x00EB, r24
 5ca:	17 c0       	rjmp	.+46     	; 0x5fa <__vector_11+0x2e6>
 5cc:	99 e1       	ldi	r25, 0x19	; 25
 5ce:	90 93 eb 00 	sts	0x00EB, r25
 5d2:	21 e0       	ldi	r18, 0x01	; 1
 5d4:	30 e0       	ldi	r19, 0x00	; 0
 5d6:	d9 01       	movw	r26, r18
 5d8:	02 c0       	rjmp	.+4      	; 0x5de <__vector_11+0x2ca>
 5da:	aa 0f       	add	r26, r26
 5dc:	bb 1f       	adc	r27, r27
 5de:	8a 95       	dec	r24
 5e0:	e2 f7       	brpl	.-8      	; 0x5da <__vector_11+0x2c6>
 5e2:	ea ee       	ldi	r30, 0xEA	; 234
 5e4:	f0 e0       	ldi	r31, 0x00	; 0
 5e6:	a0 83       	st	Z, r26
 5e8:	10 82       	st	Z, r1
 5ea:	07 c0       	rjmp	.+14     	; 0x5fa <__vector_11+0x2e6>
 5ec:	81 e2       	ldi	r24, 0x21	; 33
 5ee:	80 93 eb 00 	sts	0x00EB, r24
 5f2:	03 c0       	rjmp	.+6      	; 0x5fa <__vector_11+0x2e6>
 5f4:	78 83       	st	Y, r23
 5f6:	41 11       	cpse	r20, r1
 5f8:	fa ce       	rjmp	.-524    	; 0x3ee <__vector_11+0xda>
 5fa:	ff 91       	pop	r31
 5fc:	ef 91       	pop	r30
 5fe:	df 91       	pop	r29
 600:	cf 91       	pop	r28
 602:	bf 91       	pop	r27
 604:	af 91       	pop	r26
 606:	9f 91       	pop	r25
 608:	8f 91       	pop	r24
 60a:	7f 91       	pop	r23
 60c:	6f 91       	pop	r22
 60e:	5f 91       	pop	r21
 610:	4f 91       	pop	r20
 612:	3f 91       	pop	r19
 614:	2f 91       	pop	r18
 616:	1f 91       	pop	r17
 618:	0f 91       	pop	r16
 61a:	0f 90       	pop	r0
 61c:	0f be       	out	0x3f, r0	; 63
 61e:	0f 90       	pop	r0
 620:	1f 90       	pop	r1
 622:	18 95       	reti

00000624 <print_P>:
 624:	1f 93       	push	r17
 626:	cf 93       	push	r28
 628:	df 93       	push	r29
 62a:	ec 01       	movw	r28, r24
 62c:	21 96       	adiw	r28, 0x01	; 1
 62e:	fc 01       	movw	r30, r24
 630:	14 91       	lpm	r17, Z
 632:	11 23       	and	r17, r17
 634:	69 f0       	breq	.+26     	; 0x650 <print_P+0x2c>
 636:	1a 30       	cpi	r17, 0x0A	; 10
 638:	19 f4       	brne	.+6      	; 0x640 <print_P+0x1c>
 63a:	8d e0       	ldi	r24, 0x0D	; 13
 63c:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <m_usb_tx_char>
 640:	81 2f       	mov	r24, r17
 642:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <m_usb_tx_char>
 646:	fe 01       	movw	r30, r28
 648:	21 96       	adiw	r28, 0x01	; 1
 64a:	14 91       	lpm	r17, Z
 64c:	11 11       	cpse	r17, r1
 64e:	f3 cf       	rjmp	.-26     	; 0x636 <print_P+0x12>
 650:	df 91       	pop	r29
 652:	cf 91       	pop	r28
 654:	1f 91       	pop	r17
 656:	08 95       	ret

00000658 <m_usb_tx_int>:
 658:	ef 92       	push	r14
 65a:	ff 92       	push	r15
 65c:	0f 93       	push	r16
 65e:	1f 93       	push	r17
 660:	cf 93       	push	r28
 662:	df 93       	push	r29
 664:	cd b7       	in	r28, 0x3d	; 61
 666:	de b7       	in	r29, 0x3e	; 62
 668:	27 97       	sbiw	r28, 0x07	; 7
 66a:	0f b6       	in	r0, 0x3f	; 63
 66c:	f8 94       	cli
 66e:	de bf       	out	0x3e, r29	; 62
 670:	0f be       	out	0x3f, r0	; 63
 672:	cd bf       	out	0x3d, r28	; 61
 674:	8e 01       	movw	r16, r28
 676:	0f 5f       	subi	r16, 0xFF	; 255
 678:	1f 4f       	sbci	r17, 0xFF	; 255
 67a:	27 e0       	ldi	r18, 0x07	; 7
 67c:	f8 01       	movw	r30, r16
 67e:	11 92       	st	Z+, r1
 680:	2a 95       	dec	r18
 682:	e9 f7       	brne	.-6      	; 0x67e <m_usb_tx_int+0x26>
 684:	4a e0       	ldi	r20, 0x0A	; 10
 686:	50 e0       	ldi	r21, 0x00	; 0
 688:	b8 01       	movw	r22, r16
 68a:	0e 94 d3 04 	call	0x9a6	; 0x9a6 <itoa>
 68e:	7e 01       	movw	r14, r28
 690:	f8 e0       	ldi	r31, 0x08	; 8
 692:	ef 0e       	add	r14, r31
 694:	f1 1c       	adc	r15, r1
 696:	f8 01       	movw	r30, r16
 698:	81 91       	ld	r24, Z+
 69a:	8f 01       	movw	r16, r30
 69c:	81 11       	cpse	r24, r1
 69e:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <m_usb_tx_char>
 6a2:	0e 15       	cp	r16, r14
 6a4:	1f 05       	cpc	r17, r15
 6a6:	b9 f7       	brne	.-18     	; 0x696 <m_usb_tx_int+0x3e>
 6a8:	27 96       	adiw	r28, 0x07	; 7
 6aa:	0f b6       	in	r0, 0x3f	; 63
 6ac:	f8 94       	cli
 6ae:	de bf       	out	0x3e, r29	; 62
 6b0:	0f be       	out	0x3f, r0	; 63
 6b2:	cd bf       	out	0x3d, r28	; 61
 6b4:	df 91       	pop	r29
 6b6:	cf 91       	pop	r28
 6b8:	1f 91       	pop	r17
 6ba:	0f 91       	pop	r16
 6bc:	ff 90       	pop	r15
 6be:	ef 90       	pop	r14
 6c0:	08 95       	ret

000006c2 <chooseInput>:

int i = 0;
int ADCarr[7] = {0, 0, 0, 0, 0, 0, 0};

void chooseInput(int i) {
	switch (i) {
 6c2:	83 30       	cpi	r24, 0x03	; 3
 6c4:	91 05       	cpc	r25, r1
 6c6:	09 f4       	brne	.+2      	; 0x6ca <chooseInput+0x8>
 6c8:	45 c0       	rjmp	.+138    	; 0x754 <chooseInput+0x92>
 6ca:	3c f4       	brge	.+14     	; 0x6da <chooseInput+0x18>
 6cc:	81 30       	cpi	r24, 0x01	; 1
 6ce:	91 05       	cpc	r25, r1
 6d0:	f9 f0       	breq	.+62     	; 0x710 <chooseInput+0x4e>
 6d2:	7c f5       	brge	.+94     	; 0x732 <chooseInput+0x70>
 6d4:	89 2b       	or	r24, r25
 6d6:	59 f0       	breq	.+22     	; 0x6ee <chooseInput+0x2c>
 6d8:	08 95       	ret
 6da:	85 30       	cpi	r24, 0x05	; 5
 6dc:	91 05       	cpc	r25, r1
 6de:	09 f4       	brne	.+2      	; 0x6e2 <chooseInput+0x20>
 6e0:	5b c0       	rjmp	.+182    	; 0x798 <chooseInput+0xd6>
 6e2:	0c f4       	brge	.+2      	; 0x6e6 <chooseInput+0x24>
 6e4:	48 c0       	rjmp	.+144    	; 0x776 <chooseInput+0xb4>
 6e6:	06 97       	sbiw	r24, 0x06	; 6
 6e8:	09 f0       	breq	.+2      	; 0x6ec <chooseInput+0x2a>
 6ea:	77 c0       	rjmp	.+238    	; 0x7da <chooseInput+0x118>
 6ec:	66 c0       	rjmp	.+204    	; 0x7ba <chooseInput+0xf8>
		case 0:
			clear(ADCSRB, MUX5);//Set analog input (F0)
 6ee:	eb e7       	ldi	r30, 0x7B	; 123
 6f0:	f0 e0       	ldi	r31, 0x00	; 0
 6f2:	80 81       	ld	r24, Z
 6f4:	8f 7d       	andi	r24, 0xDF	; 223
 6f6:	80 83       	st	Z, r24
			clear(ADMUX, MUX2);	//^
 6f8:	ec e7       	ldi	r30, 0x7C	; 124
 6fa:	f0 e0       	ldi	r31, 0x00	; 0
 6fc:	80 81       	ld	r24, Z
 6fe:	8b 7f       	andi	r24, 0xFB	; 251
 700:	80 83       	st	Z, r24
			clear(ADMUX, MUX1);	//^
 702:	80 81       	ld	r24, Z
 704:	8d 7f       	andi	r24, 0xFD	; 253
 706:	80 83       	st	Z, r24
			clear(ADMUX, MUX0);	//^
 708:	80 81       	ld	r24, Z
 70a:	8e 7f       	andi	r24, 0xFE	; 254
 70c:	80 83       	st	Z, r24
			break;
 70e:	08 95       	ret
		case 1:
			set(ADCSRB, MUX5);//Set analog input (D4)
 710:	eb e7       	ldi	r30, 0x7B	; 123
 712:	f0 e0       	ldi	r31, 0x00	; 0
 714:	80 81       	ld	r24, Z
 716:	80 62       	ori	r24, 0x20	; 32
 718:	80 83       	st	Z, r24
			clear(ADMUX, MUX2);	//^
 71a:	ec e7       	ldi	r30, 0x7C	; 124
 71c:	f0 e0       	ldi	r31, 0x00	; 0
 71e:	80 81       	ld	r24, Z
 720:	8b 7f       	andi	r24, 0xFB	; 251
 722:	80 83       	st	Z, r24
			clear(ADMUX, MUX1);	//^
 724:	80 81       	ld	r24, Z
 726:	8d 7f       	andi	r24, 0xFD	; 253
 728:	80 83       	st	Z, r24
			clear(ADMUX, MUX0);	//^
 72a:	80 81       	ld	r24, Z
 72c:	8e 7f       	andi	r24, 0xFE	; 254
 72e:	80 83       	st	Z, r24
			break;
 730:	08 95       	ret
		case 2:
			set(ADCSRB, MUX5);//Set analog input (D6)
 732:	eb e7       	ldi	r30, 0x7B	; 123
 734:	f0 e0       	ldi	r31, 0x00	; 0
 736:	80 81       	ld	r24, Z
 738:	80 62       	ori	r24, 0x20	; 32
 73a:	80 83       	st	Z, r24
			clear(ADMUX, MUX2);	//^
 73c:	ec e7       	ldi	r30, 0x7C	; 124
 73e:	f0 e0       	ldi	r31, 0x00	; 0
 740:	80 81       	ld	r24, Z
 742:	8b 7f       	andi	r24, 0xFB	; 251
 744:	80 83       	st	Z, r24
			clear(ADMUX, MUX1);	//^
 746:	80 81       	ld	r24, Z
 748:	8d 7f       	andi	r24, 0xFD	; 253
 74a:	80 83       	st	Z, r24
			set(ADMUX, MUX0);	//^
 74c:	80 81       	ld	r24, Z
 74e:	81 60       	ori	r24, 0x01	; 1
 750:	80 83       	st	Z, r24
			break;
 752:	08 95       	ret
		case 3:
			clear(ADCSRB, MUX5);//Set analog input (F6) PHOTOTRANSISTOR 1
 754:	eb e7       	ldi	r30, 0x7B	; 123
 756:	f0 e0       	ldi	r31, 0x00	; 0
 758:	80 81       	ld	r24, Z
 75a:	8f 7d       	andi	r24, 0xDF	; 223
 75c:	80 83       	st	Z, r24
			set(ADMUX, MUX2);	//^
 75e:	ec e7       	ldi	r30, 0x7C	; 124
 760:	f0 e0       	ldi	r31, 0x00	; 0
 762:	80 81       	ld	r24, Z
 764:	84 60       	ori	r24, 0x04	; 4
 766:	80 83       	st	Z, r24
			set(ADMUX, MUX1);	//^
 768:	80 81       	ld	r24, Z
 76a:	82 60       	ori	r24, 0x02	; 2
 76c:	80 83       	st	Z, r24
			clear(ADMUX, MUX0);	//^
 76e:	80 81       	ld	r24, Z
 770:	8e 7f       	andi	r24, 0xFE	; 254
 772:	80 83       	st	Z, r24
			break;
 774:	08 95       	ret
		case 4:
			clear(ADCSRB, MUX5);//Set analog input (F5)
 776:	eb e7       	ldi	r30, 0x7B	; 123
 778:	f0 e0       	ldi	r31, 0x00	; 0
 77a:	80 81       	ld	r24, Z
 77c:	8f 7d       	andi	r24, 0xDF	; 223
 77e:	80 83       	st	Z, r24
			set(ADMUX, MUX2);	//^
 780:	ec e7       	ldi	r30, 0x7C	; 124
 782:	f0 e0       	ldi	r31, 0x00	; 0
 784:	80 81       	ld	r24, Z
 786:	84 60       	ori	r24, 0x04	; 4
 788:	80 83       	st	Z, r24
			clear(ADMUX, MUX1);	//^
 78a:	80 81       	ld	r24, Z
 78c:	8d 7f       	andi	r24, 0xFD	; 253
 78e:	80 83       	st	Z, r24
			set(ADMUX, MUX0);	//^
 790:	80 81       	ld	r24, Z
 792:	81 60       	ori	r24, 0x01	; 1
 794:	80 83       	st	Z, r24
			break;
 796:	08 95       	ret
		case 5:
			clear(ADCSRB, MUX5);//Set analog input (F4)
 798:	eb e7       	ldi	r30, 0x7B	; 123
 79a:	f0 e0       	ldi	r31, 0x00	; 0
 79c:	80 81       	ld	r24, Z
 79e:	8f 7d       	andi	r24, 0xDF	; 223
 7a0:	80 83       	st	Z, r24
			set(ADMUX, MUX2);	//^
 7a2:	ec e7       	ldi	r30, 0x7C	; 124
 7a4:	f0 e0       	ldi	r31, 0x00	; 0
 7a6:	80 81       	ld	r24, Z
 7a8:	84 60       	ori	r24, 0x04	; 4
 7aa:	80 83       	st	Z, r24
			clear(ADMUX, MUX1);	//^
 7ac:	80 81       	ld	r24, Z
 7ae:	8d 7f       	andi	r24, 0xFD	; 253
 7b0:	80 83       	st	Z, r24
			clear(ADMUX, MUX0);	//^
 7b2:	80 81       	ld	r24, Z
 7b4:	8e 7f       	andi	r24, 0xFE	; 254
 7b6:	80 83       	st	Z, r24
			break;
 7b8:	08 95       	ret
		case 6:
			clear(ADCSRB, MUX5);//Set analog input (F1)
 7ba:	eb e7       	ldi	r30, 0x7B	; 123
 7bc:	f0 e0       	ldi	r31, 0x00	; 0
 7be:	80 81       	ld	r24, Z
 7c0:	8f 7d       	andi	r24, 0xDF	; 223
 7c2:	80 83       	st	Z, r24
			clear(ADMUX, MUX2);	//^
 7c4:	ec e7       	ldi	r30, 0x7C	; 124
 7c6:	f0 e0       	ldi	r31, 0x00	; 0
 7c8:	80 81       	ld	r24, Z
 7ca:	8b 7f       	andi	r24, 0xFB	; 251
 7cc:	80 83       	st	Z, r24
			clear(ADMUX, MUX1);	//^
 7ce:	80 81       	ld	r24, Z
 7d0:	8d 7f       	andi	r24, 0xFD	; 253
 7d2:	80 83       	st	Z, r24
			set(ADMUX, MUX0);	//^
 7d4:	80 81       	ld	r24, Z
 7d6:	81 60       	ori	r24, 0x01	; 1
 7d8:	80 83       	st	Z, r24
 7da:	08 95       	ret

000007dc <main>:


int main(void)
{
	
	m_clockdivide(0);
 7dc:	a1 e6       	ldi	r26, 0x61	; 97
 7de:	b0 e0       	ldi	r27, 0x00	; 0
 7e0:	80 e8       	ldi	r24, 0x80	; 128
 7e2:	8c 93       	st	X, r24
 7e4:	1c 92       	st	X, r1
	
		
	sei();					//Set up interrupts
 7e6:	78 94       	sei
	set(ADCSRA, ADIE);
 7e8:	ea e7       	ldi	r30, 0x7A	; 122
 7ea:	f0 e0       	ldi	r31, 0x00	; 0
 7ec:	90 81       	ld	r25, Z
 7ee:	98 60       	ori	r25, 0x08	; 8
 7f0:	90 83       	st	Z, r25
	
	clear(ADMUX, REFS1);	//Voltage reference is AR pin (5V)
 7f2:	cc e7       	ldi	r28, 0x7C	; 124
 7f4:	d0 e0       	ldi	r29, 0x00	; 0
 7f6:	98 81       	ld	r25, Y
 7f8:	9f 77       	andi	r25, 0x7F	; 127
 7fa:	98 83       	st	Y, r25
	clear(ADMUX, REFS0);	//^
 7fc:	98 81       	ld	r25, Y
 7fe:	9f 7b       	andi	r25, 0xBF	; 191
 800:	98 83       	st	Y, r25
	
	set(ADCSRA, ADPS2);	//Set scale to /128
 802:	90 81       	ld	r25, Z
 804:	94 60       	ori	r25, 0x04	; 4
 806:	90 83       	st	Z, r25
	set(ADCSRA, ADPS1);	//^
 808:	90 81       	ld	r25, Z
 80a:	92 60       	ori	r25, 0x02	; 2
 80c:	90 83       	st	Z, r25
	set(ADCSRA, ADPS0);	//^
 80e:	90 81       	ld	r25, Z
 810:	91 60       	ori	r25, 0x01	; 1
 812:	90 83       	st	Z, r25
	
	set(DIDR0, ADC0D);	//Disable digital input for F0
 814:	ce e7       	ldi	r28, 0x7E	; 126
 816:	d0 e0       	ldi	r29, 0x00	; 0
 818:	98 81       	ld	r25, Y
 81a:	91 60       	ori	r25, 0x01	; 1
 81c:	98 83       	st	Y, r25
	
	set(ADCSRA, ADATE);	//Set trigger to free-running mode
 81e:	90 81       	ld	r25, Z
 820:	90 62       	ori	r25, 0x20	; 32
 822:	90 83       	st	Z, r25
	
	set(ADCSRA, ADEN);	//Enable/Start conversion
 824:	90 81       	ld	r25, Z
 826:	90 68       	ori	r25, 0x80	; 128
 828:	90 83       	st	Z, r25
	set(ADCSRA, ADSC);	//^
 82a:	90 81       	ld	r25, Z
 82c:	90 64       	ori	r25, 0x40	; 64
 82e:	90 83       	st	Z, r25
	
	set(ADCSRA, ADIF);	//Enable reading results
 830:	90 81       	ld	r25, Z
 832:	90 61       	ori	r25, 0x10	; 16
 834:	90 83       	st	Z, r25
	
	//MATLAB PLOTTING STUFFS*****************************************************************
	m_clockdivide(0);
 836:	8c 93       	st	X, r24
 838:	1c 92       	st	X, r1
	
	
	m_red(ON);
 83a:	6e 9a       	sbi	0x0d, 6	; 13
 83c:	76 98       	cbi	0x0e, 6	; 14
	m_green(ON);
 83e:	6a 9a       	sbi	0x0d, 2	; 13
 840:	72 98       	cbi	0x0e, 2	; 14

	m_usb_init(); // connect usb
 842:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <m_usb_init>
	while(!m_usb_isconnected());  //wait for connection
 846:	0e 94 ed 00 	call	0x1da	; 0x1da <m_usb_isconnected>
 84a:	88 23       	and	r24, r24
 84c:	e1 f3       	breq	.-8      	; 0x846 <main+0x6a>

	m_red(OFF);
 84e:	6e 9a       	sbi	0x0d, 6	; 13
 850:	76 9a       	sbi	0x0e, 6	; 14
	m_green(OFF);
 852:	6a 9a       	sbi	0x0d, 2	; 13
 854:	72 9a       	sbi	0x0e, 2	; 14
	//int i;
	
	long counter = 0;

	while(1){
		m_red(TOGGLE);
 856:	6e 9a       	sbi	0x0d, 6	; 13
 858:	9e b1       	in	r25, 0x0e	; 14
 85a:	80 e4       	ldi	r24, 0x40	; 64
 85c:	89 27       	eor	r24, r25
 85e:	8e b9       	out	0x0e, r24	; 14
		m_green(TOGGLE);
 860:	6a 9a       	sbi	0x0d, 2	; 13
 862:	9e b1       	in	r25, 0x0e	; 14
 864:	84 e0       	ldi	r24, 0x04	; 4
 866:	89 27       	eor	r24, r25
 868:	8e b9       	out	0x0e, r24	; 14
	//char rx_buffer; //computer interactions
	//m_usb_tx_string("FUCK");
	
	//int i;
	
	long counter = 0;
 86a:	80 e0       	ldi	r24, 0x00	; 0
 86c:	90 e0       	ldi	r25, 0x00	; 0
 86e:	dc 01       	movw	r26, r24

	while(1){
		m_red(TOGGLE);
 870:	68 94       	set
 872:	66 24       	eor	r6, r6
 874:	66 f8       	bld	r6, 6
		m_green(TOGGLE);
 876:	68 94       	set
 878:	77 24       	eor	r7, r7
 87a:	72 f8       	bld	r7, 2
 87c:	0f 2e       	mov	r0, r31
 87e:	fc e0       	ldi	r31, 0x0C	; 12
 880:	cf 2e       	mov	r12, r31
 882:	f1 e0       	ldi	r31, 0x01	; 1
 884:	df 2e       	mov	r13, r31
 886:	f0 2d       	mov	r31, r0

		m_usb_rx_flush();  				//clear buffer*/

		
			//write ir buffer as concatenated hex:  i.e. f0f1f4f5
		if (counter == 300000) {
 888:	e1 2c       	mov	r14, r1
 88a:	f1 2c       	mov	r15, r1
				m_usb_tx_string(": ");
				m_usb_tx_int(ADCarr[j]);
				m_usb_tx_string("\t");
			}
			m_usb_tx_string("\n");
			counter = 0;
 88c:	81 2c       	mov	r8, r1
 88e:	91 2c       	mov	r9, r1
 890:	54 01       	movw	r10, r8
 892:	1f c0       	rjmp	.+62     	; 0x8d2 <main+0xf6>

		
			//write ir buffer as concatenated hex:  i.e. f0f1f4f5
		if (counter == 300000) {
			for (int j = 0; j < 7; j++) {
				m_usb_tx_string("ADC");
 894:	8f e5       	ldi	r24, 0x5F	; 95
 896:	91 e0       	ldi	r25, 0x01	; 1
 898:	0e 94 12 03 	call	0x624	; 0x624 <print_P>
				m_usb_tx_int(j);
 89c:	ce 01       	movw	r24, r28
 89e:	0e 94 2c 03 	call	0x658	; 0x658 <m_usb_tx_int>
				m_usb_tx_string(": ");
 8a2:	83 e6       	ldi	r24, 0x63	; 99
 8a4:	91 e0       	ldi	r25, 0x01	; 1
 8a6:	0e 94 12 03 	call	0x624	; 0x624 <print_P>
				m_usb_tx_int(ADCarr[j]);
 8aa:	f8 01       	movw	r30, r16
 8ac:	81 91       	ld	r24, Z+
 8ae:	91 91       	ld	r25, Z+
 8b0:	8f 01       	movw	r16, r30
 8b2:	0e 94 2c 03 	call	0x658	; 0x658 <m_usb_tx_int>
				m_usb_tx_string("\t");
 8b6:	86 e6       	ldi	r24, 0x66	; 102
 8b8:	91 e0       	ldi	r25, 0x01	; 1
 8ba:	0e 94 12 03 	call	0x624	; 0x624 <print_P>
		m_usb_rx_flush();  				//clear buffer*/

		
			//write ir buffer as concatenated hex:  i.e. f0f1f4f5
		if (counter == 300000) {
			for (int j = 0; j < 7; j++) {
 8be:	21 96       	adiw	r28, 0x01	; 1
 8c0:	c7 30       	cpi	r28, 0x07	; 7
 8c2:	d1 05       	cpc	r29, r1
 8c4:	39 f7       	brne	.-50     	; 0x894 <main+0xb8>
				m_usb_tx_int(j);
				m_usb_tx_string(": ");
				m_usb_tx_int(ADCarr[j]);
				m_usb_tx_string("\t");
			}
			m_usb_tx_string("\n");
 8c6:	88 e6       	ldi	r24, 0x68	; 104
 8c8:	91 e0       	ldi	r25, 0x01	; 1
 8ca:	0e 94 12 03 	call	0x624	; 0x624 <print_P>
			counter = 0;
 8ce:	d5 01       	movw	r26, r10
 8d0:	c4 01       	movw	r24, r8
		}
		counter++;
 8d2:	01 96       	adiw	r24, 0x01	; 1
 8d4:	a1 1d       	adc	r26, r1
 8d6:	b1 1d       	adc	r27, r1
	//int i;
	
	long counter = 0;

	while(1){
		m_red(TOGGLE);
 8d8:	6e 9a       	sbi	0x0d, 6	; 13
 8da:	2e b1       	in	r18, 0x0e	; 14
 8dc:	26 25       	eor	r18, r6
 8de:	2e b9       	out	0x0e, r18	; 14
		m_green(TOGGLE);
 8e0:	6a 9a       	sbi	0x0d, 2	; 13
 8e2:	2e b1       	in	r18, 0x0e	; 14
 8e4:	27 25       	eor	r18, r7
 8e6:	2e b9       	out	0x0e, r18	; 14

		m_usb_rx_flush();  				//clear buffer*/

		
			//write ir buffer as concatenated hex:  i.e. f0f1f4f5
		if (counter == 300000) {
 8e8:	80 3e       	cpi	r24, 0xE0	; 224
 8ea:	f3 e9       	ldi	r31, 0x93	; 147
 8ec:	9f 07       	cpc	r25, r31
 8ee:	f4 e0       	ldi	r31, 0x04	; 4
 8f0:	af 07       	cpc	r26, r31
 8f2:	b1 05       	cpc	r27, r1
 8f4:	71 f7       	brne	.-36     	; 0x8d2 <main+0xf6>
 8f6:	86 01       	movw	r16, r12
 8f8:	e7 01       	movw	r28, r14
 8fa:	cc cf       	rjmp	.-104    	; 0x894 <main+0xb8>

000008fc <__vector_29>:
		counter++;
	}
	
}

ISR(ADC_vect) {
 8fc:	1f 92       	push	r1
 8fe:	0f 92       	push	r0
 900:	0f b6       	in	r0, 0x3f	; 63
 902:	0f 92       	push	r0
 904:	11 24       	eor	r1, r1
 906:	2f 93       	push	r18
 908:	3f 93       	push	r19
 90a:	4f 93       	push	r20
 90c:	5f 93       	push	r21
 90e:	6f 93       	push	r22
 910:	7f 93       	push	r23
 912:	8f 93       	push	r24
 914:	9f 93       	push	r25
 916:	af 93       	push	r26
 918:	bf 93       	push	r27
 91a:	cf 93       	push	r28
 91c:	df 93       	push	r29
 91e:	ef 93       	push	r30
 920:	ff 93       	push	r31
	if (i < 7 && i >= 0) {
 922:	80 91 1a 01 	lds	r24, 0x011A
 926:	90 91 1b 01 	lds	r25, 0x011B
 92a:	87 30       	cpi	r24, 0x07	; 7
 92c:	91 05       	cpc	r25, r1
 92e:	58 f4       	brcc	.+22     	; 0x946 <__vector_29+0x4a>
		ADCarr[i] = ADC;
 930:	20 91 78 00 	lds	r18, 0x0078
 934:	30 91 79 00 	lds	r19, 0x0079
 938:	fc 01       	movw	r30, r24
 93a:	ee 0f       	add	r30, r30
 93c:	ff 1f       	adc	r31, r31
 93e:	e4 5f       	subi	r30, 0xF4	; 244
 940:	fe 4f       	sbci	r31, 0xFE	; 254
 942:	31 83       	std	Z+1, r19	; 0x01
 944:	20 83       	st	Z, r18
	}
	clear(ADCSRA, ADEN);	//Enable/Start conversion
 946:	ca e7       	ldi	r28, 0x7A	; 122
 948:	d0 e0       	ldi	r29, 0x00	; 0
 94a:	88 81       	ld	r24, Y
 94c:	8f 77       	andi	r24, 0x7F	; 127
 94e:	88 83       	st	Y, r24
	clear(ADCSRA, ADSC);	//^
 950:	88 81       	ld	r24, Y
 952:	8f 7b       	andi	r24, 0xBF	; 191
 954:	88 83       	st	Y, r24
	chooseInput(i);
 956:	80 91 1a 01 	lds	r24, 0x011A
 95a:	90 91 1b 01 	lds	r25, 0x011B
 95e:	0e 94 61 03 	call	0x6c2	; 0x6c2 <chooseInput>
	set(ADCSRA, ADEN);	//Enable/Start conversion
 962:	88 81       	ld	r24, Y
 964:	80 68       	ori	r24, 0x80	; 128
 966:	88 83       	st	Y, r24
	set(ADCSRA, ADSC);	//^
 968:	88 81       	ld	r24, Y
 96a:	80 64       	ori	r24, 0x40	; 64
 96c:	88 83       	st	Y, r24
	i++;
 96e:	80 91 1a 01 	lds	r24, 0x011A
 972:	90 91 1b 01 	lds	r25, 0x011B
 976:	01 96       	adiw	r24, 0x01	; 1
 978:	90 93 1b 01 	sts	0x011B, r25
 97c:	80 93 1a 01 	sts	0x011A, r24
 980:	ff 91       	pop	r31
 982:	ef 91       	pop	r30
 984:	df 91       	pop	r29
 986:	cf 91       	pop	r28
 988:	bf 91       	pop	r27
 98a:	af 91       	pop	r26
 98c:	9f 91       	pop	r25
 98e:	8f 91       	pop	r24
 990:	7f 91       	pop	r23
 992:	6f 91       	pop	r22
 994:	5f 91       	pop	r21
 996:	4f 91       	pop	r20
 998:	3f 91       	pop	r19
 99a:	2f 91       	pop	r18
 99c:	0f 90       	pop	r0
 99e:	0f be       	out	0x3f, r0	; 63
 9a0:	0f 90       	pop	r0
 9a2:	1f 90       	pop	r1
 9a4:	18 95       	reti

000009a6 <itoa>:
 9a6:	fb 01       	movw	r30, r22
 9a8:	9f 01       	movw	r18, r30
 9aa:	e8 94       	clt
 9ac:	42 30       	cpi	r20, 0x02	; 2
 9ae:	c4 f0       	brlt	.+48     	; 0x9e0 <itoa+0x3a>
 9b0:	45 32       	cpi	r20, 0x25	; 37
 9b2:	b4 f4       	brge	.+44     	; 0x9e0 <itoa+0x3a>
 9b4:	4a 30       	cpi	r20, 0x0A	; 10
 9b6:	29 f4       	brne	.+10     	; 0x9c2 <itoa+0x1c>
 9b8:	97 fb       	bst	r25, 7
 9ba:	1e f4       	brtc	.+6      	; 0x9c2 <itoa+0x1c>
 9bc:	90 95       	com	r25
 9be:	81 95       	neg	r24
 9c0:	9f 4f       	sbci	r25, 0xFF	; 255
 9c2:	64 2f       	mov	r22, r20
 9c4:	77 27       	eor	r23, r23
 9c6:	0e 94 04 05 	call	0xa08	; 0xa08 <__udivmodhi4>
 9ca:	80 5d       	subi	r24, 0xD0	; 208
 9cc:	8a 33       	cpi	r24, 0x3A	; 58
 9ce:	0c f0       	brlt	.+2      	; 0x9d2 <itoa+0x2c>
 9d0:	89 5d       	subi	r24, 0xD9	; 217
 9d2:	81 93       	st	Z+, r24
 9d4:	cb 01       	movw	r24, r22
 9d6:	00 97       	sbiw	r24, 0x00	; 0
 9d8:	a1 f7       	brne	.-24     	; 0x9c2 <itoa+0x1c>
 9da:	16 f4       	brtc	.+4      	; 0x9e0 <itoa+0x3a>
 9dc:	5d e2       	ldi	r21, 0x2D	; 45
 9de:	51 93       	st	Z+, r21
 9e0:	10 82       	st	Z, r1
 9e2:	c9 01       	movw	r24, r18
 9e4:	0c 94 f4 04 	jmp	0x9e8	; 0x9e8 <strrev>

000009e8 <strrev>:
 9e8:	dc 01       	movw	r26, r24
 9ea:	fc 01       	movw	r30, r24
 9ec:	67 2f       	mov	r22, r23
 9ee:	71 91       	ld	r23, Z+
 9f0:	77 23       	and	r23, r23
 9f2:	e1 f7       	brne	.-8      	; 0x9ec <strrev+0x4>
 9f4:	32 97       	sbiw	r30, 0x02	; 2
 9f6:	04 c0       	rjmp	.+8      	; 0xa00 <strrev+0x18>
 9f8:	7c 91       	ld	r23, X
 9fa:	6d 93       	st	X+, r22
 9fc:	70 83       	st	Z, r23
 9fe:	62 91       	ld	r22, -Z
 a00:	ae 17       	cp	r26, r30
 a02:	bf 07       	cpc	r27, r31
 a04:	c8 f3       	brcs	.-14     	; 0x9f8 <strrev+0x10>
 a06:	08 95       	ret

00000a08 <__udivmodhi4>:
 a08:	aa 1b       	sub	r26, r26
 a0a:	bb 1b       	sub	r27, r27
 a0c:	51 e1       	ldi	r21, 0x11	; 17
 a0e:	07 c0       	rjmp	.+14     	; 0xa1e <__udivmodhi4_ep>

00000a10 <__udivmodhi4_loop>:
 a10:	aa 1f       	adc	r26, r26
 a12:	bb 1f       	adc	r27, r27
 a14:	a6 17       	cp	r26, r22
 a16:	b7 07       	cpc	r27, r23
 a18:	10 f0       	brcs	.+4      	; 0xa1e <__udivmodhi4_ep>
 a1a:	a6 1b       	sub	r26, r22
 a1c:	b7 0b       	sbc	r27, r23

00000a1e <__udivmodhi4_ep>:
 a1e:	88 1f       	adc	r24, r24
 a20:	99 1f       	adc	r25, r25
 a22:	5a 95       	dec	r21
 a24:	a9 f7       	brne	.-22     	; 0xa10 <__udivmodhi4_loop>
 a26:	80 95       	com	r24
 a28:	90 95       	com	r25
 a2a:	bc 01       	movw	r22, r24
 a2c:	cd 01       	movw	r24, r26
 a2e:	08 95       	ret

00000a30 <_exit>:
 a30:	f8 94       	cli

00000a32 <__stop_program>:
 a32:	ff cf       	rjmp	.-2      	; 0xa32 <__stop_program>
