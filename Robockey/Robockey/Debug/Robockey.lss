
Robockey.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000008  00800100  0000095a  000009ee  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000095a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000005  00800108  00800108  000009f6  2**0
                  ALLOC
  3 .stab         00000804  00000000  00000000  000009f8  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      000002ed  00000000  00000000  000011fc  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      0000002f  00000000  00000000  000014e9  2**0
                  CONTENTS, READONLY
  6 .debug_aranges 00000248  00000000  00000000  00001518  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00001dd5  00000000  00000000  00001760  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000007b0  00000000  00000000  00003535  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00000de4  00000000  00000000  00003ce5  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000610  00000000  00000000  00004acc  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    000006a6  00000000  00000000  000050dc  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    0000254d  00000000  00000000  00005782  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000238  00000000  00000000  00007ccf  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 b0 00 	jmp	0x160	; 0x160 <__ctors_end>
   4:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>
   8:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>
   c:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>
  10:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>
  14:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>
  18:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>
  1c:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>
  20:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>
  24:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>
  28:	0c 94 8c 01 	jmp	0x318	; 0x318 <__vector_10>
  2c:	0c 94 ca 01 	jmp	0x394	; 0x394 <__vector_11>
  30:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>
  34:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>
  38:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>
  3c:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>
  40:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>
  44:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>
  48:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>
  4c:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>
  50:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>
  54:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>
  58:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>
  5c:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>
  60:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>
  64:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>
  68:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>
  6c:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>
  70:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>
  74:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>
  78:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>
  7c:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>
  80:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>
  84:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>
  88:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>
  8c:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>
  90:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>
  94:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>
  98:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>
  9c:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>
  a0:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>
  a4:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

  a8:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>

000000ac <descriptor_list>:
  ac:	00 01 00 00 e0 00 12 00 02 00 00 f2 00 43 00 03     .............C..
  bc:	00 00 35 01 04 01 03 09 04 39 01 12 02 03 09 04     ..5......9......
  cc:	4d 01 06 03 03 09 04 55 01 08                       M......U..

000000d6 <endpoint_config_table>:
  d6:	00 01 c1 12 01 80 36 01 81 36                       ......6..6

000000e0 <device_descriptor>:
  e0:	12 01 00 02 02 00 00 10 c0 16 7a 04 00 01 01 02     ..........z.....
  f0:	03 01                                               ..

000000f2 <config1_descriptor>:
  f2:	09 02 43 00 02 01 00 c0 32 09 04 00 00 01 02 02     ..C.....2.......
 102:	01 00 05 24 00 10 01 05 24 01 01 01 04 24 02 06     ...$....$....$..
 112:	05 24 06 00 01 07 05 82 03 10 00 40 09 04 01 00     .$.........@....
 122:	02 0a 00 00 00 07 05 03 02 40 00 00 07 05 84 02     .........@......
 132:	40 00 00                                            @..

00000135 <string0>:
 135:	04 03 09 04                                         ....

00000139 <string1>:
 139:	12 03 4a 00 2e 00 20 00 46 00 69 00 65 00 6e 00     ..J... .F.i.e.n.
 149:	65 00 00 00                                         e...

0000014d <string2>:
 14d:	06 03 4d 00 32 00 00 00                             ..M.2...

00000155 <string3>:
 155:	08 03 34 00 31 00 30 00 00 00 00                    ..4.1.0....

00000160 <__ctors_end>:
 160:	11 24       	eor	r1, r1
 162:	1f be       	out	0x3f, r1	; 63
 164:	cf ef       	ldi	r28, 0xFF	; 255
 166:	da e0       	ldi	r29, 0x0A	; 10
 168:	de bf       	out	0x3e, r29	; 62
 16a:	cd bf       	out	0x3d, r28	; 61

0000016c <__do_copy_data>:
 16c:	11 e0       	ldi	r17, 0x01	; 1
 16e:	a0 e0       	ldi	r26, 0x00	; 0
 170:	b1 e0       	ldi	r27, 0x01	; 1
 172:	ea e5       	ldi	r30, 0x5A	; 90
 174:	f9 e0       	ldi	r31, 0x09	; 9
 176:	02 c0       	rjmp	.+4      	; 0x17c <__do_copy_data+0x10>
 178:	05 90       	lpm	r0, Z+
 17a:	0d 92       	st	X+, r0
 17c:	a8 30       	cpi	r26, 0x08	; 8
 17e:	b1 07       	cpc	r27, r17
 180:	d9 f7       	brne	.-10     	; 0x178 <__do_copy_data+0xc>

00000182 <__do_clear_bss>:
 182:	21 e0       	ldi	r18, 0x01	; 1
 184:	a8 e0       	ldi	r26, 0x08	; 8
 186:	b1 e0       	ldi	r27, 0x01	; 1
 188:	01 c0       	rjmp	.+2      	; 0x18c <.do_clear_bss_start>

0000018a <.do_clear_bss_loop>:
 18a:	1d 92       	st	X+, r1

0000018c <.do_clear_bss_start>:
 18c:	ad 30       	cpi	r26, 0x0D	; 13
 18e:	b2 07       	cpc	r27, r18
 190:	e1 f7       	brne	.-8      	; 0x18a <.do_clear_bss_loop>
 192:	0e 94 66 03 	call	0x6cc	; 0x6cc <main>
 196:	0c 94 ab 04 	jmp	0x956	; 0x956 <_exit>

0000019a <__bad_interrupt>:
 19a:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000019e <m_bus_init>:
 19e:	58 9a       	sbi	0x0b, 0	; 11
 1a0:	59 9a       	sbi	0x0b, 1	; 11
 1a2:	5a 9a       	sbi	0x0b, 2	; 11
 1a4:	8c e0       	ldi	r24, 0x0C	; 12
 1a6:	80 93 b8 00 	sts	0x00B8, r24
 1aa:	e9 e6       	ldi	r30, 0x69	; 105
 1ac:	f0 e0       	ldi	r31, 0x00	; 0
 1ae:	80 81       	ld	r24, Z
 1b0:	80 62       	ori	r24, 0x20	; 32
 1b2:	80 83       	st	Z, r24
 1b4:	80 81       	ld	r24, Z
 1b6:	8f 7e       	andi	r24, 0xEF	; 239
 1b8:	80 83       	st	Z, r24
 1ba:	ea 9a       	sbi	0x1d, 2	; 29
 1bc:	78 94       	sei
 1be:	08 95       	ret

000001c0 <m_rf_open>:
 1c0:	1f 93       	push	r17
 1c2:	cf 93       	push	r28
 1c4:	df 93       	push	r29
 1c6:	18 2f       	mov	r17, r24
 1c8:	d6 2f       	mov	r29, r22
 1ca:	c4 2f       	mov	r28, r20
 1cc:	0e 94 cf 00 	call	0x19e	; 0x19e <m_bus_init>
 1d0:	94 ea       	ldi	r25, 0xA4	; 164
 1d2:	90 93 bc 00 	sts	0x00BC, r25
 1d6:	ec eb       	ldi	r30, 0xBC	; 188
 1d8:	f0 e0       	ldi	r31, 0x00	; 0
 1da:	90 81       	ld	r25, Z
 1dc:	99 23       	and	r25, r25
 1de:	ec f7       	brge	.-6      	; 0x1da <m_rf_open+0x1a>
 1e0:	90 e5       	ldi	r25, 0x50	; 80
 1e2:	90 93 bb 00 	sts	0x00BB, r25
 1e6:	94 e8       	ldi	r25, 0x84	; 132
 1e8:	90 93 bc 00 	sts	0x00BC, r25
 1ec:	ec eb       	ldi	r30, 0xBC	; 188
 1ee:	f0 e0       	ldi	r31, 0x00	; 0
 1f0:	90 81       	ld	r25, Z
 1f2:	99 23       	and	r25, r25
 1f4:	ec f7       	brge	.-6      	; 0x1f0 <m_rf_open+0x30>
 1f6:	90 91 b9 00 	lds	r25, 0x00B9
 1fa:	98 7f       	andi	r25, 0xF8	; 248
 1fc:	90 32       	cpi	r25, 0x20	; 32
 1fe:	29 f4       	brne	.+10     	; 0x20a <m_rf_open+0x4a>
 200:	84 e9       	ldi	r24, 0x94	; 148
 202:	80 93 bc 00 	sts	0x00BC, r24
 206:	80 e0       	ldi	r24, 0x00	; 0
 208:	2d c0       	rjmp	.+90     	; 0x264 <m_rf_open+0xa4>
 20a:	81 e0       	ldi	r24, 0x01	; 1
 20c:	80 93 bb 00 	sts	0x00BB, r24
 210:	84 e8       	ldi	r24, 0x84	; 132
 212:	80 93 bc 00 	sts	0x00BC, r24
 216:	ec eb       	ldi	r30, 0xBC	; 188
 218:	f0 e0       	ldi	r31, 0x00	; 0
 21a:	90 81       	ld	r25, Z
 21c:	99 23       	and	r25, r25
 21e:	ec f7       	brge	.-6      	; 0x21a <m_rf_open+0x5a>
 220:	10 93 bb 00 	sts	0x00BB, r17
 224:	84 e8       	ldi	r24, 0x84	; 132
 226:	80 93 bc 00 	sts	0x00BC, r24
 22a:	ec eb       	ldi	r30, 0xBC	; 188
 22c:	f0 e0       	ldi	r31, 0x00	; 0
 22e:	80 81       	ld	r24, Z
 230:	88 23       	and	r24, r24
 232:	ec f7       	brge	.-6      	; 0x22e <m_rf_open+0x6e>
 234:	d0 93 bb 00 	sts	0x00BB, r29
 238:	84 e8       	ldi	r24, 0x84	; 132
 23a:	80 93 bc 00 	sts	0x00BC, r24
 23e:	ec eb       	ldi	r30, 0xBC	; 188
 240:	f0 e0       	ldi	r31, 0x00	; 0
 242:	80 81       	ld	r24, Z
 244:	88 23       	and	r24, r24
 246:	ec f7       	brge	.-6      	; 0x242 <m_rf_open+0x82>
 248:	c0 93 bb 00 	sts	0x00BB, r28
 24c:	84 e8       	ldi	r24, 0x84	; 132
 24e:	80 93 bc 00 	sts	0x00BC, r24
 252:	ec eb       	ldi	r30, 0xBC	; 188
 254:	f0 e0       	ldi	r31, 0x00	; 0
 256:	80 81       	ld	r24, Z
 258:	88 23       	and	r24, r24
 25a:	ec f7       	brge	.-6      	; 0x256 <m_rf_open+0x96>
 25c:	84 e9       	ldi	r24, 0x94	; 148
 25e:	80 93 bc 00 	sts	0x00BC, r24
 262:	81 e0       	ldi	r24, 0x01	; 1
 264:	df 91       	pop	r29
 266:	cf 91       	pop	r28
 268:	1f 91       	pop	r17
 26a:	08 95       	ret

0000026c <m_rf_send>:
 26c:	cf 93       	push	r28
 26e:	df 93       	push	r29
 270:	f8 94       	cli
 272:	94 ea       	ldi	r25, 0xA4	; 164
 274:	90 93 bc 00 	sts	0x00BC, r25
 278:	ec eb       	ldi	r30, 0xBC	; 188
 27a:	f0 e0       	ldi	r31, 0x00	; 0
 27c:	90 81       	ld	r25, Z
 27e:	99 23       	and	r25, r25
 280:	ec f7       	brge	.-6      	; 0x27c <m_rf_send+0x10>
 282:	90 e5       	ldi	r25, 0x50	; 80
 284:	90 93 bb 00 	sts	0x00BB, r25
 288:	94 e8       	ldi	r25, 0x84	; 132
 28a:	90 93 bc 00 	sts	0x00BC, r25
 28e:	ec eb       	ldi	r30, 0xBC	; 188
 290:	f0 e0       	ldi	r31, 0x00	; 0
 292:	90 81       	ld	r25, Z
 294:	99 23       	and	r25, r25
 296:	ec f7       	brge	.-6      	; 0x292 <m_rf_send+0x26>
 298:	90 91 b9 00 	lds	r25, 0x00B9
 29c:	98 7f       	andi	r25, 0xF8	; 248
 29e:	90 32       	cpi	r25, 0x20	; 32
 2a0:	31 f4       	brne	.+12     	; 0x2ae <m_rf_send+0x42>
 2a2:	84 e9       	ldi	r24, 0x94	; 148
 2a4:	80 93 bc 00 	sts	0x00BC, r24
 2a8:	78 94       	sei
 2aa:	80 e0       	ldi	r24, 0x00	; 0
 2ac:	32 c0       	rjmp	.+100    	; 0x312 <m_rf_send+0xa6>
 2ae:	93 e0       	ldi	r25, 0x03	; 3
 2b0:	90 93 bb 00 	sts	0x00BB, r25
 2b4:	94 e8       	ldi	r25, 0x84	; 132
 2b6:	90 93 bc 00 	sts	0x00BC, r25
 2ba:	ec eb       	ldi	r30, 0xBC	; 188
 2bc:	f0 e0       	ldi	r31, 0x00	; 0
 2be:	90 81       	ld	r25, Z
 2c0:	99 23       	and	r25, r25
 2c2:	ec f7       	brge	.-6      	; 0x2be <m_rf_send+0x52>
 2c4:	80 93 bb 00 	sts	0x00BB, r24
 2c8:	84 e8       	ldi	r24, 0x84	; 132
 2ca:	80 93 bc 00 	sts	0x00BC, r24
 2ce:	ec eb       	ldi	r30, 0xBC	; 188
 2d0:	f0 e0       	ldi	r31, 0x00	; 0
 2d2:	80 81       	ld	r24, Z
 2d4:	88 23       	and	r24, r24
 2d6:	ec f7       	brge	.-6      	; 0x2d2 <m_rf_send+0x66>
 2d8:	24 2f       	mov	r18, r20
 2da:	30 e0       	ldi	r19, 0x00	; 0
 2dc:	12 16       	cp	r1, r18
 2de:	13 06       	cpc	r1, r19
 2e0:	9c f4       	brge	.+38     	; 0x308 <m_rf_send+0x9c>
 2e2:	a6 2f       	mov	r26, r22
 2e4:	b7 2f       	mov	r27, r23
 2e6:	80 e0       	ldi	r24, 0x00	; 0
 2e8:	90 e0       	ldi	r25, 0x00	; 0
 2ea:	cb eb       	ldi	r28, 0xBB	; 187
 2ec:	d0 e0       	ldi	r29, 0x00	; 0
 2ee:	ec eb       	ldi	r30, 0xBC	; 188
 2f0:	f0 e0       	ldi	r31, 0x00	; 0
 2f2:	54 e8       	ldi	r21, 0x84	; 132
 2f4:	4d 91       	ld	r20, X+
 2f6:	48 83       	st	Y, r20
 2f8:	50 83       	st	Z, r21
 2fa:	40 81       	ld	r20, Z
 2fc:	44 23       	and	r20, r20
 2fe:	ec f7       	brge	.-6      	; 0x2fa <m_rf_send+0x8e>
 300:	01 96       	adiw	r24, 0x01	; 1
 302:	82 17       	cp	r24, r18
 304:	93 07       	cpc	r25, r19
 306:	b4 f3       	brlt	.-20     	; 0x2f4 <m_rf_send+0x88>
 308:	84 e9       	ldi	r24, 0x94	; 148
 30a:	80 93 bc 00 	sts	0x00BC, r24
 30e:	78 94       	sei
 310:	81 e0       	ldi	r24, 0x01	; 1
 312:	df 91       	pop	r29
 314:	cf 91       	pop	r28
 316:	08 95       	ret

00000318 <__vector_10>:
 318:	1f 92       	push	r1
 31a:	0f 92       	push	r0
 31c:	0f b6       	in	r0, 0x3f	; 63
 31e:	0f 92       	push	r0
 320:	11 24       	eor	r1, r1
 322:	8f 93       	push	r24
 324:	9f 93       	push	r25
 326:	ef 93       	push	r30
 328:	ff 93       	push	r31
 32a:	e1 ee       	ldi	r30, 0xE1	; 225
 32c:	f0 e0       	ldi	r31, 0x00	; 0
 32e:	80 81       	ld	r24, Z
 330:	10 82       	st	Z, r1
 332:	83 ff       	sbrs	r24, 3
 334:	11 c0       	rjmp	.+34     	; 0x358 <__vector_10+0x40>
 336:	10 92 e9 00 	sts	0x00E9, r1
 33a:	91 e0       	ldi	r25, 0x01	; 1
 33c:	90 93 eb 00 	sts	0x00EB, r25
 340:	10 92 ec 00 	sts	0x00EC, r1
 344:	92 e1       	ldi	r25, 0x12	; 18
 346:	90 93 ed 00 	sts	0x00ED, r25
 34a:	98 e0       	ldi	r25, 0x08	; 8
 34c:	90 93 f0 00 	sts	0x00F0, r25
 350:	10 92 09 01 	sts	0x0109, r1
 354:	10 92 0a 01 	sts	0x010A, r1
 358:	82 ff       	sbrs	r24, 2
 35a:	13 c0       	rjmp	.+38     	; 0x382 <__vector_10+0x6a>
 35c:	80 91 09 01 	lds	r24, 0x0109
 360:	88 23       	and	r24, r24
 362:	79 f0       	breq	.+30     	; 0x382 <__vector_10+0x6a>
 364:	80 91 08 01 	lds	r24, 0x0108
 368:	88 23       	and	r24, r24
 36a:	59 f0       	breq	.+22     	; 0x382 <__vector_10+0x6a>
 36c:	81 50       	subi	r24, 0x01	; 1
 36e:	80 93 08 01 	sts	0x0108, r24
 372:	81 11       	cpse	r24, r1
 374:	06 c0       	rjmp	.+12     	; 0x382 <__vector_10+0x6a>
 376:	84 e0       	ldi	r24, 0x04	; 4
 378:	80 93 e9 00 	sts	0x00E9, r24
 37c:	8a e3       	ldi	r24, 0x3A	; 58
 37e:	80 93 e8 00 	sts	0x00E8, r24
 382:	ff 91       	pop	r31
 384:	ef 91       	pop	r30
 386:	9f 91       	pop	r25
 388:	8f 91       	pop	r24
 38a:	0f 90       	pop	r0
 38c:	0f be       	out	0x3f, r0	; 63
 38e:	0f 90       	pop	r0
 390:	1f 90       	pop	r1
 392:	18 95       	reti

00000394 <__vector_11>:
 394:	1f 92       	push	r1
 396:	0f 92       	push	r0
 398:	0f b6       	in	r0, 0x3f	; 63
 39a:	0f 92       	push	r0
 39c:	11 24       	eor	r1, r1
 39e:	0f 93       	push	r16
 3a0:	1f 93       	push	r17
 3a2:	2f 93       	push	r18
 3a4:	3f 93       	push	r19
 3a6:	4f 93       	push	r20
 3a8:	5f 93       	push	r21
 3aa:	6f 93       	push	r22
 3ac:	7f 93       	push	r23
 3ae:	8f 93       	push	r24
 3b0:	9f 93       	push	r25
 3b2:	af 93       	push	r26
 3b4:	bf 93       	push	r27
 3b6:	cf 93       	push	r28
 3b8:	df 93       	push	r29
 3ba:	ef 93       	push	r30
 3bc:	ff 93       	push	r31
 3be:	10 92 e9 00 	sts	0x00E9, r1
 3c2:	80 91 e8 00 	lds	r24, 0x00E8
 3c6:	83 ff       	sbrs	r24, 3
 3c8:	51 c1       	rjmp	.+674    	; 0x66c <__vector_11+0x2d8>
 3ca:	e1 ef       	ldi	r30, 0xF1	; 241
 3cc:	f0 e0       	ldi	r31, 0x00	; 0
 3ce:	70 81       	ld	r23, Z
 3d0:	40 81       	ld	r20, Z
 3d2:	20 81       	ld	r18, Z
 3d4:	30 81       	ld	r19, Z
 3d6:	93 2f       	mov	r25, r19
 3d8:	80 e0       	ldi	r24, 0x00	; 0
 3da:	dc 01       	movw	r26, r24
 3dc:	a2 2b       	or	r26, r18
 3de:	9d 01       	movw	r18, r26
 3e0:	50 81       	ld	r21, Z
 3e2:	60 81       	ld	r22, Z
 3e4:	96 2f       	mov	r25, r22
 3e6:	80 e0       	ldi	r24, 0x00	; 0
 3e8:	85 2b       	or	r24, r21
 3ea:	a0 81       	ld	r26, Z
 3ec:	b0 81       	ld	r27, Z
 3ee:	52 ef       	ldi	r21, 0xF2	; 242
 3f0:	50 93 e8 00 	sts	0x00E8, r21
 3f4:	46 30       	cpi	r20, 0x06	; 6
 3f6:	09 f0       	breq	.+2      	; 0x3fa <__vector_11+0x66>
 3f8:	5c c0       	rjmp	.+184    	; 0x4b2 <__vector_11+0x11e>
 3fa:	04 c0       	rjmp	.+8      	; 0x404 <__vector_11+0x70>
 3fc:	81 e2       	ldi	r24, 0x21	; 33
 3fe:	80 93 eb 00 	sts	0x00EB, r24
 402:	3b c1       	rjmp	.+630    	; 0x67a <__vector_11+0x2e6>
 404:	c6 e0       	ldi	r28, 0x06	; 6
 406:	4c ea       	ldi	r20, 0xAC	; 172
 408:	50 e0       	ldi	r21, 0x00	; 0
 40a:	fa 01       	movw	r30, r20
 40c:	65 91       	lpm	r22, Z+
 40e:	74 91       	lpm	r23, Z
 410:	26 17       	cp	r18, r22
 412:	37 07       	cpc	r19, r23
 414:	19 f0       	breq	.+6      	; 0x41c <__vector_11+0x88>
 416:	49 5f       	subi	r20, 0xF9	; 249
 418:	5f 4f       	sbci	r21, 0xFF	; 255
 41a:	20 c0       	rjmp	.+64     	; 0x45c <__vector_11+0xc8>
 41c:	fa 01       	movw	r30, r20
 41e:	32 96       	adiw	r30, 0x02	; 2
 420:	65 91       	lpm	r22, Z+
 422:	74 91       	lpm	r23, Z
 424:	86 17       	cp	r24, r22
 426:	97 07       	cpc	r25, r23
 428:	19 f0       	breq	.+6      	; 0x430 <__vector_11+0x9c>
 42a:	49 5f       	subi	r20, 0xF9	; 249
 42c:	5f 4f       	sbci	r21, 0xFF	; 255
 42e:	16 c0       	rjmp	.+44     	; 0x45c <__vector_11+0xc8>
 430:	fa 01       	movw	r30, r20
 432:	34 96       	adiw	r30, 0x04	; 4
 434:	85 91       	lpm	r24, Z+
 436:	94 91       	lpm	r25, Z
 438:	28 2f       	mov	r18, r24
 43a:	39 2f       	mov	r19, r25
 43c:	fa 01       	movw	r30, r20
 43e:	36 96       	adiw	r30, 0x06	; 6
 440:	44 91       	lpm	r20, Z
 442:	9b 2f       	mov	r25, r27
 444:	80 e0       	ldi	r24, 0x00	; 0
 446:	8a 2b       	or	r24, r26
 448:	8f 3f       	cpi	r24, 0xFF	; 255
 44a:	91 05       	cpc	r25, r1
 44c:	19 f0       	breq	.+6      	; 0x454 <__vector_11+0xc0>
 44e:	10 f0       	brcs	.+4      	; 0x454 <__vector_11+0xc0>
 450:	8f ef       	ldi	r24, 0xFF	; 255
 452:	90 e0       	ldi	r25, 0x00	; 0
 454:	84 17       	cp	r24, r20
 456:	28 f4       	brcc	.+10     	; 0x462 <__vector_11+0xce>
 458:	48 2f       	mov	r20, r24
 45a:	03 c0       	rjmp	.+6      	; 0x462 <__vector_11+0xce>
 45c:	c1 50       	subi	r28, 0x01	; 1
 45e:	a9 f6       	brne	.-86     	; 0x40a <__vector_11+0x76>
 460:	cd cf       	rjmp	.-102    	; 0x3fc <__vector_11+0x68>
 462:	c8 ee       	ldi	r28, 0xE8	; 232
 464:	d0 e0       	ldi	r29, 0x00	; 0
 466:	7e ef       	ldi	r23, 0xFE	; 254
 468:	a1 ef       	ldi	r26, 0xF1	; 241
 46a:	b0 e0       	ldi	r27, 0x00	; 0
 46c:	10 e1       	ldi	r17, 0x10	; 16
 46e:	88 81       	ld	r24, Y
 470:	98 2f       	mov	r25, r24
 472:	95 70       	andi	r25, 0x05	; 5
 474:	e1 f3       	breq	.-8      	; 0x46e <__vector_11+0xda>
 476:	82 fd       	sbrc	r24, 2
 478:	00 c1       	rjmp	.+512    	; 0x67a <__vector_11+0x2e6>
 47a:	64 2f       	mov	r22, r20
 47c:	41 31       	cpi	r20, 0x11	; 17
 47e:	08 f0       	brcs	.+2      	; 0x482 <__vector_11+0xee>
 480:	61 2f       	mov	r22, r17
 482:	66 23       	and	r22, r22
 484:	09 f4       	brne	.+2      	; 0x488 <__vector_11+0xf4>
 486:	f6 c0       	rjmp	.+492    	; 0x674 <__vector_11+0x2e0>
 488:	c9 01       	movw	r24, r18
 48a:	56 2f       	mov	r21, r22
 48c:	fc 01       	movw	r30, r24
 48e:	01 96       	adiw	r24, 0x01	; 1
 490:	e4 91       	lpm	r30, Z
 492:	ec 93       	st	X, r30
 494:	51 50       	subi	r21, 0x01	; 1
 496:	d1 f7       	brne	.-12     	; 0x48c <__vector_11+0xf8>
 498:	86 2f       	mov	r24, r22
 49a:	81 50       	subi	r24, 0x01	; 1
 49c:	90 e0       	ldi	r25, 0x00	; 0
 49e:	01 96       	adiw	r24, 0x01	; 1
 4a0:	28 0f       	add	r18, r24
 4a2:	39 1f       	adc	r19, r25
 4a4:	46 1b       	sub	r20, r22
 4a6:	78 83       	st	Y, r23
 4a8:	41 11       	cpse	r20, r1
 4aa:	e1 cf       	rjmp	.-62     	; 0x46e <__vector_11+0xda>
 4ac:	60 31       	cpi	r22, 0x10	; 16
 4ae:	f9 f2       	breq	.-66     	; 0x46e <__vector_11+0xda>
 4b0:	e4 c0       	rjmp	.+456    	; 0x67a <__vector_11+0x2e6>
 4b2:	45 30       	cpi	r20, 0x05	; 5
 4b4:	61 f4       	brne	.+24     	; 0x4ce <__vector_11+0x13a>
 4b6:	8e ef       	ldi	r24, 0xFE	; 254
 4b8:	80 93 e8 00 	sts	0x00E8, r24
 4bc:	e8 ee       	ldi	r30, 0xE8	; 232
 4be:	f0 e0       	ldi	r31, 0x00	; 0
 4c0:	80 81       	ld	r24, Z
 4c2:	80 ff       	sbrs	r24, 0
 4c4:	fd cf       	rjmp	.-6      	; 0x4c0 <__vector_11+0x12c>
 4c6:	20 68       	ori	r18, 0x80	; 128
 4c8:	20 93 e3 00 	sts	0x00E3, r18
 4cc:	d6 c0       	rjmp	.+428    	; 0x67a <__vector_11+0x2e6>
 4ce:	49 30       	cpi	r20, 0x09	; 9
 4d0:	a1 f5       	brne	.+104    	; 0x53a <__vector_11+0x1a6>
 4d2:	71 11       	cpse	r23, r1
 4d4:	5b c0       	rjmp	.+182    	; 0x58c <__vector_11+0x1f8>
 4d6:	20 93 09 01 	sts	0x0109, r18
 4da:	10 92 0a 01 	sts	0x010A, r1
 4de:	10 92 08 01 	sts	0x0108, r1
 4e2:	8e ef       	ldi	r24, 0xFE	; 254
 4e4:	80 93 e8 00 	sts	0x00E8, r24
 4e8:	11 e0       	ldi	r17, 0x01	; 1
 4ea:	86 ed       	ldi	r24, 0xD6	; 214
 4ec:	90 e0       	ldi	r25, 0x00	; 0
 4ee:	c9 ee       	ldi	r28, 0xE9	; 233
 4f0:	d0 e0       	ldi	r29, 0x00	; 0
 4f2:	ab ee       	ldi	r26, 0xEB	; 235
 4f4:	b0 e0       	ldi	r27, 0x00	; 0
 4f6:	6c ee       	ldi	r22, 0xEC	; 236
 4f8:	70 e0       	ldi	r23, 0x00	; 0
 4fa:	4d ee       	ldi	r20, 0xED	; 237
 4fc:	50 e0       	ldi	r21, 0x00	; 0
 4fe:	18 83       	st	Y, r17
 500:	9c 01       	movw	r18, r24
 502:	2f 5f       	subi	r18, 0xFF	; 255
 504:	3f 4f       	sbci	r19, 0xFF	; 255
 506:	fc 01       	movw	r30, r24
 508:	04 91       	lpm	r16, Z
 50a:	0c 93       	st	X, r16
 50c:	00 23       	and	r16, r16
 50e:	59 f0       	breq	.+22     	; 0x526 <__vector_11+0x192>
 510:	f9 01       	movw	r30, r18
 512:	24 91       	lpm	r18, Z
 514:	fb 01       	movw	r30, r22
 516:	20 83       	st	Z, r18
 518:	fc 01       	movw	r30, r24
 51a:	32 96       	adiw	r30, 0x02	; 2
 51c:	03 96       	adiw	r24, 0x03	; 3
 51e:	24 91       	lpm	r18, Z
 520:	fa 01       	movw	r30, r20
 522:	20 83       	st	Z, r18
 524:	01 c0       	rjmp	.+2      	; 0x528 <__vector_11+0x194>
 526:	c9 01       	movw	r24, r18
 528:	1f 5f       	subi	r17, 0xFF	; 255
 52a:	15 30       	cpi	r17, 0x05	; 5
 52c:	41 f7       	brne	.-48     	; 0x4fe <__vector_11+0x16a>
 52e:	ea ee       	ldi	r30, 0xEA	; 234
 530:	f0 e0       	ldi	r31, 0x00	; 0
 532:	8e e1       	ldi	r24, 0x1E	; 30
 534:	80 83       	st	Z, r24
 536:	10 82       	st	Z, r1
 538:	a0 c0       	rjmp	.+320    	; 0x67a <__vector_11+0x2e6>
 53a:	48 30       	cpi	r20, 0x08	; 8
 53c:	81 f4       	brne	.+32     	; 0x55e <__vector_11+0x1ca>
 53e:	70 38       	cpi	r23, 0x80	; 128
 540:	09 f0       	breq	.+2      	; 0x544 <__vector_11+0x1b0>
 542:	3f c0       	rjmp	.+126    	; 0x5c2 <__vector_11+0x22e>
 544:	e8 ee       	ldi	r30, 0xE8	; 232
 546:	f0 e0       	ldi	r31, 0x00	; 0
 548:	80 81       	ld	r24, Z
 54a:	80 ff       	sbrs	r24, 0
 54c:	fd cf       	rjmp	.-6      	; 0x548 <__vector_11+0x1b4>
 54e:	80 91 09 01 	lds	r24, 0x0109
 552:	80 93 f1 00 	sts	0x00F1, r24
 556:	8e ef       	ldi	r24, 0xFE	; 254
 558:	80 93 e8 00 	sts	0x00E8, r24
 55c:	8e c0       	rjmp	.+284    	; 0x67a <__vector_11+0x2e6>
 55e:	41 32       	cpi	r20, 0x21	; 33
 560:	a9 f4       	brne	.+42     	; 0x58c <__vector_11+0x1f8>
 562:	71 3a       	cpi	r23, 0xA1	; 161
 564:	f1 f5       	brne	.+124    	; 0x5e2 <__vector_11+0x24e>
 566:	e8 ee       	ldi	r30, 0xE8	; 232
 568:	f0 e0       	ldi	r31, 0x00	; 0
 56a:	80 81       	ld	r24, Z
 56c:	80 ff       	sbrs	r24, 0
 56e:	fd cf       	rjmp	.-6      	; 0x56a <__vector_11+0x1d6>
 570:	e0 e0       	ldi	r30, 0x00	; 0
 572:	f1 e0       	ldi	r31, 0x01	; 1
 574:	a1 ef       	ldi	r26, 0xF1	; 241
 576:	b0 e0       	ldi	r27, 0x00	; 0
 578:	81 91       	ld	r24, Z+
 57a:	8c 93       	st	X, r24
 57c:	41 e0       	ldi	r20, 0x01	; 1
 57e:	e7 30       	cpi	r30, 0x07	; 7
 580:	f4 07       	cpc	r31, r20
 582:	d1 f7       	brne	.-12     	; 0x578 <__vector_11+0x1e4>
 584:	8e ef       	ldi	r24, 0xFE	; 254
 586:	80 93 e8 00 	sts	0x00E8, r24
 58a:	77 c0       	rjmp	.+238    	; 0x67a <__vector_11+0x2e6>
 58c:	40 32       	cpi	r20, 0x20	; 32
 58e:	c9 f4       	brne	.+50     	; 0x5c2 <__vector_11+0x22e>
 590:	71 32       	cpi	r23, 0x21	; 33
 592:	09 f0       	breq	.+2      	; 0x596 <__vector_11+0x202>
 594:	6b c0       	rjmp	.+214    	; 0x66c <__vector_11+0x2d8>
 596:	e8 ee       	ldi	r30, 0xE8	; 232
 598:	f0 e0       	ldi	r31, 0x00	; 0
 59a:	80 81       	ld	r24, Z
 59c:	82 ff       	sbrs	r24, 2
 59e:	fd cf       	rjmp	.-6      	; 0x59a <__vector_11+0x206>
 5a0:	e0 e0       	ldi	r30, 0x00	; 0
 5a2:	f1 e0       	ldi	r31, 0x01	; 1
 5a4:	a1 ef       	ldi	r26, 0xF1	; 241
 5a6:	b0 e0       	ldi	r27, 0x00	; 0
 5a8:	8c 91       	ld	r24, X
 5aa:	81 93       	st	Z+, r24
 5ac:	51 e0       	ldi	r21, 0x01	; 1
 5ae:	e7 30       	cpi	r30, 0x07	; 7
 5b0:	f5 07       	cpc	r31, r21
 5b2:	d1 f7       	brne	.-12     	; 0x5a8 <__vector_11+0x214>
 5b4:	e8 ee       	ldi	r30, 0xE8	; 232
 5b6:	f0 e0       	ldi	r31, 0x00	; 0
 5b8:	8b ef       	ldi	r24, 0xFB	; 251
 5ba:	80 83       	st	Z, r24
 5bc:	8e ef       	ldi	r24, 0xFE	; 254
 5be:	80 83       	st	Z, r24
 5c0:	5c c0       	rjmp	.+184    	; 0x67a <__vector_11+0x2e6>
 5c2:	42 32       	cpi	r20, 0x22	; 34
 5c4:	71 f4       	brne	.+28     	; 0x5e2 <__vector_11+0x24e>
 5c6:	71 32       	cpi	r23, 0x21	; 33
 5c8:	09 f0       	breq	.+2      	; 0x5cc <__vector_11+0x238>
 5ca:	50 c0       	rjmp	.+160    	; 0x66c <__vector_11+0x2d8>
 5cc:	20 93 0a 01 	sts	0x010A, r18
 5d0:	e8 ee       	ldi	r30, 0xE8	; 232
 5d2:	f0 e0       	ldi	r31, 0x00	; 0
 5d4:	80 81       	ld	r24, Z
 5d6:	80 ff       	sbrs	r24, 0
 5d8:	fd cf       	rjmp	.-6      	; 0x5d4 <__vector_11+0x240>
 5da:	8e ef       	ldi	r24, 0xFE	; 254
 5dc:	80 93 e8 00 	sts	0x00E8, r24
 5e0:	4c c0       	rjmp	.+152    	; 0x67a <__vector_11+0x2e6>
 5e2:	41 11       	cpse	r20, r1
 5e4:	1a c0       	rjmp	.+52     	; 0x61a <__vector_11+0x286>
 5e6:	e8 ee       	ldi	r30, 0xE8	; 232
 5e8:	f0 e0       	ldi	r31, 0x00	; 0
 5ea:	20 81       	ld	r18, Z
 5ec:	20 ff       	sbrs	r18, 0
 5ee:	fd cf       	rjmp	.-6      	; 0x5ea <__vector_11+0x256>
 5f0:	72 38       	cpi	r23, 0x82	; 130
 5f2:	51 f4       	brne	.+20     	; 0x608 <__vector_11+0x274>
 5f4:	e9 ee       	ldi	r30, 0xE9	; 233
 5f6:	f0 e0       	ldi	r31, 0x00	; 0
 5f8:	80 83       	st	Z, r24
 5fa:	80 91 eb 00 	lds	r24, 0x00EB
 5fe:	85 fb       	bst	r24, 5
 600:	88 27       	eor	r24, r24
 602:	80 f9       	bld	r24, 0
 604:	10 82       	st	Z, r1
 606:	01 c0       	rjmp	.+2      	; 0x60a <__vector_11+0x276>
 608:	80 e0       	ldi	r24, 0x00	; 0
 60a:	e1 ef       	ldi	r30, 0xF1	; 241
 60c:	f0 e0       	ldi	r31, 0x00	; 0
 60e:	80 83       	st	Z, r24
 610:	10 82       	st	Z, r1
 612:	8e ef       	ldi	r24, 0xFE	; 254
 614:	80 93 e8 00 	sts	0x00E8, r24
 618:	30 c0       	rjmp	.+96     	; 0x67a <__vector_11+0x2e6>
 61a:	41 30       	cpi	r20, 0x01	; 1
 61c:	11 f0       	breq	.+4      	; 0x622 <__vector_11+0x28e>
 61e:	43 30       	cpi	r20, 0x03	; 3
 620:	29 f5       	brne	.+74     	; 0x66c <__vector_11+0x2d8>
 622:	72 30       	cpi	r23, 0x02	; 2
 624:	19 f5       	brne	.+70     	; 0x66c <__vector_11+0x2d8>
 626:	23 2b       	or	r18, r19
 628:	09 f5       	brne	.+66     	; 0x66c <__vector_11+0x2d8>
 62a:	8f 77       	andi	r24, 0x7F	; 127
 62c:	99 27       	eor	r25, r25
 62e:	38 2f       	mov	r19, r24
 630:	31 50       	subi	r19, 0x01	; 1
 632:	34 30       	cpi	r19, 0x04	; 4
 634:	d8 f4       	brcc	.+54     	; 0x66c <__vector_11+0x2d8>
 636:	3e ef       	ldi	r19, 0xFE	; 254
 638:	30 93 e8 00 	sts	0x00E8, r19
 63c:	80 93 e9 00 	sts	0x00E9, r24
 640:	43 30       	cpi	r20, 0x03	; 3
 642:	21 f4       	brne	.+8      	; 0x64c <__vector_11+0x2b8>
 644:	81 e2       	ldi	r24, 0x21	; 33
 646:	80 93 eb 00 	sts	0x00EB, r24
 64a:	17 c0       	rjmp	.+46     	; 0x67a <__vector_11+0x2e6>
 64c:	99 e1       	ldi	r25, 0x19	; 25
 64e:	90 93 eb 00 	sts	0x00EB, r25
 652:	21 e0       	ldi	r18, 0x01	; 1
 654:	30 e0       	ldi	r19, 0x00	; 0
 656:	d9 01       	movw	r26, r18
 658:	02 c0       	rjmp	.+4      	; 0x65e <__vector_11+0x2ca>
 65a:	aa 0f       	add	r26, r26
 65c:	bb 1f       	adc	r27, r27
 65e:	8a 95       	dec	r24
 660:	e2 f7       	brpl	.-8      	; 0x65a <__vector_11+0x2c6>
 662:	ea ee       	ldi	r30, 0xEA	; 234
 664:	f0 e0       	ldi	r31, 0x00	; 0
 666:	a0 83       	st	Z, r26
 668:	10 82       	st	Z, r1
 66a:	07 c0       	rjmp	.+14     	; 0x67a <__vector_11+0x2e6>
 66c:	81 e2       	ldi	r24, 0x21	; 33
 66e:	80 93 eb 00 	sts	0x00EB, r24
 672:	03 c0       	rjmp	.+6      	; 0x67a <__vector_11+0x2e6>
 674:	78 83       	st	Y, r23
 676:	41 11       	cpse	r20, r1
 678:	fa ce       	rjmp	.-524    	; 0x46e <__vector_11+0xda>
 67a:	ff 91       	pop	r31
 67c:	ef 91       	pop	r30
 67e:	df 91       	pop	r29
 680:	cf 91       	pop	r28
 682:	bf 91       	pop	r27
 684:	af 91       	pop	r26
 686:	9f 91       	pop	r25
 688:	8f 91       	pop	r24
 68a:	7f 91       	pop	r23
 68c:	6f 91       	pop	r22
 68e:	5f 91       	pop	r21
 690:	4f 91       	pop	r20
 692:	3f 91       	pop	r19
 694:	2f 91       	pop	r18
 696:	1f 91       	pop	r17
 698:	0f 91       	pop	r16
 69a:	0f 90       	pop	r0
 69c:	0f be       	out	0x3f, r0	; 63
 69e:	0f 90       	pop	r0
 6a0:	1f 90       	pop	r1
 6a2:	18 95       	reti

000006a4 <rotate>:
#include "m_port.h"
#include "m_wii.h"
#include "m_wireless_variables.h" //define CHANNEL, ADDRESS, PACKET_LENGTH in this header (# of variables to send = (PACKET_LENGTH-1))

void rotate(int dir) {
	OCR1B = OCR1A;
 6a4:	20 91 88 00 	lds	r18, 0x0088
 6a8:	30 91 89 00 	lds	r19, 0x0089
 6ac:	30 93 8b 00 	sts	0x008B, r19
 6b0:	20 93 8a 00 	sts	0x008A, r18
	OCR0B = OCR0A;
 6b4:	27 b5       	in	r18, 0x27	; 39
 6b6:	28 bd       	out	0x28, r18	; 40
	if (dir == LEFT) {
 6b8:	00 97       	sbiw	r24, 0x00	; 0
 6ba:	19 f4       	brne	.+6      	; 0x6c2 <rotate+0x1e>
		set(DDRB,2);
 6bc:	22 9a       	sbi	0x04, 2	; 4
		clear(DDRB,3);
 6be:	23 98       	cbi	0x04, 3	; 4
 6c0:	08 95       	ret
	}
	else if (dir == RIGHT) {
 6c2:	01 97       	sbiw	r24, 0x01	; 1
 6c4:	11 f4       	brne	.+4      	; 0x6ca <rotate+0x26>
		clear(DDRB,2);
 6c6:	22 98       	cbi	0x04, 2	; 4
		set(DDRB,6);
 6c8:	26 9a       	sbi	0x04, 6	; 4
 6ca:	08 95       	ret

000006cc <main>:
}

int main(void)
{
	//wireless stuffs
	m_bus_init();
 6cc:	0e 94 cf 00 	call	0x19e	; 0x19e <m_bus_init>
	m_rf_open(CHANNEL, ADDRESS, PACKET_LENGTH);
 6d0:	42 e0       	ldi	r20, 0x02	; 2
 6d2:	60 e0       	ldi	r22, 0x00	; 0
 6d4:	82 e0       	ldi	r24, 0x02	; 2
 6d6:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <m_rf_open>
	int counter = 0;
	//
	
	m_clockdivide(0);
 6da:	e1 e6       	ldi	r30, 0x61	; 97
 6dc:	f0 e0       	ldi	r31, 0x00	; 0
 6de:	80 e8       	ldi	r24, 0x80	; 128
 6e0:	80 83       	st	Z, r24
 6e2:	10 82       	st	Z, r1
	
	//TIMER 0: For Controlling the solenoid
	
	set(TCCR0B, WGM02);
 6e4:	85 b5       	in	r24, 0x25	; 37
 6e6:	88 60       	ori	r24, 0x08	; 8
 6e8:	85 bd       	out	0x25, r24	; 37
	set(TCCR0A, WGM01);
 6ea:	84 b5       	in	r24, 0x24	; 36
 6ec:	82 60       	ori	r24, 0x02	; 2
 6ee:	84 bd       	out	0x24, r24	; 36
	set(TCCR0A, WGM01);
 6f0:	84 b5       	in	r24, 0x24	; 36
 6f2:	82 60       	ori	r24, 0x02	; 2
 6f4:	84 bd       	out	0x24, r24	; 36
	
	set(TCCR0A, COM0B1);
 6f6:	84 b5       	in	r24, 0x24	; 36
 6f8:	80 62       	ori	r24, 0x20	; 32
 6fa:	84 bd       	out	0x24, r24	; 36
	clear(TCCR0A, COM0B0);
 6fc:	84 b5       	in	r24, 0x24	; 36
 6fe:	8f 7e       	andi	r24, 0xEF	; 239
 700:	84 bd       	out	0x24, r24	; 36
	
	set(TCCR0B, CS02);
 702:	85 b5       	in	r24, 0x25	; 37
 704:	84 60       	ori	r24, 0x04	; 4
 706:	85 bd       	out	0x25, r24	; 37
	set(TCCR0B, CS01);
 708:	85 b5       	in	r24, 0x25	; 37
 70a:	82 60       	ori	r24, 0x02	; 2
 70c:	85 bd       	out	0x25, r24	; 37
	set(TCCR0B, CS00);
 70e:	85 b5       	in	r24, 0x25	; 37
 710:	81 60       	ori	r24, 0x01	; 1
 712:	85 bd       	out	0x25, r24	; 37
	
	OCR1A = 0xFF;
 714:	c8 e8       	ldi	r28, 0x88	; 136
 716:	d0 e0       	ldi	r29, 0x00	; 0
 718:	8f ef       	ldi	r24, 0xFF	; 255
 71a:	90 e0       	ldi	r25, 0x00	; 0
 71c:	99 83       	std	Y+1, r25	; 0x01
 71e:	88 83       	st	Y, r24
	OCR1B = 0;
 720:	2a e8       	ldi	r18, 0x8A	; 138
 722:	30 e0       	ldi	r19, 0x00	; 0
 724:	f9 01       	movw	r30, r18
 726:	11 82       	std	Z+1, r1	; 0x01
 728:	10 82       	st	Z, r1
	
	//TIMER 1: For Controlling the left wheel
	
	set(TCCR1B, WGM13);
 72a:	e1 e8       	ldi	r30, 0x81	; 129
 72c:	f0 e0       	ldi	r31, 0x00	; 0
 72e:	80 81       	ld	r24, Z
 730:	80 61       	ori	r24, 0x10	; 16
 732:	80 83       	st	Z, r24
	set(TCCR1B, WGM12);
 734:	80 81       	ld	r24, Z
 736:	88 60       	ori	r24, 0x08	; 8
 738:	80 83       	st	Z, r24
	set(TCCR1A, WGM11);
 73a:	a0 e8       	ldi	r26, 0x80	; 128
 73c:	b0 e0       	ldi	r27, 0x00	; 0
 73e:	8c 91       	ld	r24, X
 740:	82 60       	ori	r24, 0x02	; 2
 742:	8c 93       	st	X, r24
	set(TCCR1A, WGM10);
 744:	8c 91       	ld	r24, X
 746:	81 60       	ori	r24, 0x01	; 1
 748:	8c 93       	st	X, r24
	
	set(TCCR1A, COM1B1);
 74a:	8c 91       	ld	r24, X
 74c:	80 62       	ori	r24, 0x20	; 32
 74e:	8c 93       	st	X, r24
	clear(TCCR1A, COM1B0);
 750:	8c 91       	ld	r24, X
 752:	8f 7e       	andi	r24, 0xEF	; 239
 754:	8c 93       	st	X, r24
	
	clear(TCCR1B, CS12);
 756:	80 81       	ld	r24, Z
 758:	8b 7f       	andi	r24, 0xFB	; 251
 75a:	80 83       	st	Z, r24
	clear(TCCR1B, CS11);
 75c:	80 81       	ld	r24, Z
 75e:	8d 7f       	andi	r24, 0xFD	; 253
 760:	80 83       	st	Z, r24
	set(TCCR1B, CS10);
 762:	80 81       	ld	r24, Z
 764:	81 60       	ori	r24, 0x01	; 1
 766:	80 83       	st	Z, r24
	
	OCR1A = 0xFFFF;
 768:	8f ef       	ldi	r24, 0xFF	; 255
 76a:	9f ef       	ldi	r25, 0xFF	; 255
 76c:	99 83       	std	Y+1, r25	; 0x01
 76e:	88 83       	st	Y, r24
	OCR1B = 0;
 770:	f9 01       	movw	r30, r18
 772:	11 82       	std	Z+1, r1	; 0x01
 774:	10 82       	st	Z, r1
	
	//TIMER 3: For Controlling the right wheel
	
	set(TCCR3B, WGM33);
 776:	e1 e9       	ldi	r30, 0x91	; 145
 778:	f0 e0       	ldi	r31, 0x00	; 0
 77a:	20 81       	ld	r18, Z
 77c:	20 61       	ori	r18, 0x10	; 16
 77e:	20 83       	st	Z, r18
	set(TCCR3B, WGM32);
 780:	20 81       	ld	r18, Z
 782:	28 60       	ori	r18, 0x08	; 8
 784:	20 83       	st	Z, r18
	set(TCCR3A, WGM31);
 786:	a0 e9       	ldi	r26, 0x90	; 144
 788:	b0 e0       	ldi	r27, 0x00	; 0
 78a:	2c 91       	ld	r18, X
 78c:	22 60       	ori	r18, 0x02	; 2
 78e:	2c 93       	st	X, r18
	clear(TCCR3A, WGM30);
 790:	2c 91       	ld	r18, X
 792:	2e 7f       	andi	r18, 0xFE	; 254
 794:	2c 93       	st	X, r18
	
	set(TCCR3A, COM3A1);
 796:	2c 91       	ld	r18, X
 798:	20 68       	ori	r18, 0x80	; 128
 79a:	2c 93       	st	X, r18
	clear(TCCR3A, COM3A0);
 79c:	2c 91       	ld	r18, X
 79e:	2f 7b       	andi	r18, 0xBF	; 191
 7a0:	2c 93       	st	X, r18
	
	clear(TCCR3B, CS32);
 7a2:	20 81       	ld	r18, Z
 7a4:	2b 7f       	andi	r18, 0xFB	; 251
 7a6:	20 83       	st	Z, r18
	clear(TCCR3B, CS31);
 7a8:	20 81       	ld	r18, Z
 7aa:	2d 7f       	andi	r18, 0xFD	; 253
 7ac:	20 83       	st	Z, r18
	set(TCCR3B, CS30);
 7ae:	20 81       	ld	r18, Z
 7b0:	21 60       	ori	r18, 0x01	; 1
 7b2:	20 83       	st	Z, r18
	
	ICR3 = 0xFFFF;
 7b4:	90 93 97 00 	sts	0x0097, r25
 7b8:	80 93 96 00 	sts	0x0096, r24
	OCR1A = 0;
 7bc:	19 82       	std	Y+1, r1	; 0x01
 7be:	18 82       	st	Y, r1
	
	//Pins for controlling speed of left and right wheel
	set(DDRB,6);
 7c0:	26 9a       	sbi	0x04, 6	; 4
	set(DDRC,6);
 7c2:	3e 9a       	sbi	0x07, 6	; 7
	
	//Pins for determining direction of wheels
	set(DDRB,2);
 7c4:	22 9a       	sbi	0x04, 2	; 4
	set(DDRB,3);
 7c6:	23 9a       	sbi	0x04, 3	; 4
	
	//ADC's
	sei();					//Set up interrupts
 7c8:	78 94       	sei
	
	clear(ADMUX, REFS1);	//Voltage reference is AR pin (5V)
 7ca:	ec e7       	ldi	r30, 0x7C	; 124
 7cc:	f0 e0       	ldi	r31, 0x00	; 0
 7ce:	80 81       	ld	r24, Z
 7d0:	8f 77       	andi	r24, 0x7F	; 127
 7d2:	80 83       	st	Z, r24
	clear(ADMUX, REFS0);	//^
 7d4:	80 81       	ld	r24, Z
 7d6:	8f 7b       	andi	r24, 0xBF	; 191
 7d8:	80 83       	st	Z, r24
	
	set(ADCSRA, ADPS2);	//Set scale to /128
 7da:	aa e7       	ldi	r26, 0x7A	; 122
 7dc:	b0 e0       	ldi	r27, 0x00	; 0
 7de:	8c 91       	ld	r24, X
 7e0:	84 60       	ori	r24, 0x04	; 4
 7e2:	8c 93       	st	X, r24
	set(ADCSRA, ADPS1);	//^
 7e4:	8c 91       	ld	r24, X
 7e6:	82 60       	ori	r24, 0x02	; 2
 7e8:	8c 93       	st	X, r24
	set(ADCSRA, ADPS0);	//^
 7ea:	8c 91       	ld	r24, X
 7ec:	81 60       	ori	r24, 0x01	; 1
 7ee:	8c 93       	st	X, r24
	
	set(DIDR0, ADC0D);	//Disable digital input for F0
 7f0:	ce e7       	ldi	r28, 0x7E	; 126
 7f2:	d0 e0       	ldi	r29, 0x00	; 0
 7f4:	88 81       	ld	r24, Y
 7f6:	81 60       	ori	r24, 0x01	; 1
 7f8:	88 83       	st	Y, r24
	set(DIDR0, ADC1D);	//Disable digital input for F1
 7fa:	88 81       	ld	r24, Y
 7fc:	82 60       	ori	r24, 0x02	; 2
 7fe:	88 83       	st	Y, r24
	set(DIDR0, ADC4D);	//Disable digital input for F4
 800:	88 81       	ld	r24, Y
 802:	80 61       	ori	r24, 0x10	; 16
 804:	88 83       	st	Y, r24
	set(DIDR0, ADC5D);	//Disable digital input for F5
 806:	88 81       	ld	r24, Y
 808:	80 62       	ori	r24, 0x20	; 32
 80a:	88 83       	st	Y, r24
	set(DIDR0, ADC6D);	//Disable digital input for F6
 80c:	88 81       	ld	r24, Y
 80e:	80 64       	ori	r24, 0x40	; 64
 810:	88 83       	st	Y, r24
	set(DIDR2, ADC8D);	//Disable digital input for D4
 812:	cd e7       	ldi	r28, 0x7D	; 125
 814:	d0 e0       	ldi	r29, 0x00	; 0
 816:	88 81       	ld	r24, Y
 818:	81 60       	ori	r24, 0x01	; 1
 81a:	88 83       	st	Y, r24
	set(DIDR2, ADC9D);	//Disable digital input for D6
 81c:	88 81       	ld	r24, Y
 81e:	82 60       	ori	r24, 0x02	; 2
 820:	88 83       	st	Y, r24
		
	set(ADCSRA, ADATE);	//Set trigger to free-running mode
 822:	8c 91       	ld	r24, X
 824:	80 62       	ori	r24, 0x20	; 32
 826:	8c 93       	st	X, r24
	
	clear(ADCSRB, MUX5);//Set analog input (F0)
 828:	cb e7       	ldi	r28, 0x7B	; 123
 82a:	d0 e0       	ldi	r29, 0x00	; 0
 82c:	88 81       	ld	r24, Y
 82e:	8f 7d       	andi	r24, 0xDF	; 223
 830:	88 83       	st	Y, r24
	clear(ADMUX, MUX2);	//^
 832:	80 81       	ld	r24, Z
 834:	8b 7f       	andi	r24, 0xFB	; 251
 836:	80 83       	st	Z, r24
	clear(ADMUX, MUX1);	//^
 838:	80 81       	ld	r24, Z
 83a:	8d 7f       	andi	r24, 0xFD	; 253
 83c:	80 83       	st	Z, r24
	clear(ADMUX, MUX0);	//^
 83e:	80 81       	ld	r24, Z
 840:	8e 7f       	andi	r24, 0xFE	; 254
 842:	80 83       	st	Z, r24
	
	clear(ADCSRB, MUX5);//Set analog input (F1)
 844:	88 81       	ld	r24, Y
 846:	8f 7d       	andi	r24, 0xDF	; 223
 848:	88 83       	st	Y, r24
	clear(ADMUX, MUX2);	//^
 84a:	80 81       	ld	r24, Z
 84c:	8b 7f       	andi	r24, 0xFB	; 251
 84e:	80 83       	st	Z, r24
	clear(ADMUX, MUX1);	//^
 850:	80 81       	ld	r24, Z
 852:	8d 7f       	andi	r24, 0xFD	; 253
 854:	80 83       	st	Z, r24
	set(ADMUX, MUX0);	//^
 856:	80 81       	ld	r24, Z
 858:	81 60       	ori	r24, 0x01	; 1
 85a:	80 83       	st	Z, r24
	
	clear(ADCSRB, MUX5);//Set analog input (F4)
 85c:	88 81       	ld	r24, Y
 85e:	8f 7d       	andi	r24, 0xDF	; 223
 860:	88 83       	st	Y, r24
	set(ADMUX, MUX2);	//^
 862:	80 81       	ld	r24, Z
 864:	84 60       	ori	r24, 0x04	; 4
 866:	80 83       	st	Z, r24
	clear(ADMUX, MUX1);	//^
 868:	80 81       	ld	r24, Z
 86a:	8d 7f       	andi	r24, 0xFD	; 253
 86c:	80 83       	st	Z, r24
	clear(ADMUX, MUX0);	//^
 86e:	80 81       	ld	r24, Z
 870:	8e 7f       	andi	r24, 0xFE	; 254
 872:	80 83       	st	Z, r24
	
	clear(ADCSRB, MUX5);//Set analog input (F5)
 874:	88 81       	ld	r24, Y
 876:	8f 7d       	andi	r24, 0xDF	; 223
 878:	88 83       	st	Y, r24
	set(ADMUX, MUX2);	//^
 87a:	80 81       	ld	r24, Z
 87c:	84 60       	ori	r24, 0x04	; 4
 87e:	80 83       	st	Z, r24
	clear(ADMUX, MUX1);	//^
 880:	80 81       	ld	r24, Z
 882:	8d 7f       	andi	r24, 0xFD	; 253
 884:	80 83       	st	Z, r24
	set(ADMUX, MUX0);	//^
 886:	80 81       	ld	r24, Z
 888:	81 60       	ori	r24, 0x01	; 1
 88a:	80 83       	st	Z, r24
	
	clear(ADCSRB, MUX5);//Set analog input (F6)
 88c:	88 81       	ld	r24, Y
 88e:	8f 7d       	andi	r24, 0xDF	; 223
 890:	88 83       	st	Y, r24
	set(ADMUX, MUX2);	//^
 892:	80 81       	ld	r24, Z
 894:	84 60       	ori	r24, 0x04	; 4
 896:	80 83       	st	Z, r24
	set(ADMUX, MUX1);	//^
 898:	80 81       	ld	r24, Z
 89a:	82 60       	ori	r24, 0x02	; 2
 89c:	80 83       	st	Z, r24
	clear(ADMUX, MUX0);	//^
 89e:	80 81       	ld	r24, Z
 8a0:	8e 7f       	andi	r24, 0xFE	; 254
 8a2:	80 83       	st	Z, r24
	
	set(ADCSRB, MUX5);//Set analog input (D4)
 8a4:	88 81       	ld	r24, Y
 8a6:	80 62       	ori	r24, 0x20	; 32
 8a8:	88 83       	st	Y, r24
	clear(ADMUX, MUX2);	//^
 8aa:	80 81       	ld	r24, Z
 8ac:	8b 7f       	andi	r24, 0xFB	; 251
 8ae:	80 83       	st	Z, r24
	clear(ADMUX, MUX1);	//^
 8b0:	80 81       	ld	r24, Z
 8b2:	8d 7f       	andi	r24, 0xFD	; 253
 8b4:	80 83       	st	Z, r24
	clear(ADMUX, MUX0);	//^
 8b6:	80 81       	ld	r24, Z
 8b8:	8e 7f       	andi	r24, 0xFE	; 254
 8ba:	80 83       	st	Z, r24
		
	set(ADCSRB, MUX5);//Set analog input (D6)
 8bc:	88 81       	ld	r24, Y
 8be:	80 62       	ori	r24, 0x20	; 32
 8c0:	88 83       	st	Y, r24
	clear(ADMUX, MUX2);	//^
 8c2:	80 81       	ld	r24, Z
 8c4:	8b 7f       	andi	r24, 0xFB	; 251
 8c6:	80 83       	st	Z, r24
	clear(ADMUX, MUX1);	//^
 8c8:	80 81       	ld	r24, Z
 8ca:	8d 7f       	andi	r24, 0xFD	; 253
 8cc:	80 83       	st	Z, r24
	set(ADMUX, MUX0);	//^
 8ce:	80 81       	ld	r24, Z
 8d0:	81 60       	ori	r24, 0x01	; 1
 8d2:	80 83       	st	Z, r24
	
	set(ADCSRA, ADEN);	//Enable/Start conversion
 8d4:	8c 91       	ld	r24, X
 8d6:	80 68       	ori	r24, 0x80	; 128
 8d8:	8c 93       	st	X, r24
	set(ADCSRA, ADSC);	//^
 8da:	8c 91       	ld	r24, X
 8dc:	80 64       	ori	r24, 0x40	; 64
 8de:	8c 93       	st	X, r24
	
	set(ADCSRA, ADIF);	//Enable reading results
 8e0:	8c 91       	ld	r24, X
 8e2:	80 61       	ori	r24, 0x10	; 16
 8e4:	8c 93       	st	X, r24
		//wireless stuffs
		
        //manually say what each buffer[i] will be (corresponds to a state, variable output, etc.)

        //e.g.
        buffer[0] = 50;
 8e6:	82 e3       	ldi	r24, 0x32	; 50
 8e8:	80 93 0b 01 	sts	0x010B, r24
        buffer[1] = 2;
 8ec:	82 e0       	ldi	r24, 0x02	; 2
 8ee:	80 93 0c 01 	sts	0x010C, r24
int main(void)
{
	//wireless stuffs
	m_bus_init();
	m_rf_open(CHANNEL, ADDRESS, PACKET_LENGTH);
	int counter = 0;
 8f2:	c0 e0       	ldi	r28, 0x00	; 0
 8f4:	d0 e0       	ldi	r29, 0x00	; 0
		//wireless stuffs
		
        //manually say what each buffer[i] will be (corresponds to a state, variable output, etc.)

        //e.g.
        buffer[0] = 50;
 8f6:	0b e0       	ldi	r16, 0x0B	; 11
 8f8:	11 e0       	ldi	r17, 0x01	; 1
 8fa:	0f 2e       	mov	r0, r31
 8fc:	f2 e3       	ldi	r31, 0x32	; 50
 8fe:	cf 2e       	mov	r12, r31
 900:	f0 2d       	mov	r31, r0
        buffer[1] = 2;
 902:	0f 2e       	mov	r0, r31
 904:	fc e0       	ldi	r31, 0x0C	; 12
 906:	ef 2e       	mov	r14, r31
 908:	f1 e0       	ldi	r31, 0x01	; 1
 90a:	ff 2e       	mov	r15, r31
 90c:	f0 2d       	mov	r31, r0
 90e:	68 94       	set
 910:	dd 24       	eor	r13, r13
 912:	d1 f8       	bld	r13, 1
        
        if (counter > 30000) {
	        m_rf_send(ADDRESS,buffer,PACKET_LENGTH);
	        m_green(TOGGLE);
 914:	68 94       	set
 916:	bb 24       	eor	r11, r11
 918:	b2 f8       	bld	r11, 2
 91a:	0b c0       	rjmp	.+22     	; 0x932 <main+0x266>
        //e.g.
        buffer[0] = 50;
        buffer[1] = 2;
        
        if (counter > 30000) {
	        m_rf_send(ADDRESS,buffer,PACKET_LENGTH);
 91c:	4d 2d       	mov	r20, r13
 91e:	b8 01       	movw	r22, r16
 920:	80 e0       	ldi	r24, 0x00	; 0
 922:	0e 94 36 01 	call	0x26c	; 0x26c <m_rf_send>
	        m_green(TOGGLE);
 926:	6a 9a       	sbi	0x0d, 2	; 13
 928:	8e b1       	in	r24, 0x0e	; 14
 92a:	8b 25       	eor	r24, r11
 92c:	8e b9       	out	0x0e, r24	; 14

	        counter = 0;
 92e:	c0 e0       	ldi	r28, 0x00	; 0
 930:	d0 e0       	ldi	r29, 0x00	; 0
        }
        
        counter++;
 932:	21 96       	adiw	r28, 0x01	; 1
		
		
		//switch states
        switch (state) {
			case 0:
			rotate(LEFT);
 934:	80 e0       	ldi	r24, 0x00	; 0
 936:	90 e0       	ldi	r25, 0x00	; 0
 938:	0e 94 52 03 	call	0x6a4	; 0x6a4 <rotate>
			rotate(RIGHT);
 93c:	81 e0       	ldi	r24, 0x01	; 1
 93e:	90 e0       	ldi	r25, 0x00	; 0
 940:	0e 94 52 03 	call	0x6a4	; 0x6a4 <rotate>
		//wireless stuffs
		
        //manually say what each buffer[i] will be (corresponds to a state, variable output, etc.)

        //e.g.
        buffer[0] = 50;
 944:	f8 01       	movw	r30, r16
 946:	c0 82       	st	Z, r12
        buffer[1] = 2;
 948:	f7 01       	movw	r30, r14
 94a:	d0 82       	st	Z, r13
        
        if (counter > 30000) {
 94c:	c1 33       	cpi	r28, 0x31	; 49
 94e:	f5 e7       	ldi	r31, 0x75	; 117
 950:	df 07       	cpc	r29, r31
 952:	7c f3       	brlt	.-34     	; 0x932 <main+0x266>
 954:	e3 cf       	rjmp	.-58     	; 0x91c <main+0x250>

00000956 <_exit>:
 956:	f8 94       	cli

00000958 <__stop_program>:
 958:	ff cf       	rjmp	.-2      	; 0x958 <__stop_program>
