
Robockey.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000008  00800100  0000098a  00000a1e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000098a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000006  00800108  00800108  00000a26  2**0
                  ALLOC
  3 .stab         0000099c  00000000  00000000  00000a28  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      000002ed  00000000  00000000  000013c4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      0000002f  00000000  00000000  000016b1  2**0
                  CONTENTS, READONLY
  6 .debug_aranges 00000298  00000000  00000000  000016e0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   000028aa  00000000  00000000  00001978  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00000912  00000000  00000000  00004222  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00000f91  00000000  00000000  00004b34  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  000006b0  00000000  00000000  00005ac8  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    0000073c  00000000  00000000  00006178  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    000026d7  00000000  00000000  000068b4  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000278  00000000  00000000  00008f8b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 b3 00 	jmp	0x166	; 0x166 <__ctors_end>
   4:	0c 94 d0 00 	jmp	0x1a0	; 0x1a0 <__bad_interrupt>
   8:	0c 94 d0 00 	jmp	0x1a0	; 0x1a0 <__bad_interrupt>
   c:	0c 94 d0 00 	jmp	0x1a0	; 0x1a0 <__bad_interrupt>
  10:	0c 94 d0 00 	jmp	0x1a0	; 0x1a0 <__bad_interrupt>
  14:	0c 94 d0 00 	jmp	0x1a0	; 0x1a0 <__bad_interrupt>
  18:	0c 94 d0 00 	jmp	0x1a0	; 0x1a0 <__bad_interrupt>
  1c:	0c 94 d0 00 	jmp	0x1a0	; 0x1a0 <__bad_interrupt>
  20:	0c 94 d0 00 	jmp	0x1a0	; 0x1a0 <__bad_interrupt>
  24:	0c 94 d0 00 	jmp	0x1a0	; 0x1a0 <__bad_interrupt>
  28:	0c 94 47 01 	jmp	0x28e	; 0x28e <__vector_10>
  2c:	0c 94 85 01 	jmp	0x30a	; 0x30a <__vector_11>
  30:	0c 94 d0 00 	jmp	0x1a0	; 0x1a0 <__bad_interrupt>
  34:	0c 94 d0 00 	jmp	0x1a0	; 0x1a0 <__bad_interrupt>
  38:	0c 94 d0 00 	jmp	0x1a0	; 0x1a0 <__bad_interrupt>
  3c:	0c 94 d0 00 	jmp	0x1a0	; 0x1a0 <__bad_interrupt>
  40:	0c 94 d0 00 	jmp	0x1a0	; 0x1a0 <__bad_interrupt>
  44:	0c 94 d0 00 	jmp	0x1a0	; 0x1a0 <__bad_interrupt>
  48:	0c 94 d0 00 	jmp	0x1a0	; 0x1a0 <__bad_interrupt>
  4c:	0c 94 d0 00 	jmp	0x1a0	; 0x1a0 <__bad_interrupt>
  50:	0c 94 d0 00 	jmp	0x1a0	; 0x1a0 <__bad_interrupt>
  54:	0c 94 d0 00 	jmp	0x1a0	; 0x1a0 <__bad_interrupt>
  58:	0c 94 d0 00 	jmp	0x1a0	; 0x1a0 <__bad_interrupt>
  5c:	0c 94 d0 00 	jmp	0x1a0	; 0x1a0 <__bad_interrupt>
  60:	0c 94 d0 00 	jmp	0x1a0	; 0x1a0 <__bad_interrupt>
  64:	0c 94 d0 00 	jmp	0x1a0	; 0x1a0 <__bad_interrupt>
  68:	0c 94 d0 00 	jmp	0x1a0	; 0x1a0 <__bad_interrupt>
  6c:	0c 94 d0 00 	jmp	0x1a0	; 0x1a0 <__bad_interrupt>
  70:	0c 94 d0 00 	jmp	0x1a0	; 0x1a0 <__bad_interrupt>
  74:	0c 94 62 04 	jmp	0x8c4	; 0x8c4 <__vector_29>
  78:	0c 94 d0 00 	jmp	0x1a0	; 0x1a0 <__bad_interrupt>
  7c:	0c 94 d0 00 	jmp	0x1a0	; 0x1a0 <__bad_interrupt>
  80:	0c 94 d0 00 	jmp	0x1a0	; 0x1a0 <__bad_interrupt>
  84:	0c 94 d0 00 	jmp	0x1a0	; 0x1a0 <__bad_interrupt>
  88:	0c 94 d0 00 	jmp	0x1a0	; 0x1a0 <__bad_interrupt>
  8c:	0c 94 d0 00 	jmp	0x1a0	; 0x1a0 <__bad_interrupt>
  90:	0c 94 d0 00 	jmp	0x1a0	; 0x1a0 <__bad_interrupt>
  94:	0c 94 d0 00 	jmp	0x1a0	; 0x1a0 <__bad_interrupt>
  98:	0c 94 d0 00 	jmp	0x1a0	; 0x1a0 <__bad_interrupt>
  9c:	0c 94 d0 00 	jmp	0x1a0	; 0x1a0 <__bad_interrupt>
  a0:	0c 94 d0 00 	jmp	0x1a0	; 0x1a0 <__bad_interrupt>
  a4:	0c 94 d0 00 	jmp	0x1a0	; 0x1a0 <__bad_interrupt>
  a8:	0c 94 d0 00 	jmp	0x1a0	; 0x1a0 <__bad_interrupt>

000000ac <descriptor_list>:
  ac:	00 01 00 00 e0 00 12 00 02 00 00 f2 00 43 00 03     .............C..
  bc:	00 00 35 01 04 01 03 09 04 39 01 12 02 03 09 04     ..5......9......
  cc:	4d 01 06 03 03 09 04 55 01 08                       M......U..

000000d6 <endpoint_config_table>:
  d6:	00 01 c1 12 01 80 36 01 81 36                       ......6..6

000000e0 <device_descriptor>:
  e0:	12 01 00 02 02 00 00 10 c0 16 7a 04 00 01 01 02     ..........z.....
  f0:	03 01                                               ..

000000f2 <config1_descriptor>:
  f2:	09 02 43 00 02 01 00 c0 32 09 04 00 00 01 02 02     ..C.....2.......
 102:	01 00 05 24 00 10 01 05 24 01 01 01 04 24 02 06     ...$....$....$..
 112:	05 24 06 00 01 07 05 82 03 10 00 40 09 04 01 00     .$.........@....
 122:	02 0a 00 00 00 07 05 03 02 40 00 00 07 05 84 02     .........@......
 132:	40 00 00                                            @..

00000135 <string0>:
 135:	04 03 09 04                                         ....

00000139 <string1>:
 139:	12 03 4a 00 2e 00 20 00 46 00 69 00 65 00 6e 00     ..J... .F.i.e.n.
 149:	65 00 00 00                                         e...

0000014d <string2>:
 14d:	06 03 4d 00 32 00 00 00                             ..M.2...

00000155 <string3>:
 155:	08 03 34 00 31 00 30 00 00 00                       ..4.1.0...

0000015f <__c.1872>:
 15f:	09 41 44 43 3a 20 00                                .ADC: .

00000166 <__ctors_end>:
 166:	11 24       	eor	r1, r1
 168:	1f be       	out	0x3f, r1	; 63
 16a:	cf ef       	ldi	r28, 0xFF	; 255
 16c:	da e0       	ldi	r29, 0x0A	; 10
 16e:	de bf       	out	0x3e, r29	; 62
 170:	cd bf       	out	0x3d, r28	; 61

00000172 <__do_copy_data>:
 172:	11 e0       	ldi	r17, 0x01	; 1
 174:	a0 e0       	ldi	r26, 0x00	; 0
 176:	b1 e0       	ldi	r27, 0x01	; 1
 178:	ea e8       	ldi	r30, 0x8A	; 138
 17a:	f9 e0       	ldi	r31, 0x09	; 9
 17c:	02 c0       	rjmp	.+4      	; 0x182 <__do_copy_data+0x10>
 17e:	05 90       	lpm	r0, Z+
 180:	0d 92       	st	X+, r0
 182:	a8 30       	cpi	r26, 0x08	; 8
 184:	b1 07       	cpc	r27, r17
 186:	d9 f7       	brne	.-10     	; 0x17e <__do_copy_data+0xc>

00000188 <__do_clear_bss>:
 188:	21 e0       	ldi	r18, 0x01	; 1
 18a:	a8 e0       	ldi	r26, 0x08	; 8
 18c:	b1 e0       	ldi	r27, 0x01	; 1
 18e:	01 c0       	rjmp	.+2      	; 0x192 <.do_clear_bss_start>

00000190 <.do_clear_bss_loop>:
 190:	1d 92       	st	X+, r1

00000192 <.do_clear_bss_start>:
 192:	ae 30       	cpi	r26, 0x0E	; 14
 194:	b2 07       	cpc	r27, r18
 196:	e1 f7       	brne	.-8      	; 0x190 <.do_clear_bss_loop>
 198:	0e 94 75 03 	call	0x6ea	; 0x6ea <main>
 19c:	0c 94 c3 04 	jmp	0x986	; 0x986 <_exit>

000001a0 <__bad_interrupt>:
 1a0:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001a4 <m_usb_init>:
 1a4:	81 e0       	ldi	r24, 0x01	; 1
 1a6:	80 93 d7 00 	sts	0x00D7, r24
 1aa:	80 ea       	ldi	r24, 0xA0	; 160
 1ac:	80 93 d8 00 	sts	0x00D8, r24
 1b0:	82 e1       	ldi	r24, 0x12	; 18
 1b2:	89 bd       	out	0x29, r24	; 41
 1b4:	09 b4       	in	r0, 0x29	; 41
 1b6:	00 fe       	sbrs	r0, 0
 1b8:	fd cf       	rjmp	.-6      	; 0x1b4 <m_usb_init+0x10>
 1ba:	80 e9       	ldi	r24, 0x90	; 144
 1bc:	80 93 d8 00 	sts	0x00D8, r24
 1c0:	10 92 e0 00 	sts	0x00E0, r1
 1c4:	10 92 09 01 	sts	0x0109, r1
 1c8:	10 92 0a 01 	sts	0x010A, r1
 1cc:	8c e0       	ldi	r24, 0x0C	; 12
 1ce:	80 93 e2 00 	sts	0x00E2, r24
 1d2:	78 94       	sei
 1d4:	08 95       	ret

000001d6 <m_usb_tx_char>:
 1d6:	cf 93       	push	r28
 1d8:	df 93       	push	r29
 1da:	90 91 09 01 	lds	r25, 0x0109
 1de:	99 23       	and	r25, r25
 1e0:	09 f4       	brne	.+2      	; 0x1e4 <m_usb_tx_char+0xe>
 1e2:	4d c0       	rjmp	.+154    	; 0x27e <m_usb_tx_char+0xa8>
 1e4:	9f b7       	in	r25, 0x3f	; 63
 1e6:	f8 94       	cli
 1e8:	24 e0       	ldi	r18, 0x04	; 4
 1ea:	20 93 e9 00 	sts	0x00E9, r18
 1ee:	20 91 0b 01 	lds	r18, 0x010B
 1f2:	22 23       	and	r18, r18
 1f4:	49 f0       	breq	.+18     	; 0x208 <m_usb_tx_char+0x32>
 1f6:	20 91 e8 00 	lds	r18, 0x00E8
 1fa:	25 fd       	sbrc	r18, 5
 1fc:	03 c0       	rjmp	.+6      	; 0x204 <m_usb_tx_char+0x2e>
 1fe:	9f bf       	out	0x3f, r25	; 63
 200:	8f ef       	ldi	r24, 0xFF	; 255
 202:	42 c0       	rjmp	.+132    	; 0x288 <m_usb_tx_char+0xb2>
 204:	10 92 0b 01 	sts	0x010B, r1
 208:	30 91 e4 00 	lds	r19, 0x00E4
 20c:	37 5e       	subi	r19, 0xE7	; 231
 20e:	20 91 e8 00 	lds	r18, 0x00E8
 212:	25 fd       	sbrc	r18, 5
 214:	25 c0       	rjmp	.+74     	; 0x260 <m_usb_tx_char+0x8a>
 216:	9f bf       	out	0x3f, r25	; 63
 218:	90 91 e4 00 	lds	r25, 0x00E4
 21c:	93 17       	cp	r25, r19
 21e:	49 f0       	breq	.+18     	; 0x232 <m_usb_tx_char+0x5c>
 220:	90 91 09 01 	lds	r25, 0x0109
 224:	91 11       	cpse	r25, r1
 226:	0f c0       	rjmp	.+30     	; 0x246 <m_usb_tx_char+0x70>
 228:	2c c0       	rjmp	.+88     	; 0x282 <m_usb_tx_char+0xac>
 22a:	9f bf       	out	0x3f, r25	; 63
 22c:	98 81       	ld	r25, Y
 22e:	93 13       	cpse	r25, r19
 230:	05 c0       	rjmp	.+10     	; 0x23c <m_usb_tx_char+0x66>
 232:	81 e0       	ldi	r24, 0x01	; 1
 234:	80 93 0b 01 	sts	0x010B, r24
 238:	8f ef       	ldi	r24, 0xFF	; 255
 23a:	26 c0       	rjmp	.+76     	; 0x288 <m_usb_tx_char+0xb2>
 23c:	90 91 09 01 	lds	r25, 0x0109
 240:	91 11       	cpse	r25, r1
 242:	08 c0       	rjmp	.+16     	; 0x254 <m_usb_tx_char+0x7e>
 244:	20 c0       	rjmp	.+64     	; 0x286 <m_usb_tx_char+0xb0>
 246:	a9 ee       	ldi	r26, 0xE9	; 233
 248:	b0 e0       	ldi	r27, 0x00	; 0
 24a:	44 e0       	ldi	r20, 0x04	; 4
 24c:	e8 ee       	ldi	r30, 0xE8	; 232
 24e:	f0 e0       	ldi	r31, 0x00	; 0
 250:	c4 ee       	ldi	r28, 0xE4	; 228
 252:	d0 e0       	ldi	r29, 0x00	; 0
 254:	9f b7       	in	r25, 0x3f	; 63
 256:	f8 94       	cli
 258:	4c 93       	st	X, r20
 25a:	20 81       	ld	r18, Z
 25c:	25 ff       	sbrs	r18, 5
 25e:	e5 cf       	rjmp	.-54     	; 0x22a <m_usb_tx_char+0x54>
 260:	80 93 f1 00 	sts	0x00F1, r24
 264:	80 91 e8 00 	lds	r24, 0x00E8
 268:	85 fd       	sbrc	r24, 5
 26a:	03 c0       	rjmp	.+6      	; 0x272 <m_usb_tx_char+0x9c>
 26c:	8a e3       	ldi	r24, 0x3A	; 58
 26e:	80 93 e8 00 	sts	0x00E8, r24
 272:	85 e0       	ldi	r24, 0x05	; 5
 274:	80 93 08 01 	sts	0x0108, r24
 278:	9f bf       	out	0x3f, r25	; 63
 27a:	80 e0       	ldi	r24, 0x00	; 0
 27c:	05 c0       	rjmp	.+10     	; 0x288 <m_usb_tx_char+0xb2>
 27e:	8f ef       	ldi	r24, 0xFF	; 255
 280:	03 c0       	rjmp	.+6      	; 0x288 <m_usb_tx_char+0xb2>
 282:	8f ef       	ldi	r24, 0xFF	; 255
 284:	01 c0       	rjmp	.+2      	; 0x288 <m_usb_tx_char+0xb2>
 286:	8f ef       	ldi	r24, 0xFF	; 255
 288:	df 91       	pop	r29
 28a:	cf 91       	pop	r28
 28c:	08 95       	ret

0000028e <__vector_10>:
 28e:	1f 92       	push	r1
 290:	0f 92       	push	r0
 292:	0f b6       	in	r0, 0x3f	; 63
 294:	0f 92       	push	r0
 296:	11 24       	eor	r1, r1
 298:	8f 93       	push	r24
 29a:	9f 93       	push	r25
 29c:	ef 93       	push	r30
 29e:	ff 93       	push	r31
 2a0:	e1 ee       	ldi	r30, 0xE1	; 225
 2a2:	f0 e0       	ldi	r31, 0x00	; 0
 2a4:	80 81       	ld	r24, Z
 2a6:	10 82       	st	Z, r1
 2a8:	83 ff       	sbrs	r24, 3
 2aa:	11 c0       	rjmp	.+34     	; 0x2ce <__vector_10+0x40>
 2ac:	10 92 e9 00 	sts	0x00E9, r1
 2b0:	91 e0       	ldi	r25, 0x01	; 1
 2b2:	90 93 eb 00 	sts	0x00EB, r25
 2b6:	10 92 ec 00 	sts	0x00EC, r1
 2ba:	92 e1       	ldi	r25, 0x12	; 18
 2bc:	90 93 ed 00 	sts	0x00ED, r25
 2c0:	98 e0       	ldi	r25, 0x08	; 8
 2c2:	90 93 f0 00 	sts	0x00F0, r25
 2c6:	10 92 09 01 	sts	0x0109, r1
 2ca:	10 92 0a 01 	sts	0x010A, r1
 2ce:	82 ff       	sbrs	r24, 2
 2d0:	13 c0       	rjmp	.+38     	; 0x2f8 <__vector_10+0x6a>
 2d2:	80 91 09 01 	lds	r24, 0x0109
 2d6:	88 23       	and	r24, r24
 2d8:	79 f0       	breq	.+30     	; 0x2f8 <__vector_10+0x6a>
 2da:	80 91 08 01 	lds	r24, 0x0108
 2de:	88 23       	and	r24, r24
 2e0:	59 f0       	breq	.+22     	; 0x2f8 <__vector_10+0x6a>
 2e2:	81 50       	subi	r24, 0x01	; 1
 2e4:	80 93 08 01 	sts	0x0108, r24
 2e8:	81 11       	cpse	r24, r1
 2ea:	06 c0       	rjmp	.+12     	; 0x2f8 <__vector_10+0x6a>
 2ec:	84 e0       	ldi	r24, 0x04	; 4
 2ee:	80 93 e9 00 	sts	0x00E9, r24
 2f2:	8a e3       	ldi	r24, 0x3A	; 58
 2f4:	80 93 e8 00 	sts	0x00E8, r24
 2f8:	ff 91       	pop	r31
 2fa:	ef 91       	pop	r30
 2fc:	9f 91       	pop	r25
 2fe:	8f 91       	pop	r24
 300:	0f 90       	pop	r0
 302:	0f be       	out	0x3f, r0	; 63
 304:	0f 90       	pop	r0
 306:	1f 90       	pop	r1
 308:	18 95       	reti

0000030a <__vector_11>:
 30a:	1f 92       	push	r1
 30c:	0f 92       	push	r0
 30e:	0f b6       	in	r0, 0x3f	; 63
 310:	0f 92       	push	r0
 312:	11 24       	eor	r1, r1
 314:	0f 93       	push	r16
 316:	1f 93       	push	r17
 318:	2f 93       	push	r18
 31a:	3f 93       	push	r19
 31c:	4f 93       	push	r20
 31e:	5f 93       	push	r21
 320:	6f 93       	push	r22
 322:	7f 93       	push	r23
 324:	8f 93       	push	r24
 326:	9f 93       	push	r25
 328:	af 93       	push	r26
 32a:	bf 93       	push	r27
 32c:	cf 93       	push	r28
 32e:	df 93       	push	r29
 330:	ef 93       	push	r30
 332:	ff 93       	push	r31
 334:	10 92 e9 00 	sts	0x00E9, r1
 338:	80 91 e8 00 	lds	r24, 0x00E8
 33c:	83 ff       	sbrs	r24, 3
 33e:	51 c1       	rjmp	.+674    	; 0x5e2 <__vector_11+0x2d8>
 340:	e1 ef       	ldi	r30, 0xF1	; 241
 342:	f0 e0       	ldi	r31, 0x00	; 0
 344:	70 81       	ld	r23, Z
 346:	40 81       	ld	r20, Z
 348:	20 81       	ld	r18, Z
 34a:	30 81       	ld	r19, Z
 34c:	93 2f       	mov	r25, r19
 34e:	80 e0       	ldi	r24, 0x00	; 0
 350:	dc 01       	movw	r26, r24
 352:	a2 2b       	or	r26, r18
 354:	9d 01       	movw	r18, r26
 356:	50 81       	ld	r21, Z
 358:	60 81       	ld	r22, Z
 35a:	96 2f       	mov	r25, r22
 35c:	80 e0       	ldi	r24, 0x00	; 0
 35e:	85 2b       	or	r24, r21
 360:	a0 81       	ld	r26, Z
 362:	b0 81       	ld	r27, Z
 364:	52 ef       	ldi	r21, 0xF2	; 242
 366:	50 93 e8 00 	sts	0x00E8, r21
 36a:	46 30       	cpi	r20, 0x06	; 6
 36c:	09 f0       	breq	.+2      	; 0x370 <__vector_11+0x66>
 36e:	5c c0       	rjmp	.+184    	; 0x428 <__vector_11+0x11e>
 370:	04 c0       	rjmp	.+8      	; 0x37a <__vector_11+0x70>
 372:	81 e2       	ldi	r24, 0x21	; 33
 374:	80 93 eb 00 	sts	0x00EB, r24
 378:	3b c1       	rjmp	.+630    	; 0x5f0 <__vector_11+0x2e6>
 37a:	c6 e0       	ldi	r28, 0x06	; 6
 37c:	4c ea       	ldi	r20, 0xAC	; 172
 37e:	50 e0       	ldi	r21, 0x00	; 0
 380:	fa 01       	movw	r30, r20
 382:	65 91       	lpm	r22, Z+
 384:	74 91       	lpm	r23, Z
 386:	26 17       	cp	r18, r22
 388:	37 07       	cpc	r19, r23
 38a:	19 f0       	breq	.+6      	; 0x392 <__vector_11+0x88>
 38c:	49 5f       	subi	r20, 0xF9	; 249
 38e:	5f 4f       	sbci	r21, 0xFF	; 255
 390:	20 c0       	rjmp	.+64     	; 0x3d2 <__vector_11+0xc8>
 392:	fa 01       	movw	r30, r20
 394:	32 96       	adiw	r30, 0x02	; 2
 396:	65 91       	lpm	r22, Z+
 398:	74 91       	lpm	r23, Z
 39a:	86 17       	cp	r24, r22
 39c:	97 07       	cpc	r25, r23
 39e:	19 f0       	breq	.+6      	; 0x3a6 <__vector_11+0x9c>
 3a0:	49 5f       	subi	r20, 0xF9	; 249
 3a2:	5f 4f       	sbci	r21, 0xFF	; 255
 3a4:	16 c0       	rjmp	.+44     	; 0x3d2 <__vector_11+0xc8>
 3a6:	fa 01       	movw	r30, r20
 3a8:	34 96       	adiw	r30, 0x04	; 4
 3aa:	85 91       	lpm	r24, Z+
 3ac:	94 91       	lpm	r25, Z
 3ae:	28 2f       	mov	r18, r24
 3b0:	39 2f       	mov	r19, r25
 3b2:	fa 01       	movw	r30, r20
 3b4:	36 96       	adiw	r30, 0x06	; 6
 3b6:	44 91       	lpm	r20, Z
 3b8:	9b 2f       	mov	r25, r27
 3ba:	80 e0       	ldi	r24, 0x00	; 0
 3bc:	8a 2b       	or	r24, r26
 3be:	8f 3f       	cpi	r24, 0xFF	; 255
 3c0:	91 05       	cpc	r25, r1
 3c2:	19 f0       	breq	.+6      	; 0x3ca <__vector_11+0xc0>
 3c4:	10 f0       	brcs	.+4      	; 0x3ca <__vector_11+0xc0>
 3c6:	8f ef       	ldi	r24, 0xFF	; 255
 3c8:	90 e0       	ldi	r25, 0x00	; 0
 3ca:	84 17       	cp	r24, r20
 3cc:	28 f4       	brcc	.+10     	; 0x3d8 <__vector_11+0xce>
 3ce:	48 2f       	mov	r20, r24
 3d0:	03 c0       	rjmp	.+6      	; 0x3d8 <__vector_11+0xce>
 3d2:	c1 50       	subi	r28, 0x01	; 1
 3d4:	a9 f6       	brne	.-86     	; 0x380 <__vector_11+0x76>
 3d6:	cd cf       	rjmp	.-102    	; 0x372 <__vector_11+0x68>
 3d8:	c8 ee       	ldi	r28, 0xE8	; 232
 3da:	d0 e0       	ldi	r29, 0x00	; 0
 3dc:	7e ef       	ldi	r23, 0xFE	; 254
 3de:	a1 ef       	ldi	r26, 0xF1	; 241
 3e0:	b0 e0       	ldi	r27, 0x00	; 0
 3e2:	10 e1       	ldi	r17, 0x10	; 16
 3e4:	88 81       	ld	r24, Y
 3e6:	98 2f       	mov	r25, r24
 3e8:	95 70       	andi	r25, 0x05	; 5
 3ea:	e1 f3       	breq	.-8      	; 0x3e4 <__vector_11+0xda>
 3ec:	82 fd       	sbrc	r24, 2
 3ee:	00 c1       	rjmp	.+512    	; 0x5f0 <__vector_11+0x2e6>
 3f0:	64 2f       	mov	r22, r20
 3f2:	41 31       	cpi	r20, 0x11	; 17
 3f4:	08 f0       	brcs	.+2      	; 0x3f8 <__vector_11+0xee>
 3f6:	61 2f       	mov	r22, r17
 3f8:	66 23       	and	r22, r22
 3fa:	09 f4       	brne	.+2      	; 0x3fe <__vector_11+0xf4>
 3fc:	f6 c0       	rjmp	.+492    	; 0x5ea <__vector_11+0x2e0>
 3fe:	c9 01       	movw	r24, r18
 400:	56 2f       	mov	r21, r22
 402:	fc 01       	movw	r30, r24
 404:	01 96       	adiw	r24, 0x01	; 1
 406:	e4 91       	lpm	r30, Z
 408:	ec 93       	st	X, r30
 40a:	51 50       	subi	r21, 0x01	; 1
 40c:	d1 f7       	brne	.-12     	; 0x402 <__vector_11+0xf8>
 40e:	86 2f       	mov	r24, r22
 410:	81 50       	subi	r24, 0x01	; 1
 412:	90 e0       	ldi	r25, 0x00	; 0
 414:	01 96       	adiw	r24, 0x01	; 1
 416:	28 0f       	add	r18, r24
 418:	39 1f       	adc	r19, r25
 41a:	46 1b       	sub	r20, r22
 41c:	78 83       	st	Y, r23
 41e:	41 11       	cpse	r20, r1
 420:	e1 cf       	rjmp	.-62     	; 0x3e4 <__vector_11+0xda>
 422:	60 31       	cpi	r22, 0x10	; 16
 424:	f9 f2       	breq	.-66     	; 0x3e4 <__vector_11+0xda>
 426:	e4 c0       	rjmp	.+456    	; 0x5f0 <__vector_11+0x2e6>
 428:	45 30       	cpi	r20, 0x05	; 5
 42a:	61 f4       	brne	.+24     	; 0x444 <__vector_11+0x13a>
 42c:	8e ef       	ldi	r24, 0xFE	; 254
 42e:	80 93 e8 00 	sts	0x00E8, r24
 432:	e8 ee       	ldi	r30, 0xE8	; 232
 434:	f0 e0       	ldi	r31, 0x00	; 0
 436:	80 81       	ld	r24, Z
 438:	80 ff       	sbrs	r24, 0
 43a:	fd cf       	rjmp	.-6      	; 0x436 <__vector_11+0x12c>
 43c:	20 68       	ori	r18, 0x80	; 128
 43e:	20 93 e3 00 	sts	0x00E3, r18
 442:	d6 c0       	rjmp	.+428    	; 0x5f0 <__vector_11+0x2e6>
 444:	49 30       	cpi	r20, 0x09	; 9
 446:	a1 f5       	brne	.+104    	; 0x4b0 <__vector_11+0x1a6>
 448:	71 11       	cpse	r23, r1
 44a:	5b c0       	rjmp	.+182    	; 0x502 <__vector_11+0x1f8>
 44c:	20 93 09 01 	sts	0x0109, r18
 450:	10 92 0a 01 	sts	0x010A, r1
 454:	10 92 08 01 	sts	0x0108, r1
 458:	8e ef       	ldi	r24, 0xFE	; 254
 45a:	80 93 e8 00 	sts	0x00E8, r24
 45e:	11 e0       	ldi	r17, 0x01	; 1
 460:	86 ed       	ldi	r24, 0xD6	; 214
 462:	90 e0       	ldi	r25, 0x00	; 0
 464:	c9 ee       	ldi	r28, 0xE9	; 233
 466:	d0 e0       	ldi	r29, 0x00	; 0
 468:	ab ee       	ldi	r26, 0xEB	; 235
 46a:	b0 e0       	ldi	r27, 0x00	; 0
 46c:	6c ee       	ldi	r22, 0xEC	; 236
 46e:	70 e0       	ldi	r23, 0x00	; 0
 470:	4d ee       	ldi	r20, 0xED	; 237
 472:	50 e0       	ldi	r21, 0x00	; 0
 474:	18 83       	st	Y, r17
 476:	9c 01       	movw	r18, r24
 478:	2f 5f       	subi	r18, 0xFF	; 255
 47a:	3f 4f       	sbci	r19, 0xFF	; 255
 47c:	fc 01       	movw	r30, r24
 47e:	04 91       	lpm	r16, Z
 480:	0c 93       	st	X, r16
 482:	00 23       	and	r16, r16
 484:	59 f0       	breq	.+22     	; 0x49c <__vector_11+0x192>
 486:	f9 01       	movw	r30, r18
 488:	24 91       	lpm	r18, Z
 48a:	fb 01       	movw	r30, r22
 48c:	20 83       	st	Z, r18
 48e:	fc 01       	movw	r30, r24
 490:	32 96       	adiw	r30, 0x02	; 2
 492:	03 96       	adiw	r24, 0x03	; 3
 494:	24 91       	lpm	r18, Z
 496:	fa 01       	movw	r30, r20
 498:	20 83       	st	Z, r18
 49a:	01 c0       	rjmp	.+2      	; 0x49e <__vector_11+0x194>
 49c:	c9 01       	movw	r24, r18
 49e:	1f 5f       	subi	r17, 0xFF	; 255
 4a0:	15 30       	cpi	r17, 0x05	; 5
 4a2:	41 f7       	brne	.-48     	; 0x474 <__vector_11+0x16a>
 4a4:	ea ee       	ldi	r30, 0xEA	; 234
 4a6:	f0 e0       	ldi	r31, 0x00	; 0
 4a8:	8e e1       	ldi	r24, 0x1E	; 30
 4aa:	80 83       	st	Z, r24
 4ac:	10 82       	st	Z, r1
 4ae:	a0 c0       	rjmp	.+320    	; 0x5f0 <__vector_11+0x2e6>
 4b0:	48 30       	cpi	r20, 0x08	; 8
 4b2:	81 f4       	brne	.+32     	; 0x4d4 <__vector_11+0x1ca>
 4b4:	70 38       	cpi	r23, 0x80	; 128
 4b6:	09 f0       	breq	.+2      	; 0x4ba <__vector_11+0x1b0>
 4b8:	3f c0       	rjmp	.+126    	; 0x538 <__vector_11+0x22e>
 4ba:	e8 ee       	ldi	r30, 0xE8	; 232
 4bc:	f0 e0       	ldi	r31, 0x00	; 0
 4be:	80 81       	ld	r24, Z
 4c0:	80 ff       	sbrs	r24, 0
 4c2:	fd cf       	rjmp	.-6      	; 0x4be <__vector_11+0x1b4>
 4c4:	80 91 09 01 	lds	r24, 0x0109
 4c8:	80 93 f1 00 	sts	0x00F1, r24
 4cc:	8e ef       	ldi	r24, 0xFE	; 254
 4ce:	80 93 e8 00 	sts	0x00E8, r24
 4d2:	8e c0       	rjmp	.+284    	; 0x5f0 <__vector_11+0x2e6>
 4d4:	41 32       	cpi	r20, 0x21	; 33
 4d6:	a9 f4       	brne	.+42     	; 0x502 <__vector_11+0x1f8>
 4d8:	71 3a       	cpi	r23, 0xA1	; 161
 4da:	f1 f5       	brne	.+124    	; 0x558 <__vector_11+0x24e>
 4dc:	e8 ee       	ldi	r30, 0xE8	; 232
 4de:	f0 e0       	ldi	r31, 0x00	; 0
 4e0:	80 81       	ld	r24, Z
 4e2:	80 ff       	sbrs	r24, 0
 4e4:	fd cf       	rjmp	.-6      	; 0x4e0 <__vector_11+0x1d6>
 4e6:	e0 e0       	ldi	r30, 0x00	; 0
 4e8:	f1 e0       	ldi	r31, 0x01	; 1
 4ea:	a1 ef       	ldi	r26, 0xF1	; 241
 4ec:	b0 e0       	ldi	r27, 0x00	; 0
 4ee:	81 91       	ld	r24, Z+
 4f0:	8c 93       	st	X, r24
 4f2:	41 e0       	ldi	r20, 0x01	; 1
 4f4:	e7 30       	cpi	r30, 0x07	; 7
 4f6:	f4 07       	cpc	r31, r20
 4f8:	d1 f7       	brne	.-12     	; 0x4ee <__vector_11+0x1e4>
 4fa:	8e ef       	ldi	r24, 0xFE	; 254
 4fc:	80 93 e8 00 	sts	0x00E8, r24
 500:	77 c0       	rjmp	.+238    	; 0x5f0 <__vector_11+0x2e6>
 502:	40 32       	cpi	r20, 0x20	; 32
 504:	c9 f4       	brne	.+50     	; 0x538 <__vector_11+0x22e>
 506:	71 32       	cpi	r23, 0x21	; 33
 508:	09 f0       	breq	.+2      	; 0x50c <__vector_11+0x202>
 50a:	6b c0       	rjmp	.+214    	; 0x5e2 <__vector_11+0x2d8>
 50c:	e8 ee       	ldi	r30, 0xE8	; 232
 50e:	f0 e0       	ldi	r31, 0x00	; 0
 510:	80 81       	ld	r24, Z
 512:	82 ff       	sbrs	r24, 2
 514:	fd cf       	rjmp	.-6      	; 0x510 <__vector_11+0x206>
 516:	e0 e0       	ldi	r30, 0x00	; 0
 518:	f1 e0       	ldi	r31, 0x01	; 1
 51a:	a1 ef       	ldi	r26, 0xF1	; 241
 51c:	b0 e0       	ldi	r27, 0x00	; 0
 51e:	8c 91       	ld	r24, X
 520:	81 93       	st	Z+, r24
 522:	51 e0       	ldi	r21, 0x01	; 1
 524:	e7 30       	cpi	r30, 0x07	; 7
 526:	f5 07       	cpc	r31, r21
 528:	d1 f7       	brne	.-12     	; 0x51e <__vector_11+0x214>
 52a:	e8 ee       	ldi	r30, 0xE8	; 232
 52c:	f0 e0       	ldi	r31, 0x00	; 0
 52e:	8b ef       	ldi	r24, 0xFB	; 251
 530:	80 83       	st	Z, r24
 532:	8e ef       	ldi	r24, 0xFE	; 254
 534:	80 83       	st	Z, r24
 536:	5c c0       	rjmp	.+184    	; 0x5f0 <__vector_11+0x2e6>
 538:	42 32       	cpi	r20, 0x22	; 34
 53a:	71 f4       	brne	.+28     	; 0x558 <__vector_11+0x24e>
 53c:	71 32       	cpi	r23, 0x21	; 33
 53e:	09 f0       	breq	.+2      	; 0x542 <__vector_11+0x238>
 540:	50 c0       	rjmp	.+160    	; 0x5e2 <__vector_11+0x2d8>
 542:	20 93 0a 01 	sts	0x010A, r18
 546:	e8 ee       	ldi	r30, 0xE8	; 232
 548:	f0 e0       	ldi	r31, 0x00	; 0
 54a:	80 81       	ld	r24, Z
 54c:	80 ff       	sbrs	r24, 0
 54e:	fd cf       	rjmp	.-6      	; 0x54a <__vector_11+0x240>
 550:	8e ef       	ldi	r24, 0xFE	; 254
 552:	80 93 e8 00 	sts	0x00E8, r24
 556:	4c c0       	rjmp	.+152    	; 0x5f0 <__vector_11+0x2e6>
 558:	41 11       	cpse	r20, r1
 55a:	1a c0       	rjmp	.+52     	; 0x590 <__vector_11+0x286>
 55c:	e8 ee       	ldi	r30, 0xE8	; 232
 55e:	f0 e0       	ldi	r31, 0x00	; 0
 560:	20 81       	ld	r18, Z
 562:	20 ff       	sbrs	r18, 0
 564:	fd cf       	rjmp	.-6      	; 0x560 <__vector_11+0x256>
 566:	72 38       	cpi	r23, 0x82	; 130
 568:	51 f4       	brne	.+20     	; 0x57e <__vector_11+0x274>
 56a:	e9 ee       	ldi	r30, 0xE9	; 233
 56c:	f0 e0       	ldi	r31, 0x00	; 0
 56e:	80 83       	st	Z, r24
 570:	80 91 eb 00 	lds	r24, 0x00EB
 574:	85 fb       	bst	r24, 5
 576:	88 27       	eor	r24, r24
 578:	80 f9       	bld	r24, 0
 57a:	10 82       	st	Z, r1
 57c:	01 c0       	rjmp	.+2      	; 0x580 <__vector_11+0x276>
 57e:	80 e0       	ldi	r24, 0x00	; 0
 580:	e1 ef       	ldi	r30, 0xF1	; 241
 582:	f0 e0       	ldi	r31, 0x00	; 0
 584:	80 83       	st	Z, r24
 586:	10 82       	st	Z, r1
 588:	8e ef       	ldi	r24, 0xFE	; 254
 58a:	80 93 e8 00 	sts	0x00E8, r24
 58e:	30 c0       	rjmp	.+96     	; 0x5f0 <__vector_11+0x2e6>
 590:	41 30       	cpi	r20, 0x01	; 1
 592:	11 f0       	breq	.+4      	; 0x598 <__vector_11+0x28e>
 594:	43 30       	cpi	r20, 0x03	; 3
 596:	29 f5       	brne	.+74     	; 0x5e2 <__vector_11+0x2d8>
 598:	72 30       	cpi	r23, 0x02	; 2
 59a:	19 f5       	brne	.+70     	; 0x5e2 <__vector_11+0x2d8>
 59c:	23 2b       	or	r18, r19
 59e:	09 f5       	brne	.+66     	; 0x5e2 <__vector_11+0x2d8>
 5a0:	8f 77       	andi	r24, 0x7F	; 127
 5a2:	99 27       	eor	r25, r25
 5a4:	38 2f       	mov	r19, r24
 5a6:	31 50       	subi	r19, 0x01	; 1
 5a8:	34 30       	cpi	r19, 0x04	; 4
 5aa:	d8 f4       	brcc	.+54     	; 0x5e2 <__vector_11+0x2d8>
 5ac:	3e ef       	ldi	r19, 0xFE	; 254
 5ae:	30 93 e8 00 	sts	0x00E8, r19
 5b2:	80 93 e9 00 	sts	0x00E9, r24
 5b6:	43 30       	cpi	r20, 0x03	; 3
 5b8:	21 f4       	brne	.+8      	; 0x5c2 <__vector_11+0x2b8>
 5ba:	81 e2       	ldi	r24, 0x21	; 33
 5bc:	80 93 eb 00 	sts	0x00EB, r24
 5c0:	17 c0       	rjmp	.+46     	; 0x5f0 <__vector_11+0x2e6>
 5c2:	99 e1       	ldi	r25, 0x19	; 25
 5c4:	90 93 eb 00 	sts	0x00EB, r25
 5c8:	21 e0       	ldi	r18, 0x01	; 1
 5ca:	30 e0       	ldi	r19, 0x00	; 0
 5cc:	d9 01       	movw	r26, r18
 5ce:	02 c0       	rjmp	.+4      	; 0x5d4 <__vector_11+0x2ca>
 5d0:	aa 0f       	add	r26, r26
 5d2:	bb 1f       	adc	r27, r27
 5d4:	8a 95       	dec	r24
 5d6:	e2 f7       	brpl	.-8      	; 0x5d0 <__vector_11+0x2c6>
 5d8:	ea ee       	ldi	r30, 0xEA	; 234
 5da:	f0 e0       	ldi	r31, 0x00	; 0
 5dc:	a0 83       	st	Z, r26
 5de:	10 82       	st	Z, r1
 5e0:	07 c0       	rjmp	.+14     	; 0x5f0 <__vector_11+0x2e6>
 5e2:	81 e2       	ldi	r24, 0x21	; 33
 5e4:	80 93 eb 00 	sts	0x00EB, r24
 5e8:	03 c0       	rjmp	.+6      	; 0x5f0 <__vector_11+0x2e6>
 5ea:	78 83       	st	Y, r23
 5ec:	41 11       	cpse	r20, r1
 5ee:	fa ce       	rjmp	.-524    	; 0x3e4 <__vector_11+0xda>
 5f0:	ff 91       	pop	r31
 5f2:	ef 91       	pop	r30
 5f4:	df 91       	pop	r29
 5f6:	cf 91       	pop	r28
 5f8:	bf 91       	pop	r27
 5fa:	af 91       	pop	r26
 5fc:	9f 91       	pop	r25
 5fe:	8f 91       	pop	r24
 600:	7f 91       	pop	r23
 602:	6f 91       	pop	r22
 604:	5f 91       	pop	r21
 606:	4f 91       	pop	r20
 608:	3f 91       	pop	r19
 60a:	2f 91       	pop	r18
 60c:	1f 91       	pop	r17
 60e:	0f 91       	pop	r16
 610:	0f 90       	pop	r0
 612:	0f be       	out	0x3f, r0	; 63
 614:	0f 90       	pop	r0
 616:	1f 90       	pop	r1
 618:	18 95       	reti

0000061a <print_P>:
 61a:	1f 93       	push	r17
 61c:	cf 93       	push	r28
 61e:	df 93       	push	r29
 620:	ec 01       	movw	r28, r24
 622:	21 96       	adiw	r28, 0x01	; 1
 624:	fc 01       	movw	r30, r24
 626:	14 91       	lpm	r17, Z
 628:	11 23       	and	r17, r17
 62a:	69 f0       	breq	.+26     	; 0x646 <print_P+0x2c>
 62c:	1a 30       	cpi	r17, 0x0A	; 10
 62e:	19 f4       	brne	.+6      	; 0x636 <print_P+0x1c>
 630:	8d e0       	ldi	r24, 0x0D	; 13
 632:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <m_usb_tx_char>
 636:	81 2f       	mov	r24, r17
 638:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <m_usb_tx_char>
 63c:	fe 01       	movw	r30, r28
 63e:	21 96       	adiw	r28, 0x01	; 1
 640:	14 91       	lpm	r17, Z
 642:	11 11       	cpse	r17, r1
 644:	f3 cf       	rjmp	.-26     	; 0x62c <print_P+0x12>
 646:	df 91       	pop	r29
 648:	cf 91       	pop	r28
 64a:	1f 91       	pop	r17
 64c:	08 95       	ret

0000064e <m_usb_tx_int>:
 64e:	ef 92       	push	r14
 650:	ff 92       	push	r15
 652:	0f 93       	push	r16
 654:	1f 93       	push	r17
 656:	cf 93       	push	r28
 658:	df 93       	push	r29
 65a:	cd b7       	in	r28, 0x3d	; 61
 65c:	de b7       	in	r29, 0x3e	; 62
 65e:	27 97       	sbiw	r28, 0x07	; 7
 660:	0f b6       	in	r0, 0x3f	; 63
 662:	f8 94       	cli
 664:	de bf       	out	0x3e, r29	; 62
 666:	0f be       	out	0x3f, r0	; 63
 668:	cd bf       	out	0x3d, r28	; 61
 66a:	8e 01       	movw	r16, r28
 66c:	0f 5f       	subi	r16, 0xFF	; 255
 66e:	1f 4f       	sbci	r17, 0xFF	; 255
 670:	27 e0       	ldi	r18, 0x07	; 7
 672:	f8 01       	movw	r30, r16
 674:	11 92       	st	Z+, r1
 676:	2a 95       	dec	r18
 678:	e9 f7       	brne	.-6      	; 0x674 <m_usb_tx_int+0x26>
 67a:	4a e0       	ldi	r20, 0x0A	; 10
 67c:	50 e0       	ldi	r21, 0x00	; 0
 67e:	b8 01       	movw	r22, r16
 680:	0e 94 7e 04 	call	0x8fc	; 0x8fc <itoa>
 684:	7e 01       	movw	r14, r28
 686:	f8 e0       	ldi	r31, 0x08	; 8
 688:	ef 0e       	add	r14, r31
 68a:	f1 1c       	adc	r15, r1
 68c:	f8 01       	movw	r30, r16
 68e:	81 91       	ld	r24, Z+
 690:	8f 01       	movw	r16, r30
 692:	81 11       	cpse	r24, r1
 694:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <m_usb_tx_char>
 698:	0e 15       	cp	r16, r14
 69a:	1f 05       	cpc	r17, r15
 69c:	b9 f7       	brne	.-18     	; 0x68c <m_usb_tx_int+0x3e>
 69e:	27 96       	adiw	r28, 0x07	; 7
 6a0:	0f b6       	in	r0, 0x3f	; 63
 6a2:	f8 94       	cli
 6a4:	de bf       	out	0x3e, r29	; 62
 6a6:	0f be       	out	0x3f, r0	; 63
 6a8:	cd bf       	out	0x3d, r28	; 61
 6aa:	df 91       	pop	r29
 6ac:	cf 91       	pop	r28
 6ae:	1f 91       	pop	r17
 6b0:	0f 91       	pop	r16
 6b2:	ff 90       	pop	r15
 6b4:	ef 90       	pop	r14
 6b6:	08 95       	ret

000006b8 <PT_cycle>:
}

void PT_cycle() {
	//cycles ADC input clockwise

	clear(ADCSRB, MUX5);//Set analog input (F6) PHOTOTRANSISTOR 1
 6b8:	eb e7       	ldi	r30, 0x7B	; 123
 6ba:	f0 e0       	ldi	r31, 0x00	; 0
 6bc:	80 81       	ld	r24, Z
 6be:	8f 7d       	andi	r24, 0xDF	; 223
 6c0:	80 83       	st	Z, r24
	set(ADMUX, MUX2);	//^
 6c2:	ec e7       	ldi	r30, 0x7C	; 124
 6c4:	f0 e0       	ldi	r31, 0x00	; 0
 6c6:	80 81       	ld	r24, Z
 6c8:	84 60       	ori	r24, 0x04	; 4
 6ca:	80 83       	st	Z, r24
	set(ADMUX, MUX1);	//^
 6cc:	80 81       	ld	r24, Z
 6ce:	82 60       	ori	r24, 0x02	; 2
 6d0:	80 83       	st	Z, r24
	clear(ADMUX, MUX0);	//^
 6d2:	80 81       	ld	r24, Z
 6d4:	8e 7f       	andi	r24, 0xFE	; 254
 6d6:	80 83       	st	Z, r24
	
	set(ADCSRA, ADEN);	//Enable/Start conversion
 6d8:	ea e7       	ldi	r30, 0x7A	; 122
 6da:	f0 e0       	ldi	r31, 0x00	; 0
 6dc:	80 81       	ld	r24, Z
 6de:	80 68       	ori	r24, 0x80	; 128
 6e0:	80 83       	st	Z, r24
	set(ADCSRA, ADSC);	//^
 6e2:	80 81       	ld	r24, Z
 6e4:	80 64       	ori	r24, 0x40	; 64
 6e6:	80 83       	st	Z, r24
 6e8:	08 95       	ret

000006ea <main>:
	int counter = 0;
	/*/
	
	int flag;
	
	m_clockdivide(0);
 6ea:	e1 e6       	ldi	r30, 0x61	; 97
 6ec:	f0 e0       	ldi	r31, 0x00	; 0
 6ee:	80 e8       	ldi	r24, 0x80	; 128
 6f0:	80 83       	st	Z, r24
 6f2:	10 82       	st	Z, r1
	
	//TIMER 0: For Controlling the solenoid
	
	set(TCCR0B, WGM02);
 6f4:	85 b5       	in	r24, 0x25	; 37
 6f6:	88 60       	ori	r24, 0x08	; 8
 6f8:	85 bd       	out	0x25, r24	; 37
	set(TCCR0A, WGM01);
 6fa:	84 b5       	in	r24, 0x24	; 36
 6fc:	82 60       	ori	r24, 0x02	; 2
 6fe:	84 bd       	out	0x24, r24	; 36
	set(TCCR0A, WGM01);
 700:	84 b5       	in	r24, 0x24	; 36
 702:	82 60       	ori	r24, 0x02	; 2
 704:	84 bd       	out	0x24, r24	; 36
	
	set(TCCR0A, COM0B1);
 706:	84 b5       	in	r24, 0x24	; 36
 708:	80 62       	ori	r24, 0x20	; 32
 70a:	84 bd       	out	0x24, r24	; 36
	clear(TCCR0A, COM0B0);
 70c:	84 b5       	in	r24, 0x24	; 36
 70e:	8f 7e       	andi	r24, 0xEF	; 239
 710:	84 bd       	out	0x24, r24	; 36
	
	set(TCCR0B, CS02);
 712:	85 b5       	in	r24, 0x25	; 37
 714:	84 60       	ori	r24, 0x04	; 4
 716:	85 bd       	out	0x25, r24	; 37
	set(TCCR0B, CS01);
 718:	85 b5       	in	r24, 0x25	; 37
 71a:	82 60       	ori	r24, 0x02	; 2
 71c:	85 bd       	out	0x25, r24	; 37
	set(TCCR0B, CS00);
 71e:	85 b5       	in	r24, 0x25	; 37
 720:	81 60       	ori	r24, 0x01	; 1
 722:	85 bd       	out	0x25, r24	; 37
	
	set(DDRB,7);
 724:	27 9a       	sbi	0x04, 7	; 4
	
	OCR1A = 0xFF;
 726:	c8 e8       	ldi	r28, 0x88	; 136
 728:	d0 e0       	ldi	r29, 0x00	; 0
 72a:	8f ef       	ldi	r24, 0xFF	; 255
 72c:	90 e0       	ldi	r25, 0x00	; 0
 72e:	99 83       	std	Y+1, r25	; 0x01
 730:	88 83       	st	Y, r24
	OCR1B = 0;
 732:	2a e8       	ldi	r18, 0x8A	; 138
 734:	30 e0       	ldi	r19, 0x00	; 0
 736:	f9 01       	movw	r30, r18
 738:	11 82       	std	Z+1, r1	; 0x01
 73a:	10 82       	st	Z, r1
	
	//TIMER 1: For Controlling the left wheel
	
	set(TCCR1B, WGM13);
 73c:	e1 e8       	ldi	r30, 0x81	; 129
 73e:	f0 e0       	ldi	r31, 0x00	; 0
 740:	80 81       	ld	r24, Z
 742:	80 61       	ori	r24, 0x10	; 16
 744:	80 83       	st	Z, r24
	set(TCCR1B, WGM12);
 746:	80 81       	ld	r24, Z
 748:	88 60       	ori	r24, 0x08	; 8
 74a:	80 83       	st	Z, r24
	set(TCCR1A, WGM11);
 74c:	a0 e8       	ldi	r26, 0x80	; 128
 74e:	b0 e0       	ldi	r27, 0x00	; 0
 750:	8c 91       	ld	r24, X
 752:	82 60       	ori	r24, 0x02	; 2
 754:	8c 93       	st	X, r24
	set(TCCR1A, WGM10);
 756:	8c 91       	ld	r24, X
 758:	81 60       	ori	r24, 0x01	; 1
 75a:	8c 93       	st	X, r24
	
	set(TCCR1A, COM1B1);
 75c:	8c 91       	ld	r24, X
 75e:	80 62       	ori	r24, 0x20	; 32
 760:	8c 93       	st	X, r24
	clear(TCCR1A, COM1B0);
 762:	8c 91       	ld	r24, X
 764:	8f 7e       	andi	r24, 0xEF	; 239
 766:	8c 93       	st	X, r24
	
	clear(TCCR1B, CS12);
 768:	80 81       	ld	r24, Z
 76a:	8b 7f       	andi	r24, 0xFB	; 251
 76c:	80 83       	st	Z, r24
	clear(TCCR1B, CS11);
 76e:	80 81       	ld	r24, Z
 770:	8d 7f       	andi	r24, 0xFD	; 253
 772:	80 83       	st	Z, r24
	set(TCCR1B, CS10);
 774:	80 81       	ld	r24, Z
 776:	81 60       	ori	r24, 0x01	; 1
 778:	80 83       	st	Z, r24
	
	set(DDRB,6);
 77a:	26 9a       	sbi	0x04, 6	; 4
	
	OCR1A = 0xFFFF;
 77c:	8f ef       	ldi	r24, 0xFF	; 255
 77e:	9f ef       	ldi	r25, 0xFF	; 255
 780:	99 83       	std	Y+1, r25	; 0x01
 782:	88 83       	st	Y, r24
	OCR1B = 0;
 784:	f9 01       	movw	r30, r18
 786:	11 82       	std	Z+1, r1	; 0x01
 788:	10 82       	st	Z, r1
	
	//TIMER 3: For Controlling the right wheel
	
	set(TCCR3B, WGM33);
 78a:	e1 e9       	ldi	r30, 0x91	; 145
 78c:	f0 e0       	ldi	r31, 0x00	; 0
 78e:	20 81       	ld	r18, Z
 790:	20 61       	ori	r18, 0x10	; 16
 792:	20 83       	st	Z, r18
	set(TCCR3B, WGM32);
 794:	20 81       	ld	r18, Z
 796:	28 60       	ori	r18, 0x08	; 8
 798:	20 83       	st	Z, r18
	set(TCCR3A, WGM31);
 79a:	a0 e9       	ldi	r26, 0x90	; 144
 79c:	b0 e0       	ldi	r27, 0x00	; 0
 79e:	2c 91       	ld	r18, X
 7a0:	22 60       	ori	r18, 0x02	; 2
 7a2:	2c 93       	st	X, r18
	clear(TCCR3A, WGM30);
 7a4:	2c 91       	ld	r18, X
 7a6:	2e 7f       	andi	r18, 0xFE	; 254
 7a8:	2c 93       	st	X, r18
	
	set(TCCR3A, COM3A1);
 7aa:	2c 91       	ld	r18, X
 7ac:	20 68       	ori	r18, 0x80	; 128
 7ae:	2c 93       	st	X, r18
	clear(TCCR3A, COM3A0);
 7b0:	2c 91       	ld	r18, X
 7b2:	2f 7b       	andi	r18, 0xBF	; 191
 7b4:	2c 93       	st	X, r18
	
	clear(TCCR3B, CS32);
 7b6:	20 81       	ld	r18, Z
 7b8:	2b 7f       	andi	r18, 0xFB	; 251
 7ba:	20 83       	st	Z, r18
	clear(TCCR3B, CS31);
 7bc:	20 81       	ld	r18, Z
 7be:	2d 7f       	andi	r18, 0xFD	; 253
 7c0:	20 83       	st	Z, r18
	set(TCCR3B, CS30);
 7c2:	20 81       	ld	r18, Z
 7c4:	21 60       	ori	r18, 0x01	; 1
 7c6:	20 83       	st	Z, r18
	
	ICR3 = 0xFFFF;
 7c8:	90 93 97 00 	sts	0x0097, r25
 7cc:	80 93 96 00 	sts	0x0096, r24
	OCR1A = 0;
 7d0:	19 82       	std	Y+1, r1	; 0x01
 7d2:	18 82       	st	Y, r1
	
	//Pin for controlling solenoid pulse
	set(DDRB,7);
 7d4:	27 9a       	sbi	0x04, 7	; 4
	
	//Pins for controlling speed of left and right wheel
	set(DDRB,6);
 7d6:	26 9a       	sbi	0x04, 6	; 4
	set(DDRC,6);
 7d8:	3e 9a       	sbi	0x07, 6	; 7
	
	//Pins for determining direction of wheels
	set(DDRB,2);
 7da:	22 9a       	sbi	0x04, 2	; 4
	set(DDRB,3);
 7dc:	23 9a       	sbi	0x04, 3	; 4
	
	//ADC's
	sei();					//Set up interrupts
 7de:	78 94       	sei
	set(ADCSRA,ADIE);
 7e0:	ea e7       	ldi	r30, 0x7A	; 122
 7e2:	f0 e0       	ldi	r31, 0x00	; 0
 7e4:	80 81       	ld	r24, Z
 7e6:	88 60       	ori	r24, 0x08	; 8
 7e8:	80 83       	st	Z, r24
	
	clear(ADMUX, REFS1);	//Voltage reference is AR pin (5V)
 7ea:	ac e7       	ldi	r26, 0x7C	; 124
 7ec:	b0 e0       	ldi	r27, 0x00	; 0
 7ee:	8c 91       	ld	r24, X
 7f0:	8f 77       	andi	r24, 0x7F	; 127
 7f2:	8c 93       	st	X, r24
	clear(ADMUX, REFS0);	//^
 7f4:	8c 91       	ld	r24, X
 7f6:	8f 7b       	andi	r24, 0xBF	; 191
 7f8:	8c 93       	st	X, r24
	
	set(ADCSRA, ADPS2);	//Set scale to /128
 7fa:	80 81       	ld	r24, Z
 7fc:	84 60       	ori	r24, 0x04	; 4
 7fe:	80 83       	st	Z, r24
	set(ADCSRA, ADPS1);	//^
 800:	80 81       	ld	r24, Z
 802:	82 60       	ori	r24, 0x02	; 2
 804:	80 83       	st	Z, r24
	set(ADCSRA, ADPS0);	//^
 806:	80 81       	ld	r24, Z
 808:	81 60       	ori	r24, 0x01	; 1
 80a:	80 83       	st	Z, r24
	
	set(DIDR0, ADC0D);	//Disable digital input for F0
 80c:	ae e7       	ldi	r26, 0x7E	; 126
 80e:	b0 e0       	ldi	r27, 0x00	; 0
 810:	8c 91       	ld	r24, X
 812:	81 60       	ori	r24, 0x01	; 1
 814:	8c 93       	st	X, r24
	set(DIDR0, ADC1D);	//Disable digital input for F1
 816:	8c 91       	ld	r24, X
 818:	82 60       	ori	r24, 0x02	; 2
 81a:	8c 93       	st	X, r24
	set(DIDR0, ADC4D);	//Disable digital input for F4
 81c:	8c 91       	ld	r24, X
 81e:	80 61       	ori	r24, 0x10	; 16
 820:	8c 93       	st	X, r24
	set(DIDR0, ADC5D);	//Disable digital input for F5
 822:	8c 91       	ld	r24, X
 824:	80 62       	ori	r24, 0x20	; 32
 826:	8c 93       	st	X, r24
	set(DIDR0, ADC6D);	//Disable digital input for F6
 828:	8c 91       	ld	r24, X
 82a:	80 64       	ori	r24, 0x40	; 64
 82c:	8c 93       	st	X, r24
	set(DIDR2, ADC8D);	//Disable digital input for D4
 82e:	ad e7       	ldi	r26, 0x7D	; 125
 830:	b0 e0       	ldi	r27, 0x00	; 0
 832:	8c 91       	ld	r24, X
 834:	81 60       	ori	r24, 0x01	; 1
 836:	8c 93       	st	X, r24
	set(DIDR2, ADC9D);	//Disable digital input for D6
 838:	8c 91       	ld	r24, X
 83a:	82 60       	ori	r24, 0x02	; 2
 83c:	8c 93       	st	X, r24
		
	set(ADCSRA, ADATE);	//Set trigger to free-running mode
 83e:	80 81       	ld	r24, Z
 840:	80 62       	ori	r24, 0x20	; 32
 842:	80 83       	st	Z, r24
	
	set(ADCSRA, ADIF);	//Enable reading results
 844:	80 81       	ld	r24, Z
 846:	80 61       	ori	r24, 0x10	; 16
 848:	80 83       	st	Z, r24
	
	//Limit Switch stuffs
	clear(DDRB,0); //set to input, RIGHT LIMIT SWITCH
 84a:	20 98       	cbi	0x04, 0	; 4
	clear(DDRB,1); //set to input, LEFT LIMIT SWITCH
 84c:	21 98       	cbi	0x04, 1	; 4
	
	clear(PORTB,0); //disable internal pull up resistor
 84e:	28 98       	cbi	0x05, 0	; 5
	clear(PORTB,1); //disable internal pull up resistor
 850:	29 98       	cbi	0x05, 1	; 5
	 
	int state; // state variable
	state = -4; //set state
	int count = 0;
	
	m_usb_init();
 852:	0e 94 d2 00 	call	0x1a4	; 0x1a4 <m_usb_init>
		//wireless stuffs
		
        //manually say what each buffer[i] will be (corresponds to a state, variable output, etc.)

        //e.g.
        buffer[0] = 50;
 856:	82 e3       	ldi	r24, 0x32	; 50
 858:	80 93 0c 01 	sts	0x010C, r24
        buffer[1] = 2;
 85c:	82 e0       	ldi	r24, 0x02	; 2
 85e:	80 93 0d 01 	sts	0x010D, r24
		
		//switch states
        switch (state) {
			
			case -4: //test phototransistors
				PT_cycle();
 862:	0e 94 5c 03 	call	0x6b8	; 0x6b8 <PT_cycle>
	clear(PORTB,1); //disable internal pull up resistor
	
	 
	int state; // state variable
	state = -4; //set state
	int count = 0;
 866:	c0 e0       	ldi	r28, 0x00	; 0
 868:	d0 e0       	ldi	r29, 0x00	; 0
		//wireless stuffs
		
        //manually say what each buffer[i] will be (corresponds to a state, variable output, etc.)

        //e.g.
        buffer[0] = 50;
 86a:	0f 2e       	mov	r0, r31
 86c:	fc e0       	ldi	r31, 0x0C	; 12
 86e:	ef 2e       	mov	r14, r31
 870:	f1 e0       	ldi	r31, 0x01	; 1
 872:	ff 2e       	mov	r15, r31
 874:	f0 2d       	mov	r31, r0
 876:	0f 2e       	mov	r0, r31
 878:	f2 e3       	ldi	r31, 0x32	; 50
 87a:	8f 2e       	mov	r8, r31
 87c:	f0 2d       	mov	r31, r0
        buffer[1] = 2;
 87e:	0d e0       	ldi	r16, 0x0D	; 13
 880:	11 e0       	ldi	r17, 0x01	; 1
 882:	68 94       	set
 884:	99 24       	eor	r9, r9
 886:	91 f8       	bld	r9, 1
			
			case -4: //test phototransistors
				PT_cycle();
				if (count > 10000) {
				m_usb_tx_string("\tADC: ");
				m_usb_tx_int(ADC);
 888:	0f 2e       	mov	r0, r31
 88a:	f8 e7       	ldi	r31, 0x78	; 120
 88c:	af 2e       	mov	r10, r31
 88e:	b1 2c       	mov	r11, r1
 890:	f0 2d       	mov	r31, r0
				count = 0;
 892:	c1 2c       	mov	r12, r1
 894:	d1 2c       	mov	r13, r1
 896:	0a c0       	rjmp	.+20     	; 0x8ac <main+0x1c2>
        switch (state) {
			
			case -4: //test phototransistors
				PT_cycle();
				if (count > 10000) {
				m_usb_tx_string("\tADC: ");
 898:	8f e5       	ldi	r24, 0x5F	; 95
 89a:	91 e0       	ldi	r25, 0x01	; 1
 89c:	0e 94 0d 03 	call	0x61a	; 0x61a <print_P>
				m_usb_tx_int(ADC);
 8a0:	f5 01       	movw	r30, r10
 8a2:	80 81       	ld	r24, Z
 8a4:	91 81       	ldd	r25, Z+1	; 0x01
 8a6:	0e 94 27 03 	call	0x64e	; 0x64e <m_usb_tx_int>
				count = 0;
 8aa:	e6 01       	movw	r28, r12
				}
				count++;
 8ac:	21 96       	adiw	r28, 0x01	; 1
		//wireless stuffs
		
        //manually say what each buffer[i] will be (corresponds to a state, variable output, etc.)

        //e.g.
        buffer[0] = 50;
 8ae:	f7 01       	movw	r30, r14
 8b0:	80 82       	st	Z, r8
        buffer[1] = 2;
 8b2:	f8 01       	movw	r30, r16
 8b4:	90 82       	st	Z, r9
		
		//switch states
        switch (state) {
			
			case -4: //test phototransistors
				PT_cycle();
 8b6:	0e 94 5c 03 	call	0x6b8	; 0x6b8 <PT_cycle>
				if (count > 10000) {
 8ba:	c1 31       	cpi	r28, 0x11	; 17
 8bc:	f7 e2       	ldi	r31, 0x27	; 39
 8be:	df 07       	cpc	r29, r31
 8c0:	ac f3       	brlt	.-22     	; 0x8ac <main+0x1c2>
 8c2:	ea cf       	rjmp	.-44     	; 0x898 <main+0x1ae>

000008c4 <__vector_29>:
		}
        
    }
}

ISR(ADC_vect) {
 8c4:	1f 92       	push	r1
 8c6:	0f 92       	push	r0
 8c8:	0f b6       	in	r0, 0x3f	; 63
 8ca:	0f 92       	push	r0
 8cc:	11 24       	eor	r1, r1
 8ce:	2f 93       	push	r18
 8d0:	8f 93       	push	r24
 8d2:	9f 93       	push	r25
	if (ADC  > 500) {
 8d4:	80 91 78 00 	lds	r24, 0x0078
 8d8:	90 91 79 00 	lds	r25, 0x0079
 8dc:	85 3f       	cpi	r24, 0xF5	; 245
 8de:	91 40       	sbci	r25, 0x01	; 1
 8e0:	18 f0       	brcs	.+6      	; 0x8e8 <__vector_29+0x24>
		m_green(ON);
 8e2:	6a 9a       	sbi	0x0d, 2	; 13
 8e4:	72 98       	cbi	0x0e, 2	; 14
 8e6:	02 c0       	rjmp	.+4      	; 0x8ec <__vector_29+0x28>
	}
	
	else {
		m_green(OFF);
 8e8:	6a 9a       	sbi	0x0d, 2	; 13
 8ea:	72 9a       	sbi	0x0e, 2	; 14
	}
 8ec:	9f 91       	pop	r25
 8ee:	8f 91       	pop	r24
 8f0:	2f 91       	pop	r18
 8f2:	0f 90       	pop	r0
 8f4:	0f be       	out	0x3f, r0	; 63
 8f6:	0f 90       	pop	r0
 8f8:	1f 90       	pop	r1
 8fa:	18 95       	reti

000008fc <itoa>:
 8fc:	fb 01       	movw	r30, r22
 8fe:	9f 01       	movw	r18, r30
 900:	e8 94       	clt
 902:	42 30       	cpi	r20, 0x02	; 2
 904:	c4 f0       	brlt	.+48     	; 0x936 <itoa+0x3a>
 906:	45 32       	cpi	r20, 0x25	; 37
 908:	b4 f4       	brge	.+44     	; 0x936 <itoa+0x3a>
 90a:	4a 30       	cpi	r20, 0x0A	; 10
 90c:	29 f4       	brne	.+10     	; 0x918 <itoa+0x1c>
 90e:	97 fb       	bst	r25, 7
 910:	1e f4       	brtc	.+6      	; 0x918 <itoa+0x1c>
 912:	90 95       	com	r25
 914:	81 95       	neg	r24
 916:	9f 4f       	sbci	r25, 0xFF	; 255
 918:	64 2f       	mov	r22, r20
 91a:	77 27       	eor	r23, r23
 91c:	0e 94 af 04 	call	0x95e	; 0x95e <__udivmodhi4>
 920:	80 5d       	subi	r24, 0xD0	; 208
 922:	8a 33       	cpi	r24, 0x3A	; 58
 924:	0c f0       	brlt	.+2      	; 0x928 <itoa+0x2c>
 926:	89 5d       	subi	r24, 0xD9	; 217
 928:	81 93       	st	Z+, r24
 92a:	cb 01       	movw	r24, r22
 92c:	00 97       	sbiw	r24, 0x00	; 0
 92e:	a1 f7       	brne	.-24     	; 0x918 <itoa+0x1c>
 930:	16 f4       	brtc	.+4      	; 0x936 <itoa+0x3a>
 932:	5d e2       	ldi	r21, 0x2D	; 45
 934:	51 93       	st	Z+, r21
 936:	10 82       	st	Z, r1
 938:	c9 01       	movw	r24, r18
 93a:	0c 94 9f 04 	jmp	0x93e	; 0x93e <strrev>

0000093e <strrev>:
 93e:	dc 01       	movw	r26, r24
 940:	fc 01       	movw	r30, r24
 942:	67 2f       	mov	r22, r23
 944:	71 91       	ld	r23, Z+
 946:	77 23       	and	r23, r23
 948:	e1 f7       	brne	.-8      	; 0x942 <strrev+0x4>
 94a:	32 97       	sbiw	r30, 0x02	; 2
 94c:	04 c0       	rjmp	.+8      	; 0x956 <strrev+0x18>
 94e:	7c 91       	ld	r23, X
 950:	6d 93       	st	X+, r22
 952:	70 83       	st	Z, r23
 954:	62 91       	ld	r22, -Z
 956:	ae 17       	cp	r26, r30
 958:	bf 07       	cpc	r27, r31
 95a:	c8 f3       	brcs	.-14     	; 0x94e <strrev+0x10>
 95c:	08 95       	ret

0000095e <__udivmodhi4>:
 95e:	aa 1b       	sub	r26, r26
 960:	bb 1b       	sub	r27, r27
 962:	51 e1       	ldi	r21, 0x11	; 17
 964:	07 c0       	rjmp	.+14     	; 0x974 <__udivmodhi4_ep>

00000966 <__udivmodhi4_loop>:
 966:	aa 1f       	adc	r26, r26
 968:	bb 1f       	adc	r27, r27
 96a:	a6 17       	cp	r26, r22
 96c:	b7 07       	cpc	r27, r23
 96e:	10 f0       	brcs	.+4      	; 0x974 <__udivmodhi4_ep>
 970:	a6 1b       	sub	r26, r22
 972:	b7 0b       	sbc	r27, r23

00000974 <__udivmodhi4_ep>:
 974:	88 1f       	adc	r24, r24
 976:	99 1f       	adc	r25, r25
 978:	5a 95       	dec	r21
 97a:	a9 f7       	brne	.-22     	; 0x966 <__udivmodhi4_loop>
 97c:	80 95       	com	r24
 97e:	90 95       	com	r25
 980:	bc 01       	movw	r22, r24
 982:	cd 01       	movw	r24, r26
 984:	08 95       	ret

00000986 <_exit>:
 986:	f8 94       	cli

00000988 <__stop_program>:
 988:	ff cf       	rjmp	.-2      	; 0x988 <__stop_program>
