
Robockey.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000c  00800100  00001904  00001998  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001904  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000048  0080010c  0080010c  000019a4  2**0
                  ALLOC
  3 .stab         000034bc  00000000  00000000  000019a4  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00001008  00000000  00000000  00004e60  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      0000002f  00000000  00000000  00005e68  2**0
                  CONTENTS, READONLY
  6 .debug_aranges 000002d8  00000000  00000000  00005e97  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00002ff6  00000000  00000000  0000616f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00000b7f  00000000  00000000  00009165  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00001255  00000000  00000000  00009ce4  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  0000087c  00000000  00000000  0000af3c  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    0000083c  00000000  00000000  0000b7b8  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    00003393  00000000  00000000  0000bff4  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 000002c0  00000000  00000000  0000f387  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 b0 00 	jmp	0x160	; 0x160 <__ctors_end>
       4:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>
       8:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>
       c:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>
      10:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>
      14:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>
      18:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>
      1c:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>
      20:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>
      24:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>
      28:	0c 94 fa 04 	jmp	0x9f4	; 0x9f4 <__vector_10>
      2c:	0c 94 38 05 	jmp	0xa70	; 0xa70 <__vector_11>
      30:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>
      34:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>
      38:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>
      3c:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>
      40:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>
      44:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>
      48:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>
      4c:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>
      50:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>
      54:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>
      58:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>
      5c:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>
      60:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>
      64:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>
      68:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>
      6c:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>
      70:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>
      74:	0c 94 ba 0a 	jmp	0x1574	; 0x1574 <__vector_29>
      78:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>
      7c:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>
      80:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>
      84:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>
      88:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>
      8c:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>
      90:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>
      94:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>
      98:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>
      9c:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>
      a0:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>
      a4:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>
      a8:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__bad_interrupt>

000000ac <descriptor_list>:
      ac:	00 01 00 00 e0 00 12 00 02 00 00 f2 00 43 00 03     .............C..
      bc:	00 00 35 01 04 01 03 09 04 39 01 12 02 03 09 04     ..5......9......
      cc:	4d 01 06 03 03 09 04 55 01 08                       M......U..

000000d6 <endpoint_config_table>:
      d6:	00 01 c1 12 01 80 36 01 81 36                       ......6..6

000000e0 <device_descriptor>:
      e0:	12 01 00 02 02 00 00 10 c0 16 7a 04 00 01 01 02     ..........z.....
      f0:	03 01                                               ..

000000f2 <config1_descriptor>:
      f2:	09 02 43 00 02 01 00 c0 32 09 04 00 00 01 02 02     ..C.....2.......
     102:	01 00 05 24 00 10 01 05 24 01 01 01 04 24 02 06     ...$....$....$..
     112:	05 24 06 00 01 07 05 82 03 10 00 40 09 04 01 00     .$.........@....
     122:	02 0a 00 00 00 07 05 03 02 40 00 00 07 05 84 02     .........@......
     132:	40 00 00                                            @..

00000135 <string0>:
     135:	04 03 09 04                                         ....

00000139 <string1>:
     139:	12 03 4a 00 2e 00 20 00 46 00 69 00 65 00 6e 00     ..J... .F.i.e.n.
     149:	65 00 00 00                                         e...

0000014d <string2>:
     14d:	06 03 4d 00 32 00 00 00                             ..M.2...

00000155 <string3>:
     155:	08 03 34 00 31 00 30 00 00 00 00                    ..4.1.0....

00000160 <__ctors_end>:
     160:	11 24       	eor	r1, r1
     162:	1f be       	out	0x3f, r1	; 63
     164:	cf ef       	ldi	r28, 0xFF	; 255
     166:	da e0       	ldi	r29, 0x0A	; 10
     168:	de bf       	out	0x3e, r29	; 62
     16a:	cd bf       	out	0x3d, r28	; 61

0000016c <__do_copy_data>:
     16c:	11 e0       	ldi	r17, 0x01	; 1
     16e:	a0 e0       	ldi	r26, 0x00	; 0
     170:	b1 e0       	ldi	r27, 0x01	; 1
     172:	e4 e0       	ldi	r30, 0x04	; 4
     174:	f9 e1       	ldi	r31, 0x19	; 25
     176:	02 c0       	rjmp	.+4      	; 0x17c <__do_copy_data+0x10>
     178:	05 90       	lpm	r0, Z+
     17a:	0d 92       	st	X+, r0
     17c:	ac 30       	cpi	r26, 0x0C	; 12
     17e:	b1 07       	cpc	r27, r17
     180:	d9 f7       	brne	.-10     	; 0x178 <__do_copy_data+0xc>

00000182 <__do_clear_bss>:
     182:	21 e0       	ldi	r18, 0x01	; 1
     184:	ac e0       	ldi	r26, 0x0C	; 12
     186:	b1 e0       	ldi	r27, 0x01	; 1
     188:	01 c0       	rjmp	.+2      	; 0x18c <.do_clear_bss_start>

0000018a <.do_clear_bss_loop>:
     18a:	1d 92       	st	X+, r1

0000018c <.do_clear_bss_start>:
     18c:	a4 35       	cpi	r26, 0x54	; 84
     18e:	b2 07       	cpc	r27, r18
     190:	e1 f7       	brne	.-8      	; 0x18a <.do_clear_bss_loop>
     192:	0e 94 61 09 	call	0x12c2	; 0x12c2 <main>
     196:	0c 94 80 0c 	jmp	0x1900	; 0x1900 <_exit>

0000019a <__bad_interrupt>:
     19a:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000019e <m_bus_init>:
     19e:	58 9a       	sbi	0x0b, 0	; 11
     1a0:	59 9a       	sbi	0x0b, 1	; 11
     1a2:	5a 9a       	sbi	0x0b, 2	; 11
     1a4:	8c e0       	ldi	r24, 0x0C	; 12
     1a6:	80 93 b8 00 	sts	0x00B8, r24
     1aa:	e9 e6       	ldi	r30, 0x69	; 105
     1ac:	f0 e0       	ldi	r31, 0x00	; 0
     1ae:	80 81       	ld	r24, Z
     1b0:	80 62       	ori	r24, 0x20	; 32
     1b2:	80 83       	st	Z, r24
     1b4:	80 81       	ld	r24, Z
     1b6:	8f 7e       	andi	r24, 0xEF	; 239
     1b8:	80 83       	st	Z, r24
     1ba:	ea 9a       	sbi	0x1d, 2	; 29
     1bc:	78 94       	sei
     1be:	08 95       	ret

000001c0 <twi_read_byte>:
     1c0:	84 e8       	ldi	r24, 0x84	; 132
     1c2:	80 93 bc 00 	sts	0x00BC, r24
     1c6:	ec eb       	ldi	r30, 0xBC	; 188
     1c8:	f0 e0       	ldi	r31, 0x00	; 0
     1ca:	80 81       	ld	r24, Z
     1cc:	88 23       	and	r24, r24
     1ce:	ec f7       	brge	.-6      	; 0x1ca <twi_read_byte+0xa>
     1d0:	80 91 bb 00 	lds	r24, 0x00BB
     1d4:	08 95       	ret

000001d6 <twi_stop>:
     1d6:	84 e9       	ldi	r24, 0x94	; 148
     1d8:	80 93 bc 00 	sts	0x00BC, r24
     1dc:	08 95       	ret

000001de <twi_wait_for_ack>:
     1de:	20 e0       	ldi	r18, 0x00	; 0
     1e0:	30 e0       	ldi	r19, 0x00	; 0
     1e2:	ec eb       	ldi	r30, 0xBC	; 188
     1e4:	f0 e0       	ldi	r31, 0x00	; 0
     1e6:	80 81       	ld	r24, Z
     1e8:	88 23       	and	r24, r24
     1ea:	34 f0       	brlt	.+12     	; 0x1f8 <twi_wait_for_ack+0x1a>
     1ec:	2f 5f       	subi	r18, 0xFF	; 255
     1ee:	3f 4f       	sbci	r19, 0xFF	; 255
     1f0:	29 3e       	cpi	r18, 0xE9	; 233
     1f2:	83 e0       	ldi	r24, 0x03	; 3
     1f4:	38 07       	cpc	r19, r24
     1f6:	b9 f7       	brne	.-18     	; 0x1e6 <twi_wait_for_ack+0x8>
     1f8:	81 e0       	ldi	r24, 0x01	; 1
     1fa:	28 3e       	cpi	r18, 0xE8	; 232
     1fc:	33 40       	sbci	r19, 0x03	; 3
     1fe:	09 f4       	brne	.+2      	; 0x202 <twi_wait_for_ack+0x24>
     200:	80 e0       	ldi	r24, 0x00	; 0
     202:	08 95       	ret

00000204 <twi_send_byte>:
     204:	80 93 bb 00 	sts	0x00BB, r24
     208:	84 e8       	ldi	r24, 0x84	; 132
     20a:	80 93 bc 00 	sts	0x00BC, r24
     20e:	0e 94 ef 00 	call	0x1de	; 0x1de <twi_wait_for_ack>
     212:	88 23       	and	r24, r24
     214:	21 f0       	breq	.+8      	; 0x21e <twi_send_byte+0x1a>
     216:	80 91 b9 00 	lds	r24, 0x00B9
     21a:	88 7f       	andi	r24, 0xF8	; 248
     21c:	08 95       	ret
     21e:	80 e0       	ldi	r24, 0x00	; 0
     220:	08 95       	ret

00000222 <twi_start>:
     222:	cf 93       	push	r28
     224:	df 93       	push	r29
     226:	c8 2f       	mov	r28, r24
     228:	d6 2f       	mov	r29, r22
     22a:	94 ea       	ldi	r25, 0xA4	; 164
     22c:	90 93 bc 00 	sts	0x00BC, r25
     230:	0e 94 ef 00 	call	0x1de	; 0x1de <twi_wait_for_ack>
     234:	81 11       	cpse	r24, r1
     236:	04 c0       	rjmp	.+8      	; 0x240 <twi_start+0x1e>
     238:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <twi_stop>
     23c:	80 e0       	ldi	r24, 0x00	; 0
     23e:	1a c0       	rjmp	.+52     	; 0x274 <twi_start+0x52>
     240:	dd 23       	and	r29, r29
     242:	59 f0       	breq	.+22     	; 0x25a <twi_start+0x38>
     244:	8c 2f       	mov	r24, r28
     246:	88 0f       	add	r24, r24
     248:	8f 5f       	subi	r24, 0xFF	; 255
     24a:	0e 94 02 01 	call	0x204	; 0x204 <twi_send_byte>
     24e:	88 34       	cpi	r24, 0x48	; 72
     250:	71 f4       	brne	.+28     	; 0x26e <twi_start+0x4c>
     252:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <twi_stop>
     256:	80 e0       	ldi	r24, 0x00	; 0
     258:	0d c0       	rjmp	.+26     	; 0x274 <twi_start+0x52>
     25a:	8c 2f       	mov	r24, r28
     25c:	88 0f       	add	r24, r24
     25e:	0e 94 02 01 	call	0x204	; 0x204 <twi_send_byte>
     262:	80 32       	cpi	r24, 0x20	; 32
     264:	31 f4       	brne	.+12     	; 0x272 <twi_start+0x50>
     266:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <twi_stop>
     26a:	80 e0       	ldi	r24, 0x00	; 0
     26c:	03 c0       	rjmp	.+6      	; 0x274 <twi_start+0x52>
     26e:	81 e0       	ldi	r24, 0x01	; 1
     270:	01 c0       	rjmp	.+2      	; 0x274 <twi_start+0x52>
     272:	81 e0       	ldi	r24, 0x01	; 1
     274:	df 91       	pop	r29
     276:	cf 91       	pop	r28
     278:	08 95       	ret

0000027a <m_write_register>:
     27a:	cf 93       	push	r28
     27c:	df 93       	push	r29
     27e:	c6 2f       	mov	r28, r22
     280:	d4 2f       	mov	r29, r20
     282:	60 e0       	ldi	r22, 0x00	; 0
     284:	0e 94 11 01 	call	0x222	; 0x222 <twi_start>
     288:	88 23       	and	r24, r24
     28a:	71 f0       	breq	.+28     	; 0x2a8 <m_write_register+0x2e>
     28c:	8c 2f       	mov	r24, r28
     28e:	0e 94 02 01 	call	0x204	; 0x204 <twi_send_byte>
     292:	88 23       	and	r24, r24
     294:	59 f0       	breq	.+22     	; 0x2ac <m_write_register+0x32>
     296:	8d 2f       	mov	r24, r29
     298:	0e 94 02 01 	call	0x204	; 0x204 <twi_send_byte>
     29c:	88 23       	and	r24, r24
     29e:	41 f0       	breq	.+16     	; 0x2b0 <m_write_register+0x36>
     2a0:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <twi_stop>
     2a4:	81 e0       	ldi	r24, 0x01	; 1
     2a6:	05 c0       	rjmp	.+10     	; 0x2b2 <m_write_register+0x38>
     2a8:	80 e0       	ldi	r24, 0x00	; 0
     2aa:	03 c0       	rjmp	.+6      	; 0x2b2 <m_write_register+0x38>
     2ac:	80 e0       	ldi	r24, 0x00	; 0
     2ae:	01 c0       	rjmp	.+2      	; 0x2b2 <m_write_register+0x38>
     2b0:	80 e0       	ldi	r24, 0x00	; 0
     2b2:	df 91       	pop	r29
     2b4:	cf 91       	pop	r28
     2b6:	08 95       	ret

000002b8 <m_read_register>:
     2b8:	cf 93       	push	r28
     2ba:	df 93       	push	r29
     2bc:	c8 2f       	mov	r28, r24
     2be:	d6 2f       	mov	r29, r22
     2c0:	60 e0       	ldi	r22, 0x00	; 0
     2c2:	0e 94 11 01 	call	0x222	; 0x222 <twi_start>
     2c6:	88 23       	and	r24, r24
     2c8:	81 f0       	breq	.+32     	; 0x2ea <m_read_register+0x32>
     2ca:	8d 2f       	mov	r24, r29
     2cc:	0e 94 02 01 	call	0x204	; 0x204 <twi_send_byte>
     2d0:	88 23       	and	r24, r24
     2d2:	69 f0       	breq	.+26     	; 0x2ee <m_read_register+0x36>
     2d4:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <twi_stop>
     2d8:	61 e0       	ldi	r22, 0x01	; 1
     2da:	8c 2f       	mov	r24, r28
     2dc:	0e 94 11 01 	call	0x222	; 0x222 <twi_start>
     2e0:	88 23       	and	r24, r24
     2e2:	39 f0       	breq	.+14     	; 0x2f2 <m_read_register+0x3a>
     2e4:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <twi_read_byte>
     2e8:	05 c0       	rjmp	.+10     	; 0x2f4 <m_read_register+0x3c>
     2ea:	80 e0       	ldi	r24, 0x00	; 0
     2ec:	03 c0       	rjmp	.+6      	; 0x2f4 <m_read_register+0x3c>
     2ee:	80 e0       	ldi	r24, 0x00	; 0
     2f0:	01 c0       	rjmp	.+2      	; 0x2f4 <m_read_register+0x3c>
     2f2:	80 e0       	ldi	r24, 0x00	; 0
     2f4:	df 91       	pop	r29
     2f6:	cf 91       	pop	r28
     2f8:	08 95       	ret

000002fa <getData>:
	data[2] = 1.0;
}
*/

unsigned char localize (float* data) {
	numlost = 0;
     2fa:	0f 93       	push	r16
     2fc:	1f 93       	push	r17
     2fe:	cf 93       	push	r28
     300:	df 93       	push	r29
     302:	8c 01       	movw	r16, r24
     304:	eb 01       	movw	r28, r22
     306:	88 e3       	ldi	r24, 0x38	; 56
     308:	91 e0       	ldi	r25, 0x01	; 1
     30a:	0e 94 4b 07 	call	0xe96	; 0xe96 <m_wii_read>
     30e:	80 91 38 01 	lds	r24, 0x0138
     312:	90 91 39 01 	lds	r25, 0x0139
     316:	f8 01       	movw	r30, r16
     318:	91 83       	std	Z+1, r25	; 0x01
     31a:	80 83       	st	Z, r24
     31c:	80 91 3e 01 	lds	r24, 0x013E
     320:	90 91 3f 01 	lds	r25, 0x013F
	
	//if (recalibrate == 1) {
		determine_blobs();
		//recalibrate = 0;
     324:	93 83       	std	Z+3, r25	; 0x03
     326:	82 83       	std	Z+2, r24	; 0x02
     328:	80 91 44 01 	lds	r24, 0x0144
     32c:	90 91 45 01 	lds	r25, 0x0145
     330:	95 83       	std	Z+5, r25	; 0x05
     332:	84 83       	std	Z+4, r24	; 0x04
     334:	80 91 4a 01 	lds	r24, 0x014A
     338:	90 91 4b 01 	lds	r25, 0x014B
	//}
     33c:	97 83       	std	Z+7, r25	; 0x07
     33e:	86 83       	std	Z+6, r24	; 0x06
     340:	80 91 3a 01 	lds	r24, 0x013A
     344:	90 91 3b 01 	lds	r25, 0x013B
     348:	99 83       	std	Y+1, r25	; 0x01
     34a:	88 83       	st	Y, r24
     34c:	80 91 40 01 	lds	r24, 0x0140
     350:	90 91 41 01 	lds	r25, 0x0141
     354:	9b 83       	std	Y+3, r25	; 0x03
     356:	8a 83       	std	Y+2, r24	; 0x02
     358:	80 91 46 01 	lds	r24, 0x0146
     35c:	90 91 47 01 	lds	r25, 0x0147
     360:	9d 83       	std	Y+5, r25	; 0x05
     362:	8c 83       	std	Y+4, r24	; 0x04
     364:	80 91 4c 01 	lds	r24, 0x014C
     368:	90 91 4d 01 	lds	r25, 0x014D
     36c:	9f 83       	std	Y+7, r25	; 0x07
     36e:	8e 83       	std	Y+6, r24	; 0x06
     370:	81 e0       	ldi	r24, 0x01	; 1
     372:	df 91       	pop	r29
     374:	cf 91       	pop	r28
     376:	1f 91       	pop	r17
     378:	0f 91       	pop	r16
     37a:	08 95       	ret

0000037c <determine_blobs>:
     37c:	2f 92       	push	r2
     37e:	3f 92       	push	r3
     380:	4f 92       	push	r4
     382:	5f 92       	push	r5
     384:	6f 92       	push	r6
     386:	7f 92       	push	r7
     388:	8f 92       	push	r8
     38a:	9f 92       	push	r9
     38c:	af 92       	push	r10
     38e:	bf 92       	push	r11
     390:	cf 92       	push	r12
     392:	df 92       	push	r13
     394:	ef 92       	push	r14
     396:	ff 92       	push	r15
     398:	0f 93       	push	r16
     39a:	1f 93       	push	r17
     39c:	cf 93       	push	r28
     39e:	df 93       	push	r29
     3a0:	cd b7       	in	r28, 0x3d	; 61
     3a2:	de b7       	in	r29, 0x3e	; 62
     3a4:	66 97       	sbiw	r28, 0x16	; 22
     3a6:	0f b6       	in	r0, 0x3f	; 63
     3a8:	f8 94       	cli
     3aa:	de bf       	out	0x3e, r29	; 62
     3ac:	0f be       	out	0x3f, r0	; 63
     3ae:	cd bf       	out	0x3d, r28	; 61
     3b0:	0f 2e       	mov	r0, r31
     3b2:	fa e2       	ldi	r31, 0x2A	; 42
     3b4:	cf 2e       	mov	r12, r31
     3b6:	f1 e0       	ldi	r31, 0x01	; 1
     3b8:	df 2e       	mov	r13, r31
     3ba:	f0 2d       	mov	r31, r0
     3bc:	0c e2       	ldi	r16, 0x2C	; 44
     3be:	11 e0       	ldi	r17, 0x01	; 1
     3c0:	0f 2e       	mov	r0, r31
     3c2:	fe e2       	ldi	r31, 0x2E	; 46
     3c4:	ef 2e       	mov	r14, r31
     3c6:	f1 e0       	ldi	r31, 0x01	; 1
     3c8:	ff 2e       	mov	r15, r31
     3ca:	f0 2d       	mov	r31, r0
     3cc:	60 e2       	ldi	r22, 0x20	; 32
     3ce:	71 e0       	ldi	r23, 0x01	; 1
     3d0:	88 e2       	ldi	r24, 0x28	; 40
     3d2:	91 e0       	ldi	r25, 0x01	; 1
     3d4:	0e 94 7d 01 	call	0x2fa	; 0x2fa <getData>
     3d8:	80 91 28 01 	lds	r24, 0x0128
     3dc:	90 91 29 01 	lds	r25, 0x0129
     3e0:	8f 3f       	cpi	r24, 0xFF	; 255
     3e2:	93 40       	sbci	r25, 0x03	; 3
     3e4:	98 f7       	brcc	.-26     	; 0x3cc <determine_blobs+0x50>
     3e6:	d6 01       	movw	r26, r12
	
     3e8:	8d 91       	ld	r24, X+
     3ea:	9c 91       	ld	r25, X
     3ec:	8f 3f       	cpi	r24, 0xFF	; 255
     3ee:	93 40       	sbci	r25, 0x03	; 3
     3f0:	68 f7       	brcc	.-38     	; 0x3cc <determine_blobs+0x50>
     3f2:	f8 01       	movw	r30, r16
     3f4:	80 81       	ld	r24, Z
     3f6:	91 81       	ldd	r25, Z+1	; 0x01
     3f8:	8f 3f       	cpi	r24, 0xFF	; 255
     3fa:	93 40       	sbci	r25, 0x03	; 3
     3fc:	38 f7       	brcc	.-50     	; 0x3cc <determine_blobs+0x50>
     3fe:	d7 01       	movw	r26, r14
     400:	8d 91       	ld	r24, X+
     402:	9c 91       	ld	r25, X
     404:	8f 3f       	cpi	r24, 0xFF	; 255
     406:	93 40       	sbci	r25, 0x03	; 3
     408:	08 f7       	brcc	.-62     	; 0x3cc <determine_blobs+0x50>
     40a:	60 90 1c 01 	lds	r6, 0x011C
     40e:	70 90 1d 01 	lds	r7, 0x011D
     412:	80 90 1e 01 	lds	r8, 0x011E
     416:	90 90 1f 01 	lds	r9, 0x011F
     41a:	d0 90 18 01 	lds	r13, 0x0118
     41e:	c0 90 19 01 	lds	r12, 0x0119
     422:	40 90 1a 01 	lds	r4, 0x011A
     426:	50 90 1b 01 	lds	r5, 0x011B
     42a:	e0 91 12 01 	lds	r30, 0x0112
     42e:	ed 87       	std	Y+13, r30	; 0x0d
     430:	f0 91 13 01 	lds	r31, 0x0113
     434:	fe 87       	std	Y+14, r31	; 0x0e
     436:	20 91 10 01 	lds	r18, 0x0110
     43a:	2b 87       	std	Y+11, r18	; 0x0b
     43c:	30 91 11 01 	lds	r19, 0x0111
     440:	3c 87       	std	Y+12, r19	; 0x0c
     442:	40 91 14 01 	lds	r20, 0x0114
     446:	49 8b       	std	Y+17, r20	; 0x11
     448:	50 91 15 01 	lds	r21, 0x0115
     44c:	5a 8b       	std	Y+18, r21	; 0x12
     44e:	60 91 16 01 	lds	r22, 0x0116
     452:	6b 8b       	std	Y+19, r22	; 0x13
     454:	70 91 17 01 	lds	r23, 0x0117
     458:	7c 8b       	std	Y+20, r23	; 0x14
     45a:	f0 90 00 01 	lds	r15, 0x0100
     45e:	e0 90 01 01 	lds	r14, 0x0101
     462:	20 90 02 01 	lds	r2, 0x0102
     466:	30 90 03 01 	lds	r3, 0x0103
     46a:	80 91 0e 01 	lds	r24, 0x010E
     46e:	8f 87       	std	Y+15, r24	; 0x0f
     470:	90 91 0f 01 	lds	r25, 0x010F
     474:	98 8b       	std	Y+16, r25	; 0x10
     476:	a0 91 0c 01 	lds	r26, 0x010C
	float posx = 0;
	float posy = 0;
     47a:	b0 91 0d 01 	lds	r27, 0x010D
     47e:	ba 87       	std	Y+10, r27	; 0x0a
     480:	a9 87       	std	Y+9, r26	; 0x09
     482:	18 86       	std	Y+8, r1	; 0x08
     484:	1f 82       	std	Y+7, r1	; 0x07
     486:	80 e0       	ldi	r24, 0x00	; 0
     488:	90 e0       	ldi	r25, 0x00	; 0
     48a:	77 c0       	rjmp	.+238    	; 0x57a <determine_blobs+0x1fe>
     48c:	f8 01       	movw	r30, r16
     48e:	81 91       	ld	r24, Z+
     490:	91 91       	ld	r25, Z+
	float r = 0;
     492:	8f 01       	movw	r16, r30
     494:	2b 81       	ldd	r18, Y+3	; 0x03
     496:	3c 81       	ldd	r19, Y+4	; 0x04
     498:	28 1b       	sub	r18, r24
     49a:	39 0b       	sbc	r19, r25
     49c:	c9 01       	movw	r24, r18
     49e:	a9 81       	ldd	r26, Y+1	; 0x01
     4a0:	ba 81       	ldd	r27, Y+2	; 0x02
     4a2:	2d 91       	ld	r18, X+
     4a4:	3d 91       	ld	r19, X+
     4a6:	ba 83       	std	Y+2, r27	; 0x02
     4a8:	a9 83       	std	Y+1, r26	; 0x01
	float phi = 0, beta = 0, angle = 0.0;
	
     4aa:	ed 81       	ldd	r30, Y+5	; 0x05
     4ac:	fe 81       	ldd	r31, Y+6	; 0x06
     4ae:	e2 1b       	sub	r30, r18
     4b0:	f3 0b       	sbc	r31, r19
     4b2:	ee 9f       	mul	r30, r30
     4b4:	b0 01       	movw	r22, r0
     4b6:	ef 9f       	mul	r30, r31
     4b8:	70 0d       	add	r23, r0
     4ba:	70 0d       	add	r23, r0
     4bc:	11 24       	eor	r1, r1
     4be:	88 9f       	mul	r24, r24
     4c0:	90 01       	movw	r18, r0
     4c2:	89 9f       	mul	r24, r25
     4c4:	30 0d       	add	r19, r0
     4c6:	30 0d       	add	r19, r0
     4c8:	11 24       	eor	r1, r1
     4ca:	62 0f       	add	r22, r18
     4cc:	73 1f       	adc	r23, r19
     4ce:	80 e0       	ldi	r24, 0x00	; 0
     4d0:	90 e0       	ldi	r25, 0x00	; 0
     4d2:	0e 94 d6 0a 	call	0x15ac	; 0x15ac <__floatunsisf>
     4d6:	0e 94 cf 0b 	call	0x179e	; 0x179e <sqrt>
     4da:	66 2e       	mov	r6, r22
     4dc:	77 2e       	mov	r7, r23
     4de:	88 2e       	mov	r8, r24
     4e0:	99 2e       	mov	r9, r25
     4e2:	2d 2d       	mov	r18, r13
     4e4:	3c 2d       	mov	r19, r12
     4e6:	44 2d       	mov	r20, r4
     4e8:	55 2d       	mov	r21, r5
	float theta_top_left= (float) atan2((double) (14.5-2.483), (double) 10.563);
	float theta_top_right = (float) atan2((double) 11.655, (double) (14.5+8.741));
     4ea:	66 2d       	mov	r22, r6
     4ec:	77 2d       	mov	r23, r7
     4ee:	88 2d       	mov	r24, r8
     4f0:	99 2d       	mov	r25, r9
     4f2:	0e 94 64 0b 	call	0x16c8	; 0x16c8 <__gesf2>
     4f6:	18 16       	cp	r1, r24
     4f8:	c4 f4       	brge	.+48     	; 0x52a <determine_blobs+0x1ae>
     4fa:	20 e0       	ldi	r18, 0x00	; 0
     4fc:	30 e0       	ldi	r19, 0x00	; 0
     4fe:	40 e0       	ldi	r20, 0x00	; 0
     500:	5f e3       	ldi	r21, 0x3F	; 63
     502:	66 2d       	mov	r22, r6
     504:	77 2d       	mov	r23, r7
     506:	88 2d       	mov	r24, r8
     508:	99 2d       	mov	r25, r9
     50a:	0e 94 68 0b 	call	0x16d0	; 0x16d0 <__mulsf3>
     50e:	69 8b       	std	Y+17, r22	; 0x11
     510:	7a 8b       	std	Y+18, r23	; 0x12
     512:	8b 8b       	std	Y+19, r24	; 0x13
     514:	9c 8b       	std	Y+20, r25	; 0x14
     516:	fd 89       	ldd	r31, Y+21	; 0x15
     518:	fb 87       	std	Y+11, r31	; 0x0b
     51a:	2e 89       	ldd	r18, Y+22	; 0x16
     51c:	2c 87       	std	Y+12, r18	; 0x0c
     51e:	ad 86       	std	Y+13, r10	; 0x0d
     520:	be 86       	std	Y+14, r11	; 0x0e
     522:	d6 2c       	mov	r13, r6
     524:	c7 2c       	mov	r12, r7
     526:	48 2c       	mov	r4, r8
     528:	59 2c       	mov	r5, r9
     52a:	26 2d       	mov	r18, r6
     52c:	37 2d       	mov	r19, r7
     52e:	48 2d       	mov	r20, r8
     530:	59 2d       	mov	r21, r9
     532:	6f 2d       	mov	r22, r15
     534:	7e 2d       	mov	r23, r14
     536:	82 2d       	mov	r24, r2
     538:	93 2d       	mov	r25, r3
     53a:	0e 94 64 0b 	call	0x16c8	; 0x16c8 <__gesf2>
     53e:	18 16       	cp	r1, r24
     540:	54 f4       	brge	.+20     	; 0x556 <determine_blobs+0x1da>
     542:	4d 89       	ldd	r20, Y+21	; 0x15
     544:	5e 89       	ldd	r21, Y+22	; 0x16
     546:	5a 87       	std	Y+10, r21	; 0x0a
     548:	49 87       	std	Y+9, r20	; 0x09
     54a:	af 86       	std	Y+15, r10	; 0x0f
     54c:	b8 8a       	std	Y+16, r11	; 0x10
     54e:	f6 2c       	mov	r15, r6
     550:	e7 2c       	mov	r14, r7
     552:	28 2c       	mov	r2, r8
     554:	39 2c       	mov	r3, r9
     556:	6d 89       	ldd	r22, Y+21	; 0x15
	float theta_bottom_left = (float) atan2((double)10.563, (double) (14.5+2.483));
     558:	7e 89       	ldd	r23, Y+22	; 0x16
     55a:	6f 5f       	subi	r22, 0xFF	; 255
     55c:	7f 4f       	sbci	r23, 0xFF	; 255
     55e:	7e 8b       	std	Y+22, r23	; 0x16
     560:	6d 8b       	std	Y+21, r22	; 0x15
     562:	64 30       	cpi	r22, 0x04	; 4
     564:	71 05       	cpc	r23, r1
     566:	09 f0       	breq	.+2      	; 0x56a <determine_blobs+0x1ee>
     568:	91 cf       	rjmp	.-222    	; 0x48c <determine_blobs+0x110>
     56a:	8f 81       	ldd	r24, Y+7	; 0x07
     56c:	98 85       	ldd	r25, Y+8	; 0x08
     56e:	01 96       	adiw	r24, 0x01	; 1
     570:	98 87       	std	Y+8, r25	; 0x08
     572:	8f 83       	std	Y+7, r24	; 0x07
     574:	84 30       	cpi	r24, 0x04	; 4
     576:	91 05       	cpc	r25, r1
     578:	e1 f0       	breq	.+56     	; 0x5b2 <determine_blobs+0x236>
     57a:	84 30       	cpi	r24, 0x04	; 4
     57c:	91 05       	cpc	r25, r1
     57e:	ac f7       	brge	.-22     	; 0x56a <determine_blobs+0x1ee>
     580:	fc 01       	movw	r30, r24
     582:	ee 0f       	add	r30, r30
     584:	ff 1f       	adc	r31, r31
     586:	8f 01       	movw	r16, r30
     588:	08 5d       	subi	r16, 0xD8	; 216
     58a:	1e 4f       	sbci	r17, 0xFE	; 254
     58c:	d8 01       	movw	r26, r16
     58e:	0d 90       	ld	r0, X+
     590:	bc 91       	ld	r27, X
     592:	a0 2d       	mov	r26, r0
     594:	bc 83       	std	Y+4, r27	; 0x04
     596:	ab 83       	std	Y+3, r26	; 0x03
     598:	e0 5e       	subi	r30, 0xE0	; 224
     59a:	fe 4f       	sbci	r31, 0xFE	; 254
     59c:	20 81       	ld	r18, Z
     59e:	31 81       	ldd	r19, Z+1	; 0x01
     5a0:	3e 83       	std	Y+6, r19	; 0x06
     5a2:	2d 83       	std	Y+5, r18	; 0x05
     5a4:	fa 83       	std	Y+2, r31	; 0x02
     5a6:	e9 83       	std	Y+1, r30	; 0x01
     5a8:	a8 2e       	mov	r10, r24
     5aa:	b9 2e       	mov	r11, r25
	float theta_bottom_right = (float) atan2((double) 11.655, (double) (14.5-8.741));
     5ac:	9e 8b       	std	Y+22, r25	; 0x16
     5ae:	8d 8b       	std	Y+21, r24	; 0x15
     5b0:	6d cf       	rjmp	.-294    	; 0x48c <determine_blobs+0x110>
     5b2:	86 2d       	mov	r24, r6
     5b4:	97 2d       	mov	r25, r7
     5b6:	a8 2d       	mov	r26, r8
     5b8:	b9 2d       	mov	r27, r9
     5ba:	80 93 1c 01 	sts	0x011C, r24
     5be:	90 93 1d 01 	sts	0x011D, r25
     5c2:	a0 93 1e 01 	sts	0x011E, r26

     5c6:	b0 93 1f 01 	sts	0x011F, r27
	//for (int i = 0; i < 4; i++) {
		//if (x[i] >= 1023) numlost++;
	//}
     5ca:	8d 2d       	mov	r24, r13
     5cc:	9c 2d       	mov	r25, r12
     5ce:	a4 2d       	mov	r26, r4
     5d0:	b5 2d       	mov	r27, r5
     5d2:	80 93 18 01 	sts	0x0118, r24
     5d6:	90 93 19 01 	sts	0x0119, r25
     5da:	a0 93 1a 01 	sts	0x011A, r26
     5de:	b0 93 1b 01 	sts	0x011B, r27
     5e2:	3d 85       	ldd	r19, Y+13	; 0x0d
     5e4:	30 93 12 01 	sts	0x0112, r19
	
     5e8:	4e 85       	ldd	r20, Y+14	; 0x0e
     5ea:	40 93 13 01 	sts	0x0113, r20
     5ee:	5b 85       	ldd	r21, Y+11	; 0x0b
     5f0:	50 93 10 01 	sts	0x0110, r21
     5f4:	6c 85       	ldd	r22, Y+12	; 0x0c
     5f6:	60 93 11 01 	sts	0x0111, r22
     5fa:	59 89       	ldd	r21, Y+17	; 0x11
     5fc:	4a 89       	ldd	r20, Y+18	; 0x12
     5fe:	3b 89       	ldd	r19, Y+19	; 0x13
     600:	2c 89       	ldd	r18, Y+20	; 0x14
     602:	85 2f       	mov	r24, r21
     604:	94 2f       	mov	r25, r20
     606:	a3 2f       	mov	r26, r19
     608:	b2 2f       	mov	r27, r18
     60a:	80 93 14 01 	sts	0x0114, r24
     60e:	90 93 15 01 	sts	0x0115, r25
     612:	a0 93 16 01 	sts	0x0116, r26
     616:	b0 93 17 01 	sts	0x0117, r27
     61a:	8f 2d       	mov	r24, r15
     61c:	9e 2d       	mov	r25, r14
     61e:	a2 2d       	mov	r26, r2
     620:	b3 2d       	mov	r27, r3
     622:	80 93 00 01 	sts	0x0100, r24
     626:	90 93 01 01 	sts	0x0101, r25
     62a:	a0 93 02 01 	sts	0x0102, r26
     62e:	b0 93 03 01 	sts	0x0103, r27
     632:	7f 85       	ldd	r23, Y+15	; 0x0f
	//if (numlost >= 2) {
     634:	70 93 0e 01 	sts	0x010E, r23
     638:	88 89       	ldd	r24, Y+16	; 0x10
     63a:	80 93 0f 01 	sts	0x010F, r24
     63e:	99 85       	ldd	r25, Y+9	; 0x09
     640:	90 93 0c 01 	sts	0x010C, r25
     644:	aa 85       	ldd	r26, Y+10	; 0x0a
     646:	a0 93 0d 01 	sts	0x010D, r26
     64a:	80 91 12 01 	lds	r24, 0x0112
		//recalibrate = 1;
     64e:	90 91 13 01 	lds	r25, 0x0113
     652:	20 91 0e 01 	lds	r18, 0x010E
     656:	30 91 0f 01 	lds	r19, 0x010F
     65a:	82 17       	cp	r24, r18
     65c:	93 07       	cpc	r25, r19
     65e:	19 f5       	brne	.+70     	; 0x6a6 <determine_blobs+0x32a>
     660:	90 93 37 01 	sts	0x0137, r25
     664:	80 93 36 01 	sts	0x0136, r24
     668:	40 91 10 01 	lds	r20, 0x0110
     66c:	50 91 11 01 	lds	r21, 0x0111
     670:	50 93 35 01 	sts	0x0135, r21
     674:	40 93 34 01 	sts	0x0134, r20
     678:	20 91 0c 01 	lds	r18, 0x010C
     67c:	30 91 0d 01 	lds	r19, 0x010D
     680:	30 93 31 01 	sts	0x0131, r19
     684:	20 93 30 01 	sts	0x0130, r18
     688:	6a e0       	ldi	r22, 0x0A	; 10
     68a:	70 e0       	ldi	r23, 0x00	; 0
     68c:	fb 01       	movw	r30, r22
     68e:	e8 1b       	sub	r30, r24
     690:	f9 0b       	sbc	r31, r25
     692:	cf 01       	movw	r24, r30
     694:	84 1b       	sub	r24, r20
     696:	95 0b       	sbc	r25, r21
     698:	82 1b       	sub	r24, r18
     69a:	93 0b       	sbc	r25, r19
     69c:	90 93 33 01 	sts	0x0133, r25
     6a0:	80 93 32 01 	sts	0x0132, r24
     6a4:	64 c0       	rjmp	.+200    	; 0x76e <determine_blobs+0x3f2>
     6a6:	49 85       	ldd	r20, Y+9	; 0x09
     6a8:	5a 85       	ldd	r21, Y+10	; 0x0a
     6aa:	84 17       	cp	r24, r20
     6ac:	95 07       	cpc	r25, r21
     6ae:	f9 f4       	brne	.+62     	; 0x6ee <determine_blobs+0x372>
     6b0:	90 93 37 01 	sts	0x0137, r25
     6b4:	80 93 36 01 	sts	0x0136, r24
     6b8:	40 91 10 01 	lds	r20, 0x0110
     6bc:	50 91 11 01 	lds	r21, 0x0111
     6c0:	50 93 35 01 	sts	0x0135, r21
     6c4:	40 93 34 01 	sts	0x0134, r20
     6c8:	30 93 31 01 	sts	0x0131, r19
     6cc:	20 93 30 01 	sts	0x0130, r18
     6d0:	6a e0       	ldi	r22, 0x0A	; 10
     6d2:	70 e0       	ldi	r23, 0x00	; 0
     6d4:	db 01       	movw	r26, r22
     6d6:	a8 1b       	sub	r26, r24
     6d8:	b9 0b       	sbc	r27, r25
     6da:	cd 01       	movw	r24, r26
     6dc:	84 1b       	sub	r24, r20
     6de:	95 0b       	sbc	r25, r21
     6e0:	82 1b       	sub	r24, r18
     6e2:	93 0b       	sbc	r25, r19
     6e4:	90 93 33 01 	sts	0x0133, r25
     6e8:	80 93 32 01 	sts	0x0132, r24
     6ec:	40 c0       	rjmp	.+128    	; 0x76e <determine_blobs+0x3f2>
     6ee:	40 91 10 01 	lds	r20, 0x0110
     6f2:	50 91 11 01 	lds	r21, 0x0111
     6f6:	24 17       	cp	r18, r20
     6f8:	35 07       	cpc	r19, r21
     6fa:	f1 f4       	brne	.+60     	; 0x738 <determine_blobs+0x3bc>
     6fc:	30 93 37 01 	sts	0x0137, r19
     700:	20 93 36 01 	sts	0x0136, r18
     704:	90 93 35 01 	sts	0x0135, r25
     708:	80 93 34 01 	sts	0x0134, r24
		//return 0;
     70c:	e9 85       	ldd	r30, Y+9	; 0x09
     70e:	fa 85       	ldd	r31, Y+10	; 0x0a
     710:	f0 93 31 01 	sts	0x0131, r31
     714:	e0 93 30 01 	sts	0x0130, r30
     718:	4a e0       	ldi	r20, 0x0A	; 10
     71a:	50 e0       	ldi	r21, 0x00	; 0
     71c:	ba 01       	movw	r22, r20
     71e:	62 1b       	sub	r22, r18
     720:	73 0b       	sbc	r23, r19
     722:	db 01       	movw	r26, r22
     724:	a8 1b       	sub	r26, r24
     726:	b9 0b       	sbc	r27, r25
     728:	cd 01       	movw	r24, r26
     72a:	8e 1b       	sub	r24, r30
     72c:	9f 0b       	sbc	r25, r31
     72e:	90 93 33 01 	sts	0x0133, r25
     732:	80 93 32 01 	sts	0x0132, r24
     736:	1b c0       	rjmp	.+54     	; 0x76e <determine_blobs+0x3f2>
     738:	50 93 37 01 	sts	0x0137, r21
     73c:	40 93 36 01 	sts	0x0136, r20
     740:	90 93 35 01 	sts	0x0135, r25
     744:	80 93 34 01 	sts	0x0134, r24
     748:	30 93 31 01 	sts	0x0131, r19
     74c:	20 93 30 01 	sts	0x0130, r18
     750:	6a e0       	ldi	r22, 0x0A	; 10
     752:	70 e0       	ldi	r23, 0x00	; 0
     754:	fb 01       	movw	r30, r22
     756:	e4 1b       	sub	r30, r20
     758:	f5 0b       	sbc	r31, r21
     75a:	bf 01       	movw	r22, r30
     75c:	68 1b       	sub	r22, r24
     75e:	79 0b       	sbc	r23, r25
     760:	cb 01       	movw	r24, r22
     762:	82 1b       	sub	r24, r18
     764:	93 0b       	sbc	r25, r19
     766:	90 93 33 01 	sts	0x0133, r25
     76a:	80 93 32 01 	sts	0x0132, r24
     76e:	81 e0       	ldi	r24, 0x01	; 1
     770:	66 96       	adiw	r28, 0x16	; 22
     772:	0f b6       	in	r0, 0x3f	; 63
     774:	f8 94       	cli
     776:	de bf       	out	0x3e, r29	; 62
     778:	0f be       	out	0x3f, r0	; 63
     77a:	cd bf       	out	0x3d, r28	; 61
     77c:	df 91       	pop	r29
     77e:	cf 91       	pop	r28
     780:	1f 91       	pop	r17
     782:	0f 91       	pop	r16
     784:	ff 90       	pop	r15
     786:	ef 90       	pop	r14
     788:	df 90       	pop	r13
     78a:	cf 90       	pop	r12
     78c:	bf 90       	pop	r11
     78e:	af 90       	pop	r10
     790:	9f 90       	pop	r9
     792:	8f 90       	pop	r8
     794:	7f 90       	pop	r7
     796:	6f 90       	pop	r6
     798:	5f 90       	pop	r5
	//}
	
     79a:	4f 90       	pop	r4
     79c:	3f 90       	pop	r3
     79e:	2f 90       	pop	r2
     7a0:	08 95       	ret

000007a2 <local_init>:
     7a2:	0e 94 e0 07 	call	0xfc0	; 0xfc0 <m_wii_open>
     7a6:	88 e3       	ldi	r24, 0x38	; 56
     7a8:	91 e0       	ldi	r25, 0x01	; 1
     7aa:	0e 94 4b 07 	call	0xe96	; 0xe96 <m_wii_read>
     7ae:	0e 94 be 01 	call	0x37c	; 0x37c <determine_blobs>
	if (x[top] < 1023 && x[bottom] < 1023) {
     7b2:	81 e0       	ldi	r24, 0x01	; 1
     7b4:	08 95       	ret

000007b6 <m_num_init>:
     7b6:	0e 94 cf 00 	call	0x19e	; 0x19e <m_bus_init>
     7ba:	80 e2       	ldi	r24, 0x20	; 32
     7bc:	0e 94 04 04 	call	0x808	; 0x808 <m_port_init>
     7c0:	40 e0       	ldi	r20, 0x00	; 0
     7c2:	60 e0       	ldi	r22, 0x00	; 0
     7c4:	80 e2       	ldi	r24, 0x20	; 32
     7c6:	0e 94 0e 04 	call	0x81c	; 0x81c <m_port_set>
     7ca:	41 e0       	ldi	r20, 0x01	; 1
     7cc:	60 e0       	ldi	r22, 0x00	; 0
     7ce:	80 e2       	ldi	r24, 0x20	; 32
     7d0:	0e 94 0e 04 	call	0x81c	; 0x81c <m_port_set>
     7d4:	42 e0       	ldi	r20, 0x02	; 2
     7d6:	60 e0       	ldi	r22, 0x00	; 0
     7d8:	80 e2       	ldi	r24, 0x20	; 32
     7da:	0e 94 0e 04 	call	0x81c	; 0x81c <m_port_set>
     7de:	43 e0       	ldi	r20, 0x03	; 3
     7e0:	60 e0       	ldi	r22, 0x00	; 0
     7e2:	80 e2       	ldi	r24, 0x20	; 32
     7e4:	0e 94 0e 04 	call	0x81c	; 0x81c <m_port_set>
     7e8:	44 e0       	ldi	r20, 0x04	; 4
     7ea:	60 e0       	ldi	r22, 0x00	; 0
     7ec:	80 e2       	ldi	r24, 0x20	; 32
     7ee:	0e 94 0e 04 	call	0x81c	; 0x81c <m_port_set>
     7f2:	45 e0       	ldi	r20, 0x05	; 5
     7f4:	60 e0       	ldi	r22, 0x00	; 0
     7f6:	80 e2       	ldi	r24, 0x20	; 32
     7f8:	0e 94 0e 04 	call	0x81c	; 0x81c <m_port_set>
     7fc:	46 e0       	ldi	r20, 0x06	; 6
     7fe:	60 e0       	ldi	r22, 0x00	; 0
     800:	80 e2       	ldi	r24, 0x20	; 32
     802:	0e 94 0e 04 	call	0x81c	; 0x81c <m_port_set>
     806:	08 95       	ret

00000808 <m_port_init>:
     808:	48 e3       	ldi	r20, 0x38	; 56
     80a:	65 e0       	ldi	r22, 0x05	; 5
     80c:	0e 94 3d 01 	call	0x27a	; 0x27a <m_write_register>
     810:	91 e0       	ldi	r25, 0x01	; 1
     812:	81 11       	cpse	r24, r1
     814:	01 c0       	rjmp	.+2      	; 0x818 <m_port_init+0x10>
     816:	90 e0       	ldi	r25, 0x00	; 0
     818:	89 2f       	mov	r24, r25
     81a:	08 95       	ret

0000081c <m_port_set>:
     81c:	1f 93       	push	r17
     81e:	cf 93       	push	r28
     820:	df 93       	push	r29
     822:	d8 2f       	mov	r29, r24
     824:	c6 2f       	mov	r28, r22
     826:	14 2f       	mov	r17, r20
     828:	0e 94 5c 01 	call	0x2b8	; 0x2b8 <m_read_register>
     82c:	c2 30       	cpi	r28, 0x02	; 2
     82e:	88 f4       	brcc	.+34     	; 0x852 <m_port_set+0x36>
     830:	a1 e0       	ldi	r26, 0x01	; 1
     832:	b0 e0       	ldi	r27, 0x00	; 0
     834:	fd 01       	movw	r30, r26
     836:	02 c0       	rjmp	.+4      	; 0x83c <m_port_set+0x20>
     838:	ee 0f       	add	r30, r30
     83a:	ff 1f       	adc	r31, r31
     83c:	1a 95       	dec	r17
     83e:	e2 f7       	brpl	.-8      	; 0x838 <m_port_set+0x1c>
     840:	e0 95       	com	r30
     842:	48 2f       	mov	r20, r24
     844:	4e 23       	and	r20, r30
     846:	6c 2f       	mov	r22, r28
     848:	8d 2f       	mov	r24, r29
     84a:	0e 94 3d 01 	call	0x27a	; 0x27a <m_write_register>
     84e:	81 e0       	ldi	r24, 0x01	; 1
     850:	15 c0       	rjmp	.+42     	; 0x87c <m_port_set+0x60>
     852:	9c 2f       	mov	r25, r28
     854:	92 51       	subi	r25, 0x12	; 18
     856:	92 30       	cpi	r25, 0x02	; 2
     858:	80 f4       	brcc	.+32     	; 0x87a <m_port_set+0x5e>
     85a:	e1 e0       	ldi	r30, 0x01	; 1
     85c:	f0 e0       	ldi	r31, 0x00	; 0
     85e:	9f 01       	movw	r18, r30
     860:	02 c0       	rjmp	.+4      	; 0x866 <m_port_set+0x4a>
     862:	22 0f       	add	r18, r18
     864:	33 1f       	adc	r19, r19
     866:	1a 95       	dec	r17
     868:	e2 f7       	brpl	.-8      	; 0x862 <m_port_set+0x46>
     86a:	48 2f       	mov	r20, r24
     86c:	42 2b       	or	r20, r18
     86e:	6c 2f       	mov	r22, r28
     870:	8d 2f       	mov	r24, r29
     872:	0e 94 3d 01 	call	0x27a	; 0x27a <m_write_register>
     876:	81 e0       	ldi	r24, 0x01	; 1
     878:	01 c0       	rjmp	.+2      	; 0x87c <m_port_set+0x60>
     87a:	80 e0       	ldi	r24, 0x00	; 0
     87c:	df 91       	pop	r29
     87e:	cf 91       	pop	r28
     880:	1f 91       	pop	r17
     882:	08 95       	ret

00000884 <m_usb_init>:
     884:	81 e0       	ldi	r24, 0x01	; 1
     886:	80 93 d7 00 	sts	0x00D7, r24
     88a:	80 ea       	ldi	r24, 0xA0	; 160
     88c:	80 93 d8 00 	sts	0x00D8, r24
     890:	82 e1       	ldi	r24, 0x12	; 18
     892:	89 bd       	out	0x29, r24	; 41
     894:	09 b4       	in	r0, 0x29	; 41
     896:	00 fe       	sbrs	r0, 0
     898:	fd cf       	rjmp	.-6      	; 0x894 <m_usb_init+0x10>
     89a:	80 e9       	ldi	r24, 0x90	; 144
     89c:	80 93 d8 00 	sts	0x00D8, r24
     8a0:	10 92 e0 00 	sts	0x00E0, r1
     8a4:	10 92 51 01 	sts	0x0151, r1
     8a8:	10 92 52 01 	sts	0x0152, r1
     8ac:	8c e0       	ldi	r24, 0x0C	; 12
     8ae:	80 93 e2 00 	sts	0x00E2, r24
     8b2:	78 94       	sei
     8b4:	08 95       	ret

000008b6 <m_usb_rx_char>:
     8b6:	9f b7       	in	r25, 0x3f	; 63
     8b8:	f8 94       	cli
     8ba:	80 91 51 01 	lds	r24, 0x0151
     8be:	81 11       	cpse	r24, r1
     8c0:	03 c0       	rjmp	.+6      	; 0x8c8 <m_usb_rx_char+0x12>
     8c2:	9f bf       	out	0x3f, r25	; 63
     8c4:	8f ef       	ldi	r24, 0xFF	; 255
     8c6:	08 95       	ret
     8c8:	83 e0       	ldi	r24, 0x03	; 3
     8ca:	80 93 e9 00 	sts	0x00E9, r24
     8ce:	80 91 e8 00 	lds	r24, 0x00E8
     8d2:	85 fd       	sbrc	r24, 5
     8d4:	03 c0       	rjmp	.+6      	; 0x8dc <m_usb_rx_char+0x26>
     8d6:	9f bf       	out	0x3f, r25	; 63
     8d8:	8f ef       	ldi	r24, 0xFF	; 255
     8da:	08 95       	ret
     8dc:	80 91 f1 00 	lds	r24, 0x00F1
     8e0:	20 91 e8 00 	lds	r18, 0x00E8
     8e4:	25 fd       	sbrc	r18, 5
     8e6:	03 c0       	rjmp	.+6      	; 0x8ee <m_usb_rx_char+0x38>
     8e8:	2b e6       	ldi	r18, 0x6B	; 107
     8ea:	20 93 e8 00 	sts	0x00E8, r18
     8ee:	9f bf       	out	0x3f, r25	; 63
     8f0:	08 95       	ret

000008f2 <m_usb_rx_available>:
     8f2:	9f b7       	in	r25, 0x3f	; 63
     8f4:	f8 94       	cli
     8f6:	80 91 51 01 	lds	r24, 0x0151
     8fa:	88 23       	and	r24, r24
     8fc:	31 f0       	breq	.+12     	; 0x90a <m_usb_rx_available+0x18>
     8fe:	83 e0       	ldi	r24, 0x03	; 3
     900:	80 93 e9 00 	sts	0x00E9, r24
     904:	80 91 f2 00 	lds	r24, 0x00F2
     908:	01 c0       	rjmp	.+2      	; 0x90c <m_usb_rx_available+0x1a>
     90a:	80 e0       	ldi	r24, 0x00	; 0
     90c:	9f bf       	out	0x3f, r25	; 63
     90e:	08 95       	ret

00000910 <m_usb_rx_flush>:
     910:	80 91 51 01 	lds	r24, 0x0151
     914:	88 23       	and	r24, r24
     916:	89 f0       	breq	.+34     	; 0x93a <m_usb_rx_flush+0x2a>
     918:	2f b7       	in	r18, 0x3f	; 63
     91a:	f8 94       	cli
     91c:	83 e0       	ldi	r24, 0x03	; 3
     91e:	80 93 e9 00 	sts	0x00E9, r24
     922:	80 91 e8 00 	lds	r24, 0x00E8
     926:	85 ff       	sbrs	r24, 5
     928:	07 c0       	rjmp	.+14     	; 0x938 <m_usb_rx_flush+0x28>
     92a:	e8 ee       	ldi	r30, 0xE8	; 232
     92c:	f0 e0       	ldi	r31, 0x00	; 0
     92e:	9b e6       	ldi	r25, 0x6B	; 107
     930:	90 83       	st	Z, r25
     932:	80 81       	ld	r24, Z
     934:	85 fd       	sbrc	r24, 5
     936:	fc cf       	rjmp	.-8      	; 0x930 <m_usb_rx_flush+0x20>
     938:	2f bf       	out	0x3f, r18	; 63
     93a:	08 95       	ret

0000093c <m_usb_tx_char>:
     93c:	cf 93       	push	r28
     93e:	df 93       	push	r29
     940:	90 91 51 01 	lds	r25, 0x0151
     944:	99 23       	and	r25, r25
     946:	09 f4       	brne	.+2      	; 0x94a <m_usb_tx_char+0xe>
     948:	4d c0       	rjmp	.+154    	; 0x9e4 <m_usb_tx_char+0xa8>
     94a:	9f b7       	in	r25, 0x3f	; 63
     94c:	f8 94       	cli
     94e:	24 e0       	ldi	r18, 0x04	; 4
     950:	20 93 e9 00 	sts	0x00E9, r18
     954:	20 91 53 01 	lds	r18, 0x0153
     958:	22 23       	and	r18, r18
     95a:	49 f0       	breq	.+18     	; 0x96e <m_usb_tx_char+0x32>
     95c:	20 91 e8 00 	lds	r18, 0x00E8
     960:	25 fd       	sbrc	r18, 5
     962:	03 c0       	rjmp	.+6      	; 0x96a <m_usb_tx_char+0x2e>
     964:	9f bf       	out	0x3f, r25	; 63
     966:	8f ef       	ldi	r24, 0xFF	; 255
     968:	42 c0       	rjmp	.+132    	; 0x9ee <m_usb_tx_char+0xb2>
     96a:	10 92 53 01 	sts	0x0153, r1
     96e:	30 91 e4 00 	lds	r19, 0x00E4
     972:	37 5e       	subi	r19, 0xE7	; 231
     974:	20 91 e8 00 	lds	r18, 0x00E8
     978:	25 fd       	sbrc	r18, 5
     97a:	25 c0       	rjmp	.+74     	; 0x9c6 <m_usb_tx_char+0x8a>
     97c:	9f bf       	out	0x3f, r25	; 63
     97e:	90 91 e4 00 	lds	r25, 0x00E4
     982:	93 17       	cp	r25, r19
     984:	49 f0       	breq	.+18     	; 0x998 <m_usb_tx_char+0x5c>
     986:	90 91 51 01 	lds	r25, 0x0151
     98a:	91 11       	cpse	r25, r1
     98c:	0f c0       	rjmp	.+30     	; 0x9ac <m_usb_tx_char+0x70>
     98e:	2c c0       	rjmp	.+88     	; 0x9e8 <m_usb_tx_char+0xac>
     990:	9f bf       	out	0x3f, r25	; 63
     992:	98 81       	ld	r25, Y
     994:	93 13       	cpse	r25, r19
     996:	05 c0       	rjmp	.+10     	; 0x9a2 <m_usb_tx_char+0x66>
     998:	81 e0       	ldi	r24, 0x01	; 1
     99a:	80 93 53 01 	sts	0x0153, r24
     99e:	8f ef       	ldi	r24, 0xFF	; 255
     9a0:	26 c0       	rjmp	.+76     	; 0x9ee <m_usb_tx_char+0xb2>
     9a2:	90 91 51 01 	lds	r25, 0x0151
     9a6:	91 11       	cpse	r25, r1
     9a8:	08 c0       	rjmp	.+16     	; 0x9ba <m_usb_tx_char+0x7e>
     9aa:	20 c0       	rjmp	.+64     	; 0x9ec <m_usb_tx_char+0xb0>
     9ac:	a9 ee       	ldi	r26, 0xE9	; 233
     9ae:	b0 e0       	ldi	r27, 0x00	; 0
     9b0:	44 e0       	ldi	r20, 0x04	; 4
     9b2:	e8 ee       	ldi	r30, 0xE8	; 232
     9b4:	f0 e0       	ldi	r31, 0x00	; 0
     9b6:	c4 ee       	ldi	r28, 0xE4	; 228
     9b8:	d0 e0       	ldi	r29, 0x00	; 0
     9ba:	9f b7       	in	r25, 0x3f	; 63
     9bc:	f8 94       	cli
     9be:	4c 93       	st	X, r20
     9c0:	20 81       	ld	r18, Z
     9c2:	25 ff       	sbrs	r18, 5
     9c4:	e5 cf       	rjmp	.-54     	; 0x990 <m_usb_tx_char+0x54>
     9c6:	80 93 f1 00 	sts	0x00F1, r24
     9ca:	80 91 e8 00 	lds	r24, 0x00E8
     9ce:	85 fd       	sbrc	r24, 5
     9d0:	03 c0       	rjmp	.+6      	; 0x9d8 <m_usb_tx_char+0x9c>
     9d2:	8a e3       	ldi	r24, 0x3A	; 58
     9d4:	80 93 e8 00 	sts	0x00E8, r24
     9d8:	85 e0       	ldi	r24, 0x05	; 5
     9da:	80 93 50 01 	sts	0x0150, r24
     9de:	9f bf       	out	0x3f, r25	; 63
     9e0:	80 e0       	ldi	r24, 0x00	; 0
     9e2:	05 c0       	rjmp	.+10     	; 0x9ee <m_usb_tx_char+0xb2>
     9e4:	8f ef       	ldi	r24, 0xFF	; 255
     9e6:	03 c0       	rjmp	.+6      	; 0x9ee <m_usb_tx_char+0xb2>
     9e8:	8f ef       	ldi	r24, 0xFF	; 255
     9ea:	01 c0       	rjmp	.+2      	; 0x9ee <m_usb_tx_char+0xb2>
     9ec:	8f ef       	ldi	r24, 0xFF	; 255
     9ee:	df 91       	pop	r29
     9f0:	cf 91       	pop	r28
     9f2:	08 95       	ret

000009f4 <__vector_10>:
     9f4:	1f 92       	push	r1
     9f6:	0f 92       	push	r0
     9f8:	0f b6       	in	r0, 0x3f	; 63
     9fa:	0f 92       	push	r0
     9fc:	11 24       	eor	r1, r1
     9fe:	8f 93       	push	r24
     a00:	9f 93       	push	r25
     a02:	ef 93       	push	r30
     a04:	ff 93       	push	r31
     a06:	e1 ee       	ldi	r30, 0xE1	; 225
     a08:	f0 e0       	ldi	r31, 0x00	; 0
     a0a:	80 81       	ld	r24, Z
     a0c:	10 82       	st	Z, r1
     a0e:	83 ff       	sbrs	r24, 3
     a10:	11 c0       	rjmp	.+34     	; 0xa34 <__vector_10+0x40>
     a12:	10 92 e9 00 	sts	0x00E9, r1
     a16:	91 e0       	ldi	r25, 0x01	; 1
     a18:	90 93 eb 00 	sts	0x00EB, r25
     a1c:	10 92 ec 00 	sts	0x00EC, r1
     a20:	92 e1       	ldi	r25, 0x12	; 18
     a22:	90 93 ed 00 	sts	0x00ED, r25
     a26:	98 e0       	ldi	r25, 0x08	; 8
     a28:	90 93 f0 00 	sts	0x00F0, r25
     a2c:	10 92 51 01 	sts	0x0151, r1
     a30:	10 92 52 01 	sts	0x0152, r1
     a34:	82 ff       	sbrs	r24, 2
     a36:	13 c0       	rjmp	.+38     	; 0xa5e <__vector_10+0x6a>
     a38:	80 91 51 01 	lds	r24, 0x0151
     a3c:	88 23       	and	r24, r24
     a3e:	79 f0       	breq	.+30     	; 0xa5e <__vector_10+0x6a>
     a40:	80 91 50 01 	lds	r24, 0x0150
     a44:	88 23       	and	r24, r24
     a46:	59 f0       	breq	.+22     	; 0xa5e <__vector_10+0x6a>
     a48:	81 50       	subi	r24, 0x01	; 1
     a4a:	80 93 50 01 	sts	0x0150, r24
     a4e:	81 11       	cpse	r24, r1
     a50:	06 c0       	rjmp	.+12     	; 0xa5e <__vector_10+0x6a>
     a52:	84 e0       	ldi	r24, 0x04	; 4
     a54:	80 93 e9 00 	sts	0x00E9, r24
     a58:	8a e3       	ldi	r24, 0x3A	; 58
     a5a:	80 93 e8 00 	sts	0x00E8, r24
     a5e:	ff 91       	pop	r31
     a60:	ef 91       	pop	r30
     a62:	9f 91       	pop	r25
     a64:	8f 91       	pop	r24
     a66:	0f 90       	pop	r0
     a68:	0f be       	out	0x3f, r0	; 63
     a6a:	0f 90       	pop	r0
     a6c:	1f 90       	pop	r1
     a6e:	18 95       	reti

00000a70 <__vector_11>:
     a70:	1f 92       	push	r1
     a72:	0f 92       	push	r0
     a74:	0f b6       	in	r0, 0x3f	; 63
     a76:	0f 92       	push	r0
     a78:	11 24       	eor	r1, r1
     a7a:	0f 93       	push	r16
     a7c:	1f 93       	push	r17
     a7e:	2f 93       	push	r18
     a80:	3f 93       	push	r19
     a82:	4f 93       	push	r20
     a84:	5f 93       	push	r21
     a86:	6f 93       	push	r22
     a88:	7f 93       	push	r23
     a8a:	8f 93       	push	r24
     a8c:	9f 93       	push	r25
     a8e:	af 93       	push	r26
     a90:	bf 93       	push	r27
     a92:	cf 93       	push	r28
     a94:	df 93       	push	r29
     a96:	ef 93       	push	r30
     a98:	ff 93       	push	r31
     a9a:	10 92 e9 00 	sts	0x00E9, r1
     a9e:	80 91 e8 00 	lds	r24, 0x00E8
     aa2:	83 ff       	sbrs	r24, 3
     aa4:	51 c1       	rjmp	.+674    	; 0xd48 <__stack+0x249>
     aa6:	e1 ef       	ldi	r30, 0xF1	; 241
     aa8:	f0 e0       	ldi	r31, 0x00	; 0
     aaa:	70 81       	ld	r23, Z
     aac:	40 81       	ld	r20, Z
     aae:	20 81       	ld	r18, Z
     ab0:	30 81       	ld	r19, Z
     ab2:	93 2f       	mov	r25, r19
     ab4:	80 e0       	ldi	r24, 0x00	; 0
     ab6:	dc 01       	movw	r26, r24
     ab8:	a2 2b       	or	r26, r18
     aba:	9d 01       	movw	r18, r26
     abc:	50 81       	ld	r21, Z
     abe:	60 81       	ld	r22, Z
     ac0:	96 2f       	mov	r25, r22
     ac2:	80 e0       	ldi	r24, 0x00	; 0
     ac4:	85 2b       	or	r24, r21
     ac6:	a0 81       	ld	r26, Z
     ac8:	b0 81       	ld	r27, Z
     aca:	52 ef       	ldi	r21, 0xF2	; 242
     acc:	50 93 e8 00 	sts	0x00E8, r21
     ad0:	46 30       	cpi	r20, 0x06	; 6
     ad2:	09 f0       	breq	.+2      	; 0xad6 <__vector_11+0x66>
     ad4:	5c c0       	rjmp	.+184    	; 0xb8e <__stack+0x8f>
     ad6:	04 c0       	rjmp	.+8      	; 0xae0 <__vector_11+0x70>
     ad8:	81 e2       	ldi	r24, 0x21	; 33
     ada:	80 93 eb 00 	sts	0x00EB, r24
     ade:	3b c1       	rjmp	.+630    	; 0xd56 <__stack+0x257>
     ae0:	c6 e0       	ldi	r28, 0x06	; 6
     ae2:	4c ea       	ldi	r20, 0xAC	; 172
     ae4:	50 e0       	ldi	r21, 0x00	; 0
     ae6:	fa 01       	movw	r30, r20
     ae8:	65 91       	lpm	r22, Z+
     aea:	74 91       	lpm	r23, Z
     aec:	26 17       	cp	r18, r22
     aee:	37 07       	cpc	r19, r23
     af0:	19 f0       	breq	.+6      	; 0xaf8 <__vector_11+0x88>
     af2:	49 5f       	subi	r20, 0xF9	; 249
     af4:	5f 4f       	sbci	r21, 0xFF	; 255
     af6:	20 c0       	rjmp	.+64     	; 0xb38 <__stack+0x39>
     af8:	fa 01       	movw	r30, r20
     afa:	32 96       	adiw	r30, 0x02	; 2
     afc:	65 91       	lpm	r22, Z+
     afe:	74 91       	lpm	r23, Z
     b00:	86 17       	cp	r24, r22
     b02:	97 07       	cpc	r25, r23
     b04:	19 f0       	breq	.+6      	; 0xb0c <__stack+0xd>
     b06:	49 5f       	subi	r20, 0xF9	; 249
     b08:	5f 4f       	sbci	r21, 0xFF	; 255
     b0a:	16 c0       	rjmp	.+44     	; 0xb38 <__stack+0x39>
     b0c:	fa 01       	movw	r30, r20
     b0e:	34 96       	adiw	r30, 0x04	; 4
     b10:	85 91       	lpm	r24, Z+
     b12:	94 91       	lpm	r25, Z
     b14:	28 2f       	mov	r18, r24
     b16:	39 2f       	mov	r19, r25
     b18:	fa 01       	movw	r30, r20
     b1a:	36 96       	adiw	r30, 0x06	; 6
     b1c:	44 91       	lpm	r20, Z
     b1e:	9b 2f       	mov	r25, r27
     b20:	80 e0       	ldi	r24, 0x00	; 0
     b22:	8a 2b       	or	r24, r26
     b24:	8f 3f       	cpi	r24, 0xFF	; 255
     b26:	91 05       	cpc	r25, r1
     b28:	19 f0       	breq	.+6      	; 0xb30 <__stack+0x31>
     b2a:	10 f0       	brcs	.+4      	; 0xb30 <__stack+0x31>
     b2c:	8f ef       	ldi	r24, 0xFF	; 255
     b2e:	90 e0       	ldi	r25, 0x00	; 0
     b30:	84 17       	cp	r24, r20
     b32:	28 f4       	brcc	.+10     	; 0xb3e <__stack+0x3f>
     b34:	48 2f       	mov	r20, r24
     b36:	03 c0       	rjmp	.+6      	; 0xb3e <__stack+0x3f>
     b38:	c1 50       	subi	r28, 0x01	; 1
     b3a:	a9 f6       	brne	.-86     	; 0xae6 <__vector_11+0x76>
     b3c:	cd cf       	rjmp	.-102    	; 0xad8 <__vector_11+0x68>
     b3e:	c8 ee       	ldi	r28, 0xE8	; 232
     b40:	d0 e0       	ldi	r29, 0x00	; 0
     b42:	7e ef       	ldi	r23, 0xFE	; 254
     b44:	a1 ef       	ldi	r26, 0xF1	; 241
     b46:	b0 e0       	ldi	r27, 0x00	; 0
     b48:	10 e1       	ldi	r17, 0x10	; 16
     b4a:	88 81       	ld	r24, Y
     b4c:	98 2f       	mov	r25, r24
     b4e:	95 70       	andi	r25, 0x05	; 5
     b50:	e1 f3       	breq	.-8      	; 0xb4a <__stack+0x4b>
     b52:	82 fd       	sbrc	r24, 2
     b54:	00 c1       	rjmp	.+512    	; 0xd56 <__stack+0x257>
     b56:	64 2f       	mov	r22, r20
     b58:	41 31       	cpi	r20, 0x11	; 17
     b5a:	08 f0       	brcs	.+2      	; 0xb5e <__stack+0x5f>
     b5c:	61 2f       	mov	r22, r17
     b5e:	66 23       	and	r22, r22
     b60:	09 f4       	brne	.+2      	; 0xb64 <__stack+0x65>
     b62:	f6 c0       	rjmp	.+492    	; 0xd50 <__stack+0x251>
     b64:	c9 01       	movw	r24, r18
     b66:	56 2f       	mov	r21, r22
     b68:	fc 01       	movw	r30, r24
     b6a:	01 96       	adiw	r24, 0x01	; 1
     b6c:	e4 91       	lpm	r30, Z
     b6e:	ec 93       	st	X, r30
     b70:	51 50       	subi	r21, 0x01	; 1
     b72:	d1 f7       	brne	.-12     	; 0xb68 <__stack+0x69>
     b74:	86 2f       	mov	r24, r22
     b76:	81 50       	subi	r24, 0x01	; 1
     b78:	90 e0       	ldi	r25, 0x00	; 0
     b7a:	01 96       	adiw	r24, 0x01	; 1
     b7c:	28 0f       	add	r18, r24
     b7e:	39 1f       	adc	r19, r25
     b80:	46 1b       	sub	r20, r22
     b82:	78 83       	st	Y, r23
     b84:	41 11       	cpse	r20, r1
     b86:	e1 cf       	rjmp	.-62     	; 0xb4a <__stack+0x4b>
     b88:	60 31       	cpi	r22, 0x10	; 16
     b8a:	f9 f2       	breq	.-66     	; 0xb4a <__stack+0x4b>
     b8c:	e4 c0       	rjmp	.+456    	; 0xd56 <__stack+0x257>
     b8e:	45 30       	cpi	r20, 0x05	; 5
     b90:	61 f4       	brne	.+24     	; 0xbaa <__stack+0xab>
     b92:	8e ef       	ldi	r24, 0xFE	; 254
     b94:	80 93 e8 00 	sts	0x00E8, r24
     b98:	e8 ee       	ldi	r30, 0xE8	; 232
     b9a:	f0 e0       	ldi	r31, 0x00	; 0
     b9c:	80 81       	ld	r24, Z
     b9e:	80 ff       	sbrs	r24, 0
     ba0:	fd cf       	rjmp	.-6      	; 0xb9c <__stack+0x9d>
     ba2:	20 68       	ori	r18, 0x80	; 128
     ba4:	20 93 e3 00 	sts	0x00E3, r18
     ba8:	d6 c0       	rjmp	.+428    	; 0xd56 <__stack+0x257>
     baa:	49 30       	cpi	r20, 0x09	; 9
     bac:	a1 f5       	brne	.+104    	; 0xc16 <__stack+0x117>
     bae:	71 11       	cpse	r23, r1
     bb0:	5b c0       	rjmp	.+182    	; 0xc68 <__stack+0x169>
     bb2:	20 93 51 01 	sts	0x0151, r18
     bb6:	10 92 52 01 	sts	0x0152, r1
     bba:	10 92 50 01 	sts	0x0150, r1
     bbe:	8e ef       	ldi	r24, 0xFE	; 254
     bc0:	80 93 e8 00 	sts	0x00E8, r24
     bc4:	11 e0       	ldi	r17, 0x01	; 1
     bc6:	86 ed       	ldi	r24, 0xD6	; 214
     bc8:	90 e0       	ldi	r25, 0x00	; 0
     bca:	c9 ee       	ldi	r28, 0xE9	; 233
     bcc:	d0 e0       	ldi	r29, 0x00	; 0
     bce:	ab ee       	ldi	r26, 0xEB	; 235
     bd0:	b0 e0       	ldi	r27, 0x00	; 0
     bd2:	6c ee       	ldi	r22, 0xEC	; 236
     bd4:	70 e0       	ldi	r23, 0x00	; 0
     bd6:	4d ee       	ldi	r20, 0xED	; 237
     bd8:	50 e0       	ldi	r21, 0x00	; 0
     bda:	18 83       	st	Y, r17
     bdc:	9c 01       	movw	r18, r24
     bde:	2f 5f       	subi	r18, 0xFF	; 255
     be0:	3f 4f       	sbci	r19, 0xFF	; 255
     be2:	fc 01       	movw	r30, r24
     be4:	04 91       	lpm	r16, Z
     be6:	0c 93       	st	X, r16
     be8:	00 23       	and	r16, r16
     bea:	59 f0       	breq	.+22     	; 0xc02 <__stack+0x103>
     bec:	f9 01       	movw	r30, r18
     bee:	24 91       	lpm	r18, Z
     bf0:	fb 01       	movw	r30, r22
     bf2:	20 83       	st	Z, r18
     bf4:	fc 01       	movw	r30, r24
     bf6:	32 96       	adiw	r30, 0x02	; 2
     bf8:	03 96       	adiw	r24, 0x03	; 3
     bfa:	24 91       	lpm	r18, Z
     bfc:	fa 01       	movw	r30, r20
     bfe:	20 83       	st	Z, r18
     c00:	01 c0       	rjmp	.+2      	; 0xc04 <__stack+0x105>
     c02:	c9 01       	movw	r24, r18
     c04:	1f 5f       	subi	r17, 0xFF	; 255
     c06:	15 30       	cpi	r17, 0x05	; 5
     c08:	41 f7       	brne	.-48     	; 0xbda <__stack+0xdb>
     c0a:	ea ee       	ldi	r30, 0xEA	; 234
     c0c:	f0 e0       	ldi	r31, 0x00	; 0
     c0e:	8e e1       	ldi	r24, 0x1E	; 30
     c10:	80 83       	st	Z, r24
     c12:	10 82       	st	Z, r1
     c14:	a0 c0       	rjmp	.+320    	; 0xd56 <__stack+0x257>
     c16:	48 30       	cpi	r20, 0x08	; 8
     c18:	81 f4       	brne	.+32     	; 0xc3a <__stack+0x13b>
     c1a:	70 38       	cpi	r23, 0x80	; 128
     c1c:	09 f0       	breq	.+2      	; 0xc20 <__stack+0x121>
     c1e:	3f c0       	rjmp	.+126    	; 0xc9e <__stack+0x19f>
     c20:	e8 ee       	ldi	r30, 0xE8	; 232
     c22:	f0 e0       	ldi	r31, 0x00	; 0
     c24:	80 81       	ld	r24, Z
     c26:	80 ff       	sbrs	r24, 0
     c28:	fd cf       	rjmp	.-6      	; 0xc24 <__stack+0x125>
     c2a:	80 91 51 01 	lds	r24, 0x0151
     c2e:	80 93 f1 00 	sts	0x00F1, r24
     c32:	8e ef       	ldi	r24, 0xFE	; 254
     c34:	80 93 e8 00 	sts	0x00E8, r24
     c38:	8e c0       	rjmp	.+284    	; 0xd56 <__stack+0x257>
     c3a:	41 32       	cpi	r20, 0x21	; 33
     c3c:	a9 f4       	brne	.+42     	; 0xc68 <__stack+0x169>
     c3e:	71 3a       	cpi	r23, 0xA1	; 161
     c40:	f1 f5       	brne	.+124    	; 0xcbe <__stack+0x1bf>
     c42:	e8 ee       	ldi	r30, 0xE8	; 232
     c44:	f0 e0       	ldi	r31, 0x00	; 0
     c46:	80 81       	ld	r24, Z
     c48:	80 ff       	sbrs	r24, 0
     c4a:	fd cf       	rjmp	.-6      	; 0xc46 <__stack+0x147>
     c4c:	e4 e0       	ldi	r30, 0x04	; 4
     c4e:	f1 e0       	ldi	r31, 0x01	; 1
     c50:	a1 ef       	ldi	r26, 0xF1	; 241
     c52:	b0 e0       	ldi	r27, 0x00	; 0
     c54:	81 91       	ld	r24, Z+
     c56:	8c 93       	st	X, r24
     c58:	41 e0       	ldi	r20, 0x01	; 1
     c5a:	eb 30       	cpi	r30, 0x0B	; 11
     c5c:	f4 07       	cpc	r31, r20
     c5e:	d1 f7       	brne	.-12     	; 0xc54 <__stack+0x155>
     c60:	8e ef       	ldi	r24, 0xFE	; 254
     c62:	80 93 e8 00 	sts	0x00E8, r24
     c66:	77 c0       	rjmp	.+238    	; 0xd56 <__stack+0x257>
     c68:	40 32       	cpi	r20, 0x20	; 32
     c6a:	c9 f4       	brne	.+50     	; 0xc9e <__stack+0x19f>
     c6c:	71 32       	cpi	r23, 0x21	; 33
     c6e:	09 f0       	breq	.+2      	; 0xc72 <__stack+0x173>
     c70:	6b c0       	rjmp	.+214    	; 0xd48 <__stack+0x249>
     c72:	e8 ee       	ldi	r30, 0xE8	; 232
     c74:	f0 e0       	ldi	r31, 0x00	; 0
     c76:	80 81       	ld	r24, Z
     c78:	82 ff       	sbrs	r24, 2
     c7a:	fd cf       	rjmp	.-6      	; 0xc76 <__stack+0x177>
     c7c:	e4 e0       	ldi	r30, 0x04	; 4
     c7e:	f1 e0       	ldi	r31, 0x01	; 1
     c80:	a1 ef       	ldi	r26, 0xF1	; 241
     c82:	b0 e0       	ldi	r27, 0x00	; 0
     c84:	8c 91       	ld	r24, X
     c86:	81 93       	st	Z+, r24
     c88:	51 e0       	ldi	r21, 0x01	; 1
     c8a:	eb 30       	cpi	r30, 0x0B	; 11
     c8c:	f5 07       	cpc	r31, r21
     c8e:	d1 f7       	brne	.-12     	; 0xc84 <__stack+0x185>
     c90:	e8 ee       	ldi	r30, 0xE8	; 232
     c92:	f0 e0       	ldi	r31, 0x00	; 0
     c94:	8b ef       	ldi	r24, 0xFB	; 251
     c96:	80 83       	st	Z, r24
     c98:	8e ef       	ldi	r24, 0xFE	; 254
     c9a:	80 83       	st	Z, r24
     c9c:	5c c0       	rjmp	.+184    	; 0xd56 <__stack+0x257>
     c9e:	42 32       	cpi	r20, 0x22	; 34
     ca0:	71 f4       	brne	.+28     	; 0xcbe <__stack+0x1bf>
     ca2:	71 32       	cpi	r23, 0x21	; 33
     ca4:	09 f0       	breq	.+2      	; 0xca8 <__stack+0x1a9>
     ca6:	50 c0       	rjmp	.+160    	; 0xd48 <__stack+0x249>
     ca8:	20 93 52 01 	sts	0x0152, r18
     cac:	e8 ee       	ldi	r30, 0xE8	; 232
     cae:	f0 e0       	ldi	r31, 0x00	; 0
     cb0:	80 81       	ld	r24, Z
     cb2:	80 ff       	sbrs	r24, 0
     cb4:	fd cf       	rjmp	.-6      	; 0xcb0 <__stack+0x1b1>
     cb6:	8e ef       	ldi	r24, 0xFE	; 254
     cb8:	80 93 e8 00 	sts	0x00E8, r24
     cbc:	4c c0       	rjmp	.+152    	; 0xd56 <__stack+0x257>
     cbe:	41 11       	cpse	r20, r1
     cc0:	1a c0       	rjmp	.+52     	; 0xcf6 <__stack+0x1f7>
     cc2:	e8 ee       	ldi	r30, 0xE8	; 232
     cc4:	f0 e0       	ldi	r31, 0x00	; 0
     cc6:	20 81       	ld	r18, Z
     cc8:	20 ff       	sbrs	r18, 0
     cca:	fd cf       	rjmp	.-6      	; 0xcc6 <__stack+0x1c7>
     ccc:	72 38       	cpi	r23, 0x82	; 130
     cce:	51 f4       	brne	.+20     	; 0xce4 <__stack+0x1e5>
     cd0:	e9 ee       	ldi	r30, 0xE9	; 233
     cd2:	f0 e0       	ldi	r31, 0x00	; 0
     cd4:	80 83       	st	Z, r24
     cd6:	80 91 eb 00 	lds	r24, 0x00EB
     cda:	85 fb       	bst	r24, 5
     cdc:	88 27       	eor	r24, r24
     cde:	80 f9       	bld	r24, 0
     ce0:	10 82       	st	Z, r1
     ce2:	01 c0       	rjmp	.+2      	; 0xce6 <__stack+0x1e7>
     ce4:	80 e0       	ldi	r24, 0x00	; 0
     ce6:	e1 ef       	ldi	r30, 0xF1	; 241
     ce8:	f0 e0       	ldi	r31, 0x00	; 0
     cea:	80 83       	st	Z, r24
     cec:	10 82       	st	Z, r1
     cee:	8e ef       	ldi	r24, 0xFE	; 254
     cf0:	80 93 e8 00 	sts	0x00E8, r24
     cf4:	30 c0       	rjmp	.+96     	; 0xd56 <__stack+0x257>
     cf6:	41 30       	cpi	r20, 0x01	; 1
     cf8:	11 f0       	breq	.+4      	; 0xcfe <__stack+0x1ff>
     cfa:	43 30       	cpi	r20, 0x03	; 3
     cfc:	29 f5       	brne	.+74     	; 0xd48 <__stack+0x249>
     cfe:	72 30       	cpi	r23, 0x02	; 2
     d00:	19 f5       	brne	.+70     	; 0xd48 <__stack+0x249>
     d02:	23 2b       	or	r18, r19
     d04:	09 f5       	brne	.+66     	; 0xd48 <__stack+0x249>
     d06:	8f 77       	andi	r24, 0x7F	; 127
     d08:	99 27       	eor	r25, r25
     d0a:	38 2f       	mov	r19, r24
     d0c:	31 50       	subi	r19, 0x01	; 1
     d0e:	34 30       	cpi	r19, 0x04	; 4
     d10:	d8 f4       	brcc	.+54     	; 0xd48 <__stack+0x249>
     d12:	3e ef       	ldi	r19, 0xFE	; 254
     d14:	30 93 e8 00 	sts	0x00E8, r19
     d18:	80 93 e9 00 	sts	0x00E9, r24
     d1c:	43 30       	cpi	r20, 0x03	; 3
     d1e:	21 f4       	brne	.+8      	; 0xd28 <__stack+0x229>
     d20:	81 e2       	ldi	r24, 0x21	; 33
     d22:	80 93 eb 00 	sts	0x00EB, r24
     d26:	17 c0       	rjmp	.+46     	; 0xd56 <__stack+0x257>
     d28:	99 e1       	ldi	r25, 0x19	; 25
     d2a:	90 93 eb 00 	sts	0x00EB, r25
     d2e:	21 e0       	ldi	r18, 0x01	; 1
     d30:	30 e0       	ldi	r19, 0x00	; 0
     d32:	d9 01       	movw	r26, r18
     d34:	02 c0       	rjmp	.+4      	; 0xd3a <__stack+0x23b>
     d36:	aa 0f       	add	r26, r26
     d38:	bb 1f       	adc	r27, r27
     d3a:	8a 95       	dec	r24
     d3c:	e2 f7       	brpl	.-8      	; 0xd36 <__stack+0x237>
     d3e:	ea ee       	ldi	r30, 0xEA	; 234
     d40:	f0 e0       	ldi	r31, 0x00	; 0
     d42:	a0 83       	st	Z, r26
     d44:	10 82       	st	Z, r1
     d46:	07 c0       	rjmp	.+14     	; 0xd56 <__stack+0x257>
     d48:	81 e2       	ldi	r24, 0x21	; 33
     d4a:	80 93 eb 00 	sts	0x00EB, r24
     d4e:	03 c0       	rjmp	.+6      	; 0xd56 <__stack+0x257>
     d50:	78 83       	st	Y, r23
     d52:	41 11       	cpse	r20, r1
     d54:	fa ce       	rjmp	.-524    	; 0xb4a <__stack+0x4b>
     d56:	ff 91       	pop	r31
     d58:	ef 91       	pop	r30
     d5a:	df 91       	pop	r29
     d5c:	cf 91       	pop	r28
     d5e:	bf 91       	pop	r27
     d60:	af 91       	pop	r26
     d62:	9f 91       	pop	r25
     d64:	8f 91       	pop	r24
     d66:	7f 91       	pop	r23
     d68:	6f 91       	pop	r22
     d6a:	5f 91       	pop	r21
     d6c:	4f 91       	pop	r20
     d6e:	3f 91       	pop	r19
     d70:	2f 91       	pop	r18
     d72:	1f 91       	pop	r17
     d74:	0f 91       	pop	r16
     d76:	0f 90       	pop	r0
     d78:	0f be       	out	0x3f, r0	; 63
     d7a:	0f 90       	pop	r0
     d7c:	1f 90       	pop	r1
     d7e:	18 95       	reti

00000d80 <m_usb_tx_uint>:
     d80:	ef 92       	push	r14
     d82:	ff 92       	push	r15
     d84:	0f 93       	push	r16
     d86:	1f 93       	push	r17
     d88:	cf 93       	push	r28
     d8a:	df 93       	push	r29
     d8c:	00 d0       	rcall	.+0      	; 0xd8e <m_usb_tx_uint+0xe>
     d8e:	00 d0       	rcall	.+0      	; 0xd90 <m_usb_tx_uint+0x10>
     d90:	00 d0       	rcall	.+0      	; 0xd92 <m_usb_tx_uint+0x12>
     d92:	cd b7       	in	r28, 0x3d	; 61
     d94:	de b7       	in	r29, 0x3e	; 62
     d96:	8e 01       	movw	r16, r28
     d98:	0f 5f       	subi	r16, 0xFF	; 255
     d9a:	1f 4f       	sbci	r17, 0xFF	; 255
     d9c:	26 e0       	ldi	r18, 0x06	; 6
     d9e:	f8 01       	movw	r30, r16
     da0:	11 92       	st	Z+, r1
     da2:	2a 95       	dec	r18
     da4:	e9 f7       	brne	.-6      	; 0xda0 <m_usb_tx_uint+0x20>
     da6:	4a e0       	ldi	r20, 0x0A	; 10
     da8:	50 e0       	ldi	r21, 0x00	; 0
     daa:	b8 01       	movw	r22, r16
     dac:	0e 94 46 0c 	call	0x188c	; 0x188c <utoa>
     db0:	7e 01       	movw	r14, r28
     db2:	f6 e0       	ldi	r31, 0x06	; 6
     db4:	ef 0e       	add	r14, r31
     db6:	f1 1c       	adc	r15, r1
     db8:	f8 01       	movw	r30, r16
     dba:	81 91       	ld	r24, Z+
     dbc:	8f 01       	movw	r16, r30
     dbe:	81 11       	cpse	r24, r1
     dc0:	0e 94 9e 04 	call	0x93c	; 0x93c <m_usb_tx_char>
     dc4:	0e 15       	cp	r16, r14
     dc6:	1f 05       	cpc	r17, r15
     dc8:	b9 f7       	brne	.-18     	; 0xdb8 <m_usb_tx_uint+0x38>
     dca:	26 96       	adiw	r28, 0x06	; 6
     dcc:	0f b6       	in	r0, 0x3f	; 63
     dce:	f8 94       	cli
     dd0:	de bf       	out	0x3e, r29	; 62
     dd2:	0f be       	out	0x3f, r0	; 63
     dd4:	cd bf       	out	0x3d, r28	; 61
     dd6:	df 91       	pop	r29
     dd8:	cf 91       	pop	r28
     dda:	1f 91       	pop	r17
     ddc:	0f 91       	pop	r16
     dde:	ff 90       	pop	r15
     de0:	ef 90       	pop	r14
     de2:	08 95       	ret

00000de4 <twi_wait>:
     de4:	20 e0       	ldi	r18, 0x00	; 0
     de6:	30 e0       	ldi	r19, 0x00	; 0
     de8:	ec eb       	ldi	r30, 0xBC	; 188
     dea:	f0 e0       	ldi	r31, 0x00	; 0
     dec:	80 81       	ld	r24, Z
     dee:	88 23       	and	r24, r24
     df0:	34 f0       	brlt	.+12     	; 0xdfe <twi_wait+0x1a>
     df2:	2f 5f       	subi	r18, 0xFF	; 255
     df4:	3f 4f       	sbci	r19, 0xFF	; 255
     df6:	29 3e       	cpi	r18, 0xE9	; 233
     df8:	83 e0       	ldi	r24, 0x03	; 3
     dfa:	38 07       	cpc	r19, r24
     dfc:	b9 f7       	brne	.-18     	; 0xdec <twi_wait+0x8>
     dfe:	81 e0       	ldi	r24, 0x01	; 1
     e00:	28 3e       	cpi	r18, 0xE8	; 232
     e02:	33 40       	sbci	r19, 0x03	; 3
     e04:	09 f4       	brne	.+2      	; 0xe08 <twi_wait+0x24>
     e06:	80 e0       	ldi	r24, 0x00	; 0
     e08:	08 95       	ret

00000e0a <send_byte>:
     e0a:	80 93 bb 00 	sts	0x00BB, r24
     e0e:	84 e8       	ldi	r24, 0x84	; 132
     e10:	80 93 bc 00 	sts	0x00BC, r24
     e14:	0e 94 f2 06 	call	0xde4	; 0xde4 <twi_wait>
     e18:	88 23       	and	r24, r24
     e1a:	21 f0       	breq	.+8      	; 0xe24 <send_byte+0x1a>
     e1c:	80 91 b9 00 	lds	r24, 0x00B9
     e20:	88 7f       	andi	r24, 0xF8	; 248
     e22:	08 95       	ret
     e24:	80 e0       	ldi	r24, 0x00	; 0
     e26:	08 95       	ret

00000e28 <start_read>:
     e28:	cf 93       	push	r28
     e2a:	c8 2f       	mov	r28, r24
     e2c:	94 ea       	ldi	r25, 0xA4	; 164
     e2e:	90 93 bc 00 	sts	0x00BC, r25
     e32:	0e 94 f2 06 	call	0xde4	; 0xde4 <twi_wait>
     e36:	88 23       	and	r24, r24
     e38:	61 f0       	breq	.+24     	; 0xe52 <start_read+0x2a>
     e3a:	8c 2f       	mov	r24, r28
     e3c:	88 0f       	add	r24, r24
     e3e:	8f 5f       	subi	r24, 0xFF	; 255
     e40:	0e 94 05 07 	call	0xe0a	; 0xe0a <send_byte>
     e44:	88 34       	cpi	r24, 0x48	; 72
     e46:	39 f4       	brne	.+14     	; 0xe56 <start_read+0x2e>
     e48:	84 e9       	ldi	r24, 0x94	; 148
     e4a:	80 93 bc 00 	sts	0x00BC, r24
     e4e:	80 e0       	ldi	r24, 0x00	; 0
     e50:	03 c0       	rjmp	.+6      	; 0xe58 <start_read+0x30>
     e52:	80 e0       	ldi	r24, 0x00	; 0
     e54:	01 c0       	rjmp	.+2      	; 0xe58 <start_read+0x30>
     e56:	81 e0       	ldi	r24, 0x01	; 1
     e58:	cf 91       	pop	r28
     e5a:	08 95       	ret

00000e5c <start_write>:
     e5c:	cf 93       	push	r28
     e5e:	c8 2f       	mov	r28, r24
     e60:	94 ea       	ldi	r25, 0xA4	; 164
     e62:	90 93 bc 00 	sts	0x00BC, r25
     e66:	0e 94 f2 06 	call	0xde4	; 0xde4 <twi_wait>
     e6a:	88 23       	and	r24, r24
     e6c:	59 f0       	breq	.+22     	; 0xe84 <start_write+0x28>
     e6e:	8c 2f       	mov	r24, r28
     e70:	88 0f       	add	r24, r24
     e72:	0e 94 05 07 	call	0xe0a	; 0xe0a <send_byte>
     e76:	80 32       	cpi	r24, 0x20	; 32
     e78:	39 f4       	brne	.+14     	; 0xe88 <start_write+0x2c>
     e7a:	84 e9       	ldi	r24, 0x94	; 148
     e7c:	80 93 bc 00 	sts	0x00BC, r24
     e80:	80 e0       	ldi	r24, 0x00	; 0
     e82:	03 c0       	rjmp	.+6      	; 0xe8a <start_write+0x2e>
     e84:	80 e0       	ldi	r24, 0x00	; 0
     e86:	01 c0       	rjmp	.+2      	; 0xe8a <start_write+0x2e>
     e88:	81 e0       	ldi	r24, 0x01	; 1
     e8a:	cf 91       	pop	r28
     e8c:	08 95       	ret

00000e8e <end>:
     e8e:	84 e9       	ldi	r24, 0x94	; 148
     e90:	80 93 bc 00 	sts	0x00BC, r24
     e94:	08 95       	ret

00000e96 <m_wii_read>:
     e96:	ef 92       	push	r14
     e98:	ff 92       	push	r15
     e9a:	0f 93       	push	r16
     e9c:	1f 93       	push	r17
     e9e:	cf 93       	push	r28
     ea0:	df 93       	push	r29
     ea2:	cd b7       	in	r28, 0x3d	; 61
     ea4:	de b7       	in	r29, 0x3e	; 62
     ea6:	60 97       	sbiw	r28, 0x10	; 16
     ea8:	0f b6       	in	r0, 0x3f	; 63
     eaa:	f8 94       	cli
     eac:	de bf       	out	0x3e, r29	; 62
     eae:	0f be       	out	0x3f, r0	; 63
     eb0:	cd bf       	out	0x3d, r28	; 61
     eb2:	e8 2e       	mov	r14, r24
     eb4:	f9 2e       	mov	r15, r25
     eb6:	fe 01       	movw	r30, r28
     eb8:	31 96       	adiw	r30, 0x01	; 1
     eba:	80 e1       	ldi	r24, 0x10	; 16
     ebc:	df 01       	movw	r26, r30
     ebe:	1d 92       	st	X+, r1
     ec0:	8a 95       	dec	r24
     ec2:	e9 f7       	brne	.-6      	; 0xebe <m_wii_read+0x28>
     ec4:	88 e5       	ldi	r24, 0x58	; 88
     ec6:	0e 94 2e 07 	call	0xe5c	; 0xe5c <start_write>
     eca:	88 23       	and	r24, r24
     ecc:	09 f4       	brne	.+2      	; 0xed0 <m_wii_read+0x3a>
     ece:	66 c0       	rjmp	.+204    	; 0xf9c <m_wii_read+0x106>
     ed0:	86 e3       	ldi	r24, 0x36	; 54
     ed2:	0e 94 05 07 	call	0xe0a	; 0xe0a <send_byte>
     ed6:	88 23       	and	r24, r24
     ed8:	09 f4       	brne	.+2      	; 0xedc <m_wii_read+0x46>
     eda:	62 c0       	rjmp	.+196    	; 0xfa0 <m_wii_read+0x10a>
     edc:	0e 94 47 07 	call	0xe8e	; 0xe8e <end>
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

     ee0:	b8 e0       	ldi	r27, 0x08	; 8
     ee2:	ba 95       	dec	r27
     ee4:	f1 f7       	brne	.-4      	; 0xee2 <m_wii_read+0x4c>
     ee6:	00 00       	nop
     ee8:	88 e5       	ldi	r24, 0x58	; 88
     eea:	0e 94 14 07 	call	0xe28	; 0xe28 <start_read>
     eee:	88 23       	and	r24, r24
     ef0:	09 f4       	brne	.+2      	; 0xef4 <m_wii_read+0x5e>
     ef2:	58 c0       	rjmp	.+176    	; 0xfa4 <m_wii_read+0x10e>
     ef4:	ae 01       	movw	r20, r28
     ef6:	4f 5f       	subi	r20, 0xFF	; 255
     ef8:	5f 4f       	sbci	r21, 0xFF	; 255
     efa:	8e 01       	movw	r16, r28
     efc:	00 5f       	subi	r16, 0xF0	; 240
     efe:	1f 4f       	sbci	r17, 0xFF	; 255
     f00:	ec eb       	ldi	r30, 0xBC	; 188
     f02:	f0 e0       	ldi	r31, 0x00	; 0
     f04:	94 ec       	ldi	r25, 0xC4	; 196
     f06:	2b eb       	ldi	r18, 0xBB	; 187
     f08:	30 e0       	ldi	r19, 0x00	; 0
     f0a:	90 83       	st	Z, r25
     f0c:	80 81       	ld	r24, Z
     f0e:	88 23       	and	r24, r24
     f10:	ec f7       	brge	.-6      	; 0xf0c <m_wii_read+0x76>
     f12:	d9 01       	movw	r26, r18
     f14:	8c 91       	ld	r24, X
     f16:	da 01       	movw	r26, r20
     f18:	8d 93       	st	X+, r24
     f1a:	ad 01       	movw	r20, r26
     f1c:	a0 17       	cp	r26, r16
     f1e:	b1 07       	cpc	r27, r17
     f20:	a1 f7       	brne	.-24     	; 0xf0a <m_wii_read+0x74>
     f22:	84 e8       	ldi	r24, 0x84	; 132
     f24:	80 93 bc 00 	sts	0x00BC, r24
     f28:	ec eb       	ldi	r30, 0xBC	; 188
     f2a:	f0 e0       	ldi	r31, 0x00	; 0
     f2c:	80 81       	ld	r24, Z
     f2e:	88 23       	and	r24, r24
     f30:	ec f7       	brge	.-6      	; 0xf2c <m_wii_read+0x96>
     f32:	80 91 bb 00 	lds	r24, 0x00BB
     f36:	88 8b       	std	Y+16, r24	; 0x10
     f38:	0e 94 47 07 	call	0xe8e	; 0xe8e <end>
     f3c:	de 01       	movw	r26, r28
     f3e:	14 96       	adiw	r26, 0x04	; 4
     f40:	6e 2d       	mov	r22, r14
     f42:	7f 2d       	mov	r23, r15
     f44:	4c 91       	ld	r20, X
     f46:	24 2f       	mov	r18, r20
     f48:	20 73       	andi	r18, 0x30	; 48
     f4a:	cd 01       	movw	r24, r26
     f4c:	02 97       	sbiw	r24, 0x02	; 2
     f4e:	fc 01       	movw	r30, r24
     f50:	80 81       	ld	r24, Z
     f52:	90 e0       	ldi	r25, 0x00	; 0
     f54:	f0 e1       	ldi	r31, 0x10	; 16
     f56:	2f 9f       	mul	r18, r31
     f58:	80 0d       	add	r24, r0
     f5a:	91 1d       	adc	r25, r1
     f5c:	11 24       	eor	r1, r1
     f5e:	fb 01       	movw	r30, r22
     f60:	91 83       	std	Z+1, r25	; 0x01
     f62:	80 83       	st	Z, r24
     f64:	84 2f       	mov	r24, r20
     f66:	80 7c       	andi	r24, 0xC0	; 192
     f68:	90 e0       	ldi	r25, 0x00	; 0
     f6a:	88 0f       	add	r24, r24
     f6c:	99 1f       	adc	r25, r25
     f6e:	88 0f       	add	r24, r24
     f70:	99 1f       	adc	r25, r25
     f72:	9d 01       	movw	r18, r26
     f74:	21 50       	subi	r18, 0x01	; 1
     f76:	31 09       	sbc	r19, r1
     f78:	f9 01       	movw	r30, r18
     f7a:	20 81       	ld	r18, Z
     f7c:	82 0f       	add	r24, r18
     f7e:	91 1d       	adc	r25, r1
     f80:	fb 01       	movw	r30, r22
     f82:	93 83       	std	Z+3, r25	; 0x03
     f84:	82 83       	std	Z+2, r24	; 0x02
     f86:	4f 70       	andi	r20, 0x0F	; 15
     f88:	44 83       	std	Z+4, r20	; 0x04
     f8a:	15 82       	std	Z+5, r1	; 0x05
     f8c:	13 96       	adiw	r26, 0x03	; 3
     f8e:	6a 5f       	subi	r22, 0xFA	; 250
     f90:	7f 4f       	sbci	r23, 0xFF	; 255
     f92:	0a 17       	cp	r16, r26
     f94:	1b 07       	cpc	r17, r27
     f96:	b1 f6       	brne	.-84     	; 0xf44 <m_wii_read+0xae>
     f98:	81 e0       	ldi	r24, 0x01	; 1
     f9a:	05 c0       	rjmp	.+10     	; 0xfa6 <m_wii_read+0x110>
     f9c:	80 e0       	ldi	r24, 0x00	; 0
     f9e:	03 c0       	rjmp	.+6      	; 0xfa6 <m_wii_read+0x110>
     fa0:	80 e0       	ldi	r24, 0x00	; 0
     fa2:	01 c0       	rjmp	.+2      	; 0xfa6 <m_wii_read+0x110>
     fa4:	80 e0       	ldi	r24, 0x00	; 0
     fa6:	60 96       	adiw	r28, 0x10	; 16
     fa8:	0f b6       	in	r0, 0x3f	; 63
     faa:	f8 94       	cli
     fac:	de bf       	out	0x3e, r29	; 62
     fae:	0f be       	out	0x3f, r0	; 63
     fb0:	cd bf       	out	0x3d, r28	; 61
     fb2:	df 91       	pop	r29
     fb4:	cf 91       	pop	r28
     fb6:	1f 91       	pop	r17
     fb8:	0f 91       	pop	r16
     fba:	ff 90       	pop	r15
     fbc:	ef 90       	pop	r14
     fbe:	08 95       	ret

00000fc0 <m_wii_open>:
     fc0:	0e 94 cf 00 	call	0x19e	; 0x19e <m_bus_init>
     fc4:	88 e5       	ldi	r24, 0x58	; 88
     fc6:	0e 94 2e 07 	call	0xe5c	; 0xe5c <start_write>
     fca:	88 23       	and	r24, r24
     fcc:	09 f4       	brne	.+2      	; 0xfd0 <m_wii_open+0x10>
     fce:	c7 c0       	rjmp	.+398    	; 0x115e <m_wii_open+0x19e>
     fd0:	80 e3       	ldi	r24, 0x30	; 48
     fd2:	0e 94 05 07 	call	0xe0a	; 0xe0a <send_byte>
     fd6:	88 23       	and	r24, r24
     fd8:	09 f4       	brne	.+2      	; 0xfdc <m_wii_open+0x1c>
     fda:	c3 c0       	rjmp	.+390    	; 0x1162 <m_wii_open+0x1a2>
     fdc:	81 e0       	ldi	r24, 0x01	; 1
     fde:	0e 94 05 07 	call	0xe0a	; 0xe0a <send_byte>
     fe2:	88 23       	and	r24, r24
     fe4:	09 f4       	brne	.+2      	; 0xfe8 <m_wii_open+0x28>
     fe6:	bf c0       	rjmp	.+382    	; 0x1166 <m_wii_open+0x1a6>
     fe8:	0e 94 47 07 	call	0xe8e	; 0xe8e <end>
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

     fec:	83 ec       	ldi	r24, 0xC3	; 195
     fee:	99 e0       	ldi	r25, 0x09	; 9
     ff0:	01 97       	sbiw	r24, 0x01	; 1
     ff2:	f1 f7       	brne	.-4      	; 0xff0 <m_wii_open+0x30>
     ff4:	00 c0       	rjmp	.+0      	; 0xff6 <m_wii_open+0x36>
     ff6:	00 00       	nop
     ff8:	88 e5       	ldi	r24, 0x58	; 88
     ffa:	0e 94 2e 07 	call	0xe5c	; 0xe5c <start_write>
     ffe:	88 23       	and	r24, r24
    1000:	09 f4       	brne	.+2      	; 0x1004 <m_wii_open+0x44>
    1002:	b3 c0       	rjmp	.+358    	; 0x116a <m_wii_open+0x1aa>
    1004:	80 e0       	ldi	r24, 0x00	; 0
    1006:	0e 94 05 07 	call	0xe0a	; 0xe0a <send_byte>
    100a:	88 23       	and	r24, r24
    100c:	09 f4       	brne	.+2      	; 0x1010 <m_wii_open+0x50>
    100e:	af c0       	rjmp	.+350    	; 0x116e <m_wii_open+0x1ae>
    1010:	80 e0       	ldi	r24, 0x00	; 0
    1012:	0e 94 05 07 	call	0xe0a	; 0xe0a <send_byte>
    1016:	88 23       	and	r24, r24
    1018:	09 f4       	brne	.+2      	; 0x101c <m_wii_open+0x5c>
    101a:	ab c0       	rjmp	.+342    	; 0x1172 <m_wii_open+0x1b2>
    101c:	80 e0       	ldi	r24, 0x00	; 0
    101e:	0e 94 05 07 	call	0xe0a	; 0xe0a <send_byte>
    1022:	88 23       	and	r24, r24
    1024:	09 f4       	brne	.+2      	; 0x1028 <m_wii_open+0x68>
    1026:	a7 c0       	rjmp	.+334    	; 0x1176 <m_wii_open+0x1b6>
    1028:	80 e0       	ldi	r24, 0x00	; 0
    102a:	0e 94 05 07 	call	0xe0a	; 0xe0a <send_byte>
    102e:	88 23       	and	r24, r24
    1030:	09 f4       	brne	.+2      	; 0x1034 <m_wii_open+0x74>
    1032:	a3 c0       	rjmp	.+326    	; 0x117a <m_wii_open+0x1ba>
    1034:	80 e0       	ldi	r24, 0x00	; 0
    1036:	0e 94 05 07 	call	0xe0a	; 0xe0a <send_byte>
    103a:	88 23       	and	r24, r24
    103c:	09 f4       	brne	.+2      	; 0x1040 <m_wii_open+0x80>
    103e:	9f c0       	rjmp	.+318    	; 0x117e <m_wii_open+0x1be>
    1040:	80 e0       	ldi	r24, 0x00	; 0
    1042:	0e 94 05 07 	call	0xe0a	; 0xe0a <send_byte>
    1046:	88 23       	and	r24, r24
    1048:	09 f4       	brne	.+2      	; 0x104c <m_wii_open+0x8c>
    104a:	9b c0       	rjmp	.+310    	; 0x1182 <m_wii_open+0x1c2>
    104c:	80 e0       	ldi	r24, 0x00	; 0
    104e:	0e 94 05 07 	call	0xe0a	; 0xe0a <send_byte>
    1052:	88 23       	and	r24, r24
    1054:	09 f4       	brne	.+2      	; 0x1058 <m_wii_open+0x98>
    1056:	97 c0       	rjmp	.+302    	; 0x1186 <m_wii_open+0x1c6>
    1058:	80 e9       	ldi	r24, 0x90	; 144
    105a:	0e 94 05 07 	call	0xe0a	; 0xe0a <send_byte>
    105e:	88 23       	and	r24, r24
    1060:	09 f4       	brne	.+2      	; 0x1064 <m_wii_open+0xa4>
    1062:	93 c0       	rjmp	.+294    	; 0x118a <m_wii_open+0x1ca>
    1064:	0e 94 47 07 	call	0xe8e	; 0xe8e <end>
    1068:	83 ec       	ldi	r24, 0xC3	; 195
    106a:	99 e0       	ldi	r25, 0x09	; 9
    106c:	01 97       	sbiw	r24, 0x01	; 1
    106e:	f1 f7       	brne	.-4      	; 0x106c <m_wii_open+0xac>
    1070:	00 c0       	rjmp	.+0      	; 0x1072 <m_wii_open+0xb2>
    1072:	00 00       	nop
    1074:	88 e5       	ldi	r24, 0x58	; 88
    1076:	0e 94 2e 07 	call	0xe5c	; 0xe5c <start_write>
    107a:	88 23       	and	r24, r24
    107c:	09 f4       	brne	.+2      	; 0x1080 <m_wii_open+0xc0>
    107e:	87 c0       	rjmp	.+270    	; 0x118e <m_wii_open+0x1ce>
    1080:	87 e0       	ldi	r24, 0x07	; 7
    1082:	0e 94 05 07 	call	0xe0a	; 0xe0a <send_byte>
    1086:	88 23       	and	r24, r24
    1088:	09 f4       	brne	.+2      	; 0x108c <m_wii_open+0xcc>
    108a:	83 c0       	rjmp	.+262    	; 0x1192 <m_wii_open+0x1d2>
    108c:	80 e0       	ldi	r24, 0x00	; 0
    108e:	0e 94 05 07 	call	0xe0a	; 0xe0a <send_byte>
    1092:	88 23       	and	r24, r24
    1094:	09 f4       	brne	.+2      	; 0x1098 <m_wii_open+0xd8>
    1096:	7f c0       	rjmp	.+254    	; 0x1196 <m_wii_open+0x1d6>
    1098:	81 e4       	ldi	r24, 0x41	; 65
    109a:	0e 94 05 07 	call	0xe0a	; 0xe0a <send_byte>
    109e:	88 23       	and	r24, r24
    10a0:	09 f4       	brne	.+2      	; 0x10a4 <m_wii_open+0xe4>
    10a2:	7b c0       	rjmp	.+246    	; 0x119a <m_wii_open+0x1da>
    10a4:	0e 94 47 07 	call	0xe8e	; 0xe8e <end>
    10a8:	83 ec       	ldi	r24, 0xC3	; 195
    10aa:	99 e0       	ldi	r25, 0x09	; 9
    10ac:	01 97       	sbiw	r24, 0x01	; 1
    10ae:	f1 f7       	brne	.-4      	; 0x10ac <m_wii_open+0xec>
    10b0:	00 c0       	rjmp	.+0      	; 0x10b2 <m_wii_open+0xf2>
    10b2:	00 00       	nop
    10b4:	88 e5       	ldi	r24, 0x58	; 88
    10b6:	0e 94 2e 07 	call	0xe5c	; 0xe5c <start_write>
    10ba:	88 23       	and	r24, r24
    10bc:	09 f4       	brne	.+2      	; 0x10c0 <m_wii_open+0x100>
    10be:	6f c0       	rjmp	.+222    	; 0x119e <m_wii_open+0x1de>
    10c0:	8a e1       	ldi	r24, 0x1A	; 26
    10c2:	0e 94 05 07 	call	0xe0a	; 0xe0a <send_byte>
    10c6:	88 23       	and	r24, r24
    10c8:	09 f4       	brne	.+2      	; 0x10cc <m_wii_open+0x10c>
    10ca:	6b c0       	rjmp	.+214    	; 0x11a2 <m_wii_open+0x1e2>
    10cc:	80 e4       	ldi	r24, 0x40	; 64
    10ce:	0e 94 05 07 	call	0xe0a	; 0xe0a <send_byte>
    10d2:	88 23       	and	r24, r24
    10d4:	09 f4       	brne	.+2      	; 0x10d8 <m_wii_open+0x118>
    10d6:	67 c0       	rjmp	.+206    	; 0x11a6 <m_wii_open+0x1e6>
    10d8:	80 e0       	ldi	r24, 0x00	; 0
    10da:	0e 94 05 07 	call	0xe0a	; 0xe0a <send_byte>
    10de:	88 23       	and	r24, r24
    10e0:	09 f4       	brne	.+2      	; 0x10e4 <m_wii_open+0x124>
    10e2:	63 c0       	rjmp	.+198    	; 0x11aa <m_wii_open+0x1ea>
    10e4:	0e 94 47 07 	call	0xe8e	; 0xe8e <end>
    10e8:	83 ec       	ldi	r24, 0xC3	; 195
    10ea:	99 e0       	ldi	r25, 0x09	; 9
    10ec:	01 97       	sbiw	r24, 0x01	; 1
    10ee:	f1 f7       	brne	.-4      	; 0x10ec <m_wii_open+0x12c>
    10f0:	00 c0       	rjmp	.+0      	; 0x10f2 <m_wii_open+0x132>
    10f2:	00 00       	nop
    10f4:	88 e5       	ldi	r24, 0x58	; 88
    10f6:	0e 94 2e 07 	call	0xe5c	; 0xe5c <start_write>
    10fa:	88 23       	and	r24, r24
    10fc:	09 f4       	brne	.+2      	; 0x1100 <m_wii_open+0x140>
    10fe:	57 c0       	rjmp	.+174    	; 0x11ae <m_wii_open+0x1ee>
    1100:	83 e3       	ldi	r24, 0x33	; 51
    1102:	0e 94 05 07 	call	0xe0a	; 0xe0a <send_byte>
    1106:	88 23       	and	r24, r24
    1108:	09 f4       	brne	.+2      	; 0x110c <m_wii_open+0x14c>
    110a:	53 c0       	rjmp	.+166    	; 0x11b2 <m_wii_open+0x1f2>
    110c:	83 e0       	ldi	r24, 0x03	; 3
    110e:	0e 94 05 07 	call	0xe0a	; 0xe0a <send_byte>
    1112:	88 23       	and	r24, r24
    1114:	09 f4       	brne	.+2      	; 0x1118 <m_wii_open+0x158>
    1116:	4f c0       	rjmp	.+158    	; 0x11b6 <m_wii_open+0x1f6>
    1118:	0e 94 47 07 	call	0xe8e	; 0xe8e <end>
    111c:	83 ec       	ldi	r24, 0xC3	; 195
    111e:	99 e0       	ldi	r25, 0x09	; 9
    1120:	01 97       	sbiw	r24, 0x01	; 1
    1122:	f1 f7       	brne	.-4      	; 0x1120 <m_wii_open+0x160>
    1124:	00 c0       	rjmp	.+0      	; 0x1126 <m_wii_open+0x166>
    1126:	00 00       	nop
    1128:	88 e5       	ldi	r24, 0x58	; 88
    112a:	0e 94 2e 07 	call	0xe5c	; 0xe5c <start_write>
    112e:	88 23       	and	r24, r24
    1130:	09 f4       	brne	.+2      	; 0x1134 <m_wii_open+0x174>
    1132:	43 c0       	rjmp	.+134    	; 0x11ba <m_wii_open+0x1fa>
    1134:	80 e3       	ldi	r24, 0x30	; 48
    1136:	0e 94 05 07 	call	0xe0a	; 0xe0a <send_byte>
    113a:	88 23       	and	r24, r24
    113c:	09 f4       	brne	.+2      	; 0x1140 <m_wii_open+0x180>
    113e:	3f c0       	rjmp	.+126    	; 0x11be <m_wii_open+0x1fe>
    1140:	88 e0       	ldi	r24, 0x08	; 8
    1142:	0e 94 05 07 	call	0xe0a	; 0xe0a <send_byte>
    1146:	88 23       	and	r24, r24
    1148:	e1 f1       	breq	.+120    	; 0x11c2 <m_wii_open+0x202>
    114a:	0e 94 47 07 	call	0xe8e	; 0xe8e <end>
    114e:	83 ec       	ldi	r24, 0xC3	; 195
    1150:	99 e0       	ldi	r25, 0x09	; 9
    1152:	01 97       	sbiw	r24, 0x01	; 1
    1154:	f1 f7       	brne	.-4      	; 0x1152 <m_wii_open+0x192>
    1156:	00 c0       	rjmp	.+0      	; 0x1158 <m_wii_open+0x198>
    1158:	00 00       	nop
    115a:	81 e0       	ldi	r24, 0x01	; 1
    115c:	08 95       	ret
    115e:	80 e0       	ldi	r24, 0x00	; 0
    1160:	08 95       	ret
    1162:	80 e0       	ldi	r24, 0x00	; 0
    1164:	08 95       	ret
    1166:	80 e0       	ldi	r24, 0x00	; 0
    1168:	08 95       	ret
    116a:	80 e0       	ldi	r24, 0x00	; 0
    116c:	08 95       	ret
    116e:	80 e0       	ldi	r24, 0x00	; 0
    1170:	08 95       	ret
    1172:	80 e0       	ldi	r24, 0x00	; 0
    1174:	08 95       	ret
    1176:	80 e0       	ldi	r24, 0x00	; 0
    1178:	08 95       	ret
    117a:	80 e0       	ldi	r24, 0x00	; 0
    117c:	08 95       	ret
    117e:	80 e0       	ldi	r24, 0x00	; 0
    1180:	08 95       	ret
    1182:	80 e0       	ldi	r24, 0x00	; 0
    1184:	08 95       	ret
    1186:	80 e0       	ldi	r24, 0x00	; 0
    1188:	08 95       	ret
    118a:	80 e0       	ldi	r24, 0x00	; 0
    118c:	08 95       	ret
    118e:	80 e0       	ldi	r24, 0x00	; 0
    1190:	08 95       	ret
    1192:	80 e0       	ldi	r24, 0x00	; 0
    1194:	08 95       	ret
    1196:	80 e0       	ldi	r24, 0x00	; 0
    1198:	08 95       	ret
    119a:	80 e0       	ldi	r24, 0x00	; 0
    119c:	08 95       	ret
    119e:	80 e0       	ldi	r24, 0x00	; 0
    11a0:	08 95       	ret
    11a2:	80 e0       	ldi	r24, 0x00	; 0
    11a4:	08 95       	ret
    11a6:	80 e0       	ldi	r24, 0x00	; 0
    11a8:	08 95       	ret
    11aa:	80 e0       	ldi	r24, 0x00	; 0
    11ac:	08 95       	ret
    11ae:	80 e0       	ldi	r24, 0x00	; 0
    11b0:	08 95       	ret
    11b2:	80 e0       	ldi	r24, 0x00	; 0
    11b4:	08 95       	ret
    11b6:	80 e0       	ldi	r24, 0x00	; 0
    11b8:	08 95       	ret
    11ba:	80 e0       	ldi	r24, 0x00	; 0
    11bc:	08 95       	ret
    11be:	80 e0       	ldi	r24, 0x00	; 0
    11c0:	08 95       	ret
    11c2:	80 e0       	ldi	r24, 0x00	; 0
    11c4:	08 95       	ret

000011c6 <rotate>:
#include "m_wireless_variables.h" //define CHANNEL, ADDRESS, PACKET_LENGTH in this header (# of variables to send = (PACKET_LENGTH-1))
#include "m_usb.h"
#include "m_loc.h"

void rotate(int dir) {
	OCR1B = OCR1A;
    11c6:	20 91 88 00 	lds	r18, 0x0088
    11ca:	30 91 89 00 	lds	r19, 0x0089
    11ce:	30 93 8b 00 	sts	0x008B, r19
    11d2:	20 93 8a 00 	sts	0x008A, r18
	OCR3A = ICR3;
    11d6:	20 91 96 00 	lds	r18, 0x0096
    11da:	30 91 97 00 	lds	r19, 0x0097
    11de:	30 93 99 00 	sts	0x0099, r19
    11e2:	20 93 98 00 	sts	0x0098, r18
	if (dir == RIGHT) {
    11e6:	00 97       	sbiw	r24, 0x00	; 0
    11e8:	19 f4       	brne	.+6      	; 0x11f0 <rotate+0x2a>
		set(PORTB,2);
    11ea:	2a 9a       	sbi	0x05, 2	; 5
		clear(PORTB,3);
    11ec:	2b 98       	cbi	0x05, 3	; 5
    11ee:	08 95       	ret
	}
	else if (dir == LEFT) {
    11f0:	01 97       	sbiw	r24, 0x01	; 1
    11f2:	11 f4       	brne	.+4      	; 0x11f8 <rotate+0x32>
		clear(PORTB,2);
    11f4:	2a 98       	cbi	0x05, 2	; 5
		set(PORTB,3);
    11f6:	2b 9a       	sbi	0x05, 3	; 5
    11f8:	08 95       	ret

000011fa <MATLAB_test>:
	set(DDRC,6);
	set(DDRB,2);
	set(DDRB,3);
}

int MATLAB_test(int count, ...) {
    11fa:	9f 92       	push	r9
    11fc:	af 92       	push	r10
    11fe:	bf 92       	push	r11
    1200:	cf 92       	push	r12
    1202:	df 92       	push	r13
    1204:	ef 92       	push	r14
    1206:	ff 92       	push	r15
    1208:	0f 93       	push	r16
    120a:	1f 93       	push	r17
    120c:	cf 93       	push	r28
    120e:	df 93       	push	r29
    1210:	cd b7       	in	r28, 0x3d	; 61
    1212:	de b7       	in	r29, 0x3e	; 62
    1214:	fe 01       	movw	r30, r28
    1216:	3e 96       	adiw	r30, 0x0e	; 14
    1218:	01 91       	ld	r16, Z+
    121a:	11 91       	ld	r17, Z+
				}
		

				m_usb_tx_char('\n');  //MATLAB serial command reads 1 line at a time
			}
}
    121c:	cd b6       	in	r12, 0x3d	; 61
    121e:	de b6       	in	r13, 0x3e	; 62
}

int MATLAB_test(int count, ...) {
	//see wikipedia article on variadic functions******
			va_list ap;
			int array[count];
    1220:	78 01       	movw	r14, r16
    1222:	ee 0c       	add	r14, r14
    1224:	ff 1c       	adc	r15, r15
    1226:	8d b7       	in	r24, 0x3d	; 61
    1228:	9e b7       	in	r25, 0x3e	; 62
    122a:	8e 19       	sub	r24, r14
    122c:	9f 09       	sbc	r25, r15
    122e:	0f b6       	in	r0, 0x3f	; 63
    1230:	f8 94       	cli
    1232:	9e bf       	out	0x3e, r25	; 62
    1234:	0f be       	out	0x3f, r0	; 63
    1236:	8d bf       	out	0x3d, r24	; 61
    1238:	01 96       	adiw	r24, 0x01	; 1
    123a:	a8 2e       	mov	r10, r24
    123c:	b9 2e       	mov	r11, r25
			va_start(ap, count);
			for (int j= 0; j < count; j++) {
    123e:	10 16       	cp	r1, r16
    1240:	11 06       	cpc	r1, r17
    1242:	64 f4       	brge	.+24     	; 0x125c <MATLAB_test+0x62>
    1244:	aa 2d       	mov	r26, r10
    1246:	bb 2d       	mov	r27, r11
	set(DDRC,6);
	set(DDRB,2);
	set(DDRB,3);
}

int MATLAB_test(int count, ...) {
    1248:	97 01       	movw	r18, r14
    124a:	2e 0f       	add	r18, r30
    124c:	3f 1f       	adc	r19, r31
	//see wikipedia article on variadic functions******
			va_list ap;
			int array[count];
			va_start(ap, count);
			for (int j= 0; j < count; j++) {
				array[j] = va_arg(ap, int);
    124e:	81 91       	ld	r24, Z+
    1250:	91 91       	ld	r25, Z+
    1252:	8d 93       	st	X+, r24
    1254:	9d 93       	st	X+, r25
int MATLAB_test(int count, ...) {
	//see wikipedia article on variadic functions******
			va_list ap;
			int array[count];
			va_start(ap, count);
			for (int j= 0; j < count; j++) {
    1256:	e2 17       	cp	r30, r18
    1258:	f3 07       	cpc	r31, r19
    125a:	c9 f7       	brne	.-14     	; 0x124e <MATLAB_test+0x54>
				array[j] = va_arg(ap, int);
			}
			va_end(ap);
		//*************
			char rx_buffer;
			while(!m_usb_rx_available());  	//wait for an indication from the computer
    125c:	0e 94 79 04 	call	0x8f2	; 0x8f2 <m_usb_rx_available>
    1260:	88 23       	and	r24, r24
    1262:	e1 f3       	breq	.-8      	; 0x125c <MATLAB_test+0x62>
			rx_buffer = m_usb_rx_char();  	//grab the computer packet
    1264:	0e 94 5b 04 	call	0x8b6	; 0x8b6 <m_usb_rx_char>
    1268:	98 2e       	mov	r9, r24

			m_usb_rx_flush();  				//clear buffer
    126a:	0e 94 88 04 	call	0x910	; 0x910 <m_usb_rx_flush>

			if(rx_buffer == 1) {  			//computer wants ir buffer
    126e:	91 e0       	ldi	r25, 0x01	; 1
    1270:	99 12       	cpse	r9, r25
    1272:	16 c0       	rjmp	.+44     	; 0x12a0 <MATLAB_test+0xa6>
				//write ir buffer as concatenated hex:  i.e. f0f1f4f5

				for (int i = 0; i < count; i++) {
    1274:	10 16       	cp	r1, r16
    1276:	11 06       	cpc	r1, r17
    1278:	84 f4       	brge	.+32     	; 0x129a <MATLAB_test+0xa0>
    127a:	0a 2d       	mov	r16, r10
    127c:	1b 2d       	mov	r17, r11
	set(DDRC,6);
	set(DDRB,2);
	set(DDRB,3);
}

int MATLAB_test(int count, ...) {
    127e:	e0 0e       	add	r14, r16
    1280:	f1 1e       	adc	r15, r17

			if(rx_buffer == 1) {  			//computer wants ir buffer
				//write ir buffer as concatenated hex:  i.e. f0f1f4f5

				for (int i = 0; i < count; i++) {
				m_usb_tx_uint(array[i]);
    1282:	f8 01       	movw	r30, r16
    1284:	81 91       	ld	r24, Z+
    1286:	91 91       	ld	r25, Z+
    1288:	8f 01       	movw	r16, r30
    128a:	0e 94 c0 06 	call	0xd80	; 0xd80 <m_usb_tx_uint>
				m_usb_tx_char('\t');
    128e:	89 e0       	ldi	r24, 0x09	; 9
    1290:	0e 94 9e 04 	call	0x93c	; 0x93c <m_usb_tx_char>
			m_usb_rx_flush();  				//clear buffer

			if(rx_buffer == 1) {  			//computer wants ir buffer
				//write ir buffer as concatenated hex:  i.e. f0f1f4f5

				for (int i = 0; i < count; i++) {
    1294:	0e 15       	cp	r16, r14
    1296:	1f 05       	cpc	r17, r15
    1298:	a1 f7       	brne	.-24     	; 0x1282 <MATLAB_test+0x88>
				m_usb_tx_uint(array[i]);
				m_usb_tx_char('\t');
				}
		

				m_usb_tx_char('\n');  //MATLAB serial command reads 1 line at a time
    129a:	8a e0       	ldi	r24, 0x0A	; 10
    129c:	0e 94 9e 04 	call	0x93c	; 0x93c <m_usb_tx_char>
			}
}
    12a0:	0f b6       	in	r0, 0x3f	; 63
    12a2:	f8 94       	cli
    12a4:	de be       	out	0x3e, r13	; 62
    12a6:	0f be       	out	0x3f, r0	; 63
    12a8:	cd be       	out	0x3d, r12	; 61
    12aa:	df 91       	pop	r29
    12ac:	cf 91       	pop	r28
    12ae:	1f 91       	pop	r17
    12b0:	0f 91       	pop	r16
    12b2:	ff 90       	pop	r15
    12b4:	ef 90       	pop	r14
    12b6:	df 90       	pop	r13
    12b8:	cf 90       	pop	r12
    12ba:	bf 90       	pop	r11
    12bc:	af 90       	pop	r10
    12be:	9f 90       	pop	r9
    12c0:	08 95       	ret

000012c2 <main>:
	
	m_rf_open(CHANNEL, ADDRESS, PACKET_LENGTH);
	int counter = 0;
	/*/
	
	m_num_init();
    12c2:	0e 94 db 03 	call	0x7b6	; 0x7b6 <m_num_init>
	int flag;
	
	m_clockdivide(0);
    12c6:	e1 e6       	ldi	r30, 0x61	; 97
    12c8:	f0 e0       	ldi	r31, 0x00	; 0
    12ca:	80 e8       	ldi	r24, 0x80	; 128
    12cc:	80 83       	st	Z, r24
    12ce:	10 82       	st	Z, r1
	
	//TIMER 0: For Controlling the solenoid
	
	set(TCCR0B, WGM02);
    12d0:	85 b5       	in	r24, 0x25	; 37
    12d2:	88 60       	ori	r24, 0x08	; 8
    12d4:	85 bd       	out	0x25, r24	; 37
	set(TCCR0A, WGM01);
    12d6:	84 b5       	in	r24, 0x24	; 36
    12d8:	82 60       	ori	r24, 0x02	; 2
    12da:	84 bd       	out	0x24, r24	; 36
	set(TCCR0A, WGM01);
    12dc:	84 b5       	in	r24, 0x24	; 36
    12de:	82 60       	ori	r24, 0x02	; 2
    12e0:	84 bd       	out	0x24, r24	; 36
	
	set(TCCR0A, COM0B1);
    12e2:	84 b5       	in	r24, 0x24	; 36
    12e4:	80 62       	ori	r24, 0x20	; 32
    12e6:	84 bd       	out	0x24, r24	; 36
	clear(TCCR0A, COM0B0);
    12e8:	84 b5       	in	r24, 0x24	; 36
    12ea:	8f 7e       	andi	r24, 0xEF	; 239
    12ec:	84 bd       	out	0x24, r24	; 36
	
	set(TCCR0B, CS02);
    12ee:	85 b5       	in	r24, 0x25	; 37
    12f0:	84 60       	ori	r24, 0x04	; 4
    12f2:	85 bd       	out	0x25, r24	; 37
	set(TCCR0B, CS01);
    12f4:	85 b5       	in	r24, 0x25	; 37
    12f6:	82 60       	ori	r24, 0x02	; 2
    12f8:	85 bd       	out	0x25, r24	; 37
	set(TCCR0B, CS00);
    12fa:	85 b5       	in	r24, 0x25	; 37
    12fc:	81 60       	ori	r24, 0x01	; 1
    12fe:	85 bd       	out	0x25, r24	; 37
	
	set(DDRB,7);
    1300:	27 9a       	sbi	0x04, 7	; 4
	
	OCR0A = 0xFF;
    1302:	8f ef       	ldi	r24, 0xFF	; 255
    1304:	87 bd       	out	0x27, r24	; 39
	OCR0B = 0;
    1306:	18 bc       	out	0x28, r1	; 40
	
	//TIMER 1: For Controlling the left wheel
	
	set(TCCR1B, WGM13);
    1308:	e1 e8       	ldi	r30, 0x81	; 129
    130a:	f0 e0       	ldi	r31, 0x00	; 0
    130c:	80 81       	ld	r24, Z
    130e:	80 61       	ori	r24, 0x10	; 16
    1310:	80 83       	st	Z, r24
	set(TCCR1B, WGM12);
    1312:	80 81       	ld	r24, Z
    1314:	88 60       	ori	r24, 0x08	; 8
    1316:	80 83       	st	Z, r24
	set(TCCR1A, WGM11);
    1318:	a0 e8       	ldi	r26, 0x80	; 128
    131a:	b0 e0       	ldi	r27, 0x00	; 0
    131c:	8c 91       	ld	r24, X
    131e:	82 60       	ori	r24, 0x02	; 2
    1320:	8c 93       	st	X, r24
	set(TCCR1A, WGM10);
    1322:	8c 91       	ld	r24, X
    1324:	81 60       	ori	r24, 0x01	; 1
    1326:	8c 93       	st	X, r24
	
	set(TCCR1A, COM1B1);
    1328:	8c 91       	ld	r24, X
    132a:	80 62       	ori	r24, 0x20	; 32
    132c:	8c 93       	st	X, r24
	clear(TCCR1A, COM1B0);
    132e:	8c 91       	ld	r24, X
    1330:	8f 7e       	andi	r24, 0xEF	; 239
    1332:	8c 93       	st	X, r24
	
	clear(TCCR1B, CS12);
    1334:	80 81       	ld	r24, Z
    1336:	8b 7f       	andi	r24, 0xFB	; 251
    1338:	80 83       	st	Z, r24
	clear(TCCR1B, CS11);
    133a:	80 81       	ld	r24, Z
    133c:	8d 7f       	andi	r24, 0xFD	; 253
    133e:	80 83       	st	Z, r24
	set(TCCR1B, CS10);
    1340:	80 81       	ld	r24, Z
    1342:	81 60       	ori	r24, 0x01	; 1
    1344:	80 83       	st	Z, r24
	
	set(DDRB,6);
    1346:	26 9a       	sbi	0x04, 6	; 4
	
	OCR1A = 0xFFFF;
    1348:	8f ef       	ldi	r24, 0xFF	; 255
    134a:	9f ef       	ldi	r25, 0xFF	; 255
    134c:	90 93 89 00 	sts	0x0089, r25
    1350:	80 93 88 00 	sts	0x0088, r24
	OCR1B = 0;
    1354:	10 92 8b 00 	sts	0x008B, r1
    1358:	10 92 8a 00 	sts	0x008A, r1
	
	//TIMER 3: For Controlling the right wheel
	//up to ICR3, clear at OCR3A & set at rollover
	
	set(TCCR3B, WGM33);
    135c:	e1 e9       	ldi	r30, 0x91	; 145
    135e:	f0 e0       	ldi	r31, 0x00	; 0
    1360:	20 81       	ld	r18, Z
    1362:	20 61       	ori	r18, 0x10	; 16
    1364:	20 83       	st	Z, r18
	set(TCCR3B, WGM32);
    1366:	20 81       	ld	r18, Z
    1368:	28 60       	ori	r18, 0x08	; 8
    136a:	20 83       	st	Z, r18
	set(TCCR3A, WGM31);
    136c:	a0 e9       	ldi	r26, 0x90	; 144
    136e:	b0 e0       	ldi	r27, 0x00	; 0
    1370:	2c 91       	ld	r18, X
    1372:	22 60       	ori	r18, 0x02	; 2
    1374:	2c 93       	st	X, r18
	clear(TCCR3A, WGM30);
    1376:	2c 91       	ld	r18, X
    1378:	2e 7f       	andi	r18, 0xFE	; 254
    137a:	2c 93       	st	X, r18
	
	set(TCCR3A, COM3A1); 
    137c:	2c 91       	ld	r18, X
    137e:	20 68       	ori	r18, 0x80	; 128
    1380:	2c 93       	st	X, r18
	clear(TCCR3A, COM3A0); 
    1382:	2c 91       	ld	r18, X
    1384:	2f 7b       	andi	r18, 0xBF	; 191
    1386:	2c 93       	st	X, r18
	
	clear(TCCR3B, CS32);
    1388:	20 81       	ld	r18, Z
    138a:	2b 7f       	andi	r18, 0xFB	; 251
    138c:	20 83       	st	Z, r18
	clear(TCCR3B, CS31);
    138e:	20 81       	ld	r18, Z
    1390:	2d 7f       	andi	r18, 0xFD	; 253
    1392:	20 83       	st	Z, r18
	set(TCCR3B, CS30);
    1394:	20 81       	ld	r18, Z
    1396:	21 60       	ori	r18, 0x01	; 1
    1398:	20 83       	st	Z, r18
	
	ICR3 = 0xFFFF;
    139a:	90 93 97 00 	sts	0x0097, r25
    139e:	80 93 96 00 	sts	0x0096, r24
	OCR3A = 0;
    13a2:	10 92 99 00 	sts	0x0099, r1
    13a6:	10 92 98 00 	sts	0x0098, r1
	
	//Pin for controlling solenoid pulse
	set(DDRB,7);
    13aa:	27 9a       	sbi	0x04, 7	; 4
	
	//Pins for controlling speed of left and right wheel
	set(DDRB,6);
    13ac:	26 9a       	sbi	0x04, 6	; 4
	set(DDRC,6);
    13ae:	3e 9a       	sbi	0x07, 6	; 7
	
	//Pins for determining direction of wheels
	clear(DDRB,2);
    13b0:	22 98       	cbi	0x04, 2	; 4
	clear(DDRB,3);
    13b2:	23 98       	cbi	0x04, 3	; 4
	
	//ADC's
	sei();					//Set up interrupts
    13b4:	78 94       	sei
	set(ADCSRA,ADIE);
    13b6:	ea e7       	ldi	r30, 0x7A	; 122
    13b8:	f0 e0       	ldi	r31, 0x00	; 0
    13ba:	80 81       	ld	r24, Z
    13bc:	88 60       	ori	r24, 0x08	; 8
    13be:	80 83       	st	Z, r24
	
	clear(ADMUX, REFS1);	//Voltage reference is AR pin (5V)
    13c0:	ac e7       	ldi	r26, 0x7C	; 124
    13c2:	b0 e0       	ldi	r27, 0x00	; 0
    13c4:	8c 91       	ld	r24, X
    13c6:	8f 77       	andi	r24, 0x7F	; 127
    13c8:	8c 93       	st	X, r24
	clear(ADMUX, REFS0);	//^
    13ca:	8c 91       	ld	r24, X
    13cc:	8f 7b       	andi	r24, 0xBF	; 191
    13ce:	8c 93       	st	X, r24
	
	set(ADCSRA, ADPS2);	//Set scale to /128
    13d0:	80 81       	ld	r24, Z
    13d2:	84 60       	ori	r24, 0x04	; 4
    13d4:	80 83       	st	Z, r24
	set(ADCSRA, ADPS1);	//^
    13d6:	80 81       	ld	r24, Z
    13d8:	82 60       	ori	r24, 0x02	; 2
    13da:	80 83       	st	Z, r24
	set(ADCSRA, ADPS0);	//^
    13dc:	80 81       	ld	r24, Z
    13de:	81 60       	ori	r24, 0x01	; 1
    13e0:	80 83       	st	Z, r24
	
	set(DIDR0, ADC0D);	//Disable digital input for F0
    13e2:	ae e7       	ldi	r26, 0x7E	; 126
    13e4:	b0 e0       	ldi	r27, 0x00	; 0
    13e6:	8c 91       	ld	r24, X
    13e8:	81 60       	ori	r24, 0x01	; 1
    13ea:	8c 93       	st	X, r24
	set(DIDR0, ADC1D);	//Disable digital input for F1
    13ec:	8c 91       	ld	r24, X
    13ee:	82 60       	ori	r24, 0x02	; 2
    13f0:	8c 93       	st	X, r24
	set(DIDR0, ADC4D);	//Disable digital input for F4
    13f2:	8c 91       	ld	r24, X
    13f4:	80 61       	ori	r24, 0x10	; 16
    13f6:	8c 93       	st	X, r24
	set(DIDR0, ADC5D);	//Disable digital input for F5
    13f8:	8c 91       	ld	r24, X
    13fa:	80 62       	ori	r24, 0x20	; 32
    13fc:	8c 93       	st	X, r24
	set(DIDR0, ADC6D);	//Disable digital input for F6
    13fe:	8c 91       	ld	r24, X
    1400:	80 64       	ori	r24, 0x40	; 64
    1402:	8c 93       	st	X, r24
	set(DIDR2, ADC8D);	//Disable digital input for D4
    1404:	ad e7       	ldi	r26, 0x7D	; 125
    1406:	b0 e0       	ldi	r27, 0x00	; 0
    1408:	8c 91       	ld	r24, X
    140a:	81 60       	ori	r24, 0x01	; 1
    140c:	8c 93       	st	X, r24
	set(DIDR2, ADC9D);	//Disable digital input for D6
    140e:	8c 91       	ld	r24, X
    1410:	82 60       	ori	r24, 0x02	; 2
    1412:	8c 93       	st	X, r24
		
	set(ADCSRA, ADATE);	//Set trigger to free-running mode
    1414:	80 81       	ld	r24, Z
    1416:	80 62       	ori	r24, 0x20	; 32
    1418:	80 83       	st	Z, r24
	
	set(ADCSRA, ADIF);	//Enable reading results
    141a:	80 81       	ld	r24, Z
    141c:	80 61       	ori	r24, 0x10	; 16
    141e:	80 83       	st	Z, r24
	
	//Limit Switch stuffs
	clear(DDRB,0); //set to input, RIGHT LIMIT SWITCH
    1420:	20 98       	cbi	0x04, 0	; 4
	clear(DDRB,1); //set to input, LEFT LIMIT SWITCH
    1422:	21 98       	cbi	0x04, 1	; 4
	
	clear(PORTB,0); //disable internal pull up resistor
    1424:	28 98       	cbi	0x05, 0	; 5
	clear(PORTB,1); //disable internal pull up resistor
    1426:	29 98       	cbi	0x05, 1	; 5
	int state; // state variable
	state = -3; //set state
	long count = 0;
	
	char yes;
	m_usb_init();
    1428:	0e 94 42 04 	call	0x884	; 0x884 <m_usb_init>
	m_bus_init();
    142c:	0e 94 cf 00 	call	0x19e	; 0x19e <m_bus_init>
	m_wii_open();
    1430:	0e 94 e0 07 	call	0xfc0	; 0xfc0 <m_wii_open>
	local_init();
    1434:	0e 94 d1 03 	call	0x7a2	; 0x7a2 <local_init>
		//constant localization
		yes = m_wii_open();
		m_wii_read(blobs);
		
					if (yes) {
						MATLAB_test(13, 1, (int) blobs[0], (int)blobs[1], (int)blobs[2], (int)blobs[3], (int)blobs[4], (int)blobs[5], (int)blobs[6], (int)blobs[7], (int)blobs[8], (int)blobs[9], (int)blobs[10], (int)blobs[11]);
    1438:	0f 2e       	mov	r0, r31
    143a:	fe e4       	ldi	r31, 0x4E	; 78
    143c:	af 2e       	mov	r10, r31
    143e:	f1 e0       	ldi	r31, 0x01	; 1
    1440:	bf 2e       	mov	r11, r31
    1442:	f0 2d       	mov	r31, r0
    1444:	0f 2e       	mov	r0, r31
    1446:	fc e4       	ldi	r31, 0x4C	; 76
    1448:	cf 2e       	mov	r12, r31
    144a:	f1 e0       	ldi	r31, 0x01	; 1
    144c:	df 2e       	mov	r13, r31
    144e:	f0 2d       	mov	r31, r0
    1450:	08 e4       	ldi	r16, 0x48	; 72
    1452:	11 e0       	ldi	r17, 0x01	; 1
    1454:	c6 e4       	ldi	r28, 0x46	; 70
    1456:	d1 e0       	ldi	r29, 0x01	; 1
    1458:	0f 2e       	mov	r0, r31
    145a:	f4 e4       	ldi	r31, 0x44	; 68
    145c:	8f 2e       	mov	r8, r31
    145e:	f1 e0       	ldi	r31, 0x01	; 1
    1460:	9f 2e       	mov	r9, r31
    1462:	f0 2d       	mov	r31, r0
    1464:	0f 2e       	mov	r0, r31
    1466:	f2 e4       	ldi	r31, 0x42	; 66
    1468:	6f 2e       	mov	r6, r31
    146a:	f1 e0       	ldi	r31, 0x01	; 1
    146c:	7f 2e       	mov	r7, r31
    146e:	f0 2d       	mov	r31, r0
    1470:	0f 2e       	mov	r0, r31
    1472:	f0 e4       	ldi	r31, 0x40	; 64
    1474:	4f 2e       	mov	r4, r31
    1476:	f1 e0       	ldi	r31, 0x01	; 1
    1478:	5f 2e       	mov	r5, r31
    147a:	f0 2d       	mov	r31, r0
    147c:	0f 2e       	mov	r0, r31
    147e:	fe e3       	ldi	r31, 0x3E	; 62
    1480:	2f 2e       	mov	r2, r31
    1482:	f1 e0       	ldi	r31, 0x01	; 1
    1484:	3f 2e       	mov	r3, r31
    1486:	f0 2d       	mov	r31, r0
        
        counter++;
		*/
		
		//constant localization
		yes = m_wii_open();
    1488:	0e 94 e0 07 	call	0xfc0	; 0xfc0 <m_wii_open>
    148c:	f8 2e       	mov	r15, r24
		m_wii_read(blobs);
    148e:	88 e3       	ldi	r24, 0x38	; 56
    1490:	91 e0       	ldi	r25, 0x01	; 1
    1492:	0e 94 4b 07 	call	0xe96	; 0xe96 <m_wii_read>
		
					if (yes) {
    1496:	ff 20       	and	r15, r15
    1498:	09 f4       	brne	.+2      	; 0x149c <main+0x1da>
    149a:	53 c0       	rjmp	.+166    	; 0x1542 <main+0x280>
						MATLAB_test(13, 1, (int) blobs[0], (int)blobs[1], (int)blobs[2], (int)blobs[3], (int)blobs[4], (int)blobs[5], (int)blobs[6], (int)blobs[7], (int)blobs[8], (int)blobs[9], (int)blobs[10], (int)blobs[11]);
    149c:	f5 01       	movw	r30, r10
    149e:	81 81       	ldd	r24, Z+1	; 0x01
    14a0:	8f 93       	push	r24
    14a2:	80 81       	ld	r24, Z
    14a4:	8f 93       	push	r24
    14a6:	f6 01       	movw	r30, r12
    14a8:	81 81       	ldd	r24, Z+1	; 0x01
    14aa:	8f 93       	push	r24
    14ac:	80 81       	ld	r24, Z
    14ae:	8f 93       	push	r24
    14b0:	80 91 4b 01 	lds	r24, 0x014B
    14b4:	8f 93       	push	r24
    14b6:	ea e4       	ldi	r30, 0x4A	; 74
    14b8:	f1 e0       	ldi	r31, 0x01	; 1
    14ba:	80 81       	ld	r24, Z
    14bc:	8f 93       	push	r24
    14be:	f8 01       	movw	r30, r16
    14c0:	81 81       	ldd	r24, Z+1	; 0x01
    14c2:	8f 93       	push	r24
    14c4:	80 81       	ld	r24, Z
    14c6:	8f 93       	push	r24
    14c8:	89 81       	ldd	r24, Y+1	; 0x01
    14ca:	8f 93       	push	r24
    14cc:	88 81       	ld	r24, Y
    14ce:	8f 93       	push	r24
    14d0:	f4 01       	movw	r30, r8
    14d2:	81 81       	ldd	r24, Z+1	; 0x01
    14d4:	8f 93       	push	r24
    14d6:	80 81       	ld	r24, Z
    14d8:	8f 93       	push	r24
    14da:	f3 01       	movw	r30, r6
    14dc:	81 81       	ldd	r24, Z+1	; 0x01
    14de:	8f 93       	push	r24
    14e0:	80 81       	ld	r24, Z
    14e2:	8f 93       	push	r24
    14e4:	f2 01       	movw	r30, r4
    14e6:	81 81       	ldd	r24, Z+1	; 0x01
    14e8:	8f 93       	push	r24
    14ea:	80 81       	ld	r24, Z
    14ec:	8f 93       	push	r24
    14ee:	f1 01       	movw	r30, r2
    14f0:	81 81       	ldd	r24, Z+1	; 0x01
    14f2:	8f 93       	push	r24
    14f4:	80 81       	ld	r24, Z
    14f6:	8f 93       	push	r24
    14f8:	80 91 3d 01 	lds	r24, 0x013D
    14fc:	8f 93       	push	r24
    14fe:	ec e3       	ldi	r30, 0x3C	; 60
    1500:	f1 e0       	ldi	r31, 0x01	; 1
    1502:	80 81       	ld	r24, Z
    1504:	8f 93       	push	r24
    1506:	80 91 3b 01 	lds	r24, 0x013B
    150a:	8f 93       	push	r24
    150c:	ea e3       	ldi	r30, 0x3A	; 58
    150e:	f1 e0       	ldi	r31, 0x01	; 1
    1510:	80 81       	ld	r24, Z
    1512:	8f 93       	push	r24
    1514:	e8 e3       	ldi	r30, 0x38	; 56
    1516:	f1 e0       	ldi	r31, 0x01	; 1
    1518:	81 81       	ldd	r24, Z+1	; 0x01
    151a:	8f 93       	push	r24
    151c:	80 81       	ld	r24, Z
    151e:	8f 93       	push	r24
    1520:	1f 92       	push	r1
    1522:	f1 e0       	ldi	r31, 0x01	; 1
    1524:	ff 93       	push	r31
    1526:	1f 92       	push	r1
    1528:	8d e0       	ldi	r24, 0x0D	; 13
    152a:	8f 93       	push	r24
    152c:	0e 94 fd 08 	call	0x11fa	; 0x11fa <MATLAB_test>
    1530:	ed b7       	in	r30, 0x3d	; 61
    1532:	fe b7       	in	r31, 0x3e	; 62
    1534:	7c 96       	adiw	r30, 0x1c	; 28
    1536:	0f b6       	in	r0, 0x3f	; 63
    1538:	f8 94       	cli
    153a:	fe bf       	out	0x3e, r31	; 62
    153c:	0f be       	out	0x3f, r0	; 63
    153e:	ed bf       	out	0x3d, r30	; 61
    1540:	02 c0       	rjmp	.+4      	; 0x1546 <main+0x284>
					}
					
					else {m_red(ON);}
    1542:	6e 9a       	sbi	0x0d, 6	; 13
    1544:	76 98       	cbi	0x0e, 6	; 14
				shoot();
				state = -3;
			break;
			
			case -3: //test Limit switches
				if (check(PINB,1)) {
    1546:	19 9b       	sbis	0x03, 1	; 3
    1548:	05 c0       	rjmp	.+10     	; 0x1554 <main+0x292>
					
					rotate(LEFT);
    154a:	81 e0       	ldi	r24, 0x01	; 1
    154c:	90 e0       	ldi	r25, 0x00	; 0
    154e:	0e 94 e3 08 	call	0x11c6	; 0x11c6 <rotate>
    1552:	9a cf       	rjmp	.-204    	; 0x1488 <main+0x1c6>
				//else if (!check(PINB,1)) {
					//OCR1B = 0;
					//OCR3A = 0;
				//}
				
				else if (check(PINB,0)) {
    1554:	18 9b       	sbis	0x03, 0	; 3
    1556:	05 c0       	rjmp	.+10     	; 0x1562 <main+0x2a0>
					
					rotate(RIGHT);
    1558:	80 e0       	ldi	r24, 0x00	; 0
    155a:	90 e0       	ldi	r25, 0x00	; 0
    155c:	0e 94 e3 08 	call	0x11c6	; 0x11c6 <rotate>
    1560:	93 cf       	rjmp	.-218    	; 0x1488 <main+0x1c6>
				}
				
				else {
					OCR1B = 0;
    1562:	10 92 8b 00 	sts	0x008B, r1
    1566:	10 92 8a 00 	sts	0x008A, r1
					OCR3A = 0;
    156a:	10 92 99 00 	sts	0x0099, r1
    156e:	10 92 98 00 	sts	0x0098, r1
    1572:	8a cf       	rjmp	.-236    	; 0x1488 <main+0x1c6>

00001574 <__vector_29>:
		}
        
    }
}

ISR(ADC_vect) {
    1574:	1f 92       	push	r1
    1576:	0f 92       	push	r0
    1578:	0f b6       	in	r0, 0x3f	; 63
    157a:	0f 92       	push	r0
    157c:	11 24       	eor	r1, r1
    157e:	2f 93       	push	r18
    1580:	8f 93       	push	r24
    1582:	9f 93       	push	r25
	if (ADC  > 500) {
    1584:	80 91 78 00 	lds	r24, 0x0078
    1588:	90 91 79 00 	lds	r25, 0x0079
    158c:	85 3f       	cpi	r24, 0xF5	; 245
    158e:	91 40       	sbci	r25, 0x01	; 1
    1590:	18 f0       	brcs	.+6      	; 0x1598 <__vector_29+0x24>
		m_green(ON);
    1592:	6a 9a       	sbi	0x0d, 2	; 13
    1594:	72 98       	cbi	0x0e, 2	; 14
    1596:	02 c0       	rjmp	.+4      	; 0x159c <__vector_29+0x28>
	}
	
	else {
		m_green(OFF);
    1598:	6a 9a       	sbi	0x0d, 2	; 13
    159a:	72 9a       	sbi	0x0e, 2	; 14
	}
    159c:	9f 91       	pop	r25
    159e:	8f 91       	pop	r24
    15a0:	2f 91       	pop	r18
    15a2:	0f 90       	pop	r0
    15a4:	0f be       	out	0x3f, r0	; 63
    15a6:	0f 90       	pop	r0
    15a8:	1f 90       	pop	r1
    15aa:	18 95       	reti

000015ac <__floatunsisf>:
    15ac:	e8 94       	clt
    15ae:	09 c0       	rjmp	.+18     	; 0x15c2 <__floatsisf+0x12>

000015b0 <__floatsisf>:
    15b0:	97 fb       	bst	r25, 7
    15b2:	3e f4       	brtc	.+14     	; 0x15c2 <__floatsisf+0x12>
    15b4:	90 95       	com	r25
    15b6:	80 95       	com	r24
    15b8:	70 95       	com	r23
    15ba:	61 95       	neg	r22
    15bc:	7f 4f       	sbci	r23, 0xFF	; 255
    15be:	8f 4f       	sbci	r24, 0xFF	; 255
    15c0:	9f 4f       	sbci	r25, 0xFF	; 255
    15c2:	99 23       	and	r25, r25
    15c4:	a9 f0       	breq	.+42     	; 0x15f0 <__floatsisf+0x40>
    15c6:	f9 2f       	mov	r31, r25
    15c8:	96 e9       	ldi	r25, 0x96	; 150
    15ca:	bb 27       	eor	r27, r27
    15cc:	93 95       	inc	r25
    15ce:	f6 95       	lsr	r31
    15d0:	87 95       	ror	r24
    15d2:	77 95       	ror	r23
    15d4:	67 95       	ror	r22
    15d6:	b7 95       	ror	r27
    15d8:	f1 11       	cpse	r31, r1
    15da:	f8 cf       	rjmp	.-16     	; 0x15cc <__floatsisf+0x1c>
    15dc:	fa f4       	brpl	.+62     	; 0x161c <__floatsisf+0x6c>
    15de:	bb 0f       	add	r27, r27
    15e0:	11 f4       	brne	.+4      	; 0x15e6 <__floatsisf+0x36>
    15e2:	60 ff       	sbrs	r22, 0
    15e4:	1b c0       	rjmp	.+54     	; 0x161c <__floatsisf+0x6c>
    15e6:	6f 5f       	subi	r22, 0xFF	; 255
    15e8:	7f 4f       	sbci	r23, 0xFF	; 255
    15ea:	8f 4f       	sbci	r24, 0xFF	; 255
    15ec:	9f 4f       	sbci	r25, 0xFF	; 255
    15ee:	16 c0       	rjmp	.+44     	; 0x161c <__floatsisf+0x6c>
    15f0:	88 23       	and	r24, r24
    15f2:	11 f0       	breq	.+4      	; 0x15f8 <__floatsisf+0x48>
    15f4:	96 e9       	ldi	r25, 0x96	; 150
    15f6:	11 c0       	rjmp	.+34     	; 0x161a <__floatsisf+0x6a>
    15f8:	77 23       	and	r23, r23
    15fa:	21 f0       	breq	.+8      	; 0x1604 <__floatsisf+0x54>
    15fc:	9e e8       	ldi	r25, 0x8E	; 142
    15fe:	87 2f       	mov	r24, r23
    1600:	76 2f       	mov	r23, r22
    1602:	05 c0       	rjmp	.+10     	; 0x160e <__floatsisf+0x5e>
    1604:	66 23       	and	r22, r22
    1606:	71 f0       	breq	.+28     	; 0x1624 <__floatsisf+0x74>
    1608:	96 e8       	ldi	r25, 0x86	; 134
    160a:	86 2f       	mov	r24, r22
    160c:	70 e0       	ldi	r23, 0x00	; 0
    160e:	60 e0       	ldi	r22, 0x00	; 0
    1610:	2a f0       	brmi	.+10     	; 0x161c <__floatsisf+0x6c>
    1612:	9a 95       	dec	r25
    1614:	66 0f       	add	r22, r22
    1616:	77 1f       	adc	r23, r23
    1618:	88 1f       	adc	r24, r24
    161a:	da f7       	brpl	.-10     	; 0x1612 <__floatsisf+0x62>
    161c:	88 0f       	add	r24, r24
    161e:	96 95       	lsr	r25
    1620:	87 95       	ror	r24
    1622:	97 f9       	bld	r25, 7
    1624:	08 95       	ret

00001626 <__fp_inf>:
    1626:	97 f9       	bld	r25, 7
    1628:	9f 67       	ori	r25, 0x7F	; 127
    162a:	80 e8       	ldi	r24, 0x80	; 128
    162c:	70 e0       	ldi	r23, 0x00	; 0
    162e:	60 e0       	ldi	r22, 0x00	; 0
    1630:	08 95       	ret

00001632 <__fp_nan>:
    1632:	9f ef       	ldi	r25, 0xFF	; 255
    1634:	80 ec       	ldi	r24, 0xC0	; 192
    1636:	08 95       	ret

00001638 <__fp_pscA>:
    1638:	00 24       	eor	r0, r0
    163a:	0a 94       	dec	r0
    163c:	16 16       	cp	r1, r22
    163e:	17 06       	cpc	r1, r23
    1640:	18 06       	cpc	r1, r24
    1642:	09 06       	cpc	r0, r25
    1644:	08 95       	ret

00001646 <__fp_pscB>:
    1646:	00 24       	eor	r0, r0
    1648:	0a 94       	dec	r0
    164a:	12 16       	cp	r1, r18
    164c:	13 06       	cpc	r1, r19
    164e:	14 06       	cpc	r1, r20
    1650:	05 06       	cpc	r0, r21
    1652:	08 95       	ret

00001654 <__fp_round>:
    1654:	09 2e       	mov	r0, r25
    1656:	03 94       	inc	r0
    1658:	00 0c       	add	r0, r0
    165a:	11 f4       	brne	.+4      	; 0x1660 <__fp_round+0xc>
    165c:	88 23       	and	r24, r24
    165e:	52 f0       	brmi	.+20     	; 0x1674 <__fp_round+0x20>
    1660:	bb 0f       	add	r27, r27
    1662:	40 f4       	brcc	.+16     	; 0x1674 <__fp_round+0x20>
    1664:	bf 2b       	or	r27, r31
    1666:	11 f4       	brne	.+4      	; 0x166c <__fp_round+0x18>
    1668:	60 ff       	sbrs	r22, 0
    166a:	04 c0       	rjmp	.+8      	; 0x1674 <__fp_round+0x20>
    166c:	6f 5f       	subi	r22, 0xFF	; 255
    166e:	7f 4f       	sbci	r23, 0xFF	; 255
    1670:	8f 4f       	sbci	r24, 0xFF	; 255
    1672:	9f 4f       	sbci	r25, 0xFF	; 255
    1674:	08 95       	ret

00001676 <__fp_split3>:
    1676:	57 fd       	sbrc	r21, 7
    1678:	90 58       	subi	r25, 0x80	; 128
    167a:	44 0f       	add	r20, r20
    167c:	55 1f       	adc	r21, r21
    167e:	59 f0       	breq	.+22     	; 0x1696 <__fp_splitA+0x10>
    1680:	5f 3f       	cpi	r21, 0xFF	; 255
    1682:	71 f0       	breq	.+28     	; 0x16a0 <__fp_splitA+0x1a>
    1684:	47 95       	ror	r20

00001686 <__fp_splitA>:
    1686:	88 0f       	add	r24, r24
    1688:	97 fb       	bst	r25, 7
    168a:	99 1f       	adc	r25, r25
    168c:	61 f0       	breq	.+24     	; 0x16a6 <__fp_splitA+0x20>
    168e:	9f 3f       	cpi	r25, 0xFF	; 255
    1690:	79 f0       	breq	.+30     	; 0x16b0 <__fp_splitA+0x2a>
    1692:	87 95       	ror	r24
    1694:	08 95       	ret
    1696:	12 16       	cp	r1, r18
    1698:	13 06       	cpc	r1, r19
    169a:	14 06       	cpc	r1, r20
    169c:	55 1f       	adc	r21, r21
    169e:	f2 cf       	rjmp	.-28     	; 0x1684 <__fp_split3+0xe>
    16a0:	46 95       	lsr	r20
    16a2:	f1 df       	rcall	.-30     	; 0x1686 <__fp_splitA>
    16a4:	08 c0       	rjmp	.+16     	; 0x16b6 <__fp_splitA+0x30>
    16a6:	16 16       	cp	r1, r22
    16a8:	17 06       	cpc	r1, r23
    16aa:	18 06       	cpc	r1, r24
    16ac:	99 1f       	adc	r25, r25
    16ae:	f1 cf       	rjmp	.-30     	; 0x1692 <__fp_splitA+0xc>
    16b0:	86 95       	lsr	r24
    16b2:	71 05       	cpc	r23, r1
    16b4:	61 05       	cpc	r22, r1
    16b6:	08 94       	sec
    16b8:	08 95       	ret

000016ba <__fp_zero>:
    16ba:	e8 94       	clt

000016bc <__fp_szero>:
    16bc:	bb 27       	eor	r27, r27
    16be:	66 27       	eor	r22, r22
    16c0:	77 27       	eor	r23, r23
    16c2:	cb 01       	movw	r24, r22
    16c4:	97 f9       	bld	r25, 7
    16c6:	08 95       	ret

000016c8 <__gesf2>:
    16c8:	a8 d0       	rcall	.+336    	; 0x181a <__fp_cmp>
    16ca:	08 f4       	brcc	.+2      	; 0x16ce <__gesf2+0x6>
    16cc:	8f ef       	ldi	r24, 0xFF	; 255
    16ce:	08 95       	ret

000016d0 <__mulsf3>:
    16d0:	0b d0       	rcall	.+22     	; 0x16e8 <__mulsf3x>
    16d2:	c0 cf       	rjmp	.-128    	; 0x1654 <__fp_round>
    16d4:	b1 df       	rcall	.-158    	; 0x1638 <__fp_pscA>
    16d6:	28 f0       	brcs	.+10     	; 0x16e2 <__mulsf3+0x12>
    16d8:	b6 df       	rcall	.-148    	; 0x1646 <__fp_pscB>
    16da:	18 f0       	brcs	.+6      	; 0x16e2 <__mulsf3+0x12>
    16dc:	95 23       	and	r25, r21
    16de:	09 f0       	breq	.+2      	; 0x16e2 <__mulsf3+0x12>
    16e0:	a2 cf       	rjmp	.-188    	; 0x1626 <__fp_inf>
    16e2:	a7 cf       	rjmp	.-178    	; 0x1632 <__fp_nan>
    16e4:	11 24       	eor	r1, r1
    16e6:	ea cf       	rjmp	.-44     	; 0x16bc <__fp_szero>

000016e8 <__mulsf3x>:
    16e8:	c6 df       	rcall	.-116    	; 0x1676 <__fp_split3>
    16ea:	a0 f3       	brcs	.-24     	; 0x16d4 <__mulsf3+0x4>

000016ec <__mulsf3_pse>:
    16ec:	95 9f       	mul	r25, r21
    16ee:	d1 f3       	breq	.-12     	; 0x16e4 <__mulsf3+0x14>
    16f0:	95 0f       	add	r25, r21
    16f2:	50 e0       	ldi	r21, 0x00	; 0
    16f4:	55 1f       	adc	r21, r21
    16f6:	62 9f       	mul	r22, r18
    16f8:	f0 01       	movw	r30, r0
    16fa:	72 9f       	mul	r23, r18
    16fc:	bb 27       	eor	r27, r27
    16fe:	f0 0d       	add	r31, r0
    1700:	b1 1d       	adc	r27, r1
    1702:	63 9f       	mul	r22, r19
    1704:	aa 27       	eor	r26, r26
    1706:	f0 0d       	add	r31, r0
    1708:	b1 1d       	adc	r27, r1
    170a:	aa 1f       	adc	r26, r26
    170c:	64 9f       	mul	r22, r20
    170e:	66 27       	eor	r22, r22
    1710:	b0 0d       	add	r27, r0
    1712:	a1 1d       	adc	r26, r1
    1714:	66 1f       	adc	r22, r22
    1716:	82 9f       	mul	r24, r18
    1718:	22 27       	eor	r18, r18
    171a:	b0 0d       	add	r27, r0
    171c:	a1 1d       	adc	r26, r1
    171e:	62 1f       	adc	r22, r18
    1720:	73 9f       	mul	r23, r19
    1722:	b0 0d       	add	r27, r0
    1724:	a1 1d       	adc	r26, r1
    1726:	62 1f       	adc	r22, r18
    1728:	83 9f       	mul	r24, r19
    172a:	a0 0d       	add	r26, r0
    172c:	61 1d       	adc	r22, r1
    172e:	22 1f       	adc	r18, r18
    1730:	74 9f       	mul	r23, r20
    1732:	33 27       	eor	r19, r19
    1734:	a0 0d       	add	r26, r0
    1736:	61 1d       	adc	r22, r1
    1738:	23 1f       	adc	r18, r19
    173a:	84 9f       	mul	r24, r20
    173c:	60 0d       	add	r22, r0
    173e:	21 1d       	adc	r18, r1
    1740:	82 2f       	mov	r24, r18
    1742:	76 2f       	mov	r23, r22
    1744:	6a 2f       	mov	r22, r26
    1746:	11 24       	eor	r1, r1
    1748:	9f 57       	subi	r25, 0x7F	; 127
    174a:	50 40       	sbci	r21, 0x00	; 0
    174c:	8a f0       	brmi	.+34     	; 0x1770 <__mulsf3_pse+0x84>
    174e:	e1 f0       	breq	.+56     	; 0x1788 <__mulsf3_pse+0x9c>
    1750:	88 23       	and	r24, r24
    1752:	4a f0       	brmi	.+18     	; 0x1766 <__mulsf3_pse+0x7a>
    1754:	ee 0f       	add	r30, r30
    1756:	ff 1f       	adc	r31, r31
    1758:	bb 1f       	adc	r27, r27
    175a:	66 1f       	adc	r22, r22
    175c:	77 1f       	adc	r23, r23
    175e:	88 1f       	adc	r24, r24
    1760:	91 50       	subi	r25, 0x01	; 1
    1762:	50 40       	sbci	r21, 0x00	; 0
    1764:	a9 f7       	brne	.-22     	; 0x1750 <__mulsf3_pse+0x64>
    1766:	9e 3f       	cpi	r25, 0xFE	; 254
    1768:	51 05       	cpc	r21, r1
    176a:	70 f0       	brcs	.+28     	; 0x1788 <__mulsf3_pse+0x9c>
    176c:	5c cf       	rjmp	.-328    	; 0x1626 <__fp_inf>
    176e:	a6 cf       	rjmp	.-180    	; 0x16bc <__fp_szero>
    1770:	5f 3f       	cpi	r21, 0xFF	; 255
    1772:	ec f3       	brlt	.-6      	; 0x176e <__mulsf3_pse+0x82>
    1774:	98 3e       	cpi	r25, 0xE8	; 232
    1776:	dc f3       	brlt	.-10     	; 0x176e <__mulsf3_pse+0x82>
    1778:	86 95       	lsr	r24
    177a:	77 95       	ror	r23
    177c:	67 95       	ror	r22
    177e:	b7 95       	ror	r27
    1780:	f7 95       	ror	r31
    1782:	e7 95       	ror	r30
    1784:	9f 5f       	subi	r25, 0xFF	; 255
    1786:	c1 f7       	brne	.-16     	; 0x1778 <__mulsf3_pse+0x8c>
    1788:	fe 2b       	or	r31, r30
    178a:	88 0f       	add	r24, r24
    178c:	91 1d       	adc	r25, r1
    178e:	96 95       	lsr	r25
    1790:	87 95       	ror	r24
    1792:	97 f9       	bld	r25, 7
    1794:	08 95       	ret
    1796:	11 f4       	brne	.+4      	; 0x179c <__mulsf3_pse+0xb0>
    1798:	0e f4       	brtc	.+2      	; 0x179c <__mulsf3_pse+0xb0>
    179a:	4b cf       	rjmp	.-362    	; 0x1632 <__fp_nan>
    179c:	62 c0       	rjmp	.+196    	; 0x1862 <__fp_mpack>

0000179e <sqrt>:
    179e:	73 df       	rcall	.-282    	; 0x1686 <__fp_splitA>
    17a0:	d0 f3       	brcs	.-12     	; 0x1796 <__mulsf3_pse+0xaa>
    17a2:	99 23       	and	r25, r25
    17a4:	d9 f3       	breq	.-10     	; 0x179c <__mulsf3_pse+0xb0>
    17a6:	ce f3       	brts	.-14     	; 0x179a <__mulsf3_pse+0xae>
    17a8:	9f 57       	subi	r25, 0x7F	; 127
    17aa:	55 0b       	sbc	r21, r21
    17ac:	87 ff       	sbrs	r24, 7
    17ae:	67 d0       	rcall	.+206    	; 0x187e <__fp_norm2>
    17b0:	00 24       	eor	r0, r0
    17b2:	a0 e6       	ldi	r26, 0x60	; 96
    17b4:	40 ea       	ldi	r20, 0xA0	; 160
    17b6:	90 01       	movw	r18, r0
    17b8:	80 58       	subi	r24, 0x80	; 128
    17ba:	56 95       	lsr	r21
    17bc:	97 95       	ror	r25
    17be:	28 f4       	brcc	.+10     	; 0x17ca <sqrt+0x2c>
    17c0:	80 5c       	subi	r24, 0xC0	; 192
    17c2:	66 0f       	add	r22, r22
    17c4:	77 1f       	adc	r23, r23
    17c6:	88 1f       	adc	r24, r24
    17c8:	20 f0       	brcs	.+8      	; 0x17d2 <sqrt+0x34>
    17ca:	26 17       	cp	r18, r22
    17cc:	37 07       	cpc	r19, r23
    17ce:	48 07       	cpc	r20, r24
    17d0:	30 f4       	brcc	.+12     	; 0x17de <sqrt+0x40>
    17d2:	62 1b       	sub	r22, r18
    17d4:	73 0b       	sbc	r23, r19
    17d6:	84 0b       	sbc	r24, r20
    17d8:	20 29       	or	r18, r0
    17da:	31 29       	or	r19, r1
    17dc:	4a 2b       	or	r20, r26
    17de:	a6 95       	lsr	r26
    17e0:	17 94       	ror	r1
    17e2:	07 94       	ror	r0
    17e4:	20 25       	eor	r18, r0
    17e6:	31 25       	eor	r19, r1
    17e8:	4a 27       	eor	r20, r26
    17ea:	58 f7       	brcc	.-42     	; 0x17c2 <sqrt+0x24>
    17ec:	66 0f       	add	r22, r22
    17ee:	77 1f       	adc	r23, r23
    17f0:	88 1f       	adc	r24, r24
    17f2:	20 f0       	brcs	.+8      	; 0x17fc <sqrt+0x5e>
    17f4:	26 17       	cp	r18, r22
    17f6:	37 07       	cpc	r19, r23
    17f8:	48 07       	cpc	r20, r24
    17fa:	30 f4       	brcc	.+12     	; 0x1808 <sqrt+0x6a>
    17fc:	62 0b       	sbc	r22, r18
    17fe:	73 0b       	sbc	r23, r19
    1800:	84 0b       	sbc	r24, r20
    1802:	20 0d       	add	r18, r0
    1804:	31 1d       	adc	r19, r1
    1806:	41 1d       	adc	r20, r1
    1808:	a0 95       	com	r26
    180a:	81 f7       	brne	.-32     	; 0x17ec <sqrt+0x4e>
    180c:	b9 01       	movw	r22, r18
    180e:	84 2f       	mov	r24, r20
    1810:	91 58       	subi	r25, 0x81	; 129
    1812:	88 0f       	add	r24, r24
    1814:	96 95       	lsr	r25
    1816:	87 95       	ror	r24
    1818:	08 95       	ret

0000181a <__fp_cmp>:
    181a:	99 0f       	add	r25, r25
    181c:	00 08       	sbc	r0, r0
    181e:	55 0f       	add	r21, r21
    1820:	aa 0b       	sbc	r26, r26
    1822:	e0 e8       	ldi	r30, 0x80	; 128
    1824:	fe ef       	ldi	r31, 0xFE	; 254
    1826:	16 16       	cp	r1, r22
    1828:	17 06       	cpc	r1, r23
    182a:	e8 07       	cpc	r30, r24
    182c:	f9 07       	cpc	r31, r25
    182e:	c0 f0       	brcs	.+48     	; 0x1860 <__fp_cmp+0x46>
    1830:	12 16       	cp	r1, r18
    1832:	13 06       	cpc	r1, r19
    1834:	e4 07       	cpc	r30, r20
    1836:	f5 07       	cpc	r31, r21
    1838:	98 f0       	brcs	.+38     	; 0x1860 <__fp_cmp+0x46>
    183a:	62 1b       	sub	r22, r18
    183c:	73 0b       	sbc	r23, r19
    183e:	84 0b       	sbc	r24, r20
    1840:	95 0b       	sbc	r25, r21
    1842:	39 f4       	brne	.+14     	; 0x1852 <__fp_cmp+0x38>
    1844:	0a 26       	eor	r0, r26
    1846:	61 f0       	breq	.+24     	; 0x1860 <__fp_cmp+0x46>
    1848:	23 2b       	or	r18, r19
    184a:	24 2b       	or	r18, r20
    184c:	25 2b       	or	r18, r21
    184e:	21 f4       	brne	.+8      	; 0x1858 <__fp_cmp+0x3e>
    1850:	08 95       	ret
    1852:	0a 26       	eor	r0, r26
    1854:	09 f4       	brne	.+2      	; 0x1858 <__fp_cmp+0x3e>
    1856:	a1 40       	sbci	r26, 0x01	; 1
    1858:	a6 95       	lsr	r26
    185a:	8f ef       	ldi	r24, 0xFF	; 255
    185c:	81 1d       	adc	r24, r1
    185e:	81 1d       	adc	r24, r1
    1860:	08 95       	ret

00001862 <__fp_mpack>:
    1862:	9f 3f       	cpi	r25, 0xFF	; 255
    1864:	31 f0       	breq	.+12     	; 0x1872 <__fp_mpack_finite+0xc>

00001866 <__fp_mpack_finite>:
    1866:	91 50       	subi	r25, 0x01	; 1
    1868:	20 f4       	brcc	.+8      	; 0x1872 <__fp_mpack_finite+0xc>
    186a:	87 95       	ror	r24
    186c:	77 95       	ror	r23
    186e:	67 95       	ror	r22
    1870:	b7 95       	ror	r27
    1872:	88 0f       	add	r24, r24
    1874:	91 1d       	adc	r25, r1
    1876:	96 95       	lsr	r25
    1878:	87 95       	ror	r24
    187a:	97 f9       	bld	r25, 7
    187c:	08 95       	ret

0000187e <__fp_norm2>:
    187e:	91 50       	subi	r25, 0x01	; 1
    1880:	50 40       	sbci	r21, 0x00	; 0
    1882:	66 0f       	add	r22, r22
    1884:	77 1f       	adc	r23, r23
    1886:	88 1f       	adc	r24, r24
    1888:	d2 f7       	brpl	.-12     	; 0x187e <__fp_norm2>
    188a:	08 95       	ret

0000188c <utoa>:
    188c:	fb 01       	movw	r30, r22
    188e:	9f 01       	movw	r18, r30
    1890:	42 30       	cpi	r20, 0x02	; 2
    1892:	74 f0       	brlt	.+28     	; 0x18b0 <utoa+0x24>
    1894:	45 32       	cpi	r20, 0x25	; 37
    1896:	64 f4       	brge	.+24     	; 0x18b0 <utoa+0x24>
    1898:	64 2f       	mov	r22, r20
    189a:	77 27       	eor	r23, r23
    189c:	0e 94 6c 0c 	call	0x18d8	; 0x18d8 <__udivmodhi4>
    18a0:	80 5d       	subi	r24, 0xD0	; 208
    18a2:	8a 33       	cpi	r24, 0x3A	; 58
    18a4:	0c f0       	brlt	.+2      	; 0x18a8 <utoa+0x1c>
    18a6:	89 5d       	subi	r24, 0xD9	; 217
    18a8:	81 93       	st	Z+, r24
    18aa:	cb 01       	movw	r24, r22
    18ac:	00 97       	sbiw	r24, 0x00	; 0
    18ae:	a1 f7       	brne	.-24     	; 0x1898 <utoa+0xc>
    18b0:	10 82       	st	Z, r1
    18b2:	c9 01       	movw	r24, r18
    18b4:	0c 94 5c 0c 	jmp	0x18b8	; 0x18b8 <strrev>

000018b8 <strrev>:
    18b8:	dc 01       	movw	r26, r24
    18ba:	fc 01       	movw	r30, r24
    18bc:	67 2f       	mov	r22, r23
    18be:	71 91       	ld	r23, Z+
    18c0:	77 23       	and	r23, r23
    18c2:	e1 f7       	brne	.-8      	; 0x18bc <strrev+0x4>
    18c4:	32 97       	sbiw	r30, 0x02	; 2
    18c6:	04 c0       	rjmp	.+8      	; 0x18d0 <strrev+0x18>
    18c8:	7c 91       	ld	r23, X
    18ca:	6d 93       	st	X+, r22
    18cc:	70 83       	st	Z, r23
    18ce:	62 91       	ld	r22, -Z
    18d0:	ae 17       	cp	r26, r30
    18d2:	bf 07       	cpc	r27, r31
    18d4:	c8 f3       	brcs	.-14     	; 0x18c8 <strrev+0x10>
    18d6:	08 95       	ret

000018d8 <__udivmodhi4>:
    18d8:	aa 1b       	sub	r26, r26
    18da:	bb 1b       	sub	r27, r27
    18dc:	51 e1       	ldi	r21, 0x11	; 17
    18de:	07 c0       	rjmp	.+14     	; 0x18ee <__udivmodhi4_ep>

000018e0 <__udivmodhi4_loop>:
    18e0:	aa 1f       	adc	r26, r26
    18e2:	bb 1f       	adc	r27, r27
    18e4:	a6 17       	cp	r26, r22
    18e6:	b7 07       	cpc	r27, r23
    18e8:	10 f0       	brcs	.+4      	; 0x18ee <__udivmodhi4_ep>
    18ea:	a6 1b       	sub	r26, r22
    18ec:	b7 0b       	sbc	r27, r23

000018ee <__udivmodhi4_ep>:
    18ee:	88 1f       	adc	r24, r24
    18f0:	99 1f       	adc	r25, r25
    18f2:	5a 95       	dec	r21
    18f4:	a9 f7       	brne	.-22     	; 0x18e0 <__udivmodhi4_loop>
    18f6:	80 95       	com	r24
    18f8:	90 95       	com	r25
    18fa:	bc 01       	movw	r22, r24
    18fc:	cd 01       	movw	r24, r26
    18fe:	08 95       	ret

00001900 <_exit>:
    1900:	f8 94       	cli

00001902 <__stop_program>:
    1902:	ff cf       	rjmp	.-2      	; 0x1902 <__stop_program>
