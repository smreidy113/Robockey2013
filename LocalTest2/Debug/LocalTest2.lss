
LocalTest2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000018  00800100  00003380  00003414  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00003380  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000000da  00800118  00800118  0000342c  2**0
                  ALLOC
  3 .stab         000043e0  00000000  00000000  0000342c  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00001329  00000000  00000000  0000780c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      0000002f  00000000  00000000  00008b35  2**0
                  CONTENTS, READONLY
  6 .debug_aranges 000002b8  00000000  00000000  00008b64  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00002eae  00000000  00000000  00008e1c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00000b60  00000000  00000000  0000bcca  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00001324  00000000  00000000  0000c82a  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000900  00000000  00000000  0000db50  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    000008f5  00000000  00000000  0000e450  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    000030fb  00000000  00000000  0000ed45  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 000002c0  00000000  00000000  00011e40  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 c0 01 	jmp	0x380	; 0x380 <__ctors_end>
       4:	0c 94 dd 01 	jmp	0x3ba	; 0x3ba <__bad_interrupt>
       8:	0c 94 dd 01 	jmp	0x3ba	; 0x3ba <__bad_interrupt>
       c:	0c 94 c0 09 	jmp	0x1380	; 0x1380 <__vector_3>
      10:	0c 94 dd 01 	jmp	0x3ba	; 0x3ba <__bad_interrupt>
      14:	0c 94 dd 01 	jmp	0x3ba	; 0x3ba <__bad_interrupt>
      18:	0c 94 dd 01 	jmp	0x3ba	; 0x3ba <__bad_interrupt>
      1c:	0c 94 dd 01 	jmp	0x3ba	; 0x3ba <__bad_interrupt>
      20:	0c 94 dd 01 	jmp	0x3ba	; 0x3ba <__bad_interrupt>
      24:	0c 94 dd 01 	jmp	0x3ba	; 0x3ba <__bad_interrupt>
      28:	0c 94 3e 11 	jmp	0x227c	; 0x227c <__vector_10>
      2c:	0c 94 7c 11 	jmp	0x22f8	; 0x22f8 <__vector_11>
      30:	0c 94 dd 01 	jmp	0x3ba	; 0x3ba <__bad_interrupt>
      34:	0c 94 dd 01 	jmp	0x3ba	; 0x3ba <__bad_interrupt>
      38:	0c 94 dd 01 	jmp	0x3ba	; 0x3ba <__bad_interrupt>
      3c:	0c 94 dd 01 	jmp	0x3ba	; 0x3ba <__bad_interrupt>
      40:	0c 94 dd 01 	jmp	0x3ba	; 0x3ba <__bad_interrupt>
      44:	0c 94 dd 01 	jmp	0x3ba	; 0x3ba <__bad_interrupt>
      48:	0c 94 dd 01 	jmp	0x3ba	; 0x3ba <__bad_interrupt>
      4c:	0c 94 dd 01 	jmp	0x3ba	; 0x3ba <__bad_interrupt>
      50:	0c 94 dd 01 	jmp	0x3ba	; 0x3ba <__bad_interrupt>
      54:	0c 94 dd 01 	jmp	0x3ba	; 0x3ba <__bad_interrupt>
      58:	0c 94 dd 01 	jmp	0x3ba	; 0x3ba <__bad_interrupt>
      5c:	0c 94 dd 01 	jmp	0x3ba	; 0x3ba <__bad_interrupt>
      60:	0c 94 dd 01 	jmp	0x3ba	; 0x3ba <__bad_interrupt>
      64:	0c 94 dd 01 	jmp	0x3ba	; 0x3ba <__bad_interrupt>
      68:	0c 94 dd 01 	jmp	0x3ba	; 0x3ba <__bad_interrupt>
      6c:	0c 94 dd 01 	jmp	0x3ba	; 0x3ba <__bad_interrupt>
      70:	0c 94 dd 01 	jmp	0x3ba	; 0x3ba <__bad_interrupt>
      74:	0c 94 01 0a 	jmp	0x1402	; 0x1402 <__vector_29>
      78:	0c 94 dd 01 	jmp	0x3ba	; 0x3ba <__bad_interrupt>
      7c:	0c 94 dd 01 	jmp	0x3ba	; 0x3ba <__bad_interrupt>
      80:	0c 94 dd 01 	jmp	0x3ba	; 0x3ba <__bad_interrupt>
      84:	0c 94 dd 01 	jmp	0x3ba	; 0x3ba <__bad_interrupt>
      88:	0c 94 dd 01 	jmp	0x3ba	; 0x3ba <__bad_interrupt>
      8c:	0c 94 dd 01 	jmp	0x3ba	; 0x3ba <__bad_interrupt>
      90:	0c 94 dd 01 	jmp	0x3ba	; 0x3ba <__bad_interrupt>
      94:	0c 94 dd 01 	jmp	0x3ba	; 0x3ba <__bad_interrupt>
      98:	0c 94 dd 01 	jmp	0x3ba	; 0x3ba <__bad_interrupt>
      9c:	0c 94 dd 01 	jmp	0x3ba	; 0x3ba <__bad_interrupt>
      a0:	0c 94 dd 01 	jmp	0x3ba	; 0x3ba <__bad_interrupt>
      a4:	0c 94 dd 01 	jmp	0x3ba	; 0x3ba <__bad_interrupt>
      a8:	0c 94 dd 01 	jmp	0x3ba	; 0x3ba <__bad_interrupt>
      ac:	22 09       	sbc	r18, r2
      ae:	31 09       	sbc	r19, r1
      b0:	40 09       	sbc	r20, r0
      b2:	cd 08       	sbc	r12, r13
      b4:	43 09       	sbc	r20, r3
      b6:	4d 09       	sbc	r20, r13
      b8:	53 09       	sbc	r21, r3
      ba:	59 09       	sbc	r21, r9
      bc:	5c 09       	sbc	r21, r12
      be:	7b 09       	sbc	r23, r11
      c0:	b4 09       	sbc	r27, r4
      c2:	b4 09       	sbc	r27, r4
      c4:	b4 09       	sbc	r27, r4
      c6:	b4 09       	sbc	r27, r4
      c8:	b4 09       	sbc	r27, r4
      ca:	b4 09       	sbc	r27, r4
      cc:	b4 09       	sbc	r27, r4
      ce:	b4 09       	sbc	r27, r4
      d0:	b4 09       	sbc	r27, r4
      d2:	b4 09       	sbc	r27, r4
      d4:	b4 09       	sbc	r27, r4
      d6:	b4 09       	sbc	r27, r4
      d8:	b4 09       	sbc	r27, r4
      da:	b4 09       	sbc	r27, r4
      dc:	b4 09       	sbc	r27, r4
      de:	b4 09       	sbc	r27, r4
      e0:	b4 09       	sbc	r27, r4
      e2:	b4 09       	sbc	r27, r4
      e4:	b4 09       	sbc	r27, r4
      e6:	b4 09       	sbc	r27, r4
      e8:	b4 09       	sbc	r27, r4
      ea:	b4 09       	sbc	r27, r4
      ec:	b4 09       	sbc	r27, r4
      ee:	b4 09       	sbc	r27, r4
      f0:	b4 09       	sbc	r27, r4
      f2:	b4 09       	sbc	r27, r4
      f4:	b4 09       	sbc	r27, r4
      f6:	b4 09       	sbc	r27, r4
      f8:	b4 09       	sbc	r27, r4
      fa:	b4 09       	sbc	r27, r4
      fc:	b4 09       	sbc	r27, r4
      fe:	b4 09       	sbc	r27, r4
     100:	b4 09       	sbc	r27, r4
     102:	b4 09       	sbc	r27, r4
     104:	b4 09       	sbc	r27, r4
     106:	b4 09       	sbc	r27, r4
     108:	b4 09       	sbc	r27, r4
     10a:	b4 09       	sbc	r27, r4
     10c:	b4 09       	sbc	r27, r4
     10e:	b4 09       	sbc	r27, r4
     110:	b4 09       	sbc	r27, r4
     112:	b4 09       	sbc	r27, r4
     114:	b4 09       	sbc	r27, r4
     116:	b4 09       	sbc	r27, r4
     118:	b4 09       	sbc	r27, r4
     11a:	b4 09       	sbc	r27, r4
     11c:	b4 09       	sbc	r27, r4
     11e:	b4 09       	sbc	r27, r4
     120:	b4 09       	sbc	r27, r4
     122:	b4 09       	sbc	r27, r4
     124:	b4 09       	sbc	r27, r4
     126:	b4 09       	sbc	r27, r4
     128:	b4 09       	sbc	r27, r4
     12a:	b4 09       	sbc	r27, r4
     12c:	b4 09       	sbc	r27, r4
     12e:	b4 09       	sbc	r27, r4
     130:	b4 09       	sbc	r27, r4
     132:	b4 09       	sbc	r27, r4
     134:	b4 09       	sbc	r27, r4
     136:	b4 09       	sbc	r27, r4
     138:	b4 09       	sbc	r27, r4
     13a:	a1 09       	sbc	r26, r1
     13c:	b1 09       	sbc	r27, r1
     13e:	b4 09       	sbc	r27, r4
     140:	b4 09       	sbc	r27, r4
     142:	b4 09       	sbc	r27, r4
     144:	b4 09       	sbc	r27, r4
     146:	b4 09       	sbc	r27, r4
     148:	b4 09       	sbc	r27, r4
     14a:	b4 09       	sbc	r27, r4
     14c:	b4 09       	sbc	r27, r4
     14e:	b4 09       	sbc	r27, r4
     150:	b4 09       	sbc	r27, r4
     152:	b4 09       	sbc	r27, r4
     154:	b4 09       	sbc	r27, r4
     156:	b4 09       	sbc	r27, r4
     158:	b4 09       	sbc	r27, r4
     15a:	b4 09       	sbc	r27, r4
     15c:	b4 09       	sbc	r27, r4
     15e:	b4 09       	sbc	r27, r4
     160:	b4 09       	sbc	r27, r4
     162:	b4 09       	sbc	r27, r4
     164:	b4 09       	sbc	r27, r4
     166:	b4 09       	sbc	r27, r4
     168:	b4 09       	sbc	r27, r4
     16a:	b4 09       	sbc	r27, r4
     16c:	b4 09       	sbc	r27, r4
     16e:	b4 09       	sbc	r27, r4
     170:	b4 09       	sbc	r27, r4
     172:	b4 09       	sbc	r27, r4
     174:	b4 09       	sbc	r27, r4
     176:	b4 09       	sbc	r27, r4
     178:	b4 09       	sbc	r27, r4
     17a:	b4 09       	sbc	r27, r4
     17c:	b4 09       	sbc	r27, r4
     17e:	b4 09       	sbc	r27, r4
     180:	b4 09       	sbc	r27, r4
     182:	b4 09       	sbc	r27, r4
     184:	b4 09       	sbc	r27, r4
     186:	b4 09       	sbc	r27, r4
     188:	b4 09       	sbc	r27, r4
     18a:	b4 09       	sbc	r27, r4
     18c:	b4 09       	sbc	r27, r4
     18e:	b4 09       	sbc	r27, r4
     190:	b4 09       	sbc	r27, r4
     192:	b4 09       	sbc	r27, r4
     194:	b4 09       	sbc	r27, r4
     196:	b4 09       	sbc	r27, r4
     198:	b4 09       	sbc	r27, r4
     19a:	b4 09       	sbc	r27, r4
     19c:	b4 09       	sbc	r27, r4
     19e:	b4 09       	sbc	r27, r4
     1a0:	b4 09       	sbc	r27, r4
     1a2:	b4 09       	sbc	r27, r4
     1a4:	b4 09       	sbc	r27, r4
     1a6:	b4 09       	sbc	r27, r4
     1a8:	b4 09       	sbc	r27, r4
     1aa:	b4 09       	sbc	r27, r4
     1ac:	b4 09       	sbc	r27, r4
     1ae:	b4 09       	sbc	r27, r4
     1b0:	b4 09       	sbc	r27, r4
     1b2:	b4 09       	sbc	r27, r4
     1b4:	b4 09       	sbc	r27, r4
     1b6:	b4 09       	sbc	r27, r4
     1b8:	b4 09       	sbc	r27, r4
     1ba:	b4 09       	sbc	r27, r4
     1bc:	b4 09       	sbc	r27, r4
     1be:	b4 09       	sbc	r27, r4
     1c0:	b4 09       	sbc	r27, r4
     1c2:	b4 09       	sbc	r27, r4
     1c4:	b4 09       	sbc	r27, r4
     1c6:	b4 09       	sbc	r27, r4
     1c8:	b4 09       	sbc	r27, r4
     1ca:	b4 09       	sbc	r27, r4
     1cc:	b4 09       	sbc	r27, r4
     1ce:	b4 09       	sbc	r27, r4
     1d0:	b4 09       	sbc	r27, r4
     1d2:	b4 09       	sbc	r27, r4
     1d4:	b4 09       	sbc	r27, r4
     1d6:	b4 09       	sbc	r27, r4
     1d8:	b4 09       	sbc	r27, r4
     1da:	b4 09       	sbc	r27, r4
     1dc:	b4 09       	sbc	r27, r4
     1de:	b4 09       	sbc	r27, r4
     1e0:	b4 09       	sbc	r27, r4
     1e2:	b4 09       	sbc	r27, r4
     1e4:	b4 09       	sbc	r27, r4
     1e6:	b4 09       	sbc	r27, r4
     1e8:	b4 09       	sbc	r27, r4
     1ea:	b4 09       	sbc	r27, r4
     1ec:	b4 09       	sbc	r27, r4
     1ee:	b4 09       	sbc	r27, r4
     1f0:	82 09       	sbc	r24, r2
     1f2:	85 09       	sbc	r24, r5
     1f4:	8a 09       	sbc	r24, r10
     1f6:	8f 09       	sbc	r24, r15
     1f8:	94 09       	sbc	r25, r4
     1fa:	b4 09       	sbc	r27, r4
     1fc:	99 09       	sbc	r25, r9
     1fe:	9e 09       	sbc	r25, r14
     200:	08 4a       	sbci	r16, 0xA8	; 168
     202:	d7 3b       	cpi	r29, 0xB7	; 183
     204:	3b ce       	rjmp	.-906    	; 0xfffffe7c <__eeprom_end+0xff7efe7c>
     206:	01 6e       	ori	r16, 0xE1	; 225
     208:	84 bc       	out	0x24, r8	; 36
     20a:	bf fd       	.word	0xfdbf	; ????
     20c:	c1 2f       	mov	r28, r17
     20e:	3d 6c       	ori	r19, 0xCD	; 205
     210:	74 31       	cpi	r23, 0x14	; 20
     212:	9a bd       	out	0x2a, r25	; 42
     214:	56 83       	std	Z+6, r21	; 0x06
     216:	3d da       	rcall	.-2950   	; 0xfffff692 <__eeprom_end+0xff7ef692>
     218:	3d 00       	.word	0x003d	; ????
     21a:	c7 7f       	andi	r28, 0xF7	; 247
     21c:	11 be       	out	0x31, r1	; 49
     21e:	d9 e4       	ldi	r29, 0x49	; 73
     220:	bb 4c       	sbci	r27, 0xCB	; 203
     222:	3e 91       	ld	r19, -X
     224:	6b aa       	std	Y+51, r6	; 0x33
     226:	aa be       	out	0x3a, r10	; 58
     228:	00 00       	nop
     22a:	00 80       	ld	r0, Z
     22c:	3f 07       	cpc	r19, r31
     22e:	63 42       	sbci	r22, 0x23	; 35
     230:	36 b7       	in	r19, 0x36	; 54
     232:	9b d8       	rcall	.-3786   	; 0xfffff36a <__eeprom_end+0xff7ef36a>
     234:	a7 1a       	sub	r10, r23
     236:	39 68       	ori	r19, 0x89	; 137
     238:	56 18       	sub	r5, r6
     23a:	ae ba       	out	0x1e, r10	; 30
     23c:	ab 55       	subi	r26, 0x5B	; 91
     23e:	8c 1d       	adc	r24, r12
     240:	3c b7       	in	r19, 0x3c	; 60
     242:	cc 57       	subi	r28, 0x7C	; 124
     244:	63 bd       	out	0x23, r22	; 35
     246:	6d ed       	ldi	r22, 0xDD	; 221
     248:	fd 75       	andi	r31, 0x5D	; 93
     24a:	3e f6       	brtc	.-114    	; 0x1da <__SREG__+0x19b>
     24c:	17 72       	andi	r17, 0x27	; 39
     24e:	31 bf       	out	0x31, r19	; 49
     250:	00 00       	nop
     252:	00 80       	ld	r0, Z
     254:	3f 05       	cpc	r19, r15
     256:	a8 4c       	sbci	r26, 0xC8	; 200
     258:	cd b2       	in	r12, 0x1d	; 29
     25a:	d4 4e       	sbci	r29, 0xE4	; 228
     25c:	b9 38       	cpi	r27, 0x89	; 137
     25e:	36 a9       	ldd	r19, Z+54	; 0x36
     260:	02 0c       	add	r0, r2
     262:	50 b9       	out	0x00, r21	; 0
     264:	91 86       	std	Z+9, r9	; 0x09
     266:	88 08       	sbc	r8, r8
     268:	3c a6       	std	Y+44, r3	; 0x2c
     26a:	aa aa       	std	Y+50, r10	; 0x32
     26c:	2a be       	out	0x3a, r2	; 58
     26e:	00 00       	nop
     270:	00 80       	ld	r0, Z
     272:	3f 08       	sbc	r3, r15
     274:	00 00       	nop
     276:	00 be       	out	0x30, r0	; 48
     278:	92 24       	eor	r9, r2
     27a:	49 12       	cpse	r4, r25
     27c:	3e ab       	std	Y+54, r19	; 0x36
     27e:	aa aa       	std	Y+50, r10	; 0x32
     280:	2a be       	out	0x3a, r2	; 58
     282:	cd cc       	rjmp	.-1638   	; 0xfffffc1e <__eeprom_end+0xff7efc1e>
     284:	cc 4c       	sbci	r28, 0xCC	; 204
     286:	3e 00       	.word	0x003e	; ????
     288:	00 00       	nop
     28a:	80 be       	out	0x30, r8	; 48
     28c:	ab aa       	std	Y+51, r10	; 0x33
     28e:	aa aa       	std	Y+50, r10	; 0x32
     290:	3e 00       	.word	0x003e	; ????
     292:	00 00       	nop
     294:	00 bf       	out	0x30, r16	; 48
     296:	00 00       	nop
     298:	00 80       	ld	r0, Z
     29a:	3f 00       	.word	0x003f	; ????
     29c:	00 00       	nop
     29e:	00 00       	nop
     2a0:	08 41       	sbci	r16, 0x18	; 24
     2a2:	78 d3       	rcall	.+1776   	; 0x994 <turn+0xe8>
     2a4:	bb 43       	sbci	r27, 0x3B	; 59
     2a6:	87 d1       	rcall	.+782    	; 0x5b6 <getADC+0xb4>
     2a8:	13 3d       	cpi	r17, 0xD3	; 211
     2aa:	19 0e       	add	r1, r25
     2ac:	3c c3       	rjmp	.+1656   	; 0x926 <turn+0x7a>
     2ae:	bd 42       	sbci	r27, 0x2D	; 45
     2b0:	82 ad       	ldd	r24, Z+58	; 0x3a
     2b2:	2b 3e       	cpi	r18, 0xEB	; 235
     2b4:	68 ec       	ldi	r22, 0xC8	; 200
     2b6:	82 76       	andi	r24, 0x62	; 98
     2b8:	be d9       	rcall	.-3204   	; 0xfffff636 <__eeprom_end+0xff7ef636>
     2ba:	8f e1       	ldi	r24, 0x1F	; 31
     2bc:	a9 3e       	cpi	r26, 0xE9	; 233
     2be:	4c 80       	ldd	r4, Y+4	; 0x04
     2c0:	ef ff       	.word	0xffef	; ????
     2c2:	be 01       	movw	r22, r28
     2c4:	c4 ff       	sbrs	r28, 4
     2c6:	7f 3f       	cpi	r23, 0xFF	; 255
     2c8:	00 00       	nop
     2ca:	00 00       	nop
	...

000002cd <descriptor_list>:
     2cd:	00 01 00 00 01 03 12 00 02 00 00 13 03 43 00 03     .............C..
     2dd:	00 00 56 03 04 01 03 09 04 5a 03 12 02 03 09 04     ..V......Z......
     2ed:	6e 03 06 03 03 09 04 76 03 08                       n......v..

000002f7 <endpoint_config_table>:
     2f7:	00 01 c1 12 01 80 36 01 81 36                       ......6..6

00000301 <device_descriptor>:
     301:	12 01 00 02 02 00 00 10 c0 16 7a 04 00 01 01 02     ..........z.....
     311:	03 01                                               ..

00000313 <config1_descriptor>:
     313:	09 02 43 00 02 01 00 c0 32 09 04 00 00 01 02 02     ..C.....2.......
     323:	01 00 05 24 00 10 01 05 24 01 01 01 04 24 02 06     ...$....$....$..
     333:	05 24 06 00 01 07 05 82 03 10 00 40 09 04 01 00     .$.........@....
     343:	02 0a 00 00 00 07 05 03 02 40 00 00 07 05 84 02     .........@......
     353:	40 00 00                                            @..

00000356 <string0>:
     356:	04 03 09 04                                         ....

0000035a <string1>:
     35a:	12 03 4a 00 2e 00 20 00 46 00 69 00 65 00 6e 00     ..J... .F.i.e.n.
     36a:	65 00 00 00                                         e...

0000036e <string2>:
     36e:	06 03 4d 00 32 00 00 00                             ..M.2...

00000376 <string3>:
     376:	08 03 34 00 31 00 30 00 00 00                       ..4.1.0...

00000380 <__ctors_end>:
     380:	11 24       	eor	r1, r1
     382:	1f be       	out	0x3f, r1	; 63
     384:	cf ef       	ldi	r28, 0xFF	; 255
     386:	da e0       	ldi	r29, 0x0A	; 10
     388:	de bf       	out	0x3e, r29	; 62
     38a:	cd bf       	out	0x3d, r28	; 61

0000038c <__do_copy_data>:
     38c:	11 e0       	ldi	r17, 0x01	; 1
     38e:	a0 e0       	ldi	r26, 0x00	; 0
     390:	b1 e0       	ldi	r27, 0x01	; 1
     392:	e0 e8       	ldi	r30, 0x80	; 128
     394:	f3 e3       	ldi	r31, 0x33	; 51
     396:	02 c0       	rjmp	.+4      	; 0x39c <__do_copy_data+0x10>
     398:	05 90       	lpm	r0, Z+
     39a:	0d 92       	st	X+, r0
     39c:	a8 31       	cpi	r26, 0x18	; 24
     39e:	b1 07       	cpc	r27, r17
     3a0:	d9 f7       	brne	.-10     	; 0x398 <__do_copy_data+0xc>

000003a2 <__do_clear_bss>:
     3a2:	21 e0       	ldi	r18, 0x01	; 1
     3a4:	a8 e1       	ldi	r26, 0x18	; 24
     3a6:	b1 e0       	ldi	r27, 0x01	; 1
     3a8:	01 c0       	rjmp	.+2      	; 0x3ac <.do_clear_bss_start>

000003aa <.do_clear_bss_loop>:
     3aa:	1d 92       	st	X+, r1

000003ac <.do_clear_bss_start>:
     3ac:	a2 3f       	cpi	r26, 0xF2	; 242
     3ae:	b2 07       	cpc	r27, r18
     3b0:	e1 f7       	brne	.-8      	; 0x3aa <.do_clear_bss_loop>
     3b2:	0e 94 e6 07 	call	0xfcc	; 0xfcc <main>
     3b6:	0c 94 be 19 	jmp	0x337c	; 0x337c <_exit>

000003ba <__bad_interrupt>:
     3ba:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000003be <chooseInput>:
    int maxval = 0;
    int diff = 0;
    float deg = 0.0;

void chooseInput(int i) {
    switch (i) {
     3be:	83 30       	cpi	r24, 0x03	; 3
     3c0:	91 05       	cpc	r25, r1
     3c2:	09 f4       	brne	.+2      	; 0x3c6 <chooseInput+0x8>
     3c4:	49 c0       	rjmp	.+146    	; 0x458 <chooseInput+0x9a>
     3c6:	3c f4       	brge	.+14     	; 0x3d6 <chooseInput+0x18>
     3c8:	81 30       	cpi	r24, 0x01	; 1
     3ca:	91 05       	cpc	r25, r1
     3cc:	19 f1       	breq	.+70     	; 0x414 <chooseInput+0x56>
     3ce:	9c f5       	brge	.+102    	; 0x436 <chooseInput+0x78>
     3d0:	89 2b       	or	r24, r25
     3d2:	79 f0       	breq	.+30     	; 0x3f2 <chooseInput+0x34>
     3d4:	08 95       	ret
     3d6:	85 30       	cpi	r24, 0x05	; 5
     3d8:	91 05       	cpc	r25, r1
     3da:	09 f4       	brne	.+2      	; 0x3de <chooseInput+0x20>
     3dc:	5f c0       	rjmp	.+190    	; 0x49c <chooseInput+0xde>
     3de:	0c f4       	brge	.+2      	; 0x3e2 <chooseInput+0x24>
     3e0:	4c c0       	rjmp	.+152    	; 0x47a <chooseInput+0xbc>
     3e2:	86 30       	cpi	r24, 0x06	; 6
     3e4:	91 05       	cpc	r25, r1
     3e6:	09 f4       	brne	.+2      	; 0x3ea <chooseInput+0x2c>
     3e8:	6a c0       	rjmp	.+212    	; 0x4be <chooseInput+0x100>
     3ea:	07 97       	sbiw	r24, 0x07	; 7
     3ec:	09 f0       	breq	.+2      	; 0x3f0 <chooseInput+0x32>
     3ee:	88 c0       	rjmp	.+272    	; 0x500 <chooseInput+0x142>
     3f0:	77 c0       	rjmp	.+238    	; 0x4e0 <chooseInput+0x122>
        case 0:
        clear(ADCSRB, MUX5);//Set analog input (F0)
     3f2:	eb e7       	ldi	r30, 0x7B	; 123
     3f4:	f0 e0       	ldi	r31, 0x00	; 0
     3f6:	80 81       	ld	r24, Z
     3f8:	8f 7d       	andi	r24, 0xDF	; 223
     3fa:	80 83       	st	Z, r24
        clear(ADMUX, MUX2);    //^
     3fc:	ec e7       	ldi	r30, 0x7C	; 124
     3fe:	f0 e0       	ldi	r31, 0x00	; 0
     400:	80 81       	ld	r24, Z
     402:	8b 7f       	andi	r24, 0xFB	; 251
     404:	80 83       	st	Z, r24
        clear(ADMUX, MUX1);    //^
     406:	80 81       	ld	r24, Z
     408:	8d 7f       	andi	r24, 0xFD	; 253
     40a:	80 83       	st	Z, r24
        clear(ADMUX, MUX0);    //^
     40c:	80 81       	ld	r24, Z
     40e:	8e 7f       	andi	r24, 0xFE	; 254
     410:	80 83       	st	Z, r24

        break;
     412:	08 95       	ret
        case 1:
        clear(ADCSRB, MUX5);//Set analog input (F1)
     414:	eb e7       	ldi	r30, 0x7B	; 123
     416:	f0 e0       	ldi	r31, 0x00	; 0
     418:	80 81       	ld	r24, Z
     41a:	8f 7d       	andi	r24, 0xDF	; 223
     41c:	80 83       	st	Z, r24
        clear(ADMUX, MUX2);    //^
     41e:	ec e7       	ldi	r30, 0x7C	; 124
     420:	f0 e0       	ldi	r31, 0x00	; 0
     422:	80 81       	ld	r24, Z
     424:	8b 7f       	andi	r24, 0xFB	; 251
     426:	80 83       	st	Z, r24
        clear(ADMUX, MUX1);    //^
     428:	80 81       	ld	r24, Z
     42a:	8d 7f       	andi	r24, 0xFD	; 253
     42c:	80 83       	st	Z, r24
        set(ADMUX, MUX0);    //^
     42e:	80 81       	ld	r24, Z
     430:	81 60       	ori	r24, 0x01	; 1
     432:	80 83       	st	Z, r24

        break;
     434:	08 95       	ret
        case 2:
        clear(ADCSRB, MUX5);//Set analog input (F4)
     436:	eb e7       	ldi	r30, 0x7B	; 123
     438:	f0 e0       	ldi	r31, 0x00	; 0
     43a:	80 81       	ld	r24, Z
     43c:	8f 7d       	andi	r24, 0xDF	; 223
     43e:	80 83       	st	Z, r24
        set(ADMUX, MUX2);    //^
     440:	ec e7       	ldi	r30, 0x7C	; 124
     442:	f0 e0       	ldi	r31, 0x00	; 0
     444:	80 81       	ld	r24, Z
     446:	84 60       	ori	r24, 0x04	; 4
     448:	80 83       	st	Z, r24
        clear(ADMUX, MUX1);    //^
     44a:	80 81       	ld	r24, Z
     44c:	8d 7f       	andi	r24, 0xFD	; 253
     44e:	80 83       	st	Z, r24
        clear(ADMUX, MUX0);    //^
     450:	80 81       	ld	r24, Z
     452:	8e 7f       	andi	r24, 0xFE	; 254
     454:	80 83       	st	Z, r24

        break;
     456:	08 95       	ret
        case 3:

        clear(ADCSRB, MUX5);//Set analog input (F5)
     458:	eb e7       	ldi	r30, 0x7B	; 123
     45a:	f0 e0       	ldi	r31, 0x00	; 0
     45c:	80 81       	ld	r24, Z
     45e:	8f 7d       	andi	r24, 0xDF	; 223
     460:	80 83       	st	Z, r24
        set(ADMUX, MUX2);    //^
     462:	ec e7       	ldi	r30, 0x7C	; 124
     464:	f0 e0       	ldi	r31, 0x00	; 0
     466:	80 81       	ld	r24, Z
     468:	84 60       	ori	r24, 0x04	; 4
     46a:	80 83       	st	Z, r24
        clear(ADMUX, MUX1);    //^
     46c:	80 81       	ld	r24, Z
     46e:	8d 7f       	andi	r24, 0xFD	; 253
     470:	80 83       	st	Z, r24
        set(ADMUX, MUX0);    //^
     472:	80 81       	ld	r24, Z
     474:	81 60       	ori	r24, 0x01	; 1
     476:	80 83       	st	Z, r24
        break;
     478:	08 95       	ret
        case 4:
        clear(ADCSRB, MUX5);//Set analog input (F6)
     47a:	eb e7       	ldi	r30, 0x7B	; 123
     47c:	f0 e0       	ldi	r31, 0x00	; 0
     47e:	80 81       	ld	r24, Z
     480:	8f 7d       	andi	r24, 0xDF	; 223
     482:	80 83       	st	Z, r24
        set(ADMUX, MUX2);    //^
     484:	ec e7       	ldi	r30, 0x7C	; 124
     486:	f0 e0       	ldi	r31, 0x00	; 0
     488:	80 81       	ld	r24, Z
     48a:	84 60       	ori	r24, 0x04	; 4
     48c:	80 83       	st	Z, r24
        set(ADMUX, MUX1);    //^
     48e:	80 81       	ld	r24, Z
     490:	82 60       	ori	r24, 0x02	; 2
     492:	80 83       	st	Z, r24
        clear(ADMUX, MUX0);    //^
     494:	80 81       	ld	r24, Z
     496:	8e 7f       	andi	r24, 0xFE	; 254
     498:	80 83       	st	Z, r24
        break;
     49a:	08 95       	ret
        case 5:
        set(ADCSRB, MUX5);//Set analog input (D4)
     49c:	eb e7       	ldi	r30, 0x7B	; 123
     49e:	f0 e0       	ldi	r31, 0x00	; 0
     4a0:	80 81       	ld	r24, Z
     4a2:	80 62       	ori	r24, 0x20	; 32
     4a4:	80 83       	st	Z, r24
        clear(ADMUX, MUX2);    //^
     4a6:	ec e7       	ldi	r30, 0x7C	; 124
     4a8:	f0 e0       	ldi	r31, 0x00	; 0
     4aa:	80 81       	ld	r24, Z
     4ac:	8b 7f       	andi	r24, 0xFB	; 251
     4ae:	80 83       	st	Z, r24
        clear(ADMUX, MUX1);    //^
     4b0:	80 81       	ld	r24, Z
     4b2:	8d 7f       	andi	r24, 0xFD	; 253
     4b4:	80 83       	st	Z, r24
        clear(ADMUX, MUX0);    //^
     4b6:	80 81       	ld	r24, Z
     4b8:	8e 7f       	andi	r24, 0xFE	; 254
     4ba:	80 83       	st	Z, r24
        break;
     4bc:	08 95       	ret
        case 6:
        set(ADCSRB, MUX5);//Set analog input (D6)
     4be:	eb e7       	ldi	r30, 0x7B	; 123
     4c0:	f0 e0       	ldi	r31, 0x00	; 0
     4c2:	80 81       	ld	r24, Z
     4c4:	80 62       	ori	r24, 0x20	; 32
     4c6:	80 83       	st	Z, r24
        clear(ADMUX, MUX2);    //^
     4c8:	ec e7       	ldi	r30, 0x7C	; 124
     4ca:	f0 e0       	ldi	r31, 0x00	; 0
     4cc:	80 81       	ld	r24, Z
     4ce:	8b 7f       	andi	r24, 0xFB	; 251
     4d0:	80 83       	st	Z, r24
        clear(ADMUX, MUX1);    //^
     4d2:	80 81       	ld	r24, Z
     4d4:	8d 7f       	andi	r24, 0xFD	; 253
     4d6:	80 83       	st	Z, r24
        set(ADMUX, MUX0);    //^
     4d8:	80 81       	ld	r24, Z
     4da:	81 60       	ori	r24, 0x01	; 1
     4dc:	80 83       	st	Z, r24
        break;
     4de:	08 95       	ret
        case 7:
        clear(ADCSRB, MUX5);//Set analog input (F7)
     4e0:	eb e7       	ldi	r30, 0x7B	; 123
     4e2:	f0 e0       	ldi	r31, 0x00	; 0
     4e4:	80 81       	ld	r24, Z
     4e6:	8f 7d       	andi	r24, 0xDF	; 223
     4e8:	80 83       	st	Z, r24
        set(ADMUX, MUX2);
     4ea:	ec e7       	ldi	r30, 0x7C	; 124
     4ec:	f0 e0       	ldi	r31, 0x00	; 0
     4ee:	80 81       	ld	r24, Z
     4f0:	84 60       	ori	r24, 0x04	; 4
     4f2:	80 83       	st	Z, r24
        set(ADMUX, MUX1);
     4f4:	80 81       	ld	r24, Z
     4f6:	82 60       	ori	r24, 0x02	; 2
     4f8:	80 83       	st	Z, r24
        set(ADMUX, MUX0);
     4fa:	80 81       	ld	r24, Z
     4fc:	81 60       	ori	r24, 0x01	; 1
     4fe:	80 83       	st	Z, r24
     500:	08 95       	ret

00000502 <getADC>:
int ADC6 = 0;
int ADC7 = 0;
int conversion = 0;

void getADC() {
    if (conversion) {
     502:	80 91 26 01 	lds	r24, 0x0126
     506:	90 91 27 01 	lds	r25, 0x0127
     50a:	89 2b       	or	r24, r25
     50c:	09 f4       	brne	.+2      	; 0x510 <getADC+0xe>
     50e:	9c c0       	rjmp	.+312    	; 0x648 <getADC+0x146>
        switch (flag) {
     510:	80 91 52 01 	lds	r24, 0x0152
     514:	90 91 53 01 	lds	r25, 0x0153
     518:	83 30       	cpi	r24, 0x03	; 3
     51a:	91 05       	cpc	r25, r1
     51c:	71 f1       	breq	.+92     	; 0x57a <getADC+0x78>
     51e:	3c f4       	brge	.+14     	; 0x52e <getADC+0x2c>
     520:	81 30       	cpi	r24, 0x01	; 1
     522:	91 05       	cpc	r25, r1
     524:	c1 f0       	breq	.+48     	; 0x556 <getADC+0x54>
     526:	04 f5       	brge	.+64     	; 0x568 <getADC+0x66>
     528:	89 2b       	or	r24, r25
     52a:	61 f0       	breq	.+24     	; 0x544 <getADC+0x42>
     52c:	52 c0       	rjmp	.+164    	; 0x5d2 <getADC+0xd0>
     52e:	85 30       	cpi	r24, 0x05	; 5
     530:	91 05       	cpc	r25, r1
     532:	a9 f1       	breq	.+106    	; 0x59e <getADC+0x9c>
     534:	5c f1       	brlt	.+86     	; 0x58c <getADC+0x8a>
     536:	86 30       	cpi	r24, 0x06	; 6
     538:	91 05       	cpc	r25, r1
     53a:	d1 f1       	breq	.+116    	; 0x5b0 <getADC+0xae>
     53c:	07 97       	sbiw	r24, 0x07	; 7
     53e:	09 f0       	breq	.+2      	; 0x542 <getADC+0x40>
     540:	48 c0       	rjmp	.+144    	; 0x5d2 <getADC+0xd0>
     542:	3f c0       	rjmp	.+126    	; 0x5c2 <getADC+0xc0>
            case 0:
            ADC0 = ADC;
     544:	80 91 78 00 	lds	r24, 0x0078
     548:	90 91 79 00 	lds	r25, 0x0079
     54c:	90 93 37 01 	sts	0x0137, r25
     550:	80 93 36 01 	sts	0x0136, r24
            break;
     554:	3e c0       	rjmp	.+124    	; 0x5d2 <getADC+0xd0>
            case 1:
            ADC1 = ADC;
     556:	80 91 78 00 	lds	r24, 0x0078
     55a:	90 91 79 00 	lds	r25, 0x0079
     55e:	90 93 35 01 	sts	0x0135, r25
     562:	80 93 34 01 	sts	0x0134, r24
            break;
     566:	35 c0       	rjmp	.+106    	; 0x5d2 <getADC+0xd0>
            case 2:
            ADC2 = ADC;
     568:	80 91 78 00 	lds	r24, 0x0078
     56c:	90 91 79 00 	lds	r25, 0x0079
     570:	90 93 33 01 	sts	0x0133, r25
     574:	80 93 32 01 	sts	0x0132, r24
            break;
     578:	2c c0       	rjmp	.+88     	; 0x5d2 <getADC+0xd0>
            case 3:
            ADC3 = ADC;
     57a:	80 91 78 00 	lds	r24, 0x0078
     57e:	90 91 79 00 	lds	r25, 0x0079
     582:	90 93 31 01 	sts	0x0131, r25
     586:	80 93 30 01 	sts	0x0130, r24
            break;
     58a:	23 c0       	rjmp	.+70     	; 0x5d2 <getADC+0xd0>
            case 4:
            ADC4 = ADC;
     58c:	80 91 78 00 	lds	r24, 0x0078
     590:	90 91 79 00 	lds	r25, 0x0079
     594:	90 93 2f 01 	sts	0x012F, r25
     598:	80 93 2e 01 	sts	0x012E, r24
            break;
     59c:	1a c0       	rjmp	.+52     	; 0x5d2 <getADC+0xd0>
            case 5:
            ADC5 = ADC;
     59e:	80 91 78 00 	lds	r24, 0x0078
     5a2:	90 91 79 00 	lds	r25, 0x0079
     5a6:	90 93 2d 01 	sts	0x012D, r25
     5aa:	80 93 2c 01 	sts	0x012C, r24
            break;
     5ae:	11 c0       	rjmp	.+34     	; 0x5d2 <getADC+0xd0>
            case 6:
            ADC6 = ADC;
     5b0:	80 91 78 00 	lds	r24, 0x0078
     5b4:	90 91 79 00 	lds	r25, 0x0079
     5b8:	90 93 2b 01 	sts	0x012B, r25
     5bc:	80 93 2a 01 	sts	0x012A, r24
            break;
     5c0:	08 c0       	rjmp	.+16     	; 0x5d2 <getADC+0xd0>
            case 7:
            ADC7 = ADC;
     5c2:	80 91 78 00 	lds	r24, 0x0078
     5c6:	90 91 79 00 	lds	r25, 0x0079
     5ca:	90 93 29 01 	sts	0x0129, r25
     5ce:	80 93 28 01 	sts	0x0128, r24
            break;
        }
            clear(ADCSRA, ADEN);    //Enable/Start conversion
     5d2:	ea e7       	ldi	r30, 0x7A	; 122
     5d4:	f0 e0       	ldi	r31, 0x00	; 0
     5d6:	80 81       	ld	r24, Z
     5d8:	8f 77       	andi	r24, 0x7F	; 127
     5da:	80 83       	st	Z, r24
            clear(ADCSRA, ADSC);    //^
     5dc:	80 81       	ld	r24, Z
     5de:	8f 7b       	andi	r24, 0xBF	; 191
     5e0:	80 83       	st	Z, r24
            clear(ADCSRA, ADATE);
     5e2:	80 81       	ld	r24, Z
     5e4:	8f 7d       	andi	r24, 0xDF	; 223
     5e6:	80 83       	st	Z, r24
            clear(ADCSRA, ADIF);
     5e8:	80 81       	ld	r24, Z
     5ea:	8f 7e       	andi	r24, 0xEF	; 239
     5ec:	80 83       	st	Z, r24
            if (flag >= 0 && flag < 8) {
     5ee:	80 91 52 01 	lds	r24, 0x0152
     5f2:	90 91 53 01 	lds	r25, 0x0153
     5f6:	88 30       	cpi	r24, 0x08	; 8
     5f8:	91 05       	cpc	r25, r1
     5fa:	a0 f4       	brcc	.+40     	; 0x624 <getADC+0x122>
                flag = (flag + 1) % 8;
     5fc:	01 96       	adiw	r24, 0x01	; 1
     5fe:	9c 01       	movw	r18, r24
     600:	27 70       	andi	r18, 0x07	; 7
     602:	30 78       	andi	r19, 0x80	; 128
     604:	33 23       	and	r19, r19
     606:	34 f4       	brge	.+12     	; 0x614 <getADC+0x112>
     608:	21 50       	subi	r18, 0x01	; 1
     60a:	31 09       	sbc	r19, r1
     60c:	28 6f       	ori	r18, 0xF8	; 248
     60e:	3f 6f       	ori	r19, 0xFF	; 255
     610:	2f 5f       	subi	r18, 0xFF	; 255
     612:	3f 4f       	sbci	r19, 0xFF	; 255
     614:	20 93 52 01 	sts	0x0152, r18
     618:	30 93 53 01 	sts	0x0153, r19
                chooseInput(flag);
     61c:	82 2f       	mov	r24, r18
     61e:	93 2f       	mov	r25, r19
     620:	0e 94 df 01 	call	0x3be	; 0x3be <chooseInput>
            }
            set(ADCSRA, ADATE);    //Set trigger to free-running mode
     624:	ea e7       	ldi	r30, 0x7A	; 122
     626:	f0 e0       	ldi	r31, 0x00	; 0
     628:	80 81       	ld	r24, Z
     62a:	80 62       	ori	r24, 0x20	; 32
     62c:	80 83       	st	Z, r24
            set(ADCSRA, ADEN);    //Enable/Start conversion
     62e:	80 81       	ld	r24, Z
     630:	80 68       	ori	r24, 0x80	; 128
     632:	80 83       	st	Z, r24
            set(ADCSRA, ADSC);    //^
     634:	80 81       	ld	r24, Z
     636:	80 64       	ori	r24, 0x40	; 64
     638:	80 83       	st	Z, r24
           
            set(ADCSRA, ADIF);    //Enable reading results
     63a:	80 81       	ld	r24, Z
     63c:	80 61       	ori	r24, 0x10	; 16
     63e:	80 83       	st	Z, r24
            conversion = 0;
     640:	10 92 27 01 	sts	0x0127, r1
     644:	10 92 26 01 	sts	0x0126, r1
    }

    ADCarr[0] = ADC0;
     648:	80 91 36 01 	lds	r24, 0x0136
     64c:	90 91 37 01 	lds	r25, 0x0137
     650:	90 93 43 01 	sts	0x0143, r25
     654:	80 93 42 01 	sts	0x0142, r24
    ADCarr[1] = ADC1;
     658:	80 91 34 01 	lds	r24, 0x0134
     65c:	90 91 35 01 	lds	r25, 0x0135
     660:	90 93 45 01 	sts	0x0145, r25
     664:	80 93 44 01 	sts	0x0144, r24
    ADCarr[2] = ADC2;
     668:	80 91 32 01 	lds	r24, 0x0132
     66c:	90 91 33 01 	lds	r25, 0x0133
     670:	90 93 47 01 	sts	0x0147, r25
     674:	80 93 46 01 	sts	0x0146, r24
    ADCarr[3] = ADC3;
     678:	80 91 30 01 	lds	r24, 0x0130
     67c:	90 91 31 01 	lds	r25, 0x0131
     680:	90 93 49 01 	sts	0x0149, r25
     684:	80 93 48 01 	sts	0x0148, r24
    ADCarr[4] = ADC4;
     688:	80 91 2e 01 	lds	r24, 0x012E
     68c:	90 91 2f 01 	lds	r25, 0x012F
     690:	90 93 4b 01 	sts	0x014B, r25
     694:	80 93 4a 01 	sts	0x014A, r24
    ADCarr[5] = ADC5;
     698:	80 91 2c 01 	lds	r24, 0x012C
     69c:	90 91 2d 01 	lds	r25, 0x012D
     6a0:	90 93 4d 01 	sts	0x014D, r25
     6a4:	80 93 4c 01 	sts	0x014C, r24
    ADCarr[6] = ADC6;
     6a8:	80 91 2a 01 	lds	r24, 0x012A
     6ac:	90 91 2b 01 	lds	r25, 0x012B
     6b0:	90 93 4f 01 	sts	0x014F, r25
     6b4:	80 93 4e 01 	sts	0x014E, r24
    ADCarr[7] = ADC7;
     6b8:	80 91 28 01 	lds	r24, 0x0128
     6bc:	90 91 29 01 	lds	r25, 0x0129
     6c0:	90 93 51 01 	sts	0x0151, r25
     6c4:	80 93 50 01 	sts	0x0150, r24
     6c8:	08 95       	ret

000006ca <reportADC>:
    
    
}

void reportADC() {
     6ca:	cf 92       	push	r12
     6cc:	df 92       	push	r13
     6ce:	ef 92       	push	r14
     6d0:	ff 92       	push	r15
     6d2:	cf 93       	push	r28
     6d4:	df 93       	push	r29

    m_red(ON);
     6d6:	6e 9a       	sbi	0x0d, 6	; 13
     6d8:	76 98       	cbi	0x0e, 6	; 14
    m_green(ON);
     6da:	6a 9a       	sbi	0x0d, 2	; 13
     6dc:	72 98       	cbi	0x0e, 2	; 14


    m_red(OFF);
     6de:	6e 9a       	sbi	0x0d, 6	; 13
     6e0:	76 9a       	sbi	0x0e, 6	; 14
    m_green(OFF);
     6e2:	6a 9a       	sbi	0x0d, 2	; 13
     6e4:	72 9a       	sbi	0x0e, 2	; 14
    float diff = 0.0;

    
    

    getADC();
     6e6:	0e 94 81 02 	call	0x502	; 0x502 <getADC>
     6ea:	e2 e4       	ldi	r30, 0x42	; 66
     6ec:	f1 e0       	ldi	r31, 0x01	; 1
    index = 0;
    maxval = 0;
    //m_green(TOGGLE);
    for(int i = 0; i < 8; i++) {
     6ee:	80 e0       	ldi	r24, 0x00	; 0
     6f0:	90 e0       	ldi	r25, 0x00	; 0
    
    

    getADC();
    index = 0;
    maxval = 0;
     6f2:	40 e0       	ldi	r20, 0x00	; 0
     6f4:	50 e0       	ldi	r21, 0x00	; 0

    
    

    getADC();
    index = 0;
     6f6:	c0 e0       	ldi	r28, 0x00	; 0
     6f8:	d0 e0       	ldi	r29, 0x00	; 0
    maxval = 0;
    //m_green(TOGGLE);
    for(int i = 0; i < 8; i++) {
        if (ADCarr[i] > maxval) {
     6fa:	21 91       	ld	r18, Z+
     6fc:	31 91       	ld	r19, Z+
     6fe:	42 17       	cp	r20, r18
     700:	53 07       	cpc	r21, r19
     702:	14 f4       	brge	.+4      	; 0x708 <reportADC+0x3e>
            index = i;
            maxval = ADCarr[i];
     704:	a9 01       	movw	r20, r18
    getADC();
    index = 0;
    maxval = 0;
    //m_green(TOGGLE);
    for(int i = 0; i < 8; i++) {
        if (ADCarr[i] > maxval) {
     706:	ec 01       	movw	r28, r24

    getADC();
    index = 0;
    maxval = 0;
    //m_green(TOGGLE);
    for(int i = 0; i < 8; i++) {
     708:	01 96       	adiw	r24, 0x01	; 1
     70a:	88 30       	cpi	r24, 0x08	; 8
     70c:	91 05       	cpc	r25, r1
     70e:	a9 f7       	brne	.-22     	; 0x6fa <reportADC+0x30>
        if (ADCarr[i] > maxval) {
            index = i;
            maxval = ADCarr[i];
        }
    }
    switch (index) {
     710:	20 97       	sbiw	r28, 0x00	; 0
     712:	29 f0       	breq	.+10     	; 0x71e <reportADC+0x54>
     714:	c6 30       	cpi	r28, 0x06	; 6
     716:	d1 05       	cpc	r29, r1
     718:	09 f0       	breq	.+2      	; 0x71c <reportADC+0x52>
     71a:	43 c0       	rjmp	.+134    	; 0x7a2 <reportADC+0xd8>
     71c:	21 c0       	rjmp	.+66     	; 0x760 <reportADC+0x96>
        case 0:
        diff = ADCarr[0] - ADCarr[6];
     71e:	60 91 42 01 	lds	r22, 0x0142
     722:	70 91 43 01 	lds	r23, 0x0143
     726:	80 91 4e 01 	lds	r24, 0x014E
     72a:	90 91 4f 01 	lds	r25, 0x014F
     72e:	68 1b       	sub	r22, r24
     730:	79 0b       	sbc	r23, r25
     732:	88 27       	eor	r24, r24
     734:	77 fd       	sbrc	r23, 7
     736:	80 95       	com	r24
     738:	98 2f       	mov	r25, r24
     73a:	0e 94 c4 16 	call	0x2d88	; 0x2d88 <__floatsisf>
        deg = exp(-1.0*fabs(((float)diff))/400.0);
     73e:	dc 01       	movw	r26, r24
     740:	cb 01       	movw	r24, r22
     742:	bf 77       	andi	r27, 0x7F	; 127
     744:	bc 01       	movw	r22, r24
     746:	cd 01       	movw	r24, r26
     748:	90 58       	subi	r25, 0x80	; 128
     74a:	20 e0       	ldi	r18, 0x00	; 0
     74c:	30 e0       	ldi	r19, 0x00	; 0
     74e:	48 ec       	ldi	r20, 0xC8	; 200
     750:	53 e4       	ldi	r21, 0x43	; 67
     752:	0e 94 f8 15 	call	0x2bf0	; 0x2bf0 <__divsf3>
     756:	0e 94 65 16 	call	0x2cca	; 0x2cca <exp>
     75a:	6b 01       	movw	r12, r22
     75c:	7c 01       	movw	r14, r24
        //m_green(ON);
        //m_red(OFF);
        break;
     75e:	24 c0       	rjmp	.+72     	; 0x7a8 <reportADC+0xde>
        case 6:
        diff = ADCarr[6] - ADCarr[0];
     760:	60 91 4e 01 	lds	r22, 0x014E
     764:	70 91 4f 01 	lds	r23, 0x014F
     768:	80 91 42 01 	lds	r24, 0x0142
     76c:	90 91 43 01 	lds	r25, 0x0143
     770:	68 1b       	sub	r22, r24
     772:	79 0b       	sbc	r23, r25
     774:	88 27       	eor	r24, r24
     776:	77 fd       	sbrc	r23, 7
     778:	80 95       	com	r24
     77a:	98 2f       	mov	r25, r24
     77c:	0e 94 c4 16 	call	0x2d88	; 0x2d88 <__floatsisf>
        deg = exp(-1.0*fabs(((float)diff))/400.0);
     780:	dc 01       	movw	r26, r24
     782:	cb 01       	movw	r24, r22
     784:	bf 77       	andi	r27, 0x7F	; 127
     786:	bc 01       	movw	r22, r24
     788:	cd 01       	movw	r24, r26
     78a:	90 58       	subi	r25, 0x80	; 128
     78c:	20 e0       	ldi	r18, 0x00	; 0
     78e:	30 e0       	ldi	r19, 0x00	; 0
     790:	48 ec       	ldi	r20, 0xC8	; 200
     792:	53 e4       	ldi	r21, 0x43	; 67
     794:	0e 94 f8 15 	call	0x2bf0	; 0x2bf0 <__divsf3>
     798:	0e 94 65 16 	call	0x2cca	; 0x2cca <exp>
     79c:	6b 01       	movw	r12, r22
     79e:	7c 01       	movw	r14, r24
        //m_green(OFF);
        //m_red(ON);
        break;
     7a0:	03 c0       	rjmp	.+6      	; 0x7a8 <reportADC+0xde>
    m_green(OFF);

    char rx_buffer; //computer interactions
    int index = 0;
    int maxval = 0;
    float deg = 0.0;
     7a2:	c1 2c       	mov	r12, r1
     7a4:	d1 2c       	mov	r13, r1
     7a6:	76 01       	movw	r14, r12

        //m_usb_rx_flush();                 //clear buffer

        //if(rx_buffer == 1) {             //computer wants ir buffer
            //write ir buffer as concatenated hex:  i.e. f0f1f4f5
            m_usb_tx_int(ADCarr[0]);
     7a8:	80 91 42 01 	lds	r24, 0x0142
     7ac:	90 91 43 01 	lds	r25, 0x0143
     7b0:	0e 94 04 13 	call	0x2608	; 0x2608 <m_usb_tx_int>
            m_usb_tx_char('\t');
     7b4:	89 e0       	ldi	r24, 0x09	; 9
     7b6:	0e 94 e2 10 	call	0x21c4	; 0x21c4 <m_usb_tx_char>
            m_usb_tx_int(ADCarr[1]);
     7ba:	80 91 44 01 	lds	r24, 0x0144
     7be:	90 91 45 01 	lds	r25, 0x0145
     7c2:	0e 94 04 13 	call	0x2608	; 0x2608 <m_usb_tx_int>
            m_usb_tx_char('\t');
     7c6:	89 e0       	ldi	r24, 0x09	; 9
     7c8:	0e 94 e2 10 	call	0x21c4	; 0x21c4 <m_usb_tx_char>
            m_usb_tx_int(ADCarr[2]);
     7cc:	80 91 46 01 	lds	r24, 0x0146
     7d0:	90 91 47 01 	lds	r25, 0x0147
     7d4:	0e 94 04 13 	call	0x2608	; 0x2608 <m_usb_tx_int>
            m_usb_tx_char('\t');
     7d8:	89 e0       	ldi	r24, 0x09	; 9
     7da:	0e 94 e2 10 	call	0x21c4	; 0x21c4 <m_usb_tx_char>
            m_usb_tx_int(ADCarr[3]);
     7de:	80 91 48 01 	lds	r24, 0x0148
     7e2:	90 91 49 01 	lds	r25, 0x0149
     7e6:	0e 94 04 13 	call	0x2608	; 0x2608 <m_usb_tx_int>
            m_usb_tx_char('\t');
     7ea:	89 e0       	ldi	r24, 0x09	; 9
     7ec:	0e 94 e2 10 	call	0x21c4	; 0x21c4 <m_usb_tx_char>
            m_usb_tx_int(ADCarr[4]);
     7f0:	80 91 4a 01 	lds	r24, 0x014A
     7f4:	90 91 4b 01 	lds	r25, 0x014B
     7f8:	0e 94 04 13 	call	0x2608	; 0x2608 <m_usb_tx_int>
            m_usb_tx_char('\t');
     7fc:	89 e0       	ldi	r24, 0x09	; 9
     7fe:	0e 94 e2 10 	call	0x21c4	; 0x21c4 <m_usb_tx_char>
            m_usb_tx_int(ADCarr[5]);
     802:	80 91 4c 01 	lds	r24, 0x014C
     806:	90 91 4d 01 	lds	r25, 0x014D
     80a:	0e 94 04 13 	call	0x2608	; 0x2608 <m_usb_tx_int>
            m_usb_tx_char('\t');
     80e:	89 e0       	ldi	r24, 0x09	; 9
     810:	0e 94 e2 10 	call	0x21c4	; 0x21c4 <m_usb_tx_char>
            m_usb_tx_int(ADCarr[6]);
     814:	80 91 4e 01 	lds	r24, 0x014E
     818:	90 91 4f 01 	lds	r25, 0x014F
     81c:	0e 94 04 13 	call	0x2608	; 0x2608 <m_usb_tx_int>
            m_usb_tx_char('\t');
     820:	89 e0       	ldi	r24, 0x09	; 9
     822:	0e 94 e2 10 	call	0x21c4	; 0x21c4 <m_usb_tx_char>
            m_usb_tx_int(ADCarr[7]);
     826:	80 91 50 01 	lds	r24, 0x0150
     82a:	90 91 51 01 	lds	r25, 0x0151
     82e:	0e 94 04 13 	call	0x2608	; 0x2608 <m_usb_tx_int>
            m_usb_tx_char('\t');
     832:	89 e0       	ldi	r24, 0x09	; 9
     834:	0e 94 e2 10 	call	0x21c4	; 0x21c4 <m_usb_tx_char>
            m_usb_tx_int(index);
     838:	ce 01       	movw	r24, r28
     83a:	0e 94 04 13 	call	0x2608	; 0x2608 <m_usb_tx_int>
            m_usb_tx_char('\t');
     83e:	89 e0       	ldi	r24, 0x09	; 9
     840:	0e 94 e2 10 	call	0x21c4	; 0x21c4 <m_usb_tx_char>
            m_usb_tx_int((int)(deg*100));
     844:	20 e0       	ldi	r18, 0x00	; 0
     846:	30 e0       	ldi	r19, 0x00	; 0
     848:	48 ec       	ldi	r20, 0xC8	; 200
     84a:	52 e4       	ldi	r21, 0x42	; 66
     84c:	c7 01       	movw	r24, r14
     84e:	b6 01       	movw	r22, r12
     850:	0e 94 8b 18 	call	0x3116	; 0x3116 <__mulsf3>
     854:	0e 94 91 16 	call	0x2d22	; 0x2d22 <__fixsfsi>
     858:	cb 01       	movw	r24, r22
     85a:	0e 94 04 13 	call	0x2608	; 0x2608 <m_usb_tx_int>
            m_usb_tx_char('\t');
     85e:	89 e0       	ldi	r24, 0x09	; 9
     860:	0e 94 e2 10 	call	0x21c4	; 0x21c4 <m_usb_tx_char>

        //}
        m_usb_tx_char('\n');  //MATLAB serial command reads 1 line at a time
     864:	8a e0       	ldi	r24, 0x0A	; 10
     866:	0e 94 e2 10 	call	0x21c4	; 0x21c4 <m_usb_tx_char>
        //}
}
     86a:	df 91       	pop	r29
     86c:	cf 91       	pop	r28
     86e:	ff 90       	pop	r15
     870:	ef 90       	pop	r14
     872:	df 90       	pop	r13
     874:	cf 90       	pop	r12
     876:	08 95       	ret

00000878 <rotate>:

void rotate(int dir, float speed) {
    OCR1B = OCR1A;
     878:	20 91 88 00 	lds	r18, 0x0088
     87c:	30 91 89 00 	lds	r19, 0x0089
     880:	30 93 8b 00 	sts	0x008B, r19
     884:	20 93 8a 00 	sts	0x008A, r18
    OCR3A = ICR3;
     888:	20 91 96 00 	lds	r18, 0x0096
     88c:	30 91 97 00 	lds	r19, 0x0097
     890:	30 93 99 00 	sts	0x0099, r19
     894:	20 93 98 00 	sts	0x0098, r18
    if (dir == RIGHT) {
     898:	00 97       	sbiw	r24, 0x00	; 0
     89a:	19 f4       	brne	.+6      	; 0x8a2 <rotate+0x2a>
        set(PORTB,2);
     89c:	2a 9a       	sbi	0x05, 2	; 5
        clear(PORTB,3);
     89e:	2b 98       	cbi	0x05, 3	; 5
     8a0:	08 95       	ret
    }
    else if (dir == LEFT) {
     8a2:	01 97       	sbiw	r24, 0x01	; 1
     8a4:	11 f4       	brne	.+4      	; 0x8aa <rotate+0x32>
        clear(PORTB,2);
     8a6:	2a 98       	cbi	0x05, 2	; 5
        set(PORTB,3);
     8a8:	2b 9a       	sbi	0x05, 3	; 5
     8aa:	08 95       	ret

000008ac <turn>:
    }
}

void turn(int dir,float speed, float degree) {
     8ac:	8f 92       	push	r8
     8ae:	9f 92       	push	r9
     8b0:	af 92       	push	r10
     8b2:	bf 92       	push	r11
     8b4:	cf 92       	push	r12
     8b6:	df 92       	push	r13
     8b8:	ef 92       	push	r14
     8ba:	ff 92       	push	r15
     8bc:	0f 93       	push	r16
     8be:	1f 93       	push	r17
     8c0:	cf 93       	push	r28
     8c2:	df 93       	push	r29
     8c4:	ec 01       	movw	r28, r24
     8c6:	6a 01       	movw	r12, r20
     8c8:	7b 01       	movw	r14, r22
     8ca:	48 01       	movw	r8, r16
     8cc:	59 01       	movw	r10, r18
    set(PORTB,2);
     8ce:	2a 9a       	sbi	0x05, 2	; 5
    set(PORTB,3);
     8d0:	2b 9a       	sbi	0x05, 3	; 5
    if(iHaveThePuck && degree < 0.27) {
     8d2:	80 91 59 01 	lds	r24, 0x0159
     8d6:	88 23       	and	r24, r24
     8d8:	a1 f0       	breq	.+40     	; 0x902 <turn+0x56>
     8da:	21 e7       	ldi	r18, 0x71	; 113
     8dc:	3d e3       	ldi	r19, 0x3D	; 61
     8de:	4a e8       	ldi	r20, 0x8A	; 138
     8e0:	5e e3       	ldi	r21, 0x3E	; 62
     8e2:	c5 01       	movw	r24, r10
     8e4:	b4 01       	movw	r22, r8
     8e6:	0e 94 f1 15 	call	0x2be2	; 0x2be2 <__cmpsf2>
     8ea:	88 23       	and	r24, r24
     8ec:	54 f4       	brge	.+20     	; 0x902 <turn+0x56>
        degree = 0.27;
     8ee:	0f 2e       	mov	r0, r31
     8f0:	f1 e7       	ldi	r31, 0x71	; 113
     8f2:	8f 2e       	mov	r8, r31
     8f4:	fd e3       	ldi	r31, 0x3D	; 61
     8f6:	9f 2e       	mov	r9, r31
     8f8:	fa e8       	ldi	r31, 0x8A	; 138
     8fa:	af 2e       	mov	r10, r31
     8fc:	fe e3       	ldi	r31, 0x3E	; 62
     8fe:	bf 2e       	mov	r11, r31
     900:	f0 2d       	mov	r31, r0
    }
    if (dir == LEFT) {
     902:	c1 30       	cpi	r28, 0x01	; 1
     904:	d1 05       	cpc	r29, r1
     906:	81 f5       	brne	.+96     	; 0x968 <turn+0xbc>
        OCR3A = (unsigned int) ((float)ICR3 * speed);
     908:	60 91 96 00 	lds	r22, 0x0096
     90c:	70 91 97 00 	lds	r23, 0x0097
     910:	80 e0       	ldi	r24, 0x00	; 0
     912:	90 e0       	ldi	r25, 0x00	; 0
     914:	0e 94 c2 16 	call	0x2d84	; 0x2d84 <__floatunsisf>
     918:	a7 01       	movw	r20, r14
     91a:	96 01       	movw	r18, r12
     91c:	0e 94 8b 18 	call	0x3116	; 0x3116 <__mulsf3>
     920:	0e 94 96 16 	call	0x2d2c	; 0x2d2c <__fixunssfsi>
     924:	70 93 99 00 	sts	0x0099, r23
     928:	60 93 98 00 	sts	0x0098, r22
        OCR1B = (unsigned int) (degree * speed * OCR1A);
     92c:	c0 91 88 00 	lds	r28, 0x0088
     930:	d0 91 89 00 	lds	r29, 0x0089
     934:	a7 01       	movw	r20, r14
     936:	96 01       	movw	r18, r12
     938:	c5 01       	movw	r24, r10
     93a:	b4 01       	movw	r22, r8
     93c:	0e 94 8b 18 	call	0x3116	; 0x3116 <__mulsf3>
     940:	6b 01       	movw	r12, r22
     942:	7c 01       	movw	r14, r24
     944:	be 01       	movw	r22, r28
     946:	80 e0       	ldi	r24, 0x00	; 0
     948:	90 e0       	ldi	r25, 0x00	; 0
     94a:	0e 94 c2 16 	call	0x2d84	; 0x2d84 <__floatunsisf>
     94e:	9b 01       	movw	r18, r22
     950:	ac 01       	movw	r20, r24
     952:	c7 01       	movw	r24, r14
     954:	b6 01       	movw	r22, r12
     956:	0e 94 8b 18 	call	0x3116	; 0x3116 <__mulsf3>
     95a:	0e 94 96 16 	call	0x2d2c	; 0x2d2c <__fixunssfsi>
     95e:	70 93 8b 00 	sts	0x008B, r23
     962:	60 93 8a 00 	sts	0x008A, r22
     966:	31 c0       	rjmp	.+98     	; 0x9ca <turn+0x11e>
    }
    
        if (dir == RIGHT) {
     968:	cd 2b       	or	r28, r29
     96a:	79 f5       	brne	.+94     	; 0x9ca <turn+0x11e>
            OCR3A = (unsigned int) (degree * speed * ICR3);
     96c:	c0 91 96 00 	lds	r28, 0x0096
     970:	d0 91 97 00 	lds	r29, 0x0097
     974:	a7 01       	movw	r20, r14
     976:	96 01       	movw	r18, r12
     978:	c5 01       	movw	r24, r10
     97a:	b4 01       	movw	r22, r8
     97c:	0e 94 8b 18 	call	0x3116	; 0x3116 <__mulsf3>
     980:	4b 01       	movw	r8, r22
     982:	5c 01       	movw	r10, r24
     984:	be 01       	movw	r22, r28
     986:	80 e0       	ldi	r24, 0x00	; 0
     988:	90 e0       	ldi	r25, 0x00	; 0
     98a:	0e 94 c2 16 	call	0x2d84	; 0x2d84 <__floatunsisf>
     98e:	9b 01       	movw	r18, r22
     990:	ac 01       	movw	r20, r24
     992:	c5 01       	movw	r24, r10
     994:	b4 01       	movw	r22, r8
     996:	0e 94 8b 18 	call	0x3116	; 0x3116 <__mulsf3>
     99a:	0e 94 96 16 	call	0x2d2c	; 0x2d2c <__fixunssfsi>
     99e:	70 93 99 00 	sts	0x0099, r23
     9a2:	60 93 98 00 	sts	0x0098, r22
            OCR1B = (unsigned int) ((float) OCR1A * speed);
     9a6:	60 91 88 00 	lds	r22, 0x0088
     9aa:	70 91 89 00 	lds	r23, 0x0089
     9ae:	80 e0       	ldi	r24, 0x00	; 0
     9b0:	90 e0       	ldi	r25, 0x00	; 0
     9b2:	0e 94 c2 16 	call	0x2d84	; 0x2d84 <__floatunsisf>
     9b6:	a7 01       	movw	r20, r14
     9b8:	96 01       	movw	r18, r12
     9ba:	0e 94 8b 18 	call	0x3116	; 0x3116 <__mulsf3>
     9be:	0e 94 96 16 	call	0x2d2c	; 0x2d2c <__fixunssfsi>
     9c2:	70 93 8b 00 	sts	0x008B, r23
     9c6:	60 93 8a 00 	sts	0x008A, r22
        }
}
     9ca:	df 91       	pop	r29
     9cc:	cf 91       	pop	r28
     9ce:	1f 91       	pop	r17
     9d0:	0f 91       	pop	r16
     9d2:	ff 90       	pop	r15
     9d4:	ef 90       	pop	r14
     9d6:	df 90       	pop	r13
     9d8:	cf 90       	pop	r12
     9da:	bf 90       	pop	r11
     9dc:	af 90       	pop	r10
     9de:	9f 90       	pop	r9
     9e0:	8f 90       	pop	r8
     9e2:	08 95       	ret

000009e4 <drive_to_puck>:

void findPuck() {
    //TODO: Implement code
}

void drive_to_puck() {
     9e4:	0f 93       	push	r16
     9e6:	1f 93       	push	r17
        getADC();
     9e8:	0e 94 81 02 	call	0x502	; 0x502 <getADC>
     9ec:	60 e0       	ldi	r22, 0x00	; 0
     9ee:	70 e0       	ldi	r23, 0x00	; 0
     9f0:	e2 e4       	ldi	r30, 0x42	; 66
     9f2:	f1 e0       	ldi	r31, 0x01	; 1
        index = 0;
     9f4:	40 e0       	ldi	r20, 0x00	; 0
     9f6:	50 e0       	ldi	r21, 0x00	; 0
        maxval = 0;
        for(int i = 0; i < 7; i++) {
     9f8:	80 e0       	ldi	r24, 0x00	; 0
     9fa:	90 e0       	ldi	r25, 0x00	; 0
            if (ADCarr[i] > maxval) {
     9fc:	21 91       	ld	r18, Z+
     9fe:	31 91       	ld	r19, Z+
     a00:	42 17       	cp	r20, r18
     a02:	53 07       	cpc	r21, r19
     a04:	14 f4       	brge	.+4      	; 0xa0a <drive_to_puck+0x26>
                index = i;
     a06:	bc 01       	movw	r22, r24
                maxval = ADCarr[i];
     a08:	a9 01       	movw	r20, r18

void drive_to_puck() {
        getADC();
        index = 0;
        maxval = 0;
        for(int i = 0; i < 7; i++) {
     a0a:	01 96       	adiw	r24, 0x01	; 1
     a0c:	87 30       	cpi	r24, 0x07	; 7
     a0e:	91 05       	cpc	r25, r1
     a10:	a9 f7       	brne	.-22     	; 0x9fc <drive_to_puck+0x18>
     a12:	50 93 3f 01 	sts	0x013F, r21
     a16:	40 93 3e 01 	sts	0x013E, r20
     a1a:	60 93 40 01 	sts	0x0140, r22
     a1e:	70 93 41 01 	sts	0x0141, r23
            if (ADCarr[i] > maxval) {
                index = i;
                maxval = ADCarr[i];
            }
        }
        switch (index) {
     a22:	63 30       	cpi	r22, 0x03	; 3
     a24:	71 05       	cpc	r23, r1
     a26:	09 f4       	brne	.+2      	; 0xa2a <drive_to_puck+0x46>
     a28:	b0 c0       	rjmp	.+352    	; 0xb8a <__stack+0x8b>
     a2a:	4c f4       	brge	.+18     	; 0xa3e <drive_to_puck+0x5a>
     a2c:	61 30       	cpi	r22, 0x01	; 1
     a2e:	71 05       	cpc	r23, r1
     a30:	09 f4       	brne	.+2      	; 0xa34 <drive_to_puck+0x50>
     a32:	64 c0       	rjmp	.+200    	; 0xafc <drive_to_puck+0x118>
     a34:	0c f0       	brlt	.+2      	; 0xa38 <drive_to_puck+0x54>
     a36:	86 c0       	rjmp	.+268    	; 0xb44 <__stack+0x45>
     a38:	67 2b       	or	r22, r23
     a3a:	61 f0       	breq	.+24     	; 0xa54 <drive_to_puck+0x70>
     a3c:	5c c1       	rjmp	.+696    	; 0xcf6 <__stack+0x1f7>
     a3e:	65 30       	cpi	r22, 0x05	; 5
     a40:	71 05       	cpc	r23, r1
     a42:	09 f4       	brne	.+2      	; 0xa46 <drive_to_puck+0x62>
     a44:	e2 c0       	rjmp	.+452    	; 0xc0a <__stack+0x10b>
     a46:	0c f4       	brge	.+2      	; 0xa4a <drive_to_puck+0x66>
     a48:	bd c0       	rjmp	.+378    	; 0xbc4 <__stack+0xc5>
     a4a:	66 30       	cpi	r22, 0x06	; 6
     a4c:	71 05       	cpc	r23, r1
     a4e:	09 f0       	breq	.+2      	; 0xa52 <drive_to_puck+0x6e>
     a50:	52 c1       	rjmp	.+676    	; 0xcf6 <__stack+0x1f7>
     a52:	ff c0       	rjmp	.+510    	; 0xc52 <__stack+0x153>
            case 0:
                puckdistance = (log(((double) ADCarr[0])) * -1.0 * 89.64) + 664.58;
     a54:	00 91 42 01 	lds	r16, 0x0142
     a58:	10 91 43 01 	lds	r17, 0x0143
     a5c:	b8 01       	movw	r22, r16
     a5e:	88 27       	eor	r24, r24
     a60:	77 fd       	sbrc	r23, 7
     a62:	80 95       	com	r24
     a64:	98 2f       	mov	r25, r24
     a66:	0e 94 c4 16 	call	0x2d88	; 0x2d88 <__floatsisf>
     a6a:	0e 94 18 18 	call	0x3030	; 0x3030 <log>
     a6e:	90 58       	subi	r25, 0x80	; 128
     a70:	2e ea       	ldi	r18, 0xAE	; 174
     a72:	37 e4       	ldi	r19, 0x47	; 71
     a74:	43 eb       	ldi	r20, 0xB3	; 179
     a76:	52 e4       	ldi	r21, 0x42	; 66
     a78:	0e 94 8b 18 	call	0x3116	; 0x3116 <__mulsf3>
     a7c:	2f e1       	ldi	r18, 0x1F	; 31
     a7e:	35 e2       	ldi	r19, 0x25	; 37
     a80:	46 e2       	ldi	r20, 0x26	; 38
     a82:	54 e4       	ldi	r21, 0x44	; 68
     a84:	0e 94 2b 15 	call	0x2a56	; 0x2a56 <__addsf3>
     a88:	60 93 bc 01 	sts	0x01BC, r22
     a8c:	70 93 bd 01 	sts	0x01BD, r23
     a90:	80 93 be 01 	sts	0x01BE, r24
     a94:	90 93 bf 01 	sts	0x01BF, r25
                diff = ADCarr[0] - ADCarr[6];
     a98:	80 91 4e 01 	lds	r24, 0x014E
     a9c:	90 91 4f 01 	lds	r25, 0x014F
     aa0:	b8 01       	movw	r22, r16
     aa2:	68 1b       	sub	r22, r24
     aa4:	79 0b       	sbc	r23, r25
     aa6:	70 93 3d 01 	sts	0x013D, r23
     aaa:	60 93 3c 01 	sts	0x013C, r22
                deg = exp(-1.0*(fabs((float)diff))/40.0);
     aae:	88 27       	eor	r24, r24
     ab0:	77 fd       	sbrc	r23, 7
     ab2:	80 95       	com	r24
     ab4:	98 2f       	mov	r25, r24
     ab6:	0e 94 c4 16 	call	0x2d88	; 0x2d88 <__floatsisf>
     aba:	dc 01       	movw	r26, r24
     abc:	cb 01       	movw	r24, r22
     abe:	bf 77       	andi	r27, 0x7F	; 127
     ac0:	bc 01       	movw	r22, r24
     ac2:	cd 01       	movw	r24, r26
     ac4:	90 58       	subi	r25, 0x80	; 128
     ac6:	20 e0       	ldi	r18, 0x00	; 0
     ac8:	30 e0       	ldi	r19, 0x00	; 0
     aca:	40 e2       	ldi	r20, 0x20	; 32
     acc:	52 e4       	ldi	r21, 0x42	; 66
     ace:	0e 94 f8 15 	call	0x2bf0	; 0x2bf0 <__divsf3>
     ad2:	0e 94 65 16 	call	0x2cca	; 0x2cca <exp>
     ad6:	8b 01       	movw	r16, r22
     ad8:	9c 01       	movw	r18, r24
     ada:	60 93 38 01 	sts	0x0138, r22
     ade:	70 93 39 01 	sts	0x0139, r23
     ae2:	80 93 3a 01 	sts	0x013A, r24
     ae6:	90 93 3b 01 	sts	0x013B, r25
                turn(RIGHT,1.0,deg);
     aea:	40 e0       	ldi	r20, 0x00	; 0
     aec:	50 e0       	ldi	r21, 0x00	; 0
     aee:	60 e8       	ldi	r22, 0x80	; 128
     af0:	7f e3       	ldi	r23, 0x3F	; 63
     af2:	80 e0       	ldi	r24, 0x00	; 0
     af4:	90 e0       	ldi	r25, 0x00	; 0
     af6:	0e 94 56 04 	call	0x8ac	; 0x8ac <turn>
                //m_green(ON);
                //m_red(OFF);
                break;
     afa:	fd c0       	rjmp	.+506    	; 0xcf6 <__stack+0x1f7>
            case 1:
                if (ADCarr[1] > 800 && ADCarr[2] > 800) {
     afc:	80 91 44 01 	lds	r24, 0x0144
     b00:	90 91 45 01 	lds	r25, 0x0145
     b04:	81 32       	cpi	r24, 0x21	; 33
     b06:	93 40       	sbci	r25, 0x03	; 3
     b08:	84 f0       	brlt	.+32     	; 0xb2a <__stack+0x2b>
     b0a:	80 91 46 01 	lds	r24, 0x0146
     b0e:	90 91 47 01 	lds	r25, 0x0147
     b12:	81 32       	cpi	r24, 0x21	; 33
     b14:	93 40       	sbci	r25, 0x03	; 3
     b16:	4c f0       	brlt	.+18     	; 0xb2a <__stack+0x2b>
                    rotate(LEFT,1);
     b18:	40 e0       	ldi	r20, 0x00	; 0
     b1a:	50 e0       	ldi	r21, 0x00	; 0
     b1c:	60 e8       	ldi	r22, 0x80	; 128
     b1e:	7f e3       	ldi	r23, 0x3F	; 63
     b20:	81 e0       	ldi	r24, 0x01	; 1
     b22:	90 e0       	ldi	r25, 0x00	; 0
     b24:	0e 94 3c 04 	call	0x878	; 0x878 <rotate>
     b28:	e6 c0       	rjmp	.+460    	; 0xcf6 <__stack+0x1f7>
                }else {
                turn(RIGHT,1.0,0.05);
     b2a:	0d ec       	ldi	r16, 0xCD	; 205
     b2c:	1c ec       	ldi	r17, 0xCC	; 204
     b2e:	2c e4       	ldi	r18, 0x4C	; 76
     b30:	3d e3       	ldi	r19, 0x3D	; 61
     b32:	40 e0       	ldi	r20, 0x00	; 0
     b34:	50 e0       	ldi	r21, 0x00	; 0
     b36:	60 e8       	ldi	r22, 0x80	; 128
     b38:	7f e3       	ldi	r23, 0x3F	; 63
     b3a:	80 e0       	ldi	r24, 0x00	; 0
     b3c:	90 e0       	ldi	r25, 0x00	; 0
     b3e:	0e 94 56 04 	call	0x8ac	; 0x8ac <turn>
     b42:	d9 c0       	rjmp	.+434    	; 0xcf6 <__stack+0x1f7>
                }
                break;
            case 2:
				if (ADCarr[1] > 800 && ADCarr[2] > 800) {
     b44:	80 91 44 01 	lds	r24, 0x0144
     b48:	90 91 45 01 	lds	r25, 0x0145
     b4c:	81 32       	cpi	r24, 0x21	; 33
     b4e:	93 40       	sbci	r25, 0x03	; 3
     b50:	84 f0       	brlt	.+32     	; 0xb72 <__stack+0x73>
     b52:	80 91 46 01 	lds	r24, 0x0146
     b56:	90 91 47 01 	lds	r25, 0x0147
     b5a:	81 32       	cpi	r24, 0x21	; 33
     b5c:	93 40       	sbci	r25, 0x03	; 3
     b5e:	4c f0       	brlt	.+18     	; 0xb72 <__stack+0x73>
					rotate(LEFT,1);
     b60:	40 e0       	ldi	r20, 0x00	; 0
     b62:	50 e0       	ldi	r21, 0x00	; 0
     b64:	60 e8       	ldi	r22, 0x80	; 128
     b66:	7f e3       	ldi	r23, 0x3F	; 63
     b68:	81 e0       	ldi	r24, 0x01	; 1
     b6a:	90 e0       	ldi	r25, 0x00	; 0
     b6c:	0e 94 3c 04 	call	0x878	; 0x878 <rotate>
     b70:	c2 c0       	rjmp	.+388    	; 0xcf6 <__stack+0x1f7>
					}else {
					turn(RIGHT,1.0,0);
     b72:	00 e0       	ldi	r16, 0x00	; 0
     b74:	10 e0       	ldi	r17, 0x00	; 0
     b76:	98 01       	movw	r18, r16
     b78:	40 e0       	ldi	r20, 0x00	; 0
     b7a:	50 e0       	ldi	r21, 0x00	; 0
     b7c:	60 e8       	ldi	r22, 0x80	; 128
     b7e:	7f e3       	ldi	r23, 0x3F	; 63
     b80:	80 e0       	ldi	r24, 0x00	; 0
     b82:	90 e0       	ldi	r25, 0x00	; 0
     b84:	0e 94 56 04 	call	0x8ac	; 0x8ac <turn>
     b88:	b6 c0       	rjmp	.+364    	; 0xcf6 <__stack+0x1f7>
				}
				break;
            case 3:
                if (ADCarr[2] > ADCarr[4]) {
     b8a:	20 91 46 01 	lds	r18, 0x0146
     b8e:	30 91 47 01 	lds	r19, 0x0147
     b92:	80 91 4a 01 	lds	r24, 0x014A
     b96:	90 91 4b 01 	lds	r25, 0x014B
     b9a:	82 17       	cp	r24, r18
     b9c:	93 07       	cpc	r25, r19
     b9e:	4c f4       	brge	.+18     	; 0xbb2 <__stack+0xb3>
                    rotate(RIGHT, 1);
     ba0:	40 e0       	ldi	r20, 0x00	; 0
     ba2:	50 e0       	ldi	r21, 0x00	; 0
     ba4:	60 e8       	ldi	r22, 0x80	; 128
     ba6:	7f e3       	ldi	r23, 0x3F	; 63
     ba8:	80 e0       	ldi	r24, 0x00	; 0
     baa:	90 e0       	ldi	r25, 0x00	; 0
     bac:	0e 94 3c 04 	call	0x878	; 0x878 <rotate>
     bb0:	a2 c0       	rjmp	.+324    	; 0xcf6 <__stack+0x1f7>
                }
                else {
                    rotate(LEFT, 1);
     bb2:	40 e0       	ldi	r20, 0x00	; 0
     bb4:	50 e0       	ldi	r21, 0x00	; 0
     bb6:	60 e8       	ldi	r22, 0x80	; 128
     bb8:	7f e3       	ldi	r23, 0x3F	; 63
     bba:	81 e0       	ldi	r24, 0x01	; 1
     bbc:	90 e0       	ldi	r25, 0x00	; 0
     bbe:	0e 94 3c 04 	call	0x878	; 0x878 <rotate>
     bc2:	99 c0       	rjmp	.+306    	; 0xcf6 <__stack+0x1f7>
                }
                break;
            case 4:
				if (ADCarr[4] > 800 && ADCarr[5] > 800) {
     bc4:	80 91 4a 01 	lds	r24, 0x014A
     bc8:	90 91 4b 01 	lds	r25, 0x014B
     bcc:	81 32       	cpi	r24, 0x21	; 33
     bce:	93 40       	sbci	r25, 0x03	; 3
     bd0:	84 f0       	brlt	.+32     	; 0xbf2 <__stack+0xf3>
     bd2:	80 91 4c 01 	lds	r24, 0x014C
     bd6:	90 91 4d 01 	lds	r25, 0x014D
     bda:	81 32       	cpi	r24, 0x21	; 33
     bdc:	93 40       	sbci	r25, 0x03	; 3
     bde:	4c f0       	brlt	.+18     	; 0xbf2 <__stack+0xf3>
					rotate(LEFT,1);
     be0:	40 e0       	ldi	r20, 0x00	; 0
     be2:	50 e0       	ldi	r21, 0x00	; 0
     be4:	60 e8       	ldi	r22, 0x80	; 128
     be6:	7f e3       	ldi	r23, 0x3F	; 63
     be8:	81 e0       	ldi	r24, 0x01	; 1
     bea:	90 e0       	ldi	r25, 0x00	; 0
     bec:	0e 94 3c 04 	call	0x878	; 0x878 <rotate>
     bf0:	82 c0       	rjmp	.+260    	; 0xcf6 <__stack+0x1f7>
				}
				else {
					turn(LEFT,1.0,0);
     bf2:	00 e0       	ldi	r16, 0x00	; 0
     bf4:	10 e0       	ldi	r17, 0x00	; 0
     bf6:	98 01       	movw	r18, r16
     bf8:	40 e0       	ldi	r20, 0x00	; 0
     bfa:	50 e0       	ldi	r21, 0x00	; 0
     bfc:	60 e8       	ldi	r22, 0x80	; 128
     bfe:	7f e3       	ldi	r23, 0x3F	; 63
     c00:	81 e0       	ldi	r24, 0x01	; 1
     c02:	90 e0       	ldi	r25, 0x00	; 0
     c04:	0e 94 56 04 	call	0x8ac	; 0x8ac <turn>
     c08:	76 c0       	rjmp	.+236    	; 0xcf6 <__stack+0x1f7>
				}
				break;
            case 5:
				if (ADCarr[4] > 800 && ADCarr[5] > 800) {
     c0a:	80 91 4a 01 	lds	r24, 0x014A
     c0e:	90 91 4b 01 	lds	r25, 0x014B
     c12:	81 32       	cpi	r24, 0x21	; 33
     c14:	93 40       	sbci	r25, 0x03	; 3
     c16:	84 f0       	brlt	.+32     	; 0xc38 <__stack+0x139>
     c18:	80 91 4c 01 	lds	r24, 0x014C
     c1c:	90 91 4d 01 	lds	r25, 0x014D
     c20:	81 32       	cpi	r24, 0x21	; 33
     c22:	93 40       	sbci	r25, 0x03	; 3
     c24:	4c f0       	brlt	.+18     	; 0xc38 <__stack+0x139>
					rotate(LEFT,1);
     c26:	40 e0       	ldi	r20, 0x00	; 0
     c28:	50 e0       	ldi	r21, 0x00	; 0
     c2a:	60 e8       	ldi	r22, 0x80	; 128
     c2c:	7f e3       	ldi	r23, 0x3F	; 63
     c2e:	81 e0       	ldi	r24, 0x01	; 1
     c30:	90 e0       	ldi	r25, 0x00	; 0
     c32:	0e 94 3c 04 	call	0x878	; 0x878 <rotate>
     c36:	5f c0       	rjmp	.+190    	; 0xcf6 <__stack+0x1f7>
					}else {
					turn(LEFT,1.0,0.15);
     c38:	0a e9       	ldi	r16, 0x9A	; 154
     c3a:	19 e9       	ldi	r17, 0x99	; 153
     c3c:	29 e1       	ldi	r18, 0x19	; 25
     c3e:	3e e3       	ldi	r19, 0x3E	; 62
     c40:	40 e0       	ldi	r20, 0x00	; 0
     c42:	50 e0       	ldi	r21, 0x00	; 0
     c44:	60 e8       	ldi	r22, 0x80	; 128
     c46:	7f e3       	ldi	r23, 0x3F	; 63
     c48:	81 e0       	ldi	r24, 0x01	; 1
     c4a:	90 e0       	ldi	r25, 0x00	; 0
     c4c:	0e 94 56 04 	call	0x8ac	; 0x8ac <turn>
     c50:	52 c0       	rjmp	.+164    	; 0xcf6 <__stack+0x1f7>
				}
				break;
            case 6:
                puckdistance = (log(((double) ADCarr[0])) * -1.0 * 89.64) + 664.58;
     c52:	00 91 42 01 	lds	r16, 0x0142
     c56:	10 91 43 01 	lds	r17, 0x0143
     c5a:	b8 01       	movw	r22, r16
     c5c:	88 27       	eor	r24, r24
     c5e:	77 fd       	sbrc	r23, 7
     c60:	80 95       	com	r24
     c62:	98 2f       	mov	r25, r24
     c64:	0e 94 c4 16 	call	0x2d88	; 0x2d88 <__floatsisf>
     c68:	0e 94 18 18 	call	0x3030	; 0x3030 <log>
     c6c:	90 58       	subi	r25, 0x80	; 128
     c6e:	2e ea       	ldi	r18, 0xAE	; 174
     c70:	37 e4       	ldi	r19, 0x47	; 71
     c72:	43 eb       	ldi	r20, 0xB3	; 179
     c74:	52 e4       	ldi	r21, 0x42	; 66
     c76:	0e 94 8b 18 	call	0x3116	; 0x3116 <__mulsf3>
     c7a:	2f e1       	ldi	r18, 0x1F	; 31
     c7c:	35 e2       	ldi	r19, 0x25	; 37
     c7e:	46 e2       	ldi	r20, 0x26	; 38
     c80:	54 e4       	ldi	r21, 0x44	; 68
     c82:	0e 94 2b 15 	call	0x2a56	; 0x2a56 <__addsf3>
     c86:	60 93 bc 01 	sts	0x01BC, r22
     c8a:	70 93 bd 01 	sts	0x01BD, r23
     c8e:	80 93 be 01 	sts	0x01BE, r24
     c92:	90 93 bf 01 	sts	0x01BF, r25
                diff = ADCarr[6] - ADCarr[0];
     c96:	60 91 4e 01 	lds	r22, 0x014E
     c9a:	70 91 4f 01 	lds	r23, 0x014F
     c9e:	60 1b       	sub	r22, r16
     ca0:	71 0b       	sbc	r23, r17
     ca2:	70 93 3d 01 	sts	0x013D, r23
     ca6:	60 93 3c 01 	sts	0x013C, r22
                deg = exp(-1.0*(fabs((float)diff))/70.0);
     caa:	88 27       	eor	r24, r24
     cac:	77 fd       	sbrc	r23, 7
     cae:	80 95       	com	r24
     cb0:	98 2f       	mov	r25, r24
     cb2:	0e 94 c4 16 	call	0x2d88	; 0x2d88 <__floatsisf>
     cb6:	dc 01       	movw	r26, r24
     cb8:	cb 01       	movw	r24, r22
     cba:	bf 77       	andi	r27, 0x7F	; 127
     cbc:	bc 01       	movw	r22, r24
     cbe:	cd 01       	movw	r24, r26
     cc0:	90 58       	subi	r25, 0x80	; 128
     cc2:	20 e0       	ldi	r18, 0x00	; 0
     cc4:	30 e0       	ldi	r19, 0x00	; 0
     cc6:	4c e8       	ldi	r20, 0x8C	; 140
     cc8:	52 e4       	ldi	r21, 0x42	; 66
     cca:	0e 94 f8 15 	call	0x2bf0	; 0x2bf0 <__divsf3>
     cce:	0e 94 65 16 	call	0x2cca	; 0x2cca <exp>
     cd2:	8b 01       	movw	r16, r22
     cd4:	9c 01       	movw	r18, r24
     cd6:	60 93 38 01 	sts	0x0138, r22
     cda:	70 93 39 01 	sts	0x0139, r23
     cde:	80 93 3a 01 	sts	0x013A, r24
     ce2:	90 93 3b 01 	sts	0x013B, r25
                turn(LEFT,1.0,deg);
     ce6:	40 e0       	ldi	r20, 0x00	; 0
     ce8:	50 e0       	ldi	r21, 0x00	; 0
     cea:	60 e8       	ldi	r22, 0x80	; 128
     cec:	7f e3       	ldi	r23, 0x3F	; 63
     cee:	81 e0       	ldi	r24, 0x01	; 1
     cf0:	90 e0       	ldi	r25, 0x00	; 0
     cf2:	0e 94 56 04 	call	0x8ac	; 0x8ac <turn>
                //m_red(ON);
                //m_green(ON);
                break;
        }
    //}
}
     cf6:	1f 91       	pop	r17
     cf8:	0f 91       	pop	r16
     cfa:	08 95       	ret

00000cfc <drive_to_point2>:
    float angle_dif = 0.0;
    float distance = 0.0;
    float spd = 0.0;
    int dir = 0;

void drive_to_point2(int x, int y) {
     cfc:	4f 92       	push	r4
     cfe:	5f 92       	push	r5
     d00:	6f 92       	push	r6
     d02:	7f 92       	push	r7
     d04:	8f 92       	push	r8
     d06:	9f 92       	push	r9
     d08:	af 92       	push	r10
     d0a:	bf 92       	push	r11
     d0c:	cf 92       	push	r12
     d0e:	df 92       	push	r13
     d10:	ef 92       	push	r14
     d12:	ff 92       	push	r15
     d14:	0f 93       	push	r16
     d16:	1f 93       	push	r17
     d18:	cf 93       	push	r28
     d1a:	df 93       	push	r29
     d1c:	ec 01       	movw	r28, r24
     d1e:	7b 01       	movw	r14, r22
    //m_green(ON);
    //m_wait(500);

    //while(1) {
        //localize(data);
        localize(data);
     d20:	8c ec       	ldi	r24, 0xCC	; 204
     d22:	91 e0       	ldi	r25, 0x01	; 1
     d24:	0e 94 f5 0c 	call	0x19ea	; 0x19ea <localize>
        //Set angle difference to be between -180 and 180
        angle_dif = (((int) (((data[2] + 90.0) * -1.0) - (float)(atan2((double)y-data[1],(double)x-data[0]))*180.0/3.14)) + 900) % 360 - 180;
     d28:	be 01       	movw	r22, r28
     d2a:	88 27       	eor	r24, r24
     d2c:	77 fd       	sbrc	r23, 7
     d2e:	80 95       	com	r24
     d30:	98 2f       	mov	r25, r24
     d32:	0e 94 c4 16 	call	0x2d88	; 0x2d88 <__floatsisf>
     d36:	20 91 cc 01 	lds	r18, 0x01CC
     d3a:	30 91 cd 01 	lds	r19, 0x01CD
     d3e:	40 91 ce 01 	lds	r20, 0x01CE
     d42:	50 91 cf 01 	lds	r21, 0x01CF
     d46:	0e 94 2a 15 	call	0x2a54	; 0x2a54 <__subsf3>
     d4a:	06 2f       	mov	r16, r22
     d4c:	17 2f       	mov	r17, r23
     d4e:	d8 2f       	mov	r29, r24
     d50:	c9 2f       	mov	r28, r25
     d52:	b7 01       	movw	r22, r14
     d54:	88 27       	eor	r24, r24
     d56:	77 fd       	sbrc	r23, 7
     d58:	80 95       	com	r24
     d5a:	98 2f       	mov	r25, r24
     d5c:	0e 94 c4 16 	call	0x2d88	; 0x2d88 <__floatsisf>
     d60:	20 91 d0 01 	lds	r18, 0x01D0
     d64:	30 91 d1 01 	lds	r19, 0x01D1
     d68:	40 91 d2 01 	lds	r20, 0x01D2
     d6c:	50 91 d3 01 	lds	r21, 0x01D3
     d70:	0e 94 2a 15 	call	0x2a54	; 0x2a54 <__subsf3>
     d74:	c6 2e       	mov	r12, r22
     d76:	d7 2e       	mov	r13, r23
     d78:	e8 2e       	mov	r14, r24
     d7a:	f9 2e       	mov	r15, r25
     d7c:	20 2f       	mov	r18, r16
     d7e:	31 2f       	mov	r19, r17
     d80:	4d 2f       	mov	r20, r29
     d82:	5c 2f       	mov	r21, r28
     d84:	6c 2d       	mov	r22, r12
     d86:	7d 2d       	mov	r23, r13
     d88:	8e 2d       	mov	r24, r14
     d8a:	9f 2d       	mov	r25, r15
     d8c:	0e 94 9e 15 	call	0x2b3c	; 0x2b3c <atan2>
     d90:	2b 01       	movw	r4, r22
     d92:	3c 01       	movw	r6, r24
     d94:	20 e0       	ldi	r18, 0x00	; 0
     d96:	30 e0       	ldi	r19, 0x00	; 0
     d98:	44 eb       	ldi	r20, 0xB4	; 180
     d9a:	52 e4       	ldi	r21, 0x42	; 66
     d9c:	60 91 d4 01 	lds	r22, 0x01D4
     da0:	70 91 d5 01 	lds	r23, 0x01D5
     da4:	80 91 d6 01 	lds	r24, 0x01D6
     da8:	90 91 d7 01 	lds	r25, 0x01D7
     dac:	0e 94 2b 15 	call	0x2a56	; 0x2a56 <__addsf3>
     db0:	4b 01       	movw	r8, r22
     db2:	5c 01       	movw	r10, r24
     db4:	b7 fa       	bst	r11, 7
     db6:	b0 94       	com	r11
     db8:	b7 f8       	bld	r11, 7
     dba:	b0 94       	com	r11
     dbc:	20 e0       	ldi	r18, 0x00	; 0
     dbe:	30 e0       	ldi	r19, 0x00	; 0
     dc0:	44 e3       	ldi	r20, 0x34	; 52
     dc2:	53 e4       	ldi	r21, 0x43	; 67
     dc4:	c3 01       	movw	r24, r6
     dc6:	b2 01       	movw	r22, r4
     dc8:	0e 94 8b 18 	call	0x3116	; 0x3116 <__mulsf3>
     dcc:	23 ec       	ldi	r18, 0xC3	; 195
     dce:	35 ef       	ldi	r19, 0xF5	; 245
     dd0:	48 e4       	ldi	r20, 0x48	; 72
     dd2:	50 e4       	ldi	r21, 0x40	; 64
     dd4:	0e 94 f8 15 	call	0x2bf0	; 0x2bf0 <__divsf3>
     dd8:	9b 01       	movw	r18, r22
     dda:	ac 01       	movw	r20, r24
     ddc:	c5 01       	movw	r24, r10
     dde:	b4 01       	movw	r22, r8
     de0:	0e 94 2a 15 	call	0x2a54	; 0x2a54 <__subsf3>
     de4:	0e 94 91 16 	call	0x2d22	; 0x2d22 <__fixsfsi>
     de8:	cb 01       	movw	r24, r22
     dea:	8c 57       	subi	r24, 0x7C	; 124
     dec:	9c 4f       	sbci	r25, 0xFC	; 252
     dee:	68 e6       	ldi	r22, 0x68	; 104
     df0:	71 e0       	ldi	r23, 0x01	; 1
     df2:	0e 94 5f 19 	call	0x32be	; 0x32be <__divmodhi4>
     df6:	bc 01       	movw	r22, r24
     df8:	64 5b       	subi	r22, 0xB4	; 180
     dfa:	71 09       	sbc	r23, r1
     dfc:	88 27       	eor	r24, r24
     dfe:	77 fd       	sbrc	r23, 7
     e00:	80 95       	com	r24
     e02:	98 2f       	mov	r25, r24
     e04:	0e 94 c4 16 	call	0x2d88	; 0x2d88 <__floatsisf>
     e08:	4b 01       	movw	r8, r22
     e0a:	5c 01       	movw	r10, r24
     e0c:	60 93 22 01 	sts	0x0122, r22
     e10:	70 93 23 01 	sts	0x0123, r23
     e14:	80 93 24 01 	sts	0x0124, r24
     e18:	90 93 25 01 	sts	0x0125, r25
//         if (abs(angle_dif) < 7) {
//             shoot();
//             //game_pause();
               state = 2;
     e1c:	82 e0       	ldi	r24, 0x02	; 2
     e1e:	90 e0       	ldi	r25, 0x00	; 0
     e20:	90 93 55 01 	sts	0x0155, r25
     e24:	80 93 54 01 	sts	0x0154, r24
//         }
        if (angle_dif > 0) {
     e28:	20 e0       	ldi	r18, 0x00	; 0
     e2a:	30 e0       	ldi	r19, 0x00	; 0
     e2c:	a9 01       	movw	r20, r18
     e2e:	c5 01       	movw	r24, r10
     e30:	b4 01       	movw	r22, r8
     e32:	0e 94 d2 17 	call	0x2fa4	; 0x2fa4 <__gesf2>
     e36:	18 16       	cp	r1, r24
     e38:	2c f4       	brge	.+10     	; 0xe44 <drive_to_point2+0x148>
            dir = RIGHT;
     e3a:	10 92 19 01 	sts	0x0119, r1
     e3e:	10 92 18 01 	sts	0x0118, r1
     e42:	06 c0       	rjmp	.+12     	; 0xe50 <drive_to_point2+0x154>
        }
        else {
            dir = LEFT;
     e44:	81 e0       	ldi	r24, 0x01	; 1
     e46:	90 e0       	ldi	r25, 0x00	; 0
     e48:	90 93 19 01 	sts	0x0119, r25
     e4c:	80 93 18 01 	sts	0x0118, r24
        }
       
        //Angle of 180 corresponds to deg of 0; angle of 0 corresponds to deg of 1
        deg = exp(-1.0* ((double)fabs(angle_dif))/30.0);
     e50:	e8 94       	clt
     e52:	b7 f8       	bld	r11, 7
     e54:	c5 01       	movw	r24, r10
     e56:	b4 01       	movw	r22, r8
     e58:	90 58       	subi	r25, 0x80	; 128
     e5a:	20 e0       	ldi	r18, 0x00	; 0
     e5c:	30 e0       	ldi	r19, 0x00	; 0
     e5e:	40 ef       	ldi	r20, 0xF0	; 240
     e60:	51 e4       	ldi	r21, 0x41	; 65
     e62:	0e 94 f8 15 	call	0x2bf0	; 0x2bf0 <__divsf3>
     e66:	0e 94 65 16 	call	0x2cca	; 0x2cca <exp>
     e6a:	4b 01       	movw	r8, r22
     e6c:	5c 01       	movw	r10, r24
     e6e:	60 93 38 01 	sts	0x0138, r22
     e72:	70 93 39 01 	sts	0x0139, r23
     e76:	80 93 3a 01 	sts	0x013A, r24
     e7a:	90 93 3b 01 	sts	0x013B, r25
        //Set distance
        distance = (int) sqrt(((double)y - data[1])*((double)y - data[1])+((double)x - data[0])*((double)x - data[0]));
     e7e:	2c 2d       	mov	r18, r12
     e80:	3d 2d       	mov	r19, r13
     e82:	4e 2d       	mov	r20, r14
     e84:	5f 2d       	mov	r21, r15
     e86:	6c 2d       	mov	r22, r12
     e88:	7d 2d       	mov	r23, r13
     e8a:	8e 2d       	mov	r24, r14
     e8c:	9f 2d       	mov	r25, r15
     e8e:	0e 94 8b 18 	call	0x3116	; 0x3116 <__mulsf3>
     e92:	6b 01       	movw	r12, r22
     e94:	7c 01       	movw	r14, r24
     e96:	20 2f       	mov	r18, r16
     e98:	31 2f       	mov	r19, r17
     e9a:	4d 2f       	mov	r20, r29
     e9c:	5c 2f       	mov	r21, r28
     e9e:	60 2f       	mov	r22, r16
     ea0:	71 2f       	mov	r23, r17
     ea2:	8d 2f       	mov	r24, r29
     ea4:	9c 2f       	mov	r25, r28
     ea6:	0e 94 8b 18 	call	0x3116	; 0x3116 <__mulsf3>
     eaa:	9b 01       	movw	r18, r22
     eac:	ac 01       	movw	r20, r24
     eae:	c7 01       	movw	r24, r14
     eb0:	b6 01       	movw	r22, r12
     eb2:	0e 94 2b 15 	call	0x2a56	; 0x2a56 <__addsf3>
     eb6:	0e 94 f8 18 	call	0x31f0	; 0x31f0 <sqrt>
     eba:	0e 94 91 16 	call	0x2d22	; 0x2d22 <__fixsfsi>
     ebe:	88 27       	eor	r24, r24
     ec0:	77 fd       	sbrc	r23, 7
     ec2:	80 95       	com	r24
     ec4:	98 2f       	mov	r25, r24
     ec6:	0e 94 c4 16 	call	0x2d88	; 0x2d88 <__floatsisf>
     eca:	60 93 1e 01 	sts	0x011E, r22
     ece:	70 93 1f 01 	sts	0x011F, r23
     ed2:	80 93 20 01 	sts	0x0120, r24
     ed6:	90 93 21 01 	sts	0x0121, r25
        spd = ((float)distance)/70.0;
     eda:	20 e0       	ldi	r18, 0x00	; 0
     edc:	30 e0       	ldi	r19, 0x00	; 0
     ede:	4c e8       	ldi	r20, 0x8C	; 140
     ee0:	52 e4       	ldi	r21, 0x42	; 66
     ee2:	0e 94 f8 15 	call	0x2bf0	; 0x2bf0 <__divsf3>
     ee6:	e6 2f       	mov	r30, r22
     ee8:	f7 2f       	mov	r31, r23
     eea:	46 2f       	mov	r20, r22
     eec:	57 2f       	mov	r21, r23
     eee:	68 2f       	mov	r22, r24
     ef0:	79 2f       	mov	r23, r25
     ef2:	40 93 1a 01 	sts	0x011A, r20
     ef6:	50 93 1b 01 	sts	0x011B, r21
     efa:	60 93 1c 01 	sts	0x011C, r22
     efe:	70 93 1d 01 	sts	0x011D, r23
//                 m_usb_tx_char('\n');  //MATLAB serial command reads 1 line at a time
//             }
           
        //*********************************************************************************
       
        if (spd > speed_cap) spd = speed_cap;
     f02:	c0 90 00 01 	lds	r12, 0x0100
     f06:	d0 90 01 01 	lds	r13, 0x0101
     f0a:	e0 90 02 01 	lds	r14, 0x0102
     f0e:	f0 90 03 01 	lds	r15, 0x0103
     f12:	a7 01       	movw	r20, r14
     f14:	96 01       	movw	r18, r12
     f16:	6e 2f       	mov	r22, r30
     f18:	7f 2f       	mov	r23, r31
     f1a:	0e 94 d2 17 	call	0x2fa4	; 0x2fa4 <__gesf2>
     f1e:	18 16       	cp	r1, r24
     f20:	44 f4       	brge	.+16     	; 0xf32 <drive_to_point2+0x236>
     f22:	c0 92 1a 01 	sts	0x011A, r12
     f26:	d0 92 1b 01 	sts	0x011B, r13
     f2a:	e0 92 1c 01 	sts	0x011C, r14
     f2e:	f0 92 1d 01 	sts	0x011D, r15
        turn(dir, 1, deg);
     f32:	95 01       	movw	r18, r10
     f34:	84 01       	movw	r16, r8
     f36:	40 e0       	ldi	r20, 0x00	; 0
     f38:	50 e0       	ldi	r21, 0x00	; 0
     f3a:	60 e8       	ldi	r22, 0x80	; 128
     f3c:	7f e3       	ldi	r23, 0x3F	; 63
     f3e:	80 91 18 01 	lds	r24, 0x0118
     f42:	90 91 19 01 	lds	r25, 0x0119
     f46:	0e 94 56 04 	call	0x8ac	; 0x8ac <turn>
//         reverse();
//         OCR1B = 0;
//         OCR3A = 0;
//         state = 0;
//     }
}
     f4a:	df 91       	pop	r29
     f4c:	cf 91       	pop	r28
     f4e:	1f 91       	pop	r17
     f50:	0f 91       	pop	r16
     f52:	ff 90       	pop	r15
     f54:	ef 90       	pop	r14
     f56:	df 90       	pop	r13
     f58:	cf 90       	pop	r12
     f5a:	bf 90       	pop	r11
     f5c:	af 90       	pop	r10
     f5e:	9f 90       	pop	r9
     f60:	8f 90       	pop	r8
     f62:	7f 90       	pop	r7
     f64:	6f 90       	pop	r6
     f66:	5f 90       	pop	r5
     f68:	4f 90       	pop	r4
     f6a:	08 95       	ret

00000f6c <drive_to_goalA>:

void drive_to_goalA() {
    drive_to_point2(GOALAX,GOALAY);
     f6c:	60 e0       	ldi	r22, 0x00	; 0
     f6e:	70 e0       	ldi	r23, 0x00	; 0
     f70:	83 e8       	ldi	r24, 0x83	; 131
     f72:	9f ef       	ldi	r25, 0xFF	; 255
     f74:	0e 94 7e 06 	call	0xcfc	; 0xcfc <drive_to_point2>
     f78:	08 95       	ret

00000f7a <drive_to_goalB>:
}

void drive_to_goalB() {
    drive_to_point2(GOALBX,GOALBY);
     f7a:	60 e0       	ldi	r22, 0x00	; 0
     f7c:	70 e0       	ldi	r23, 0x00	; 0
     f7e:	8d e7       	ldi	r24, 0x7D	; 125
     f80:	90 e0       	ldi	r25, 0x00	; 0
     f82:	0e 94 7e 06 	call	0xcfc	; 0xcfc <drive_to_point2>
     f86:	08 95       	ret

00000f88 <game_pause>:
    clear(DDRB,7);
    clear(PORTB,0);
}

void game_pause() {
    OCR1B = 0;
     f88:	10 92 8b 00 	sts	0x008B, r1
     f8c:	10 92 8a 00 	sts	0x008A, r1
    OCR3A = 0;
     f90:	10 92 99 00 	sts	0x0099, r1
     f94:	10 92 98 00 	sts	0x0098, r1
     f98:	08 95       	ret

00000f9a <comm_test>:
    //set(PORTB,2);
    //set(PORTB,3);
}

void comm_test() {
    set(PORTD,5);
     f9a:	5d 9a       	sbi	0x0b, 5	; 11
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     f9c:	2f ef       	ldi	r18, 0xFF	; 255
     f9e:	89 e6       	ldi	r24, 0x69	; 105
     fa0:	98 e1       	ldi	r25, 0x18	; 24
     fa2:	21 50       	subi	r18, 0x01	; 1
     fa4:	80 40       	sbci	r24, 0x00	; 0
     fa6:	90 40       	sbci	r25, 0x00	; 0
     fa8:	e1 f7       	brne	.-8      	; 0xfa2 <comm_test+0x8>
     faa:	00 c0       	rjmp	.+0      	; 0xfac <comm_test+0x12>
     fac:	00 00       	nop
    m_wait(500);
    clear(PORTD,5);
     fae:	5d 98       	cbi	0x0b, 5	; 11
     fb0:	2f ef       	ldi	r18, 0xFF	; 255
     fb2:	89 e6       	ldi	r24, 0x69	; 105
     fb4:	98 e1       	ldi	r25, 0x18	; 24
     fb6:	21 50       	subi	r18, 0x01	; 1
     fb8:	80 40       	sbci	r24, 0x00	; 0
     fba:	90 40       	sbci	r25, 0x00	; 0
     fbc:	e1 f7       	brne	.-8      	; 0xfb6 <comm_test+0x1c>
     fbe:	00 c0       	rjmp	.+0      	; 0xfc0 <comm_test+0x26>
     fc0:	00 00       	nop
    m_wait(500);
    state = 0;
     fc2:	10 92 55 01 	sts	0x0155, r1
     fc6:	10 92 54 01 	sts	0x0154, r1
     fca:	08 95       	ret

00000fcc <main>:
float prevy = 0.0;
*/
int main(void)
{
	//goal side
	clear(DDRB,1);
     fcc:	21 98       	cbi	0x04, 1	; 4
	clear(PORTB,1);
     fce:	29 98       	cbi	0x05, 1	; 5
	if (check(PINB,1)) {
     fd0:	19 9b       	sbis	0x03, 1	; 3
     fd2:	03 c0       	rjmp	.+6      	; 0xfda <main+0xe>
		goal = 1;
     fd4:	81 e0       	ldi	r24, 0x01	; 1
     fd6:	80 93 57 01 	sts	0x0157, r24
	}
	
    set(DDRB,0);
     fda:	20 9a       	sbi	0x04, 0	; 4
    set(PORTB,0);
     fdc:	28 9a       	sbi	0x05, 0	; 5
    set(DDRD,5);
     fde:	55 9a       	sbi	0x0a, 5	; 10
    set(DDRD,3);
     fe0:	53 9a       	sbi	0x0a, 3	; 10
    //wireless stuffs
    m_bus_init();
     fe2:	0e 94 15 0a 	call	0x142a	; 0x142a <m_bus_init>
    
    m_rf_open(CHANNEL, RXADDRESS, PACKET_LENGTH);
     fe6:	4a e0       	ldi	r20, 0x0A	; 10
     fe8:	69 e0       	ldi	r22, 0x09	; 9
     fea:	81 e0       	ldi	r24, 0x01	; 1
     fec:	0e 94 2b 10 	call	0x2056	; 0x2056 <m_rf_open>
    //
    
    //m_num_init();
    int flag;
    
    m_clockdivide(0);
     ff0:	e1 e6       	ldi	r30, 0x61	; 97
     ff2:	f0 e0       	ldi	r31, 0x00	; 0
     ff4:	80 e8       	ldi	r24, 0x80	; 128
     ff6:	80 83       	st	Z, r24
     ff8:	10 82       	st	Z, r1
    
    m_disableJTAG();
     ffa:	85 bf       	out	0x35, r24	; 53
     ffc:	85 bf       	out	0x35, r24	; 53
//     
//     set(TCCR0B, CS02);
//     set(TCCR0B, CS01);
//     set(TCCR0B, CS00);
//     
    set(DDRB,7);
     ffe:	27 9a       	sbi	0x04, 7	; 4
//     OCR0A = 0xFF;
//     OCR0B = 0xff;
//     
    //TIMER 1: For Controlling the left wheel
    
    set(TCCR1B, WGM13);
    1000:	e1 e8       	ldi	r30, 0x81	; 129
    1002:	f0 e0       	ldi	r31, 0x00	; 0
    1004:	80 81       	ld	r24, Z
    1006:	80 61       	ori	r24, 0x10	; 16
    1008:	80 83       	st	Z, r24
    set(TCCR1B, WGM12);
    100a:	80 81       	ld	r24, Z
    100c:	88 60       	ori	r24, 0x08	; 8
    100e:	80 83       	st	Z, r24
    set(TCCR1A, WGM11);
    1010:	a0 e8       	ldi	r26, 0x80	; 128
    1012:	b0 e0       	ldi	r27, 0x00	; 0
    1014:	8c 91       	ld	r24, X
    1016:	82 60       	ori	r24, 0x02	; 2
    1018:	8c 93       	st	X, r24
    set(TCCR1A, WGM10);
    101a:	8c 91       	ld	r24, X
    101c:	81 60       	ori	r24, 0x01	; 1
    101e:	8c 93       	st	X, r24
    
    set(TCCR1A, COM1B1);
    1020:	8c 91       	ld	r24, X
    1022:	80 62       	ori	r24, 0x20	; 32
    1024:	8c 93       	st	X, r24
    clear(TCCR1A, COM1B0);
    1026:	8c 91       	ld	r24, X
    1028:	8f 7e       	andi	r24, 0xEF	; 239
    102a:	8c 93       	st	X, r24
    
    clear(TCCR1B, CS12);
    102c:	80 81       	ld	r24, Z
    102e:	8b 7f       	andi	r24, 0xFB	; 251
    1030:	80 83       	st	Z, r24
    clear(TCCR1B, CS11);
    1032:	80 81       	ld	r24, Z
    1034:	8d 7f       	andi	r24, 0xFD	; 253
    1036:	80 83       	st	Z, r24
    set(TCCR1B, CS10);
    1038:	80 81       	ld	r24, Z
    103a:	81 60       	ori	r24, 0x01	; 1
    103c:	80 83       	st	Z, r24
    
    set(DDRB,6);
    103e:	26 9a       	sbi	0x04, 6	; 4
    
    OCR1A = 0xFFFF;
    1040:	8f ef       	ldi	r24, 0xFF	; 255
    1042:	9f ef       	ldi	r25, 0xFF	; 255
    1044:	90 93 89 00 	sts	0x0089, r25
    1048:	80 93 88 00 	sts	0x0088, r24
    OCR1B = 0;
    104c:	10 92 8b 00 	sts	0x008B, r1
    1050:	10 92 8a 00 	sts	0x008A, r1
    
    //TIMER 3: For Controlling the right wheel
    //up to ICR3, clear at OCR3A & set at rollover
    
    set(TCCR3B, WGM33);
    1054:	e1 e9       	ldi	r30, 0x91	; 145
    1056:	f0 e0       	ldi	r31, 0x00	; 0
    1058:	20 81       	ld	r18, Z
    105a:	20 61       	ori	r18, 0x10	; 16
    105c:	20 83       	st	Z, r18
    set(TCCR3B, WGM32);
    105e:	20 81       	ld	r18, Z
    1060:	28 60       	ori	r18, 0x08	; 8
    1062:	20 83       	st	Z, r18
    set(TCCR3A, WGM31);
    1064:	a0 e9       	ldi	r26, 0x90	; 144
    1066:	b0 e0       	ldi	r27, 0x00	; 0
    1068:	2c 91       	ld	r18, X
    106a:	22 60       	ori	r18, 0x02	; 2
    106c:	2c 93       	st	X, r18
    clear(TCCR3A, WGM30);
    106e:	2c 91       	ld	r18, X
    1070:	2e 7f       	andi	r18, 0xFE	; 254
    1072:	2c 93       	st	X, r18
    
    set(TCCR3A, COM3A1);
    1074:	2c 91       	ld	r18, X
    1076:	20 68       	ori	r18, 0x80	; 128
    1078:	2c 93       	st	X, r18
    clear(TCCR3A, COM3A0);
    107a:	2c 91       	ld	r18, X
    107c:	2f 7b       	andi	r18, 0xBF	; 191
    107e:	2c 93       	st	X, r18
    
    clear(TCCR3B, CS32);
    1080:	20 81       	ld	r18, Z
    1082:	2b 7f       	andi	r18, 0xFB	; 251
    1084:	20 83       	st	Z, r18
    clear(TCCR3B, CS31);
    1086:	20 81       	ld	r18, Z
    1088:	2d 7f       	andi	r18, 0xFD	; 253
    108a:	20 83       	st	Z, r18
    set(TCCR3B, CS30);
    108c:	20 81       	ld	r18, Z
    108e:	21 60       	ori	r18, 0x01	; 1
    1090:	20 83       	st	Z, r18
    
    ICR3 = 0xFFFF;
    1092:	90 93 97 00 	sts	0x0097, r25
    1096:	80 93 96 00 	sts	0x0096, r24
    OCR3A = 0;
    109a:	10 92 99 00 	sts	0x0099, r1
    109e:	10 92 98 00 	sts	0x0098, r1
    
    // Set up interrupt for reading values at sampling rate

    
    //Pin for controlling solenoid pulse
    set(DDRB,7);
    10a2:	27 9a       	sbi	0x04, 7	; 4
    
    //Pins for controlling speed of left and right wheel
    set(DDRB,6);
    10a4:	26 9a       	sbi	0x04, 6	; 4
    set(DDRC,6);
    10a6:	3e 9a       	sbi	0x07, 6	; 7
    
    //Pins for determining direction of wheels
    set(DDRB,2);
    10a8:	22 9a       	sbi	0x04, 2	; 4
    set(DDRB,3);
    10aa:	23 9a       	sbi	0x04, 3	; 4
    
    //Blue LED for Comm Test
    //set(DDRB,5);
    
    //ADC's
    sei();                    //Set up interrupts
    10ac:	78 94       	sei
    set(ADCSRA, ADIE);
    10ae:	ca e7       	ldi	r28, 0x7A	; 122
    10b0:	d0 e0       	ldi	r29, 0x00	; 0
    10b2:	88 81       	ld	r24, Y
    10b4:	88 60       	ori	r24, 0x08	; 8
    10b6:	88 83       	st	Y, r24
    
    clear(ADMUX, REFS1);    //Voltage reference is AR pin (5V)
    10b8:	ec e7       	ldi	r30, 0x7C	; 124
    10ba:	f0 e0       	ldi	r31, 0x00	; 0
    10bc:	80 81       	ld	r24, Z
    10be:	8f 77       	andi	r24, 0x7F	; 127
    10c0:	80 83       	st	Z, r24
    clear(ADMUX, REFS0);    //^
    10c2:	80 81       	ld	r24, Z
    10c4:	8f 7b       	andi	r24, 0xBF	; 191
    10c6:	80 83       	st	Z, r24
    
    set(ADCSRA, ADPS2);    //Set scale to /128
    10c8:	88 81       	ld	r24, Y
    10ca:	84 60       	ori	r24, 0x04	; 4
    10cc:	88 83       	st	Y, r24
    set(ADCSRA, ADPS1);    //^
    10ce:	88 81       	ld	r24, Y
    10d0:	82 60       	ori	r24, 0x02	; 2
    10d2:	88 83       	st	Y, r24
    set(ADCSRA, ADPS0);    //^
    10d4:	88 81       	ld	r24, Y
    10d6:	81 60       	ori	r24, 0x01	; 1
    10d8:	88 83       	st	Y, r24
    
    set(DIDR0, ADC0D);    //Disable digital input for F0
    10da:	ee e7       	ldi	r30, 0x7E	; 126
    10dc:	f0 e0       	ldi	r31, 0x00	; 0
    10de:	80 81       	ld	r24, Z
    10e0:	81 60       	ori	r24, 0x01	; 1
    10e2:	80 83       	st	Z, r24
    set(DIDR0, ADC1D),
    10e4:	80 81       	ld	r24, Z
    10e6:	82 60       	ori	r24, 0x02	; 2
    10e8:	80 83       	st	Z, r24
    set(DIDR0, ADC4D);
    10ea:	80 81       	ld	r24, Z
    10ec:	80 61       	ori	r24, 0x10	; 16
    10ee:	80 83       	st	Z, r24
    set(DIDR0, ADC5D);
    10f0:	80 81       	ld	r24, Z
    10f2:	80 62       	ori	r24, 0x20	; 32
    10f4:	80 83       	st	Z, r24
    set(DIDR0, ADC6D);
    10f6:	80 81       	ld	r24, Z
    10f8:	80 64       	ori	r24, 0x40	; 64
    10fa:	80 83       	st	Z, r24
    set(DIDR0, ADC7D);
    10fc:	80 81       	ld	r24, Z
    10fe:	80 68       	ori	r24, 0x80	; 128
    1100:	80 83       	st	Z, r24
    set(DIDR2, ADC8D);
    1102:	ed e7       	ldi	r30, 0x7D	; 125
    1104:	f0 e0       	ldi	r31, 0x00	; 0
    1106:	80 81       	ld	r24, Z
    1108:	81 60       	ori	r24, 0x01	; 1
    110a:	80 83       	st	Z, r24
    set(DIDR2, ADC9D);
    110c:	80 81       	ld	r24, Z
    110e:	82 60       	ori	r24, 0x02	; 2
    1110:	80 83       	st	Z, r24
    
    set(ADCSRA, ADATE);    //Set trigger to free-running mode
    1112:	88 81       	ld	r24, Y
    1114:	80 62       	ori	r24, 0x20	; 32
    1116:	88 83       	st	Y, r24
    
    chooseInput(0);
    1118:	80 e0       	ldi	r24, 0x00	; 0
    111a:	90 e0       	ldi	r25, 0x00	; 0
    111c:	0e 94 df 01 	call	0x3be	; 0x3be <chooseInput>
    
    set(ADCSRA, ADEN);    //Enable/Start conversion
    1120:	88 81       	ld	r24, Y
    1122:	80 68       	ori	r24, 0x80	; 128
    1124:	88 83       	st	Y, r24
    set(ADCSRA, ADSC);    //^
    1126:	88 81       	ld	r24, Y
    1128:	80 64       	ori	r24, 0x40	; 64
    112a:	88 83       	st	Y, r24
    
    set(ADCSRA, ADIF);    //Enable reading results
    112c:	88 81       	ld	r24, Y
    112e:	80 61       	ori	r24, 0x10	; 16
    1130:	88 83       	st	Y, r24
//     
//     clear(PORTB,0); //disable internal pull up resistor
//     clear(PORTB,1); //disable internal pull up resistor
    
    //int state; // state variable
    state = 0; //set state
    1132:	10 92 55 01 	sts	0x0155, r1
    1136:	10 92 54 01 	sts	0x0154, r1
    play = 0;
    113a:	10 92 58 01 	sts	0x0158, r1
            m_usb_init(); // connect usb
            while(!m_usb_isconnected());  //wait for connection
    }

    //m_bus_init();
    m_wii_open();
    113e:	0e 94 27 14 	call	0x284e	; 0x284e <m_wii_open>
    //m_usb_init();
    m_red(ON);
    1142:	6e 9a       	sbi	0x0d, 6	; 13
    1144:	76 98       	cbi	0x0e, 6	; 14
    local_init();
    1146:	0e 94 e9 0c 	call	0x19d2	; 0x19d2 <local_init>
    localize(data);
    114a:	8c ec       	ldi	r24, 0xCC	; 204
    114c:	91 e0       	ldi	r25, 0x01	; 1
    114e:	0e 94 f5 0c 	call	0x19ea	; 0x19ea <localize>
    m_red(OFF);
    1152:	6e 9a       	sbi	0x0d, 6	; 13
    1154:	76 9a       	sbi	0x0e, 6	; 14
        angle_dif = 0;
       
        //Detect weather we have the puck
        getADC();
        //if (!play) game_pause();
        if (ADCarr[7] > 500) {
    1156:	c0 e5       	ldi	r28, 0x50	; 80
    1158:	d1 e0       	ldi	r29, 0x01	; 1
//         } else {
//             clear(PORTD,5);
//             state = 2;
//         }
    
		if (!play) state = buffer[0];
    115a:	02 ec       	ldi	r16, 0xC2	; 194
    115c:	11 e0       	ldi	r17, 0x01	; 1
			if (play && goal == B) state = 4;
        } else {
            //clear(PORTD,5);
            iHaveThePuck = 0;
			m_green(OFF);
			if (play) state = 2;
    115e:	68 94       	set
    1160:	ee 24       	eor	r14, r14
    1162:	e1 f8       	bld	r14, 1
    1164:	f1 2c       	mov	r15, r1
        getADC();
        //if (!play) game_pause();
        if (ADCarr[7] > 500) {
            //set(PORTD,5);
			//set(PORTD,5);
            iHaveThePuck = 1;
    1166:	99 24       	eor	r9, r9
    1168:	93 94       	inc	r9
			m_green(ON);
			if (play && goal == A) state = 3;
			if (play && goal == B) state = 4;
    116a:	68 94       	set
    116c:	cc 24       	eor	r12, r12
    116e:	c2 f8       	bld	r12, 2
    1170:	d1 2c       	mov	r13, r1
        if (ADCarr[7] > 500) {
            //set(PORTD,5);
			//set(PORTD,5);
            iHaveThePuck = 1;
			m_green(ON);
			if (play && goal == A) state = 3;
    1172:	0f 2e       	mov	r0, r31
    1174:	f3 e0       	ldi	r31, 0x03	; 3
    1176:	af 2e       	mov	r10, r31
    1178:	b1 2c       	mov	r11, r1
    117a:	f0 2d       	mov	r31, r0
            break;
           
            case 69:
                set(PORTB,2);
                set(PORTB,3);
                OCR1B = OCR1A;
    117c:	0f 2e       	mov	r0, r31
    117e:	fa e8       	ldi	r31, 0x8A	; 138
    1180:	6f 2e       	mov	r6, r31
    1182:	71 2c       	mov	r7, r1
    1184:	f0 2d       	mov	r31, r0
                OCR3A = ICR3;
    1186:	0f 2e       	mov	r0, r31
    1188:	f6 e9       	ldi	r31, 0x96	; 150
    118a:	4f 2e       	mov	r4, r31
    118c:	51 2c       	mov	r5, r1
    118e:	f0 2d       	mov	r31, r0
    1190:	0f 2e       	mov	r0, r31
    1192:	f8 e9       	ldi	r31, 0x98	; 152
    1194:	2f 2e       	mov	r2, r31
    1196:	31 2c       	mov	r3, r1
    1198:	f0 2d       	mov	r31, r0
    m_red(OFF);

    //set(TIMSK0, OCIE0A);
    while(1)
    {
		if (play) {m_red(ON);}
    119a:	80 91 58 01 	lds	r24, 0x0158
    119e:	88 23       	and	r24, r24
    11a0:	19 f0       	breq	.+6      	; 0x11a8 <main+0x1dc>
    11a2:	6e 9a       	sbi	0x0d, 6	; 13
    11a4:	76 98       	cbi	0x0e, 6	; 14
    11a6:	02 c0       	rjmp	.+4      	; 0x11ac <main+0x1e0>
		else {m_red(OFF);}
    11a8:	6e 9a       	sbi	0x0d, 6	; 13
    11aa:	76 9a       	sbi	0x0e, 6	; 14
        //loccounter++;
//         localize(data);
//         locdata[1] = (char)data[0];
//         locdata[2] = (char)data[1];
//         toggle(PORTD,3);
        changedState = 0;
    11ac:	10 92 56 01 	sts	0x0156, r1
        angle_dif = 0;
    11b0:	10 92 22 01 	sts	0x0122, r1
    11b4:	10 92 23 01 	sts	0x0123, r1
    11b8:	10 92 24 01 	sts	0x0124, r1
    11bc:	10 92 25 01 	sts	0x0125, r1
       
        //Detect weather we have the puck
        getADC();
    11c0:	0e 94 81 02 	call	0x502	; 0x502 <getADC>
        //if (!play) game_pause();
        if (ADCarr[7] > 500) {
    11c4:	88 81       	ld	r24, Y
    11c6:	99 81       	ldd	r25, Y+1	; 0x01
    11c8:	85 3f       	cpi	r24, 0xF5	; 245
    11ca:	91 40       	sbci	r25, 0x01	; 1
    11cc:	c4 f0       	brlt	.+48     	; 0x11fe <main+0x232>
            //set(PORTD,5);
			//set(PORTD,5);
            iHaveThePuck = 1;
    11ce:	90 92 59 01 	sts	0x0159, r9
			m_green(ON);
    11d2:	6a 9a       	sbi	0x0d, 2	; 13
    11d4:	72 98       	cbi	0x0e, 2	; 14
			if (play && goal == A) state = 3;
    11d6:	80 91 58 01 	lds	r24, 0x0158
    11da:	88 23       	and	r24, r24
    11dc:	09 f4       	brne	.+2      	; 0x11e0 <main+0x214>
    11de:	cd c0       	rjmp	.+410    	; 0x137a <main+0x3ae>
    11e0:	80 91 57 01 	lds	r24, 0x0157
    11e4:	81 30       	cpi	r24, 0x01	; 1
    11e6:	09 f0       	breq	.+2      	; 0x11ea <main+0x21e>
    11e8:	c2 c0       	rjmp	.+388    	; 0x136e <main+0x3a2>
    11ea:	b0 92 55 01 	sts	0x0155, r11
    11ee:	a0 92 54 01 	sts	0x0154, r10
    11f2:	bd c0       	rjmp	.+378    	; 0x136e <main+0x3a2>
			if (play && goal == B) state = 4;
    11f4:	d0 92 55 01 	sts	0x0155, r13
    11f8:	c0 92 54 01 	sts	0x0154, r12
    11fc:	0c c0       	rjmp	.+24     	; 0x1216 <main+0x24a>
        } else {
            //clear(PORTD,5);
            iHaveThePuck = 0;
    11fe:	10 92 59 01 	sts	0x0159, r1
			m_green(OFF);
    1202:	6a 9a       	sbi	0x0d, 2	; 13
    1204:	72 9a       	sbi	0x0e, 2	; 14
			if (play) state = 2;
    1206:	80 91 58 01 	lds	r24, 0x0158
    120a:	88 23       	and	r24, r24
    120c:	41 f0       	breq	.+16     	; 0x121e <main+0x252>
    120e:	f0 92 55 01 	sts	0x0155, r15
    1212:	e0 92 54 01 	sts	0x0154, r14
//         } else {
//             clear(PORTD,5);
//             state = 2;
//         }
    
		if (!play) state = buffer[0];
    1216:	80 91 58 01 	lds	r24, 0x0158
    121a:	81 11       	cpse	r24, r1
    121c:	06 c0       	rjmp	.+12     	; 0x122a <main+0x25e>
    121e:	f8 01       	movw	r30, r16
    1220:	90 81       	ld	r25, Z
    1222:	90 93 54 01 	sts	0x0154, r25
    1226:	10 92 55 01 	sts	0x0155, r1
        //switch states
        switch (state) {
    122a:	e0 91 54 01 	lds	r30, 0x0154
    122e:	f0 91 55 01 	lds	r31, 0x0155
    1232:	32 96       	adiw	r30, 0x02	; 2
    1234:	ea 3a       	cpi	r30, 0xAA	; 170
    1236:	f1 05       	cpc	r31, r1
    1238:	08 f0       	brcs	.+2      	; 0x123c <main+0x270>
    123a:	96 c0       	rjmp	.+300    	; 0x1368 <main+0x39c>
    123c:	ea 5a       	subi	r30, 0xAA	; 170
    123e:	ff 4f       	sbci	r31, 0xFF	; 255
    1240:	0c 94 73 19 	jmp	0x32e6	; 0x32e6 <__tablejump2__>
           
            case -2:
            getADC();
    1244:	0e 94 81 02 	call	0x502	; 0x502 <getADC>
            if (ADCarr[0] > 500) {
    1248:	e2 e4       	ldi	r30, 0x42	; 66
    124a:	f1 e0       	ldi	r31, 0x01	; 1
    124c:	80 81       	ld	r24, Z
    124e:	91 81       	ldd	r25, Z+1	; 0x01
    1250:	85 3f       	cpi	r24, 0xF5	; 245
    1252:	91 40       	sbci	r25, 0x01	; 1
    1254:	1c f0       	brlt	.+6      	; 0x125c <main+0x290>
                m_green(ON);
    1256:	6a 9a       	sbi	0x0d, 2	; 13
    1258:	72 98       	cbi	0x0e, 2	; 14
    125a:	9f cf       	rjmp	.-194    	; 0x119a <main+0x1ce>
            }
            else {m_green(OFF)}
    125c:	6a 9a       	sbi	0x0d, 2	; 13
    125e:	72 9a       	sbi	0x0e, 2	; 14
    1260:	9c cf       	rjmp	.-200    	; 0x119a <main+0x1ce>
            break;
           
            case -1: //test Limit switches
                //m_green(ON);
                if (check(PINB,1)) {
    1262:	19 9b       	sbis	0x03, 1	; 3
    1264:	03 c0       	rjmp	.+6      	; 0x126c <main+0x2a0>
                   
                    m_green(ON);
    1266:	6a 9a       	sbi	0x0d, 2	; 13
    1268:	72 98       	cbi	0x0e, 2	; 14
    126a:	97 cf       	rjmp	.-210    	; 0x119a <main+0x1ce>
                }
               
                else if (check(PINB,0)) {
    126c:	18 9b       	sbis	0x03, 0	; 3
    126e:	03 c0       	rjmp	.+6      	; 0x1276 <main+0x2aa>
                   
                    m_red(ON);
    1270:	6e 9a       	sbi	0x0d, 6	; 13
    1272:	76 98       	cbi	0x0e, 6	; 14
    1274:	92 cf       	rjmp	.-220    	; 0x119a <main+0x1ce>
                }
               
                else {
                    m_red(OFF);
    1276:	6e 9a       	sbi	0x0d, 6	; 13
    1278:	76 9a       	sbi	0x0e, 6	; 14
                    m_green(OFF);
    127a:	6a 9a       	sbi	0x0d, 2	; 13
    127c:	72 9a       	sbi	0x0e, 2	; 14
    127e:	8d cf       	rjmp	.-230    	; 0x119a <main+0x1ce>
               
            break;

            case 0:
            //drive_to_point2(-100,0);
            game_pause();
    1280:	0e 94 c4 07 	call	0xf88	; 0xf88 <game_pause>
            break;
    1284:	8a cf       	rjmp	.-236    	; 0x119a <main+0x1ce>
            findPuck();
            break;
           
            case 2:
            //m_red(ON);
			if (!iHaveThePuck) {
    1286:	90 91 59 01 	lds	r25, 0x0159
    128a:	91 11       	cpse	r25, r1
    128c:	86 cf       	rjmp	.-244    	; 0x119a <main+0x1ce>
				if (play)
    128e:	88 23       	and	r24, r24
    1290:	09 f4       	brne	.+2      	; 0x1294 <main+0x2c8>
    1292:	83 cf       	rjmp	.-250    	; 0x119a <main+0x1ce>
            drive_to_puck();
    1294:	0e 94 f2 04 	call	0x9e4	; 0x9e4 <drive_to_puck>
    1298:	80 cf       	rjmp	.-256    	; 0x119a <main+0x1ce>
			}
            break;
           
            case 3:
			if (play)
    129a:	88 23       	and	r24, r24
    129c:	09 f4       	brne	.+2      	; 0x12a0 <main+0x2d4>
    129e:	7d cf       	rjmp	.-262    	; 0x119a <main+0x1ce>
            drive_to_goalA();
    12a0:	0e 94 b6 07 	call	0xf6c	; 0xf6c <drive_to_goalA>
    12a4:	7a cf       	rjmp	.-268    	; 0x119a <main+0x1ce>
            break;
           
            case 4:
			if (play)
    12a6:	88 23       	and	r24, r24
    12a8:	09 f4       	brne	.+2      	; 0x12ac <main+0x2e0>
    12aa:	77 cf       	rjmp	.-274    	; 0x119a <main+0x1ce>
            drive_to_goalB();
    12ac:	0e 94 bd 07 	call	0xf7a	; 0xf7a <drive_to_goalB>
    12b0:	74 cf       	rjmp	.-280    	; 0x119a <main+0x1ce>
            break;    
           
            case 5:
           
            getADC();
    12b2:	0e 94 81 02 	call	0x502	; 0x502 <getADC>
    12b6:	71 cf       	rjmp	.-286    	; 0x119a <main+0x1ce>
            }
           
            break;
           
            case 6:
            if (data[2] > 0) {
    12b8:	20 e0       	ldi	r18, 0x00	; 0
    12ba:	30 e0       	ldi	r19, 0x00	; 0
    12bc:	a9 01       	movw	r20, r18
    12be:	e4 ed       	ldi	r30, 0xD4	; 212
    12c0:	f1 e0       	ldi	r31, 0x01	; 1
    12c2:	60 81       	ld	r22, Z
    12c4:	71 81       	ldd	r23, Z+1	; 0x01
    12c6:	82 81       	ldd	r24, Z+2	; 0x02
    12c8:	93 81       	ldd	r25, Z+3	; 0x03
    12ca:	0e 94 d2 17 	call	0x2fa4	; 0x2fa4 <__gesf2>
    12ce:	18 16       	cp	r1, r24
    12d0:	4c f4       	brge	.+18     	; 0x12e4 <main+0x318>
                rotate(RIGHT,1);
    12d2:	40 e0       	ldi	r20, 0x00	; 0
    12d4:	50 e0       	ldi	r21, 0x00	; 0
    12d6:	60 e8       	ldi	r22, 0x80	; 128
    12d8:	7f e3       	ldi	r23, 0x3F	; 63
    12da:	80 e0       	ldi	r24, 0x00	; 0
    12dc:	90 e0       	ldi	r25, 0x00	; 0
    12de:	0e 94 3c 04 	call	0x878	; 0x878 <rotate>
    12e2:	5b cf       	rjmp	.-330    	; 0x119a <main+0x1ce>
            } else {
                rotate(LEFT,1);
    12e4:	40 e0       	ldi	r20, 0x00	; 0
    12e6:	50 e0       	ldi	r21, 0x00	; 0
    12e8:	60 e8       	ldi	r22, 0x80	; 128
    12ea:	7f e3       	ldi	r23, 0x3F	; 63
    12ec:	81 e0       	ldi	r24, 0x01	; 1
    12ee:	90 e0       	ldi	r25, 0x00	; 0
    12f0:	0e 94 3c 04 	call	0x878	; 0x878 <rotate>
    12f4:	52 cf       	rjmp	.-348    	; 0x119a <main+0x1ce>
            }
            break;
			
            case 7:
		    drive_to_point2(-50,0);
    12f6:	60 e0       	ldi	r22, 0x00	; 0
    12f8:	70 e0       	ldi	r23, 0x00	; 0
    12fa:	8e ec       	ldi	r24, 0xCE	; 206
    12fc:	9f ef       	ldi	r25, 0xFF	; 255
    12fe:	0e 94 7e 06 	call	0xcfc	; 0xcfc <drive_to_point2>
		    break;
    1302:	4b cf       	rjmp	.-362    	; 0x119a <main+0x1ce>
           
           
            case 0xA0:
            comm_test();
    1304:	0e 94 cd 07 	call	0xf9a	; 0xf9a <comm_test>
            break;
    1308:	48 cf       	rjmp	.-368    	; 0x119a <main+0x1ce>
           
            case 0xA1:
            play = 1;
    130a:	90 92 58 01 	sts	0x0158, r9
            drive_to_puck();
    130e:	0e 94 f2 04 	call	0x9e4	; 0x9e4 <drive_to_puck>
            break;
    1312:	43 cf       	rjmp	.-378    	; 0x119a <main+0x1ce>
           
            case 0xA2:
			play = 0;
    1314:	10 92 58 01 	sts	0x0158, r1
            game_pause();
    1318:	0e 94 c4 07 	call	0xf88	; 0xf88 <game_pause>
            break;
    131c:	3e cf       	rjmp	.-388    	; 0x119a <main+0x1ce>
           
            case 0xA3:
			play = 0;
    131e:	10 92 58 01 	sts	0x0158, r1
            game_pause();
    1322:	0e 94 c4 07 	call	0xf88	; 0xf88 <game_pause>
            break;
    1326:	39 cf       	rjmp	.-398    	; 0x119a <main+0x1ce>
           
            case 0xA4:
			play = 0;
    1328:	10 92 58 01 	sts	0x0158, r1
            game_pause();
    132c:	0e 94 c4 07 	call	0xf88	; 0xf88 <game_pause>
            break;
    1330:	34 cf       	rjmp	.-408    	; 0x119a <main+0x1ce>
           
            case 0xA6:
			play = 0;
    1332:	10 92 58 01 	sts	0x0158, r1
            game_pause();
    1336:	0e 94 c4 07 	call	0xf88	; 0xf88 <game_pause>
            break;
    133a:	2f cf       	rjmp	.-418    	; 0x119a <main+0x1ce>
           
            case 0xA7:
            game_pause();
    133c:	0e 94 c4 07 	call	0xf88	; 0xf88 <game_pause>
            break;
    1340:	2c cf       	rjmp	.-424    	; 0x119a <main+0x1ce>
           
            case 69:
                set(PORTB,2);
    1342:	2a 9a       	sbi	0x05, 2	; 5
                set(PORTB,3);
    1344:	2b 9a       	sbi	0x05, 3	; 5
                OCR1B = OCR1A;
    1346:	e8 e8       	ldi	r30, 0x88	; 136
    1348:	f0 e0       	ldi	r31, 0x00	; 0
    134a:	80 81       	ld	r24, Z
    134c:	91 81       	ldd	r25, Z+1	; 0x01
    134e:	f3 01       	movw	r30, r6
    1350:	91 83       	std	Z+1, r25	; 0x01
    1352:	80 83       	st	Z, r24
                OCR3A = ICR3;
    1354:	f2 01       	movw	r30, r4
    1356:	80 81       	ld	r24, Z
    1358:	91 81       	ldd	r25, Z+1	; 0x01
    135a:	f1 01       	movw	r30, r2
    135c:	91 83       	std	Z+1, r25	; 0x01
    135e:	80 83       	st	Z, r24
                break;
    1360:	1c cf       	rjmp	.-456    	; 0x119a <main+0x1ce>
               
            case 70:
                reportADC();
    1362:	0e 94 65 03 	call	0x6ca	; 0x6ca <reportADC>
                break;
    1366:	19 cf       	rjmp	.-462    	; 0x119a <main+0x1ce>
           
            default:
            game_pause();
    1368:	0e 94 c4 07 	call	0xf88	; 0xf88 <game_pause>
            break;
    136c:	16 cf       	rjmp	.-468    	; 0x119a <main+0x1ce>
            //set(PORTD,5);
			//set(PORTD,5);
            iHaveThePuck = 1;
			m_green(ON);
			if (play && goal == A) state = 3;
			if (play && goal == B) state = 4;
    136e:	80 91 57 01 	lds	r24, 0x0157
    1372:	88 23       	and	r24, r24
    1374:	09 f4       	brne	.+2      	; 0x1378 <main+0x3ac>
    1376:	3e cf       	rjmp	.-388    	; 0x11f4 <main+0x228>
    1378:	4e cf       	rjmp	.-356    	; 0x1216 <main+0x24a>
//         } else {
//             clear(PORTD,5);
//             state = 2;
//         }
    
		if (!play) state = buffer[0];
    137a:	80 91 58 01 	lds	r24, 0x0158
    137e:	4f cf       	rjmp	.-354    	; 0x121e <main+0x252>

00001380 <__vector_3>:
        
    }
}


ISR(INT2_vect)  {
    1380:	1f 92       	push	r1
    1382:	0f 92       	push	r0
    1384:	0f b6       	in	r0, 0x3f	; 63
    1386:	0f 92       	push	r0
    1388:	11 24       	eor	r1, r1
    138a:	2f 93       	push	r18
    138c:	3f 93       	push	r19
    138e:	4f 93       	push	r20
    1390:	5f 93       	push	r21
    1392:	6f 93       	push	r22
    1394:	7f 93       	push	r23
    1396:	8f 93       	push	r24
    1398:	9f 93       	push	r25
    139a:	af 93       	push	r26
    139c:	bf 93       	push	r27
    139e:	ef 93       	push	r30
    13a0:	ff 93       	push	r31
    cli();
    13a2:	f8 94       	cli
    m_rf_read(buffer,PACKET_LENGTH);
    13a4:	6a e0       	ldi	r22, 0x0A	; 10
    13a6:	82 ec       	ldi	r24, 0xC2	; 194
    13a8:	91 e0       	ldi	r25, 0x01	; 1
    13aa:	0e 94 81 10 	call	0x2102	; 0x2102 <m_rf_read>
    state=buffer[0];
    13ae:	80 91 c2 01 	lds	r24, 0x01C2
    13b2:	90 e0       	ldi	r25, 0x00	; 0
    13b4:	90 93 55 01 	sts	0x0155, r25
    13b8:	80 93 54 01 	sts	0x0154, r24
    changedState = 1;
    13bc:	21 e0       	ldi	r18, 0x01	; 1
    13be:	20 93 56 01 	sts	0x0156, r18
	if (state == 0xA4 || state == 0xA3 || state == 0xA2 || state == 0xA6 || state == 0xA7) {
    13c2:	9c 01       	movw	r18, r24
    13c4:	22 5a       	subi	r18, 0xA2	; 162
    13c6:	31 09       	sbc	r19, r1
    13c8:	23 30       	cpi	r18, 0x03	; 3
    13ca:	31 05       	cpc	r19, r1
    13cc:	30 f0       	brcs	.+12     	; 0x13da <__vector_3+0x5a>
    13ce:	86 3a       	cpi	r24, 0xA6	; 166
    13d0:	91 05       	cpc	r25, r1
    13d2:	19 f0       	breq	.+6      	; 0x13da <__vector_3+0x5a>
    13d4:	87 3a       	cpi	r24, 0xA7	; 167
    13d6:	91 05       	cpc	r25, r1
    13d8:	11 f4       	brne	.+4      	; 0x13de <__vector_3+0x5e>
		play = 0;
    13da:	10 92 58 01 	sts	0x0158, r1
	}
	sei();
    13de:	78 94       	sei
}
    13e0:	ff 91       	pop	r31
    13e2:	ef 91       	pop	r30
    13e4:	bf 91       	pop	r27
    13e6:	af 91       	pop	r26
    13e8:	9f 91       	pop	r25
    13ea:	8f 91       	pop	r24
    13ec:	7f 91       	pop	r23
    13ee:	6f 91       	pop	r22
    13f0:	5f 91       	pop	r21
    13f2:	4f 91       	pop	r20
    13f4:	3f 91       	pop	r19
    13f6:	2f 91       	pop	r18
    13f8:	0f 90       	pop	r0
    13fa:	0f be       	out	0x3f, r0	; 63
    13fc:	0f 90       	pop	r0
    13fe:	1f 90       	pop	r1
    1400:	18 95       	reti

00001402 <__vector_29>:

ISR(ADC_vect) {
    1402:	1f 92       	push	r1
    1404:	0f 92       	push	r0
    1406:	0f b6       	in	r0, 0x3f	; 63
    1408:	0f 92       	push	r0
    140a:	11 24       	eor	r1, r1
    140c:	8f 93       	push	r24
    140e:	9f 93       	push	r25
    //cli();
    conversion = 1;
    1410:	81 e0       	ldi	r24, 0x01	; 1
    1412:	90 e0       	ldi	r25, 0x00	; 0
    1414:	90 93 27 01 	sts	0x0127, r25
    1418:	80 93 26 01 	sts	0x0126, r24
    //sei();
}
    141c:	9f 91       	pop	r25
    141e:	8f 91       	pop	r24
    1420:	0f 90       	pop	r0
    1422:	0f be       	out	0x3f, r0	; 63
    1424:	0f 90       	pop	r0
    1426:	1f 90       	pop	r1
    1428:	18 95       	reti

0000142a <m_bus_init>:
    142a:	58 9a       	sbi	0x0b, 0	; 11
    142c:	59 9a       	sbi	0x0b, 1	; 11
    142e:	5a 9a       	sbi	0x0b, 2	; 11
    1430:	8c e0       	ldi	r24, 0x0C	; 12
    1432:	80 93 b8 00 	sts	0x00B8, r24
    1436:	e9 e6       	ldi	r30, 0x69	; 105
    1438:	f0 e0       	ldi	r31, 0x00	; 0
    143a:	80 81       	ld	r24, Z
    143c:	80 62       	ori	r24, 0x20	; 32
    143e:	80 83       	st	Z, r24
    1440:	80 81       	ld	r24, Z
    1442:	8f 7e       	andi	r24, 0xEF	; 239
    1444:	80 83       	st	Z, r24
    1446:	ea 9a       	sbi	0x1d, 2	; 29
    1448:	78 94       	sei
    144a:	08 95       	ret

0000144c <getData>:
    144c:	0f 93       	push	r16
    144e:	1f 93       	push	r17
    1450:	cf 93       	push	r28
    1452:	df 93       	push	r29
    1454:	8c 01       	movw	r16, r24
    1456:	eb 01       	movw	r28, r22
    1458:	80 ea       	ldi	r24, 0xA0	; 160
    145a:	91 e0       	ldi	r25, 0x01	; 1
    145c:	0e 94 92 13 	call	0x2724	; 0x2724 <m_wii_read>
    1460:	80 91 a0 01 	lds	r24, 0x01A0
    1464:	90 91 a1 01 	lds	r25, 0x01A1
    1468:	f8 01       	movw	r30, r16
    146a:	91 83       	std	Z+1, r25	; 0x01
    146c:	80 83       	st	Z, r24
    146e:	80 91 a6 01 	lds	r24, 0x01A6
    1472:	90 91 a7 01 	lds	r25, 0x01A7
    1476:	93 83       	std	Z+3, r25	; 0x03
    1478:	82 83       	std	Z+2, r24	; 0x02
    147a:	80 91 ac 01 	lds	r24, 0x01AC
    147e:	90 91 ad 01 	lds	r25, 0x01AD
    1482:	95 83       	std	Z+5, r25	; 0x05
    1484:	84 83       	std	Z+4, r24	; 0x04
    1486:	80 91 b2 01 	lds	r24, 0x01B2
    148a:	90 91 b3 01 	lds	r25, 0x01B3
    148e:	97 83       	std	Z+7, r25	; 0x07
    1490:	86 83       	std	Z+6, r24	; 0x06
    1492:	80 91 a2 01 	lds	r24, 0x01A2
    1496:	90 91 a3 01 	lds	r25, 0x01A3
    149a:	99 83       	std	Y+1, r25	; 0x01
    149c:	88 83       	st	Y, r24
    149e:	80 91 a8 01 	lds	r24, 0x01A8
    14a2:	90 91 a9 01 	lds	r25, 0x01A9
    14a6:	9b 83       	std	Y+3, r25	; 0x03
    14a8:	8a 83       	std	Y+2, r24	; 0x02
    14aa:	80 91 ae 01 	lds	r24, 0x01AE
    14ae:	90 91 af 01 	lds	r25, 0x01AF
    14b2:	9d 83       	std	Y+5, r25	; 0x05
    14b4:	8c 83       	std	Y+4, r24	; 0x04
    14b6:	80 91 b4 01 	lds	r24, 0x01B4
    14ba:	90 91 b5 01 	lds	r25, 0x01B5
    14be:	9f 83       	std	Y+7, r25	; 0x07
    14c0:	8e 83       	std	Y+6, r24	; 0x06
    14c2:	81 e0       	ldi	r24, 0x01	; 1
    14c4:	df 91       	pop	r29
    14c6:	cf 91       	pop	r28
    14c8:	1f 91       	pop	r17
    14ca:	0f 91       	pop	r16
    14cc:	08 95       	ret

000014ce <determine_blobs>:
    14ce:	2f 92       	push	r2
    14d0:	3f 92       	push	r3
    14d2:	4f 92       	push	r4
    14d4:	5f 92       	push	r5
    14d6:	6f 92       	push	r6
    14d8:	7f 92       	push	r7
    14da:	8f 92       	push	r8
    14dc:	9f 92       	push	r9
    14de:	af 92       	push	r10
    14e0:	bf 92       	push	r11
    14e2:	cf 92       	push	r12
    14e4:	df 92       	push	r13
    14e6:	ef 92       	push	r14
    14e8:	ff 92       	push	r15
    14ea:	0f 93       	push	r16
    14ec:	1f 93       	push	r17
    14ee:	cf 93       	push	r28
    14f0:	df 93       	push	r29
    14f2:	cd b7       	in	r28, 0x3d	; 61
    14f4:	de b7       	in	r29, 0x3e	; 62
    14f6:	6c 97       	sbiw	r28, 0x1c	; 28
    14f8:	0f b6       	in	r0, 0x3f	; 63
    14fa:	f8 94       	cli
    14fc:	de bf       	out	0x3e, r29	; 62
    14fe:	0f be       	out	0x3f, r0	; 63
    1500:	cd bf       	out	0x3d, r28	; 61
    1502:	10 92 68 01 	sts	0x0168, r1
    1506:	10 92 69 01 	sts	0x0169, r1
    150a:	10 92 6a 01 	sts	0x016A, r1
    150e:	10 92 6b 01 	sts	0x016B, r1
    1512:	80 e0       	ldi	r24, 0x00	; 0
    1514:	90 e6       	ldi	r25, 0x60	; 96
    1516:	aa ee       	ldi	r26, 0xEA	; 234
    1518:	b6 e4       	ldi	r27, 0x46	; 70
    151a:	80 93 04 01 	sts	0x0104, r24
    151e:	90 93 05 01 	sts	0x0105, r25
    1522:	a0 93 06 01 	sts	0x0106, r26
    1526:	b0 93 07 01 	sts	0x0107, r27
    152a:	0f 2e       	mov	r0, r31
    152c:	fa e7       	ldi	r31, 0x7A	; 122
    152e:	cf 2e       	mov	r12, r31
    1530:	f1 e0       	ldi	r31, 0x01	; 1
    1532:	df 2e       	mov	r13, r31
    1534:	f0 2d       	mov	r31, r0
    1536:	0c e7       	ldi	r16, 0x7C	; 124
    1538:	11 e0       	ldi	r17, 0x01	; 1
    153a:	0f 2e       	mov	r0, r31
    153c:	fe e7       	ldi	r31, 0x7E	; 126
    153e:	ef 2e       	mov	r14, r31
    1540:	f1 e0       	ldi	r31, 0x01	; 1
    1542:	ff 2e       	mov	r15, r31
    1544:	f0 2d       	mov	r31, r0
    1546:	60 e7       	ldi	r22, 0x70	; 112
    1548:	71 e0       	ldi	r23, 0x01	; 1
    154a:	88 e7       	ldi	r24, 0x78	; 120
    154c:	91 e0       	ldi	r25, 0x01	; 1
    154e:	0e 94 26 0a 	call	0x144c	; 0x144c <getData>
    1552:	80 91 78 01 	lds	r24, 0x0178
    1556:	90 91 79 01 	lds	r25, 0x0179
    155a:	8f 3f       	cpi	r24, 0xFF	; 255
    155c:	93 40       	sbci	r25, 0x03	; 3
    155e:	98 f7       	brcc	.-26     	; 0x1546 <determine_blobs+0x78>
    1560:	f6 01       	movw	r30, r12
    1562:	80 81       	ld	r24, Z
    1564:	91 81       	ldd	r25, Z+1	; 0x01
    1566:	8f 3f       	cpi	r24, 0xFF	; 255
    1568:	93 40       	sbci	r25, 0x03	; 3
    156a:	68 f7       	brcc	.-38     	; 0x1546 <determine_blobs+0x78>
    156c:	f8 01       	movw	r30, r16
    156e:	80 81       	ld	r24, Z
    1570:	91 81       	ldd	r25, Z+1	; 0x01
    1572:	8f 3f       	cpi	r24, 0xFF	; 255
    1574:	93 40       	sbci	r25, 0x03	; 3
    1576:	38 f7       	brcc	.-50     	; 0x1546 <determine_blobs+0x78>
    1578:	f7 01       	movw	r30, r14
    157a:	80 81       	ld	r24, Z
    157c:	91 81       	ldd	r25, Z+1	; 0x01
    157e:	8f 3f       	cpi	r24, 0xFF	; 255
    1580:	93 40       	sbci	r25, 0x03	; 3
    1582:	08 f7       	brcc	.-62     	; 0x1546 <determine_blobs+0x78>
    1584:	80 90 6c 01 	lds	r8, 0x016C
    1588:	90 90 6d 01 	lds	r9, 0x016D
    158c:	a0 90 6e 01 	lds	r10, 0x016E
    1590:	b0 90 6f 01 	lds	r11, 0x016F
    1594:	20 91 68 01 	lds	r18, 0x0168
    1598:	29 83       	std	Y+1, r18	; 0x01
    159a:	30 91 69 01 	lds	r19, 0x0169
    159e:	3a 83       	std	Y+2, r19	; 0x02
    15a0:	40 91 6a 01 	lds	r20, 0x016A
    15a4:	4b 83       	std	Y+3, r20	; 0x03
    15a6:	50 91 6b 01 	lds	r21, 0x016B
    15aa:	5c 83       	std	Y+4, r21	; 0x04
    15ac:	60 91 62 01 	lds	r22, 0x0162
    15b0:	6b 8b       	std	Y+19, r22	; 0x13
    15b2:	70 91 63 01 	lds	r23, 0x0163
    15b6:	7c 8b       	std	Y+20, r23	; 0x14
    15b8:	80 91 60 01 	lds	r24, 0x0160
    15bc:	89 8b       	std	Y+17, r24	; 0x11
    15be:	90 91 61 01 	lds	r25, 0x0161
    15c2:	9a 8b       	std	Y+18, r25	; 0x12
    15c4:	e0 91 64 01 	lds	r30, 0x0164
    15c8:	ed 8b       	std	Y+21, r30	; 0x15
    15ca:	f0 91 65 01 	lds	r31, 0x0165
    15ce:	fe 8b       	std	Y+22, r31	; 0x16
    15d0:	20 91 66 01 	lds	r18, 0x0166
    15d4:	2f 8b       	std	Y+23, r18	; 0x17
    15d6:	30 91 67 01 	lds	r19, 0x0167
    15da:	38 8f       	std	Y+24, r19	; 0x18
    15dc:	40 91 04 01 	lds	r20, 0x0104
    15e0:	4d 83       	std	Y+5, r20	; 0x05
    15e2:	50 91 05 01 	lds	r21, 0x0105
    15e6:	5e 83       	std	Y+6, r21	; 0x06
    15e8:	20 90 06 01 	lds	r2, 0x0106
    15ec:	30 90 07 01 	lds	r3, 0x0107
    15f0:	60 91 5e 01 	lds	r22, 0x015E
    15f4:	69 8f       	std	Y+25, r22	; 0x19
    15f6:	70 91 5f 01 	lds	r23, 0x015F
    15fa:	7a 8f       	std	Y+26, r23	; 0x1a
    15fc:	80 91 5c 01 	lds	r24, 0x015C
    1600:	90 91 5d 01 	lds	r25, 0x015D
    1604:	98 8b       	std	Y+16, r25	; 0x10
    1606:	8f 87       	std	Y+15, r24	; 0x0f
    1608:	18 86       	std	Y+8, r1	; 0x08
    160a:	1f 82       	std	Y+7, r1	; 0x07
    160c:	c1 2c       	mov	r12, r1
    160e:	d1 2c       	mov	r13, r1
    1610:	b9 c0       	rjmp	.+370    	; 0x1784 <determine_blobs+0x2b6>
    1612:	eb 8d       	ldd	r30, Y+27	; 0x1b
    1614:	fc 8d       	ldd	r31, Y+28	; 0x1c
    1616:	e4 15       	cp	r30, r4
    1618:	f5 05       	cpc	r31, r5
    161a:	09 f4       	brne	.+2      	; 0x161e <determine_blobs+0x150>
    161c:	9c c0       	rjmp	.+312    	; 0x1756 <determine_blobs+0x288>
    161e:	e9 85       	ldd	r30, Y+9	; 0x09
    1620:	fa 85       	ldd	r31, Y+10	; 0x0a
    1622:	60 81       	ld	r22, Z
    1624:	71 81       	ldd	r23, Z+1	; 0x01
    1626:	80 e0       	ldi	r24, 0x00	; 0
    1628:	90 e0       	ldi	r25, 0x00	; 0
    162a:	0e 94 c2 16 	call	0x2d84	; 0x2d84 <__floatunsisf>
    162e:	6b 01       	movw	r12, r22
    1630:	7c 01       	movw	r14, r24
    1632:	f3 01       	movw	r30, r6
    1634:	60 81       	ld	r22, Z
    1636:	71 81       	ldd	r23, Z+1	; 0x01
    1638:	80 e0       	ldi	r24, 0x00	; 0
    163a:	90 e0       	ldi	r25, 0x00	; 0
    163c:	0e 94 c2 16 	call	0x2d84	; 0x2d84 <__floatunsisf>
    1640:	9b 01       	movw	r18, r22
    1642:	ac 01       	movw	r20, r24
    1644:	c7 01       	movw	r24, r14
    1646:	b6 01       	movw	r22, r12
    1648:	0e 94 2a 15 	call	0x2a54	; 0x2a54 <__subsf3>
    164c:	c6 2e       	mov	r12, r22
    164e:	d7 2e       	mov	r13, r23
    1650:	e8 2e       	mov	r14, r24
    1652:	f9 2e       	mov	r15, r25
    1654:	eb 85       	ldd	r30, Y+11	; 0x0b
    1656:	fc 85       	ldd	r31, Y+12	; 0x0c
    1658:	60 81       	ld	r22, Z
    165a:	71 81       	ldd	r23, Z+1	; 0x01
    165c:	80 e0       	ldi	r24, 0x00	; 0
    165e:	90 e0       	ldi	r25, 0x00	; 0
    1660:	0e 94 c2 16 	call	0x2d84	; 0x2d84 <__floatunsisf>
    1664:	4b 01       	movw	r8, r22
    1666:	5c 01       	movw	r10, r24
    1668:	f8 01       	movw	r30, r16
    166a:	60 81       	ld	r22, Z
    166c:	71 81       	ldd	r23, Z+1	; 0x01
    166e:	80 e0       	ldi	r24, 0x00	; 0
    1670:	90 e0       	ldi	r25, 0x00	; 0
    1672:	0e 94 c2 16 	call	0x2d84	; 0x2d84 <__floatunsisf>
    1676:	9b 01       	movw	r18, r22
    1678:	ac 01       	movw	r20, r24
    167a:	c5 01       	movw	r24, r10
    167c:	b4 01       	movw	r22, r8
    167e:	0e 94 2a 15 	call	0x2a54	; 0x2a54 <__subsf3>
    1682:	86 2e       	mov	r8, r22
    1684:	97 2e       	mov	r9, r23
    1686:	a8 2e       	mov	r10, r24
    1688:	b9 2e       	mov	r11, r25
    168a:	2c 2d       	mov	r18, r12
    168c:	3d 2d       	mov	r19, r13
    168e:	4e 2d       	mov	r20, r14
    1690:	5f 2d       	mov	r21, r15
    1692:	6c 2d       	mov	r22, r12
    1694:	7d 2d       	mov	r23, r13
    1696:	8e 2d       	mov	r24, r14
    1698:	9f 2d       	mov	r25, r15
    169a:	0e 94 8b 18 	call	0x3116	; 0x3116 <__mulsf3>
    169e:	6b 01       	movw	r12, r22
    16a0:	7c 01       	movw	r14, r24
    16a2:	28 2d       	mov	r18, r8
    16a4:	39 2d       	mov	r19, r9
    16a6:	4a 2d       	mov	r20, r10
    16a8:	5b 2d       	mov	r21, r11
    16aa:	68 2d       	mov	r22, r8
    16ac:	79 2d       	mov	r23, r9
    16ae:	8a 2d       	mov	r24, r10
    16b0:	9b 2d       	mov	r25, r11
    16b2:	0e 94 8b 18 	call	0x3116	; 0x3116 <__mulsf3>
    16b6:	9b 01       	movw	r18, r22
    16b8:	ac 01       	movw	r20, r24
    16ba:	c7 01       	movw	r24, r14
    16bc:	b6 01       	movw	r22, r12
    16be:	0e 94 2b 15 	call	0x2a56	; 0x2a56 <__addsf3>
    16c2:	0e 94 f8 18 	call	0x31f0	; 0x31f0 <sqrt>
    16c6:	86 2e       	mov	r8, r22
    16c8:	97 2e       	mov	r9, r23
    16ca:	a8 2e       	mov	r10, r24
    16cc:	b9 2e       	mov	r11, r25
    16ce:	79 81       	ldd	r23, Y+1	; 0x01
    16d0:	6a 81       	ldd	r22, Y+2	; 0x02
    16d2:	9b 81       	ldd	r25, Y+3	; 0x03
    16d4:	8c 81       	ldd	r24, Y+4	; 0x04
    16d6:	27 2f       	mov	r18, r23
    16d8:	36 2f       	mov	r19, r22
    16da:	49 2f       	mov	r20, r25
    16dc:	58 2f       	mov	r21, r24
    16de:	68 2d       	mov	r22, r8
    16e0:	79 2d       	mov	r23, r9
    16e2:	8a 2d       	mov	r24, r10
    16e4:	9b 2d       	mov	r25, r11
    16e6:	0e 94 d2 17 	call	0x2fa4	; 0x2fa4 <__gesf2>
    16ea:	18 16       	cp	r1, r24
    16ec:	d4 f4       	brge	.+52     	; 0x1722 <determine_blobs+0x254>
    16ee:	20 e0       	ldi	r18, 0x00	; 0
    16f0:	30 e0       	ldi	r19, 0x00	; 0
    16f2:	40 e0       	ldi	r20, 0x00	; 0
    16f4:	5f e3       	ldi	r21, 0x3F	; 63
    16f6:	68 2d       	mov	r22, r8
    16f8:	79 2d       	mov	r23, r9
    16fa:	8a 2d       	mov	r24, r10
    16fc:	9b 2d       	mov	r25, r11
    16fe:	0e 94 8b 18 	call	0x3116	; 0x3116 <__mulsf3>
    1702:	6d 8b       	std	Y+21, r22	; 0x15
    1704:	7e 8b       	std	Y+22, r23	; 0x16
    1706:	8f 8b       	std	Y+23, r24	; 0x17
    1708:	98 8f       	std	Y+24, r25	; 0x18
    170a:	fb 8d       	ldd	r31, Y+27	; 0x1b
    170c:	f9 8b       	std	Y+17, r31	; 0x11
    170e:	2c 8d       	ldd	r18, Y+28	; 0x1c
    1710:	2a 8b       	std	Y+18, r18	; 0x12
    1712:	3d 85       	ldd	r19, Y+13	; 0x0d
    1714:	3b 8b       	std	Y+19, r19	; 0x13
    1716:	4e 85       	ldd	r20, Y+14	; 0x0e
    1718:	4c 8b       	std	Y+20, r20	; 0x14
    171a:	89 82       	std	Y+1, r8	; 0x01
    171c:	9a 82       	std	Y+2, r9	; 0x02
    171e:	ab 82       	std	Y+3, r10	; 0x03
    1720:	bc 82       	std	Y+4, r11	; 0x04
    1722:	7d 81       	ldd	r23, Y+5	; 0x05
    1724:	6e 81       	ldd	r22, Y+6	; 0x06
    1726:	27 2f       	mov	r18, r23
    1728:	36 2f       	mov	r19, r22
    172a:	42 2d       	mov	r20, r2
    172c:	53 2d       	mov	r21, r3
    172e:	68 2d       	mov	r22, r8
    1730:	79 2d       	mov	r23, r9
    1732:	8a 2d       	mov	r24, r10
    1734:	9b 2d       	mov	r25, r11
    1736:	0e 94 f1 15 	call	0x2be2	; 0x2be2 <__cmpsf2>
    173a:	88 23       	and	r24, r24
    173c:	64 f4       	brge	.+24     	; 0x1756 <determine_blobs+0x288>
    173e:	6b 8d       	ldd	r22, Y+27	; 0x1b
    1740:	7c 8d       	ldd	r23, Y+28	; 0x1c
    1742:	78 8b       	std	Y+16, r23	; 0x10
    1744:	6f 87       	std	Y+15, r22	; 0x0f
    1746:	7d 85       	ldd	r23, Y+13	; 0x0d
    1748:	79 8f       	std	Y+25, r23	; 0x19
    174a:	8e 85       	ldd	r24, Y+14	; 0x0e
    174c:	8a 8f       	std	Y+26, r24	; 0x1a
    174e:	8d 82       	std	Y+5, r8	; 0x05
    1750:	9e 82       	std	Y+6, r9	; 0x06
    1752:	2a 2c       	mov	r2, r10
    1754:	3b 2c       	mov	r3, r11
    1756:	92 e0       	ldi	r25, 0x02	; 2
    1758:	69 0e       	add	r6, r25
    175a:	71 1c       	adc	r7, r1
    175c:	0e 5f       	subi	r16, 0xFE	; 254
    175e:	1f 4f       	sbci	r17, 0xFF	; 255
    1760:	eb 8d       	ldd	r30, Y+27	; 0x1b
    1762:	fc 8d       	ldd	r31, Y+28	; 0x1c
    1764:	31 96       	adiw	r30, 0x01	; 1
    1766:	fc 8f       	std	Y+28, r31	; 0x1c
    1768:	eb 8f       	std	Y+27, r30	; 0x1b
    176a:	34 97       	sbiw	r30, 0x04	; 4
    176c:	09 f0       	breq	.+2      	; 0x1770 <determine_blobs+0x2a2>
    176e:	51 cf       	rjmp	.-350    	; 0x1612 <determine_blobs+0x144>
    1770:	2f 81       	ldd	r18, Y+7	; 0x07
    1772:	38 85       	ldd	r19, Y+8	; 0x08
    1774:	2f 5f       	subi	r18, 0xFF	; 255
    1776:	3f 4f       	sbci	r19, 0xFF	; 255
    1778:	38 87       	std	Y+8, r19	; 0x08
    177a:	2f 83       	std	Y+7, r18	; 0x07
    177c:	69 01       	movw	r12, r18
    177e:	24 30       	cpi	r18, 0x04	; 4
    1780:	31 05       	cpc	r19, r1
    1782:	39 f1       	breq	.+78     	; 0x17d2 <determine_blobs+0x304>
    1784:	34 e0       	ldi	r19, 0x04	; 4
    1786:	c3 16       	cp	r12, r19
    1788:	d1 04       	cpc	r13, r1
    178a:	94 f7       	brge	.-28     	; 0x1770 <determine_blobs+0x2a2>
    178c:	86 01       	movw	r16, r12
    178e:	0f 5f       	subi	r16, 0xFF	; 255
    1790:	1f 4f       	sbci	r17, 0xFF	; 255
    1792:	00 0f       	add	r16, r16
    1794:	11 1f       	adc	r17, r17
    1796:	0f 2e       	mov	r0, r31
    1798:	f8 e7       	ldi	r31, 0x78	; 120
    179a:	ef 2e       	mov	r14, r31
    179c:	f1 e0       	ldi	r31, 0x01	; 1
    179e:	ff 2e       	mov	r15, r31
    17a0:	f0 2d       	mov	r31, r0
    17a2:	e0 0e       	add	r14, r16
    17a4:	f1 1e       	adc	r15, r17
    17a6:	00 59       	subi	r16, 0x90	; 144
    17a8:	1e 4f       	sbci	r17, 0xFE	; 254
    17aa:	c6 01       	movw	r24, r12
    17ac:	88 0f       	add	r24, r24
    17ae:	99 1f       	adc	r25, r25
    17b0:	ac 01       	movw	r20, r24
    17b2:	48 58       	subi	r20, 0x88	; 136
    17b4:	5e 4f       	sbci	r21, 0xFE	; 254
    17b6:	5a 87       	std	Y+10, r21	; 0x0a
    17b8:	49 87       	std	Y+9, r20	; 0x09
    17ba:	bc 01       	movw	r22, r24
    17bc:	60 59       	subi	r22, 0x90	; 144
    17be:	7e 4f       	sbci	r23, 0xFE	; 254
    17c0:	7c 87       	std	Y+12, r23	; 0x0c
    17c2:	6b 87       	std	Y+11, r22	; 0x0b
    17c4:	cd 86       	std	Y+13, r12	; 0x0d
    17c6:	de 86       	std	Y+14, r13	; 0x0e
    17c8:	dc 8e       	std	Y+28, r13	; 0x1c
    17ca:	cb 8e       	std	Y+27, r12	; 0x1b
    17cc:	26 01       	movw	r4, r12
    17ce:	37 01       	movw	r6, r14
    17d0:	c7 cf       	rjmp	.-114    	; 0x1760 <determine_blobs+0x292>
    17d2:	88 2d       	mov	r24, r8
    17d4:	99 2d       	mov	r25, r9
    17d6:	aa 2d       	mov	r26, r10
    17d8:	bb 2d       	mov	r27, r11
    17da:	80 93 6c 01 	sts	0x016C, r24
    17de:	90 93 6d 01 	sts	0x016D, r25
    17e2:	a0 93 6e 01 	sts	0x016E, r26
    17e6:	b0 93 6f 01 	sts	0x016F, r27
    17ea:	59 81       	ldd	r21, Y+1	; 0x01
    17ec:	4a 81       	ldd	r20, Y+2	; 0x02
    17ee:	3b 81       	ldd	r19, Y+3	; 0x03
    17f0:	2c 81       	ldd	r18, Y+4	; 0x04
    17f2:	85 2f       	mov	r24, r21
    17f4:	94 2f       	mov	r25, r20
    17f6:	a3 2f       	mov	r26, r19
    17f8:	b2 2f       	mov	r27, r18
    17fa:	80 93 68 01 	sts	0x0168, r24
    17fe:	90 93 69 01 	sts	0x0169, r25
    1802:	a0 93 6a 01 	sts	0x016A, r26
    1806:	b0 93 6b 01 	sts	0x016B, r27
    180a:	7b 89       	ldd	r23, Y+19	; 0x13
    180c:	70 93 62 01 	sts	0x0162, r23
    1810:	8c 89       	ldd	r24, Y+20	; 0x14
    1812:	80 93 63 01 	sts	0x0163, r24
    1816:	99 89       	ldd	r25, Y+17	; 0x11
    1818:	90 93 60 01 	sts	0x0160, r25
    181c:	ea 89       	ldd	r30, Y+18	; 0x12
    181e:	e0 93 61 01 	sts	0x0161, r30
    1822:	5d 89       	ldd	r21, Y+21	; 0x15
    1824:	4e 89       	ldd	r20, Y+22	; 0x16
    1826:	3f 89       	ldd	r19, Y+23	; 0x17
    1828:	28 8d       	ldd	r18, Y+24	; 0x18
    182a:	85 2f       	mov	r24, r21
    182c:	94 2f       	mov	r25, r20
    182e:	a3 2f       	mov	r26, r19
    1830:	b2 2f       	mov	r27, r18
    1832:	80 93 64 01 	sts	0x0164, r24
    1836:	90 93 65 01 	sts	0x0165, r25
    183a:	a0 93 66 01 	sts	0x0166, r26
    183e:	b0 93 67 01 	sts	0x0167, r27
    1842:	5d 81       	ldd	r21, Y+5	; 0x05
    1844:	4e 81       	ldd	r20, Y+6	; 0x06
    1846:	85 2f       	mov	r24, r21
    1848:	94 2f       	mov	r25, r20
    184a:	a2 2d       	mov	r26, r2
    184c:	b3 2d       	mov	r27, r3
    184e:	80 93 04 01 	sts	0x0104, r24
    1852:	90 93 05 01 	sts	0x0105, r25
    1856:	a0 93 06 01 	sts	0x0106, r26
    185a:	b0 93 07 01 	sts	0x0107, r27
    185e:	f9 8d       	ldd	r31, Y+25	; 0x19
    1860:	f0 93 5e 01 	sts	0x015E, r31
    1864:	2a 8d       	ldd	r18, Y+26	; 0x1a
    1866:	20 93 5f 01 	sts	0x015F, r18
    186a:	3f 85       	ldd	r19, Y+15	; 0x0f
    186c:	30 93 5c 01 	sts	0x015C, r19
    1870:	48 89       	ldd	r20, Y+16	; 0x10
    1872:	40 93 5d 01 	sts	0x015D, r20
    1876:	80 91 62 01 	lds	r24, 0x0162
    187a:	90 91 63 01 	lds	r25, 0x0163
    187e:	20 91 5e 01 	lds	r18, 0x015E
    1882:	30 91 5f 01 	lds	r19, 0x015F
    1886:	82 17       	cp	r24, r18
    1888:	93 07       	cpc	r25, r19
    188a:	19 f5       	brne	.+70     	; 0x18d2 <determine_blobs+0x404>
    188c:	90 93 9f 01 	sts	0x019F, r25
    1890:	80 93 9e 01 	sts	0x019E, r24
    1894:	40 91 60 01 	lds	r20, 0x0160
    1898:	50 91 61 01 	lds	r21, 0x0161
    189c:	50 93 9d 01 	sts	0x019D, r21
    18a0:	40 93 9c 01 	sts	0x019C, r20
    18a4:	20 91 5c 01 	lds	r18, 0x015C
    18a8:	30 91 5d 01 	lds	r19, 0x015D
    18ac:	30 93 99 01 	sts	0x0199, r19
    18b0:	20 93 98 01 	sts	0x0198, r18
    18b4:	69 e0       	ldi	r22, 0x09	; 9
    18b6:	70 e0       	ldi	r23, 0x00	; 0
    18b8:	fb 01       	movw	r30, r22
    18ba:	e8 1b       	sub	r30, r24
    18bc:	f9 0b       	sbc	r31, r25
    18be:	cf 01       	movw	r24, r30
    18c0:	84 1b       	sub	r24, r20
    18c2:	95 0b       	sbc	r25, r21
    18c4:	82 1b       	sub	r24, r18
    18c6:	93 0b       	sbc	r25, r19
    18c8:	90 93 9b 01 	sts	0x019B, r25
    18cc:	80 93 9a 01 	sts	0x019A, r24
    18d0:	66 c0       	rjmp	.+204    	; 0x199e <determine_blobs+0x4d0>
    18d2:	4f 85       	ldd	r20, Y+15	; 0x0f
    18d4:	58 89       	ldd	r21, Y+16	; 0x10
    18d6:	84 17       	cp	r24, r20
    18d8:	95 07       	cpc	r25, r21
    18da:	f9 f4       	brne	.+62     	; 0x191a <determine_blobs+0x44c>
    18dc:	90 93 9f 01 	sts	0x019F, r25
    18e0:	80 93 9e 01 	sts	0x019E, r24
    18e4:	40 91 60 01 	lds	r20, 0x0160
    18e8:	50 91 61 01 	lds	r21, 0x0161
    18ec:	50 93 9d 01 	sts	0x019D, r21
    18f0:	40 93 9c 01 	sts	0x019C, r20
    18f4:	30 93 99 01 	sts	0x0199, r19
    18f8:	20 93 98 01 	sts	0x0198, r18
    18fc:	69 e0       	ldi	r22, 0x09	; 9
    18fe:	70 e0       	ldi	r23, 0x00	; 0
    1900:	fb 01       	movw	r30, r22
    1902:	e8 1b       	sub	r30, r24
    1904:	f9 0b       	sbc	r31, r25
    1906:	cf 01       	movw	r24, r30
    1908:	84 1b       	sub	r24, r20
    190a:	95 0b       	sbc	r25, r21
    190c:	82 1b       	sub	r24, r18
    190e:	93 0b       	sbc	r25, r19
    1910:	90 93 9b 01 	sts	0x019B, r25
    1914:	80 93 9a 01 	sts	0x019A, r24
    1918:	42 c0       	rjmp	.+132    	; 0x199e <determine_blobs+0x4d0>
    191a:	40 91 60 01 	lds	r20, 0x0160
    191e:	50 91 61 01 	lds	r21, 0x0161
    1922:	24 17       	cp	r18, r20
    1924:	35 07       	cpc	r19, r21
    1926:	01 f5       	brne	.+64     	; 0x1968 <determine_blobs+0x49a>
    1928:	30 93 9f 01 	sts	0x019F, r19
    192c:	20 93 9e 01 	sts	0x019E, r18
    1930:	90 93 9d 01 	sts	0x019D, r25
    1934:	80 93 9c 01 	sts	0x019C, r24
    1938:	4f 85       	ldd	r20, Y+15	; 0x0f
    193a:	58 89       	ldd	r21, Y+16	; 0x10
    193c:	50 93 99 01 	sts	0x0199, r21
    1940:	40 93 98 01 	sts	0x0198, r20
    1944:	49 e0       	ldi	r20, 0x09	; 9
    1946:	50 e0       	ldi	r21, 0x00	; 0
    1948:	ba 01       	movw	r22, r20
    194a:	62 1b       	sub	r22, r18
    194c:	73 0b       	sbc	r23, r19
    194e:	fb 01       	movw	r30, r22
    1950:	e8 1b       	sub	r30, r24
    1952:	f9 0b       	sbc	r31, r25
    1954:	cf 01       	movw	r24, r30
    1956:	2f 85       	ldd	r18, Y+15	; 0x0f
    1958:	38 89       	ldd	r19, Y+16	; 0x10
    195a:	82 1b       	sub	r24, r18
    195c:	93 0b       	sbc	r25, r19
    195e:	90 93 9b 01 	sts	0x019B, r25
    1962:	80 93 9a 01 	sts	0x019A, r24
    1966:	1b c0       	rjmp	.+54     	; 0x199e <determine_blobs+0x4d0>
    1968:	50 93 9f 01 	sts	0x019F, r21
    196c:	40 93 9e 01 	sts	0x019E, r20
    1970:	90 93 9d 01 	sts	0x019D, r25
    1974:	80 93 9c 01 	sts	0x019C, r24
    1978:	30 93 99 01 	sts	0x0199, r19
    197c:	20 93 98 01 	sts	0x0198, r18
    1980:	69 e0       	ldi	r22, 0x09	; 9
    1982:	70 e0       	ldi	r23, 0x00	; 0
    1984:	fb 01       	movw	r30, r22
    1986:	e4 1b       	sub	r30, r20
    1988:	f5 0b       	sbc	r31, r21
    198a:	bf 01       	movw	r22, r30
    198c:	68 1b       	sub	r22, r24
    198e:	79 0b       	sbc	r23, r25
    1990:	cb 01       	movw	r24, r22
    1992:	82 1b       	sub	r24, r18
    1994:	93 0b       	sbc	r25, r19
    1996:	90 93 9b 01 	sts	0x019B, r25
    199a:	80 93 9a 01 	sts	0x019A, r24
    199e:	81 e0       	ldi	r24, 0x01	; 1
    19a0:	6c 96       	adiw	r28, 0x1c	; 28
    19a2:	0f b6       	in	r0, 0x3f	; 63
    19a4:	f8 94       	cli
    19a6:	de bf       	out	0x3e, r29	; 62
    19a8:	0f be       	out	0x3f, r0	; 63
    19aa:	cd bf       	out	0x3d, r28	; 61
    19ac:	df 91       	pop	r29
    19ae:	cf 91       	pop	r28
    19b0:	1f 91       	pop	r17
    19b2:	0f 91       	pop	r16
    19b4:	ff 90       	pop	r15
    19b6:	ef 90       	pop	r14
    19b8:	df 90       	pop	r13
    19ba:	cf 90       	pop	r12
    19bc:	bf 90       	pop	r11
    19be:	af 90       	pop	r10
    19c0:	9f 90       	pop	r9
    19c2:	8f 90       	pop	r8
    19c4:	7f 90       	pop	r7
    19c6:	6f 90       	pop	r6
    19c8:	5f 90       	pop	r5
    19ca:	4f 90       	pop	r4
    19cc:	3f 90       	pop	r3
    19ce:	2f 90       	pop	r2
    19d0:	08 95       	ret

000019d2 <local_init>:
    19d2:	0e 94 27 14 	call	0x284e	; 0x284e <m_wii_open>
    19d6:	60 e7       	ldi	r22, 0x70	; 112
    19d8:	71 e0       	ldi	r23, 0x01	; 1
    19da:	88 e7       	ldi	r24, 0x78	; 120
    19dc:	91 e0       	ldi	r25, 0x01	; 1
    19de:	0e 94 26 0a 	call	0x144c	; 0x144c <getData>
    19e2:	0e 94 67 0a 	call	0x14ce	; 0x14ce <determine_blobs>
    19e6:	81 e0       	ldi	r24, 0x01	; 1
    19e8:	08 95       	ret

000019ea <localize>:
    19ea:	2f 92       	push	r2
    19ec:	3f 92       	push	r3
    19ee:	4f 92       	push	r4
    19f0:	5f 92       	push	r5
    19f2:	6f 92       	push	r6
    19f4:	7f 92       	push	r7
    19f6:	8f 92       	push	r8
    19f8:	9f 92       	push	r9
    19fa:	af 92       	push	r10
    19fc:	bf 92       	push	r11
    19fe:	cf 92       	push	r12
    1a00:	df 92       	push	r13
    1a02:	ef 92       	push	r14
    1a04:	ff 92       	push	r15
    1a06:	0f 93       	push	r16
    1a08:	1f 93       	push	r17
    1a0a:	cf 93       	push	r28
    1a0c:	df 93       	push	r29
    1a0e:	cd b7       	in	r28, 0x3d	; 61
    1a10:	de b7       	in	r29, 0x3e	; 62
    1a12:	2d 97       	sbiw	r28, 0x0d	; 13
    1a14:	0f b6       	in	r0, 0x3f	; 63
    1a16:	f8 94       	cli
    1a18:	de bf       	out	0x3e, r29	; 62
    1a1a:	0f be       	out	0x3f, r0	; 63
    1a1c:	cd bf       	out	0x3d, r28	; 61
    1a1e:	8c 01       	movw	r16, r24
    1a20:	10 92 5b 01 	sts	0x015B, r1
    1a24:	10 92 5a 01 	sts	0x015A, r1
    1a28:	0e 94 67 0a 	call	0x14ce	; 0x14ce <determine_blobs>
    1a2c:	e0 90 9e 01 	lds	r14, 0x019E
    1a30:	f0 90 9f 01 	lds	r15, 0x019F
    1a34:	f7 01       	movw	r30, r14
    1a36:	ee 0f       	add	r30, r30
    1a38:	ff 1f       	adc	r31, r31
    1a3a:	e8 58       	subi	r30, 0x88	; 136
    1a3c:	fe 4f       	sbci	r31, 0xFE	; 254
    1a3e:	20 81       	ld	r18, Z
    1a40:	31 81       	ldd	r19, Z+1	; 0x01
    1a42:	3a 83       	std	Y+2, r19	; 0x02
    1a44:	29 83       	std	Y+1, r18	; 0x01
    1a46:	2f 3f       	cpi	r18, 0xFF	; 255
    1a48:	83 e0       	ldi	r24, 0x03	; 3
    1a4a:	38 07       	cpc	r19, r24
    1a4c:	08 f0       	brcs	.+2      	; 0x1a50 <localize+0x66>
    1a4e:	ea c2       	rjmp	.+1492   	; 0x2024 <localize+0x63a>
    1a50:	a0 90 9c 01 	lds	r10, 0x019C
    1a54:	b0 90 9d 01 	lds	r11, 0x019D
    1a58:	f5 01       	movw	r30, r10
    1a5a:	ee 0f       	add	r30, r30
    1a5c:	ff 1f       	adc	r31, r31
    1a5e:	e8 58       	subi	r30, 0x88	; 136
    1a60:	fe 4f       	sbci	r31, 0xFE	; 254
    1a62:	c0 80       	ld	r12, Z
    1a64:	d1 80       	ldd	r13, Z+1	; 0x01
    1a66:	9f ef       	ldi	r25, 0xFF	; 255
    1a68:	c9 16       	cp	r12, r25
    1a6a:	93 e0       	ldi	r25, 0x03	; 3
    1a6c:	d9 06       	cpc	r13, r25
    1a6e:	08 f0       	brcs	.+2      	; 0x1a72 <localize+0x88>
    1a70:	d9 c2       	rjmp	.+1458   	; 0x2024 <localize+0x63a>
    1a72:	b9 01       	movw	r22, r18
    1a74:	6c 0d       	add	r22, r12
    1a76:	7d 1d       	adc	r23, r13
    1a78:	80 e0       	ldi	r24, 0x00	; 0
    1a7a:	90 e0       	ldi	r25, 0x00	; 0
    1a7c:	0e 94 c2 16 	call	0x2d84	; 0x2d84 <__floatunsisf>
    1a80:	20 e0       	ldi	r18, 0x00	; 0
    1a82:	30 e0       	ldi	r19, 0x00	; 0
    1a84:	40 e0       	ldi	r20, 0x00	; 0
    1a86:	5f e3       	ldi	r21, 0x3F	; 63
    1a88:	0e 94 8b 18 	call	0x3116	; 0x3116 <__mulsf3>
    1a8c:	20 91 0c 01 	lds	r18, 0x010C
    1a90:	30 91 0d 01 	lds	r19, 0x010D
    1a94:	40 91 0e 01 	lds	r20, 0x010E
    1a98:	50 91 0f 01 	lds	r21, 0x010F
    1a9c:	0e 94 2a 15 	call	0x2a54	; 0x2a54 <__subsf3>
    1aa0:	6d 83       	std	Y+5, r22	; 0x05
    1aa2:	7e 83       	std	Y+6, r23	; 0x06
    1aa4:	8f 83       	std	Y+7, r24	; 0x07
    1aa6:	98 87       	std	Y+8, r25	; 0x08
    1aa8:	f7 01       	movw	r30, r14
    1aaa:	ee 0f       	add	r30, r30
    1aac:	ff 1f       	adc	r31, r31
    1aae:	e0 59       	subi	r30, 0x90	; 144
    1ab0:	fe 4f       	sbci	r31, 0xFE	; 254
    1ab2:	e0 80       	ld	r14, Z
    1ab4:	f1 80       	ldd	r15, Z+1	; 0x01
    1ab6:	f5 01       	movw	r30, r10
    1ab8:	ee 0f       	add	r30, r30
    1aba:	ff 1f       	adc	r31, r31
    1abc:	e0 59       	subi	r30, 0x90	; 144
    1abe:	fe 4f       	sbci	r31, 0xFE	; 254
    1ac0:	a0 80       	ld	r10, Z
    1ac2:	b1 80       	ldd	r11, Z+1	; 0x01
    1ac4:	b5 01       	movw	r22, r10
    1ac6:	6e 0d       	add	r22, r14
    1ac8:	7f 1d       	adc	r23, r15
    1aca:	80 e0       	ldi	r24, 0x00	; 0
    1acc:	90 e0       	ldi	r25, 0x00	; 0
    1ace:	0e 94 c2 16 	call	0x2d84	; 0x2d84 <__floatunsisf>
    1ad2:	20 e0       	ldi	r18, 0x00	; 0
    1ad4:	30 e0       	ldi	r19, 0x00	; 0
    1ad6:	40 e0       	ldi	r20, 0x00	; 0
    1ad8:	5f e3       	ldi	r21, 0x3F	; 63
    1ada:	0e 94 8b 18 	call	0x3116	; 0x3116 <__mulsf3>
    1ade:	20 91 08 01 	lds	r18, 0x0108
    1ae2:	30 91 09 01 	lds	r19, 0x0109
    1ae6:	40 91 0a 01 	lds	r20, 0x010A
    1aea:	50 91 0b 01 	lds	r21, 0x010B
    1aee:	0e 94 2a 15 	call	0x2a54	; 0x2a54 <__subsf3>
    1af2:	69 87       	std	Y+9, r22	; 0x09
    1af4:	7a 87       	std	Y+10, r23	; 0x0a
    1af6:	28 2e       	mov	r2, r24
    1af8:	39 2e       	mov	r3, r25
    1afa:	b7 01       	movw	r22, r14
    1afc:	80 e0       	ldi	r24, 0x00	; 0
    1afe:	90 e0       	ldi	r25, 0x00	; 0
    1b00:	0e 94 c2 16 	call	0x2d84	; 0x2d84 <__floatunsisf>
    1b04:	2b 01       	movw	r4, r22
    1b06:	3c 01       	movw	r6, r24
    1b08:	b5 01       	movw	r22, r10
    1b0a:	80 e0       	ldi	r24, 0x00	; 0
    1b0c:	90 e0       	ldi	r25, 0x00	; 0
    1b0e:	0e 94 c2 16 	call	0x2d84	; 0x2d84 <__floatunsisf>
    1b12:	9b 01       	movw	r18, r22
    1b14:	ac 01       	movw	r20, r24
    1b16:	c3 01       	movw	r24, r6
    1b18:	b2 01       	movw	r22, r4
    1b1a:	0e 94 2a 15 	call	0x2a54	; 0x2a54 <__subsf3>
    1b1e:	4b 01       	movw	r8, r22
    1b20:	5c 01       	movw	r10, r24
    1b22:	e9 81       	ldd	r30, Y+1	; 0x01
    1b24:	fa 81       	ldd	r31, Y+2	; 0x02
    1b26:	bf 01       	movw	r22, r30
    1b28:	80 e0       	ldi	r24, 0x00	; 0
    1b2a:	90 e0       	ldi	r25, 0x00	; 0
    1b2c:	0e 94 c2 16 	call	0x2d84	; 0x2d84 <__floatunsisf>
    1b30:	2b 01       	movw	r4, r22
    1b32:	3c 01       	movw	r6, r24
    1b34:	b6 01       	movw	r22, r12
    1b36:	80 e0       	ldi	r24, 0x00	; 0
    1b38:	90 e0       	ldi	r25, 0x00	; 0
    1b3a:	0e 94 c2 16 	call	0x2d84	; 0x2d84 <__floatunsisf>
    1b3e:	9b 01       	movw	r18, r22
    1b40:	ac 01       	movw	r20, r24
    1b42:	c3 01       	movw	r24, r6
    1b44:	b2 01       	movw	r22, r4
    1b46:	0e 94 2a 15 	call	0x2a54	; 0x2a54 <__subsf3>
    1b4a:	a5 01       	movw	r20, r10
    1b4c:	94 01       	movw	r18, r8
    1b4e:	0e 94 9e 15 	call	0x2b3c	; 0x2b3c <atan2>
    1b52:	4b 01       	movw	r8, r22
    1b54:	5c 01       	movw	r10, r24
    1b56:	7d 81       	ldd	r23, Y+5	; 0x05
    1b58:	6e 81       	ldd	r22, Y+6	; 0x06
    1b5a:	9f 81       	ldd	r25, Y+7	; 0x07
    1b5c:	88 85       	ldd	r24, Y+8	; 0x08
    1b5e:	27 2f       	mov	r18, r23
    1b60:	36 2f       	mov	r19, r22
    1b62:	49 2f       	mov	r20, r25
    1b64:	58 2f       	mov	r21, r24
    1b66:	b9 85       	ldd	r27, Y+9	; 0x09
    1b68:	aa 85       	ldd	r26, Y+10	; 0x0a
    1b6a:	6b 2f       	mov	r22, r27
    1b6c:	7a 2f       	mov	r23, r26
    1b6e:	82 2d       	mov	r24, r2
    1b70:	93 2d       	mov	r25, r3
    1b72:	0e 94 9e 15 	call	0x2b3c	; 0x2b3c <atan2>
    1b76:	2b 01       	movw	r4, r22
    1b78:	3c 01       	movw	r6, r24
    1b7a:	7d 81       	ldd	r23, Y+5	; 0x05
    1b7c:	6e 81       	ldd	r22, Y+6	; 0x06
    1b7e:	9f 81       	ldd	r25, Y+7	; 0x07
    1b80:	88 85       	ldd	r24, Y+8	; 0x08
    1b82:	27 2f       	mov	r18, r23
    1b84:	36 2f       	mov	r19, r22
    1b86:	49 2f       	mov	r20, r25
    1b88:	58 2f       	mov	r21, r24
    1b8a:	67 2f       	mov	r22, r23
    1b8c:	73 2f       	mov	r23, r19
    1b8e:	89 2f       	mov	r24, r25
    1b90:	95 2f       	mov	r25, r21
    1b92:	0e 94 8b 18 	call	0x3116	; 0x3116 <__mulsf3>
    1b96:	6b 01       	movw	r12, r22
    1b98:	7c 01       	movw	r14, r24
    1b9a:	79 85       	ldd	r23, Y+9	; 0x09
    1b9c:	6a 85       	ldd	r22, Y+10	; 0x0a
    1b9e:	27 2f       	mov	r18, r23
    1ba0:	36 2f       	mov	r19, r22
    1ba2:	42 2d       	mov	r20, r2
    1ba4:	53 2d       	mov	r21, r3
    1ba6:	67 2f       	mov	r22, r23
    1ba8:	73 2f       	mov	r23, r19
    1baa:	82 2d       	mov	r24, r2
    1bac:	93 2d       	mov	r25, r3
    1bae:	0e 94 8b 18 	call	0x3116	; 0x3116 <__mulsf3>
    1bb2:	9b 01       	movw	r18, r22
    1bb4:	ac 01       	movw	r20, r24
    1bb6:	c7 01       	movw	r24, r14
    1bb8:	b6 01       	movw	r22, r12
    1bba:	0e 94 2b 15 	call	0x2a56	; 0x2a56 <__addsf3>
    1bbe:	0e 94 f8 18 	call	0x31f0	; 0x31f0 <sqrt>
    1bc2:	6b 01       	movw	r12, r22
    1bc4:	7c 01       	movw	r14, r24
    1bc6:	20 e0       	ldi	r18, 0x00	; 0
    1bc8:	30 e0       	ldi	r19, 0x00	; 0
    1bca:	a9 01       	movw	r20, r18
    1bcc:	60 91 80 01 	lds	r22, 0x0180
    1bd0:	70 91 81 01 	lds	r23, 0x0181
    1bd4:	80 91 82 01 	lds	r24, 0x0182
    1bd8:	90 91 83 01 	lds	r25, 0x0183
    1bdc:	0e 94 f1 15 	call	0x2be2	; 0x2be2 <__cmpsf2>
    1be0:	81 11       	cpse	r24, r1
    1be2:	08 c0       	rjmp	.+16     	; 0x1bf4 <localize+0x20a>
    1be4:	80 92 80 01 	sts	0x0180, r8
    1be8:	90 92 81 01 	sts	0x0181, r9
    1bec:	a0 92 82 01 	sts	0x0182, r10
    1bf0:	b0 92 83 01 	sts	0x0183, r11
    1bf4:	23 e3       	ldi	r18, 0x33	; 51
    1bf6:	33 e3       	ldi	r19, 0x33	; 51
    1bf8:	43 e7       	ldi	r20, 0x73	; 115
    1bfa:	5f e3       	ldi	r21, 0x3F	; 63
    1bfc:	60 91 80 01 	lds	r22, 0x0180
    1c00:	70 91 81 01 	lds	r23, 0x0181
    1c04:	80 91 82 01 	lds	r24, 0x0182
    1c08:	90 91 83 01 	lds	r25, 0x0183
    1c0c:	0e 94 8b 18 	call	0x3116	; 0x3116 <__mulsf3>
    1c10:	4b 01       	movw	r8, r22
    1c12:	5c 01       	movw	r10, r24
    1c14:	20 ed       	ldi	r18, 0xD0	; 208
    1c16:	3c ec       	ldi	r19, 0xCC	; 204
    1c18:	4c e4       	ldi	r20, 0x4C	; 76
    1c1a:	5d e3       	ldi	r21, 0x3D	; 61
    1c1c:	60 91 8c 01 	lds	r22, 0x018C
    1c20:	70 91 8d 01 	lds	r23, 0x018D
    1c24:	80 91 8e 01 	lds	r24, 0x018E
    1c28:	90 91 8f 01 	lds	r25, 0x018F
    1c2c:	0e 94 8b 18 	call	0x3116	; 0x3116 <__mulsf3>
    1c30:	9b 01       	movw	r18, r22
    1c32:	ac 01       	movw	r20, r24
    1c34:	c5 01       	movw	r24, r10
    1c36:	b4 01       	movw	r22, r8
    1c38:	0e 94 2b 15 	call	0x2a56	; 0x2a56 <__addsf3>
    1c3c:	20 e0       	ldi	r18, 0x00	; 0
    1c3e:	30 e0       	ldi	r19, 0x00	; 0
    1c40:	44 e3       	ldi	r20, 0x34	; 52
    1c42:	53 e4       	ldi	r21, 0x43	; 67
    1c44:	0e 94 8b 18 	call	0x3116	; 0x3116 <__mulsf3>
    1c48:	23 ec       	ldi	r18, 0xC3	; 195
    1c4a:	35 ef       	ldi	r19, 0xF5	; 245
    1c4c:	48 e4       	ldi	r20, 0x48	; 72
    1c4e:	50 e4       	ldi	r21, 0x40	; 64
    1c50:	0e 94 f8 15 	call	0x2bf0	; 0x2bf0 <__divsf3>
    1c54:	86 2e       	mov	r8, r22
    1c56:	97 2e       	mov	r9, r23
    1c58:	a8 2e       	mov	r10, r24
    1c5a:	b9 2e       	mov	r11, r25
    1c5c:	f8 01       	movw	r30, r16
    1c5e:	80 86       	std	Z+8, r8	; 0x08
    1c60:	91 86       	std	Z+9, r9	; 0x09
    1c62:	a2 86       	std	Z+10, r10	; 0x0a
    1c64:	b3 86       	std	Z+11, r11	; 0x0b
    1c66:	23 ec       	ldi	r18, 0xC3	; 195
    1c68:	35 ef       	ldi	r19, 0xF5	; 245
    1c6a:	48 e4       	ldi	r20, 0x48	; 72
    1c6c:	50 e4       	ldi	r21, 0x40	; 64
    1c6e:	0e 94 8b 18 	call	0x3116	; 0x3116 <__mulsf3>
    1c72:	20 e0       	ldi	r18, 0x00	; 0
    1c74:	30 e0       	ldi	r19, 0x00	; 0
    1c76:	44 e3       	ldi	r20, 0x34	; 52
    1c78:	53 e4       	ldi	r21, 0x43	; 67
    1c7a:	0e 94 f8 15 	call	0x2bf0	; 0x2bf0 <__divsf3>
    1c7e:	9b 01       	movw	r18, r22
    1c80:	ac 01       	movw	r20, r24
    1c82:	62 e5       	ldi	r22, 0x52	; 82
    1c84:	78 eb       	ldi	r23, 0xB8	; 184
    1c86:	86 e9       	ldi	r24, 0x96	; 150
    1c88:	90 e4       	ldi	r25, 0x40	; 64
    1c8a:	0e 94 2a 15 	call	0x2a54	; 0x2a54 <__subsf3>
    1c8e:	a3 01       	movw	r20, r6
    1c90:	92 01       	movw	r18, r4
    1c92:	0e 94 2a 15 	call	0x2a54	; 0x2a54 <__subsf3>
    1c96:	86 2e       	mov	r8, r22
    1c98:	97 2e       	mov	r9, r23
    1c9a:	a8 2e       	mov	r10, r24
    1c9c:	b9 2e       	mov	r11, r25
    1c9e:	0e 94 ee 18 	call	0x31dc	; 0x31dc <sin>
    1ca2:	9b 01       	movw	r18, r22
    1ca4:	ac 01       	movw	r20, r24
    1ca6:	c7 01       	movw	r24, r14
    1ca8:	b6 01       	movw	r22, r12
    1caa:	90 58       	subi	r25, 0x80	; 128
    1cac:	0e 94 8b 18 	call	0x3116	; 0x3116 <__mulsf3>
    1cb0:	29 e3       	ldi	r18, 0x39	; 57
    1cb2:	3e e8       	ldi	r19, 0x8E	; 142
    1cb4:	43 ea       	ldi	r20, 0xA3	; 163
    1cb6:	5e e3       	ldi	r21, 0x3E	; 62
    1cb8:	0e 94 8b 18 	call	0x3116	; 0x3116 <__mulsf3>
    1cbc:	69 83       	std	Y+1, r22	; 0x01
    1cbe:	7b 87       	std	Y+11, r23	; 0x0b
    1cc0:	8d 87       	std	Y+13, r24	; 0x0d
    1cc2:	9c 87       	std	Y+12, r25	; 0x0c
    1cc4:	47 2f       	mov	r20, r23
    1cc6:	38 2f       	mov	r19, r24
    1cc8:	29 2f       	mov	r18, r25
    1cca:	86 2f       	mov	r24, r22
    1ccc:	94 2f       	mov	r25, r20
    1cce:	a3 2f       	mov	r26, r19
    1cd0:	b2 2f       	mov	r27, r18
    1cd2:	80 93 94 01 	sts	0x0194, r24
    1cd6:	90 93 95 01 	sts	0x0195, r25
    1cda:	a0 93 96 01 	sts	0x0196, r26
    1cde:	b0 93 97 01 	sts	0x0197, r27
    1ce2:	68 2d       	mov	r22, r8
    1ce4:	79 2d       	mov	r23, r9
    1ce6:	8a 2d       	mov	r24, r10
    1ce8:	9b 2d       	mov	r25, r11
    1cea:	0e 94 f5 15 	call	0x2bea	; 0x2bea <cos>
    1cee:	a7 01       	movw	r20, r14
    1cf0:	96 01       	movw	r18, r12
    1cf2:	0e 94 8b 18 	call	0x3116	; 0x3116 <__mulsf3>
    1cf6:	29 e8       	ldi	r18, 0x89	; 137
    1cf8:	3a ed       	ldi	r19, 0xDA	; 218
    1cfa:	45 e9       	ldi	r20, 0x95	; 149
    1cfc:	5e e3       	ldi	r21, 0x3E	; 62
    1cfe:	0e 94 8b 18 	call	0x3116	; 0x3116 <__mulsf3>
    1d02:	86 2e       	mov	r8, r22
    1d04:	97 2e       	mov	r9, r23
    1d06:	a8 2e       	mov	r10, r24
    1d08:	b9 2e       	mov	r11, r25
    1d0a:	86 2f       	mov	r24, r22
    1d0c:	99 2d       	mov	r25, r9
    1d0e:	aa 2d       	mov	r26, r10
    1d10:	bb 2d       	mov	r27, r11
    1d12:	80 93 90 01 	sts	0x0190, r24
    1d16:	90 93 91 01 	sts	0x0191, r25
    1d1a:	a0 93 92 01 	sts	0x0192, r26
    1d1e:	b0 93 93 01 	sts	0x0193, r27
    1d22:	20 e0       	ldi	r18, 0x00	; 0
    1d24:	30 e0       	ldi	r19, 0x00	; 0
    1d26:	a9 01       	movw	r20, r18
    1d28:	60 91 88 01 	lds	r22, 0x0188
    1d2c:	70 91 89 01 	lds	r23, 0x0189
    1d30:	80 91 8a 01 	lds	r24, 0x018A
    1d34:	90 91 8b 01 	lds	r25, 0x018B
    1d38:	0e 94 f1 15 	call	0x2be2	; 0x2be2 <__cmpsf2>
    1d3c:	81 11       	cpse	r24, r1
    1d3e:	2b c0       	rjmp	.+86     	; 0x1d96 <localize+0x3ac>
    1d40:	20 e0       	ldi	r18, 0x00	; 0
    1d42:	30 e0       	ldi	r19, 0x00	; 0
    1d44:	a9 01       	movw	r20, r18
    1d46:	60 91 84 01 	lds	r22, 0x0184
    1d4a:	70 91 85 01 	lds	r23, 0x0185
    1d4e:	80 91 86 01 	lds	r24, 0x0186
    1d52:	90 91 87 01 	lds	r25, 0x0187
    1d56:	0e 94 f1 15 	call	0x2be2	; 0x2be2 <__cmpsf2>
    1d5a:	81 11       	cpse	r24, r1
    1d5c:	1c c0       	rjmp	.+56     	; 0x1d96 <localize+0x3ac>
    1d5e:	59 81       	ldd	r21, Y+1	; 0x01
    1d60:	4b 85       	ldd	r20, Y+11	; 0x0b
    1d62:	3d 85       	ldd	r19, Y+13	; 0x0d
    1d64:	2c 85       	ldd	r18, Y+12	; 0x0c
    1d66:	85 2f       	mov	r24, r21
    1d68:	94 2f       	mov	r25, r20
    1d6a:	a3 2f       	mov	r26, r19
    1d6c:	b2 2f       	mov	r27, r18
    1d6e:	80 93 88 01 	sts	0x0188, r24
    1d72:	90 93 89 01 	sts	0x0189, r25
    1d76:	a0 93 8a 01 	sts	0x018A, r26
    1d7a:	b0 93 8b 01 	sts	0x018B, r27
    1d7e:	88 2d       	mov	r24, r8
    1d80:	99 2d       	mov	r25, r9
    1d82:	aa 2d       	mov	r26, r10
    1d84:	bb 2d       	mov	r27, r11
    1d86:	80 93 84 01 	sts	0x0184, r24
    1d8a:	90 93 85 01 	sts	0x0185, r25
    1d8e:	a0 93 86 01 	sts	0x0186, r26
    1d92:	b0 93 87 01 	sts	0x0187, r27
    1d96:	23 e3       	ldi	r18, 0x33	; 51
    1d98:	33 e3       	ldi	r19, 0x33	; 51
    1d9a:	43 e7       	ldi	r20, 0x73	; 115
    1d9c:	5f e3       	ldi	r21, 0x3F	; 63
    1d9e:	60 91 88 01 	lds	r22, 0x0188
    1da2:	70 91 89 01 	lds	r23, 0x0189
    1da6:	80 91 8a 01 	lds	r24, 0x018A
    1daa:	90 91 8b 01 	lds	r25, 0x018B
    1dae:	0e 94 8b 18 	call	0x3116	; 0x3116 <__mulsf3>
    1db2:	4b 01       	movw	r8, r22
    1db4:	5c 01       	movw	r10, r24
    1db6:	20 ed       	ldi	r18, 0xD0	; 208
    1db8:	3c ec       	ldi	r19, 0xCC	; 204
    1dba:	4c e4       	ldi	r20, 0x4C	; 76
    1dbc:	5d e3       	ldi	r21, 0x3D	; 61
    1dbe:	b9 81       	ldd	r27, Y+1	; 0x01
    1dc0:	ab 85       	ldd	r26, Y+11	; 0x0b
    1dc2:	fd 85       	ldd	r31, Y+13	; 0x0d
    1dc4:	ec 85       	ldd	r30, Y+12	; 0x0c
    1dc6:	6b 2f       	mov	r22, r27
    1dc8:	7a 2f       	mov	r23, r26
    1dca:	8f 2f       	mov	r24, r31
    1dcc:	9e 2f       	mov	r25, r30
    1dce:	0e 94 8b 18 	call	0x3116	; 0x3116 <__mulsf3>
    1dd2:	9b 01       	movw	r18, r22
    1dd4:	ac 01       	movw	r20, r24
    1dd6:	c5 01       	movw	r24, r10
    1dd8:	b4 01       	movw	r22, r8
    1dda:	0e 94 2b 15 	call	0x2a56	; 0x2a56 <__addsf3>
    1dde:	f8 01       	movw	r30, r16
    1de0:	60 83       	st	Z, r22
    1de2:	71 83       	std	Z+1, r23	; 0x01
    1de4:	82 83       	std	Z+2, r24	; 0x02
    1de6:	93 83       	std	Z+3, r25	; 0x03
    1de8:	80 90 90 01 	lds	r8, 0x0190
    1dec:	90 90 91 01 	lds	r9, 0x0191
    1df0:	a0 90 92 01 	lds	r10, 0x0192
    1df4:	b0 90 93 01 	lds	r11, 0x0193
    1df8:	23 e3       	ldi	r18, 0x33	; 51
    1dfa:	33 e3       	ldi	r19, 0x33	; 51
    1dfc:	43 e7       	ldi	r20, 0x73	; 115
    1dfe:	5f e3       	ldi	r21, 0x3F	; 63
    1e00:	60 91 84 01 	lds	r22, 0x0184
    1e04:	70 91 85 01 	lds	r23, 0x0185
    1e08:	80 91 86 01 	lds	r24, 0x0186
    1e0c:	90 91 87 01 	lds	r25, 0x0187
    1e10:	0e 94 8b 18 	call	0x3116	; 0x3116 <__mulsf3>
    1e14:	69 83       	std	Y+1, r22	; 0x01
    1e16:	7a 83       	std	Y+2, r23	; 0x02
    1e18:	8b 83       	std	Y+3, r24	; 0x03
    1e1a:	9c 83       	std	Y+4, r25	; 0x04
    1e1c:	20 ed       	ldi	r18, 0xD0	; 208
    1e1e:	3c ec       	ldi	r19, 0xCC	; 204
    1e20:	4c e4       	ldi	r20, 0x4C	; 76
    1e22:	5d e3       	ldi	r21, 0x3D	; 61
    1e24:	c5 01       	movw	r24, r10
    1e26:	b4 01       	movw	r22, r8
    1e28:	0e 94 8b 18 	call	0x3116	; 0x3116 <__mulsf3>
    1e2c:	9b 01       	movw	r18, r22
    1e2e:	ac 01       	movw	r20, r24
    1e30:	69 81       	ldd	r22, Y+1	; 0x01
    1e32:	7a 81       	ldd	r23, Y+2	; 0x02
    1e34:	8b 81       	ldd	r24, Y+3	; 0x03
    1e36:	9c 81       	ldd	r25, Y+4	; 0x04
    1e38:	0e 94 2b 15 	call	0x2a56	; 0x2a56 <__addsf3>
    1e3c:	f8 01       	movw	r30, r16
    1e3e:	64 83       	std	Z+4, r22	; 0x04
    1e40:	75 83       	std	Z+5, r23	; 0x05
    1e42:	86 83       	std	Z+6, r24	; 0x06
    1e44:	97 83       	std	Z+7, r25	; 0x07
    1e46:	80 91 9e 01 	lds	r24, 0x019E
    1e4a:	90 91 9f 01 	lds	r25, 0x019F
    1e4e:	9c 01       	movw	r18, r24
    1e50:	22 0f       	add	r18, r18
    1e52:	33 1f       	adc	r19, r19
    1e54:	3a 83       	std	Y+2, r19	; 0x02
    1e56:	29 83       	std	Y+1, r18	; 0x01
    1e58:	f9 01       	movw	r30, r18
    1e5a:	e8 58       	subi	r30, 0x88	; 136
    1e5c:	fe 4f       	sbci	r31, 0xFE	; 254
    1e5e:	60 81       	ld	r22, Z
    1e60:	71 81       	ldd	r23, Z+1	; 0x01
    1e62:	80 e0       	ldi	r24, 0x00	; 0
    1e64:	90 e0       	ldi	r25, 0x00	; 0
    1e66:	0e 94 c2 16 	call	0x2d84	; 0x2d84 <__floatunsisf>
    1e6a:	f8 01       	movw	r30, r16
    1e6c:	64 87       	std	Z+12, r22	; 0x0c
    1e6e:	75 87       	std	Z+13, r23	; 0x0d
    1e70:	86 87       	std	Z+14, r24	; 0x0e
    1e72:	97 87       	std	Z+15, r25	; 0x0f
    1e74:	e9 81       	ldd	r30, Y+1	; 0x01
    1e76:	fa 81       	ldd	r31, Y+2	; 0x02
    1e78:	e0 59       	subi	r30, 0x90	; 144
    1e7a:	fe 4f       	sbci	r31, 0xFE	; 254
    1e7c:	60 81       	ld	r22, Z
    1e7e:	71 81       	ldd	r23, Z+1	; 0x01
    1e80:	80 e0       	ldi	r24, 0x00	; 0
    1e82:	90 e0       	ldi	r25, 0x00	; 0
    1e84:	0e 94 c2 16 	call	0x2d84	; 0x2d84 <__floatunsisf>
    1e88:	f8 01       	movw	r30, r16
    1e8a:	60 8b       	std	Z+16, r22	; 0x10
    1e8c:	71 8b       	std	Z+17, r23	; 0x11
    1e8e:	82 8b       	std	Z+18, r24	; 0x12
    1e90:	93 8b       	std	Z+19, r25	; 0x13
    1e92:	80 91 9c 01 	lds	r24, 0x019C
    1e96:	90 91 9d 01 	lds	r25, 0x019D
    1e9a:	9c 01       	movw	r18, r24
    1e9c:	22 0f       	add	r18, r18
    1e9e:	33 1f       	adc	r19, r19
    1ea0:	3a 83       	std	Y+2, r19	; 0x02
    1ea2:	29 83       	std	Y+1, r18	; 0x01
    1ea4:	f9 01       	movw	r30, r18
    1ea6:	e8 58       	subi	r30, 0x88	; 136
    1ea8:	fe 4f       	sbci	r31, 0xFE	; 254
    1eaa:	60 81       	ld	r22, Z
    1eac:	71 81       	ldd	r23, Z+1	; 0x01
    1eae:	80 e0       	ldi	r24, 0x00	; 0
    1eb0:	90 e0       	ldi	r25, 0x00	; 0
    1eb2:	0e 94 c2 16 	call	0x2d84	; 0x2d84 <__floatunsisf>
    1eb6:	f8 01       	movw	r30, r16
    1eb8:	64 8b       	std	Z+20, r22	; 0x14
    1eba:	75 8b       	std	Z+21, r23	; 0x15
    1ebc:	86 8b       	std	Z+22, r24	; 0x16
    1ebe:	97 8b       	std	Z+23, r25	; 0x17
    1ec0:	e9 81       	ldd	r30, Y+1	; 0x01
    1ec2:	fa 81       	ldd	r31, Y+2	; 0x02
    1ec4:	e0 59       	subi	r30, 0x90	; 144
    1ec6:	fe 4f       	sbci	r31, 0xFE	; 254
    1ec8:	60 81       	ld	r22, Z
    1eca:	71 81       	ldd	r23, Z+1	; 0x01
    1ecc:	80 e0       	ldi	r24, 0x00	; 0
    1ece:	90 e0       	ldi	r25, 0x00	; 0
    1ed0:	0e 94 c2 16 	call	0x2d84	; 0x2d84 <__floatunsisf>
    1ed4:	f8 01       	movw	r30, r16
    1ed6:	60 8f       	std	Z+24, r22	; 0x18
    1ed8:	71 8f       	std	Z+25, r23	; 0x19
    1eda:	82 8f       	std	Z+26, r24	; 0x1a
    1edc:	93 8f       	std	Z+27, r25	; 0x1b
    1ede:	80 91 98 01 	lds	r24, 0x0198
    1ee2:	90 91 99 01 	lds	r25, 0x0199
    1ee6:	9c 01       	movw	r18, r24
    1ee8:	22 0f       	add	r18, r18
    1eea:	33 1f       	adc	r19, r19
    1eec:	3a 83       	std	Y+2, r19	; 0x02
    1eee:	29 83       	std	Y+1, r18	; 0x01
    1ef0:	f9 01       	movw	r30, r18
    1ef2:	e8 58       	subi	r30, 0x88	; 136
    1ef4:	fe 4f       	sbci	r31, 0xFE	; 254
    1ef6:	60 81       	ld	r22, Z
    1ef8:	71 81       	ldd	r23, Z+1	; 0x01
    1efa:	80 e0       	ldi	r24, 0x00	; 0
    1efc:	90 e0       	ldi	r25, 0x00	; 0
    1efe:	0e 94 c2 16 	call	0x2d84	; 0x2d84 <__floatunsisf>
    1f02:	f8 01       	movw	r30, r16
    1f04:	64 8f       	std	Z+28, r22	; 0x1c
    1f06:	75 8f       	std	Z+29, r23	; 0x1d
    1f08:	86 8f       	std	Z+30, r24	; 0x1e
    1f0a:	97 8f       	std	Z+31, r25	; 0x1f
    1f0c:	e9 81       	ldd	r30, Y+1	; 0x01
    1f0e:	fa 81       	ldd	r31, Y+2	; 0x02
    1f10:	e0 59       	subi	r30, 0x90	; 144
    1f12:	fe 4f       	sbci	r31, 0xFE	; 254
    1f14:	60 81       	ld	r22, Z
    1f16:	71 81       	ldd	r23, Z+1	; 0x01
    1f18:	80 e0       	ldi	r24, 0x00	; 0
    1f1a:	90 e0       	ldi	r25, 0x00	; 0
    1f1c:	0e 94 c2 16 	call	0x2d84	; 0x2d84 <__floatunsisf>
    1f20:	f8 01       	movw	r30, r16
    1f22:	60 a3       	std	Z+32, r22	; 0x20
    1f24:	71 a3       	std	Z+33, r23	; 0x21
    1f26:	82 a3       	std	Z+34, r24	; 0x22
    1f28:	93 a3       	std	Z+35, r25	; 0x23
    1f2a:	80 91 9a 01 	lds	r24, 0x019A
    1f2e:	90 91 9b 01 	lds	r25, 0x019B
    1f32:	9c 01       	movw	r18, r24
    1f34:	22 0f       	add	r18, r18
    1f36:	33 1f       	adc	r19, r19
    1f38:	3a 83       	std	Y+2, r19	; 0x02
    1f3a:	29 83       	std	Y+1, r18	; 0x01
    1f3c:	f9 01       	movw	r30, r18
    1f3e:	e8 58       	subi	r30, 0x88	; 136
    1f40:	fe 4f       	sbci	r31, 0xFE	; 254
    1f42:	60 81       	ld	r22, Z
    1f44:	71 81       	ldd	r23, Z+1	; 0x01
    1f46:	80 e0       	ldi	r24, 0x00	; 0
    1f48:	90 e0       	ldi	r25, 0x00	; 0
    1f4a:	0e 94 c2 16 	call	0x2d84	; 0x2d84 <__floatunsisf>
    1f4e:	f8 01       	movw	r30, r16
    1f50:	64 a3       	std	Z+36, r22	; 0x24
    1f52:	75 a3       	std	Z+37, r23	; 0x25
    1f54:	86 a3       	std	Z+38, r24	; 0x26
    1f56:	97 a3       	std	Z+39, r25	; 0x27
    1f58:	e9 81       	ldd	r30, Y+1	; 0x01
    1f5a:	fa 81       	ldd	r31, Y+2	; 0x02
    1f5c:	e0 59       	subi	r30, 0x90	; 144
    1f5e:	fe 4f       	sbci	r31, 0xFE	; 254
    1f60:	60 81       	ld	r22, Z
    1f62:	71 81       	ldd	r23, Z+1	; 0x01
    1f64:	80 e0       	ldi	r24, 0x00	; 0
    1f66:	90 e0       	ldi	r25, 0x00	; 0
    1f68:	0e 94 c2 16 	call	0x2d84	; 0x2d84 <__floatunsisf>
    1f6c:	f8 01       	movw	r30, r16
    1f6e:	60 a7       	std	Z+40, r22	; 0x28
    1f70:	71 a7       	std	Z+41, r23	; 0x29
    1f72:	82 a7       	std	Z+42, r24	; 0x2a
    1f74:	93 a7       	std	Z+43, r25	; 0x2b
    1f76:	20 e0       	ldi	r18, 0x00	; 0
    1f78:	30 e0       	ldi	r19, 0x00	; 0
    1f7a:	44 e3       	ldi	r20, 0x34	; 52
    1f7c:	53 e4       	ldi	r21, 0x43	; 67
    1f7e:	c3 01       	movw	r24, r6
    1f80:	b2 01       	movw	r22, r4
    1f82:	0e 94 8b 18 	call	0x3116	; 0x3116 <__mulsf3>
    1f86:	23 ec       	ldi	r18, 0xC3	; 195
    1f88:	35 ef       	ldi	r19, 0xF5	; 245
    1f8a:	48 e4       	ldi	r20, 0x48	; 72
    1f8c:	50 e4       	ldi	r21, 0x40	; 64
    1f8e:	0e 94 f8 15 	call	0x2bf0	; 0x2bf0 <__divsf3>
    1f92:	f8 01       	movw	r30, r16
    1f94:	64 a7       	std	Z+44, r22	; 0x2c
    1f96:	75 a7       	std	Z+45, r23	; 0x2d
    1f98:	86 a7       	std	Z+46, r24	; 0x2e
    1f9a:	97 a7       	std	Z+47, r25	; 0x2f
    1f9c:	5d 81       	ldd	r21, Y+5	; 0x05
    1f9e:	4e 81       	ldd	r20, Y+6	; 0x06
    1fa0:	3f 81       	ldd	r19, Y+7	; 0x07
    1fa2:	28 85       	ldd	r18, Y+8	; 0x08
    1fa4:	85 2f       	mov	r24, r21
    1fa6:	94 2f       	mov	r25, r20
    1fa8:	a3 2f       	mov	r26, r19
    1faa:	b2 2f       	mov	r27, r18
    1fac:	80 ab       	std	Z+48, r24	; 0x30
    1fae:	91 ab       	std	Z+49, r25	; 0x31
    1fb0:	a2 ab       	std	Z+50, r26	; 0x32
    1fb2:	b3 ab       	std	Z+51, r27	; 0x33
    1fb4:	59 85       	ldd	r21, Y+9	; 0x09
    1fb6:	4a 85       	ldd	r20, Y+10	; 0x0a
    1fb8:	85 2f       	mov	r24, r21
    1fba:	94 2f       	mov	r25, r20
    1fbc:	a2 2d       	mov	r26, r2
    1fbe:	b3 2d       	mov	r27, r3
    1fc0:	84 ab       	std	Z+52, r24	; 0x34
    1fc2:	95 ab       	std	Z+53, r25	; 0x35
    1fc4:	a6 ab       	std	Z+54, r26	; 0x36
    1fc6:	b7 ab       	std	Z+55, r27	; 0x37
    1fc8:	c0 ae       	std	Z+56, r12	; 0x38
    1fca:	d1 ae       	std	Z+57, r13	; 0x39
    1fcc:	e2 ae       	std	Z+58, r14	; 0x3a
    1fce:	f3 ae       	std	Z+59, r15	; 0x3b
    1fd0:	80 91 94 01 	lds	r24, 0x0194
    1fd4:	90 91 95 01 	lds	r25, 0x0195
    1fd8:	a0 91 96 01 	lds	r26, 0x0196
    1fdc:	b0 91 97 01 	lds	r27, 0x0197
    1fe0:	80 93 88 01 	sts	0x0188, r24
    1fe4:	90 93 89 01 	sts	0x0189, r25
    1fe8:	a0 93 8a 01 	sts	0x018A, r26
    1fec:	b0 93 8b 01 	sts	0x018B, r27
    1ff0:	80 92 84 01 	sts	0x0184, r8
    1ff4:	90 92 85 01 	sts	0x0185, r9
    1ff8:	a0 92 86 01 	sts	0x0186, r10
    1ffc:	b0 92 87 01 	sts	0x0187, r11
    2000:	80 91 8c 01 	lds	r24, 0x018C
    2004:	90 91 8d 01 	lds	r25, 0x018D
    2008:	a0 91 8e 01 	lds	r26, 0x018E
    200c:	b0 91 8f 01 	lds	r27, 0x018F
    2010:	80 93 80 01 	sts	0x0180, r24
    2014:	90 93 81 01 	sts	0x0181, r25
    2018:	a0 93 82 01 	sts	0x0182, r26
    201c:	b0 93 83 01 	sts	0x0183, r27
    2020:	81 e0       	ldi	r24, 0x01	; 1
    2022:	00 c0       	rjmp	.+0      	; 0x2024 <localize+0x63a>
    2024:	2d 96       	adiw	r28, 0x0d	; 13
    2026:	0f b6       	in	r0, 0x3f	; 63
    2028:	f8 94       	cli
    202a:	de bf       	out	0x3e, r29	; 62
    202c:	0f be       	out	0x3f, r0	; 63
    202e:	cd bf       	out	0x3d, r28	; 61
    2030:	df 91       	pop	r29
    2032:	cf 91       	pop	r28
    2034:	1f 91       	pop	r17
    2036:	0f 91       	pop	r16
    2038:	ff 90       	pop	r15
    203a:	ef 90       	pop	r14
    203c:	df 90       	pop	r13
    203e:	cf 90       	pop	r12
    2040:	bf 90       	pop	r11
    2042:	af 90       	pop	r10
    2044:	9f 90       	pop	r9
    2046:	8f 90       	pop	r8
    2048:	7f 90       	pop	r7
    204a:	6f 90       	pop	r6
    204c:	5f 90       	pop	r5
    204e:	4f 90       	pop	r4
    2050:	3f 90       	pop	r3
    2052:	2f 90       	pop	r2
    2054:	08 95       	ret

00002056 <m_rf_open>:
    2056:	1f 93       	push	r17
    2058:	cf 93       	push	r28
    205a:	df 93       	push	r29
    205c:	18 2f       	mov	r17, r24
    205e:	d6 2f       	mov	r29, r22
    2060:	c4 2f       	mov	r28, r20
    2062:	0e 94 15 0a 	call	0x142a	; 0x142a <m_bus_init>
    2066:	94 ea       	ldi	r25, 0xA4	; 164
    2068:	90 93 bc 00 	sts	0x00BC, r25
    206c:	ec eb       	ldi	r30, 0xBC	; 188
    206e:	f0 e0       	ldi	r31, 0x00	; 0
    2070:	90 81       	ld	r25, Z
    2072:	99 23       	and	r25, r25
    2074:	ec f7       	brge	.-6      	; 0x2070 <m_rf_open+0x1a>
    2076:	90 e5       	ldi	r25, 0x50	; 80
    2078:	90 93 bb 00 	sts	0x00BB, r25
    207c:	94 e8       	ldi	r25, 0x84	; 132
    207e:	90 93 bc 00 	sts	0x00BC, r25
    2082:	ec eb       	ldi	r30, 0xBC	; 188
    2084:	f0 e0       	ldi	r31, 0x00	; 0
    2086:	90 81       	ld	r25, Z
    2088:	99 23       	and	r25, r25
    208a:	ec f7       	brge	.-6      	; 0x2086 <m_rf_open+0x30>
    208c:	90 91 b9 00 	lds	r25, 0x00B9
    2090:	98 7f       	andi	r25, 0xF8	; 248
    2092:	90 32       	cpi	r25, 0x20	; 32
    2094:	29 f4       	brne	.+10     	; 0x20a0 <m_rf_open+0x4a>
    2096:	84 e9       	ldi	r24, 0x94	; 148
    2098:	80 93 bc 00 	sts	0x00BC, r24
    209c:	80 e0       	ldi	r24, 0x00	; 0
    209e:	2d c0       	rjmp	.+90     	; 0x20fa <m_rf_open+0xa4>
    20a0:	81 e0       	ldi	r24, 0x01	; 1
    20a2:	80 93 bb 00 	sts	0x00BB, r24
    20a6:	84 e8       	ldi	r24, 0x84	; 132
    20a8:	80 93 bc 00 	sts	0x00BC, r24
    20ac:	ec eb       	ldi	r30, 0xBC	; 188
    20ae:	f0 e0       	ldi	r31, 0x00	; 0
    20b0:	90 81       	ld	r25, Z
    20b2:	99 23       	and	r25, r25
    20b4:	ec f7       	brge	.-6      	; 0x20b0 <m_rf_open+0x5a>
    20b6:	10 93 bb 00 	sts	0x00BB, r17
    20ba:	84 e8       	ldi	r24, 0x84	; 132
    20bc:	80 93 bc 00 	sts	0x00BC, r24
    20c0:	ec eb       	ldi	r30, 0xBC	; 188
    20c2:	f0 e0       	ldi	r31, 0x00	; 0
    20c4:	80 81       	ld	r24, Z
    20c6:	88 23       	and	r24, r24
    20c8:	ec f7       	brge	.-6      	; 0x20c4 <m_rf_open+0x6e>
    20ca:	d0 93 bb 00 	sts	0x00BB, r29
    20ce:	84 e8       	ldi	r24, 0x84	; 132
    20d0:	80 93 bc 00 	sts	0x00BC, r24
    20d4:	ec eb       	ldi	r30, 0xBC	; 188
    20d6:	f0 e0       	ldi	r31, 0x00	; 0
    20d8:	80 81       	ld	r24, Z
    20da:	88 23       	and	r24, r24
    20dc:	ec f7       	brge	.-6      	; 0x20d8 <m_rf_open+0x82>
    20de:	c0 93 bb 00 	sts	0x00BB, r28
    20e2:	84 e8       	ldi	r24, 0x84	; 132
    20e4:	80 93 bc 00 	sts	0x00BC, r24
    20e8:	ec eb       	ldi	r30, 0xBC	; 188
    20ea:	f0 e0       	ldi	r31, 0x00	; 0
    20ec:	80 81       	ld	r24, Z
    20ee:	88 23       	and	r24, r24
    20f0:	ec f7       	brge	.-6      	; 0x20ec <m_rf_open+0x96>
    20f2:	84 e9       	ldi	r24, 0x94	; 148
    20f4:	80 93 bc 00 	sts	0x00BC, r24
    20f8:	81 e0       	ldi	r24, 0x01	; 1
    20fa:	df 91       	pop	r29
    20fc:	cf 91       	pop	r28
    20fe:	1f 91       	pop	r17
    2100:	08 95       	ret

00002102 <m_rf_read>:
    2102:	cf 93       	push	r28
    2104:	df 93       	push	r29
    2106:	24 ea       	ldi	r18, 0xA4	; 164
    2108:	20 93 bc 00 	sts	0x00BC, r18
    210c:	ec eb       	ldi	r30, 0xBC	; 188
    210e:	f0 e0       	ldi	r31, 0x00	; 0
    2110:	20 81       	ld	r18, Z
    2112:	22 23       	and	r18, r18
    2114:	ec f7       	brge	.-6      	; 0x2110 <m_rf_read+0xe>
    2116:	21 e5       	ldi	r18, 0x51	; 81
    2118:	20 93 bb 00 	sts	0x00BB, r18
    211c:	24 e8       	ldi	r18, 0x84	; 132
    211e:	20 93 bc 00 	sts	0x00BC, r18
    2122:	ec eb       	ldi	r30, 0xBC	; 188
    2124:	f0 e0       	ldi	r31, 0x00	; 0
    2126:	20 81       	ld	r18, Z
    2128:	22 23       	and	r18, r18
    212a:	ec f7       	brge	.-6      	; 0x2126 <m_rf_read+0x24>
    212c:	20 91 b9 00 	lds	r18, 0x00B9
    2130:	28 7f       	andi	r18, 0xF8	; 248
    2132:	28 34       	cpi	r18, 0x48	; 72
    2134:	29 f4       	brne	.+10     	; 0x2140 <m_rf_read+0x3e>
    2136:	84 e9       	ldi	r24, 0x94	; 148
    2138:	80 93 bc 00 	sts	0x00BC, r24
    213c:	80 e0       	ldi	r24, 0x00	; 0
    213e:	3f c0       	rjmp	.+126    	; 0x21be <m_rf_read+0xbc>
    2140:	24 ec       	ldi	r18, 0xC4	; 196
    2142:	20 93 bc 00 	sts	0x00BC, r18
    2146:	ec eb       	ldi	r30, 0xBC	; 188
    2148:	f0 e0       	ldi	r31, 0x00	; 0
    214a:	20 81       	ld	r18, Z
    214c:	22 23       	and	r18, r18
    214e:	ec f7       	brge	.-6      	; 0x214a <m_rf_read+0x48>
    2150:	40 91 bb 00 	lds	r20, 0x00BB
    2154:	46 13       	cpse	r20, r22
    2156:	09 c0       	rjmp	.+18     	; 0x216a <m_rf_read+0x68>
    2158:	50 e0       	ldi	r21, 0x00	; 0
    215a:	41 50       	subi	r20, 0x01	; 1
    215c:	51 09       	sbc	r21, r1
    215e:	14 16       	cp	r1, r20
    2160:	15 06       	cpc	r1, r21
    2162:	44 f0       	brlt	.+16     	; 0x2174 <m_rf_read+0x72>
    2164:	40 e0       	ldi	r20, 0x00	; 0
    2166:	50 e0       	ldi	r21, 0x00	; 0
    2168:	18 c0       	rjmp	.+48     	; 0x219a <m_rf_read+0x98>
    216a:	84 e9       	ldi	r24, 0x94	; 148
    216c:	80 93 bc 00 	sts	0x00BC, r24
    2170:	80 e0       	ldi	r24, 0x00	; 0
    2172:	25 c0       	rjmp	.+74     	; 0x21be <m_rf_read+0xbc>
    2174:	dc 01       	movw	r26, r24
    2176:	20 e0       	ldi	r18, 0x00	; 0
    2178:	30 e0       	ldi	r19, 0x00	; 0
    217a:	ec eb       	ldi	r30, 0xBC	; 188
    217c:	f0 e0       	ldi	r31, 0x00	; 0
    217e:	74 ec       	ldi	r23, 0xC4	; 196
    2180:	cb eb       	ldi	r28, 0xBB	; 187
    2182:	d0 e0       	ldi	r29, 0x00	; 0
    2184:	70 83       	st	Z, r23
    2186:	60 81       	ld	r22, Z
    2188:	66 23       	and	r22, r22
    218a:	ec f7       	brge	.-6      	; 0x2186 <m_rf_read+0x84>
    218c:	68 81       	ld	r22, Y
    218e:	6d 93       	st	X+, r22
    2190:	2f 5f       	subi	r18, 0xFF	; 255
    2192:	3f 4f       	sbci	r19, 0xFF	; 255
    2194:	24 17       	cp	r18, r20
    2196:	35 07       	cpc	r19, r21
    2198:	ac f3       	brlt	.-22     	; 0x2184 <m_rf_read+0x82>
    219a:	24 e8       	ldi	r18, 0x84	; 132
    219c:	20 93 bc 00 	sts	0x00BC, r18
    21a0:	ec eb       	ldi	r30, 0xBC	; 188
    21a2:	f0 e0       	ldi	r31, 0x00	; 0
    21a4:	20 81       	ld	r18, Z
    21a6:	22 23       	and	r18, r18
    21a8:	ec f7       	brge	.-6      	; 0x21a4 <m_rf_read+0xa2>
    21aa:	20 91 bb 00 	lds	r18, 0x00BB
    21ae:	fc 01       	movw	r30, r24
    21b0:	e4 0f       	add	r30, r20
    21b2:	f5 1f       	adc	r31, r21
    21b4:	20 83       	st	Z, r18
    21b6:	84 e9       	ldi	r24, 0x94	; 148
    21b8:	80 93 bc 00 	sts	0x00BC, r24
    21bc:	81 e0       	ldi	r24, 0x01	; 1
    21be:	df 91       	pop	r29
    21c0:	cf 91       	pop	r28
    21c2:	08 95       	ret

000021c4 <m_usb_tx_char>:
    21c4:	cf 93       	push	r28
    21c6:	df 93       	push	r29
    21c8:	90 91 b9 01 	lds	r25, 0x01B9
    21cc:	99 23       	and	r25, r25
    21ce:	09 f4       	brne	.+2      	; 0x21d2 <m_usb_tx_char+0xe>
    21d0:	4d c0       	rjmp	.+154    	; 0x226c <m_usb_tx_char+0xa8>
    21d2:	9f b7       	in	r25, 0x3f	; 63
    21d4:	f8 94       	cli
    21d6:	24 e0       	ldi	r18, 0x04	; 4
    21d8:	20 93 e9 00 	sts	0x00E9, r18
    21dc:	20 91 bb 01 	lds	r18, 0x01BB
    21e0:	22 23       	and	r18, r18
    21e2:	49 f0       	breq	.+18     	; 0x21f6 <m_usb_tx_char+0x32>
    21e4:	20 91 e8 00 	lds	r18, 0x00E8
    21e8:	25 fd       	sbrc	r18, 5
    21ea:	03 c0       	rjmp	.+6      	; 0x21f2 <m_usb_tx_char+0x2e>
    21ec:	9f bf       	out	0x3f, r25	; 63
    21ee:	8f ef       	ldi	r24, 0xFF	; 255
    21f0:	42 c0       	rjmp	.+132    	; 0x2276 <m_usb_tx_char+0xb2>
    21f2:	10 92 bb 01 	sts	0x01BB, r1
    21f6:	30 91 e4 00 	lds	r19, 0x00E4
    21fa:	37 5e       	subi	r19, 0xE7	; 231
    21fc:	20 91 e8 00 	lds	r18, 0x00E8
    2200:	25 fd       	sbrc	r18, 5
    2202:	25 c0       	rjmp	.+74     	; 0x224e <m_usb_tx_char+0x8a>
    2204:	9f bf       	out	0x3f, r25	; 63
    2206:	90 91 e4 00 	lds	r25, 0x00E4
    220a:	93 17       	cp	r25, r19
    220c:	49 f0       	breq	.+18     	; 0x2220 <m_usb_tx_char+0x5c>
    220e:	90 91 b9 01 	lds	r25, 0x01B9
    2212:	91 11       	cpse	r25, r1
    2214:	0f c0       	rjmp	.+30     	; 0x2234 <m_usb_tx_char+0x70>
    2216:	2c c0       	rjmp	.+88     	; 0x2270 <m_usb_tx_char+0xac>
    2218:	9f bf       	out	0x3f, r25	; 63
    221a:	98 81       	ld	r25, Y
    221c:	93 13       	cpse	r25, r19
    221e:	05 c0       	rjmp	.+10     	; 0x222a <m_usb_tx_char+0x66>
    2220:	81 e0       	ldi	r24, 0x01	; 1
    2222:	80 93 bb 01 	sts	0x01BB, r24
    2226:	8f ef       	ldi	r24, 0xFF	; 255
    2228:	26 c0       	rjmp	.+76     	; 0x2276 <m_usb_tx_char+0xb2>
    222a:	90 91 b9 01 	lds	r25, 0x01B9
    222e:	91 11       	cpse	r25, r1
    2230:	08 c0       	rjmp	.+16     	; 0x2242 <m_usb_tx_char+0x7e>
    2232:	20 c0       	rjmp	.+64     	; 0x2274 <m_usb_tx_char+0xb0>
    2234:	a9 ee       	ldi	r26, 0xE9	; 233
    2236:	b0 e0       	ldi	r27, 0x00	; 0
    2238:	44 e0       	ldi	r20, 0x04	; 4
    223a:	e8 ee       	ldi	r30, 0xE8	; 232
    223c:	f0 e0       	ldi	r31, 0x00	; 0
    223e:	c4 ee       	ldi	r28, 0xE4	; 228
    2240:	d0 e0       	ldi	r29, 0x00	; 0
    2242:	9f b7       	in	r25, 0x3f	; 63
    2244:	f8 94       	cli
    2246:	4c 93       	st	X, r20
    2248:	20 81       	ld	r18, Z
    224a:	25 ff       	sbrs	r18, 5
    224c:	e5 cf       	rjmp	.-54     	; 0x2218 <m_usb_tx_char+0x54>
    224e:	80 93 f1 00 	sts	0x00F1, r24
    2252:	80 91 e8 00 	lds	r24, 0x00E8
    2256:	85 fd       	sbrc	r24, 5
    2258:	03 c0       	rjmp	.+6      	; 0x2260 <m_usb_tx_char+0x9c>
    225a:	8a e3       	ldi	r24, 0x3A	; 58
    225c:	80 93 e8 00 	sts	0x00E8, r24
    2260:	85 e0       	ldi	r24, 0x05	; 5
    2262:	80 93 b8 01 	sts	0x01B8, r24
    2266:	9f bf       	out	0x3f, r25	; 63
    2268:	80 e0       	ldi	r24, 0x00	; 0
    226a:	05 c0       	rjmp	.+10     	; 0x2276 <m_usb_tx_char+0xb2>
    226c:	8f ef       	ldi	r24, 0xFF	; 255
    226e:	03 c0       	rjmp	.+6      	; 0x2276 <m_usb_tx_char+0xb2>
    2270:	8f ef       	ldi	r24, 0xFF	; 255
    2272:	01 c0       	rjmp	.+2      	; 0x2276 <m_usb_tx_char+0xb2>
    2274:	8f ef       	ldi	r24, 0xFF	; 255
    2276:	df 91       	pop	r29
    2278:	cf 91       	pop	r28
    227a:	08 95       	ret

0000227c <__vector_10>:
    227c:	1f 92       	push	r1
    227e:	0f 92       	push	r0
    2280:	0f b6       	in	r0, 0x3f	; 63
    2282:	0f 92       	push	r0
    2284:	11 24       	eor	r1, r1
    2286:	8f 93       	push	r24
    2288:	9f 93       	push	r25
    228a:	ef 93       	push	r30
    228c:	ff 93       	push	r31
    228e:	e1 ee       	ldi	r30, 0xE1	; 225
    2290:	f0 e0       	ldi	r31, 0x00	; 0
    2292:	80 81       	ld	r24, Z
    2294:	10 82       	st	Z, r1
    2296:	83 ff       	sbrs	r24, 3
    2298:	11 c0       	rjmp	.+34     	; 0x22bc <__vector_10+0x40>
    229a:	10 92 e9 00 	sts	0x00E9, r1
    229e:	91 e0       	ldi	r25, 0x01	; 1
    22a0:	90 93 eb 00 	sts	0x00EB, r25
    22a4:	10 92 ec 00 	sts	0x00EC, r1
    22a8:	92 e1       	ldi	r25, 0x12	; 18
    22aa:	90 93 ed 00 	sts	0x00ED, r25
    22ae:	98 e0       	ldi	r25, 0x08	; 8
    22b0:	90 93 f0 00 	sts	0x00F0, r25
    22b4:	10 92 b9 01 	sts	0x01B9, r1
    22b8:	10 92 ba 01 	sts	0x01BA, r1
    22bc:	82 ff       	sbrs	r24, 2
    22be:	13 c0       	rjmp	.+38     	; 0x22e6 <__vector_10+0x6a>
    22c0:	80 91 b9 01 	lds	r24, 0x01B9
    22c4:	88 23       	and	r24, r24
    22c6:	79 f0       	breq	.+30     	; 0x22e6 <__vector_10+0x6a>
    22c8:	80 91 b8 01 	lds	r24, 0x01B8
    22cc:	88 23       	and	r24, r24
    22ce:	59 f0       	breq	.+22     	; 0x22e6 <__vector_10+0x6a>
    22d0:	81 50       	subi	r24, 0x01	; 1
    22d2:	80 93 b8 01 	sts	0x01B8, r24
    22d6:	81 11       	cpse	r24, r1
    22d8:	06 c0       	rjmp	.+12     	; 0x22e6 <__vector_10+0x6a>
    22da:	84 e0       	ldi	r24, 0x04	; 4
    22dc:	80 93 e9 00 	sts	0x00E9, r24
    22e0:	8a e3       	ldi	r24, 0x3A	; 58
    22e2:	80 93 e8 00 	sts	0x00E8, r24
    22e6:	ff 91       	pop	r31
    22e8:	ef 91       	pop	r30
    22ea:	9f 91       	pop	r25
    22ec:	8f 91       	pop	r24
    22ee:	0f 90       	pop	r0
    22f0:	0f be       	out	0x3f, r0	; 63
    22f2:	0f 90       	pop	r0
    22f4:	1f 90       	pop	r1
    22f6:	18 95       	reti

000022f8 <__vector_11>:
    22f8:	1f 92       	push	r1
    22fa:	0f 92       	push	r0
    22fc:	0f b6       	in	r0, 0x3f	; 63
    22fe:	0f 92       	push	r0
    2300:	11 24       	eor	r1, r1
    2302:	0f 93       	push	r16
    2304:	1f 93       	push	r17
    2306:	2f 93       	push	r18
    2308:	3f 93       	push	r19
    230a:	4f 93       	push	r20
    230c:	5f 93       	push	r21
    230e:	6f 93       	push	r22
    2310:	7f 93       	push	r23
    2312:	8f 93       	push	r24
    2314:	9f 93       	push	r25
    2316:	af 93       	push	r26
    2318:	bf 93       	push	r27
    231a:	cf 93       	push	r28
    231c:	df 93       	push	r29
    231e:	ef 93       	push	r30
    2320:	ff 93       	push	r31
    2322:	10 92 e9 00 	sts	0x00E9, r1
    2326:	80 91 e8 00 	lds	r24, 0x00E8
    232a:	83 ff       	sbrs	r24, 3
    232c:	51 c1       	rjmp	.+674    	; 0x25d0 <__vector_11+0x2d8>
    232e:	e1 ef       	ldi	r30, 0xF1	; 241
    2330:	f0 e0       	ldi	r31, 0x00	; 0
    2332:	70 81       	ld	r23, Z
    2334:	40 81       	ld	r20, Z
    2336:	20 81       	ld	r18, Z
    2338:	30 81       	ld	r19, Z
    233a:	93 2f       	mov	r25, r19
    233c:	80 e0       	ldi	r24, 0x00	; 0
    233e:	dc 01       	movw	r26, r24
    2340:	a2 2b       	or	r26, r18
    2342:	9d 01       	movw	r18, r26
    2344:	50 81       	ld	r21, Z
    2346:	60 81       	ld	r22, Z
    2348:	96 2f       	mov	r25, r22
    234a:	80 e0       	ldi	r24, 0x00	; 0
    234c:	85 2b       	or	r24, r21
    234e:	a0 81       	ld	r26, Z
    2350:	b0 81       	ld	r27, Z
    2352:	52 ef       	ldi	r21, 0xF2	; 242
    2354:	50 93 e8 00 	sts	0x00E8, r21
    2358:	46 30       	cpi	r20, 0x06	; 6
    235a:	09 f0       	breq	.+2      	; 0x235e <__vector_11+0x66>
    235c:	5c c0       	rjmp	.+184    	; 0x2416 <__vector_11+0x11e>
    235e:	04 c0       	rjmp	.+8      	; 0x2368 <__vector_11+0x70>
    2360:	81 e2       	ldi	r24, 0x21	; 33
    2362:	80 93 eb 00 	sts	0x00EB, r24
    2366:	3b c1       	rjmp	.+630    	; 0x25de <__vector_11+0x2e6>
    2368:	c6 e0       	ldi	r28, 0x06	; 6
    236a:	4d ec       	ldi	r20, 0xCD	; 205
    236c:	52 e0       	ldi	r21, 0x02	; 2
    236e:	fa 01       	movw	r30, r20
    2370:	65 91       	lpm	r22, Z+
    2372:	74 91       	lpm	r23, Z
    2374:	26 17       	cp	r18, r22
    2376:	37 07       	cpc	r19, r23
    2378:	19 f0       	breq	.+6      	; 0x2380 <__vector_11+0x88>
    237a:	49 5f       	subi	r20, 0xF9	; 249
    237c:	5f 4f       	sbci	r21, 0xFF	; 255
    237e:	20 c0       	rjmp	.+64     	; 0x23c0 <__vector_11+0xc8>
    2380:	fa 01       	movw	r30, r20
    2382:	32 96       	adiw	r30, 0x02	; 2
    2384:	65 91       	lpm	r22, Z+
    2386:	74 91       	lpm	r23, Z
    2388:	86 17       	cp	r24, r22
    238a:	97 07       	cpc	r25, r23
    238c:	19 f0       	breq	.+6      	; 0x2394 <__vector_11+0x9c>
    238e:	49 5f       	subi	r20, 0xF9	; 249
    2390:	5f 4f       	sbci	r21, 0xFF	; 255
    2392:	16 c0       	rjmp	.+44     	; 0x23c0 <__vector_11+0xc8>
    2394:	fa 01       	movw	r30, r20
    2396:	34 96       	adiw	r30, 0x04	; 4
    2398:	85 91       	lpm	r24, Z+
    239a:	94 91       	lpm	r25, Z
    239c:	28 2f       	mov	r18, r24
    239e:	39 2f       	mov	r19, r25
    23a0:	fa 01       	movw	r30, r20
    23a2:	36 96       	adiw	r30, 0x06	; 6
    23a4:	44 91       	lpm	r20, Z
    23a6:	9b 2f       	mov	r25, r27
    23a8:	80 e0       	ldi	r24, 0x00	; 0
    23aa:	8a 2b       	or	r24, r26
    23ac:	8f 3f       	cpi	r24, 0xFF	; 255
    23ae:	91 05       	cpc	r25, r1
    23b0:	19 f0       	breq	.+6      	; 0x23b8 <__vector_11+0xc0>
    23b2:	10 f0       	brcs	.+4      	; 0x23b8 <__vector_11+0xc0>
    23b4:	8f ef       	ldi	r24, 0xFF	; 255
    23b6:	90 e0       	ldi	r25, 0x00	; 0
    23b8:	84 17       	cp	r24, r20
    23ba:	28 f4       	brcc	.+10     	; 0x23c6 <__vector_11+0xce>
    23bc:	48 2f       	mov	r20, r24
    23be:	03 c0       	rjmp	.+6      	; 0x23c6 <__vector_11+0xce>
    23c0:	c1 50       	subi	r28, 0x01	; 1
    23c2:	a9 f6       	brne	.-86     	; 0x236e <__vector_11+0x76>
    23c4:	cd cf       	rjmp	.-102    	; 0x2360 <__vector_11+0x68>
    23c6:	c8 ee       	ldi	r28, 0xE8	; 232
    23c8:	d0 e0       	ldi	r29, 0x00	; 0
    23ca:	7e ef       	ldi	r23, 0xFE	; 254
    23cc:	a1 ef       	ldi	r26, 0xF1	; 241
    23ce:	b0 e0       	ldi	r27, 0x00	; 0
    23d0:	10 e1       	ldi	r17, 0x10	; 16
    23d2:	88 81       	ld	r24, Y
    23d4:	98 2f       	mov	r25, r24
    23d6:	95 70       	andi	r25, 0x05	; 5
    23d8:	e1 f3       	breq	.-8      	; 0x23d2 <__vector_11+0xda>
    23da:	82 fd       	sbrc	r24, 2
    23dc:	00 c1       	rjmp	.+512    	; 0x25de <__vector_11+0x2e6>
    23de:	64 2f       	mov	r22, r20
    23e0:	41 31       	cpi	r20, 0x11	; 17
    23e2:	08 f0       	brcs	.+2      	; 0x23e6 <__vector_11+0xee>
    23e4:	61 2f       	mov	r22, r17
    23e6:	66 23       	and	r22, r22
    23e8:	09 f4       	brne	.+2      	; 0x23ec <__vector_11+0xf4>
    23ea:	f6 c0       	rjmp	.+492    	; 0x25d8 <__vector_11+0x2e0>
    23ec:	c9 01       	movw	r24, r18
    23ee:	56 2f       	mov	r21, r22
    23f0:	fc 01       	movw	r30, r24
    23f2:	01 96       	adiw	r24, 0x01	; 1
    23f4:	e4 91       	lpm	r30, Z
    23f6:	ec 93       	st	X, r30
    23f8:	51 50       	subi	r21, 0x01	; 1
    23fa:	d1 f7       	brne	.-12     	; 0x23f0 <__vector_11+0xf8>
    23fc:	86 2f       	mov	r24, r22
    23fe:	81 50       	subi	r24, 0x01	; 1
    2400:	90 e0       	ldi	r25, 0x00	; 0
    2402:	01 96       	adiw	r24, 0x01	; 1
    2404:	28 0f       	add	r18, r24
    2406:	39 1f       	adc	r19, r25
    2408:	46 1b       	sub	r20, r22
    240a:	78 83       	st	Y, r23
    240c:	41 11       	cpse	r20, r1
    240e:	e1 cf       	rjmp	.-62     	; 0x23d2 <__vector_11+0xda>
    2410:	60 31       	cpi	r22, 0x10	; 16
    2412:	f9 f2       	breq	.-66     	; 0x23d2 <__vector_11+0xda>
    2414:	e4 c0       	rjmp	.+456    	; 0x25de <__vector_11+0x2e6>
    2416:	45 30       	cpi	r20, 0x05	; 5
    2418:	61 f4       	brne	.+24     	; 0x2432 <__vector_11+0x13a>
    241a:	8e ef       	ldi	r24, 0xFE	; 254
    241c:	80 93 e8 00 	sts	0x00E8, r24
    2420:	e8 ee       	ldi	r30, 0xE8	; 232
    2422:	f0 e0       	ldi	r31, 0x00	; 0
    2424:	80 81       	ld	r24, Z
    2426:	80 ff       	sbrs	r24, 0
    2428:	fd cf       	rjmp	.-6      	; 0x2424 <__vector_11+0x12c>
    242a:	20 68       	ori	r18, 0x80	; 128
    242c:	20 93 e3 00 	sts	0x00E3, r18
    2430:	d6 c0       	rjmp	.+428    	; 0x25de <__vector_11+0x2e6>
    2432:	49 30       	cpi	r20, 0x09	; 9
    2434:	a1 f5       	brne	.+104    	; 0x249e <__vector_11+0x1a6>
    2436:	71 11       	cpse	r23, r1
    2438:	5b c0       	rjmp	.+182    	; 0x24f0 <__vector_11+0x1f8>
    243a:	20 93 b9 01 	sts	0x01B9, r18
    243e:	10 92 ba 01 	sts	0x01BA, r1
    2442:	10 92 b8 01 	sts	0x01B8, r1
    2446:	8e ef       	ldi	r24, 0xFE	; 254
    2448:	80 93 e8 00 	sts	0x00E8, r24
    244c:	11 e0       	ldi	r17, 0x01	; 1
    244e:	87 ef       	ldi	r24, 0xF7	; 247
    2450:	92 e0       	ldi	r25, 0x02	; 2
    2452:	c9 ee       	ldi	r28, 0xE9	; 233
    2454:	d0 e0       	ldi	r29, 0x00	; 0
    2456:	ab ee       	ldi	r26, 0xEB	; 235
    2458:	b0 e0       	ldi	r27, 0x00	; 0
    245a:	6c ee       	ldi	r22, 0xEC	; 236
    245c:	70 e0       	ldi	r23, 0x00	; 0
    245e:	4d ee       	ldi	r20, 0xED	; 237
    2460:	50 e0       	ldi	r21, 0x00	; 0
    2462:	18 83       	st	Y, r17
    2464:	9c 01       	movw	r18, r24
    2466:	2f 5f       	subi	r18, 0xFF	; 255
    2468:	3f 4f       	sbci	r19, 0xFF	; 255
    246a:	fc 01       	movw	r30, r24
    246c:	04 91       	lpm	r16, Z
    246e:	0c 93       	st	X, r16
    2470:	00 23       	and	r16, r16
    2472:	59 f0       	breq	.+22     	; 0x248a <__vector_11+0x192>
    2474:	f9 01       	movw	r30, r18
    2476:	24 91       	lpm	r18, Z
    2478:	fb 01       	movw	r30, r22
    247a:	20 83       	st	Z, r18
    247c:	fc 01       	movw	r30, r24
    247e:	32 96       	adiw	r30, 0x02	; 2
    2480:	03 96       	adiw	r24, 0x03	; 3
    2482:	24 91       	lpm	r18, Z
    2484:	fa 01       	movw	r30, r20
    2486:	20 83       	st	Z, r18
    2488:	01 c0       	rjmp	.+2      	; 0x248c <__vector_11+0x194>
    248a:	c9 01       	movw	r24, r18
    248c:	1f 5f       	subi	r17, 0xFF	; 255
    248e:	15 30       	cpi	r17, 0x05	; 5
    2490:	41 f7       	brne	.-48     	; 0x2462 <__vector_11+0x16a>
    2492:	ea ee       	ldi	r30, 0xEA	; 234
    2494:	f0 e0       	ldi	r31, 0x00	; 0
    2496:	8e e1       	ldi	r24, 0x1E	; 30
    2498:	80 83       	st	Z, r24
    249a:	10 82       	st	Z, r1
    249c:	a0 c0       	rjmp	.+320    	; 0x25de <__vector_11+0x2e6>
    249e:	48 30       	cpi	r20, 0x08	; 8
    24a0:	81 f4       	brne	.+32     	; 0x24c2 <__vector_11+0x1ca>
    24a2:	70 38       	cpi	r23, 0x80	; 128
    24a4:	09 f0       	breq	.+2      	; 0x24a8 <__vector_11+0x1b0>
    24a6:	3f c0       	rjmp	.+126    	; 0x2526 <__vector_11+0x22e>
    24a8:	e8 ee       	ldi	r30, 0xE8	; 232
    24aa:	f0 e0       	ldi	r31, 0x00	; 0
    24ac:	80 81       	ld	r24, Z
    24ae:	80 ff       	sbrs	r24, 0
    24b0:	fd cf       	rjmp	.-6      	; 0x24ac <__vector_11+0x1b4>
    24b2:	80 91 b9 01 	lds	r24, 0x01B9
    24b6:	80 93 f1 00 	sts	0x00F1, r24
    24ba:	8e ef       	ldi	r24, 0xFE	; 254
    24bc:	80 93 e8 00 	sts	0x00E8, r24
    24c0:	8e c0       	rjmp	.+284    	; 0x25de <__vector_11+0x2e6>
    24c2:	41 32       	cpi	r20, 0x21	; 33
    24c4:	a9 f4       	brne	.+42     	; 0x24f0 <__vector_11+0x1f8>
    24c6:	71 3a       	cpi	r23, 0xA1	; 161
    24c8:	f1 f5       	brne	.+124    	; 0x2546 <__vector_11+0x24e>
    24ca:	e8 ee       	ldi	r30, 0xE8	; 232
    24cc:	f0 e0       	ldi	r31, 0x00	; 0
    24ce:	80 81       	ld	r24, Z
    24d0:	80 ff       	sbrs	r24, 0
    24d2:	fd cf       	rjmp	.-6      	; 0x24ce <__vector_11+0x1d6>
    24d4:	e0 e1       	ldi	r30, 0x10	; 16
    24d6:	f1 e0       	ldi	r31, 0x01	; 1
    24d8:	a1 ef       	ldi	r26, 0xF1	; 241
    24da:	b0 e0       	ldi	r27, 0x00	; 0
    24dc:	81 91       	ld	r24, Z+
    24de:	8c 93       	st	X, r24
    24e0:	41 e0       	ldi	r20, 0x01	; 1
    24e2:	e7 31       	cpi	r30, 0x17	; 23
    24e4:	f4 07       	cpc	r31, r20
    24e6:	d1 f7       	brne	.-12     	; 0x24dc <__vector_11+0x1e4>
    24e8:	8e ef       	ldi	r24, 0xFE	; 254
    24ea:	80 93 e8 00 	sts	0x00E8, r24
    24ee:	77 c0       	rjmp	.+238    	; 0x25de <__vector_11+0x2e6>
    24f0:	40 32       	cpi	r20, 0x20	; 32
    24f2:	c9 f4       	brne	.+50     	; 0x2526 <__vector_11+0x22e>
    24f4:	71 32       	cpi	r23, 0x21	; 33
    24f6:	09 f0       	breq	.+2      	; 0x24fa <__vector_11+0x202>
    24f8:	6b c0       	rjmp	.+214    	; 0x25d0 <__vector_11+0x2d8>
    24fa:	e8 ee       	ldi	r30, 0xE8	; 232
    24fc:	f0 e0       	ldi	r31, 0x00	; 0
    24fe:	80 81       	ld	r24, Z
    2500:	82 ff       	sbrs	r24, 2
    2502:	fd cf       	rjmp	.-6      	; 0x24fe <__vector_11+0x206>
    2504:	e0 e1       	ldi	r30, 0x10	; 16
    2506:	f1 e0       	ldi	r31, 0x01	; 1
    2508:	a1 ef       	ldi	r26, 0xF1	; 241
    250a:	b0 e0       	ldi	r27, 0x00	; 0
    250c:	8c 91       	ld	r24, X
    250e:	81 93       	st	Z+, r24
    2510:	51 e0       	ldi	r21, 0x01	; 1
    2512:	e7 31       	cpi	r30, 0x17	; 23
    2514:	f5 07       	cpc	r31, r21
    2516:	d1 f7       	brne	.-12     	; 0x250c <__vector_11+0x214>
    2518:	e8 ee       	ldi	r30, 0xE8	; 232
    251a:	f0 e0       	ldi	r31, 0x00	; 0
    251c:	8b ef       	ldi	r24, 0xFB	; 251
    251e:	80 83       	st	Z, r24
    2520:	8e ef       	ldi	r24, 0xFE	; 254
    2522:	80 83       	st	Z, r24
    2524:	5c c0       	rjmp	.+184    	; 0x25de <__vector_11+0x2e6>
    2526:	42 32       	cpi	r20, 0x22	; 34
    2528:	71 f4       	brne	.+28     	; 0x2546 <__vector_11+0x24e>
    252a:	71 32       	cpi	r23, 0x21	; 33
    252c:	09 f0       	breq	.+2      	; 0x2530 <__vector_11+0x238>
    252e:	50 c0       	rjmp	.+160    	; 0x25d0 <__vector_11+0x2d8>
    2530:	20 93 ba 01 	sts	0x01BA, r18
    2534:	e8 ee       	ldi	r30, 0xE8	; 232
    2536:	f0 e0       	ldi	r31, 0x00	; 0
    2538:	80 81       	ld	r24, Z
    253a:	80 ff       	sbrs	r24, 0
    253c:	fd cf       	rjmp	.-6      	; 0x2538 <__vector_11+0x240>
    253e:	8e ef       	ldi	r24, 0xFE	; 254
    2540:	80 93 e8 00 	sts	0x00E8, r24
    2544:	4c c0       	rjmp	.+152    	; 0x25de <__vector_11+0x2e6>
    2546:	41 11       	cpse	r20, r1
    2548:	1a c0       	rjmp	.+52     	; 0x257e <__vector_11+0x286>
    254a:	e8 ee       	ldi	r30, 0xE8	; 232
    254c:	f0 e0       	ldi	r31, 0x00	; 0
    254e:	20 81       	ld	r18, Z
    2550:	20 ff       	sbrs	r18, 0
    2552:	fd cf       	rjmp	.-6      	; 0x254e <__vector_11+0x256>
    2554:	72 38       	cpi	r23, 0x82	; 130
    2556:	51 f4       	brne	.+20     	; 0x256c <__vector_11+0x274>
    2558:	e9 ee       	ldi	r30, 0xE9	; 233
    255a:	f0 e0       	ldi	r31, 0x00	; 0
    255c:	80 83       	st	Z, r24
    255e:	80 91 eb 00 	lds	r24, 0x00EB
    2562:	85 fb       	bst	r24, 5
    2564:	88 27       	eor	r24, r24
    2566:	80 f9       	bld	r24, 0
    2568:	10 82       	st	Z, r1
    256a:	01 c0       	rjmp	.+2      	; 0x256e <__vector_11+0x276>
    256c:	80 e0       	ldi	r24, 0x00	; 0
    256e:	e1 ef       	ldi	r30, 0xF1	; 241
    2570:	f0 e0       	ldi	r31, 0x00	; 0
    2572:	80 83       	st	Z, r24
    2574:	10 82       	st	Z, r1
    2576:	8e ef       	ldi	r24, 0xFE	; 254
    2578:	80 93 e8 00 	sts	0x00E8, r24
    257c:	30 c0       	rjmp	.+96     	; 0x25de <__vector_11+0x2e6>
    257e:	41 30       	cpi	r20, 0x01	; 1
    2580:	11 f0       	breq	.+4      	; 0x2586 <__vector_11+0x28e>
    2582:	43 30       	cpi	r20, 0x03	; 3
    2584:	29 f5       	brne	.+74     	; 0x25d0 <__vector_11+0x2d8>
    2586:	72 30       	cpi	r23, 0x02	; 2
    2588:	19 f5       	brne	.+70     	; 0x25d0 <__vector_11+0x2d8>
    258a:	23 2b       	or	r18, r19
    258c:	09 f5       	brne	.+66     	; 0x25d0 <__vector_11+0x2d8>
    258e:	8f 77       	andi	r24, 0x7F	; 127
    2590:	99 27       	eor	r25, r25
    2592:	38 2f       	mov	r19, r24
    2594:	31 50       	subi	r19, 0x01	; 1
    2596:	34 30       	cpi	r19, 0x04	; 4
    2598:	d8 f4       	brcc	.+54     	; 0x25d0 <__vector_11+0x2d8>
    259a:	3e ef       	ldi	r19, 0xFE	; 254
    259c:	30 93 e8 00 	sts	0x00E8, r19
    25a0:	80 93 e9 00 	sts	0x00E9, r24
    25a4:	43 30       	cpi	r20, 0x03	; 3
    25a6:	21 f4       	brne	.+8      	; 0x25b0 <__vector_11+0x2b8>
    25a8:	81 e2       	ldi	r24, 0x21	; 33
    25aa:	80 93 eb 00 	sts	0x00EB, r24
    25ae:	17 c0       	rjmp	.+46     	; 0x25de <__vector_11+0x2e6>
    25b0:	99 e1       	ldi	r25, 0x19	; 25
    25b2:	90 93 eb 00 	sts	0x00EB, r25
    25b6:	21 e0       	ldi	r18, 0x01	; 1
    25b8:	30 e0       	ldi	r19, 0x00	; 0
    25ba:	d9 01       	movw	r26, r18
    25bc:	02 c0       	rjmp	.+4      	; 0x25c2 <__vector_11+0x2ca>
    25be:	aa 0f       	add	r26, r26
    25c0:	bb 1f       	adc	r27, r27
    25c2:	8a 95       	dec	r24
    25c4:	e2 f7       	brpl	.-8      	; 0x25be <__vector_11+0x2c6>
    25c6:	ea ee       	ldi	r30, 0xEA	; 234
    25c8:	f0 e0       	ldi	r31, 0x00	; 0
    25ca:	a0 83       	st	Z, r26
    25cc:	10 82       	st	Z, r1
    25ce:	07 c0       	rjmp	.+14     	; 0x25de <__vector_11+0x2e6>
    25d0:	81 e2       	ldi	r24, 0x21	; 33
    25d2:	80 93 eb 00 	sts	0x00EB, r24
    25d6:	03 c0       	rjmp	.+6      	; 0x25de <__vector_11+0x2e6>
    25d8:	78 83       	st	Y, r23
    25da:	41 11       	cpse	r20, r1
    25dc:	fa ce       	rjmp	.-524    	; 0x23d2 <__vector_11+0xda>
    25de:	ff 91       	pop	r31
    25e0:	ef 91       	pop	r30
    25e2:	df 91       	pop	r29
    25e4:	cf 91       	pop	r28
    25e6:	bf 91       	pop	r27
    25e8:	af 91       	pop	r26
    25ea:	9f 91       	pop	r25
    25ec:	8f 91       	pop	r24
    25ee:	7f 91       	pop	r23
    25f0:	6f 91       	pop	r22
    25f2:	5f 91       	pop	r21
    25f4:	4f 91       	pop	r20
    25f6:	3f 91       	pop	r19
    25f8:	2f 91       	pop	r18
    25fa:	1f 91       	pop	r17
    25fc:	0f 91       	pop	r16
    25fe:	0f 90       	pop	r0
    2600:	0f be       	out	0x3f, r0	; 63
    2602:	0f 90       	pop	r0
    2604:	1f 90       	pop	r1
    2606:	18 95       	reti

00002608 <m_usb_tx_int>:
    2608:	ef 92       	push	r14
    260a:	ff 92       	push	r15
    260c:	0f 93       	push	r16
    260e:	1f 93       	push	r17
    2610:	cf 93       	push	r28
    2612:	df 93       	push	r29
    2614:	cd b7       	in	r28, 0x3d	; 61
    2616:	de b7       	in	r29, 0x3e	; 62
    2618:	27 97       	sbiw	r28, 0x07	; 7
    261a:	0f b6       	in	r0, 0x3f	; 63
    261c:	f8 94       	cli
    261e:	de bf       	out	0x3e, r29	; 62
    2620:	0f be       	out	0x3f, r0	; 63
    2622:	cd bf       	out	0x3d, r28	; 61
    2624:	8e 01       	movw	r16, r28
    2626:	0f 5f       	subi	r16, 0xFF	; 255
    2628:	1f 4f       	sbci	r17, 0xFF	; 255
    262a:	27 e0       	ldi	r18, 0x07	; 7
    262c:	f8 01       	movw	r30, r16
    262e:	11 92       	st	Z+, r1
    2630:	2a 95       	dec	r18
    2632:	e9 f7       	brne	.-6      	; 0x262e <m_usb_tx_int+0x26>
    2634:	4a e0       	ldi	r20, 0x0A	; 10
    2636:	50 e0       	ldi	r21, 0x00	; 0
    2638:	b8 01       	movw	r22, r16
    263a:	0e 94 8d 19 	call	0x331a	; 0x331a <itoa>
    263e:	7e 01       	movw	r14, r28
    2640:	f8 e0       	ldi	r31, 0x08	; 8
    2642:	ef 0e       	add	r14, r31
    2644:	f1 1c       	adc	r15, r1
    2646:	f8 01       	movw	r30, r16
    2648:	81 91       	ld	r24, Z+
    264a:	8f 01       	movw	r16, r30
    264c:	81 11       	cpse	r24, r1
    264e:	0e 94 e2 10 	call	0x21c4	; 0x21c4 <m_usb_tx_char>
    2652:	0e 15       	cp	r16, r14
    2654:	1f 05       	cpc	r17, r15
    2656:	b9 f7       	brne	.-18     	; 0x2646 <m_usb_tx_int+0x3e>
    2658:	27 96       	adiw	r28, 0x07	; 7
    265a:	0f b6       	in	r0, 0x3f	; 63
    265c:	f8 94       	cli
    265e:	de bf       	out	0x3e, r29	; 62
    2660:	0f be       	out	0x3f, r0	; 63
    2662:	cd bf       	out	0x3d, r28	; 61
    2664:	df 91       	pop	r29
    2666:	cf 91       	pop	r28
    2668:	1f 91       	pop	r17
    266a:	0f 91       	pop	r16
    266c:	ff 90       	pop	r15
    266e:	ef 90       	pop	r14
    2670:	08 95       	ret

00002672 <twi_wait>:
    2672:	20 e0       	ldi	r18, 0x00	; 0
    2674:	30 e0       	ldi	r19, 0x00	; 0
    2676:	ec eb       	ldi	r30, 0xBC	; 188
    2678:	f0 e0       	ldi	r31, 0x00	; 0
    267a:	80 81       	ld	r24, Z
    267c:	88 23       	and	r24, r24
    267e:	34 f0       	brlt	.+12     	; 0x268c <twi_wait+0x1a>
    2680:	2f 5f       	subi	r18, 0xFF	; 255
    2682:	3f 4f       	sbci	r19, 0xFF	; 255
    2684:	29 3e       	cpi	r18, 0xE9	; 233
    2686:	83 e0       	ldi	r24, 0x03	; 3
    2688:	38 07       	cpc	r19, r24
    268a:	b9 f7       	brne	.-18     	; 0x267a <twi_wait+0x8>
    268c:	81 e0       	ldi	r24, 0x01	; 1
    268e:	28 3e       	cpi	r18, 0xE8	; 232
    2690:	33 40       	sbci	r19, 0x03	; 3
    2692:	09 f4       	brne	.+2      	; 0x2696 <twi_wait+0x24>
    2694:	80 e0       	ldi	r24, 0x00	; 0
    2696:	08 95       	ret

00002698 <send_byte>:
    2698:	80 93 bb 00 	sts	0x00BB, r24
    269c:	84 e8       	ldi	r24, 0x84	; 132
    269e:	80 93 bc 00 	sts	0x00BC, r24
    26a2:	0e 94 39 13 	call	0x2672	; 0x2672 <twi_wait>
    26a6:	88 23       	and	r24, r24
    26a8:	21 f0       	breq	.+8      	; 0x26b2 <send_byte+0x1a>
    26aa:	80 91 b9 00 	lds	r24, 0x00B9
    26ae:	88 7f       	andi	r24, 0xF8	; 248
    26b0:	08 95       	ret
    26b2:	80 e0       	ldi	r24, 0x00	; 0
    26b4:	08 95       	ret

000026b6 <start_read>:
    26b6:	cf 93       	push	r28
    26b8:	c8 2f       	mov	r28, r24
    26ba:	94 ea       	ldi	r25, 0xA4	; 164
    26bc:	90 93 bc 00 	sts	0x00BC, r25
    26c0:	0e 94 39 13 	call	0x2672	; 0x2672 <twi_wait>
    26c4:	88 23       	and	r24, r24
    26c6:	61 f0       	breq	.+24     	; 0x26e0 <start_read+0x2a>
    26c8:	8c 2f       	mov	r24, r28
    26ca:	88 0f       	add	r24, r24
    26cc:	8f 5f       	subi	r24, 0xFF	; 255
    26ce:	0e 94 4c 13 	call	0x2698	; 0x2698 <send_byte>
    26d2:	88 34       	cpi	r24, 0x48	; 72
    26d4:	39 f4       	brne	.+14     	; 0x26e4 <start_read+0x2e>
    26d6:	84 e9       	ldi	r24, 0x94	; 148
    26d8:	80 93 bc 00 	sts	0x00BC, r24
    26dc:	80 e0       	ldi	r24, 0x00	; 0
    26de:	03 c0       	rjmp	.+6      	; 0x26e6 <start_read+0x30>
    26e0:	80 e0       	ldi	r24, 0x00	; 0
    26e2:	01 c0       	rjmp	.+2      	; 0x26e6 <start_read+0x30>
    26e4:	81 e0       	ldi	r24, 0x01	; 1
    26e6:	cf 91       	pop	r28
    26e8:	08 95       	ret

000026ea <start_write>:
    26ea:	cf 93       	push	r28
    26ec:	c8 2f       	mov	r28, r24
    26ee:	94 ea       	ldi	r25, 0xA4	; 164
    26f0:	90 93 bc 00 	sts	0x00BC, r25
    26f4:	0e 94 39 13 	call	0x2672	; 0x2672 <twi_wait>
    26f8:	88 23       	and	r24, r24
    26fa:	59 f0       	breq	.+22     	; 0x2712 <start_write+0x28>
    26fc:	8c 2f       	mov	r24, r28
    26fe:	88 0f       	add	r24, r24
    2700:	0e 94 4c 13 	call	0x2698	; 0x2698 <send_byte>
    2704:	80 32       	cpi	r24, 0x20	; 32
    2706:	39 f4       	brne	.+14     	; 0x2716 <start_write+0x2c>
    2708:	84 e9       	ldi	r24, 0x94	; 148
    270a:	80 93 bc 00 	sts	0x00BC, r24
    270e:	80 e0       	ldi	r24, 0x00	; 0
    2710:	03 c0       	rjmp	.+6      	; 0x2718 <start_write+0x2e>
    2712:	80 e0       	ldi	r24, 0x00	; 0
    2714:	01 c0       	rjmp	.+2      	; 0x2718 <start_write+0x2e>
    2716:	81 e0       	ldi	r24, 0x01	; 1
    2718:	cf 91       	pop	r28
    271a:	08 95       	ret

0000271c <end>:
    271c:	84 e9       	ldi	r24, 0x94	; 148
    271e:	80 93 bc 00 	sts	0x00BC, r24
    2722:	08 95       	ret

00002724 <m_wii_read>:
    2724:	ef 92       	push	r14
    2726:	ff 92       	push	r15
    2728:	0f 93       	push	r16
    272a:	1f 93       	push	r17
    272c:	cf 93       	push	r28
    272e:	df 93       	push	r29
    2730:	cd b7       	in	r28, 0x3d	; 61
    2732:	de b7       	in	r29, 0x3e	; 62
    2734:	60 97       	sbiw	r28, 0x10	; 16
    2736:	0f b6       	in	r0, 0x3f	; 63
    2738:	f8 94       	cli
    273a:	de bf       	out	0x3e, r29	; 62
    273c:	0f be       	out	0x3f, r0	; 63
    273e:	cd bf       	out	0x3d, r28	; 61
    2740:	e8 2e       	mov	r14, r24
    2742:	f9 2e       	mov	r15, r25
    2744:	fe 01       	movw	r30, r28
    2746:	31 96       	adiw	r30, 0x01	; 1
    2748:	80 e1       	ldi	r24, 0x10	; 16
    274a:	df 01       	movw	r26, r30
    274c:	1d 92       	st	X+, r1
    274e:	8a 95       	dec	r24
    2750:	e9 f7       	brne	.-6      	; 0x274c <m_wii_read+0x28>
    2752:	88 e5       	ldi	r24, 0x58	; 88
    2754:	0e 94 75 13 	call	0x26ea	; 0x26ea <start_write>
    2758:	88 23       	and	r24, r24
    275a:	09 f4       	brne	.+2      	; 0x275e <m_wii_read+0x3a>
    275c:	66 c0       	rjmp	.+204    	; 0x282a <m_wii_read+0x106>
    275e:	86 e3       	ldi	r24, 0x36	; 54
    2760:	0e 94 4c 13 	call	0x2698	; 0x2698 <send_byte>
    2764:	88 23       	and	r24, r24
    2766:	09 f4       	brne	.+2      	; 0x276a <m_wii_read+0x46>
    2768:	62 c0       	rjmp	.+196    	; 0x282e <m_wii_read+0x10a>
    276a:	0e 94 8e 13 	call	0x271c	; 0x271c <end>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    276e:	bd e0       	ldi	r27, 0x0D	; 13
    2770:	ba 95       	dec	r27
    2772:	f1 f7       	brne	.-4      	; 0x2770 <m_wii_read+0x4c>
    2774:	00 00       	nop
    2776:	88 e5       	ldi	r24, 0x58	; 88
    2778:	0e 94 5b 13 	call	0x26b6	; 0x26b6 <start_read>
    277c:	88 23       	and	r24, r24
    277e:	09 f4       	brne	.+2      	; 0x2782 <m_wii_read+0x5e>
    2780:	58 c0       	rjmp	.+176    	; 0x2832 <m_wii_read+0x10e>
    2782:	ae 01       	movw	r20, r28
    2784:	4f 5f       	subi	r20, 0xFF	; 255
    2786:	5f 4f       	sbci	r21, 0xFF	; 255
    2788:	8e 01       	movw	r16, r28
    278a:	00 5f       	subi	r16, 0xF0	; 240
    278c:	1f 4f       	sbci	r17, 0xFF	; 255
    278e:	ec eb       	ldi	r30, 0xBC	; 188
    2790:	f0 e0       	ldi	r31, 0x00	; 0
    2792:	94 ec       	ldi	r25, 0xC4	; 196
    2794:	2b eb       	ldi	r18, 0xBB	; 187
    2796:	30 e0       	ldi	r19, 0x00	; 0
    2798:	90 83       	st	Z, r25
    279a:	80 81       	ld	r24, Z
    279c:	88 23       	and	r24, r24
    279e:	ec f7       	brge	.-6      	; 0x279a <m_wii_read+0x76>
    27a0:	d9 01       	movw	r26, r18
    27a2:	8c 91       	ld	r24, X
    27a4:	da 01       	movw	r26, r20
    27a6:	8d 93       	st	X+, r24
    27a8:	ad 01       	movw	r20, r26
    27aa:	a0 17       	cp	r26, r16
    27ac:	b1 07       	cpc	r27, r17
    27ae:	a1 f7       	brne	.-24     	; 0x2798 <m_wii_read+0x74>
    27b0:	84 e8       	ldi	r24, 0x84	; 132
    27b2:	80 93 bc 00 	sts	0x00BC, r24
    27b6:	ec eb       	ldi	r30, 0xBC	; 188
    27b8:	f0 e0       	ldi	r31, 0x00	; 0
    27ba:	80 81       	ld	r24, Z
    27bc:	88 23       	and	r24, r24
    27be:	ec f7       	brge	.-6      	; 0x27ba <m_wii_read+0x96>
    27c0:	80 91 bb 00 	lds	r24, 0x00BB
    27c4:	88 8b       	std	Y+16, r24	; 0x10
    27c6:	0e 94 8e 13 	call	0x271c	; 0x271c <end>
    27ca:	de 01       	movw	r26, r28
    27cc:	14 96       	adiw	r26, 0x04	; 4
    27ce:	6e 2d       	mov	r22, r14
    27d0:	7f 2d       	mov	r23, r15
    27d2:	4c 91       	ld	r20, X
    27d4:	24 2f       	mov	r18, r20
    27d6:	20 73       	andi	r18, 0x30	; 48
    27d8:	cd 01       	movw	r24, r26
    27da:	02 97       	sbiw	r24, 0x02	; 2
    27dc:	fc 01       	movw	r30, r24
    27de:	80 81       	ld	r24, Z
    27e0:	90 e0       	ldi	r25, 0x00	; 0
    27e2:	f0 e1       	ldi	r31, 0x10	; 16
    27e4:	2f 9f       	mul	r18, r31
    27e6:	80 0d       	add	r24, r0
    27e8:	91 1d       	adc	r25, r1
    27ea:	11 24       	eor	r1, r1
    27ec:	fb 01       	movw	r30, r22
    27ee:	91 83       	std	Z+1, r25	; 0x01
    27f0:	80 83       	st	Z, r24
    27f2:	84 2f       	mov	r24, r20
    27f4:	80 7c       	andi	r24, 0xC0	; 192
    27f6:	90 e0       	ldi	r25, 0x00	; 0
    27f8:	88 0f       	add	r24, r24
    27fa:	99 1f       	adc	r25, r25
    27fc:	88 0f       	add	r24, r24
    27fe:	99 1f       	adc	r25, r25
    2800:	9d 01       	movw	r18, r26
    2802:	21 50       	subi	r18, 0x01	; 1
    2804:	31 09       	sbc	r19, r1
    2806:	f9 01       	movw	r30, r18
    2808:	20 81       	ld	r18, Z
    280a:	82 0f       	add	r24, r18
    280c:	91 1d       	adc	r25, r1
    280e:	fb 01       	movw	r30, r22
    2810:	93 83       	std	Z+3, r25	; 0x03
    2812:	82 83       	std	Z+2, r24	; 0x02
    2814:	4f 70       	andi	r20, 0x0F	; 15
    2816:	44 83       	std	Z+4, r20	; 0x04
    2818:	15 82       	std	Z+5, r1	; 0x05
    281a:	13 96       	adiw	r26, 0x03	; 3
    281c:	6a 5f       	subi	r22, 0xFA	; 250
    281e:	7f 4f       	sbci	r23, 0xFF	; 255
    2820:	0a 17       	cp	r16, r26
    2822:	1b 07       	cpc	r17, r27
    2824:	b1 f6       	brne	.-84     	; 0x27d2 <m_wii_read+0xae>
    2826:	81 e0       	ldi	r24, 0x01	; 1
    2828:	05 c0       	rjmp	.+10     	; 0x2834 <m_wii_read+0x110>
    282a:	80 e0       	ldi	r24, 0x00	; 0
    282c:	03 c0       	rjmp	.+6      	; 0x2834 <m_wii_read+0x110>
    282e:	80 e0       	ldi	r24, 0x00	; 0
    2830:	01 c0       	rjmp	.+2      	; 0x2834 <m_wii_read+0x110>
    2832:	80 e0       	ldi	r24, 0x00	; 0
    2834:	60 96       	adiw	r28, 0x10	; 16
    2836:	0f b6       	in	r0, 0x3f	; 63
    2838:	f8 94       	cli
    283a:	de bf       	out	0x3e, r29	; 62
    283c:	0f be       	out	0x3f, r0	; 63
    283e:	cd bf       	out	0x3d, r28	; 61
    2840:	df 91       	pop	r29
    2842:	cf 91       	pop	r28
    2844:	1f 91       	pop	r17
    2846:	0f 91       	pop	r16
    2848:	ff 90       	pop	r15
    284a:	ef 90       	pop	r14
    284c:	08 95       	ret

0000284e <m_wii_open>:
    284e:	0e 94 15 0a 	call	0x142a	; 0x142a <m_bus_init>
    2852:	88 e5       	ldi	r24, 0x58	; 88
    2854:	0e 94 75 13 	call	0x26ea	; 0x26ea <start_write>
    2858:	88 23       	and	r24, r24
    285a:	09 f4       	brne	.+2      	; 0x285e <m_wii_open+0x10>
    285c:	c7 c0       	rjmp	.+398    	; 0x29ec <m_wii_open+0x19e>
    285e:	80 e3       	ldi	r24, 0x30	; 48
    2860:	0e 94 4c 13 	call	0x2698	; 0x2698 <send_byte>
    2864:	88 23       	and	r24, r24
    2866:	09 f4       	brne	.+2      	; 0x286a <m_wii_open+0x1c>
    2868:	c3 c0       	rjmp	.+390    	; 0x29f0 <m_wii_open+0x1a2>
    286a:	81 e0       	ldi	r24, 0x01	; 1
    286c:	0e 94 4c 13 	call	0x2698	; 0x2698 <send_byte>
    2870:	88 23       	and	r24, r24
    2872:	09 f4       	brne	.+2      	; 0x2876 <m_wii_open+0x28>
    2874:	bf c0       	rjmp	.+382    	; 0x29f4 <m_wii_open+0x1a6>
    2876:	0e 94 8e 13 	call	0x271c	; 0x271c <end>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    287a:	8f e9       	ldi	r24, 0x9F	; 159
    287c:	9f e0       	ldi	r25, 0x0F	; 15
    287e:	01 97       	sbiw	r24, 0x01	; 1
    2880:	f1 f7       	brne	.-4      	; 0x287e <m_wii_open+0x30>
    2882:	00 c0       	rjmp	.+0      	; 0x2884 <m_wii_open+0x36>
    2884:	00 00       	nop
    2886:	88 e5       	ldi	r24, 0x58	; 88
    2888:	0e 94 75 13 	call	0x26ea	; 0x26ea <start_write>
    288c:	88 23       	and	r24, r24
    288e:	09 f4       	brne	.+2      	; 0x2892 <m_wii_open+0x44>
    2890:	b3 c0       	rjmp	.+358    	; 0x29f8 <m_wii_open+0x1aa>
    2892:	80 e0       	ldi	r24, 0x00	; 0
    2894:	0e 94 4c 13 	call	0x2698	; 0x2698 <send_byte>
    2898:	88 23       	and	r24, r24
    289a:	09 f4       	brne	.+2      	; 0x289e <m_wii_open+0x50>
    289c:	af c0       	rjmp	.+350    	; 0x29fc <m_wii_open+0x1ae>
    289e:	80 e0       	ldi	r24, 0x00	; 0
    28a0:	0e 94 4c 13 	call	0x2698	; 0x2698 <send_byte>
    28a4:	88 23       	and	r24, r24
    28a6:	09 f4       	brne	.+2      	; 0x28aa <m_wii_open+0x5c>
    28a8:	ab c0       	rjmp	.+342    	; 0x2a00 <m_wii_open+0x1b2>
    28aa:	80 e0       	ldi	r24, 0x00	; 0
    28ac:	0e 94 4c 13 	call	0x2698	; 0x2698 <send_byte>
    28b0:	88 23       	and	r24, r24
    28b2:	09 f4       	brne	.+2      	; 0x28b6 <m_wii_open+0x68>
    28b4:	a7 c0       	rjmp	.+334    	; 0x2a04 <m_wii_open+0x1b6>
    28b6:	80 e0       	ldi	r24, 0x00	; 0
    28b8:	0e 94 4c 13 	call	0x2698	; 0x2698 <send_byte>
    28bc:	88 23       	and	r24, r24
    28be:	09 f4       	brne	.+2      	; 0x28c2 <m_wii_open+0x74>
    28c0:	a3 c0       	rjmp	.+326    	; 0x2a08 <m_wii_open+0x1ba>
    28c2:	80 e0       	ldi	r24, 0x00	; 0
    28c4:	0e 94 4c 13 	call	0x2698	; 0x2698 <send_byte>
    28c8:	88 23       	and	r24, r24
    28ca:	09 f4       	brne	.+2      	; 0x28ce <m_wii_open+0x80>
    28cc:	9f c0       	rjmp	.+318    	; 0x2a0c <m_wii_open+0x1be>
    28ce:	80 e0       	ldi	r24, 0x00	; 0
    28d0:	0e 94 4c 13 	call	0x2698	; 0x2698 <send_byte>
    28d4:	88 23       	and	r24, r24
    28d6:	09 f4       	brne	.+2      	; 0x28da <m_wii_open+0x8c>
    28d8:	9b c0       	rjmp	.+310    	; 0x2a10 <m_wii_open+0x1c2>
    28da:	80 e0       	ldi	r24, 0x00	; 0
    28dc:	0e 94 4c 13 	call	0x2698	; 0x2698 <send_byte>
    28e0:	88 23       	and	r24, r24
    28e2:	09 f4       	brne	.+2      	; 0x28e6 <m_wii_open+0x98>
    28e4:	97 c0       	rjmp	.+302    	; 0x2a14 <m_wii_open+0x1c6>
    28e6:	80 e9       	ldi	r24, 0x90	; 144
    28e8:	0e 94 4c 13 	call	0x2698	; 0x2698 <send_byte>
    28ec:	88 23       	and	r24, r24
    28ee:	09 f4       	brne	.+2      	; 0x28f2 <m_wii_open+0xa4>
    28f0:	93 c0       	rjmp	.+294    	; 0x2a18 <m_wii_open+0x1ca>
    28f2:	0e 94 8e 13 	call	0x271c	; 0x271c <end>
    28f6:	8f e9       	ldi	r24, 0x9F	; 159
    28f8:	9f e0       	ldi	r25, 0x0F	; 15
    28fa:	01 97       	sbiw	r24, 0x01	; 1
    28fc:	f1 f7       	brne	.-4      	; 0x28fa <m_wii_open+0xac>
    28fe:	00 c0       	rjmp	.+0      	; 0x2900 <m_wii_open+0xb2>
    2900:	00 00       	nop
    2902:	88 e5       	ldi	r24, 0x58	; 88
    2904:	0e 94 75 13 	call	0x26ea	; 0x26ea <start_write>
    2908:	88 23       	and	r24, r24
    290a:	09 f4       	brne	.+2      	; 0x290e <m_wii_open+0xc0>
    290c:	87 c0       	rjmp	.+270    	; 0x2a1c <m_wii_open+0x1ce>
    290e:	87 e0       	ldi	r24, 0x07	; 7
    2910:	0e 94 4c 13 	call	0x2698	; 0x2698 <send_byte>
    2914:	88 23       	and	r24, r24
    2916:	09 f4       	brne	.+2      	; 0x291a <m_wii_open+0xcc>
    2918:	83 c0       	rjmp	.+262    	; 0x2a20 <m_wii_open+0x1d2>
    291a:	80 e0       	ldi	r24, 0x00	; 0
    291c:	0e 94 4c 13 	call	0x2698	; 0x2698 <send_byte>
    2920:	88 23       	and	r24, r24
    2922:	09 f4       	brne	.+2      	; 0x2926 <m_wii_open+0xd8>
    2924:	7f c0       	rjmp	.+254    	; 0x2a24 <m_wii_open+0x1d6>
    2926:	81 e4       	ldi	r24, 0x41	; 65
    2928:	0e 94 4c 13 	call	0x2698	; 0x2698 <send_byte>
    292c:	88 23       	and	r24, r24
    292e:	09 f4       	brne	.+2      	; 0x2932 <m_wii_open+0xe4>
    2930:	7b c0       	rjmp	.+246    	; 0x2a28 <m_wii_open+0x1da>
    2932:	0e 94 8e 13 	call	0x271c	; 0x271c <end>
    2936:	8f e9       	ldi	r24, 0x9F	; 159
    2938:	9f e0       	ldi	r25, 0x0F	; 15
    293a:	01 97       	sbiw	r24, 0x01	; 1
    293c:	f1 f7       	brne	.-4      	; 0x293a <m_wii_open+0xec>
    293e:	00 c0       	rjmp	.+0      	; 0x2940 <m_wii_open+0xf2>
    2940:	00 00       	nop
    2942:	88 e5       	ldi	r24, 0x58	; 88
    2944:	0e 94 75 13 	call	0x26ea	; 0x26ea <start_write>
    2948:	88 23       	and	r24, r24
    294a:	09 f4       	brne	.+2      	; 0x294e <m_wii_open+0x100>
    294c:	6f c0       	rjmp	.+222    	; 0x2a2c <m_wii_open+0x1de>
    294e:	8a e1       	ldi	r24, 0x1A	; 26
    2950:	0e 94 4c 13 	call	0x2698	; 0x2698 <send_byte>
    2954:	88 23       	and	r24, r24
    2956:	09 f4       	brne	.+2      	; 0x295a <m_wii_open+0x10c>
    2958:	6b c0       	rjmp	.+214    	; 0x2a30 <m_wii_open+0x1e2>
    295a:	80 e4       	ldi	r24, 0x40	; 64
    295c:	0e 94 4c 13 	call	0x2698	; 0x2698 <send_byte>
    2960:	88 23       	and	r24, r24
    2962:	09 f4       	brne	.+2      	; 0x2966 <m_wii_open+0x118>
    2964:	67 c0       	rjmp	.+206    	; 0x2a34 <m_wii_open+0x1e6>
    2966:	80 e0       	ldi	r24, 0x00	; 0
    2968:	0e 94 4c 13 	call	0x2698	; 0x2698 <send_byte>
    296c:	88 23       	and	r24, r24
    296e:	09 f4       	brne	.+2      	; 0x2972 <m_wii_open+0x124>
    2970:	63 c0       	rjmp	.+198    	; 0x2a38 <m_wii_open+0x1ea>
    2972:	0e 94 8e 13 	call	0x271c	; 0x271c <end>
    2976:	8f e9       	ldi	r24, 0x9F	; 159
    2978:	9f e0       	ldi	r25, 0x0F	; 15
    297a:	01 97       	sbiw	r24, 0x01	; 1
    297c:	f1 f7       	brne	.-4      	; 0x297a <m_wii_open+0x12c>
    297e:	00 c0       	rjmp	.+0      	; 0x2980 <m_wii_open+0x132>
    2980:	00 00       	nop
    2982:	88 e5       	ldi	r24, 0x58	; 88
    2984:	0e 94 75 13 	call	0x26ea	; 0x26ea <start_write>
    2988:	88 23       	and	r24, r24
    298a:	09 f4       	brne	.+2      	; 0x298e <m_wii_open+0x140>
    298c:	57 c0       	rjmp	.+174    	; 0x2a3c <m_wii_open+0x1ee>
    298e:	83 e3       	ldi	r24, 0x33	; 51
    2990:	0e 94 4c 13 	call	0x2698	; 0x2698 <send_byte>
    2994:	88 23       	and	r24, r24
    2996:	09 f4       	brne	.+2      	; 0x299a <m_wii_open+0x14c>
    2998:	53 c0       	rjmp	.+166    	; 0x2a40 <m_wii_open+0x1f2>
    299a:	83 e0       	ldi	r24, 0x03	; 3
    299c:	0e 94 4c 13 	call	0x2698	; 0x2698 <send_byte>
    29a0:	88 23       	and	r24, r24
    29a2:	09 f4       	brne	.+2      	; 0x29a6 <m_wii_open+0x158>
    29a4:	4f c0       	rjmp	.+158    	; 0x2a44 <m_wii_open+0x1f6>
    29a6:	0e 94 8e 13 	call	0x271c	; 0x271c <end>
    29aa:	8f e9       	ldi	r24, 0x9F	; 159
    29ac:	9f e0       	ldi	r25, 0x0F	; 15
    29ae:	01 97       	sbiw	r24, 0x01	; 1
    29b0:	f1 f7       	brne	.-4      	; 0x29ae <m_wii_open+0x160>
    29b2:	00 c0       	rjmp	.+0      	; 0x29b4 <m_wii_open+0x166>
    29b4:	00 00       	nop
    29b6:	88 e5       	ldi	r24, 0x58	; 88
    29b8:	0e 94 75 13 	call	0x26ea	; 0x26ea <start_write>
    29bc:	88 23       	and	r24, r24
    29be:	09 f4       	brne	.+2      	; 0x29c2 <m_wii_open+0x174>
    29c0:	43 c0       	rjmp	.+134    	; 0x2a48 <m_wii_open+0x1fa>
    29c2:	80 e3       	ldi	r24, 0x30	; 48
    29c4:	0e 94 4c 13 	call	0x2698	; 0x2698 <send_byte>
    29c8:	88 23       	and	r24, r24
    29ca:	09 f4       	brne	.+2      	; 0x29ce <m_wii_open+0x180>
    29cc:	3f c0       	rjmp	.+126    	; 0x2a4c <m_wii_open+0x1fe>
    29ce:	88 e0       	ldi	r24, 0x08	; 8
    29d0:	0e 94 4c 13 	call	0x2698	; 0x2698 <send_byte>
    29d4:	88 23       	and	r24, r24
    29d6:	e1 f1       	breq	.+120    	; 0x2a50 <m_wii_open+0x202>
    29d8:	0e 94 8e 13 	call	0x271c	; 0x271c <end>
    29dc:	8f e9       	ldi	r24, 0x9F	; 159
    29de:	9f e0       	ldi	r25, 0x0F	; 15
    29e0:	01 97       	sbiw	r24, 0x01	; 1
    29e2:	f1 f7       	brne	.-4      	; 0x29e0 <m_wii_open+0x192>
    29e4:	00 c0       	rjmp	.+0      	; 0x29e6 <m_wii_open+0x198>
    29e6:	00 00       	nop
    29e8:	81 e0       	ldi	r24, 0x01	; 1
    29ea:	08 95       	ret
    29ec:	80 e0       	ldi	r24, 0x00	; 0
    29ee:	08 95       	ret
    29f0:	80 e0       	ldi	r24, 0x00	; 0
    29f2:	08 95       	ret
    29f4:	80 e0       	ldi	r24, 0x00	; 0
    29f6:	08 95       	ret
    29f8:	80 e0       	ldi	r24, 0x00	; 0
    29fa:	08 95       	ret
    29fc:	80 e0       	ldi	r24, 0x00	; 0
    29fe:	08 95       	ret
    2a00:	80 e0       	ldi	r24, 0x00	; 0
    2a02:	08 95       	ret
    2a04:	80 e0       	ldi	r24, 0x00	; 0
    2a06:	08 95       	ret
    2a08:	80 e0       	ldi	r24, 0x00	; 0
    2a0a:	08 95       	ret
    2a0c:	80 e0       	ldi	r24, 0x00	; 0
    2a0e:	08 95       	ret
    2a10:	80 e0       	ldi	r24, 0x00	; 0
    2a12:	08 95       	ret
    2a14:	80 e0       	ldi	r24, 0x00	; 0
    2a16:	08 95       	ret
    2a18:	80 e0       	ldi	r24, 0x00	; 0
    2a1a:	08 95       	ret
    2a1c:	80 e0       	ldi	r24, 0x00	; 0
    2a1e:	08 95       	ret
    2a20:	80 e0       	ldi	r24, 0x00	; 0
    2a22:	08 95       	ret
    2a24:	80 e0       	ldi	r24, 0x00	; 0
    2a26:	08 95       	ret
    2a28:	80 e0       	ldi	r24, 0x00	; 0
    2a2a:	08 95       	ret
    2a2c:	80 e0       	ldi	r24, 0x00	; 0
    2a2e:	08 95       	ret
    2a30:	80 e0       	ldi	r24, 0x00	; 0
    2a32:	08 95       	ret
    2a34:	80 e0       	ldi	r24, 0x00	; 0
    2a36:	08 95       	ret
    2a38:	80 e0       	ldi	r24, 0x00	; 0
    2a3a:	08 95       	ret
    2a3c:	80 e0       	ldi	r24, 0x00	; 0
    2a3e:	08 95       	ret
    2a40:	80 e0       	ldi	r24, 0x00	; 0
    2a42:	08 95       	ret
    2a44:	80 e0       	ldi	r24, 0x00	; 0
    2a46:	08 95       	ret
    2a48:	80 e0       	ldi	r24, 0x00	; 0
    2a4a:	08 95       	ret
    2a4c:	80 e0       	ldi	r24, 0x00	; 0
    2a4e:	08 95       	ret
    2a50:	80 e0       	ldi	r24, 0x00	; 0
    2a52:	08 95       	ret

00002a54 <__subsf3>:
    2a54:	50 58       	subi	r21, 0x80	; 128

00002a56 <__addsf3>:
    2a56:	bb 27       	eor	r27, r27
    2a58:	aa 27       	eor	r26, r26
    2a5a:	0e d0       	rcall	.+28     	; 0x2a78 <__addsf3x>
    2a5c:	58 c2       	rjmp	.+1200   	; 0x2f0e <__fp_round>
    2a5e:	21 d2       	rcall	.+1090   	; 0x2ea2 <__fp_pscA>
    2a60:	30 f0       	brcs	.+12     	; 0x2a6e <__addsf3+0x18>
    2a62:	26 d2       	rcall	.+1100   	; 0x2eb0 <__fp_pscB>
    2a64:	20 f0       	brcs	.+8      	; 0x2a6e <__addsf3+0x18>
    2a66:	31 f4       	brne	.+12     	; 0x2a74 <__addsf3+0x1e>
    2a68:	9f 3f       	cpi	r25, 0xFF	; 255
    2a6a:	11 f4       	brne	.+4      	; 0x2a70 <__addsf3+0x1a>
    2a6c:	1e f4       	brtc	.+6      	; 0x2a74 <__addsf3+0x1e>
    2a6e:	f1 c1       	rjmp	.+994    	; 0x2e52 <__fp_nan>
    2a70:	0e f4       	brtc	.+2      	; 0x2a74 <__addsf3+0x1e>
    2a72:	e0 95       	com	r30
    2a74:	e7 fb       	bst	r30, 7
    2a76:	e7 c1       	rjmp	.+974    	; 0x2e46 <__fp_inf>

00002a78 <__addsf3x>:
    2a78:	e9 2f       	mov	r30, r25
    2a7a:	6b d2       	rcall	.+1238   	; 0x2f52 <__fp_split3>
    2a7c:	80 f3       	brcs	.-32     	; 0x2a5e <__addsf3+0x8>
    2a7e:	ba 17       	cp	r27, r26
    2a80:	62 07       	cpc	r22, r18
    2a82:	73 07       	cpc	r23, r19
    2a84:	84 07       	cpc	r24, r20
    2a86:	95 07       	cpc	r25, r21
    2a88:	18 f0       	brcs	.+6      	; 0x2a90 <__addsf3x+0x18>
    2a8a:	71 f4       	brne	.+28     	; 0x2aa8 <__addsf3x+0x30>
    2a8c:	9e f5       	brtc	.+102    	; 0x2af4 <__addsf3x+0x7c>
    2a8e:	83 c2       	rjmp	.+1286   	; 0x2f96 <__fp_zero>
    2a90:	0e f4       	brtc	.+2      	; 0x2a94 <__addsf3x+0x1c>
    2a92:	e0 95       	com	r30
    2a94:	0b 2e       	mov	r0, r27
    2a96:	ba 2f       	mov	r27, r26
    2a98:	a0 2d       	mov	r26, r0
    2a9a:	0b 01       	movw	r0, r22
    2a9c:	b9 01       	movw	r22, r18
    2a9e:	90 01       	movw	r18, r0
    2aa0:	0c 01       	movw	r0, r24
    2aa2:	ca 01       	movw	r24, r20
    2aa4:	a0 01       	movw	r20, r0
    2aa6:	11 24       	eor	r1, r1
    2aa8:	ff 27       	eor	r31, r31
    2aaa:	59 1b       	sub	r21, r25
    2aac:	99 f0       	breq	.+38     	; 0x2ad4 <__addsf3x+0x5c>
    2aae:	59 3f       	cpi	r21, 0xF9	; 249
    2ab0:	50 f4       	brcc	.+20     	; 0x2ac6 <__addsf3x+0x4e>
    2ab2:	50 3e       	cpi	r21, 0xE0	; 224
    2ab4:	68 f1       	brcs	.+90     	; 0x2b10 <__addsf3x+0x98>
    2ab6:	1a 16       	cp	r1, r26
    2ab8:	f0 40       	sbci	r31, 0x00	; 0
    2aba:	a2 2f       	mov	r26, r18
    2abc:	23 2f       	mov	r18, r19
    2abe:	34 2f       	mov	r19, r20
    2ac0:	44 27       	eor	r20, r20
    2ac2:	58 5f       	subi	r21, 0xF8	; 248
    2ac4:	f3 cf       	rjmp	.-26     	; 0x2aac <__addsf3x+0x34>
    2ac6:	46 95       	lsr	r20
    2ac8:	37 95       	ror	r19
    2aca:	27 95       	ror	r18
    2acc:	a7 95       	ror	r26
    2ace:	f0 40       	sbci	r31, 0x00	; 0
    2ad0:	53 95       	inc	r21
    2ad2:	c9 f7       	brne	.-14     	; 0x2ac6 <__addsf3x+0x4e>
    2ad4:	7e f4       	brtc	.+30     	; 0x2af4 <__addsf3x+0x7c>
    2ad6:	1f 16       	cp	r1, r31
    2ad8:	ba 0b       	sbc	r27, r26
    2ada:	62 0b       	sbc	r22, r18
    2adc:	73 0b       	sbc	r23, r19
    2ade:	84 0b       	sbc	r24, r20
    2ae0:	ba f0       	brmi	.+46     	; 0x2b10 <__addsf3x+0x98>
    2ae2:	91 50       	subi	r25, 0x01	; 1
    2ae4:	a1 f0       	breq	.+40     	; 0x2b0e <__addsf3x+0x96>
    2ae6:	ff 0f       	add	r31, r31
    2ae8:	bb 1f       	adc	r27, r27
    2aea:	66 1f       	adc	r22, r22
    2aec:	77 1f       	adc	r23, r23
    2aee:	88 1f       	adc	r24, r24
    2af0:	c2 f7       	brpl	.-16     	; 0x2ae2 <__addsf3x+0x6a>
    2af2:	0e c0       	rjmp	.+28     	; 0x2b10 <__addsf3x+0x98>
    2af4:	ba 0f       	add	r27, r26
    2af6:	62 1f       	adc	r22, r18
    2af8:	73 1f       	adc	r23, r19
    2afa:	84 1f       	adc	r24, r20
    2afc:	48 f4       	brcc	.+18     	; 0x2b10 <__addsf3x+0x98>
    2afe:	87 95       	ror	r24
    2b00:	77 95       	ror	r23
    2b02:	67 95       	ror	r22
    2b04:	b7 95       	ror	r27
    2b06:	f7 95       	ror	r31
    2b08:	9e 3f       	cpi	r25, 0xFE	; 254
    2b0a:	08 f0       	brcs	.+2      	; 0x2b0e <__addsf3x+0x96>
    2b0c:	b3 cf       	rjmp	.-154    	; 0x2a74 <__addsf3+0x1e>
    2b0e:	93 95       	inc	r25
    2b10:	88 0f       	add	r24, r24
    2b12:	08 f0       	brcs	.+2      	; 0x2b16 <__addsf3x+0x9e>
    2b14:	99 27       	eor	r25, r25
    2b16:	ee 0f       	add	r30, r30
    2b18:	97 95       	ror	r25
    2b1a:	87 95       	ror	r24
    2b1c:	08 95       	ret
    2b1e:	c1 d1       	rcall	.+898    	; 0x2ea2 <__fp_pscA>
    2b20:	58 f0       	brcs	.+22     	; 0x2b38 <__addsf3x+0xc0>
    2b22:	80 e8       	ldi	r24, 0x80	; 128
    2b24:	91 e0       	ldi	r25, 0x01	; 1
    2b26:	09 f4       	brne	.+2      	; 0x2b2a <__addsf3x+0xb2>
    2b28:	9e ef       	ldi	r25, 0xFE	; 254
    2b2a:	c2 d1       	rcall	.+900    	; 0x2eb0 <__fp_pscB>
    2b2c:	28 f0       	brcs	.+10     	; 0x2b38 <__addsf3x+0xc0>
    2b2e:	40 e8       	ldi	r20, 0x80	; 128
    2b30:	51 e0       	ldi	r21, 0x01	; 1
    2b32:	59 f4       	brne	.+22     	; 0x2b4a <atan2+0xe>
    2b34:	5e ef       	ldi	r21, 0xFE	; 254
    2b36:	09 c0       	rjmp	.+18     	; 0x2b4a <atan2+0xe>
    2b38:	8c c1       	rjmp	.+792    	; 0x2e52 <__fp_nan>
    2b3a:	2d c2       	rjmp	.+1114   	; 0x2f96 <__fp_zero>

00002b3c <atan2>:
    2b3c:	e9 2f       	mov	r30, r25
    2b3e:	e0 78       	andi	r30, 0x80	; 128
    2b40:	08 d2       	rcall	.+1040   	; 0x2f52 <__fp_split3>
    2b42:	68 f3       	brcs	.-38     	; 0x2b1e <__addsf3x+0xa6>
    2b44:	09 2e       	mov	r0, r25
    2b46:	05 2a       	or	r0, r21
    2b48:	c1 f3       	breq	.-16     	; 0x2b3a <__addsf3x+0xc2>
    2b4a:	26 17       	cp	r18, r22
    2b4c:	37 07       	cpc	r19, r23
    2b4e:	48 07       	cpc	r20, r24
    2b50:	59 07       	cpc	r21, r25
    2b52:	38 f0       	brcs	.+14     	; 0x2b62 <atan2+0x26>
    2b54:	0e 2e       	mov	r0, r30
    2b56:	07 f8       	bld	r0, 7
    2b58:	e0 25       	eor	r30, r0
    2b5a:	69 f0       	breq	.+26     	; 0x2b76 <atan2+0x3a>
    2b5c:	e0 25       	eor	r30, r0
    2b5e:	e0 64       	ori	r30, 0x40	; 64
    2b60:	0a c0       	rjmp	.+20     	; 0x2b76 <atan2+0x3a>
    2b62:	ef 63       	ori	r30, 0x3F	; 63
    2b64:	07 f8       	bld	r0, 7
    2b66:	00 94       	com	r0
    2b68:	07 fa       	bst	r0, 7
    2b6a:	db 01       	movw	r26, r22
    2b6c:	b9 01       	movw	r22, r18
    2b6e:	9d 01       	movw	r18, r26
    2b70:	dc 01       	movw	r26, r24
    2b72:	ca 01       	movw	r24, r20
    2b74:	ad 01       	movw	r20, r26
    2b76:	ef 93       	push	r30
    2b78:	4a d0       	rcall	.+148    	; 0x2c0e <__divsf3_pse>
    2b7a:	c9 d1       	rcall	.+914    	; 0x2f0e <__fp_round>
    2b7c:	0a d0       	rcall	.+20     	; 0x2b92 <atan>
    2b7e:	5f 91       	pop	r21
    2b80:	55 23       	and	r21, r21
    2b82:	31 f0       	breq	.+12     	; 0x2b90 <atan2+0x54>
    2b84:	2b ed       	ldi	r18, 0xDB	; 219
    2b86:	3f e0       	ldi	r19, 0x0F	; 15
    2b88:	49 e4       	ldi	r20, 0x49	; 73
    2b8a:	50 fd       	sbrc	r21, 0
    2b8c:	49 ec       	ldi	r20, 0xC9	; 201
    2b8e:	63 cf       	rjmp	.-314    	; 0x2a56 <__addsf3>
    2b90:	08 95       	ret

00002b92 <atan>:
    2b92:	df 93       	push	r29
    2b94:	dd 27       	eor	r29, r29
    2b96:	b9 2f       	mov	r27, r25
    2b98:	bf 77       	andi	r27, 0x7F	; 127
    2b9a:	40 e8       	ldi	r20, 0x80	; 128
    2b9c:	5f e3       	ldi	r21, 0x3F	; 63
    2b9e:	16 16       	cp	r1, r22
    2ba0:	17 06       	cpc	r1, r23
    2ba2:	48 07       	cpc	r20, r24
    2ba4:	5b 07       	cpc	r21, r27
    2ba6:	10 f4       	brcc	.+4      	; 0x2bac <atan+0x1a>
    2ba8:	d9 2f       	mov	r29, r25
    2baa:	00 d2       	rcall	.+1024   	; 0x2fac <inverse>
    2bac:	9f 93       	push	r25
    2bae:	8f 93       	push	r24
    2bb0:	7f 93       	push	r23
    2bb2:	6f 93       	push	r22
    2bb4:	5b d3       	rcall	.+1718   	; 0x326c <square>
    2bb6:	e0 e0       	ldi	r30, 0x00	; 0
    2bb8:	f2 e0       	ldi	r31, 0x02	; 2
    2bba:	4e d1       	rcall	.+668    	; 0x2e58 <__fp_powser>
    2bbc:	a8 d1       	rcall	.+848    	; 0x2f0e <__fp_round>
    2bbe:	2f 91       	pop	r18
    2bc0:	3f 91       	pop	r19
    2bc2:	4f 91       	pop	r20
    2bc4:	5f 91       	pop	r21
    2bc6:	b3 d2       	rcall	.+1382   	; 0x312e <__mulsf3x>
    2bc8:	dd 23       	and	r29, r29
    2bca:	49 f0       	breq	.+18     	; 0x2bde <atan+0x4c>
    2bcc:	90 58       	subi	r25, 0x80	; 128
    2bce:	a2 ea       	ldi	r26, 0xA2	; 162
    2bd0:	2a ed       	ldi	r18, 0xDA	; 218
    2bd2:	3f e0       	ldi	r19, 0x0F	; 15
    2bd4:	49 ec       	ldi	r20, 0xC9	; 201
    2bd6:	5f e3       	ldi	r21, 0x3F	; 63
    2bd8:	d0 78       	andi	r29, 0x80	; 128
    2bda:	5d 27       	eor	r21, r29
    2bdc:	4d df       	rcall	.-358    	; 0x2a78 <__addsf3x>
    2bde:	df 91       	pop	r29
    2be0:	96 c1       	rjmp	.+812    	; 0x2f0e <__fp_round>

00002be2 <__cmpsf2>:
    2be2:	0d d1       	rcall	.+538    	; 0x2dfe <__fp_cmp>
    2be4:	08 f4       	brcc	.+2      	; 0x2be8 <__cmpsf2+0x6>
    2be6:	81 e0       	ldi	r24, 0x01	; 1
    2be8:	08 95       	ret

00002bea <cos>:
    2bea:	6a d1       	rcall	.+724    	; 0x2ec0 <__fp_rempio2>
    2bec:	e3 95       	inc	r30
    2bee:	a0 c1       	rjmp	.+832    	; 0x2f30 <__fp_sinus>

00002bf0 <__divsf3>:
    2bf0:	0c d0       	rcall	.+24     	; 0x2c0a <__divsf3x>
    2bf2:	8d c1       	rjmp	.+794    	; 0x2f0e <__fp_round>
    2bf4:	5d d1       	rcall	.+698    	; 0x2eb0 <__fp_pscB>
    2bf6:	40 f0       	brcs	.+16     	; 0x2c08 <__divsf3+0x18>
    2bf8:	54 d1       	rcall	.+680    	; 0x2ea2 <__fp_pscA>
    2bfa:	30 f0       	brcs	.+12     	; 0x2c08 <__divsf3+0x18>
    2bfc:	21 f4       	brne	.+8      	; 0x2c06 <__divsf3+0x16>
    2bfe:	5f 3f       	cpi	r21, 0xFF	; 255
    2c00:	19 f0       	breq	.+6      	; 0x2c08 <__divsf3+0x18>
    2c02:	21 c1       	rjmp	.+578    	; 0x2e46 <__fp_inf>
    2c04:	51 11       	cpse	r21, r1
    2c06:	c8 c1       	rjmp	.+912    	; 0x2f98 <__fp_szero>
    2c08:	24 c1       	rjmp	.+584    	; 0x2e52 <__fp_nan>

00002c0a <__divsf3x>:
    2c0a:	a3 d1       	rcall	.+838    	; 0x2f52 <__fp_split3>
    2c0c:	98 f3       	brcs	.-26     	; 0x2bf4 <__divsf3+0x4>

00002c0e <__divsf3_pse>:
    2c0e:	99 23       	and	r25, r25
    2c10:	c9 f3       	breq	.-14     	; 0x2c04 <__divsf3+0x14>
    2c12:	55 23       	and	r21, r21
    2c14:	b1 f3       	breq	.-20     	; 0x2c02 <__divsf3+0x12>
    2c16:	95 1b       	sub	r25, r21
    2c18:	55 0b       	sbc	r21, r21
    2c1a:	bb 27       	eor	r27, r27
    2c1c:	aa 27       	eor	r26, r26
    2c1e:	62 17       	cp	r22, r18
    2c20:	73 07       	cpc	r23, r19
    2c22:	84 07       	cpc	r24, r20
    2c24:	38 f0       	brcs	.+14     	; 0x2c34 <__divsf3_pse+0x26>
    2c26:	9f 5f       	subi	r25, 0xFF	; 255
    2c28:	5f 4f       	sbci	r21, 0xFF	; 255
    2c2a:	22 0f       	add	r18, r18
    2c2c:	33 1f       	adc	r19, r19
    2c2e:	44 1f       	adc	r20, r20
    2c30:	aa 1f       	adc	r26, r26
    2c32:	a9 f3       	breq	.-22     	; 0x2c1e <__divsf3_pse+0x10>
    2c34:	33 d0       	rcall	.+102    	; 0x2c9c <__divsf3_pse+0x8e>
    2c36:	0e 2e       	mov	r0, r30
    2c38:	3a f0       	brmi	.+14     	; 0x2c48 <__divsf3_pse+0x3a>
    2c3a:	e0 e8       	ldi	r30, 0x80	; 128
    2c3c:	30 d0       	rcall	.+96     	; 0x2c9e <__divsf3_pse+0x90>
    2c3e:	91 50       	subi	r25, 0x01	; 1
    2c40:	50 40       	sbci	r21, 0x00	; 0
    2c42:	e6 95       	lsr	r30
    2c44:	00 1c       	adc	r0, r0
    2c46:	ca f7       	brpl	.-14     	; 0x2c3a <__divsf3_pse+0x2c>
    2c48:	29 d0       	rcall	.+82     	; 0x2c9c <__divsf3_pse+0x8e>
    2c4a:	fe 2f       	mov	r31, r30
    2c4c:	27 d0       	rcall	.+78     	; 0x2c9c <__divsf3_pse+0x8e>
    2c4e:	66 0f       	add	r22, r22
    2c50:	77 1f       	adc	r23, r23
    2c52:	88 1f       	adc	r24, r24
    2c54:	bb 1f       	adc	r27, r27
    2c56:	26 17       	cp	r18, r22
    2c58:	37 07       	cpc	r19, r23
    2c5a:	48 07       	cpc	r20, r24
    2c5c:	ab 07       	cpc	r26, r27
    2c5e:	b0 e8       	ldi	r27, 0x80	; 128
    2c60:	09 f0       	breq	.+2      	; 0x2c64 <__divsf3_pse+0x56>
    2c62:	bb 0b       	sbc	r27, r27
    2c64:	80 2d       	mov	r24, r0
    2c66:	bf 01       	movw	r22, r30
    2c68:	ff 27       	eor	r31, r31
    2c6a:	93 58       	subi	r25, 0x83	; 131
    2c6c:	5f 4f       	sbci	r21, 0xFF	; 255
    2c6e:	2a f0       	brmi	.+10     	; 0x2c7a <__divsf3_pse+0x6c>
    2c70:	9e 3f       	cpi	r25, 0xFE	; 254
    2c72:	51 05       	cpc	r21, r1
    2c74:	68 f0       	brcs	.+26     	; 0x2c90 <__divsf3_pse+0x82>
    2c76:	e7 c0       	rjmp	.+462    	; 0x2e46 <__fp_inf>
    2c78:	8f c1       	rjmp	.+798    	; 0x2f98 <__fp_szero>
    2c7a:	5f 3f       	cpi	r21, 0xFF	; 255
    2c7c:	ec f3       	brlt	.-6      	; 0x2c78 <__divsf3_pse+0x6a>
    2c7e:	98 3e       	cpi	r25, 0xE8	; 232
    2c80:	dc f3       	brlt	.-10     	; 0x2c78 <__divsf3_pse+0x6a>
    2c82:	86 95       	lsr	r24
    2c84:	77 95       	ror	r23
    2c86:	67 95       	ror	r22
    2c88:	b7 95       	ror	r27
    2c8a:	f7 95       	ror	r31
    2c8c:	9f 5f       	subi	r25, 0xFF	; 255
    2c8e:	c9 f7       	brne	.-14     	; 0x2c82 <__divsf3_pse+0x74>
    2c90:	88 0f       	add	r24, r24
    2c92:	91 1d       	adc	r25, r1
    2c94:	96 95       	lsr	r25
    2c96:	87 95       	ror	r24
    2c98:	97 f9       	bld	r25, 7
    2c9a:	08 95       	ret
    2c9c:	e1 e0       	ldi	r30, 0x01	; 1
    2c9e:	66 0f       	add	r22, r22
    2ca0:	77 1f       	adc	r23, r23
    2ca2:	88 1f       	adc	r24, r24
    2ca4:	bb 1f       	adc	r27, r27
    2ca6:	62 17       	cp	r22, r18
    2ca8:	73 07       	cpc	r23, r19
    2caa:	84 07       	cpc	r24, r20
    2cac:	ba 07       	cpc	r27, r26
    2cae:	20 f0       	brcs	.+8      	; 0x2cb8 <__divsf3_pse+0xaa>
    2cb0:	62 1b       	sub	r22, r18
    2cb2:	73 0b       	sbc	r23, r19
    2cb4:	84 0b       	sbc	r24, r20
    2cb6:	ba 0b       	sbc	r27, r26
    2cb8:	ee 1f       	adc	r30, r30
    2cba:	88 f7       	brcc	.-30     	; 0x2c9e <__divsf3_pse+0x90>
    2cbc:	e0 95       	com	r30
    2cbe:	08 95       	ret
    2cc0:	19 f4       	brne	.+6      	; 0x2cc8 <__divsf3_pse+0xba>
    2cc2:	0e f0       	brts	.+2      	; 0x2cc6 <__divsf3_pse+0xb8>
    2cc4:	c0 c0       	rjmp	.+384    	; 0x2e46 <__fp_inf>
    2cc6:	67 c1       	rjmp	.+718    	; 0x2f96 <__fp_zero>
    2cc8:	c4 c0       	rjmp	.+392    	; 0x2e52 <__fp_nan>

00002cca <exp>:
    2cca:	4b d1       	rcall	.+662    	; 0x2f62 <__fp_splitA>
    2ccc:	c8 f3       	brcs	.-14     	; 0x2cc0 <__divsf3_pse+0xb2>
    2cce:	96 38       	cpi	r25, 0x86	; 134
    2cd0:	c0 f7       	brcc	.-16     	; 0x2cc2 <__divsf3_pse+0xb4>
    2cd2:	07 f8       	bld	r0, 7
    2cd4:	0f 92       	push	r0
    2cd6:	e8 94       	clt
    2cd8:	2b e3       	ldi	r18, 0x3B	; 59
    2cda:	3a ea       	ldi	r19, 0xAA	; 170
    2cdc:	48 eb       	ldi	r20, 0xB8	; 184
    2cde:	5f e7       	ldi	r21, 0x7F	; 127
    2ce0:	28 d2       	rcall	.+1104   	; 0x3132 <__mulsf3_pse>
    2ce2:	0f 92       	push	r0
    2ce4:	0f 92       	push	r0
    2ce6:	0f 92       	push	r0
    2ce8:	4d b7       	in	r20, 0x3d	; 61
    2cea:	5e b7       	in	r21, 0x3e	; 62
    2cec:	0f 92       	push	r0
    2cee:	e0 d1       	rcall	.+960    	; 0x30b0 <modf>
    2cf0:	ed e2       	ldi	r30, 0x2D	; 45
    2cf2:	f2 e0       	ldi	r31, 0x02	; 2
    2cf4:	b1 d0       	rcall	.+354    	; 0x2e58 <__fp_powser>
    2cf6:	4f 91       	pop	r20
    2cf8:	5f 91       	pop	r21
    2cfa:	ef 91       	pop	r30
    2cfc:	ff 91       	pop	r31
    2cfe:	e5 95       	asr	r30
    2d00:	ee 1f       	adc	r30, r30
    2d02:	ff 1f       	adc	r31, r31
    2d04:	49 f0       	breq	.+18     	; 0x2d18 <exp+0x4e>
    2d06:	fe 57       	subi	r31, 0x7E	; 126
    2d08:	e0 68       	ori	r30, 0x80	; 128
    2d0a:	44 27       	eor	r20, r20
    2d0c:	ee 0f       	add	r30, r30
    2d0e:	44 1f       	adc	r20, r20
    2d10:	fa 95       	dec	r31
    2d12:	e1 f7       	brne	.-8      	; 0x2d0c <exp+0x42>
    2d14:	41 95       	neg	r20
    2d16:	55 0b       	sbc	r21, r21
    2d18:	52 d1       	rcall	.+676    	; 0x2fbe <ldexp>
    2d1a:	0f 90       	pop	r0
    2d1c:	07 fe       	sbrs	r0, 7
    2d1e:	46 c1       	rjmp	.+652    	; 0x2fac <inverse>
    2d20:	08 95       	ret

00002d22 <__fixsfsi>:
    2d22:	04 d0       	rcall	.+8      	; 0x2d2c <__fixunssfsi>
    2d24:	68 94       	set
    2d26:	b1 11       	cpse	r27, r1
    2d28:	37 c1       	rjmp	.+622    	; 0x2f98 <__fp_szero>
    2d2a:	08 95       	ret

00002d2c <__fixunssfsi>:
    2d2c:	1a d1       	rcall	.+564    	; 0x2f62 <__fp_splitA>
    2d2e:	88 f0       	brcs	.+34     	; 0x2d52 <__fixunssfsi+0x26>
    2d30:	9f 57       	subi	r25, 0x7F	; 127
    2d32:	90 f0       	brcs	.+36     	; 0x2d58 <__fixunssfsi+0x2c>
    2d34:	b9 2f       	mov	r27, r25
    2d36:	99 27       	eor	r25, r25
    2d38:	b7 51       	subi	r27, 0x17	; 23
    2d3a:	a0 f0       	brcs	.+40     	; 0x2d64 <__fixunssfsi+0x38>
    2d3c:	d1 f0       	breq	.+52     	; 0x2d72 <__fixunssfsi+0x46>
    2d3e:	66 0f       	add	r22, r22
    2d40:	77 1f       	adc	r23, r23
    2d42:	88 1f       	adc	r24, r24
    2d44:	99 1f       	adc	r25, r25
    2d46:	1a f0       	brmi	.+6      	; 0x2d4e <__fixunssfsi+0x22>
    2d48:	ba 95       	dec	r27
    2d4a:	c9 f7       	brne	.-14     	; 0x2d3e <__fixunssfsi+0x12>
    2d4c:	12 c0       	rjmp	.+36     	; 0x2d72 <__fixunssfsi+0x46>
    2d4e:	b1 30       	cpi	r27, 0x01	; 1
    2d50:	81 f0       	breq	.+32     	; 0x2d72 <__fixunssfsi+0x46>
    2d52:	21 d1       	rcall	.+578    	; 0x2f96 <__fp_zero>
    2d54:	b1 e0       	ldi	r27, 0x01	; 1
    2d56:	08 95       	ret
    2d58:	1e c1       	rjmp	.+572    	; 0x2f96 <__fp_zero>
    2d5a:	67 2f       	mov	r22, r23
    2d5c:	78 2f       	mov	r23, r24
    2d5e:	88 27       	eor	r24, r24
    2d60:	b8 5f       	subi	r27, 0xF8	; 248
    2d62:	39 f0       	breq	.+14     	; 0x2d72 <__fixunssfsi+0x46>
    2d64:	b9 3f       	cpi	r27, 0xF9	; 249
    2d66:	cc f3       	brlt	.-14     	; 0x2d5a <__fixunssfsi+0x2e>
    2d68:	86 95       	lsr	r24
    2d6a:	77 95       	ror	r23
    2d6c:	67 95       	ror	r22
    2d6e:	b3 95       	inc	r27
    2d70:	d9 f7       	brne	.-10     	; 0x2d68 <__fixunssfsi+0x3c>
    2d72:	3e f4       	brtc	.+14     	; 0x2d82 <__fixunssfsi+0x56>
    2d74:	90 95       	com	r25
    2d76:	80 95       	com	r24
    2d78:	70 95       	com	r23
    2d7a:	61 95       	neg	r22
    2d7c:	7f 4f       	sbci	r23, 0xFF	; 255
    2d7e:	8f 4f       	sbci	r24, 0xFF	; 255
    2d80:	9f 4f       	sbci	r25, 0xFF	; 255
    2d82:	08 95       	ret

00002d84 <__floatunsisf>:
    2d84:	e8 94       	clt
    2d86:	09 c0       	rjmp	.+18     	; 0x2d9a <__floatsisf+0x12>

00002d88 <__floatsisf>:
    2d88:	97 fb       	bst	r25, 7
    2d8a:	3e f4       	brtc	.+14     	; 0x2d9a <__floatsisf+0x12>
    2d8c:	90 95       	com	r25
    2d8e:	80 95       	com	r24
    2d90:	70 95       	com	r23
    2d92:	61 95       	neg	r22
    2d94:	7f 4f       	sbci	r23, 0xFF	; 255
    2d96:	8f 4f       	sbci	r24, 0xFF	; 255
    2d98:	9f 4f       	sbci	r25, 0xFF	; 255
    2d9a:	99 23       	and	r25, r25
    2d9c:	a9 f0       	breq	.+42     	; 0x2dc8 <__floatsisf+0x40>
    2d9e:	f9 2f       	mov	r31, r25
    2da0:	96 e9       	ldi	r25, 0x96	; 150
    2da2:	bb 27       	eor	r27, r27
    2da4:	93 95       	inc	r25
    2da6:	f6 95       	lsr	r31
    2da8:	87 95       	ror	r24
    2daa:	77 95       	ror	r23
    2dac:	67 95       	ror	r22
    2dae:	b7 95       	ror	r27
    2db0:	f1 11       	cpse	r31, r1
    2db2:	f8 cf       	rjmp	.-16     	; 0x2da4 <__floatsisf+0x1c>
    2db4:	fa f4       	brpl	.+62     	; 0x2df4 <__floatsisf+0x6c>
    2db6:	bb 0f       	add	r27, r27
    2db8:	11 f4       	brne	.+4      	; 0x2dbe <__floatsisf+0x36>
    2dba:	60 ff       	sbrs	r22, 0
    2dbc:	1b c0       	rjmp	.+54     	; 0x2df4 <__floatsisf+0x6c>
    2dbe:	6f 5f       	subi	r22, 0xFF	; 255
    2dc0:	7f 4f       	sbci	r23, 0xFF	; 255
    2dc2:	8f 4f       	sbci	r24, 0xFF	; 255
    2dc4:	9f 4f       	sbci	r25, 0xFF	; 255
    2dc6:	16 c0       	rjmp	.+44     	; 0x2df4 <__floatsisf+0x6c>
    2dc8:	88 23       	and	r24, r24
    2dca:	11 f0       	breq	.+4      	; 0x2dd0 <__floatsisf+0x48>
    2dcc:	96 e9       	ldi	r25, 0x96	; 150
    2dce:	11 c0       	rjmp	.+34     	; 0x2df2 <__floatsisf+0x6a>
    2dd0:	77 23       	and	r23, r23
    2dd2:	21 f0       	breq	.+8      	; 0x2ddc <__floatsisf+0x54>
    2dd4:	9e e8       	ldi	r25, 0x8E	; 142
    2dd6:	87 2f       	mov	r24, r23
    2dd8:	76 2f       	mov	r23, r22
    2dda:	05 c0       	rjmp	.+10     	; 0x2de6 <__floatsisf+0x5e>
    2ddc:	66 23       	and	r22, r22
    2dde:	71 f0       	breq	.+28     	; 0x2dfc <__floatsisf+0x74>
    2de0:	96 e8       	ldi	r25, 0x86	; 134
    2de2:	86 2f       	mov	r24, r22
    2de4:	70 e0       	ldi	r23, 0x00	; 0
    2de6:	60 e0       	ldi	r22, 0x00	; 0
    2de8:	2a f0       	brmi	.+10     	; 0x2df4 <__floatsisf+0x6c>
    2dea:	9a 95       	dec	r25
    2dec:	66 0f       	add	r22, r22
    2dee:	77 1f       	adc	r23, r23
    2df0:	88 1f       	adc	r24, r24
    2df2:	da f7       	brpl	.-10     	; 0x2dea <__floatsisf+0x62>
    2df4:	88 0f       	add	r24, r24
    2df6:	96 95       	lsr	r25
    2df8:	87 95       	ror	r24
    2dfa:	97 f9       	bld	r25, 7
    2dfc:	08 95       	ret

00002dfe <__fp_cmp>:
    2dfe:	99 0f       	add	r25, r25
    2e00:	00 08       	sbc	r0, r0
    2e02:	55 0f       	add	r21, r21
    2e04:	aa 0b       	sbc	r26, r26
    2e06:	e0 e8       	ldi	r30, 0x80	; 128
    2e08:	fe ef       	ldi	r31, 0xFE	; 254
    2e0a:	16 16       	cp	r1, r22
    2e0c:	17 06       	cpc	r1, r23
    2e0e:	e8 07       	cpc	r30, r24
    2e10:	f9 07       	cpc	r31, r25
    2e12:	c0 f0       	brcs	.+48     	; 0x2e44 <__fp_cmp+0x46>
    2e14:	12 16       	cp	r1, r18
    2e16:	13 06       	cpc	r1, r19
    2e18:	e4 07       	cpc	r30, r20
    2e1a:	f5 07       	cpc	r31, r21
    2e1c:	98 f0       	brcs	.+38     	; 0x2e44 <__fp_cmp+0x46>
    2e1e:	62 1b       	sub	r22, r18
    2e20:	73 0b       	sbc	r23, r19
    2e22:	84 0b       	sbc	r24, r20
    2e24:	95 0b       	sbc	r25, r21
    2e26:	39 f4       	brne	.+14     	; 0x2e36 <__fp_cmp+0x38>
    2e28:	0a 26       	eor	r0, r26
    2e2a:	61 f0       	breq	.+24     	; 0x2e44 <__fp_cmp+0x46>
    2e2c:	23 2b       	or	r18, r19
    2e2e:	24 2b       	or	r18, r20
    2e30:	25 2b       	or	r18, r21
    2e32:	21 f4       	brne	.+8      	; 0x2e3c <__fp_cmp+0x3e>
    2e34:	08 95       	ret
    2e36:	0a 26       	eor	r0, r26
    2e38:	09 f4       	brne	.+2      	; 0x2e3c <__fp_cmp+0x3e>
    2e3a:	a1 40       	sbci	r26, 0x01	; 1
    2e3c:	a6 95       	lsr	r26
    2e3e:	8f ef       	ldi	r24, 0xFF	; 255
    2e40:	81 1d       	adc	r24, r1
    2e42:	81 1d       	adc	r24, r1
    2e44:	08 95       	ret

00002e46 <__fp_inf>:
    2e46:	97 f9       	bld	r25, 7
    2e48:	9f 67       	ori	r25, 0x7F	; 127
    2e4a:	80 e8       	ldi	r24, 0x80	; 128
    2e4c:	70 e0       	ldi	r23, 0x00	; 0
    2e4e:	60 e0       	ldi	r22, 0x00	; 0
    2e50:	08 95       	ret

00002e52 <__fp_nan>:
    2e52:	9f ef       	ldi	r25, 0xFF	; 255
    2e54:	80 ec       	ldi	r24, 0xC0	; 192
    2e56:	08 95       	ret

00002e58 <__fp_powser>:
    2e58:	df 93       	push	r29
    2e5a:	cf 93       	push	r28
    2e5c:	1f 93       	push	r17
    2e5e:	0f 93       	push	r16
    2e60:	ff 92       	push	r15
    2e62:	ef 92       	push	r14
    2e64:	df 92       	push	r13
    2e66:	7b 01       	movw	r14, r22
    2e68:	8c 01       	movw	r16, r24
    2e6a:	68 94       	set
    2e6c:	05 c0       	rjmp	.+10     	; 0x2e78 <__fp_powser+0x20>
    2e6e:	da 2e       	mov	r13, r26
    2e70:	ef 01       	movw	r28, r30
    2e72:	5d d1       	rcall	.+698    	; 0x312e <__mulsf3x>
    2e74:	fe 01       	movw	r30, r28
    2e76:	e8 94       	clt
    2e78:	a5 91       	lpm	r26, Z+
    2e7a:	25 91       	lpm	r18, Z+
    2e7c:	35 91       	lpm	r19, Z+
    2e7e:	45 91       	lpm	r20, Z+
    2e80:	55 91       	lpm	r21, Z+
    2e82:	ae f3       	brts	.-22     	; 0x2e6e <__fp_powser+0x16>
    2e84:	ef 01       	movw	r28, r30
    2e86:	f8 dd       	rcall	.-1040   	; 0x2a78 <__addsf3x>
    2e88:	fe 01       	movw	r30, r28
    2e8a:	97 01       	movw	r18, r14
    2e8c:	a8 01       	movw	r20, r16
    2e8e:	da 94       	dec	r13
    2e90:	79 f7       	brne	.-34     	; 0x2e70 <__fp_powser+0x18>
    2e92:	df 90       	pop	r13
    2e94:	ef 90       	pop	r14
    2e96:	ff 90       	pop	r15
    2e98:	0f 91       	pop	r16
    2e9a:	1f 91       	pop	r17
    2e9c:	cf 91       	pop	r28
    2e9e:	df 91       	pop	r29
    2ea0:	08 95       	ret

00002ea2 <__fp_pscA>:
    2ea2:	00 24       	eor	r0, r0
    2ea4:	0a 94       	dec	r0
    2ea6:	16 16       	cp	r1, r22
    2ea8:	17 06       	cpc	r1, r23
    2eaa:	18 06       	cpc	r1, r24
    2eac:	09 06       	cpc	r0, r25
    2eae:	08 95       	ret

00002eb0 <__fp_pscB>:
    2eb0:	00 24       	eor	r0, r0
    2eb2:	0a 94       	dec	r0
    2eb4:	12 16       	cp	r1, r18
    2eb6:	13 06       	cpc	r1, r19
    2eb8:	14 06       	cpc	r1, r20
    2eba:	05 06       	cpc	r0, r21
    2ebc:	08 95       	ret
    2ebe:	c9 cf       	rjmp	.-110    	; 0x2e52 <__fp_nan>

00002ec0 <__fp_rempio2>:
    2ec0:	50 d0       	rcall	.+160    	; 0x2f62 <__fp_splitA>
    2ec2:	e8 f3       	brcs	.-6      	; 0x2ebe <__fp_pscB+0xe>
    2ec4:	e8 94       	clt
    2ec6:	e0 e0       	ldi	r30, 0x00	; 0
    2ec8:	bb 27       	eor	r27, r27
    2eca:	9f 57       	subi	r25, 0x7F	; 127
    2ecc:	f0 f0       	brcs	.+60     	; 0x2f0a <__fp_rempio2+0x4a>
    2ece:	2a ed       	ldi	r18, 0xDA	; 218
    2ed0:	3f e0       	ldi	r19, 0x0F	; 15
    2ed2:	49 ec       	ldi	r20, 0xC9	; 201
    2ed4:	06 c0       	rjmp	.+12     	; 0x2ee2 <__fp_rempio2+0x22>
    2ed6:	ee 0f       	add	r30, r30
    2ed8:	bb 0f       	add	r27, r27
    2eda:	66 1f       	adc	r22, r22
    2edc:	77 1f       	adc	r23, r23
    2ede:	88 1f       	adc	r24, r24
    2ee0:	28 f0       	brcs	.+10     	; 0x2eec <__fp_rempio2+0x2c>
    2ee2:	b2 3a       	cpi	r27, 0xA2	; 162
    2ee4:	62 07       	cpc	r22, r18
    2ee6:	73 07       	cpc	r23, r19
    2ee8:	84 07       	cpc	r24, r20
    2eea:	28 f0       	brcs	.+10     	; 0x2ef6 <__fp_rempio2+0x36>
    2eec:	b2 5a       	subi	r27, 0xA2	; 162
    2eee:	62 0b       	sbc	r22, r18
    2ef0:	73 0b       	sbc	r23, r19
    2ef2:	84 0b       	sbc	r24, r20
    2ef4:	e3 95       	inc	r30
    2ef6:	9a 95       	dec	r25
    2ef8:	72 f7       	brpl	.-36     	; 0x2ed6 <__fp_rempio2+0x16>
    2efa:	80 38       	cpi	r24, 0x80	; 128
    2efc:	30 f4       	brcc	.+12     	; 0x2f0a <__fp_rempio2+0x4a>
    2efe:	9a 95       	dec	r25
    2f00:	bb 0f       	add	r27, r27
    2f02:	66 1f       	adc	r22, r22
    2f04:	77 1f       	adc	r23, r23
    2f06:	88 1f       	adc	r24, r24
    2f08:	d2 f7       	brpl	.-12     	; 0x2efe <__fp_rempio2+0x3e>
    2f0a:	90 48       	sbci	r25, 0x80	; 128
    2f0c:	b4 c1       	rjmp	.+872    	; 0x3276 <__fp_mpack_finite>

00002f0e <__fp_round>:
    2f0e:	09 2e       	mov	r0, r25
    2f10:	03 94       	inc	r0
    2f12:	00 0c       	add	r0, r0
    2f14:	11 f4       	brne	.+4      	; 0x2f1a <__fp_round+0xc>
    2f16:	88 23       	and	r24, r24
    2f18:	52 f0       	brmi	.+20     	; 0x2f2e <__fp_round+0x20>
    2f1a:	bb 0f       	add	r27, r27
    2f1c:	40 f4       	brcc	.+16     	; 0x2f2e <__fp_round+0x20>
    2f1e:	bf 2b       	or	r27, r31
    2f20:	11 f4       	brne	.+4      	; 0x2f26 <__fp_round+0x18>
    2f22:	60 ff       	sbrs	r22, 0
    2f24:	04 c0       	rjmp	.+8      	; 0x2f2e <__fp_round+0x20>
    2f26:	6f 5f       	subi	r22, 0xFF	; 255
    2f28:	7f 4f       	sbci	r23, 0xFF	; 255
    2f2a:	8f 4f       	sbci	r24, 0xFF	; 255
    2f2c:	9f 4f       	sbci	r25, 0xFF	; 255
    2f2e:	08 95       	ret

00002f30 <__fp_sinus>:
    2f30:	ef 93       	push	r30
    2f32:	e0 ff       	sbrs	r30, 0
    2f34:	06 c0       	rjmp	.+12     	; 0x2f42 <__fp_sinus+0x12>
    2f36:	a2 ea       	ldi	r26, 0xA2	; 162
    2f38:	2a ed       	ldi	r18, 0xDA	; 218
    2f3a:	3f e0       	ldi	r19, 0x0F	; 15
    2f3c:	49 ec       	ldi	r20, 0xC9	; 201
    2f3e:	5f eb       	ldi	r21, 0xBF	; 191
    2f40:	9b dd       	rcall	.-1226   	; 0x2a78 <__addsf3x>
    2f42:	e5 df       	rcall	.-54     	; 0x2f0e <__fp_round>
    2f44:	0f 90       	pop	r0
    2f46:	03 94       	inc	r0
    2f48:	01 fc       	sbrc	r0, 1
    2f4a:	90 58       	subi	r25, 0x80	; 128
    2f4c:	e5 e5       	ldi	r30, 0x55	; 85
    2f4e:	f2 e0       	ldi	r31, 0x02	; 2
    2f50:	a5 c1       	rjmp	.+842    	; 0x329c <__fp_powsodd>

00002f52 <__fp_split3>:
    2f52:	57 fd       	sbrc	r21, 7
    2f54:	90 58       	subi	r25, 0x80	; 128
    2f56:	44 0f       	add	r20, r20
    2f58:	55 1f       	adc	r21, r21
    2f5a:	59 f0       	breq	.+22     	; 0x2f72 <__fp_splitA+0x10>
    2f5c:	5f 3f       	cpi	r21, 0xFF	; 255
    2f5e:	71 f0       	breq	.+28     	; 0x2f7c <__fp_splitA+0x1a>
    2f60:	47 95       	ror	r20

00002f62 <__fp_splitA>:
    2f62:	88 0f       	add	r24, r24
    2f64:	97 fb       	bst	r25, 7
    2f66:	99 1f       	adc	r25, r25
    2f68:	61 f0       	breq	.+24     	; 0x2f82 <__fp_splitA+0x20>
    2f6a:	9f 3f       	cpi	r25, 0xFF	; 255
    2f6c:	79 f0       	breq	.+30     	; 0x2f8c <__fp_splitA+0x2a>
    2f6e:	87 95       	ror	r24
    2f70:	08 95       	ret
    2f72:	12 16       	cp	r1, r18
    2f74:	13 06       	cpc	r1, r19
    2f76:	14 06       	cpc	r1, r20
    2f78:	55 1f       	adc	r21, r21
    2f7a:	f2 cf       	rjmp	.-28     	; 0x2f60 <__fp_split3+0xe>
    2f7c:	46 95       	lsr	r20
    2f7e:	f1 df       	rcall	.-30     	; 0x2f62 <__fp_splitA>
    2f80:	08 c0       	rjmp	.+16     	; 0x2f92 <__fp_splitA+0x30>
    2f82:	16 16       	cp	r1, r22
    2f84:	17 06       	cpc	r1, r23
    2f86:	18 06       	cpc	r1, r24
    2f88:	99 1f       	adc	r25, r25
    2f8a:	f1 cf       	rjmp	.-30     	; 0x2f6e <__fp_splitA+0xc>
    2f8c:	86 95       	lsr	r24
    2f8e:	71 05       	cpc	r23, r1
    2f90:	61 05       	cpc	r22, r1
    2f92:	08 94       	sec
    2f94:	08 95       	ret

00002f96 <__fp_zero>:
    2f96:	e8 94       	clt

00002f98 <__fp_szero>:
    2f98:	bb 27       	eor	r27, r27
    2f9a:	66 27       	eor	r22, r22
    2f9c:	77 27       	eor	r23, r23
    2f9e:	cb 01       	movw	r24, r22
    2fa0:	97 f9       	bld	r25, 7
    2fa2:	08 95       	ret

00002fa4 <__gesf2>:
    2fa4:	2c df       	rcall	.-424    	; 0x2dfe <__fp_cmp>
    2fa6:	08 f4       	brcc	.+2      	; 0x2faa <__gesf2+0x6>
    2fa8:	8f ef       	ldi	r24, 0xFF	; 255
    2faa:	08 95       	ret

00002fac <inverse>:
    2fac:	9b 01       	movw	r18, r22
    2fae:	ac 01       	movw	r20, r24
    2fb0:	60 e0       	ldi	r22, 0x00	; 0
    2fb2:	70 e0       	ldi	r23, 0x00	; 0
    2fb4:	80 e8       	ldi	r24, 0x80	; 128
    2fb6:	9f e3       	ldi	r25, 0x3F	; 63
    2fb8:	1b ce       	rjmp	.-970    	; 0x2bf0 <__divsf3>
    2fba:	45 cf       	rjmp	.-374    	; 0x2e46 <__fp_inf>
    2fbc:	5a c1       	rjmp	.+692    	; 0x3272 <__fp_mpack>

00002fbe <ldexp>:
    2fbe:	d1 df       	rcall	.-94     	; 0x2f62 <__fp_splitA>
    2fc0:	e8 f3       	brcs	.-6      	; 0x2fbc <inverse+0x10>
    2fc2:	99 23       	and	r25, r25
    2fc4:	d9 f3       	breq	.-10     	; 0x2fbc <inverse+0x10>
    2fc6:	94 0f       	add	r25, r20
    2fc8:	51 1d       	adc	r21, r1
    2fca:	bb f3       	brvs	.-18     	; 0x2fba <inverse+0xe>
    2fcc:	91 50       	subi	r25, 0x01	; 1
    2fce:	50 40       	sbci	r21, 0x00	; 0
    2fd0:	94 f0       	brlt	.+36     	; 0x2ff6 <ldexp+0x38>
    2fd2:	59 f0       	breq	.+22     	; 0x2fea <ldexp+0x2c>
    2fd4:	88 23       	and	r24, r24
    2fd6:	32 f0       	brmi	.+12     	; 0x2fe4 <ldexp+0x26>
    2fd8:	66 0f       	add	r22, r22
    2fda:	77 1f       	adc	r23, r23
    2fdc:	88 1f       	adc	r24, r24
    2fde:	91 50       	subi	r25, 0x01	; 1
    2fe0:	50 40       	sbci	r21, 0x00	; 0
    2fe2:	c1 f7       	brne	.-16     	; 0x2fd4 <ldexp+0x16>
    2fe4:	9e 3f       	cpi	r25, 0xFE	; 254
    2fe6:	51 05       	cpc	r21, r1
    2fe8:	44 f7       	brge	.-48     	; 0x2fba <inverse+0xe>
    2fea:	88 0f       	add	r24, r24
    2fec:	91 1d       	adc	r25, r1
    2fee:	96 95       	lsr	r25
    2ff0:	87 95       	ror	r24
    2ff2:	97 f9       	bld	r25, 7
    2ff4:	08 95       	ret
    2ff6:	5f 3f       	cpi	r21, 0xFF	; 255
    2ff8:	ac f0       	brlt	.+42     	; 0x3024 <ldexp+0x66>
    2ffa:	98 3e       	cpi	r25, 0xE8	; 232
    2ffc:	9c f0       	brlt	.+38     	; 0x3024 <ldexp+0x66>
    2ffe:	bb 27       	eor	r27, r27
    3000:	86 95       	lsr	r24
    3002:	77 95       	ror	r23
    3004:	67 95       	ror	r22
    3006:	b7 95       	ror	r27
    3008:	08 f4       	brcc	.+2      	; 0x300c <ldexp+0x4e>
    300a:	b1 60       	ori	r27, 0x01	; 1
    300c:	93 95       	inc	r25
    300e:	c1 f7       	brne	.-16     	; 0x3000 <ldexp+0x42>
    3010:	bb 0f       	add	r27, r27
    3012:	58 f7       	brcc	.-42     	; 0x2fea <ldexp+0x2c>
    3014:	11 f4       	brne	.+4      	; 0x301a <ldexp+0x5c>
    3016:	60 ff       	sbrs	r22, 0
    3018:	e8 cf       	rjmp	.-48     	; 0x2fea <ldexp+0x2c>
    301a:	6f 5f       	subi	r22, 0xFF	; 255
    301c:	7f 4f       	sbci	r23, 0xFF	; 255
    301e:	8f 4f       	sbci	r24, 0xFF	; 255
    3020:	9f 4f       	sbci	r25, 0xFF	; 255
    3022:	e3 cf       	rjmp	.-58     	; 0x2fea <ldexp+0x2c>
    3024:	b9 cf       	rjmp	.-142    	; 0x2f98 <__fp_szero>
    3026:	0e f0       	brts	.+2      	; 0x302a <ldexp+0x6c>
    3028:	24 c1       	rjmp	.+584    	; 0x3272 <__fp_mpack>
    302a:	13 cf       	rjmp	.-474    	; 0x2e52 <__fp_nan>
    302c:	68 94       	set
    302e:	0b cf       	rjmp	.-490    	; 0x2e46 <__fp_inf>

00003030 <log>:
    3030:	98 df       	rcall	.-208    	; 0x2f62 <__fp_splitA>
    3032:	c8 f3       	brcs	.-14     	; 0x3026 <ldexp+0x68>
    3034:	99 23       	and	r25, r25
    3036:	d1 f3       	breq	.-12     	; 0x302c <ldexp+0x6e>
    3038:	c6 f3       	brts	.-16     	; 0x302a <ldexp+0x6c>
    303a:	df 93       	push	r29
    303c:	cf 93       	push	r28
    303e:	1f 93       	push	r17
    3040:	0f 93       	push	r16
    3042:	ff 92       	push	r15
    3044:	c9 2f       	mov	r28, r25
    3046:	dd 27       	eor	r29, r29
    3048:	88 23       	and	r24, r24
    304a:	2a f0       	brmi	.+10     	; 0x3056 <log+0x26>
    304c:	21 97       	sbiw	r28, 0x01	; 1
    304e:	66 0f       	add	r22, r22
    3050:	77 1f       	adc	r23, r23
    3052:	88 1f       	adc	r24, r24
    3054:	da f7       	brpl	.-10     	; 0x304c <log+0x1c>
    3056:	20 e0       	ldi	r18, 0x00	; 0
    3058:	30 e0       	ldi	r19, 0x00	; 0
    305a:	40 e8       	ldi	r20, 0x80	; 128
    305c:	5f eb       	ldi	r21, 0xBF	; 191
    305e:	9f e3       	ldi	r25, 0x3F	; 63
    3060:	88 39       	cpi	r24, 0x98	; 152
    3062:	20 f0       	brcs	.+8      	; 0x306c <log+0x3c>
    3064:	80 3e       	cpi	r24, 0xE0	; 224
    3066:	30 f0       	brcs	.+12     	; 0x3074 <log+0x44>
    3068:	21 96       	adiw	r28, 0x01	; 1
    306a:	8f 77       	andi	r24, 0x7F	; 127
    306c:	f4 dc       	rcall	.-1560   	; 0x2a56 <__addsf3>
    306e:	e3 e7       	ldi	r30, 0x73	; 115
    3070:	f2 e0       	ldi	r31, 0x02	; 2
    3072:	03 c0       	rjmp	.+6      	; 0x307a <log+0x4a>
    3074:	f0 dc       	rcall	.-1568   	; 0x2a56 <__addsf3>
    3076:	e0 ea       	ldi	r30, 0xA0	; 160
    3078:	f2 e0       	ldi	r31, 0x02	; 2
    307a:	ee de       	rcall	.-548    	; 0x2e58 <__fp_powser>
    307c:	8b 01       	movw	r16, r22
    307e:	be 01       	movw	r22, r28
    3080:	ec 01       	movw	r28, r24
    3082:	fb 2e       	mov	r15, r27
    3084:	6f 57       	subi	r22, 0x7F	; 127
    3086:	71 09       	sbc	r23, r1
    3088:	75 95       	asr	r23
    308a:	77 1f       	adc	r23, r23
    308c:	88 0b       	sbc	r24, r24
    308e:	99 0b       	sbc	r25, r25
    3090:	7b de       	rcall	.-778    	; 0x2d88 <__floatsisf>
    3092:	28 e1       	ldi	r18, 0x18	; 24
    3094:	32 e7       	ldi	r19, 0x72	; 114
    3096:	41 e3       	ldi	r20, 0x31	; 49
    3098:	5f e3       	ldi	r21, 0x3F	; 63
    309a:	49 d0       	rcall	.+146    	; 0x312e <__mulsf3x>
    309c:	af 2d       	mov	r26, r15
    309e:	98 01       	movw	r18, r16
    30a0:	ae 01       	movw	r20, r28
    30a2:	ff 90       	pop	r15
    30a4:	0f 91       	pop	r16
    30a6:	1f 91       	pop	r17
    30a8:	cf 91       	pop	r28
    30aa:	df 91       	pop	r29
    30ac:	e5 dc       	rcall	.-1590   	; 0x2a78 <__addsf3x>
    30ae:	2f cf       	rjmp	.-418    	; 0x2f0e <__fp_round>

000030b0 <modf>:
    30b0:	fa 01       	movw	r30, r20
    30b2:	dc 01       	movw	r26, r24
    30b4:	aa 0f       	add	r26, r26
    30b6:	bb 1f       	adc	r27, r27
    30b8:	9b 01       	movw	r18, r22
    30ba:	ac 01       	movw	r20, r24
    30bc:	bf 57       	subi	r27, 0x7F	; 127
    30be:	28 f4       	brcc	.+10     	; 0x30ca <modf+0x1a>
    30c0:	22 27       	eor	r18, r18
    30c2:	33 27       	eor	r19, r19
    30c4:	44 27       	eor	r20, r20
    30c6:	50 78       	andi	r21, 0x80	; 128
    30c8:	1f c0       	rjmp	.+62     	; 0x3108 <modf+0x58>
    30ca:	b7 51       	subi	r27, 0x17	; 23
    30cc:	88 f4       	brcc	.+34     	; 0x30f0 <modf+0x40>
    30ce:	ab 2f       	mov	r26, r27
    30d0:	00 24       	eor	r0, r0
    30d2:	46 95       	lsr	r20
    30d4:	37 95       	ror	r19
    30d6:	27 95       	ror	r18
    30d8:	01 1c       	adc	r0, r1
    30da:	a3 95       	inc	r26
    30dc:	d2 f3       	brmi	.-12     	; 0x30d2 <modf+0x22>
    30de:	00 20       	and	r0, r0
    30e0:	69 f0       	breq	.+26     	; 0x30fc <modf+0x4c>
    30e2:	22 0f       	add	r18, r18
    30e4:	33 1f       	adc	r19, r19
    30e6:	44 1f       	adc	r20, r20
    30e8:	b3 95       	inc	r27
    30ea:	da f3       	brmi	.-10     	; 0x30e2 <modf+0x32>
    30ec:	0d d0       	rcall	.+26     	; 0x3108 <modf+0x58>
    30ee:	b2 cc       	rjmp	.-1692   	; 0x2a54 <__subsf3>
    30f0:	61 30       	cpi	r22, 0x01	; 1
    30f2:	71 05       	cpc	r23, r1
    30f4:	a0 e8       	ldi	r26, 0x80	; 128
    30f6:	8a 07       	cpc	r24, r26
    30f8:	b9 46       	sbci	r27, 0x69	; 105
    30fa:	30 f4       	brcc	.+12     	; 0x3108 <modf+0x58>
    30fc:	9b 01       	movw	r18, r22
    30fe:	ac 01       	movw	r20, r24
    3100:	66 27       	eor	r22, r22
    3102:	77 27       	eor	r23, r23
    3104:	88 27       	eor	r24, r24
    3106:	90 78       	andi	r25, 0x80	; 128
    3108:	30 96       	adiw	r30, 0x00	; 0
    310a:	21 f0       	breq	.+8      	; 0x3114 <modf+0x64>
    310c:	20 83       	st	Z, r18
    310e:	31 83       	std	Z+1, r19	; 0x01
    3110:	42 83       	std	Z+2, r20	; 0x02
    3112:	53 83       	std	Z+3, r21	; 0x03
    3114:	08 95       	ret

00003116 <__mulsf3>:
    3116:	0b d0       	rcall	.+22     	; 0x312e <__mulsf3x>
    3118:	fa ce       	rjmp	.-524    	; 0x2f0e <__fp_round>
    311a:	c3 de       	rcall	.-634    	; 0x2ea2 <__fp_pscA>
    311c:	28 f0       	brcs	.+10     	; 0x3128 <__mulsf3+0x12>
    311e:	c8 de       	rcall	.-624    	; 0x2eb0 <__fp_pscB>
    3120:	18 f0       	brcs	.+6      	; 0x3128 <__mulsf3+0x12>
    3122:	95 23       	and	r25, r21
    3124:	09 f0       	breq	.+2      	; 0x3128 <__mulsf3+0x12>
    3126:	8f ce       	rjmp	.-738    	; 0x2e46 <__fp_inf>
    3128:	94 ce       	rjmp	.-728    	; 0x2e52 <__fp_nan>
    312a:	11 24       	eor	r1, r1
    312c:	35 cf       	rjmp	.-406    	; 0x2f98 <__fp_szero>

0000312e <__mulsf3x>:
    312e:	11 df       	rcall	.-478    	; 0x2f52 <__fp_split3>
    3130:	a0 f3       	brcs	.-24     	; 0x311a <__mulsf3+0x4>

00003132 <__mulsf3_pse>:
    3132:	95 9f       	mul	r25, r21
    3134:	d1 f3       	breq	.-12     	; 0x312a <__mulsf3+0x14>
    3136:	95 0f       	add	r25, r21
    3138:	50 e0       	ldi	r21, 0x00	; 0
    313a:	55 1f       	adc	r21, r21
    313c:	62 9f       	mul	r22, r18
    313e:	f0 01       	movw	r30, r0
    3140:	72 9f       	mul	r23, r18
    3142:	bb 27       	eor	r27, r27
    3144:	f0 0d       	add	r31, r0
    3146:	b1 1d       	adc	r27, r1
    3148:	63 9f       	mul	r22, r19
    314a:	aa 27       	eor	r26, r26
    314c:	f0 0d       	add	r31, r0
    314e:	b1 1d       	adc	r27, r1
    3150:	aa 1f       	adc	r26, r26
    3152:	64 9f       	mul	r22, r20
    3154:	66 27       	eor	r22, r22
    3156:	b0 0d       	add	r27, r0
    3158:	a1 1d       	adc	r26, r1
    315a:	66 1f       	adc	r22, r22
    315c:	82 9f       	mul	r24, r18
    315e:	22 27       	eor	r18, r18
    3160:	b0 0d       	add	r27, r0
    3162:	a1 1d       	adc	r26, r1
    3164:	62 1f       	adc	r22, r18
    3166:	73 9f       	mul	r23, r19
    3168:	b0 0d       	add	r27, r0
    316a:	a1 1d       	adc	r26, r1
    316c:	62 1f       	adc	r22, r18
    316e:	83 9f       	mul	r24, r19
    3170:	a0 0d       	add	r26, r0
    3172:	61 1d       	adc	r22, r1
    3174:	22 1f       	adc	r18, r18
    3176:	74 9f       	mul	r23, r20
    3178:	33 27       	eor	r19, r19
    317a:	a0 0d       	add	r26, r0
    317c:	61 1d       	adc	r22, r1
    317e:	23 1f       	adc	r18, r19
    3180:	84 9f       	mul	r24, r20
    3182:	60 0d       	add	r22, r0
    3184:	21 1d       	adc	r18, r1
    3186:	82 2f       	mov	r24, r18
    3188:	76 2f       	mov	r23, r22
    318a:	6a 2f       	mov	r22, r26
    318c:	11 24       	eor	r1, r1
    318e:	9f 57       	subi	r25, 0x7F	; 127
    3190:	50 40       	sbci	r21, 0x00	; 0
    3192:	8a f0       	brmi	.+34     	; 0x31b6 <__mulsf3_pse+0x84>
    3194:	e1 f0       	breq	.+56     	; 0x31ce <__mulsf3_pse+0x9c>
    3196:	88 23       	and	r24, r24
    3198:	4a f0       	brmi	.+18     	; 0x31ac <__mulsf3_pse+0x7a>
    319a:	ee 0f       	add	r30, r30
    319c:	ff 1f       	adc	r31, r31
    319e:	bb 1f       	adc	r27, r27
    31a0:	66 1f       	adc	r22, r22
    31a2:	77 1f       	adc	r23, r23
    31a4:	88 1f       	adc	r24, r24
    31a6:	91 50       	subi	r25, 0x01	; 1
    31a8:	50 40       	sbci	r21, 0x00	; 0
    31aa:	a9 f7       	brne	.-22     	; 0x3196 <__mulsf3_pse+0x64>
    31ac:	9e 3f       	cpi	r25, 0xFE	; 254
    31ae:	51 05       	cpc	r21, r1
    31b0:	70 f0       	brcs	.+28     	; 0x31ce <__mulsf3_pse+0x9c>
    31b2:	49 ce       	rjmp	.-878    	; 0x2e46 <__fp_inf>
    31b4:	f1 ce       	rjmp	.-542    	; 0x2f98 <__fp_szero>
    31b6:	5f 3f       	cpi	r21, 0xFF	; 255
    31b8:	ec f3       	brlt	.-6      	; 0x31b4 <__mulsf3_pse+0x82>
    31ba:	98 3e       	cpi	r25, 0xE8	; 232
    31bc:	dc f3       	brlt	.-10     	; 0x31b4 <__mulsf3_pse+0x82>
    31be:	86 95       	lsr	r24
    31c0:	77 95       	ror	r23
    31c2:	67 95       	ror	r22
    31c4:	b7 95       	ror	r27
    31c6:	f7 95       	ror	r31
    31c8:	e7 95       	ror	r30
    31ca:	9f 5f       	subi	r25, 0xFF	; 255
    31cc:	c1 f7       	brne	.-16     	; 0x31be <__mulsf3_pse+0x8c>
    31ce:	fe 2b       	or	r31, r30
    31d0:	88 0f       	add	r24, r24
    31d2:	91 1d       	adc	r25, r1
    31d4:	96 95       	lsr	r25
    31d6:	87 95       	ror	r24
    31d8:	97 f9       	bld	r25, 7
    31da:	08 95       	ret

000031dc <sin>:
    31dc:	9f 93       	push	r25
    31de:	70 de       	rcall	.-800    	; 0x2ec0 <__fp_rempio2>
    31e0:	0f 90       	pop	r0
    31e2:	07 fc       	sbrc	r0, 7
    31e4:	ee 5f       	subi	r30, 0xFE	; 254
    31e6:	a4 ce       	rjmp	.-696    	; 0x2f30 <__fp_sinus>
    31e8:	11 f4       	brne	.+4      	; 0x31ee <sin+0x12>
    31ea:	0e f4       	brtc	.+2      	; 0x31ee <sin+0x12>
    31ec:	32 ce       	rjmp	.-924    	; 0x2e52 <__fp_nan>
    31ee:	41 c0       	rjmp	.+130    	; 0x3272 <__fp_mpack>

000031f0 <sqrt>:
    31f0:	b8 de       	rcall	.-656    	; 0x2f62 <__fp_splitA>
    31f2:	d0 f3       	brcs	.-12     	; 0x31e8 <sin+0xc>
    31f4:	99 23       	and	r25, r25
    31f6:	d9 f3       	breq	.-10     	; 0x31ee <sin+0x12>
    31f8:	ce f3       	brts	.-14     	; 0x31ec <sin+0x10>
    31fa:	9f 57       	subi	r25, 0x7F	; 127
    31fc:	55 0b       	sbc	r21, r21
    31fe:	87 ff       	sbrs	r24, 7
    3200:	46 d0       	rcall	.+140    	; 0x328e <__fp_norm2>
    3202:	00 24       	eor	r0, r0
    3204:	a0 e6       	ldi	r26, 0x60	; 96
    3206:	40 ea       	ldi	r20, 0xA0	; 160
    3208:	90 01       	movw	r18, r0
    320a:	80 58       	subi	r24, 0x80	; 128
    320c:	56 95       	lsr	r21
    320e:	97 95       	ror	r25
    3210:	28 f4       	brcc	.+10     	; 0x321c <sqrt+0x2c>
    3212:	80 5c       	subi	r24, 0xC0	; 192
    3214:	66 0f       	add	r22, r22
    3216:	77 1f       	adc	r23, r23
    3218:	88 1f       	adc	r24, r24
    321a:	20 f0       	brcs	.+8      	; 0x3224 <sqrt+0x34>
    321c:	26 17       	cp	r18, r22
    321e:	37 07       	cpc	r19, r23
    3220:	48 07       	cpc	r20, r24
    3222:	30 f4       	brcc	.+12     	; 0x3230 <sqrt+0x40>
    3224:	62 1b       	sub	r22, r18
    3226:	73 0b       	sbc	r23, r19
    3228:	84 0b       	sbc	r24, r20
    322a:	20 29       	or	r18, r0
    322c:	31 29       	or	r19, r1
    322e:	4a 2b       	or	r20, r26
    3230:	a6 95       	lsr	r26
    3232:	17 94       	ror	r1
    3234:	07 94       	ror	r0
    3236:	20 25       	eor	r18, r0
    3238:	31 25       	eor	r19, r1
    323a:	4a 27       	eor	r20, r26
    323c:	58 f7       	brcc	.-42     	; 0x3214 <sqrt+0x24>
    323e:	66 0f       	add	r22, r22
    3240:	77 1f       	adc	r23, r23
    3242:	88 1f       	adc	r24, r24
    3244:	20 f0       	brcs	.+8      	; 0x324e <sqrt+0x5e>
    3246:	26 17       	cp	r18, r22
    3248:	37 07       	cpc	r19, r23
    324a:	48 07       	cpc	r20, r24
    324c:	30 f4       	brcc	.+12     	; 0x325a <sqrt+0x6a>
    324e:	62 0b       	sbc	r22, r18
    3250:	73 0b       	sbc	r23, r19
    3252:	84 0b       	sbc	r24, r20
    3254:	20 0d       	add	r18, r0
    3256:	31 1d       	adc	r19, r1
    3258:	41 1d       	adc	r20, r1
    325a:	a0 95       	com	r26
    325c:	81 f7       	brne	.-32     	; 0x323e <sqrt+0x4e>
    325e:	b9 01       	movw	r22, r18
    3260:	84 2f       	mov	r24, r20
    3262:	91 58       	subi	r25, 0x81	; 129
    3264:	88 0f       	add	r24, r24
    3266:	96 95       	lsr	r25
    3268:	87 95       	ror	r24
    326a:	08 95       	ret

0000326c <square>:
    326c:	9b 01       	movw	r18, r22
    326e:	ac 01       	movw	r20, r24
    3270:	52 cf       	rjmp	.-348    	; 0x3116 <__mulsf3>

00003272 <__fp_mpack>:
    3272:	9f 3f       	cpi	r25, 0xFF	; 255
    3274:	31 f0       	breq	.+12     	; 0x3282 <__fp_mpack_finite+0xc>

00003276 <__fp_mpack_finite>:
    3276:	91 50       	subi	r25, 0x01	; 1
    3278:	20 f4       	brcc	.+8      	; 0x3282 <__fp_mpack_finite+0xc>
    327a:	87 95       	ror	r24
    327c:	77 95       	ror	r23
    327e:	67 95       	ror	r22
    3280:	b7 95       	ror	r27
    3282:	88 0f       	add	r24, r24
    3284:	91 1d       	adc	r25, r1
    3286:	96 95       	lsr	r25
    3288:	87 95       	ror	r24
    328a:	97 f9       	bld	r25, 7
    328c:	08 95       	ret

0000328e <__fp_norm2>:
    328e:	91 50       	subi	r25, 0x01	; 1
    3290:	50 40       	sbci	r21, 0x00	; 0
    3292:	66 0f       	add	r22, r22
    3294:	77 1f       	adc	r23, r23
    3296:	88 1f       	adc	r24, r24
    3298:	d2 f7       	brpl	.-12     	; 0x328e <__fp_norm2>
    329a:	08 95       	ret

0000329c <__fp_powsodd>:
    329c:	9f 93       	push	r25
    329e:	8f 93       	push	r24
    32a0:	7f 93       	push	r23
    32a2:	6f 93       	push	r22
    32a4:	ff 93       	push	r31
    32a6:	ef 93       	push	r30
    32a8:	9b 01       	movw	r18, r22
    32aa:	ac 01       	movw	r20, r24
    32ac:	34 df       	rcall	.-408    	; 0x3116 <__mulsf3>
    32ae:	ef 91       	pop	r30
    32b0:	ff 91       	pop	r31
    32b2:	d2 dd       	rcall	.-1116   	; 0x2e58 <__fp_powser>
    32b4:	2f 91       	pop	r18
    32b6:	3f 91       	pop	r19
    32b8:	4f 91       	pop	r20
    32ba:	5f 91       	pop	r21
    32bc:	2c cf       	rjmp	.-424    	; 0x3116 <__mulsf3>

000032be <__divmodhi4>:
    32be:	97 fb       	bst	r25, 7
    32c0:	07 2e       	mov	r0, r23
    32c2:	16 f4       	brtc	.+4      	; 0x32c8 <__divmodhi4+0xa>
    32c4:	00 94       	com	r0
    32c6:	07 d0       	rcall	.+14     	; 0x32d6 <__divmodhi4_neg1>
    32c8:	77 fd       	sbrc	r23, 7
    32ca:	09 d0       	rcall	.+18     	; 0x32de <__divmodhi4_neg2>
    32cc:	0e 94 79 19 	call	0x32f2	; 0x32f2 <__udivmodhi4>
    32d0:	07 fc       	sbrc	r0, 7
    32d2:	05 d0       	rcall	.+10     	; 0x32de <__divmodhi4_neg2>
    32d4:	3e f4       	brtc	.+14     	; 0x32e4 <__divmodhi4_exit>

000032d6 <__divmodhi4_neg1>:
    32d6:	90 95       	com	r25
    32d8:	81 95       	neg	r24
    32da:	9f 4f       	sbci	r25, 0xFF	; 255
    32dc:	08 95       	ret

000032de <__divmodhi4_neg2>:
    32de:	70 95       	com	r23
    32e0:	61 95       	neg	r22
    32e2:	7f 4f       	sbci	r23, 0xFF	; 255

000032e4 <__divmodhi4_exit>:
    32e4:	08 95       	ret

000032e6 <__tablejump2__>:
    32e6:	ee 0f       	add	r30, r30
    32e8:	ff 1f       	adc	r31, r31

000032ea <__tablejump__>:
    32ea:	05 90       	lpm	r0, Z+
    32ec:	f4 91       	lpm	r31, Z
    32ee:	e0 2d       	mov	r30, r0
    32f0:	09 94       	ijmp

000032f2 <__udivmodhi4>:
    32f2:	aa 1b       	sub	r26, r26
    32f4:	bb 1b       	sub	r27, r27
    32f6:	51 e1       	ldi	r21, 0x11	; 17
    32f8:	07 c0       	rjmp	.+14     	; 0x3308 <__udivmodhi4_ep>

000032fa <__udivmodhi4_loop>:
    32fa:	aa 1f       	adc	r26, r26
    32fc:	bb 1f       	adc	r27, r27
    32fe:	a6 17       	cp	r26, r22
    3300:	b7 07       	cpc	r27, r23
    3302:	10 f0       	brcs	.+4      	; 0x3308 <__udivmodhi4_ep>
    3304:	a6 1b       	sub	r26, r22
    3306:	b7 0b       	sbc	r27, r23

00003308 <__udivmodhi4_ep>:
    3308:	88 1f       	adc	r24, r24
    330a:	99 1f       	adc	r25, r25
    330c:	5a 95       	dec	r21
    330e:	a9 f7       	brne	.-22     	; 0x32fa <__udivmodhi4_loop>
    3310:	80 95       	com	r24
    3312:	90 95       	com	r25
    3314:	bc 01       	movw	r22, r24
    3316:	cd 01       	movw	r24, r26
    3318:	08 95       	ret

0000331a <itoa>:
    331a:	fb 01       	movw	r30, r22
    331c:	9f 01       	movw	r18, r30
    331e:	e8 94       	clt
    3320:	42 30       	cpi	r20, 0x02	; 2
    3322:	c4 f0       	brlt	.+48     	; 0x3354 <itoa+0x3a>
    3324:	45 32       	cpi	r20, 0x25	; 37
    3326:	b4 f4       	brge	.+44     	; 0x3354 <itoa+0x3a>
    3328:	4a 30       	cpi	r20, 0x0A	; 10
    332a:	29 f4       	brne	.+10     	; 0x3336 <itoa+0x1c>
    332c:	97 fb       	bst	r25, 7
    332e:	1e f4       	brtc	.+6      	; 0x3336 <itoa+0x1c>
    3330:	90 95       	com	r25
    3332:	81 95       	neg	r24
    3334:	9f 4f       	sbci	r25, 0xFF	; 255
    3336:	64 2f       	mov	r22, r20
    3338:	77 27       	eor	r23, r23
    333a:	0e 94 79 19 	call	0x32f2	; 0x32f2 <__udivmodhi4>
    333e:	80 5d       	subi	r24, 0xD0	; 208
    3340:	8a 33       	cpi	r24, 0x3A	; 58
    3342:	0c f0       	brlt	.+2      	; 0x3346 <itoa+0x2c>
    3344:	89 5d       	subi	r24, 0xD9	; 217
    3346:	81 93       	st	Z+, r24
    3348:	cb 01       	movw	r24, r22
    334a:	00 97       	sbiw	r24, 0x00	; 0
    334c:	a1 f7       	brne	.-24     	; 0x3336 <itoa+0x1c>
    334e:	16 f4       	brtc	.+4      	; 0x3354 <itoa+0x3a>
    3350:	5d e2       	ldi	r21, 0x2D	; 45
    3352:	51 93       	st	Z+, r21
    3354:	10 82       	st	Z, r1
    3356:	c9 01       	movw	r24, r18
    3358:	0c 94 ae 19 	jmp	0x335c	; 0x335c <strrev>

0000335c <strrev>:
    335c:	dc 01       	movw	r26, r24
    335e:	fc 01       	movw	r30, r24
    3360:	67 2f       	mov	r22, r23
    3362:	71 91       	ld	r23, Z+
    3364:	77 23       	and	r23, r23
    3366:	e1 f7       	brne	.-8      	; 0x3360 <strrev+0x4>
    3368:	32 97       	sbiw	r30, 0x02	; 2
    336a:	04 c0       	rjmp	.+8      	; 0x3374 <strrev+0x18>
    336c:	7c 91       	ld	r23, X
    336e:	6d 93       	st	X+, r22
    3370:	70 83       	st	Z, r23
    3372:	62 91       	ld	r22, -Z
    3374:	ae 17       	cp	r26, r30
    3376:	bf 07       	cpc	r27, r31
    3378:	c8 f3       	brcs	.-14     	; 0x336c <strrev+0x10>
    337a:	08 95       	ret

0000337c <_exit>:
    337c:	f8 94       	cli

0000337e <__stop_program>:
    337e:	ff cf       	rjmp	.-2      	; 0x337e <__stop_program>
